(set-info :smt-lib-version 2.0)
(set-info :category "industrial")
(set-info :boogie-vc-id bad)
(set-option :smt.auto-config false)
(set-option :smt.mbqi false)
(set-option :sat.random_seed 488)
(set-option :smt.random_seed 599)
(set-option :nlsat.seed 611)
(set-option :memory_max_size 6000)
(declare-sort |T@U| 0)
(declare-sort RegExStr 0)
(declare-sort RMode 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(declare-fun Ctor (T@T) Int)
(declare-fun intType () T@T)
(declare-fun realType () T@T)
(declare-fun boolType () T@T)
(declare-fun rmodeType () T@T)
(declare-fun int_2_U (Int) T@U)
(declare-fun U_2_int (T@U) Int)
(declare-fun real_2_U (Real) T@U)
(declare-fun U_2_real (T@U) Real)
(declare-fun bool_2_U (Bool) T@U)
(declare-fun U_2_bool (T@U) Bool)
(declare-fun rmode_2_U (RMode) T@U)
(declare-fun U_2_rmode (T@U) RMode)
(declare-fun MapType0Select (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun MapType0Store (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun NormalFieldType () T@T)
(declare-fun RefType () T@T)
(declare-fun $allocated () T@U)
(declare-fun IdenticalOnKnownLocations (T@U T@U T@U) Bool)
(declare-fun HasDirectPerm (T@T T@T T@U T@U T@U) Bool)
(declare-fun FrameTypeType () T@T)
(declare-fun MapType1Select (T@T T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun MapType1Store (T@T T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun MapType1Type (T@T T@T) T@T)
(declare-fun MapType1TypeInv0 (T@T) T@T)
(declare-fun MapType1TypeInv1 (T@T) T@T)
(declare-fun IsPredicateField (T@T T@T T@U) Bool)
(declare-fun null () T@U)
(declare-fun PredicateMaskField (T@T T@U) T@U)
(declare-fun IsWandField (T@T T@T T@U) Bool)
(declare-fun WandMaskField (T@T T@U) T@U)
(declare-fun succHeap (T@U T@U) Bool)
(declare-fun succHeapTrans (T@U T@U) Bool)
(declare-fun ZeroMask () T@U)
(declare-fun NoPerm () Real)
(declare-fun ZeroPMask () T@U)
(declare-fun FullPerm () Real)
(declare-fun state (T@U T@U) Bool)
(declare-fun GoodMask (T@U) Bool)
(declare-fun sumMask (T@U T@U T@U) Bool)
(declare-fun ConditionalFrame (Real T@U) T@U)
(declare-fun EmptyFrame () T@U)
(declare-fun InsidePredicate (T@T T@T T@U T@U T@U T@U) Bool)
(declare-fun optsome (T@T T@U) T@U)
(declare-fun optnone (T@T) T@U)
(declare-fun optget (T@T T@U) T@U)
(declare-fun %lbl%+0 () Bool)
(declare-fun Heap@@9 () T@U)
(declare-fun Mask@@9 () T@U)
(declare-fun %lbl%@1 () Bool)
(declare-fun %lbl%+2 () Bool)
(declare-fun z3name!0 (T@U Real) T@U)
(assert (! (forall ((e_1py0 T@U)(Tpy0 T@T)) (! (not (= (optsome Tpy0 e_1py0) (optnone Tpy0))) :pattern ((optsome Tpy0 e_1py0)) )) :named A29))
(assert (! (forall ((o_3py0 T@U)(e_1@@0py0 T@U)(T@@0py0 T@T)) (! (and (or (not (= (optget T@@0py0 o_3py0) e_1@@0py0)) (= o_3py0 (optsome T@@0py0 e_1@@0py0))) (or (not (= o_3py0 (optsome T@@0py0 e_1@@0py0))) (= (optget T@@0py0 o_3py0) e_1@@0py0))) :pattern ((optget T@@0py0 o_3py0) (optsome T@@0py0 e_1@@0py0)) )) :named A30))

;(declare-fun __dummy__ (T@U) Bool)
;(assert (__dummy__ (optsome intType (optget intType (optnone intType)))))

(check-sat)
(get-info :reason-unknown)
;z3 smt-inputs/gobra/pattern_augmenter/ematching/tmp/option-wrong_std_unique_aug-gt_unsat-full.smt2 -T:600
;unknown
;((:reason-unknown "smt tactic failed to show goal to be sat/unsat (incomplete quantifiers)"))
