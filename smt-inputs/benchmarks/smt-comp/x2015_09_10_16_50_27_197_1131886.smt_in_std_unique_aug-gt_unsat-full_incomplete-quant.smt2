(set-info :smt-lib-version 2.6)
(set-info :source | Generated by: Andrew Reynolds Generated on: 2017-04-28 Generator: Sledgehammer, converted to v2.6 by CVC4 Application: Verfication goals in Isabelle Target solver: CVC4, Z3 Publications: "A Decision Procedure for (Co)Datatypes" by Andrew Reynolds and Jasmin Blanchette, CADE 2015. |)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unsat)
(set-logic UFDT)
(set-option :smt.auto-config false)
(set-option :smt.mbqi false)
(set-option :sat.random_seed 488)
(set-option :smt.random_seed 599)
(set-option :nlsat.seed 611)
(set-option :memory_max_size 6000)
(declare-sort A$ 0)
(declare-sort RegExStr 0)
(declare-sort RMode 0)
(declare-sort A_set$ 0)
(declare-sort A_bool_fun$ 0)
(declare-sort A_set_bool_fun$ 0)
(declare-sort A_set_a_set_fun$ 0)
(declare-sort A_llist_bool_fun$ 0)
(declare-sort A_llist_a_set_fun$ 0)
(declare-sort A_llist_a_llist_fun$ 0)
(declare-sort A_a_set_a_set_fun_fun$ 0)
(declare-sort A_a_llist_bool_fun_fun$ 0)
(declare-sort A_bool_fun_a_bool_fun_fun$ 0)
(declare-sort A_set_a_set_a_set_fun_fun$ 0)
(declare-sort A_llist$ 0)
(declare-fun lNil$ () A_llist$)
(declare-fun lhd$ (A_llist$) A$)
(declare-fun ltl$ (A_llist$) A_llist$)
(declare-fun lCons$ (A$ A_llist$) A_llist$)
(declare-fun x$ () A$)
(declare-fun uu$ (A_set$) A_bool_fun$)
(declare-fun xs$ () A_llist$)
(declare-fun bot$ () A_set$)
(declare-fun sup$ (A_set$) A_set_a_set_fun$)
(declare-fun bot$a () A_bool_fun$)
(declare-fun bot$b () Bool)
(declare-fun fold$ (A_a_set_a_set_fun_fun$) A_set_a_set_a_set_fun_fun$)
(declare-fun lset$ () A_llist_a_set_fun$)
(declare-fun sup$a (A_bool_fun$) A_bool_fun_a_bool_fun_fun$)
(declare-fun finite$ (A_set$) Bool)
(declare-fun insert$ () A_a_set_a_set_fun_fun$)
(declare-fun member$ (A$) A_set_bool_fun$)
(declare-fun collect$ (A_bool_fun$) A_set$)
(declare-fun fun_app$ (A_bool_fun$ A$) Bool)
(declare-fun lappend$ (A_llist$) A_llist_a_llist_fun$)
(declare-fun less_eq$ (A_set$) A_set_bool_fun$)
(declare-fun lfinite$ (A_llist$) Bool)
(declare-fun lmember$ (A$) A_llist_bool_fun$)
(declare-fun fun_app$a (A_set_bool_fun$ A_set$) Bool)
(declare-fun fun_app$b (A_llist_a_llist_fun$ A_llist$) A_llist$)
(declare-fun fun_app$c (A_llist_a_set_fun$ A_llist$) A_set$)
(declare-fun fun_app$d (A_llist_bool_fun$ A_llist$) Bool)
(declare-fun fun_app$e (A_a_llist_bool_fun_fun$ A$) A_llist_bool_fun$)
(declare-fun fun_app$f (A_set_a_set_fun$ A_set$) A_set$)
(declare-fun fun_app$g (A_a_set_a_set_fun_fun$ A$) A_set_a_set_fun$)
(declare-fun fun_app$h (A_set_a_set_a_set_fun_fun$ A_set$) A_set_a_set_fun$)
(declare-fun fun_app$i (A_bool_fun_a_bool_fun_fun$ A_bool_fun$) A_bool_fun$)
(declare-fun gen_lset$ (A_set$) A_llist_a_set_fun$)
(declare-fun less_eq$a (A_bool_fun$ A_bool_fun$) Bool)
(declare-fun the_elem$ (A_set$) A$)
(declare-fun atmost_one$ (A_set$) Bool)
(declare-fun pred_llist$ (A_bool_fun$) A_llist_bool_fun$)
(declare-fun comp_fun_idem$ (A_a_set_a_set_fun_fun$) Bool)
(declare-fun ?v4!0 (A_a_llist_bool_fun_fun$) A_llist$)
(declare-fun ?v5!2 (A_a_llist_bool_fun_fun$) A$)
(declare-fun ?v4!3 (A_a_llist_bool_fun_fun$) A_llist$)
(declare-fun ?v3!1 (A_a_llist_bool_fun_fun$) A$)
(declare-fun ?v3!4 (A_a_llist_bool_fun_fun$) A$)
(declare-fun ?v2!7 (A_llist$ A$) A$)
(declare-fun ?v3!6 (A_llist$ A$) A_llist$)
(declare-fun ?v2!5 (A_llist$ A$) A_llist$)
(declare-fun ?v3!10 (A_llist_bool_fun$ A$) A$)
(declare-fun ?v3!8 (A_llist_bool_fun$ A$) A_llist$)
(declare-fun ?v4!9 (A_llist_bool_fun$ A$) A_llist$)
(declare-fun ?v3!11 (A_llist_bool_fun$ A$) A_llist$)
(declare-fun ?v4!12 (A_llist_bool_fun$ A$) A_llist$)
(declare-fun ?v3!13 (A_llist_bool_fun$ A$) A$)
(declare-fun ?v2!15 (A_llist$ A$) A_llist$)
(declare-fun ?v3!14 (A_llist$ A$) A_llist$)
(declare-fun z3name!16 (A_llist$ A_llist$) A_set$)
(declare-fun ?v2!17 (A_llist$) A$)
(declare-fun ?v1!18 (A_llist$) A_llist$)
(declare-fun ?v1!20 (A_llist$) A_llist$)
(declare-fun ?v2!19 (A_llist$) A$)
(declare-fun ?v2!21 (A_llist$) A_llist$)
(declare-fun ?v1!22 (A_llist$) A$)
(declare-fun ?v2!23 (A_llist$) A_llist$)
(declare-fun ?v1!24 (A_llist$) A$)
(declare-fun ?v2!25 (A_bool_fun$ A_bool_fun$) A$)
(declare-fun ?v2!26 (A_set$ A_set$) A$)
(declare-fun ?v2!27 (A_bool_fun$ A_bool_fun$) A$)
(declare-fun ?v2!28 (A_set$ A_set$) A$)
(declare-fun ?v2!29 (A_bool_fun$ A_bool_fun$) A$)
(declare-fun ?v4!30 (A_set$ A$ A_set$ A$) A_set$)
(declare-fun ?v2!31 (A_set$ A$) A_set$)
(declare-fun ?v2!32 (A_set$ A$) A_set$)
(declare-fun ?v3!33 (A_bool_fun$ A_set$ A_set$) A$)
(declare-fun ?v3!35 (A_bool_fun$ A_set$) A$)
(declare-fun ?v3!34 (A_bool_fun$ A_set$) A$)
(declare-fun ?v3!38 (A_bool_fun$ A_set$) A$)
(declare-fun ?v3!37 (A_bool_fun$ A_set$) A$)
(declare-fun ?v3!36 (A_bool_fun$ A_set$ A_set$) A$)
(declare-fun ?v4!41 (A_set_a_set_a_set_fun_fun$) A_set$)
(declare-fun ?v3!42 (A_set_a_set_a_set_fun_fun$) A_set$)
(declare-fun ?v3!40 (A_set_a_set_a_set_fun_fun$) A_set$)
(declare-fun ?v4!39 (A_set_a_set_a_set_fun_fun$) A_set$)
(declare-fun ?v3!45 (A_set_a_set_a_set_fun_fun$) A_set$)
(declare-fun ?v5!43 (A_set_a_set_a_set_fun_fun$) A_set$)
(declare-fun ?v4!44 (A_set_a_set_a_set_fun_fun$) A_set$)
(declare-fun ?v4!47 (A_set_a_set_fun$) A_set$)
(declare-fun ?v5!46 (A_set_a_set_fun$) A_set$)
(declare-fun ?v4!49 (A_set_a_set_fun$) A_set$)
(declare-fun ?v5!48 (A_set_a_set_fun$) A_set$)
(declare-fun ?v4!51 (A_set_a_set_fun$) A_set$)
(declare-fun ?v5!50 (A_set_a_set_fun$) A_set$)
(declare-fun ?v5!52 (A_set_a_set_fun$) A_set$)
(declare-fun ?v4!53 (A_set_a_set_fun$) A_set$)
(declare-fun ?v3!55 (A_set_bool_fun$ A_set$) A$)
(declare-fun ?v4!54 (A_set_bool_fun$ A_set$) A_set$)
(declare-fun ?v1!56 (A_bool_fun$) A$)
(declare-fun ?v1!57 (A_set$) A$)
(declare-fun ?v1!58 (A_bool_fun$) A$)
(declare-fun ?v1!59 (A_set$) A$)
(declare-fun ?v1!60 (A_set$) A$)
(declare-fun ?v1!61 (A_set$) A$)
(declare-fun ?v3!62 (A_set_bool_fun$) A_set$)
(declare-fun ?v2!63 (A_set_bool_fun$) A$)
(declare-fun ?v3!65 (A_set_bool_fun$) A_set$)
(declare-fun ?v2!64 (A_set_bool_fun$) A$)
(declare-fun ?v2!66 (A_set_bool_fun$) A$)
(declare-fun ?v2!67 (A_set$) A$)
(declare-fun ?v1!68 (A_set$) A_set$)
(declare-fun ?v2!71 (A_set_bool_fun$) A$)
(declare-fun ?v2!69 (A_set_bool_fun$) A_set$)
(declare-fun ?v3!70 (A_set_bool_fun$) A_set$)
(declare-fun ?v2!72 (A_set$) A$)
(declare-fun ?v1!73 (A_set$) A_set$)
(declare-fun ?v1!75 (A_set$) A$)
(declare-fun ?v2!74 (A_set$) A$)
(assert (! (forall ((?v0py0 A_set$)(?v1py0 A$)) (! (and (or (not (fun_app$ (uu$ ?v0py0) ?v1py0)) (fun_app$a (member$ ?v1py0) ?v0py0)) (or (fun_app$ (uu$ ?v0py0) ?v1py0) (not (fun_app$a (member$ ?v1py0) ?v0py0)))) :pattern ((fun_app$ (uu$ ?v0py0) ?v1py0)) )) :named A0))
(assert (! (forall ((?v0py1 A_llist$)(?v1py1 A_llist$)) (! (or (not (= xs$ (fun_app$b (lappend$ ?v0py1) (lCons$ x$ ?v1py1)))) (not (lfinite$ ?v0py1))) :pattern ((fun_app$b (lappend$ ?v0py1) (lCons$ x$ ?v1py1))) )) :named A1))
(assert (! (fun_app$a (member$ x$) (fun_app$c lset$ xs$)) :named A2))
(assert (! (forall ((?v0py2 A$)(?v1py2 A_llist$)(?v2py0 A$)(?v3py0 A_llist$)) (! (and (or (not (= (lCons$ ?v0py2 ?v1py2) (lCons$ ?v2py0 ?v3py0))) (and (= ?v0py2 ?v2py0) (= ?v1py2 ?v3py0))) (or (= (lCons$ ?v0py2 ?v1py2) (lCons$ ?v2py0 ?v3py0)) (not (= ?v0py2 ?v2py0)) (not (= ?v1py2 ?v3py0)))) :pattern ((lCons$ ?v0py2 ?v1py2) (lCons$ ?v2py0 ?v3py0)) )) :named A3))
(assert (! (forall ((?v0py3 A$)(?v1py3 A_llist$)(?v2py1 A_llist$)) (! (= (fun_app$b (lappend$ (lCons$ ?v0py3 ?v1py3)) ?v2py1) (lCons$ ?v0py3 (fun_app$b (lappend$ ?v1py3) ?v2py1))) :pattern ((fun_app$b (lappend$ (lCons$ ?v0py3 ?v1py3)) ?v2py1)) )) :named A4))
(assert (! (forall ((?v0py4 A$)(?v1py4 A_llist$)) (! (and (or (lfinite$ ?v1py4) (not (lfinite$ (lCons$ ?v0py4 ?v1py4)))) (or (lfinite$ (lCons$ ?v0py4 ?v1py4)) (not (lfinite$ ?v1py4)))) :pattern ((lCons$ ?v0py4 ?v1py4)) )) :named A5))
(assert (! (forall ((?v0py5 A_llist$)(?v1py5 A_llist$)) (! (and (or (not (lfinite$ (fun_app$b (lappend$ ?v0py5) ?v1py5))) (and (lfinite$ ?v0py5) (lfinite$ ?v1py5))) (or (lfinite$ (fun_app$b (lappend$ ?v0py5) ?v1py5)) (not (lfinite$ ?v1py5)) (not (lfinite$ ?v0py5)))) :pattern ((fun_app$b (lappend$ ?v0py5) ?v1py5)) )) :named A6))
(assert (! (forall ((?v0py6 A$)(?v1py6 A_llist$)(?v2py2 A_llist$)) (! (and (or (and (lfinite$ ?v1py6) (fun_app$a (member$ ?v0py6) (fun_app$c lset$ ?v2py2))) (fun_app$a (member$ ?v0py6) (fun_app$c lset$ ?v1py6)) (not (fun_app$a (member$ ?v0py6) (fun_app$c lset$ (fun_app$b (lappend$ ?v1py6) ?v2py2))))) (or (fun_app$a (member$ ?v0py6) (fun_app$c lset$ (fun_app$b (lappend$ ?v1py6) ?v2py2))) (and (not (fun_app$a (member$ ?v0py6) (fun_app$c lset$ ?v1py6))) (or (not (lfinite$ ?v1py6)) (not (fun_app$a (member$ ?v0py6) (fun_app$c lset$ ?v2py2))))))) :pattern ((fun_app$a (member$ ?v0py6) (fun_app$c lset$ (fun_app$b (lappend$ ?v1py6) ?v2py2)))) )) :named A7))
(assert (! (forall ((?v0py7 A_llist$)(?v1py7 A_llist$)(?v2py3 A_llist$)) (! (= (fun_app$b (lappend$ (fun_app$b (lappend$ ?v0py7) ?v1py7)) ?v2py3) (fun_app$b (lappend$ ?v0py7) (fun_app$b (lappend$ ?v1py7) ?v2py3))) :pattern ((fun_app$b (lappend$ (fun_app$b (lappend$ ?v0py7) ?v1py7)) ?v2py3)) :pattern ((fun_app$b (lappend$ ?v0py7) (fun_app$b (lappend$ ?v1py7) ?v2py3))) )) :named A8))
(assert (! (forall ((?v0py8 A$)(?v1py8 A_llist$)(?v2py4 A_a_llist_bool_fun_fun$)) (! (or (fun_app$d (fun_app$e ?v2py4 ?v0py8) ?v1py8) (not (fun_app$a (member$ ?v0py8) (fun_app$c lset$ ?v1py8))) (not (fun_app$d (fun_app$e ?v2py4 (?v3!1 ?v2py4)) (lCons$ (?v3!1 ?v2py4) (?v4!0 ?v2py4)))) (and (fun_app$a (member$ (?v5!2 ?v2py4)) (fun_app$c lset$ (?v4!3 ?v2py4))) (fun_app$d (fun_app$e ?v2py4 (?v5!2 ?v2py4)) (?v4!3 ?v2py4)) (not (fun_app$d (fun_app$e ?v2py4 (?v5!2 ?v2py4)) (lCons$ (?v3!4 ?v2py4) (?v4!3 ?v2py4)))))) :pattern ((fun_app$d (fun_app$e ?v2py4 ?v0py8) ?v1py8)) )) :named A9))
(assert (! (forall ((?v0py9 A$)(?v1py9 A_llist$)) (! (or (not (fun_app$a (member$ ?v0py9) (fun_app$c lset$ ?v1py9))) (= ?v1py9 (lCons$ ?v0py9 (?v2!5 ?v1py9 ?v0py9))) (and (= ?v1py9 (lCons$ (?v2!7 ?v1py9 ?v0py9) (?v3!6 ?v1py9 ?v0py9))) (fun_app$a (member$ ?v0py9) (fun_app$c lset$ (?v3!6 ?v1py9 ?v0py9))))) :pattern ((?v2!5 ?v1py9 ?v0py9)) :pattern ((?v2!7 ?v1py9 ?v0py9)) :pattern ((?v3!6 ?v1py9 ?v0py9)) )) :named A10))
(assert (! (forall ((?v0py10 A$)(?v1py10 A_llist$)(?v2py5 A_llist_bool_fun$)) (! (or (fun_app$d ?v2py5 ?v1py10) (not (fun_app$a (member$ ?v0py10) (fun_app$c lset$ ?v1py10))) (not (fun_app$d ?v2py5 (lCons$ ?v0py10 (?v3!8 ?v2py5 ?v0py10)))) (and (fun_app$a (member$ ?v0py10) (fun_app$c lset$ (?v4!9 ?v2py5 ?v0py10))) (fun_app$d ?v2py5 (?v4!9 ?v2py5 ?v0py10)) (not (fun_app$d ?v2py5 (lCons$ (?v3!10 ?v2py5 ?v0py10) (?v4!9 ?v2py5 ?v0py10)))))) :pattern ((fun_app$d ?v2py5 ?v1py10) (?v3!8 ?v2py5 ?v0py10)) )) :named A11))
(assert (! (forall ((?v0py11 A$)(?v1py11 A_llist$)(?v2py6 A_llist_bool_fun$)) (! (or (fun_app$d ?v2py6 ?v1py11) (not (fun_app$a (member$ ?v0py11) (fun_app$c lset$ ?v1py11))) (not (fun_app$d ?v2py6 (lCons$ ?v0py11 (?v3!11 ?v2py6 ?v0py11)))) (and (fun_app$a (member$ ?v0py11) (fun_app$c lset$ (?v4!12 ?v2py6 ?v0py11))) (not (= ?v0py11 (?v3!13 ?v2py6 ?v0py11))) (fun_app$d ?v2py6 (?v4!12 ?v2py6 ?v0py11)) (not (fun_app$d ?v2py6 (lCons$ (?v3!13 ?v2py6 ?v0py11) (?v4!12 ?v2py6 ?v0py11)))))) :pattern ((fun_app$d ?v2py6 ?v1py11) (?v3!11 ?v2py6 ?v0py11)) )) :named A12))
(assert (! (forall ((?v0py12 A$)(?v1py12 A_llist$)(?v2py7 A$)) (! (or (not (fun_app$a (member$ ?v0py12) (fun_app$c lset$ ?v1py12))) (fun_app$a (member$ ?v0py12) (fun_app$c lset$ (lCons$ ?v2py7 ?v1py12)))) :pattern ((fun_app$a (member$ ?v0py12) (fun_app$c lset$ (lCons$ ?v2py7 ?v1py12)))) )) :named A13))
(assert (! (forall ((?v0py13 A$)(?v1py13 A_llist$)) (! (or (not (fun_app$a (member$ ?v0py13) (fun_app$c lset$ ?v1py13))) (and (= ?v1py13 (fun_app$b (lappend$ (?v2!15 ?v1py13 ?v0py13)) (lCons$ ?v0py13 (?v3!14 ?v1py13 ?v0py13)))) (lfinite$ (?v2!15 ?v1py13 ?v0py13)) (not (fun_app$a (member$ ?v0py13) (fun_app$c lset$ (?v2!15 ?v1py13 ?v0py13)))))) :pattern ((?v2!15 ?v1py13 ?v0py13)) :pattern ((?v3!14 ?v1py13 ?v0py13)) )) :named A14))
(assert (! (forall ((?v0py14 A_llist$)(?v1py14 A_llist$)) (! (or (lfinite$ ?v0py14) (= (fun_app$b (lappend$ ?v0py14) ?v1py14) ?v0py14)) :pattern ((fun_app$b (lappend$ ?v0py14) ?v1py14)) )) :named A15))
(assert (! (forall ((?v0py15 A_llist$)(?v1py15 A$)) (! (or (not (lfinite$ ?v0py15)) (lfinite$ (lCons$ ?v1py15 ?v0py15))) :pattern ((lCons$ ?v1py15 ?v0py15)) )) :named A16))
(assert (! (forall ((?v0py16 A$)(?v1py16 A_llist$)) (! (fun_app$a (member$ ?v0py16) (fun_app$c lset$ (lCons$ ?v0py16 ?v1py16))) :pattern ((lCons$ ?v0py16 ?v1py16)) )) :named A17))
(assert (! (forall ((?v0py17 A_bool_fun$)(?v1py17 A$)(?v2py8 A_llist$)) (! (and (or (not (fun_app$d (pred_llist$ ?v0py17) (lCons$ ?v1py17 ?v2py8))) (and (fun_app$ ?v0py17 ?v1py17) (fun_app$d (pred_llist$ ?v0py17) ?v2py8))) (or (fun_app$d (pred_llist$ ?v0py17) (lCons$ ?v1py17 ?v2py8)) (not (fun_app$ ?v0py17 ?v1py17)) (not (fun_app$d (pred_llist$ ?v0py17) ?v2py8)))) :pattern ((fun_app$d (pred_llist$ ?v0py17) (lCons$ ?v1py17 ?v2py8))) )) :named A18))
(assert (! (forall ((?v0py18 A_llist$)(?v1py18 A_llist$)) (! (or (not (lfinite$ ?v0py18)) (= (fun_app$c lset$ (fun_app$b (lappend$ ?v0py18) ?v1py18)) (fun_app$f (sup$ (fun_app$c lset$ ?v0py18)) (fun_app$c lset$ ?v1py18)))) :pattern ((fun_app$b (lappend$ ?v0py18) ?v1py18)) :pattern ((fun_app$f (sup$ (fun_app$c lset$ ?v0py18)) (fun_app$c lset$ ?v1py18))) )) :named A19))
(assert (! (forall ((?v0py19 A$)(?v1py19 A_llist$)) (! (and (or (not (fun_app$a (member$ ?v0py19) (fun_app$c lset$ ?v1py19))) (fun_app$d (lmember$ ?v0py19) ?v1py19)) (or (fun_app$a (member$ ?v0py19) (fun_app$c lset$ ?v1py19)) (not (fun_app$d (lmember$ ?v0py19) ?v1py19)))) :pattern ((fun_app$a (member$ ?v0py19) (fun_app$c lset$ ?v1py19))) :pattern ((fun_app$d (lmember$ ?v0py19) ?v1py19)) )) :named A20))
(assert (! (forall ((?v0py20 A$)(?v1py20 A$)(?v2py9 A_llist$)) (! (and (or (= ?v0py20 ?v1py20) (fun_app$d (lmember$ ?v0py20) ?v2py9) (not (fun_app$d (lmember$ ?v0py20) (lCons$ ?v1py20 ?v2py9)))) (or (fun_app$d (lmember$ ?v0py20) (lCons$ ?v1py20 ?v2py9)) (and (not (= ?v0py20 ?v1py20)) (not (fun_app$d (lmember$ ?v0py20) ?v2py9))))) :pattern ((fun_app$d (lmember$ ?v0py20) (lCons$ ?v1py20 ?v2py9))) )) :named A21))
(assert (! (forall ((?v0py21 A_llist$)(?v1py21 A_llist$)) (! (= (fun_app$c lset$ (fun_app$b (lappend$ ?v0py21) ?v1py21)) (z3name!16 ?v1py21 ?v0py21)) :pattern ((fun_app$b (lappend$ ?v0py21) ?v1py21)) :pattern ((z3name!16 ?v1py21 ?v0py21)) )) :named A22_0))
(assert (! (forall ((x!1py0 A_llist$)(x!2py0 A_llist$)) (! (or (lfinite$ x!1py0) (= (z3name!16 x!2py0 x!1py0) (fun_app$c lset$ x!1py0))) :pattern ((z3name!16 x!2py0 x!1py0)) )) :named A22_1))
(assert (! (forall ((x!1py1 A_llist$)(x!2py1 A_llist$)) (! (or (not (lfinite$ x!1py1)) (= (z3name!16 x!2py1 x!1py1) (fun_app$f (sup$ (fun_app$c lset$ x!1py1)) (fun_app$c lset$ x!2py1)))) :pattern ((z3name!16 x!2py1 x!1py1)) )) :named A22_2))
(assert (! (forall ((?v0py22 A$)(?v1py22 A_llist$)) (! (= (fun_app$c lset$ (lCons$ ?v0py22 ?v1py22)) (fun_app$f (fun_app$g insert$ ?v0py22) (fun_app$c lset$ ?v1py22))) :pattern ((lCons$ ?v0py22 ?v1py22)) )) :named A23))
(assert (! (forall ((?v0py23 A_llist$)) (! (and (or (not (lfinite$ ?v0py23)) (= ?v0py23 lNil$) (and (= ?v0py23 (lCons$ (?v2!17 ?v0py23) (?v1!18 ?v0py23))) (lfinite$ (?v1!18 ?v0py23)))) (or (lfinite$ ?v0py23) (and (not (= ?v0py23 lNil$)) (forall ((?v1py23 A_llist$)(?v2py10 A$)) (! (or (not (lfinite$ ?v1py23)) (not (= ?v0py23 (lCons$ ?v2py10 ?v1py23)))) :pattern ((lCons$ ?v2py10 ?v1py23)) ))))) :pattern ((?v1!18 ?v0py23)) :pattern ((?v2!17 ?v0py23)) )) :named A24))
(assert (! (forall ((?v0py24 A_llist$)) (! (or (= ?v0py24 lNil$) (and (= ?v0py24 (lCons$ (?v2!19 ?v0py24) (?v1!20 ?v0py24))) (lfinite$ (?v1!20 ?v0py24))) (not (lfinite$ ?v0py24))) :pattern ((?v2!19 ?v0py24)) :pattern ((?v1!20 ?v0py24)) )) :named A25))
(assert (! (forall ((?v0py25 A_llist$)(?v1py24 A$)(?v2py11 A_llist$)) (! (= (fun_app$b (lappend$ (fun_app$b (lappend$ ?v0py25) (lCons$ ?v1py24 lNil$))) ?v2py11) (fun_app$b (lappend$ ?v0py25) (lCons$ ?v1py24 ?v2py11))) :pattern ((fun_app$b (lappend$ (fun_app$b (lappend$ ?v0py25) (lCons$ ?v1py24 lNil$))) ?v2py11)) :pattern ((fun_app$b (lappend$ ?v0py25) (lCons$ ?v1py24 ?v2py11))) )) :named A26))
(assert (! (forall ((?v0py26 A_llist$)(?v1py25 A_llist$)) (! (fun_app$a (less_eq$ (fun_app$c lset$ ?v0py26)) (fun_app$c lset$ (fun_app$b (lappend$ ?v0py26) ?v1py25))) :pattern ((fun_app$b (lappend$ ?v0py26) ?v1py25)) )) :named A27))
(assert (! (forall ((?v0py27 A_llist$)) (! (or (finite$ (fun_app$c lset$ ?v0py27)) (not (lfinite$ ?v0py27))) :pattern ((fun_app$c lset$ ?v0py27)) :pattern ((lfinite$ ?v0py27)) )) :named A28))
(assert (! (forall ((?v0py28 A_llist$)) (! (= (fun_app$b (lappend$ lNil$) ?v0py28) ?v0py28) :pattern ((fun_app$b (lappend$ lNil$) ?v0py28)) )) :named A29))
(assert (! (forall ((?v0py29 A_llist$)) (! (= (fun_app$b (lappend$ ?v0py29) lNil$) ?v0py29) :pattern ((lappend$ ?v0py29)) )) :named A30))
(assert (! (lfinite$ lNil$) :named A31))
(assert (! (forall ((?v0py30 A$)) (! (not (fun_app$d (lmember$ ?v0py30) lNil$)) :pattern ((lmember$ ?v0py30)) )) :named A32))
(assert (! (forall ((?v0py31 A_bool_fun$)) (! (fun_app$d (pred_llist$ ?v0py31) lNil$) :pattern ((pred_llist$ ?v0py31)) )) :named A33))
(assert (! (forall ((?v0py32 A_llist$)(?v1py26 A_llist$)) (! (fun_app$a (less_eq$ (fun_app$c lset$ (fun_app$b (lappend$ ?v0py32) ?v1py26))) (fun_app$f (sup$ (fun_app$c lset$ ?v0py32)) (fun_app$c lset$ ?v1py26))) :pattern ((fun_app$b (lappend$ ?v0py32) ?v1py26)) :pattern ((fun_app$f (sup$ (fun_app$c lset$ ?v0py32)) (fun_app$c lset$ ?v1py26))) )) :named A34))
(assert (! (forall ((?v0py33 A$)(?v1py27 A_llist$)) (! (not (= lNil$ (lCons$ ?v0py33 ?v1py27))) :pattern ((lCons$ ?v0py33 ?v1py27)) )) :named A35))
(assert (! (forall ((?v0py34 A_llist$)) (! (or (= ?v0py34 lNil$) (= ?v0py34 (lCons$ (?v1!22 ?v0py34) (?v2!21 ?v0py34)))) :pattern ((?v1!22 ?v0py34)) :pattern ((?v2!21 ?v0py34)) )) :named A36))
(assert (! (forall ((?v0py35 A_llist$)) (! (and (or (= ?v0py35 lNil$) (= ?v0py35 (lCons$ (?v1!24 ?v0py35) (?v2!23 ?v0py35)))) (or (not (= ?v0py35 lNil$)) (forall ((?v1py28 A$)(?v2py12 A_llist$)) (! (not (= ?v0py35 (lCons$ ?v1py28 ?v2py12))) :pattern ((lCons$ ?v1py28 ?v2py12)) )))) :pattern ((?v1!24 ?v0py35)) :pattern ((?v2!23 ?v0py35)) )) :named A37))
(assert (! (= (fun_app$b (lappend$ lNil$) lNil$) lNil$) :named A38))
(assert (! (forall ((?v0py36 A_llist$)(?v1py29 A_llist$)) (! (and (or (not (= (fun_app$b (lappend$ ?v0py36) ?v1py29) lNil$)) (and (= ?v0py36 lNil$) (= ?v1py29 lNil$))) (or (not (= ?v1py29 lNil$)) (not (= ?v0py36 lNil$)) (= (fun_app$b (lappend$ ?v0py36) ?v1py29) lNil$))) :pattern ((fun_app$b (lappend$ ?v0py36) ?v1py29)) )) :named A39))
(assert (! (forall ((?v0py37 A_llist$)(?v1py30 A_llist$)) (! (and (or (not (= lNil$ (fun_app$b (lappend$ ?v0py37) ?v1py30))) (and (= ?v0py37 lNil$) (= ?v1py30 lNil$))) (or (not (= ?v1py30 lNil$)) (= lNil$ (fun_app$b (lappend$ ?v0py37) ?v1py30)) (not (= ?v0py37 lNil$)))) :pattern ((fun_app$b (lappend$ ?v0py37) ?v1py30)) )) :named A40))
(assert (! (forall ((?v0py38 A_bool_fun$)(?v1py31 A_bool_fun$)) (! (or (= (collect$ ?v0py38) (collect$ ?v1py31)) (and (or (fun_app$ ?v0py38 (?v2!25 ?v1py31 ?v0py38)) (fun_app$ ?v1py31 (?v2!25 ?v1py31 ?v0py38))) (or (not (fun_app$ ?v0py38 (?v2!25 ?v1py31 ?v0py38))) (not (fun_app$ ?v1py31 (?v2!25 ?v1py31 ?v0py38)))))) :pattern ((?v2!25 ?v1py31 ?v0py38)) )) :named A42))
(assert (! (forall ((?v0py39 A_set$)) (! (= (collect$ (uu$ ?v0py39)) ?v0py39) :pattern ((uu$ ?v0py39)) )) :named A43))
(assert (! (forall ((?v0py40 A$)(?v1py32 A_bool_fun$)) (! (and (or (not (fun_app$a (member$ ?v0py40) (collect$ ?v1py32))) (fun_app$ ?v1py32 ?v0py40)) (or (fun_app$a (member$ ?v0py40) (collect$ ?v1py32)) (not (fun_app$ ?v1py32 ?v0py40)))) :pattern ((fun_app$a (member$ ?v0py40) (collect$ ?v1py32))) :pattern ((fun_app$ ?v1py32 ?v0py40)) )) :named A44))
(assert (! (forall ((?v0py41 A$)(?v1py33 A_set$)(?v2py13 A_set$)) (! (= (fun_app$f (sup$ (fun_app$f (fun_app$g insert$ ?v0py41) ?v1py33)) ?v2py13) (fun_app$f (fun_app$g insert$ ?v0py41) (fun_app$f (sup$ ?v1py33) ?v2py13))) :pattern ((fun_app$f (sup$ (fun_app$f (fun_app$g insert$ ?v0py41) ?v1py33)) ?v2py13)) :pattern ((fun_app$f (fun_app$g insert$ ?v0py41) (fun_app$f (sup$ ?v1py33) ?v2py13))) )) :named A45))
(assert (! (forall ((?v0py42 A_set$)(?v1py34 A$)(?v2py14 A_set$)) (! (= (fun_app$f (sup$ ?v0py42) (fun_app$f (fun_app$g insert$ ?v1py34) ?v2py14)) (fun_app$f (fun_app$g insert$ ?v1py34) (fun_app$f (sup$ ?v0py42) ?v2py14))) :pattern ((fun_app$f (sup$ ?v0py42) (fun_app$f (fun_app$g insert$ ?v1py34) ?v2py14))) :pattern ((fun_app$f (fun_app$g insert$ ?v1py34) (fun_app$f (sup$ ?v0py42) ?v2py14))) )) :named A46))
(assert (! (forall ((?v0py43 A_set$)(?v1py35 A_set$)(?v2py15 A_set$)) (! (and (or (not (fun_app$a (less_eq$ (fun_app$f (sup$ ?v0py43) ?v1py35)) ?v2py15)) (and (fun_app$a (less_eq$ ?v0py43) ?v2py15) (fun_app$a (less_eq$ ?v1py35) ?v2py15))) (or (fun_app$a (less_eq$ (fun_app$f (sup$ ?v0py43) ?v1py35)) ?v2py15) (not (fun_app$a (less_eq$ ?v0py43) ?v2py15)) (not (fun_app$a (less_eq$ ?v1py35) ?v2py15)))) :pattern ((fun_app$a (less_eq$ (fun_app$f (sup$ ?v0py43) ?v1py35)) ?v2py15)) )) :named A47))
(assert (! (forall ((?v0py44 A_set$)(?v1py36 A_set$)) (! (and (or (not (finite$ (fun_app$f (sup$ ?v0py44) ?v1py36))) (and (finite$ ?v0py44) (finite$ ?v1py36))) (or (finite$ (fun_app$f (sup$ ?v0py44) ?v1py36)) (not (finite$ ?v0py44)) (not (finite$ ?v1py36)))) :pattern ((fun_app$f (sup$ ?v0py44) ?v1py36)) )) :named A48))
(assert (! (forall ((?v0py45 A$)(?v1py37 A_set$)(?v2py16 A_set$)) (! (and (or (not (fun_app$a (less_eq$ (fun_app$f (fun_app$g insert$ ?v0py45) ?v1py37)) ?v2py16)) (and (fun_app$a (member$ ?v0py45) ?v2py16) (fun_app$a (less_eq$ ?v1py37) ?v2py16))) (or (not (fun_app$a (member$ ?v0py45) ?v2py16)) (not (fun_app$a (less_eq$ ?v1py37) ?v2py16)) (fun_app$a (less_eq$ (fun_app$f (fun_app$g insert$ ?v0py45) ?v1py37)) ?v2py16))) :pattern ((fun_app$a (less_eq$ (fun_app$f (fun_app$g insert$ ?v0py45) ?v1py37)) ?v2py16)) )) :named A49))
(assert (! (forall ((?v0py46 A$)(?v1py38 A_set$)) (! (and (or (finite$ ?v1py38) (not (finite$ (fun_app$f (fun_app$g insert$ ?v0py46) ?v1py38)))) (or (finite$ (fun_app$f (fun_app$g insert$ ?v0py46) ?v1py38)) (not (finite$ ?v1py38)))) :pattern ((fun_app$f (fun_app$g insert$ ?v0py46) ?v1py38)) )) :named A50))
(assert (! (forall ((?v0py47 A$)(?v1py39 A_set$)(?v2py17 A_set$)) (! (and (or (fun_app$a (member$ ?v0py47) ?v2py17) (not (fun_app$a (member$ ?v0py47) (fun_app$f (sup$ ?v1py39) ?v2py17))) (fun_app$a (member$ ?v0py47) ?v1py39)) (or (fun_app$a (member$ ?v0py47) (fun_app$f (sup$ ?v1py39) ?v2py17)) (and (not (fun_app$a (member$ ?v0py47) ?v1py39)) (not (fun_app$a (member$ ?v0py47) ?v2py17))))) :pattern ((fun_app$a (member$ ?v0py47) (fun_app$f (sup$ ?v1py39) ?v2py17))) )) :named A51))
(assert (! (forall ((?v0py48 A_set$)(?v1py40 A_set$)) (! (or (= ?v0py48 ?v1py40) (not (fun_app$a (less_eq$ ?v0py48) ?v1py40)) (not (fun_app$a (less_eq$ ?v1py40) ?v0py48))) :pattern ((fun_app$a (less_eq$ ?v0py48) ?v1py40)) :pattern ((fun_app$a (less_eq$ ?v1py40) ?v0py48)) )) :named A52))
(assert (! (forall ((?v0py49 A_set$)(?v1py41 A_set$)) (! (or (fun_app$a (less_eq$ ?v0py49) ?v1py41) (and (fun_app$a (member$ (?v2!26 ?v1py41 ?v0py49)) ?v0py49) (not (fun_app$a (member$ (?v2!26 ?v1py41 ?v0py49)) ?v1py41)))) :pattern ((fun_app$a (less_eq$ ?v0py49) ?v1py41)) :pattern ((?v2!26 ?v1py41 ?v0py49)) )) :named A53))
(assert (! (forall ((?v0py50 A$)(?v1py42 A_set$)(?v2py18 A$)) (! (or (fun_app$a (member$ ?v0py50) (fun_app$f (fun_app$g insert$ ?v2py18) ?v1py42)) (and (not (fun_app$a (member$ ?v0py50) ?v1py42)) (not (= ?v0py50 ?v2py18)))) :pattern ((fun_app$a (member$ ?v0py50) (fun_app$f (fun_app$g insert$ ?v2py18) ?v1py42))) )) :named A54))
(assert (! (forall ((?v0py51 A$)(?v1py43 A$)(?v2py19 A_set$)) (! (and (or (= ?v0py51 ?v1py43) (fun_app$a (member$ ?v0py51) ?v2py19) (not (fun_app$a (member$ ?v0py51) (fun_app$f (fun_app$g insert$ ?v1py43) ?v2py19)))) (or (fun_app$a (member$ ?v0py51) (fun_app$f (fun_app$g insert$ ?v1py43) ?v2py19)) (and (not (= ?v0py51 ?v1py43)) (not (fun_app$a (member$ ?v0py51) ?v2py19))))) :pattern ((fun_app$a (member$ ?v0py51) (fun_app$f (fun_app$g insert$ ?v1py43) ?v2py19))) )) :named A55))
(assert (! (forall ((?v0py52 A$)(?v1py44 A_set$)) (! (= (fun_app$f (fun_app$g insert$ ?v0py52) (fun_app$f (fun_app$g insert$ ?v0py52) ?v1py44)) (fun_app$f (fun_app$g insert$ ?v0py52) ?v1py44)) :pattern ((fun_app$f (fun_app$g insert$ ?v0py52) (fun_app$f (fun_app$g insert$ ?v0py52) ?v1py44))) )) :named A56))
(assert (! (forall ((?v0py53 A_set$)) (! (= (fun_app$f (sup$ ?v0py53) ?v0py53) ?v0py53) :pattern ((sup$ ?v0py53)) )) :named A57))
(assert (! (forall ((?v0py54 A_set$)(?v1py45 A_set$)) (! (= (fun_app$f (sup$ ?v0py54) (fun_app$f (sup$ ?v0py54) ?v1py45)) (fun_app$f (sup$ ?v0py54) ?v1py45)) :pattern ((fun_app$f (sup$ ?v0py54) (fun_app$f (sup$ ?v0py54) ?v1py45))) )) :named A58))
(assert (! (forall ((?v0py55 A_set$)(?v1py46 A_set$)) (! (= (fun_app$f (sup$ (fun_app$f (sup$ ?v0py55) ?v1py46)) ?v1py46) (fun_app$f (sup$ ?v0py55) ?v1py46)) :pattern ((sup$ (fun_app$f (sup$ ?v0py55) ?v1py46))) )) :named A59))
(assert (! (forall ((?v0py56 A$)(?v1py47 A_set$)(?v2py20 A_set$)) (! (or (fun_app$a (member$ ?v0py56) (fun_app$f (sup$ ?v2py20) ?v1py47)) (and (not (fun_app$a (member$ ?v0py56) ?v1py47)) (not (fun_app$a (member$ ?v0py56) ?v2py20)))) :pattern ((fun_app$a (member$ ?v0py56) (fun_app$f (sup$ ?v2py20) ?v1py47))) )) :named A60))
(assert (! (forall ((?v0py57 A_set$)) (! (fun_app$a (less_eq$ ?v0py57) ?v0py57) :pattern ((less_eq$ ?v0py57)) )) :named A61))
(assert (! (forall ((?v0py58 A_set$)(?v1py48 A_set$)(?v2py21 A$)) (! (or (not (fun_app$a (less_eq$ ?v0py58) ?v1py48)) (not (fun_app$a (member$ ?v2py21) ?v0py58)) (fun_app$a (member$ ?v2py21) ?v1py48)) :pattern ((fun_app$a (less_eq$ ?v0py58) ?v1py48) (fun_app$a (member$ ?v2py21) ?v0py58)) )) :named A62))
(assert (! (forall ((?v0py59 A_set$)(?v1py49 A_set$)(?v2py22 A$)) (! (or (fun_app$a (member$ ?v2py22) ?v1py49) (not (fun_app$a (member$ ?v2py22) ?v0py59)) (not (fun_app$a (less_eq$ ?v0py59) ?v1py49))) :pattern ((fun_app$a (member$ ?v2py22) ?v1py49) (fun_app$a (member$ ?v2py22) ?v0py59)) )) :named A63))
(assert (! (forall ((?v0py60 A_set$)(?v1py50 A_set$)(?v2py23 A_set$)) (! (or (fun_app$a (less_eq$ ?v0py60) ?v2py23) (not (fun_app$a (less_eq$ ?v0py60) ?v1py50)) (not (fun_app$a (less_eq$ ?v1py50) ?v2py23))) :pattern ((fun_app$a (less_eq$ ?v0py60) ?v2py23) (fun_app$a (less_eq$ ?v0py60) ?v1py50)) )) :named A64))
(assert (! (forall ((?v0py61 A_set$)(?v1py51 A_set$)(?v2py24 A$)) (! (or (fun_app$a (member$ ?v2py24) ?v1py51) (not (fun_app$a (member$ ?v2py24) ?v0py61)) (not (fun_app$a (less_eq$ ?v0py61) ?v1py51))) :pattern ((fun_app$a (member$ ?v2py24) ?v1py51) (fun_app$a (member$ ?v2py24) ?v0py61)) )) :named A65))
(assert (! (forall ((?v0py62 A$)(?v1py52 A_set$)(?v2py25 A_set$)) (! (or (fun_app$a (member$ ?v0py62) ?v2py25) (not (fun_app$a (member$ ?v0py62) ?v1py52)) (not (fun_app$a (less_eq$ ?v1py52) ?v2py25))) :pattern ((fun_app$a (member$ ?v0py62) ?v2py25) (fun_app$a (member$ ?v0py62) ?v1py52)) )) :named A66))
(assert (! (forall ((?v0py63 A_set$)(?v1py53 A_set$)) (! (or (not (= ?v0py63 ?v1py53)) (fun_app$a (less_eq$ ?v0py63) ?v1py53)) :pattern ((fun_app$a (less_eq$ ?v0py63) ?v1py53)) )) :named A67))
(assert (! (forall ((?v0py64 A_set$)(?v1py54 A_set$)) (! (or (not (= ?v0py64 ?v1py54)) (fun_app$a (less_eq$ ?v1py54) ?v0py64)) :pattern ((fun_app$a (less_eq$ ?v1py54) ?v0py64)) )) :named A68))
(assert (! (forall ((?v0py65 A_set$)(?v1py55 A_set$)) (! (or (and (fun_app$a (less_eq$ ?v0py65) ?v1py55) (fun_app$a (less_eq$ ?v1py55) ?v0py65)) (not (= ?v0py65 ?v1py55))) :pattern ((fun_app$a (less_eq$ ?v0py65) ?v1py55)) :pattern ((fun_app$a (less_eq$ ?v1py55) ?v0py65)) )) :named A69))
(assert (! (forall ((?v0py66 A_bool_fun$)(?v1py56 A_bool_fun$)) (! (or (fun_app$a (less_eq$ (collect$ ?v0py66)) (collect$ ?v1py56)) (and (fun_app$ ?v0py66 (?v2!27 ?v1py56 ?v0py66)) (not (fun_app$ ?v1py56 (?v2!27 ?v1py56 ?v0py66))))) :pattern ((fun_app$a (less_eq$ (collect$ ?v0py66)) (collect$ ?v1py56))) :pattern ((?v2!27 ?v1py56 ?v0py66)) )) :named A70))
(assert (! (forall ((?v0py67 A_set$)(?v1py57 A_set$)) (! (and (or (not (fun_app$a (less_eq$ ?v0py67) ?v1py57)) (forall ((?v2py26 A$)) (! (or (not (fun_app$a (member$ ?v2py26) ?v0py67)) (fun_app$a (member$ ?v2py26) ?v1py57)) :pattern ((member$ ?v2py26)) ))) (or (fun_app$a (less_eq$ ?v0py67) ?v1py57) (and (fun_app$a (member$ (?v2!28 ?v1py57 ?v0py67)) ?v0py67) (not (fun_app$a (member$ (?v2!28 ?v1py57 ?v0py67)) ?v1py57))))) :pattern ((fun_app$a (less_eq$ ?v0py67) ?v1py57)) :pattern ((?v2!28 ?v1py57 ?v0py67)) )) :named A71))
(assert (! (forall ((?v0py68 A_bool_fun$)(?v1py58 A_bool_fun$)) (! (and (or (not (fun_app$a (less_eq$ (collect$ ?v0py68)) (collect$ ?v1py58))) (forall ((?v2py27 A$)) (! (or (not (fun_app$ ?v0py68 ?v2py27)) (fun_app$ ?v1py58 ?v2py27)) :pattern ((fun_app$ ?v0py68 ?v2py27)) :pattern ((fun_app$ ?v1py58 ?v2py27)) ))) (or (fun_app$a (less_eq$ (collect$ ?v0py68)) (collect$ ?v1py58)) (and (fun_app$ ?v0py68 (?v2!29 ?v1py58 ?v0py68)) (not (fun_app$ ?v1py58 (?v2!29 ?v1py58 ?v0py68)))))) :pattern ((fun_app$a (less_eq$ (collect$ ?v0py68)) (collect$ ?v1py58))) :pattern ((?v2!29 ?v1py58 ?v0py68)) )) :named A72))
(assert (! (forall ((?v0py69 A_set$)(?v1py59 A_set$)) (! (and (or (not (= ?v0py69 ?v1py59)) (and (fun_app$a (less_eq$ ?v0py69) ?v1py59) (fun_app$a (less_eq$ ?v1py59) ?v0py69))) (or (= ?v0py69 ?v1py59) (not (fun_app$a (less_eq$ ?v1py59) ?v0py69)) (not (fun_app$a (less_eq$ ?v0py69) ?v1py59)))) :pattern ((fun_app$a (less_eq$ ?v1py59) ?v0py69)) :pattern ((fun_app$a (less_eq$ ?v0py69) ?v1py59)) )) :named A73))
(assert (! (forall ((?v0py70 A$)(?v1py60 A_set$)) (! (fun_app$a (member$ ?v0py70) (fun_app$f (fun_app$g insert$ ?v0py70) ?v1py60)) :pattern ((fun_app$f (fun_app$g insert$ ?v0py70) ?v1py60)) )) :named A74))
(assert (! (forall ((?v0py71 A$)(?v1py61 A_set$)(?v2py28 A_set$)) (! (or (fun_app$a (member$ ?v0py71) ?v2py28) (fun_app$a (member$ ?v0py71) ?v1py61) (and (or (not (= (fun_app$f (fun_app$g insert$ ?v0py71) ?v1py61) (fun_app$f (fun_app$g insert$ ?v0py71) ?v2py28))) (= ?v1py61 ?v2py28)) (or (not (= ?v1py61 ?v2py28)) (= (fun_app$f (fun_app$g insert$ ?v0py71) ?v1py61) (fun_app$f (fun_app$g insert$ ?v0py71) ?v2py28))))) :pattern ((fun_app$a (member$ ?v0py71) ?v1py61) (fun_app$a (member$ ?v0py71) ?v2py28)) )) :named A75))
(assert (! (forall ((?v0py72 A$)(?v1py62 A_set$)(?v2py29 A$)(?v3py1 A_set$)) (! (or (fun_app$a (member$ ?v0py72) ?v1py62) (fun_app$a (member$ ?v2py29) ?v3py1) (and (or (not (= (fun_app$f (fun_app$g insert$ ?v0py72) ?v1py62) (fun_app$f (fun_app$g insert$ ?v2py29) ?v3py1))) (and (or (not (= ?v0py72 ?v2py29)) (= ?v1py62 ?v3py1)) (or (= ?v0py72 ?v2py29) (and (= ?v1py62 (fun_app$f (fun_app$g insert$ ?v2py29) (?v4!30 ?v3py1 ?v2py29 ?v1py62 ?v0py72))) (not (fun_app$a (member$ ?v2py29) (?v4!30 ?v3py1 ?v2py29 ?v1py62 ?v0py72))) (= ?v3py1 (fun_app$f (fun_app$g insert$ ?v0py72) (?v4!30 ?v3py1 ?v2py29 ?v1py62 ?v0py72))) (not (fun_app$a (member$ ?v0py72) (?v4!30 ?v3py1 ?v2py29 ?v1py62 ?v0py72))))))) (or (= (fun_app$f (fun_app$g insert$ ?v0py72) ?v1py62) (fun_app$f (fun_app$g insert$ ?v2py29) ?v3py1)) (and (or (not (= ?v0py72 ?v2py29)) (not (= ?v1py62 ?v3py1))) (or (= ?v0py72 ?v2py29) (forall ((?v4py0 A_set$)) (! (or (fun_app$a (member$ ?v2py29) ?v4py0) (fun_app$a (member$ ?v0py72) ?v4py0) (not (= ?v1py62 (fun_app$f (fun_app$g insert$ ?v2py29) ?v4py0))) (not (= ?v3py1 (fun_app$f (fun_app$g insert$ ?v0py72) ?v4py0)))) :pattern ((fun_app$a (member$ ?v0py72) ?v4py0)) :pattern ((fun_app$a (member$ ?v2py29) ?v4py0)) :pattern ((fun_app$f (fun_app$g insert$ ?v0py72) ?v4py0)) :pattern ((fun_app$f (fun_app$g insert$ ?v2py29) ?v4py0)) ))))))) :pattern ((?v4!30 ?v3py1 ?v2py29 ?v1py62 ?v0py72)) )) :named A76))
(assert (! (forall ((?v0py73 A$)(?v1py63 A_set$)) (! (or (not (fun_app$a (member$ ?v0py73) ?v1py63)) (and (= ?v1py63 (fun_app$f (fun_app$g insert$ ?v0py73) (?v2!31 ?v1py63 ?v0py73))) (not (fun_app$a (member$ ?v0py73) (?v2!31 ?v1py63 ?v0py73))))) :pattern ((?v2!31 ?v1py63 ?v0py73)) )) :named A77))
(assert (! (forall ((?v0py74 A$)(?v1py64 A_set$)(?v2py30 A$)) (! (or (not (fun_app$a (member$ ?v0py74) ?v1py64)) (fun_app$a (member$ ?v0py74) (fun_app$f (fun_app$g insert$ ?v2py30) ?v1py64))) :pattern ((fun_app$a (member$ ?v0py74) (fun_app$f (fun_app$g insert$ ?v2py30) ?v1py64))) )) :named A78))
(assert (! (forall ((?v0py75 A$)(?v1py65 A_set$)) (! (or (not (fun_app$a (member$ ?v0py75) ?v1py65)) (= (fun_app$f (fun_app$g insert$ ?v0py75) ?v1py65) ?v1py65)) :pattern ((fun_app$f (fun_app$g insert$ ?v0py75) ?v1py65)) )) :named A79))
(assert (! (forall ((?v0py76 A$)(?v1py66 A_set$)) (! (or (not (fun_app$a (member$ ?v0py76) ?v1py66)) (and (= ?v1py66 (fun_app$f (fun_app$g insert$ ?v0py76) (?v2!32 ?v1py66 ?v0py76))) (not (fun_app$a (member$ ?v0py76) (?v2!32 ?v1py66 ?v0py76))))) :pattern ((?v2!32 ?v1py66 ?v0py76)) )) :named A80))
(assert (! (forall ((?v0py77 A$)(?v1py67 A$)(?v2py31 A_set$)) (! (or (= ?v0py77 ?v1py67) (fun_app$a (member$ ?v0py77) ?v2py31) (not (fun_app$a (member$ ?v0py77) (fun_app$f (fun_app$g insert$ ?v1py67) ?v2py31)))) :pattern ((fun_app$a (member$ ?v0py77) (fun_app$f (fun_app$g insert$ ?v1py67) ?v2py31))) )) :named A81))
(assert (! (forall ((?v0py78 A$)(?v1py68 A$)(?v2py32 A_set$)) (! (= (fun_app$f (fun_app$g insert$ ?v0py78) (fun_app$f (fun_app$g insert$ ?v1py68) ?v2py32)) (fun_app$f (fun_app$g insert$ ?v1py68) (fun_app$f (fun_app$g insert$ ?v0py78) ?v2py32))) :pattern ((fun_app$f (fun_app$g insert$ ?v0py78) (fun_app$f (fun_app$g insert$ ?v1py68) ?v2py32))) :pattern ((fun_app$f (fun_app$g insert$ ?v1py68) (fun_app$f (fun_app$g insert$ ?v0py78) ?v2py32))) )) :named A82))
(assert (! (forall ((?v0py79 A_set$)(?v1py69 A_set$)) (! (= (fun_app$f (sup$ ?v0py79) ?v1py69) (fun_app$f (sup$ ?v1py69) ?v0py79)) :pattern ((fun_app$f (sup$ ?v0py79) ?v1py69)) :pattern ((fun_app$f (sup$ ?v1py69) ?v0py79)) )) :named A83))
(assert (! (forall ((?v0py80 A_set$)(?v1py70 A_set$)(?v2py33 A_set$)) (! (= (fun_app$f (sup$ ?v0py80) (fun_app$f (sup$ ?v1py70) ?v2py33)) (fun_app$f (sup$ ?v1py70) (fun_app$f (sup$ ?v0py80) ?v2py33))) :pattern ((fun_app$f (sup$ ?v0py80) (fun_app$f (sup$ ?v1py70) ?v2py33))) :pattern ((fun_app$f (sup$ ?v1py70) (fun_app$f (sup$ ?v0py80) ?v2py33))) )) :named A84))
(assert (! (forall ((?v0py81 A_set$)(?v1py71 A_set$)(?v2py34 A_set$)) (! (= (fun_app$f (sup$ (fun_app$f (sup$ ?v0py81) ?v1py71)) ?v2py34) (fun_app$f (sup$ ?v0py81) (fun_app$f (sup$ ?v1py71) ?v2py34))) :pattern ((fun_app$f (sup$ (fun_app$f (sup$ ?v0py81) ?v1py71)) ?v2py34)) :pattern ((fun_app$f (sup$ ?v0py81) (fun_app$f (sup$ ?v1py71) ?v2py34))) )) :named A85))
(assert (! (forall ((?v0py82 A$)(?v1py72 A_set$)(?v2py35 A_set$)) (! (or (not (fun_app$a (member$ ?v0py82) ?v1py72)) (fun_app$a (member$ ?v0py82) (fun_app$f (sup$ ?v1py72) ?v2py35))) :pattern ((fun_app$a (member$ ?v0py82) (fun_app$f (sup$ ?v1py72) ?v2py35))) )) :named A86))
(assert (! (forall ((?v0py83 A$)(?v1py73 A_set$)(?v2py36 A_set$)) (! (or (not (fun_app$a (member$ ?v0py83) ?v1py73)) (fun_app$a (member$ ?v0py83) (fun_app$f (sup$ ?v2py36) ?v1py73))) :pattern ((fun_app$a (member$ ?v0py83) (fun_app$f (sup$ ?v2py36) ?v1py73))) )) :named A87))
(assert (! (forall ((?v0py84 A$)(?v1py74 A_set$)(?v2py37 A_set$)) (! (or (fun_app$a (member$ ?v0py84) ?v2py37) (fun_app$a (member$ ?v0py84) ?v1py74) (not (fun_app$a (member$ ?v0py84) (fun_app$f (sup$ ?v1py74) ?v2py37)))) :pattern ((fun_app$a (member$ ?v0py84) (fun_app$f (sup$ ?v1py74) ?v2py37))) )) :named A88))
(assert (! (forall ((?v0py85 A_set$)(?v1py75 A_set$)(?v2py38 A_bool_fun$)) (! (and (or (and (fun_app$a (member$ (?v3!33 ?v2py38 ?v1py75 ?v0py85)) (fun_app$f (sup$ ?v0py85) ?v1py75)) (not (fun_app$ ?v2py38 (?v3!33 ?v2py38 ?v1py75 ?v0py85)))) (and (forall ((?v3py2 A$)) (! (or (not (fun_app$a (member$ ?v3py2) ?v0py85)) (fun_app$ ?v2py38 ?v3py2)) :pattern ((member$ ?v3py2)) :pattern ((fun_app$ ?v2py38 ?v3py2)) )) (forall ((?v3py3 A$)) (! (or (not (fun_app$a (member$ ?v3py3) ?v1py75)) (fun_app$ ?v2py38 ?v3py3)) :pattern ((member$ ?v3py3)) :pattern ((fun_app$ ?v2py38 ?v3py3)) )))) (or (forall ((?v3py4 A$)) (! (or (not (fun_app$a (member$ ?v3py4) (fun_app$f (sup$ ?v0py85) ?v1py75))) (fun_app$ ?v2py38 ?v3py4)) :pattern ((member$ ?v3py4)) :pattern ((fun_app$ ?v2py38 ?v3py4)) )) (and (fun_app$a (member$ (?v3!34 ?v2py38 ?v0py85)) ?v0py85) (not (fun_app$ ?v2py38 (?v3!34 ?v2py38 ?v0py85)))) (and (fun_app$a (member$ (?v3!35 ?v2py38 ?v1py75)) ?v1py75) (not (fun_app$ ?v2py38 (?v3!35 ?v2py38 ?v1py75)))))) :pattern ((?v3!33 ?v2py38 ?v1py75 ?v0py85)) )) :named A89))
(assert (! (forall ((?v0py86 A_set$)(?v1py76 A_set$)(?v2py39 A_bool_fun$)) (! (and (or (and (fun_app$a (member$ (?v3!37 ?v2py39 ?v0py86)) ?v0py86) (fun_app$ ?v2py39 (?v3!37 ?v2py39 ?v0py86))) (and (fun_app$a (member$ (?v3!38 ?v2py39 ?v1py76)) ?v1py76) (fun_app$ ?v2py39 (?v3!38 ?v2py39 ?v1py76))) (forall ((?v3py5 A$)) (! (or (not (fun_app$a (member$ ?v3py5) (fun_app$f (sup$ ?v0py86) ?v1py76))) (not (fun_app$ ?v2py39 ?v3py5))) :pattern ((member$ ?v3py5)) :pattern ((fun_app$ ?v2py39 ?v3py5)) ))) (or (and (fun_app$a (member$ (?v3!36 ?v2py39 ?v1py76 ?v0py86)) (fun_app$f (sup$ ?v0py86) ?v1py76)) (fun_app$ ?v2py39 (?v3!36 ?v2py39 ?v1py76 ?v0py86))) (and (forall ((?v3py6 A$)) (! (or (not (fun_app$ ?v2py39 ?v3py6)) (not (fun_app$a (member$ ?v3py6) ?v0py86))) :pattern ((fun_app$ ?v2py39 ?v3py6)) :pattern ((member$ ?v3py6)) )) (forall ((?v3py7 A$)) (! (or (not (fun_app$a (member$ ?v3py7) ?v1py76)) (not (fun_app$ ?v2py39 ?v3py7))) :pattern ((member$ ?v3py7)) :pattern ((fun_app$ ?v2py39 ?v3py7)) ))))) :pattern ((?v3!36 ?v2py39 ?v1py76 ?v0py86)) )) :named A90))
(assert (! (forall ((?v0py87 A_set$)(?v1py77 A_set$)) (! (fun_app$a (less_eq$ ?v0py87) (fun_app$f (sup$ ?v1py77) ?v0py87)) :pattern ((fun_app$f (sup$ ?v1py77) ?v0py87)) )) :named A91))
(assert (! (forall ((?v0py88 A_set$)(?v1py78 A_set$)) (! (fun_app$a (less_eq$ ?v0py88) (fun_app$f (sup$ ?v0py88) ?v1py78)) :pattern ((fun_app$f (sup$ ?v0py88) ?v1py78)) )) :named A92))
(assert (! (forall ((?v0py89 A_set$)(?v1py79 A_set$)(?v2py40 A_set$)) (! (or (not (fun_app$a (less_eq$ ?v0py89) ?v1py79)) (fun_app$a (less_eq$ ?v0py89) (fun_app$f (sup$ ?v1py79) ?v2py40))) :pattern ((fun_app$a (less_eq$ ?v0py89) (fun_app$f (sup$ ?v1py79) ?v2py40))) )) :named A93))
(assert (! (forall ((?v0py90 A_set$)(?v1py80 A_set$)(?v2py41 A_set$)) (! (or (not (fun_app$a (less_eq$ ?v0py90) ?v1py80)) (fun_app$a (less_eq$ ?v0py90) (fun_app$f (sup$ ?v2py41) ?v1py80))) :pattern ((fun_app$a (less_eq$ ?v0py90) (fun_app$f (sup$ ?v2py41) ?v1py80))) )) :named A94))
(assert (! (forall ((?v0py91 A_set$)(?v1py81 A_set$)) (! (or (not (fun_app$a (less_eq$ ?v0py91) ?v1py81)) (= (fun_app$f (sup$ ?v1py81) ?v0py91) ?v1py81)) :pattern ((fun_app$f (sup$ ?v1py81) ?v0py91)) )) :named A95))
(assert (! (forall ((?v0py92 A_set$)(?v1py82 A_set$)) (! (or (not (fun_app$a (less_eq$ ?v0py92) ?v1py82)) (= (fun_app$f (sup$ ?v0py92) ?v1py82) ?v1py82)) :pattern ((fun_app$f (sup$ ?v0py92) ?v1py82)) )) :named A96))
(assert (! (forall ((?v0py93 A_set$)(?v1py83 A_set$)(?v2py42 A_set$)) (! (or (fun_app$a (less_eq$ (fun_app$f (sup$ ?v0py93) ?v2py42)) ?v1py83) (not (fun_app$a (less_eq$ ?v0py93) ?v1py83)) (not (fun_app$a (less_eq$ ?v2py42) ?v1py83))) :pattern ((fun_app$a (less_eq$ (fun_app$f (sup$ ?v0py93) ?v2py42)) ?v1py83)) )) :named A97))
(assert (! (forall ((?v0py94 A_set$)(?v1py84 A_set$)(?v2py43 A_set$)(?v3py8 A_set$)) (! (or (fun_app$a (less_eq$ (fun_app$f (sup$ ?v0py94) ?v2py43)) (fun_app$f (sup$ ?v1py84) ?v3py8)) (not (fun_app$a (less_eq$ ?v0py94) ?v1py84)) (not (fun_app$a (less_eq$ ?v2py43) ?v3py8))) :pattern ((fun_app$a (less_eq$ (fun_app$f (sup$ ?v0py94) ?v2py43)) (fun_app$f (sup$ ?v1py84) ?v3py8))) )) :named A98))
(assert (! (forall ((?v0py95 A_set$)(?v1py85 A_set$)) (! (or (= ?v1py85 (fun_app$f (sup$ ?v1py85) ?v0py95)) (not (fun_app$a (less_eq$ ?v0py95) ?v1py85))) :pattern ((fun_app$f (sup$ ?v1py85) ?v0py95)) :pattern ((fun_app$a (less_eq$ ?v0py95) ?v1py85)) )) :named A99))
(assert (! (forall ((?v0py96 A_set$)(?v1py86 A_set$)(?v2py44 A_set$)) (! (or (and (fun_app$a (less_eq$ ?v0py96) ?v2py44) (fun_app$a (less_eq$ ?v1py86) ?v2py44)) (not (fun_app$a (less_eq$ (fun_app$f (sup$ ?v0py96) ?v1py86)) ?v2py44))) :pattern ((fun_app$a (less_eq$ (fun_app$f (sup$ ?v0py96) ?v1py86)) ?v2py44)) )) :named A100))
(assert (! (forall ((?v0py97 A_set$)(?v1py87 A_set$)) (! (or (not (= ?v0py97 (fun_app$f (sup$ ?v0py97) ?v1py87))) (fun_app$a (less_eq$ ?v1py87) ?v0py97)) :pattern ((fun_app$f (sup$ ?v0py97) ?v1py87)) :pattern ((fun_app$a (less_eq$ ?v1py87) ?v0py97)) )) :named A101))
(assert (! (forall ((?v0py98 A_set_a_set_a_set_fun_fun$)(?v1py88 A_set$)(?v2py45 A_set$)) (! (or (= (fun_app$f (sup$ ?v1py88) ?v2py45) (fun_app$f (fun_app$h ?v0py98 ?v1py88) ?v2py45)) (not (fun_app$a (less_eq$ (?v3!40 ?v0py98)) (fun_app$f (fun_app$h ?v0py98 (?v3!40 ?v0py98)) (?v4!39 ?v0py98)))) (not (fun_app$a (less_eq$ (?v4!41 ?v0py98)) (fun_app$f (fun_app$h ?v0py98 (?v3!42 ?v0py98)) (?v4!41 ?v0py98)))) (and (fun_app$a (less_eq$ (?v4!44 ?v0py98)) (?v3!45 ?v0py98)) (fun_app$a (less_eq$ (?v5!43 ?v0py98)) (?v3!45 ?v0py98)) (not (fun_app$a (less_eq$ (fun_app$f (fun_app$h ?v0py98 (?v4!44 ?v0py98)) (?v5!43 ?v0py98))) (?v3!45 ?v0py98))))) :pattern ((fun_app$f (fun_app$h ?v0py98 ?v1py88) ?v2py45)) )) :named A102))
(assert (! (forall ((?v0py99 A_set$)(?v1py89 A_set$)) (! (and (or (not (fun_app$a (less_eq$ ?v0py99) ?v1py89)) (= ?v1py89 (fun_app$f (sup$ ?v1py89) ?v0py99))) (or (fun_app$a (less_eq$ ?v0py99) ?v1py89) (not (= ?v1py89 (fun_app$f (sup$ ?v1py89) ?v0py99))))) :pattern ((fun_app$a (less_eq$ ?v0py99) ?v1py89)) )) :named A103))
(assert (! (forall ((?v0py100 A_set$)(?v1py90 A_set$)) (! (and (or (not (fun_app$a (less_eq$ ?v0py100) ?v1py90)) (= (fun_app$f (sup$ ?v0py100) ?v1py90) ?v1py90)) (or (fun_app$a (less_eq$ ?v0py100) ?v1py90) (not (= (fun_app$f (sup$ ?v0py100) ?v1py90) ?v1py90)))) :pattern ((fun_app$a (less_eq$ ?v0py100) ?v1py90)) )) :named A104))
(assert (! (forall ((?v0py101 A_set$)(?v1py91 A_set$)) (! (and (or (not (fun_app$a (less_eq$ ?v0py101) ?v1py91)) (= (fun_app$f (sup$ ?v1py91) ?v0py101) ?v1py91)) (or (fun_app$a (less_eq$ ?v0py101) ?v1py91) (not (= (fun_app$f (sup$ ?v1py91) ?v0py101) ?v1py91)))) :pattern ((fun_app$a (less_eq$ ?v0py101) ?v1py91)) )) :named A105))
(assert (! (forall ((?v0py102 A_set$)(?v1py92 A_set$)) (! (or (finite$ ?v1py92) (not (finite$ ?v0py102)) (not (fun_app$a (less_eq$ ?v1py92) ?v0py102))) :pattern ((fun_app$a (less_eq$ ?v1py92) ?v0py102)) )) :named A106))
(assert (! (forall ((?v0py103 A_set$)(?v1py93 A_set$)) (! (or (finite$ ?v0py103) (not (finite$ ?v1py93)) (not (fun_app$a (less_eq$ ?v0py103) ?v1py93))) :pattern ((fun_app$a (less_eq$ ?v0py103) ?v1py93)) )) :named A107))
(assert (! (forall ((?v0py104 A_set$)(?v1py94 A$)) (! (or (not (finite$ ?v0py104)) (finite$ (fun_app$f (fun_app$g insert$ ?v1py94) ?v0py104))) :pattern ((fun_app$f (fun_app$g insert$ ?v1py94) ?v0py104)) )) :named A108))
(assert (! (forall ((?v0py105 A_set$)(?v1py95 A$)) (! (fun_app$a (less_eq$ ?v0py105) (fun_app$f (fun_app$g insert$ ?v1py95) ?v0py105)) :pattern ((fun_app$f (fun_app$g insert$ ?v1py95) ?v0py105)) )) :named A109))
(assert (! (forall ((?v0py106 A$)(?v1py96 A_set$)(?v2py46 A_set$)) (! (or (fun_app$a (member$ ?v0py106) ?v1py96) (and (or (not (fun_app$a (less_eq$ ?v1py96) (fun_app$f (fun_app$g insert$ ?v0py106) ?v2py46))) (fun_app$a (less_eq$ ?v1py96) ?v2py46)) (or (not (fun_app$a (less_eq$ ?v1py96) ?v2py46)) (fun_app$a (less_eq$ ?v1py96) (fun_app$f (fun_app$g insert$ ?v0py106) ?v2py46))))) :pattern ((fun_app$a (less_eq$ ?v1py96) (fun_app$f (fun_app$g insert$ ?v0py106) ?v2py46))) )) :named A110))
(assert (! (forall ((?v0py107 A_set$)(?v1py97 A_set$)(?v2py47 A$)) (! (or (not (fun_app$a (less_eq$ ?v0py107) ?v1py97)) (fun_app$a (less_eq$ ?v0py107) (fun_app$f (fun_app$g insert$ ?v2py47) ?v1py97))) :pattern ((fun_app$a (less_eq$ ?v0py107) (fun_app$f (fun_app$g insert$ ?v2py47) ?v1py97))) )) :named A111))
(assert (! (forall ((?v0py108 A_set$)(?v1py98 A_set$)(?v2py48 A$)) (! (or (not (fun_app$a (less_eq$ ?v0py108) ?v1py98)) (fun_app$a (less_eq$ (fun_app$f (fun_app$g insert$ ?v2py48) ?v0py108)) (fun_app$f (fun_app$g insert$ ?v2py48) ?v1py98))) :pattern ((fun_app$a (less_eq$ (fun_app$f (fun_app$g insert$ ?v2py48) ?v0py108)) (fun_app$f (fun_app$g insert$ ?v2py48) ?v1py98))) )) :named A112))
(assert (! (forall ((?v0py109 A_set$)(?v1py99 A_set$)) (! (or (finite$ (fun_app$f (sup$ ?v0py109) ?v1py99)) (not (finite$ ?v1py99)) (not (finite$ ?v0py109))) :pattern ((fun_app$f (sup$ ?v0py109) ?v1py99)) )) :named A113))
(assert (! (forall ((?v0py110 A_set$)(?v1py100 A_set$)) (! (or (finite$ ?v0py110) (not (finite$ (fun_app$f (sup$ ?v0py110) ?v1py100)))) :pattern ((fun_app$f (sup$ ?v0py110) ?v1py100)) )) :named A114))
(assert (! (forall ((?v0py111 A_set$)(?v1py101 A_set$)) (! (and (or (finite$ (fun_app$f (sup$ ?v0py111) ?v1py101)) (not (finite$ ?v0py111)) (not (finite$ ?v1py101))) (or (not (finite$ (fun_app$f (sup$ ?v0py111) ?v1py101))) (and (finite$ ?v0py111) (finite$ ?v1py101)))) :pattern ((fun_app$f (sup$ ?v0py111) ?v1py101)) )) :named A115))
(assert (! (forall ((?v0py112 A$)(?v1py102 A_set$)(?v2py49 A_set$)) (! (or (not (fun_app$a (member$ ?v0py112) ?v1py102)) (fun_app$a (less_eq$ (fun_app$f (fun_app$g insert$ ?v0py112) ?v2py49)) ?v1py102) (not (fun_app$a (less_eq$ ?v2py49) ?v1py102))) :pattern ((fun_app$a (less_eq$ (fun_app$f (fun_app$g insert$ ?v0py112) ?v2py49)) ?v1py102)) )) :named A116))
(assert (! (forall ((?v0py113 A_set$)(?v1py103 A_set$)) (! (or (finite$ ?v0py113) (not (finite$ ?v1py103)) (not (fun_app$a (less_eq$ ?v0py113) ?v1py103))) :pattern ((fun_app$a (less_eq$ ?v0py113) ?v1py103)) )) :named A117))
(assert (! (forall ((?v0py114 A_set$)(?v1py104 A_llist$)) (! (= (fun_app$c (gen_lset$ ?v0py114) ?v1py104) (fun_app$f (sup$ ?v0py114) (fun_app$c lset$ ?v1py104))) :pattern ((fun_app$c (gen_lset$ ?v0py114) ?v1py104)) )) :named A118))
(assert (! (forall ((?v0py115 A_set$)(?v1py105 A$)(?v2py50 A_llist$)) (! (= (fun_app$c (gen_lset$ ?v0py115) (lCons$ ?v1py105 ?v2py50)) (fun_app$c (gen_lset$ (fun_app$f (fun_app$g insert$ ?v1py105) ?v0py115)) ?v2py50)) :pattern ((fun_app$c (gen_lset$ ?v0py115) (lCons$ ?v1py105 ?v2py50))) )) :named A119))
(assert (! (forall ((?v0py116 A_set$)(?v1py106 A_set_a_set_fun$)(?v2py51 A_set$)(?v3py9 A_set$)) (! (or (fun_app$a (less_eq$ ?v0py116) (fun_app$f ?v1py106 ?v3py9)) (not (fun_app$a (less_eq$ ?v2py51) ?v3py9)) (not (= ?v0py116 (fun_app$f ?v1py106 ?v2py51))) (and (fun_app$a (less_eq$ (?v4!47 ?v1py106)) (?v5!46 ?v1py106)) (not (fun_app$a (less_eq$ (fun_app$f ?v1py106 (?v4!47 ?v1py106))) (fun_app$f ?v1py106 (?v5!46 ?v1py106)))))) :pattern ((fun_app$a (less_eq$ ?v0py116) (fun_app$f ?v1py106 ?v3py9)) (fun_app$f ?v1py106 ?v2py51)) )) :named A120))
(assert (! (forall ((?v0py117 A_set$)(?v1py107 A_set$)(?v2py52 A_set$)) (! (or (not (= ?v0py117 ?v1py107)) (not (fun_app$a (less_eq$ ?v1py107) ?v2py52)) (fun_app$a (less_eq$ ?v0py117) ?v2py52)) :pattern ((fun_app$a (less_eq$ ?v1py107) ?v2py52) (fun_app$a (less_eq$ ?v0py117) ?v2py52)) )) :named A121))
(assert (! (forall ((?v0py118 A_set$)(?v1py108 A_set$)(?v2py53 A_set_a_set_fun$)(?v3py10 A_set$)) (! (or (fun_app$a (less_eq$ (fun_app$f ?v2py53 ?v0py118)) ?v3py10) (not (fun_app$a (less_eq$ ?v0py118) ?v1py108)) (not (= (fun_app$f ?v2py53 ?v1py108) ?v3py10)) (and (fun_app$a (less_eq$ (?v4!49 ?v2py53)) (?v5!48 ?v2py53)) (not (fun_app$a (less_eq$ (fun_app$f ?v2py53 (?v4!49 ?v2py53))) (fun_app$f ?v2py53 (?v5!48 ?v2py53)))))) :pattern ((fun_app$a (less_eq$ (fun_app$f ?v2py53 ?v0py118)) ?v3py10) (fun_app$f ?v2py53 ?v1py108)) )) :named A122))
(assert (! (forall ((?v0py119 A_set$)(?v1py109 A_set$)(?v2py54 A_set$)) (! (or (fun_app$a (less_eq$ ?v0py119) ?v2py54) (not (fun_app$a (less_eq$ ?v0py119) ?v1py109)) (not (= ?v1py109 ?v2py54))) :pattern ((fun_app$a (less_eq$ ?v0py119) ?v2py54) (fun_app$a (less_eq$ ?v0py119) ?v1py109)) )) :named A123))
(assert (! (forall ((?v0py120 A_set$)(?v1py110 A_set$)(?v2py55 A_set_a_set_fun$)(?v3py11 A_set$)) (! (or (fun_app$a (less_eq$ (fun_app$f ?v2py55 ?v0py120)) ?v3py11) (not (fun_app$a (less_eq$ ?v0py120) ?v1py110)) (not (fun_app$a (less_eq$ (fun_app$f ?v2py55 ?v1py110)) ?v3py11)) (and (fun_app$a (less_eq$ (?v4!51 ?v2py55)) (?v5!50 ?v2py55)) (not (fun_app$a (less_eq$ (fun_app$f ?v2py55 (?v4!51 ?v2py55))) (fun_app$f ?v2py55 (?v5!50 ?v2py55)))))) :pattern ((fun_app$a (less_eq$ (fun_app$f ?v2py55 ?v0py120)) ?v3py11) (fun_app$a (less_eq$ (fun_app$f ?v2py55 ?v1py110)) ?v3py11)) )) :named A124))
(assert (! (forall ((?v0py121 A_set$)(?v1py111 A_set_a_set_fun$)(?v2py56 A_set$)(?v3py12 A_set$)) (! (or (fun_app$a (less_eq$ ?v0py121) (fun_app$f ?v1py111 ?v3py12)) (not (fun_app$a (less_eq$ ?v2py56) ?v3py12)) (not (fun_app$a (less_eq$ ?v0py121) (fun_app$f ?v1py111 ?v2py56))) (and (fun_app$a (less_eq$ (?v4!53 ?v1py111)) (?v5!52 ?v1py111)) (not (fun_app$a (less_eq$ (fun_app$f ?v1py111 (?v4!53 ?v1py111))) (fun_app$f ?v1py111 (?v5!52 ?v1py111)))))) :pattern ((fun_app$a (less_eq$ ?v0py121) (fun_app$f ?v1py111 ?v3py12)) (fun_app$a (less_eq$ ?v0py121) (fun_app$f ?v1py111 ?v2py56))) )) :named A125))
(assert (! (forall ((?v0py122 A_set$)(?v1py112 A_set$)) (! (or (= ?v1py112 ?v0py122) (not (fun_app$a (less_eq$ ?v1py112) ?v0py122)) (not (fun_app$a (less_eq$ ?v0py122) ?v1py112))) :pattern ((fun_app$a (less_eq$ ?v0py122) ?v1py112)) :pattern ((fun_app$a (less_eq$ ?v1py112) ?v0py122)) )) :named A126))
(assert (! (forall ((?v0py123 A_set$)(?v1py113 A_set$)(?v2py57 A_set$)) (! (or (fun_app$a (less_eq$ ?v2py57) ?v1py113) (not (fun_app$a (less_eq$ ?v2py57) ?v0py123)) (not (fun_app$a (less_eq$ ?v0py123) ?v1py113))) :pattern ((fun_app$a (less_eq$ ?v2py57) ?v1py113) (fun_app$a (less_eq$ ?v2py57) ?v0py123)) )) :named A127))
(assert (! (forall ((?v0py124 A_set$)(?v1py114 A_set$)) (! (or (not (fun_app$a (less_eq$ ?v0py124) ?v1py114)) (and (or (not (fun_app$a (less_eq$ ?v1py114) ?v0py124)) (= ?v1py114 ?v0py124)) (or (fun_app$a (less_eq$ ?v1py114) ?v0py124) (not (= ?v1py114 ?v0py124))))) :pattern ((fun_app$a (less_eq$ ?v1py114) ?v0py124)) )) :named A128))
(assert (! (forall ((?v0py125 A_set$)) (! (= (fun_app$c (gen_lset$ ?v0py125) lNil$) ?v0py125) :pattern ((gen_lset$ ?v0py125)) )) :named A129))
(assert (! (forall ((?v0py126 A_set$)(?v1py115 A_set$)(?v2py58 A_set_bool_fun$)) (! (or (fun_app$a ?v2py58 ?v0py126) (not (finite$ ?v0py126)) (not (fun_app$a (less_eq$ ?v0py126) ?v1py115)) (not (fun_app$a ?v2py58 bot$)) (and (finite$ (?v4!54 ?v2py58 ?v1py115)) (fun_app$a (member$ (?v3!55 ?v2py58 ?v1py115)) ?v1py115) (not (fun_app$a (member$ (?v3!55 ?v2py58 ?v1py115)) (?v4!54 ?v2py58 ?v1py115))) (fun_app$a ?v2py58 (?v4!54 ?v2py58 ?v1py115)) (not (fun_app$a ?v2py58 (fun_app$f (fun_app$g insert$ (?v3!55 ?v2py58 ?v1py115)) (?v4!54 ?v2py58 ?v1py115)))))) :pattern ((fun_app$a ?v2py58 ?v0py126) (?v3!55 ?v2py58 ?v1py115)) )) :named A130))
(assert (! (forall ((?v0py127 A_set$)(?v1py116 A_set$)) (! (or (not (finite$ ?v0py127)) (= (fun_app$f (sup$ ?v0py127) ?v1py116) (fun_app$f (fun_app$h (fold$ insert$) ?v1py116) ?v0py127))) :pattern ((fun_app$f (sup$ ?v0py127) ?v1py116)) )) :named A131))
(assert (! (forall ((?v0py128 A$)) (! (and (or bot$b (not (fun_app$ bot$a ?v0py128))) (or (fun_app$ bot$a ?v0py128) (not bot$b))) :pattern ((fun_app$ bot$a ?v0py128)) )) :named A132))
(assert (! (forall ((?v0py129 A_bool_fun$)) (! (and (or (not (= (collect$ ?v0py129) bot$)) (forall ((?v1py117 A$)) (! (not (fun_app$ ?v0py129 ?v1py117)) :pattern ((fun_app$ ?v0py129 ?v1py117)) ))) (or (= (collect$ ?v0py129) bot$) (fun_app$ ?v0py129 (?v1!56 ?v0py129)))) :pattern ((collect$ ?v0py129)) :pattern ((?v1!56 ?v0py129)) )) :named A133))
(assert (! (forall ((?v0py130 A_set$)) (! (and (or (= ?v0py130 bot$) (fun_app$a (member$ (?v1!57 ?v0py130)) ?v0py130)) (or (forall ((?v1py118 A$)) (! (not (fun_app$a (member$ ?v1py118) ?v0py130)) :pattern ((member$ ?v1py118)) )) (not (= ?v0py130 bot$)))) :pattern ((?v1!57 ?v0py130)) )) :named A134))
(assert (! (forall ((?v0py131 A_bool_fun$)) (! (and (or (not (= bot$ (collect$ ?v0py131))) (forall ((?v1py119 A$)) (! (not (fun_app$ ?v0py131 ?v1py119)) :pattern ((fun_app$ ?v0py131 ?v1py119)) ))) (or (= bot$ (collect$ ?v0py131)) (fun_app$ ?v0py131 (?v1!58 ?v0py131)))) :pattern ((collect$ ?v0py131)) :pattern ((?v1!58 ?v0py131)) )) :named A135))
(assert (! (forall ((?v0py132 A$)) (! (not (fun_app$a (member$ ?v0py132) bot$)) :pattern ((member$ ?v0py132)) )) :named A136))
(assert (! (forall ((?v0py133 A_set$)) (! (and (or (not (fun_app$a (less_eq$ ?v0py133) bot$)) (= ?v0py133 bot$)) (or (fun_app$a (less_eq$ ?v0py133) bot$) (not (= ?v0py133 bot$)))) :pattern ((less_eq$ ?v0py133)) )) :named A137))
(assert (! (forall ((?v0py134 A_set$)) (! (fun_app$a (less_eq$ bot$) ?v0py134) :pattern ((fun_app$a (less_eq$ bot$) ?v0py134)) )) :named A138))
(assert (! (forall ((?v0py135 A_bool_fun$)(?v1py120 A_bool_fun$)) (! (and (or (not (= bot$a (fun_app$i (sup$a ?v0py135) ?v1py120))) (and (= ?v0py135 bot$a) (= ?v1py120 bot$a))) (or (= bot$a (fun_app$i (sup$a ?v0py135) ?v1py120)) (not (= ?v0py135 bot$a)) (not (= ?v1py120 bot$a)))) :pattern ((fun_app$i (sup$a ?v0py135) ?v1py120)) )) :named A139))
(assert (! (forall ((?v0py136 A_set$)(?v1py121 A_set$)) (! (and (or (not (= bot$ (fun_app$f (sup$ ?v0py136) ?v1py121))) (and (= ?v0py136 bot$) (= ?v1py121 bot$))) (or (= bot$ (fun_app$f (sup$ ?v0py136) ?v1py121)) (not (= ?v1py121 bot$)) (not (= ?v0py136 bot$)))) :pattern ((fun_app$f (sup$ ?v0py136) ?v1py121)) )) :named A140))
(assert (! (forall ((?v0py137 A_bool_fun$)(?v1py122 A_bool_fun$)) (! (and (or (not (= (fun_app$i (sup$a ?v0py137) ?v1py122) bot$a)) (and (= ?v0py137 bot$a) (= ?v1py122 bot$a))) (or (= (fun_app$i (sup$a ?v0py137) ?v1py122) bot$a) (not (= ?v0py137 bot$a)) (not (= ?v1py122 bot$a)))) :pattern ((fun_app$i (sup$a ?v0py137) ?v1py122)) )) :named A141))
(assert (! (forall ((?v0py138 A_set$)(?v1py123 A_set$)) (! (and (or (not (= (fun_app$f (sup$ ?v0py138) ?v1py123) bot$)) (and (= ?v0py138 bot$) (= ?v1py123 bot$))) (or (= (fun_app$f (sup$ ?v0py138) ?v1py123) bot$) (not (= ?v0py138 bot$)) (not (= ?v1py123 bot$)))) :pattern ((fun_app$f (sup$ ?v0py138) ?v1py123)) )) :named A142))
(assert (! (forall ((?v0py139 A_bool_fun$)) (! (= (fun_app$i (sup$a ?v0py139) bot$a) ?v0py139) :pattern ((sup$a ?v0py139)) )) :named A143))
(assert (! (forall ((?v0py140 A_set$)) (! (= (fun_app$f (sup$ ?v0py140) bot$) ?v0py140) :pattern ((sup$ ?v0py140)) )) :named A144))
(assert (! (forall ((?v0py141 A_bool_fun$)) (! (= (fun_app$i (sup$a bot$a) ?v0py141) ?v0py141) :pattern ((fun_app$i (sup$a bot$a) ?v0py141)) )) :named A145))
(assert (! (forall ((?v0py142 A_set$)) (! (= (fun_app$f (sup$ bot$) ?v0py142) ?v0py142) :pattern ((fun_app$f (sup$ bot$) ?v0py142)) )) :named A146))
(assert (! (forall ((?v0py143 A$)) (! (fun_app$a (member$ ?v0py143) (fun_app$f (fun_app$g insert$ ?v0py143) bot$)) :pattern ((member$ ?v0py143)) :pattern ((fun_app$g insert$ ?v0py143)) )) :named A147))
(assert (! (forall ((?v0py144 A_a_set_a_set_fun_fun$)(?v1py124 A_set$)) (! (= (fun_app$f (fun_app$h (fold$ ?v0py144) ?v1py124) bot$) ?v1py124) :pattern ((fun_app$h (fold$ ?v0py144) ?v1py124)) )) :named A148))
(assert (! (forall ((?v0py145 A_set$)(?v1py125 A_a_set_a_set_fun_fun$)(?v2py59 A_set$)) (! (or (finite$ ?v0py145) (= (fun_app$f (fun_app$h (fold$ ?v1py125) ?v2py59) ?v0py145) ?v2py59)) :pattern ((fun_app$f (fun_app$h (fold$ ?v1py125) ?v2py59) ?v0py145)) )) :named A149))
(assert (! (forall ((?v0py146 A$)(?v1py126 A$)(?v2py60 A_set$)) (! (and (or (not (= (fun_app$f (fun_app$g insert$ ?v0py146) bot$) (fun_app$f (fun_app$g insert$ ?v1py126) ?v2py60))) (and (= ?v1py126 ?v0py146) (fun_app$a (less_eq$ ?v2py60) (fun_app$f (fun_app$g insert$ ?v0py146) bot$)))) (or (= (fun_app$f (fun_app$g insert$ ?v0py146) bot$) (fun_app$f (fun_app$g insert$ ?v1py126) ?v2py60)) (not (= ?v1py126 ?v0py146)) (not (fun_app$a (less_eq$ ?v2py60) (fun_app$f (fun_app$g insert$ ?v0py146) bot$))))) :pattern ((fun_app$f (fun_app$g insert$ ?v1py126) ?v2py60) (fun_app$a (less_eq$ ?v2py60) (fun_app$f (fun_app$g insert$ ?v0py146) bot$))) )) :named A150))
(assert (! (forall ((?v0py147 A$)(?v1py127 A_set$)(?v2py61 A$)) (! (and (or (not (= (fun_app$f (fun_app$g insert$ ?v0py147) ?v1py127) (fun_app$f (fun_app$g insert$ ?v2py61) bot$))) (and (= ?v0py147 ?v2py61) (fun_app$a (less_eq$ ?v1py127) (fun_app$f (fun_app$g insert$ ?v2py61) bot$)))) (or (= (fun_app$f (fun_app$g insert$ ?v0py147) ?v1py127) (fun_app$f (fun_app$g insert$ ?v2py61) bot$)) (not (fun_app$a (less_eq$ ?v1py127) (fun_app$f (fun_app$g insert$ ?v2py61) bot$))) (not (= ?v0py147 ?v2py61)))) :pattern ((fun_app$f (fun_app$g insert$ ?v0py147) ?v1py127) (fun_app$a (less_eq$ ?v1py127) (fun_app$f (fun_app$g insert$ ?v2py61) bot$))) )) :named A151))
(assert (! (forall ((?v0py148 A_bool_fun$)) (! (and (or (not (less_eq$a ?v0py148 bot$a)) (= ?v0py148 bot$a)) (or (less_eq$a ?v0py148 bot$a) (not (= ?v0py148 bot$a)))) :pattern ((less_eq$a ?v0py148 bot$a)) )) :named A152))
(assert (! (forall ((?v0py149 A_bool_fun$)) (! (or (not (less_eq$a ?v0py149 bot$a)) (= ?v0py149 bot$a)) :pattern ((less_eq$a ?v0py149 bot$a)) )) :named A153))
(assert (! (forall ((?v0py150 A_set$)) (! (or (not (fun_app$a (less_eq$ ?v0py150) bot$)) (= ?v0py150 bot$)) :pattern ((less_eq$ ?v0py150)) )) :named A154))
(assert (! (forall ((?v0py151 A_bool_fun$)) (! (less_eq$a bot$a ?v0py151) :pattern ((less_eq$a bot$a ?v0py151)) )) :named A155))
(assert (! (forall ((?v0py152 A_set$)) (! (or (finite$ ?v0py152) (not (= ?v0py152 bot$))) :pattern ((finite$ ?v0py152)) )) :named A156))
(assert (! (forall ((?v0py153 A_set$)) (! (or (fun_app$a (less_eq$ ?v0py153) bot$) (fun_app$a (member$ (?v1!59 ?v0py153)) ?v0py153)) :pattern ((less_eq$ ?v0py153)) :pattern ((?v1!59 ?v0py153)) )) :named A157))
(assert (! (finite$ bot$) :named A158))
(assert (! (forall ((?v0py154 A$)(?v1py128 A$)(?v2py62 A$)(?v3py13 A$)) (! (and (or (and (= ?v0py154 ?v2py62) (= ?v1py128 ?v3py13)) (and (= ?v0py154 ?v3py13) (= ?v1py128 ?v2py62)) (not (= (fun_app$f (fun_app$g insert$ ?v0py154) (fun_app$f (fun_app$g insert$ ?v1py128) bot$)) (fun_app$f (fun_app$g insert$ ?v2py62) (fun_app$f (fun_app$g insert$ ?v3py13) bot$))))) (or (= (fun_app$f (fun_app$g insert$ ?v0py154) (fun_app$f (fun_app$g insert$ ?v1py128) bot$)) (fun_app$f (fun_app$g insert$ ?v2py62) (fun_app$f (fun_app$g insert$ ?v3py13) bot$))) (and (or (not (= ?v0py154 ?v2py62)) (not (= ?v1py128 ?v3py13))) (or (not (= ?v0py154 ?v3py13)) (not (= ?v1py128 ?v2py62)))))) :pattern ((fun_app$f (fun_app$g insert$ ?v0py154) (fun_app$f (fun_app$g insert$ ?v1py128) bot$)) (fun_app$f (fun_app$g insert$ ?v2py62) (fun_app$f (fun_app$g insert$ ?v3py13) bot$))) )) :named A159))
(assert (! (forall ((?v0py155 A$)(?v1py129 A$)) (! (and (or (not (fun_app$a (member$ ?v0py155) (fun_app$f (fun_app$g insert$ ?v1py129) bot$))) (= ?v0py155 ?v1py129)) (or (fun_app$a (member$ ?v0py155) (fun_app$f (fun_app$g insert$ ?v1py129) bot$)) (not (= ?v0py155 ?v1py129)))) :pattern ((fun_app$a (member$ ?v0py155) (fun_app$f (fun_app$g insert$ ?v1py129) bot$))) )) :named A160))
(assert (! (forall ((?v0py156 A$)(?v1py130 A$)) (! (or (not (= (fun_app$f (fun_app$g insert$ ?v0py156) bot$) (fun_app$f (fun_app$g insert$ ?v1py130) bot$))) (= ?v0py156 ?v1py130)) :pattern ((fun_app$g insert$ ?v0py156) (fun_app$g insert$ ?v1py130)) )) :named A161))
(assert (! (forall ((?v0py157 A$)(?v1py131 A$)) (! (or (not (fun_app$a (member$ ?v0py157) (fun_app$f (fun_app$g insert$ ?v1py131) bot$))) (= ?v0py157 ?v1py131)) :pattern ((fun_app$a (member$ ?v0py157) (fun_app$f (fun_app$g insert$ ?v1py131) bot$))) )) :named A162))
(assert (! (forall ((?v0py158 A$)(?v1py132 A_set$)) (! (not (= (fun_app$f (fun_app$g insert$ ?v0py158) ?v1py132) bot$)) :pattern ((fun_app$f (fun_app$g insert$ ?v0py158) ?v1py132)) )) :named A163))
(assert (! (forall ((?v0py159 A_set$)) (! (and (or (forall ((?v1py133 A$)) (! (not (fun_app$a (member$ ?v1py133) ?v0py159)) :pattern ((member$ ?v1py133)) )) (not (= ?v0py159 bot$))) (or (= ?v0py159 bot$) (fun_app$a (member$ (?v1!60 ?v0py159)) ?v0py159))) :pattern ((?v1!60 ?v0py159)) )) :named A164))
(assert (! (forall ((?v0py160 A_set$)) (! (or (= ?v0py160 bot$) (fun_app$a (member$ (?v1!61 ?v0py160)) ?v0py160)) :pattern ((?v1!61 ?v0py160)) )) :named A165))
(assert (! (forall ((?v0py161 A_set$)(?v1py134 A$)) (! (or (not (= ?v0py161 bot$)) (not (fun_app$a (member$ ?v1py134) ?v0py161))) :pattern ((fun_app$a (member$ ?v1py134) ?v0py161)) )) :named A166))
(assert (! (forall ((?v0py162 A$)) (! (not (fun_app$a (member$ ?v0py162) bot$)) :pattern ((member$ ?v0py162)) )) :named A167))
(assert (! (forall ((?v0py163 A_set$)(?v1py135 A_set_bool_fun$)) (! (or (not (finite$ ?v0py163)) (fun_app$a ?v1py135 ?v0py163) (not (fun_app$a ?v1py135 bot$)) (and (finite$ (?v3!62 ?v1py135)) (not (fun_app$a (member$ (?v2!63 ?v1py135)) (?v3!62 ?v1py135))) (fun_app$a ?v1py135 (?v3!62 ?v1py135)) (not (fun_app$a ?v1py135 (fun_app$f (fun_app$g insert$ (?v2!63 ?v1py135)) (?v3!62 ?v1py135)))))) :pattern ((fun_app$a ?v1py135 ?v0py163)) )) :named A168))
(assert (! (forall ((?v0py164 A_set$)(?v1py136 A_set_bool_fun$)) (! (or (not (finite$ ?v0py164)) (= ?v0py164 bot$) (fun_app$a ?v1py136 ?v0py164) (not (fun_app$a ?v1py136 (fun_app$f (fun_app$g insert$ (?v2!64 ?v1py136)) bot$))) (and (finite$ (?v3!65 ?v1py136)) (not (= (?v3!65 ?v1py136) bot$)) (not (fun_app$a (member$ (?v2!66 ?v1py136)) (?v3!65 ?v1py136))) (fun_app$a ?v1py136 (?v3!65 ?v1py136)) (not (fun_app$a ?v1py136 (fun_app$f (fun_app$g insert$ (?v2!66 ?v1py136)) (?v3!65 ?v1py136)))))) :pattern ((fun_app$a ?v1py136 ?v0py164)) )) :named A169))
(assert (! (forall ((?v0py165 A_set$)) (! (or (not (finite$ ?v0py165)) (= ?v0py165 bot$) (and (= ?v0py165 (fun_app$f (fun_app$g insert$ (?v2!67 ?v0py165)) (?v1!68 ?v0py165))) (finite$ (?v1!68 ?v0py165)))) :pattern ((?v2!67 ?v0py165)) :pattern ((?v1!68 ?v0py165)) )) :named A170))
(assert (! (forall ((?v0py166 A_set_bool_fun$)(?v1py137 A_set$)) (! (or (fun_app$a ?v0py166 ?v1py137) (and (not (finite$ (?v2!69 ?v0py166))) (not (fun_app$a ?v0py166 (?v2!69 ?v0py166)))) (not (fun_app$a ?v0py166 bot$)) (and (finite$ (?v3!70 ?v0py166)) (not (fun_app$a (member$ (?v2!71 ?v0py166)) (?v3!70 ?v0py166))) (fun_app$a ?v0py166 (?v3!70 ?v0py166)) (not (fun_app$a ?v0py166 (fun_app$f (fun_app$g insert$ (?v2!71 ?v0py166)) (?v3!70 ?v0py166)))))) :pattern ((fun_app$a ?v0py166 ?v1py137)) )) :named A171))
(assert (! (forall ((?v0py167 A_set$)) (! (and (or (not (finite$ ?v0py167)) (= ?v0py167 bot$) (and (= ?v0py167 (fun_app$f (fun_app$g insert$ (?v2!72 ?v0py167)) (?v1!73 ?v0py167))) (finite$ (?v1!73 ?v0py167)))) (or (finite$ ?v0py167) (and (not (= ?v0py167 bot$)) (forall ((?v1py138 A_set$)(?v2py63 A$)) (! (or (not (finite$ ?v1py138)) (not (= ?v0py167 (fun_app$f (fun_app$g insert$ ?v2py63) ?v1py138)))) :pattern ((fun_app$f (fun_app$g insert$ ?v2py63) ?v1py138)) ))))) :pattern ((?v1!73 ?v0py167)) :pattern ((?v2!72 ?v0py167)) )) :named A172))
(assert (! (forall ((?v0py168 A_set$)(?v1py139 A$)) (! (or (= ?v0py168 bot$) (not (fun_app$a (less_eq$ ?v0py168) (fun_app$f (fun_app$g insert$ ?v1py139) bot$))) (= ?v0py168 (fun_app$f (fun_app$g insert$ ?v1py139) bot$))) :pattern ((fun_app$a (less_eq$ ?v0py168) (fun_app$f (fun_app$g insert$ ?v1py139) bot$))) )) :named A173))
(assert (! (forall ((?v0py169 A$)(?v1py140 A_set$)) (! (= (fun_app$f (fun_app$g insert$ ?v0py169) ?v1py140) (fun_app$f (sup$ (fun_app$f (fun_app$g insert$ ?v0py169) bot$)) ?v1py140)) :pattern ((fun_app$f (fun_app$g insert$ ?v0py169) ?v1py140)) :pattern ((fun_app$f (sup$ (fun_app$f (fun_app$g insert$ ?v0py169) bot$)) ?v1py140)) )) :named A174))
(assert (! (forall ((?v0py170 A_set$)(?v1py141 A_set$)(?v2py64 A$)) (! (and (or (not (= (fun_app$f (sup$ ?v0py170) ?v1py141) (fun_app$f (fun_app$g insert$ ?v2py64) bot$))) (and (= ?v0py170 bot$) (= ?v1py141 (fun_app$f (fun_app$g insert$ ?v2py64) bot$))) (and (= ?v0py170 (fun_app$f (fun_app$g insert$ ?v2py64) bot$)) (= ?v1py141 bot$)) (and (= ?v0py170 (fun_app$f (fun_app$g insert$ ?v2py64) bot$)) (= ?v1py141 (fun_app$f (fun_app$g insert$ ?v2py64) bot$)))) (or (= (fun_app$f (sup$ ?v0py170) ?v1py141) (fun_app$f (fun_app$g insert$ ?v2py64) bot$)) (and (or (not (= ?v0py170 bot$)) (not (= ?v1py141 (fun_app$f (fun_app$g insert$ ?v2py64) bot$)))) (or (not (= ?v1py141 bot$)) (not (= ?v0py170 (fun_app$f (fun_app$g insert$ ?v2py64) bot$)))) (or (not (= ?v0py170 (fun_app$f (fun_app$g insert$ ?v2py64) bot$))) (not (= ?v1py141 (fun_app$f (fun_app$g insert$ ?v2py64) bot$))))))) :pattern ((fun_app$f (sup$ ?v0py170) ?v1py141) (fun_app$g insert$ ?v2py64)) )) :named A175))
(assert (! (forall ((?v0py171 A$)(?v1py142 A_set$)(?v2py65 A_set$)) (! (and (or (and (= ?v1py142 bot$) (= ?v2py65 (fun_app$f (fun_app$g insert$ ?v0py171) bot$))) (and (= ?v1py142 (fun_app$f (fun_app$g insert$ ?v0py171) bot$)) (= ?v2py65 (fun_app$f (fun_app$g insert$ ?v0py171) bot$))) (and (= ?v1py142 (fun_app$f (fun_app$g insert$ ?v0py171) bot$)) (= ?v2py65 bot$)) (not (= (fun_app$f (fun_app$g insert$ ?v0py171) bot$) (fun_app$f (sup$ ?v1py142) ?v2py65)))) (or (= (fun_app$f (fun_app$g insert$ ?v0py171) bot$) (fun_app$f (sup$ ?v1py142) ?v2py65)) (and (or (not (= ?v1py142 bot$)) (not (= ?v2py65 (fun_app$f (fun_app$g insert$ ?v0py171) bot$)))) (or (not (= ?v2py65 bot$)) (not (= ?v1py142 (fun_app$f (fun_app$g insert$ ?v0py171) bot$)))) (or (not (= ?v1py142 (fun_app$f (fun_app$g insert$ ?v0py171) bot$))) (not (= ?v2py65 (fun_app$f (fun_app$g insert$ ?v0py171) bot$))))))) :pattern ((fun_app$f (sup$ ?v1py142) ?v2py65) (fun_app$g insert$ ?v0py171)) )) :named A176))
(assert (! (= (fun_app$c lset$ lNil$) bot$) :named A177))
(assert (! (= lset$ (gen_lset$ bot$)) :named A178))
(assert (! (forall ((?v0py172 A$)) (! (= (the_elem$ (fun_app$f (fun_app$g insert$ ?v0py172) bot$)) ?v0py172) :pattern ((fun_app$g insert$ ?v0py172)) )) :named A179))
(assert (! (forall ((?v0py173 A_set$)(?v1py143 A$)) (! (or (atmost_one$ ?v0py173) (not (= ?v0py173 (fun_app$f (fun_app$g insert$ ?v1py143) bot$)))) :pattern ((atmost_one$ ?v0py173) (fun_app$g insert$ ?v1py143)) )) :named A180))
(assert (! (= bot$ (collect$ bot$a)) :named A181))
(assert (! (forall ((?v0py174 A_set$)(?v1py144 A$)(?v2py66 A$)) (! (or (not (fun_app$a (member$ ?v2py66) ?v0py174)) (= ?v2py66 ?v1py144) (not (atmost_one$ ?v0py174)) (not (fun_app$a (member$ ?v1py144) ?v0py174))) :pattern ((fun_app$a (member$ ?v2py66) ?v0py174) (fun_app$a (member$ ?v1py144) ?v0py174)) )) :named A182))
(assert (! (forall ((?v0py175 A_set$)) (! (and (or (not (atmost_one$ ?v0py175)) (forall ((?v1py145 A$)(?v2py67 A$)) (! (or (not (fun_app$a (member$ ?v2py67) ?v0py175)) (= ?v1py145 ?v2py67) (not (fun_app$a (member$ ?v1py145) ?v0py175))) :pattern ((member$ ?v2py67) (member$ ?v1py145)) ))) (or (atmost_one$ ?v0py175) (and (fun_app$a (member$ (?v1!75 ?v0py175)) ?v0py175) (fun_app$a (member$ (?v2!74 ?v0py175)) ?v0py175) (not (= (?v1!75 ?v0py175) (?v2!74 ?v0py175)))))) :pattern ((atmost_one$ ?v0py175)) :pattern ((?v1!75 ?v0py175)) :pattern ((?v2!74 ?v0py175)) )) :named A183))
(assert (! (forall ((?v0py176 A_set$)) (! (or (not (= ?v0py176 bot$)) (atmost_one$ ?v0py176)) :pattern ((atmost_one$ ?v0py176)) )) :named A184))
(assert (! (forall ((?v0py177 A_a_set_a_set_fun_fun$)(?v1py146 A_set$)(?v2py68 A_set$)(?v3py14 A$)) (! (or (not (comp_fun_idem$ ?v0py177)) (not (finite$ ?v1py146)) (= (fun_app$f (fun_app$h (fold$ ?v0py177) ?v2py68) (fun_app$f (fun_app$g insert$ ?v3py14) ?v1py146)) (fun_app$f (fun_app$g ?v0py177 ?v3py14) (fun_app$f (fun_app$h (fold$ ?v0py177) ?v2py68) ?v1py146)))) :pattern ((fun_app$f (fun_app$h (fold$ ?v0py177) ?v2py68) (fun_app$f (fun_app$g insert$ ?v3py14) ?v1py146))) :pattern ((fun_app$f (fun_app$g ?v0py177 ?v3py14) (fun_app$f (fun_app$h (fold$ ?v0py177) ?v2py68) ?v1py146))) )) :named A185))
(assert (! (forall ((?v0py178 A_a_set_a_set_fun_fun$)(?v1py147 A_set$)(?v2py69 A_set$)(?v3py15 A$)) (! (or (not (comp_fun_idem$ ?v0py178)) (not (finite$ ?v1py147)) (= (fun_app$f (fun_app$h (fold$ ?v0py178) ?v2py69) (fun_app$f (fun_app$g insert$ ?v3py15) ?v1py147)) (fun_app$f (fun_app$h (fold$ ?v0py178) (fun_app$f (fun_app$g ?v0py178 ?v3py15) ?v2py69)) ?v1py147))) :pattern ((fun_app$f (fun_app$h (fold$ ?v0py178) ?v2py69) (fun_app$f (fun_app$g insert$ ?v3py15) ?v1py147))) :pattern ((fun_app$f (fun_app$h (fold$ ?v0py178) (fun_app$f (fun_app$g ?v0py178 ?v3py15) ?v2py69)) ?v1py147)) )) :named A186))
(assert (! (comp_fun_idem$ insert$) :named A187))
(check-sat)
(get-info :reason-unknown)
;z3 -T:600 group_026/ematching/tmp/x2015_09_10_16_50_27_197_1131886.smt_in_std_unique_aug-gt_unsat-full.smt2
;unknown
;((:reason-unknown "smt tactic failed to show goal to be sat/unsat (incomplete quantifiers)"))
