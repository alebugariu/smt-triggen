(set-info :smt-lib-version 2.6)
(set-info :source | VCC and HAVOC benchmarks. Contributed by Nikolaj Bjorner, Leonardo de Moura, Michal Moskal, and Shaz Qadeer. |)
(set-info :category "industrial")
(set-info :status unsat)
(set-logic UFNIA)
(set-option :smt.auto-config false)
(set-option :smt.mbqi false)
(set-option :sat.random_seed 488)
(set-option :smt.random_seed 599)
(set-option :nlsat.seed 611)
(set-option :memory_max_size 6000)
(declare-fun x (Int Int) Int)
(declare-sort RegExStr 0)
(declare-sort RMode 0)
(declare-fun true_1 () Int)
(declare-fun false_1 () Int)
(declare-fun intGreater (Int Int) Int)
(declare-fun intAtLeast (Int Int) Int)
(declare-fun intAtMost (Int Int) Int)
(declare-fun intLess (Int Int) Int)
(declare-fun anyNeq (Int Int) Int)
(declare-fun anyEqual (Int Int) Int)
(declare-fun boolNot (Int) Int)
(declare-fun boolOr (Int Int) Int)
(declare-fun boolAnd (Int Int) Int)
(declare-fun boolImplies (Int Int) Int)
(declare-fun boolIff (Int Int) Int)
(declare-fun select2 (Int Int Int) Int)
(declare-fun store2 (Int Int Int Int) Int)
(declare-fun select1 (Int Int) Int)
(declare-fun store1 (Int Int Int) Int)
(declare-fun set_in (Int Int) Int)
(declare-fun AbstractValues (Int) Int)
(declare-fun dot (Int Int) Int)
(declare-fun node_abstractValue () Int)
(declare-fun ValidQueue (Int Int Int) Int)
(declare-fun inv (Int Int Int Int) Int)
(declare-fun queue () Int)
(declare-fun typed (Int Int) Int)
(declare-fun is (Int Int) Int)
(declare-fun node () Int)
(declare-fun AbstractValue (Int Int Int) Int)
(declare-fun mutable () Int)
(declare-fun status_tag () Int)
(declare-fun good_meta (Int) Int)
(declare-fun queue_abstractValue () Int)
(declare-fun WellformedNodes2 (Int Int Int Int Int) Int)
(declare-fun owned_tag () Int)
(declare-fun seq_equal (Int Int) Int)
(declare-fun seq_append (Int Int) Int)
(declare-fun seq_remove (Int Int) Int)
(declare-fun seq_singleton (Int) Int)
(declare-fun node_data () Int)
(declare-fun node_next () Int)
(declare-fun ref (Int) Int)
(declare-fun null () Int)
(declare-fun WellformedNodes (Int Int Int) Int)
(declare-fun queue_tail () Int)
(declare-fun seq_empty () Int)
(declare-fun node_prev () Int)
(declare-fun set_empty () Int)
(declare-fun ValidNode (Int Int Int) Int)
(declare-fun queue_head () Int)
(declare-fun seq () Int)
(declare-fun ts_is_array_elt (Int) Int)
(declare-fun ts_tag () Int)
(declare-fun ts_path (Int) Int)
(declare-fun emb (Int Int) Int)
(declare-fun ptr (Int Int) Int)
(declare-fun field_offset (Int) Int)
(declare-fun ptr_to (Int) Int)
(declare-fun in_extent_of (Int Int Int) Int)
(declare-fun in_full_extent_of (Int Int) Int)
(declare-fun ptr_level (Int) Int)
(declare-fun kind_composite () Int)
(declare-fun kind_of (Int) Int)
(declare-fun sizeof (Int) Int)
(declare-fun void () Int)
(declare-fun seq_length (Int) Int)
(declare-fun seq_index (Int Int) Int)
(declare-fun seq_drop (Int Int) Int)
(declare-fun seq_take (Int Int) Int)
(declare-fun dont_instantiate_int (Int) Int)
(declare-fun is_primitive (Int) Int)
(declare-fun array_range (Int Int Int) Int)
(declare-fun idx (Int Int Int) Int)
(declare-fun array (Int Int) Int)
(declare-fun is_array (Int Int Int Int) Int)
(declare-fun kind_array () Int)
(declare-fun array_length (Int) Int)
(declare-fun element_type (Int) Int)
(declare-fun set_disjoint (Int Int) Int)
(declare-fun set_eq (Int Int) Int)
(declare-fun dont_instantiate (Int) Int)
(declare-fun set_subset (Int Int) Int)
(declare-fun set_subtraction (Int Int) Int)
(declare-fun set_union (Int Int) Int)
(declare-fun set_singleton (Int) Int)
(declare-fun full_extent (Int) Int)
(declare-fun consistent () Int)
(declare-fun good_state (Int) Int)
(declare-fun typ (Int) Int)
(declare-fun ts_typed (Int) Int)
(declare-fun ts_emb (Int) Int)
(declare-fun int () Int)
(declare-fun kind_primitive () Int)
(declare-fun map_t (Int Int) Int)
(declare-fun map_range (Int) Int)
(declare-fun map_domain (Int) Int)
(declare-fun unptr_to (Int) Int)
(declare-fun hasowner_tag () Int)
(declare-fun committed () Int)
(declare-fun ptrset () Int)
(declare-fun to () Int)
(declare-fun state_19 () Int)
(declare-fun meta_11 () Int)
(declare-fun from () Int)
(declare-fun state () Int)
(declare-fun meta () Int)
(declare-fun state_18 () Int)
(declare-fun meta_10 () Int)
(declare-fun instantiate_int (Int) Int)
(declare-fun state_17 () Int)
(declare-fun call15637formal__ls_0 () Int)
(declare-fun meta_9 () Int)
(declare-fun nod_0 () Int)
(declare-fun state_16 () Int)
(declare-fun state_15 () Int)
(declare-fun state_14 () Int)
(declare-fun state_13 () Int)
(declare-fun state_12 () Int)
(declare-fun state_11 () Int)
(declare-fun meta_8 () Int)
(declare-fun meta_7 () Int)
(declare-fun call15050formal_targetSet_0 () Int)
(declare-fun state_10 () Int)
(declare-fun call15050formal_t_0 () Int)
(declare-fun meta_6 () Int)
(declare-fun call14971formal__ls_0 () Int)
(declare-fun state_9 () Int)
(declare-fun state_8 () Int)
(declare-fun meta_5 () Int)
(declare-fun state_7 () Int)
(declare-fun meta_4 () Int)
(declare-fun state_6 () Int)
(declare-fun call14815formal__l_0 () Int)
(declare-fun meta_3 () Int)
(declare-fun state_5 () Int)
(declare-fun state_4 () Int)
(declare-fun call14546formal__l_0 () Int)
(declare-fun meta_2 () Int)
(declare-fun state_3 () Int)
(declare-fun state_2 () Int)
(declare-fun state_1 () Int)
(declare-fun state_0 () Int)
(declare-fun meta_1 () Int)
(declare-fun meta_0 () Int)
(declare-fun ?o_1!3 (Int Int) Int)
(declare-fun ?i_1!5 (Int Int Int Int) Int)
(declare-fun ?i!4 (Int Int Int Int) Int)
(declare-fun ?n!10 (Int Int Int) Int)
(declare-fun ?i_1!6 (Int Int Int Int Int) Int)
(declare-fun ?o_1!1 (Int Int) Int)
(declare-fun ?o_1!2 (Int Int) Int)
(declare-fun ?n!11 (Int Int Int Int Int) Int)
(declare-fun ?j!7 (Int Int) Int)
(declare-fun ?n!8 (Int Int Int) Int)
(declare-fun ?n!9 (Int Int Int) Int)
(declare-fun ?r!0 (Int Int) Int)
(declare-fun ?n!12 (Int Int) Int)
(declare-fun ?l!35 () Int)
(declare-fun ?l!36 () Int)
(declare-fun ?l!37 () Int)
(declare-fun ?l!49 () Int)
(declare-fun ?l!50 () Int)
(declare-fun ?l!51 () Int)
(declare-fun ?n!40 () Int)
(declare-fun ?p_1!27 () Int)
(declare-fun ?p_1!28 () Int)
(declare-fun ?p_1!30 () Int)
(declare-fun ?p_1!31 () Int)
(declare-fun ?p_1!34 () Int)
(declare-fun ?p_1!39 () Int)
(declare-fun ?p_1!48 () Int)
(declare-fun ?p_1!52 () Int)
(declare-fun ?p_1!53 () Int)
(declare-fun ?r!14 () Int)
(declare-fun ?r!16 () Int)
(declare-fun ?r!17 () Int)
(declare-fun ?r!18 () Int)
(declare-fun ?r!19 () Int)
(declare-fun ?r!20 () Int)
(declare-fun ?r!21 () Int)
(declare-fun ?r!22 () Int)
(declare-fun ?r!24 () Int)
(declare-fun ?r!25 () Int)
(declare-fun ?r!26 () Int)
(declare-fun ?r!38 () Int)
(declare-fun ?r!41 () Int)
(declare-fun ?r!42 () Int)
(declare-fun ?r!43 () Int)
(declare-fun ?r!44 () Int)
(declare-fun ?r!45 () Int)
(declare-fun ?r!46 () Int)
(declare-fun ?r!47 () Int)
(declare-fun ?x_2!13 () Int)
(declare-fun ?x_2!15 () Int)
(declare-fun ?x_2!23 () Int)
(declare-fun ?x_2!29 () Int)
(declare-fun ?x_2!32 () Int)
(declare-fun ?x_2!33 () Int)
(declare-fun ?x_2!54 () Int)
(assert (! (forall ((?Apy0 Int)(?ipy0 Int)(?jpy0 Int)(?vpy0 Int)) (! (or (= ?ipy0 ?jpy0) (= (select1 (store1 ?Apy0 ?ipy0 ?vpy0) ?jpy0) (select1 ?Apy0 ?jpy0))) :pattern ((select1 (store1 ?Apy0 ?ipy0 ?vpy0) ?jpy0)) )) :named A0_0))
(assert (! (forall ((?Apy1 Int)(?ipy1 Int)(?vpy1 Int)) (! (= (select1 (store1 ?Apy1 ?ipy1 ?vpy1) ?ipy1) ?vpy1) :pattern ((store1 ?Apy1 ?ipy1 ?vpy1)) )) :named A0_1))
(assert (! (forall ((?Apy2 Int)(?opy0 Int)(?fpy0 Int)(?ppy0 Int)(?gpy0 Int)(?vpy2 Int)) (! (or (= ?fpy0 ?gpy0) (= (select2 (store2 ?Apy2 ?opy0 ?fpy0 ?vpy2) ?ppy0 ?gpy0) (select2 ?Apy2 ?ppy0 ?gpy0))) :pattern ((select2 (store2 ?Apy2 ?opy0 ?fpy0 ?vpy2) ?ppy0 ?gpy0)) )) :named A0_2))
(assert (! (forall ((?Apy3 Int)(?opy1 Int)(?fpy1 Int)(?ppy1 Int)(?gpy1 Int)(?vpy3 Int)) (! (or (= ?opy1 ?ppy1) (= (select2 (store2 ?Apy3 ?opy1 ?fpy1 ?vpy3) ?ppy1 ?gpy1) (select2 ?Apy3 ?ppy1 ?gpy1))) :pattern ((select2 (store2 ?Apy3 ?opy1 ?fpy1 ?vpy3) ?ppy1 ?gpy1)) )) :named A0_3))
(assert (! (forall ((?Apy4 Int)(?opy2 Int)(?fpy2 Int)(?vpy4 Int)) (! (= (select2 (store2 ?Apy4 ?opy2 ?fpy2 ?vpy4) ?opy2 ?fpy2) ?vpy4) :pattern ((store2 ?Apy4 ?opy2 ?fpy2 ?vpy4)) )) :named A0_4))
(assert (! (forall ((?tpy0 Int)(?upy0 Int)(?vpy5 Int)) (! (or (not (= (x ?tpy0 ?upy0) true_1)) (not (= (x ?upy0 ?vpy5) true_1)) (= (x ?tpy0 ?vpy5) true_1)) :pattern ((x ?tpy0 ?upy0) (x ?upy0 ?vpy5)) )) :named A0_5))
(assert (! (forall ((?tpy1 Int)(?upy1 Int)) (! (or (= ?tpy1 ?upy1) (not (= (x ?tpy1 ?upy1) true_1)) (not (= (x ?upy1 ?tpy1) true_1))) :pattern ((x ?tpy1 ?upy1) (x ?upy1 ?tpy1)) )) :named A0_6))
(assert (! (forall ((?tpy2 Int)) (! (= (x ?tpy2 ?tpy2) true_1) :pattern ((x ?tpy2 ?tpy2)) )) :named A0_7))
(assert (! (forall ((?x_1py0 Int)(?ypy0 Int)) (! (and (or (not (= ?x_1py0 ?ypy0)) (not (= (anyNeq ?x_1py0 ?ypy0) true_1))) (or (= ?x_1py0 ?ypy0) (= (anyNeq ?x_1py0 ?ypy0) true_1))) :pattern ((anyNeq ?x_1py0 ?ypy0)) )) :named A0_8))
(assert (! (forall ((?x_1py1 Int)(?ypy1 Int)) (! (and (or (= ?x_1py1 true_1) (= ?ypy1 true_1) (not (= (boolOr ?x_1py1 ?ypy1) true_1))) (or (= (boolOr ?x_1py1 ?ypy1) true_1) (and (not (= ?x_1py1 true_1)) (not (= ?ypy1 true_1))))) :pattern ((boolOr ?x_1py1 ?ypy1)) )) :named A0_9))
(assert (! (forall ((?x_1py2 Int)(?ypy2 Int)) (! (and (or (= ?ypy2 true_1) (not (= ?x_1py2 true_1)) (not (= (boolImplies ?x_1py2 ?ypy2) true_1))) (or (= (boolImplies ?x_1py2 ?ypy2) true_1) (and (= ?x_1py2 true_1) (not (= ?ypy2 true_1))))) :pattern ((boolImplies ?x_1py2 ?ypy2)) )) :named A0_10))
(assert (! (forall ((?x_1py3 Int)(?ypy3 Int)) (! (and (or (not (<= ?x_1py3 ?ypy3)) (not (= (intGreater ?x_1py3 ?ypy3) true_1))) (or (<= ?x_1py3 ?ypy3) (= (intGreater ?x_1py3 ?ypy3) true_1))) :pattern ((intGreater ?x_1py3 ?ypy3)) )) :named A0_11))
(assert (! (forall ((?x_1py4 Int)(?ypy4 Int)) (! (and (or (not (<= ?ypy4 ?x_1py4)) (not (= (intLess ?x_1py4 ?ypy4) true_1))) (or (= (intLess ?x_1py4 ?ypy4) true_1) (<= ?ypy4 ?x_1py4))) :pattern ((intLess ?x_1py4 ?ypy4)) )) :named A0_12))
(assert (! (forall ((?x_1py5 Int)(?ypy5 Int)) (! (and (or (not (= (anyEqual ?x_1py5 ?ypy5) true_1)) (= ?x_1py5 ?ypy5)) (or (= (anyEqual ?x_1py5 ?ypy5) true_1) (not (= ?x_1py5 ?ypy5)))) :pattern ((anyEqual ?x_1py5 ?ypy5)) )) :named A0_13))
(assert (! (forall ((?x_1py6 Int)(?ypy6 Int)) (! (and (or (not (= (boolAnd ?x_1py6 ?ypy6) true_1)) (and (= ?x_1py6 true_1) (= ?ypy6 true_1))) (or (= (boolAnd ?x_1py6 ?ypy6) true_1) (not (= ?x_1py6 true_1)) (not (= ?ypy6 true_1)))) :pattern ((boolAnd ?x_1py6 ?ypy6)) )) :named A0_14))
(assert (! (forall ((?x_1py7 Int)(?ypy7 Int)) (! (and (or (not (= (boolIff ?x_1py7 ?ypy7) true_1)) (and (or (not (= ?x_1py7 true_1)) (= ?ypy7 true_1)) (or (= ?x_1py7 true_1) (not (= ?ypy7 true_1))))) (or (= (boolIff ?x_1py7 ?ypy7) true_1) (and (or (= ?x_1py7 true_1) (= ?ypy7 true_1)) (or (not (= ?x_1py7 true_1)) (not (= ?ypy7 true_1)))))) :pattern ((boolIff ?x_1py7 ?ypy7)) )) :named A0_15))
(assert (! (forall ((?x_1py8 Int)(?ypy8 Int)) (! (and (or (not (= (intAtLeast ?x_1py8 ?ypy8) true_1)) (<= ?ypy8 ?x_1py8)) (or (= (intAtLeast ?x_1py8 ?ypy8) true_1) (not (<= ?ypy8 ?x_1py8)))) :pattern ((intAtLeast ?x_1py8 ?ypy8)) )) :named A0_16))
(assert (! (forall ((?x_1py9 Int)(?ypy9 Int)) (! (and (or (not (= (intAtMost ?x_1py9 ?ypy9) true_1)) (<= ?x_1py9 ?ypy9)) (or (= (intAtMost ?x_1py9 ?ypy9) true_1) (not (<= ?x_1py9 ?ypy9)))) :pattern ((intAtMost ?x_1py9 ?ypy9)) )) :named A0_17))
(assert (! (forall ((?x_1py10 Int)) (! (and (or (not (= ?x_1py10 true_1)) (not (= (boolNot ?x_1py10) true_1))) (or (= ?x_1py10 true_1) (= (boolNot ?x_1py10) true_1))) :pattern ((boolNot ?x_1py10)) )) :named A0_18))
(assert (! (not (= false_1 true_1)) :named A0_19))
(assert (! (= (field_offset node_abstractValue) 16) :named A1_0))
(assert (! (= (field_offset node_data) 8) :named A1_1))
(assert (! (= (field_offset node_next) 0) :named A1_2))
(assert (! (= (field_offset node_prev) 20) :named A1_3))
(assert (! (= (field_offset queue_abstractValue) 16) :named A1_4))
(assert (! (= (field_offset queue_head) 0) :named A1_5))
(assert (! (= (field_offset queue_tail) 8) :named A1_6))
(assert (! (= (is_primitive int) true_1) :named A1_7))
(assert (! (= (is_primitive seq) true_1) :named A1_8))
(assert (! (= (kind_of node) kind_composite) :named A1_9))
(assert (! (= (kind_of queue) kind_composite) :named A1_10))
(assert (! (= (ptr_level int) 0) :named A1_11))
(assert (! (= (ptr_level node) 0) :named A1_12))
(assert (! (= (ptr_level queue) 0) :named A1_13))
(assert (! (= (ptr_level void) 0) :named A1_14))
(assert (! (= (seq_length seq_empty) 0) :named A1_15))
(assert (! (= (sizeof int) 4) :named A1_16))
(assert (! (= (sizeof node) 28) :named A1_17))
(assert (! (= (sizeof queue) 20) :named A1_18))
(assert (! (= (sizeof seq) 4) :named A1_19))
(assert (! (= null (ptr void 0)) :named A1_20))
(assert (! (and (not (= int void)) (not (= int ptrset)) (not (= int kind_composite)) (not (= int kind_primitive)) (not (= int kind_array)) (not (= int mutable)) (not (= int consistent)) (not (= int committed)) (not (= int status_tag)) (not (= int ts_tag)) (not (= int owned_tag)) (not (= int hasowner_tag)) (not (= int seq)) (not (= int node)) (not (= int node_next)) (not (= int node_data)) (not (= int node_abstractValue)) (not (= int node_prev)) (not (= int queue)) (not (= int queue_head)) (not (= int queue_tail)) (not (= int queue_abstractValue)) (not (= void ptrset)) (not (= void kind_composite)) (not (= void kind_primitive)) (not (= void kind_array)) (not (= void mutable)) (not (= void consistent)) (not (= void committed)) (not (= void status_tag)) (not (= void ts_tag)) (not (= void owned_tag)) (not (= void hasowner_tag)) (not (= void seq)) (not (= void node)) (not (= void node_next)) (not (= void node_data)) (not (= void node_abstractValue)) (not (= void node_prev)) (not (= void queue)) (not (= void queue_head)) (not (= void queue_tail)) (not (= void queue_abstractValue)) (not (= ptrset kind_composite)) (not (= ptrset kind_primitive)) (not (= ptrset kind_array)) (not (= ptrset mutable)) (not (= ptrset consistent)) (not (= ptrset committed)) (not (= ptrset status_tag)) (not (= ptrset ts_tag)) (not (= ptrset owned_tag)) (not (= ptrset hasowner_tag)) (not (= ptrset seq)) (not (= ptrset node)) (not (= ptrset node_next)) (not (= ptrset node_data)) (not (= ptrset node_abstractValue)) (not (= ptrset node_prev)) (not (= ptrset queue)) (not (= ptrset queue_head)) (not (= ptrset queue_tail)) (not (= ptrset queue_abstractValue)) (not (= kind_composite kind_primitive)) (not (= kind_composite kind_array)) (not (= kind_composite mutable)) (not (= kind_composite consistent)) (not (= kind_composite committed)) (not (= kind_composite status_tag)) (not (= kind_composite ts_tag)) (not (= kind_composite owned_tag)) (not (= kind_composite hasowner_tag)) (not (= kind_composite seq)) (not (= kind_composite node)) (not (= kind_composite node_next)) (not (= kind_composite node_data)) (not (= kind_composite node_abstractValue)) (not (= kind_composite node_prev)) (not (= kind_composite queue)) (not (= kind_composite queue_head)) (not (= kind_composite queue_tail)) (not (= kind_composite queue_abstractValue)) (not (= kind_primitive kind_array)) (not (= kind_primitive mutable)) (not (= kind_primitive consistent)) (not (= kind_primitive committed)) (not (= kind_primitive status_tag)) (not (= kind_primitive ts_tag)) (not (= kind_primitive owned_tag)) (not (= kind_primitive hasowner_tag)) (not (= kind_primitive seq)) (not (= kind_primitive node)) (not (= kind_primitive node_next)) (not (= kind_primitive node_data)) (not (= kind_primitive node_abstractValue)) (not (= kind_primitive node_prev)) (not (= kind_primitive queue)) (not (= kind_primitive queue_head)) (not (= kind_primitive queue_tail)) (not (= kind_primitive queue_abstractValue)) (not (= kind_array mutable)) (not (= kind_array consistent)) (not (= kind_array committed)) (not (= kind_array status_tag)) (not (= kind_array ts_tag)) (not (= kind_array owned_tag)) (not (= kind_array hasowner_tag)) (not (= kind_array seq)) (not (= kind_array node)) (not (= kind_array node_next)) (not (= kind_array node_data)) (not (= kind_array node_abstractValue)) (not (= kind_array node_prev)) (not (= kind_array queue)) (not (= kind_array queue_head)) (not (= kind_array queue_tail)) (not (= kind_array queue_abstractValue)) (not (= mutable consistent)) (not (= mutable committed)) (not (= mutable status_tag)) (not (= mutable ts_tag)) (not (= mutable owned_tag)) (not (= mutable hasowner_tag)) (not (= mutable seq)) (not (= mutable node)) (not (= mutable node_next)) (not (= mutable node_data)) (not (= mutable node_abstractValue)) (not (= mutable node_prev)) (not (= mutable queue)) (not (= mutable queue_head)) (not (= mutable queue_tail)) (not (= mutable queue_abstractValue)) (not (= consistent committed)) (not (= consistent status_tag)) (not (= consistent ts_tag)) (not (= consistent owned_tag)) (not (= consistent hasowner_tag)) (not (= consistent seq)) (not (= consistent node)) (not (= consistent node_next)) (not (= consistent node_data)) (not (= consistent node_abstractValue)) (not (= consistent node_prev)) (not (= consistent queue)) (not (= consistent queue_head)) (not (= consistent queue_tail)) (not (= consistent queue_abstractValue)) (not (= committed status_tag)) (not (= committed ts_tag)) (not (= committed owned_tag)) (not (= committed hasowner_tag)) (not (= committed seq)) (not (= committed node)) (not (= committed node_next)) (not (= committed node_data)) (not (= committed node_abstractValue)) (not (= committed node_prev)) (not (= committed queue)) (not (= committed queue_head)) (not (= committed queue_tail)) (not (= committed queue_abstractValue)) (not (= status_tag ts_tag)) (not (= status_tag owned_tag)) (not (= status_tag hasowner_tag)) (not (= status_tag seq)) (not (= status_tag node)) (not (= status_tag node_next)) (not (= status_tag node_data)) (not (= status_tag node_abstractValue)) (not (= status_tag node_prev)) (not (= status_tag queue)) (not (= status_tag queue_head)) (not (= status_tag queue_tail)) (not (= status_tag queue_abstractValue)) (not (= ts_tag owned_tag)) (not (= ts_tag hasowner_tag)) (not (= ts_tag seq)) (not (= ts_tag node)) (not (= ts_tag node_next)) (not (= ts_tag node_data)) (not (= ts_tag node_abstractValue)) (not (= ts_tag node_prev)) (not (= ts_tag queue)) (not (= ts_tag queue_head)) (not (= ts_tag queue_tail)) (not (= ts_tag queue_abstractValue)) (not (= owned_tag hasowner_tag)) (not (= owned_tag seq)) (not (= owned_tag node)) (not (= owned_tag node_next)) (not (= owned_tag node_data)) (not (= owned_tag node_abstractValue)) (not (= owned_tag node_prev)) (not (= owned_tag queue)) (not (= owned_tag queue_head)) (not (= owned_tag queue_tail)) (not (= owned_tag queue_abstractValue)) (not (= hasowner_tag seq)) (not (= hasowner_tag node)) (not (= hasowner_tag node_next)) (not (= hasowner_tag node_data)) (not (= hasowner_tag node_abstractValue)) (not (= hasowner_tag node_prev)) (not (= hasowner_tag queue)) (not (= hasowner_tag queue_head)) (not (= hasowner_tag queue_tail)) (not (= hasowner_tag queue_abstractValue)) (not (= seq node)) (not (= seq node_next)) (not (= seq node_data)) (not (= seq node_abstractValue)) (not (= seq node_prev)) (not (= seq queue)) (not (= seq queue_head)) (not (= seq queue_tail)) (not (= seq queue_abstractValue)) (not (= node node_next)) (not (= node node_data)) (not (= node node_abstractValue)) (not (= node node_prev)) (not (= node queue)) (not (= node queue_head)) (not (= node queue_tail)) (not (= node queue_abstractValue)) (not (= node_next node_data)) (not (= node_next node_abstractValue)) (not (= node_next node_prev)) (not (= node_next queue)) (not (= node_next queue_head)) (not (= node_next queue_tail)) (not (= node_next queue_abstractValue)) (not (= node_data node_abstractValue)) (not (= node_data node_prev)) (not (= node_data queue)) (not (= node_data queue_head)) (not (= node_data queue_tail)) (not (= node_data queue_abstractValue)) (not (= node_abstractValue node_prev)) (not (= node_abstractValue queue)) (not (= node_abstractValue queue_head)) (not (= node_abstractValue queue_tail)) (not (= node_abstractValue queue_abstractValue)) (not (= node_prev queue)) (not (= node_prev queue_head)) (not (= node_prev queue_tail)) (not (= node_prev queue_abstractValue)) (not (= queue queue_head)) (not (= queue queue_tail)) (not (= queue queue_abstractValue)) (not (= queue_head queue_tail)) (not (= queue_head queue_abstractValue)) (not (= queue_tail queue_abstractValue))) :named A1_21))
(assert (! (forall ((?Mpy0 Int)(?ppy2 Int)(?Tpy0 Int)(?szpy0 Int)) (! (and (or (not (= (is_array ?Mpy0 ?ppy2 ?Tpy0 ?szpy0) true_1)) (and (= (is ?ppy2 ?Tpy0) true_1) (forall ((?ipy2 Int)) (! (or (<= ?szpy0 ?ipy2) (not (<= 0 ?ipy2)) (and (= (ts_is_array_elt (select2 ?Mpy0 (idx ?ppy2 ?ipy2 ?Tpy0) ts_tag)) true_1) (= (typed ?Mpy0 (idx ?ppy2 ?ipy2 ?Tpy0)) true_1))) :pattern ((idx ?ppy2 ?ipy2 ?Tpy0)) )))) (or (= (is_array ?Mpy0 ?ppy2 ?Tpy0 ?szpy0) true_1) (not (= (is ?ppy2 ?Tpy0) true_1)) (and (<= 0 (?i!4 ?szpy0 ?Tpy0 ?ppy2 ?Mpy0)) (not (<= ?szpy0 (?i!4 ?szpy0 ?Tpy0 ?ppy2 ?Mpy0))) (or (not (= (ts_is_array_elt (select2 ?Mpy0 (idx ?ppy2 (?i!4 ?szpy0 ?Tpy0 ?ppy2 ?Mpy0) ?Tpy0) ts_tag)) true_1)) (not (= (typed ?Mpy0 (idx ?ppy2 (?i!4 ?szpy0 ?Tpy0 ?ppy2 ?Mpy0) ?Tpy0)) true_1)))))) :pattern ((is_array ?Mpy0 ?ppy2 ?Tpy0 ?szpy0)) )) :named A1_22))
(assert (! (forall ((?Mpy1 Int)(?ppy3 Int)(?rpy0 Int)(?Tpy1 Int)(?szpy1 Int)) (! (and (or (not (= (in_extent_of ?Mpy1 ?ppy3 (ptr (array ?Tpy1 ?szpy1) ?rpy0)) true_1)) (= ?ppy3 (ptr (array ?Tpy1 ?szpy1) ?rpy0)) (and (<= 0 (?i_1!6 ?szpy1 ?Tpy1 ?rpy0 ?ppy3 ?Mpy1)) (not (<= ?szpy1 (?i_1!6 ?szpy1 ?Tpy1 ?rpy0 ?ppy3 ?Mpy1))) (= (in_extent_of ?Mpy1 ?ppy3 (idx (ptr ?Tpy1 ?rpy0) (?i_1!6 ?szpy1 ?Tpy1 ?rpy0 ?ppy3 ?Mpy1) ?Tpy1)) true_1))) (or (= (in_extent_of ?Mpy1 ?ppy3 (ptr (array ?Tpy1 ?szpy1) ?rpy0)) true_1) (and (not (= ?ppy3 (ptr (array ?Tpy1 ?szpy1) ?rpy0))) (forall ((?i_1py0 Int)) (! (or (<= ?szpy1 ?i_1py0) (not (<= 0 ?i_1py0)) (not (= (in_extent_of ?Mpy1 ?ppy3 (idx (ptr ?Tpy1 ?rpy0) ?i_1py0 ?Tpy1)) true_1))) :pattern ((idx (ptr ?Tpy1 ?rpy0) ?i_1py0 ?Tpy1)) ))))) :pattern ((in_extent_of ?Mpy1 ?ppy3 (ptr (array ?Tpy1 ?szpy1) ?rpy0))) )) :named A1_23))
(assert (! (forall ((?Mpy2 Int)(?rpy1 Int)(?Tpy2 Int)(?szpy2 Int)) (! (or (not (= (typed ?Mpy2 (ptr (array ?Tpy2 ?szpy2) ?rpy1)) true_1)) (and (= (is_array ?Mpy2 (ptr ?Tpy2 ?rpy1) ?Tpy2 ?szpy2) true_1) (forall ((?ipy3 Int)) (! (or (<= ?szpy2 ?ipy3) (not (<= 0 ?ipy3)) (= (emb ?Mpy2 (idx (ptr ?Tpy2 ?rpy1) ?ipy3 ?Tpy2)) (ptr (array ?Tpy2 ?szpy2) ?rpy1))) :pattern ((idx (ptr ?Tpy2 ?rpy1) ?ipy3 ?Tpy2)) )))) :pattern ((typed ?Mpy2 (ptr (array ?Tpy2 ?szpy2) ?rpy1))) )) :named A1_24))
(assert (! (forall ((?Tpy3 Int)(?spy0 Int)) (! (= (array_length (array ?Tpy3 ?spy0)) ?spy0) :pattern ((array ?Tpy3 ?spy0)) )) :named A1_25))
(assert (! (forall ((?Tpy4 Int)(?spy1 Int)) (! (= (element_type (array ?Tpy4 ?spy1)) ?Tpy4) :pattern ((array ?Tpy4 ?spy1)) )) :named A1_26))
(assert (! (forall ((?Tpy5 Int)(?spy2 Int)) (! (= (kind_of (array ?Tpy5 ?spy2)) kind_array) :pattern ((array ?Tpy5 ?spy2)) )) :named A1_27))
(assert (! (forall ((?Tpy6 Int)(?spy3 Int)) (! (= (ptr_level (array ?Tpy6 ?spy3)) 0) :pattern ((array ?Tpy6 ?spy3)) )) :named A1_28))
(assert (! (forall ((?Tpy7 Int)) (! (or (not (= (is_primitive ?Tpy7) true_1)) (forall ((?Mpy3 Int)(?r_1py0 Int)(?ppy4 Int)) (! (and (or (not (= (in_extent_of ?Mpy3 ?ppy4 (ptr ?Tpy7 ?r_1py0)) true_1)) (= ?ppy4 (ptr ?Tpy7 ?r_1py0))) (or (= (in_extent_of ?Mpy3 ?ppy4 (ptr ?Tpy7 ?r_1py0)) true_1) (not (= ?ppy4 (ptr ?Tpy7 ?r_1py0))))) :pattern ((in_extent_of ?Mpy3 ?ppy4 (ptr ?Tpy7 ?r_1py0))) ))) :pattern ((is_primitive ?Tpy7)) )) :named A1_29))
(assert (! (forall ((?Tpy8 Int)) (! (or (not (= (is_primitive ?Tpy8) true_1)) (forall ((?r_1py1 Int)(?ppy5 Int)) (! (and (or (not (= (in_full_extent_of ?ppy5 (ptr ?Tpy8 ?r_1py1)) true_1)) (= ?ppy5 (ptr ?Tpy8 ?r_1py1))) (or (= (in_full_extent_of ?ppy5 (ptr ?Tpy8 ?r_1py1)) true_1) (not (= ?ppy5 (ptr ?Tpy8 ?r_1py1))))) :pattern ((in_full_extent_of ?ppy5 (ptr ?Tpy8 ?r_1py1))) ))) :pattern ((is_primitive ?Tpy8)) )) :named A1_30))
(assert (! (forall ((?apy0 Int)(?bpy0 Int)(?o_1py0 Int)) (! (and (or (= (set_in ?o_1py0 ?apy0) true_1) (= (set_in ?o_1py0 ?bpy0) true_1) (not (= (set_in ?o_1py0 (set_union ?apy0 ?bpy0)) true_1))) (or (= (set_in ?o_1py0 (set_union ?apy0 ?bpy0)) true_1) (and (not (= (set_in ?o_1py0 ?apy0) true_1)) (not (= (set_in ?o_1py0 ?bpy0) true_1))))) :pattern ((set_in ?o_1py0 (set_union ?apy0 ?bpy0))) )) :named A1_31))
(assert (! (forall ((?apy1 Int)(?bpy1 Int)(?o_1py1 Int)) (! (and (or (not (= (set_in ?o_1py1 (set_subtraction ?apy1 ?bpy1)) true_1)) (and (= (set_in ?o_1py1 ?apy1) true_1) (not (= (set_in ?o_1py1 ?bpy1) true_1)))) (or (= (set_in ?o_1py1 ?bpy1) true_1) (= (set_in ?o_1py1 (set_subtraction ?apy1 ?bpy1)) true_1) (not (= (set_in ?o_1py1 ?apy1) true_1)))) :pattern ((set_in ?o_1py1 (set_subtraction ?apy1 ?bpy1))) )) :named A1_32))
(assert (! (forall ((?apy2 Int)(?bpy2 Int)) (! (and (or (not (= (set_disjoint ?apy2 ?bpy2) true_1)) (forall ((?o_1py2 Int)) (! (or (not (= (set_in ?o_1py2 ?apy2) true_1)) (not (= (set_in ?o_1py2 ?bpy2) true_1))) :pattern ((set_in ?o_1py2 ?apy2)) :pattern ((set_in ?o_1py2 ?bpy2)) ))) (or (= (set_disjoint ?apy2 ?bpy2) true_1) (and (= (set_in (?o_1!3 ?bpy2 ?apy2) ?apy2) true_1) (= (set_in (?o_1!3 ?bpy2 ?apy2) ?bpy2) true_1)))) :pattern ((set_disjoint ?apy2 ?bpy2)) )) :named A1_33))
(assert (! (forall ((?apy3 Int)(?bpy3 Int)) (! (and (or (not (= (set_subset ?apy3 ?bpy3) true_1)) (forall ((?o_1py3 Int)) (! (or (not (= (set_in ?o_1py3 ?apy3) true_1)) (= (set_in ?o_1py3 ?bpy3) true_1)) :pattern ((set_in ?o_1py3 ?apy3)) :pattern ((set_in ?o_1py3 ?bpy3)) ))) (or (= (set_subset ?apy3 ?bpy3) true_1) (and (= (set_in (?o_1!1 ?bpy3 ?apy3) ?apy3) true_1) (not (= (set_in (?o_1!1 ?bpy3 ?apy3) ?bpy3) true_1))))) :pattern ((set_subset ?apy3 ?bpy3)) )) :named A1_34))
(assert (! (forall ((?apy4 Int)(?bpy4 Int)) (! (or (= (set_eq ?apy4 ?bpy4) true_1) (and (or (= (set_in (?o_1!2 ?bpy4 ?apy4) ?apy4) true_1) (= (set_in (?o_1!2 ?bpy4 ?apy4) ?bpy4) true_1)) (or (not (= (set_in (?o_1!2 ?bpy4 ?apy4) ?apy4) true_1)) (not (= (set_in (?o_1!2 ?bpy4 ?apy4) ?bpy4) true_1))))) :pattern ((set_eq ?apy4 ?bpy4)) )) :named A1_35))
(assert (! (forall ((?apy5 Int)(?bpy5 Int)) (! (or (not (= (set_eq ?apy5 ?bpy5) true_1)) (= ?apy5 ?bpy5)) :pattern ((set_eq ?apy5 ?bpy5)) )) :named A1_36))
(assert (! (forall ((?mpy0 Int)(?p_1py0 Int)) (! (= (emb ?mpy0 ?p_1py0) (ts_emb (select2 ?mpy0 ?p_1py0 ts_tag))) :pattern ((emb ?mpy0 ?p_1py0)) )) :named A1_37))
(assert (! (forall ((?mpy1 Int)(?p_1py1 Int)) (! (or (not (= (good_meta ?mpy1) true_1)) (and (or (not (= (typed ?mpy1 ?p_1py1) true_1)) (= (ts_typed (select2 ?mpy1 ?p_1py1 ts_tag)) true_1)) (or (= (typed ?mpy1 ?p_1py1) true_1) (not (= (ts_typed (select2 ?mpy1 ?p_1py1 ts_tag)) true_1))))) :pattern ((typed ?mpy1 ?p_1py1)) )) :named A1_38))
(assert (! (forall ((?mpy2 Int)(?p_1py2 Int)) (! (or (not (= (good_meta ?mpy2) true_1)) (not (= (typed ?mpy2 ?p_1py2) true_1)) (not (<= (ref ?p_1py2) 0))) :pattern ((typed ?mpy2 ?p_1py2)) )) :named A1_39))
(assert (! (forall ((?mpy3 Int)(?p_1py3 Int)) (! (or (not (= (typed ?mpy3 ?p_1py3) true_1)) (not (= (is ?p_1py3 node) true_1)) (and (= (typed ?mpy3 (dot ?p_1py3 node_abstractValue)) true_1) (= (emb ?mpy3 (dot ?p_1py3 node_abstractValue)) ?p_1py3) (= (ts_path (select2 ?mpy3 (dot ?p_1py3 node_abstractValue) ts_tag)) node_abstractValue) (not (= (ts_is_array_elt (select2 ?mpy3 (dot ?p_1py3 node_abstractValue) ts_tag)) true_1)))) :pattern ((typed ?mpy3 (dot ?p_1py3 node_abstractValue))) :pattern ((dot ?p_1py3 node_abstractValue) (typed ?mpy3 ?p_1py3)) )) :named A1_40))
(assert (! (forall ((?mpy4 Int)(?p_1py4 Int)) (! (or (not (= (typed ?mpy4 ?p_1py4) true_1)) (not (= (is ?p_1py4 node) true_1)) (and (= (typed ?mpy4 (dot ?p_1py4 node_data)) true_1) (= (emb ?mpy4 (dot ?p_1py4 node_data)) ?p_1py4) (= (ts_path (select2 ?mpy4 (dot ?p_1py4 node_data) ts_tag)) node_data) (not (= (ts_is_array_elt (select2 ?mpy4 (dot ?p_1py4 node_data) ts_tag)) true_1)))) :pattern ((typed ?mpy4 (dot ?p_1py4 node_data))) :pattern ((dot ?p_1py4 node_data) (typed ?mpy4 ?p_1py4)) )) :named A1_41))
(assert (! (forall ((?mpy5 Int)(?p_1py5 Int)) (! (or (not (= (typed ?mpy5 ?p_1py5) true_1)) (not (= (is ?p_1py5 node) true_1)) (and (= (typed ?mpy5 (dot ?p_1py5 node_next)) true_1) (= (emb ?mpy5 (dot ?p_1py5 node_next)) ?p_1py5) (= (ts_path (select2 ?mpy5 (dot ?p_1py5 node_next) ts_tag)) node_next) (not (= (ts_is_array_elt (select2 ?mpy5 (dot ?p_1py5 node_next) ts_tag)) true_1)))) :pattern ((typed ?mpy5 (dot ?p_1py5 node_next))) :pattern ((dot ?p_1py5 node_next) (typed ?mpy5 ?p_1py5)) )) :named A1_42))
(assert (! (forall ((?mpy6 Int)(?p_1py6 Int)) (! (or (not (= (typed ?mpy6 ?p_1py6) true_1)) (not (= (is ?p_1py6 node) true_1)) (and (= (typed ?mpy6 (dot ?p_1py6 node_prev)) true_1) (= (emb ?mpy6 (dot ?p_1py6 node_prev)) ?p_1py6) (= (ts_path (select2 ?mpy6 (dot ?p_1py6 node_prev) ts_tag)) node_prev) (not (= (ts_is_array_elt (select2 ?mpy6 (dot ?p_1py6 node_prev) ts_tag)) true_1)))) :pattern ((typed ?mpy6 (dot ?p_1py6 node_prev))) :pattern ((dot ?p_1py6 node_prev) (typed ?mpy6 ?p_1py6)) )) :named A1_43))
(assert (! (forall ((?mpy7 Int)(?p_1py7 Int)) (! (or (not (= (typed ?mpy7 ?p_1py7) true_1)) (not (= (is ?p_1py7 node) true_1)) (not (= (select2 ?mpy7 ?p_1py7 status_tag) mutable)) (and (= (is (dot ?p_1py7 node_abstractValue) seq) true_1) (= (typed ?mpy7 (dot ?p_1py7 node_abstractValue)) true_1) (= (select2 ?mpy7 (dot ?p_1py7 node_abstractValue) status_tag) mutable))) :pattern ((select2 ?mpy7 (dot ?p_1py7 node_abstractValue) status_tag)) )) :named A1_44))
(assert (! (forall ((?mpy8 Int)(?p_1py8 Int)) (! (or (not (= (typed ?mpy8 ?p_1py8) true_1)) (not (= (is ?p_1py8 node) true_1)) (not (= (select2 ?mpy8 ?p_1py8 status_tag) mutable)) (and (= (is (dot ?p_1py8 node_data) (ptr_to void)) true_1) (= (typed ?mpy8 (dot ?p_1py8 node_data)) true_1) (= (select2 ?mpy8 (dot ?p_1py8 node_data) status_tag) mutable))) :pattern ((select2 ?mpy8 (dot ?p_1py8 node_data) status_tag)) )) :named A1_45))
(assert (! (forall ((?mpy9 Int)(?p_1py9 Int)) (! (or (not (= (typed ?mpy9 ?p_1py9) true_1)) (not (= (is ?p_1py9 node) true_1)) (not (= (select2 ?mpy9 ?p_1py9 status_tag) mutable)) (and (= (is (dot ?p_1py9 node_next) (ptr_to node)) true_1) (= (typed ?mpy9 (dot ?p_1py9 node_next)) true_1) (= (select2 ?mpy9 (dot ?p_1py9 node_next) status_tag) mutable))) :pattern ((select2 ?mpy9 (dot ?p_1py9 node_next) status_tag)) )) :named A1_46))
(assert (! (forall ((?mpy10 Int)(?p_1py10 Int)) (! (or (not (= (typed ?mpy10 ?p_1py10) true_1)) (not (= (is ?p_1py10 node) true_1)) (not (= (select2 ?mpy10 ?p_1py10 status_tag) mutable)) (and (= (is (dot ?p_1py10 node_prev) (ptr_to node)) true_1) (= (typed ?mpy10 (dot ?p_1py10 node_prev)) true_1) (= (select2 ?mpy10 (dot ?p_1py10 node_prev) status_tag) mutable))) :pattern ((select2 ?mpy10 (dot ?p_1py10 node_prev) status_tag)) )) :named A1_47))
(assert (! (forall ((?mpy11 Int)(?p_1py11 Int)) (! (or (not (= (typed ?mpy11 ?p_1py11) true_1)) (not (= (is ?p_1py11 queue) true_1)) (and (= (typed ?mpy11 (dot ?p_1py11 queue_abstractValue)) true_1) (= (emb ?mpy11 (dot ?p_1py11 queue_abstractValue)) ?p_1py11) (= (ts_path (select2 ?mpy11 (dot ?p_1py11 queue_abstractValue) ts_tag)) queue_abstractValue) (not (= (ts_is_array_elt (select2 ?mpy11 (dot ?p_1py11 queue_abstractValue) ts_tag)) true_1)))) :pattern ((typed ?mpy11 (dot ?p_1py11 queue_abstractValue))) :pattern ((dot ?p_1py11 queue_abstractValue) (typed ?mpy11 ?p_1py11)) )) :named A1_48))
(assert (! (forall ((?mpy12 Int)(?p_1py12 Int)) (! (or (not (= (typed ?mpy12 ?p_1py12) true_1)) (not (= (is ?p_1py12 queue) true_1)) (and (= (typed ?mpy12 (dot ?p_1py12 queue_head)) true_1) (= (emb ?mpy12 (dot ?p_1py12 queue_head)) ?p_1py12) (= (ts_path (select2 ?mpy12 (dot ?p_1py12 queue_head) ts_tag)) queue_head) (not (= (ts_is_array_elt (select2 ?mpy12 (dot ?p_1py12 queue_head) ts_tag)) true_1)))) :pattern ((typed ?mpy12 (dot ?p_1py12 queue_head))) :pattern ((dot ?p_1py12 queue_head) (typed ?mpy12 ?p_1py12)) )) :named A1_49))
(assert (! (forall ((?mpy13 Int)(?p_1py13 Int)) (! (or (not (= (typed ?mpy13 ?p_1py13) true_1)) (not (= (is ?p_1py13 queue) true_1)) (and (= (typed ?mpy13 (dot ?p_1py13 queue_tail)) true_1) (= (emb ?mpy13 (dot ?p_1py13 queue_tail)) ?p_1py13) (= (ts_path (select2 ?mpy13 (dot ?p_1py13 queue_tail) ts_tag)) queue_tail) (not (= (ts_is_array_elt (select2 ?mpy13 (dot ?p_1py13 queue_tail) ts_tag)) true_1)))) :pattern ((typed ?mpy13 (dot ?p_1py13 queue_tail))) :pattern ((dot ?p_1py13 queue_tail) (typed ?mpy13 ?p_1py13)) )) :named A1_50))
(assert (! (forall ((?mpy14 Int)(?p_1py14 Int)) (! (or (not (= (typed ?mpy14 ?p_1py14) true_1)) (not (= (select2 ?mpy14 ?p_1py14 status_tag) mutable)) (not (= (is ?p_1py14 queue) true_1)) (and (= (is (dot ?p_1py14 queue_abstractValue) seq) true_1) (= (typed ?mpy14 (dot ?p_1py14 queue_abstractValue)) true_1) (= (select2 ?mpy14 (dot ?p_1py14 queue_abstractValue) status_tag) mutable))) :pattern ((select2 ?mpy14 (dot ?p_1py14 queue_abstractValue) status_tag)) )) :named A1_51))
(assert (! (forall ((?mpy15 Int)(?p_1py15 Int)) (! (or (not (= (typed ?mpy15 ?p_1py15) true_1)) (not (= (select2 ?mpy15 ?p_1py15 status_tag) mutable)) (not (= (is ?p_1py15 queue) true_1)) (and (= (is (dot ?p_1py15 queue_head) (ptr_to node)) true_1) (= (typed ?mpy15 (dot ?p_1py15 queue_head)) true_1) (= (select2 ?mpy15 (dot ?p_1py15 queue_head) status_tag) mutable))) :pattern ((select2 ?mpy15 (dot ?p_1py15 queue_head) status_tag)) )) :named A1_52))
(assert (! (forall ((?mpy16 Int)(?p_1py16 Int)) (! (or (not (= (typed ?mpy16 ?p_1py16) true_1)) (not (= (select2 ?mpy16 ?p_1py16 status_tag) mutable)) (not (= (is ?p_1py16 queue) true_1)) (and (= (is (dot ?p_1py16 queue_tail) (ptr_to node)) true_1) (= (typed ?mpy16 (dot ?p_1py16 queue_tail)) true_1) (= (select2 ?mpy16 (dot ?p_1py16 queue_tail) status_tag) mutable))) :pattern ((select2 ?mpy16 (dot ?p_1py16 queue_tail) status_tag)) )) :named A1_53))
(assert (! (forall ((?mpy17 Int)(?rpy2 Int)(?q_1py0 Int)) (! (and (or (= ?q_1py0 (ptr node ?rpy2)) (= ?q_1py0 (dot (ptr node ?rpy2) node_next)) (= ?q_1py0 (dot (ptr node ?rpy2) node_data)) (= ?q_1py0 (dot (ptr node ?rpy2) node_abstractValue)) (= ?q_1py0 (dot (ptr node ?rpy2) node_prev)) (not (= (in_extent_of ?mpy17 ?q_1py0 (ptr node ?rpy2)) true_1))) (or (= (in_extent_of ?mpy17 ?q_1py0 (ptr node ?rpy2)) true_1) (and (not (= ?q_1py0 (ptr node ?rpy2))) (not (= ?q_1py0 (dot (ptr node ?rpy2) node_next))) (not (= ?q_1py0 (dot (ptr node ?rpy2) node_data))) (not (= ?q_1py0 (dot (ptr node ?rpy2) node_abstractValue))) (not (= ?q_1py0 (dot (ptr node ?rpy2) node_prev)))))) :pattern ((in_extent_of ?mpy17 ?q_1py0 (ptr node ?rpy2))) )) :named A1_54))
(assert (! (forall ((?mpy18 Int)(?rpy3 Int)(?q_1py1 Int)) (! (and (or (= ?q_1py1 (ptr queue ?rpy3)) (= ?q_1py1 (dot (ptr queue ?rpy3) queue_head)) (= ?q_1py1 (dot (ptr queue ?rpy3) queue_tail)) (= ?q_1py1 (dot (ptr queue ?rpy3) queue_abstractValue)) (not (= (in_extent_of ?mpy18 ?q_1py1 (ptr queue ?rpy3)) true_1))) (or (= (in_extent_of ?mpy18 ?q_1py1 (ptr queue ?rpy3)) true_1) (and (not (= ?q_1py1 (ptr queue ?rpy3))) (not (= ?q_1py1 (dot (ptr queue ?rpy3) queue_head))) (not (= ?q_1py1 (dot (ptr queue ?rpy3) queue_tail))) (not (= ?q_1py1 (dot (ptr queue ?rpy3) queue_abstractValue)))))) :pattern ((in_extent_of ?mpy18 ?q_1py1 (ptr queue ?rpy3))) )) :named A1_55))
(assert (! (forall ((?mpy19 Int)(?rpy4 Int)(?t_1py0 Int)) (! (or (= (select2 ?mpy19 (ptr ?t_1py0 ?rpy4) owned_tag) set_empty) (not (= (good_meta ?mpy19) true_1)) (and (not (= (is_primitive ?t_1py0) true_1)) (not (= (kind_of ?t_1py0) kind_array)))) :pattern ((select2 ?mpy19 (ptr ?t_1py0 ?rpy4) owned_tag)) )) :named A1_56))
(assert (! (forall ((?mpy20 Int)(?s_1py0 Int)(?npy0 Int)) (! (and (or (not (= (ValidNode ?mpy20 ?s_1py0 ?npy0) true_1)) (and (= (is ?npy0 node) true_1) (= (typed ?mpy20 ?npy0) true_1) (= (select2 ?mpy20 ?npy0 owned_tag) set_empty) (or (= (ref (select1 ?s_1py0 (dot ?npy0 node_next))) (ref null)) (and (= (is (select1 ?s_1py0 (dot ?npy0 node_next)) node) true_1) (= (typed ?mpy20 (select1 ?s_1py0 (dot ?npy0 node_next))) true_1) (not (= ?npy0 (select1 ?s_1py0 (dot ?npy0 node_next)))))) (or (not (= (ref (select1 ?s_1py0 (dot ?npy0 node_next))) (ref null))) (= (seq_equal (select1 ?s_1py0 (dot ?npy0 node_abstractValue)) seq_empty) true_1)) (or (= (ref (select1 ?s_1py0 (dot ?npy0 node_next))) (ref null)) (and (= (select1 ?s_1py0 (dot (select1 ?s_1py0 (dot ?npy0 node_next)) node_prev)) ?npy0) (= (seq_equal (select1 ?s_1py0 (dot ?npy0 node_abstractValue)) (seq_append (seq_singleton (select1 ?s_1py0 (dot (select1 ?s_1py0 (dot ?npy0 node_next)) node_data))) (select1 ?s_1py0 (dot (select1 ?s_1py0 (dot ?npy0 node_next)) node_abstractValue)))) true_1))))) (or (not (= (is ?npy0 node) true_1)) (= (ValidNode ?mpy20 ?s_1py0 ?npy0) true_1) (not (= (typed ?mpy20 ?npy0) true_1)) (not (= (select2 ?mpy20 ?npy0 owned_tag) set_empty)) (and (not (= (ref (select1 ?s_1py0 (dot ?npy0 node_next))) (ref null))) (or (not (= (is (select1 ?s_1py0 (dot ?npy0 node_next)) node) true_1)) (not (= (typed ?mpy20 (select1 ?s_1py0 (dot ?npy0 node_next))) true_1)) (= ?npy0 (select1 ?s_1py0 (dot ?npy0 node_next))))) (and (= (ref (select1 ?s_1py0 (dot ?npy0 node_next))) (ref null)) (not (= (seq_equal (select1 ?s_1py0 (dot ?npy0 node_abstractValue)) seq_empty) true_1))) (and (not (= (ref (select1 ?s_1py0 (dot ?npy0 node_next))) (ref null))) (or (not (= (select1 ?s_1py0 (dot (select1 ?s_1py0 (dot ?npy0 node_next)) node_prev)) ?npy0)) (not (= (seq_equal (select1 ?s_1py0 (dot ?npy0 node_abstractValue)) (seq_append (seq_singleton (select1 ?s_1py0 (dot (select1 ?s_1py0 (dot ?npy0 node_next)) node_data))) (select1 ?s_1py0 (dot (select1 ?s_1py0 (dot ?npy0 node_next)) node_abstractValue)))) true_1)))))) :pattern ((ValidNode ?mpy20 ?s_1py0 ?npy0)) )) :named A1_57))
(assert (! (forall ((?mpy21 Int)(?s_1py1 Int)(?p_1py17 Int)(?t_1py1 Int)) (! (or (= (inv ?mpy21 ?s_1py1 ?p_1py17 ?t_1py1) true_1) (not (= (good_meta ?mpy21) true_1)) (not (= (good_state ?s_1py1) true_1)) (not (= (select2 ?mpy21 ?p_1py17 status_tag) consistent))) :pattern ((inv ?mpy21 ?s_1py1 ?p_1py17 ?t_1py1)) )) :named A1_58))
(assert (! (forall ((?mpy22 Int)(?s_1py2 Int)(?p_1py18 Int)(?t_1py2 Int)) (! (or (not (= (typ ?p_1py18) ?t_1py2)) (= (inv ?mpy22 ?s_1py2 ?p_1py18 ?t_1py2) true_1) (and (not (= (is_primitive ?t_1py2) true_1)) (not (= (kind_of ?t_1py2) kind_array)))) :pattern ((inv ?mpy22 ?s_1py2 ?p_1py18 ?t_1py2)) )) :named A1_59))
(assert (! (forall ((?mpy23 Int)(?s_1py3 Int)(?qpy0 Int)(?ppy6 Int)(?ipy4 Int)) (! (and (or (not (= (WellformedNodes2 ?mpy23 ?s_1py3 ?qpy0 ?ppy6 ?ipy4) true_1)) (forall ((?npy1 Int)) (! (or (not (= (set_in ?npy1 (select2 ?mpy23 ?qpy0 owned_tag)) true_1)) (= (ref (select1 ?s_1py3 (dot ?npy1 node_next))) (ref null)) (and (or (= (select1 ?s_1py3 (dot ?npy1 node_next)) ?ppy6) (= (seq_equal (select1 ?s_1py3 (dot ?npy1 node_abstractValue)) (seq_append (seq_singleton (select1 ?s_1py3 (dot (select1 ?s_1py3 (dot ?npy1 node_next)) node_data))) (select1 ?s_1py3 (dot (select1 ?s_1py3 (dot ?npy1 node_next)) node_abstractValue)))) true_1)) (or (not (= (select1 ?s_1py3 (dot ?npy1 node_next)) ?ppy6)) (= (seq_equal (select1 ?s_1py3 (dot ?npy1 node_abstractValue)) (seq_append (seq_singleton (select1 ?s_1py3 (dot ?ppy6 node_data))) (seq_remove (select1 ?s_1py3 (dot ?ppy6 node_abstractValue)) ?ipy4))) true_1)))) :pattern ((set_in ?npy1 (select2 ?mpy23 ?qpy0 owned_tag))) ))) (or (= (WellformedNodes2 ?mpy23 ?s_1py3 ?qpy0 ?ppy6 ?ipy4) true_1) (and (= (set_in (?n!11 ?ipy4 ?ppy6 ?qpy0 ?s_1py3 ?mpy23) (select2 ?mpy23 ?qpy0 owned_tag)) true_1) (not (= (ref (select1 ?s_1py3 (dot (?n!11 ?ipy4 ?ppy6 ?qpy0 ?s_1py3 ?mpy23) node_next))) (ref null))) (or (and (not (= (select1 ?s_1py3 (dot (?n!11 ?ipy4 ?ppy6 ?qpy0 ?s_1py3 ?mpy23) node_next)) ?ppy6)) (not (= (seq_equal (select1 ?s_1py3 (dot (?n!11 ?ipy4 ?ppy6 ?qpy0 ?s_1py3 ?mpy23) node_abstractValue)) (seq_append (seq_singleton (select1 ?s_1py3 (dot (select1 ?s_1py3 (dot (?n!11 ?ipy4 ?ppy6 ?qpy0 ?s_1py3 ?mpy23) node_next)) node_data))) (select1 ?s_1py3 (dot (select1 ?s_1py3 (dot (?n!11 ?ipy4 ?ppy6 ?qpy0 ?s_1py3 ?mpy23) node_next)) node_abstractValue)))) true_1))) (and (= (select1 ?s_1py3 (dot (?n!11 ?ipy4 ?ppy6 ?qpy0 ?s_1py3 ?mpy23) node_next)) ?ppy6) (not (= (seq_equal (select1 ?s_1py3 (dot (?n!11 ?ipy4 ?ppy6 ?qpy0 ?s_1py3 ?mpy23) node_abstractValue)) (seq_append (seq_singleton (select1 ?s_1py3 (dot ?ppy6 node_data))) (seq_remove (select1 ?s_1py3 (dot ?ppy6 node_abstractValue)) ?ipy4))) true_1))))))) :pattern ((WellformedNodes2 ?mpy23 ?s_1py3 ?qpy0 ?ppy6 ?ipy4)) )) :named A1_60))
(assert (! (forall ((?mpy24 Int)(?s_1py4 Int)(?qpy1 Int)) (! (= (AbstractValue ?mpy24 ?s_1py4 ?qpy1) (select1 ?s_1py4 (dot ?qpy1 queue_abstractValue))) :pattern ((AbstractValue ?mpy24 ?s_1py4 ?qpy1)) )) :named A1_61))
(assert (! (forall ((?mpy25 Int)(?s_1py5 Int)(?qpy2 Int)) (! (and (or (not (= (ValidQueue ?mpy25 ?s_1py5 ?qpy2) true_1)) (and (= (is ?qpy2 queue) true_1) (= (typed ?mpy25 ?qpy2) true_1) (= (is (select1 ?s_1py5 (dot ?qpy2 queue_head)) node) true_1) (= (typed ?mpy25 (select1 ?s_1py5 (dot ?qpy2 queue_head))) true_1) (= (is (select1 ?s_1py5 (dot ?qpy2 queue_tail)) node) true_1) (= (typed ?mpy25 (select1 ?s_1py5 (dot ?qpy2 queue_tail))) true_1) (= (ref (select1 ?s_1py5 (dot (select1 ?s_1py5 (dot ?qpy2 queue_tail)) node_next))) (ref null)) (= (ref (select1 ?s_1py5 (dot (select1 ?s_1py5 (dot ?qpy2 queue_head)) node_prev))) (ref null)) (= (set_in (select1 ?s_1py5 (dot ?qpy2 queue_head)) (select2 ?mpy25 ?qpy2 owned_tag)) true_1) (= (set_in (select1 ?s_1py5 (dot ?qpy2 queue_tail)) (select2 ?mpy25 ?qpy2 owned_tag)) true_1) (= (select1 ?s_1py5 (dot ?qpy2 queue_abstractValue)) (select1 ?s_1py5 (dot (select1 ?s_1py5 (dot ?qpy2 queue_head)) node_abstractValue))) (forall ((?npy2 Int)) (! (or (not (= (set_in ?npy2 (select2 ?mpy25 ?qpy2 owned_tag)) true_1)) (and (= (is ?npy2 node) true_1) (= (typed ?mpy25 ?npy2) true_1) (= (ValidNode ?mpy25 ?s_1py5 ?npy2) true_1) (or (not (= (ref (select1 ?s_1py5 (dot ?npy2 node_next))) (ref null))) (= ?npy2 (select1 ?s_1py5 (dot ?qpy2 queue_tail)))))) :pattern ((set_in ?npy2 (select2 ?mpy25 ?qpy2 owned_tag))) )) (forall ((?npy3 Int)) (! (or (not (= (set_in ?npy3 (select2 ?mpy25 ?qpy2 owned_tag)) true_1)) (= (ref (select1 ?s_1py5 (dot ?npy3 node_next))) (ref null)) (= (set_in (select1 ?s_1py5 (dot ?npy3 node_next)) (select2 ?mpy25 ?qpy2 owned_tag)) true_1)) :pattern ((set_in (select1 ?s_1py5 (dot ?npy3 node_next)) (select2 ?mpy25 ?qpy2 owned_tag))) )))) (or (not (= (is ?qpy2 queue) true_1)) (not (= (typed ?mpy25 ?qpy2) true_1)) (= (ValidQueue ?mpy25 ?s_1py5 ?qpy2) true_1) (not (= (is (select1 ?s_1py5 (dot ?qpy2 queue_head)) node) true_1)) (not (= (typed ?mpy25 (select1 ?s_1py5 (dot ?qpy2 queue_head))) true_1)) (not (= (is (select1 ?s_1py5 (dot ?qpy2 queue_tail)) node) true_1)) (not (= (typed ?mpy25 (select1 ?s_1py5 (dot ?qpy2 queue_tail))) true_1)) (not (= (ref (select1 ?s_1py5 (dot (select1 ?s_1py5 (dot ?qpy2 queue_tail)) node_next))) (ref null))) (not (= (ref (select1 ?s_1py5 (dot (select1 ?s_1py5 (dot ?qpy2 queue_head)) node_prev))) (ref null))) (not (= (set_in (select1 ?s_1py5 (dot ?qpy2 queue_head)) (select2 ?mpy25 ?qpy2 owned_tag)) true_1)) (not (= (set_in (select1 ?s_1py5 (dot ?qpy2 queue_tail)) (select2 ?mpy25 ?qpy2 owned_tag)) true_1)) (not (= (select1 ?s_1py5 (dot ?qpy2 queue_abstractValue)) (select1 ?s_1py5 (dot (select1 ?s_1py5 (dot ?qpy2 queue_head)) node_abstractValue)))) (and (= (set_in (?n!9 ?qpy2 ?s_1py5 ?mpy25) (select2 ?mpy25 ?qpy2 owned_tag)) true_1) (not (= (ref (select1 ?s_1py5 (dot (?n!9 ?qpy2 ?s_1py5 ?mpy25) node_next))) (ref null))) (not (= (set_in (select1 ?s_1py5 (dot (?n!9 ?qpy2 ?s_1py5 ?mpy25) node_next)) (select2 ?mpy25 ?qpy2 owned_tag)) true_1))) (and (= (set_in (?n!8 ?qpy2 ?s_1py5 ?mpy25) (select2 ?mpy25 ?qpy2 owned_tag)) true_1) (or (not (= (is (?n!8 ?qpy2 ?s_1py5 ?mpy25) node) true_1)) (not (= (typed ?mpy25 (?n!8 ?qpy2 ?s_1py5 ?mpy25)) true_1)) (not (= (ValidNode ?mpy25 ?s_1py5 (?n!8 ?qpy2 ?s_1py5 ?mpy25)) true_1)) (and (= (ref (select1 ?s_1py5 (dot (?n!8 ?qpy2 ?s_1py5 ?mpy25) node_next))) (ref null)) (not (= (?n!8 ?qpy2 ?s_1py5 ?mpy25) (select1 ?s_1py5 (dot ?qpy2 queue_tail))))))))) :pattern ((ValidQueue ?mpy25 ?s_1py5 ?qpy2)) )) :named A1_62))
(assert (! (forall ((?mpy26 Int)(?s_1py6 Int)(?qpy3 Int)) (! (and (or (not (= (WellformedNodes ?mpy26 ?s_1py6 ?qpy3) true_1)) (and (forall ((?npy4 Int)) (! (or (not (= (set_in ?npy4 (select2 ?mpy26 ?qpy3 owned_tag)) true_1)) (and (= (is ?npy4 node) true_1) (= (typed ?mpy26 ?npy4) true_1) (= (select2 ?mpy26 ?npy4 owned_tag) set_empty) (or (= (ref (select1 ?s_1py6 (dot ?npy4 node_next))) (ref null)) (and (= (is (select1 ?s_1py6 (dot ?npy4 node_next)) node) true_1) (= (typed ?mpy26 (select1 ?s_1py6 (dot ?npy4 node_next))) true_1) (not (= ?npy4 (select1 ?s_1py6 (dot ?npy4 node_next)))) (= (select1 ?s_1py6 (dot (select1 ?s_1py6 (dot ?npy4 node_next)) node_prev)) ?npy4))) (or (not (= (ref (select1 ?s_1py6 (dot ?npy4 node_next))) (ref null))) (= (seq_equal (select1 ?s_1py6 (dot ?npy4 node_abstractValue)) seq_empty) true_1)) (or (not (= (ref (select1 ?s_1py6 (dot ?npy4 node_next))) (ref null))) (= ?npy4 (select1 ?s_1py6 (dot ?qpy3 queue_tail)))))) :pattern ((set_in ?npy4 (select2 ?mpy26 ?qpy3 owned_tag))) )) (forall ((?npy5 Int)) (! (or (not (= (set_in ?npy5 (select2 ?mpy26 ?qpy3 owned_tag)) true_1)) (= (ref (select1 ?s_1py6 (dot ?npy5 node_next))) (ref null)) (= (set_in (select1 ?s_1py6 (dot ?npy5 node_next)) (select2 ?mpy26 ?qpy3 owned_tag)) true_1)) :pattern ((set_in (select1 ?s_1py6 (dot ?npy5 node_next)) (select2 ?mpy26 ?qpy3 owned_tag))) )))) (or (= (WellformedNodes ?mpy26 ?s_1py6 ?qpy3) true_1) (and (= (set_in (?n!10 ?qpy3 ?s_1py6 ?mpy26) (select2 ?mpy26 ?qpy3 owned_tag)) true_1) (or (not (= (is (?n!10 ?qpy3 ?s_1py6 ?mpy26) node) true_1)) (not (= (typed ?mpy26 (?n!10 ?qpy3 ?s_1py6 ?mpy26)) true_1)) (not (= (select2 ?mpy26 (?n!10 ?qpy3 ?s_1py6 ?mpy26) owned_tag) set_empty)) (and (not (= (ref (select1 ?s_1py6 (dot (?n!10 ?qpy3 ?s_1py6 ?mpy26) node_next))) (ref null))) (or (not (= (is (select1 ?s_1py6 (dot (?n!10 ?qpy3 ?s_1py6 ?mpy26) node_next)) node) true_1)) (not (= (typed ?mpy26 (select1 ?s_1py6 (dot (?n!10 ?qpy3 ?s_1py6 ?mpy26) node_next))) true_1)) (= (?n!10 ?qpy3 ?s_1py6 ?mpy26) (select1 ?s_1py6 (dot (?n!10 ?qpy3 ?s_1py6 ?mpy26) node_next))) (not (= (select1 ?s_1py6 (dot (select1 ?s_1py6 (dot (?n!10 ?qpy3 ?s_1py6 ?mpy26) node_next)) node_prev)) (?n!10 ?qpy3 ?s_1py6 ?mpy26))))) (and (= (ref (select1 ?s_1py6 (dot (?n!10 ?qpy3 ?s_1py6 ?mpy26) node_next))) (ref null)) (not (= (seq_equal (select1 ?s_1py6 (dot (?n!10 ?qpy3 ?s_1py6 ?mpy26) node_abstractValue)) seq_empty) true_1))) (and (= (ref (select1 ?s_1py6 (dot (?n!10 ?qpy3 ?s_1py6 ?mpy26) node_next))) (ref null)) (not (= (?n!10 ?qpy3 ?s_1py6 ?mpy26) (select1 ?s_1py6 (dot ?qpy3 queue_tail))))))) (and (= (set_in (?n!9 ?qpy3 ?s_1py6 ?mpy26) (select2 ?mpy26 ?qpy3 owned_tag)) true_1) (not (= (ref (select1 ?s_1py6 (dot (?n!9 ?qpy3 ?s_1py6 ?mpy26) node_next))) (ref null))) (not (= (set_in (select1 ?s_1py6 (dot (?n!9 ?qpy3 ?s_1py6 ?mpy26) node_next)) (select2 ?mpy26 ?qpy3 owned_tag)) true_1))))) :pattern ((WellformedNodes ?mpy26 ?s_1py6 ?qpy3)) )) :named A1_63))
(assert (! (forall ((?m1py0 Int)(?s1py0 Int)(?m2py0 Int)(?s2py0 Int)(?npy6 Int)) (! (or (not (= (good_meta ?m1py0) true_1)) (not (= (good_meta ?m2py0) true_1)) (not (= (select1 ?s1py0 ?npy6) (select1 ?s2py0 ?npy6))) (not (= (select1 ?s1py0 (select1 ?s1py0 (dot ?npy6 node_next))) (select1 ?s2py0 (select1 ?s1py0 (dot ?npy6 node_next))))) (and (= (select2 ?m1py0 ?npy6 status_tag) mutable) (= (select2 ?m2py0 ?npy6 status_tag) mutable)) (and (= (select2 ?m1py0 (select1 ?s1py0 (dot ?npy6 node_next)) status_tag) mutable) (= (select2 ?m2py0 (select1 ?s1py0 (dot ?npy6 node_next)) status_tag) mutable)) (and (or (not (= (ValidNode ?m1py0 ?s1py0 ?npy6) true_1)) (= (ValidNode ?m2py0 ?s2py0 ?npy6) true_1)) (or (= (ValidNode ?m1py0 ?s1py0 ?npy6) true_1) (not (= (ValidNode ?m2py0 ?s2py0 ?npy6) true_1))))) :pattern ((ValidNode ?m1py0 ?s1py0 ?npy6) (ValidNode ?m2py0 ?s2py0 ?npy6)) )) :named A1_64))
(assert (! (forall ((?m1py1 Int)(?s1py1 Int)(?m2py1 Int)(?s2py1 Int)(?qpy4 Int)(?ppy7 Int)(?ipy5 Int)) (! (or (not (= (good_meta ?m2py1) true_1)) (not (= (good_meta ?m1py1) true_1)) (not (= (select1 ?s1py1 ?qpy4) (select1 ?s2py1 ?qpy4))) (and (= (select2 ?m1py1 ?qpy4 status_tag) mutable) (= (select2 ?m2py1 ?qpy4 status_tag) mutable)) (and (or (not (= (WellformedNodes2 ?m1py1 ?s1py1 ?qpy4 ?ppy7 ?ipy5) true_1)) (= (WellformedNodes2 ?m2py1 ?s2py1 ?qpy4 ?ppy7 ?ipy5) true_1)) (or (= (WellformedNodes2 ?m1py1 ?s1py1 ?qpy4 ?ppy7 ?ipy5) true_1) (not (= (WellformedNodes2 ?m2py1 ?s2py1 ?qpy4 ?ppy7 ?ipy5) true_1))))) :pattern ((WellformedNodes2 ?m1py1 ?s1py1 ?qpy4 ?ppy7 ?ipy5) (WellformedNodes2 ?m2py1 ?s2py1 ?qpy4 ?ppy7 ?ipy5)) )) :named A1_65))
(assert (! (forall ((?m1py2 Int)(?s1py2 Int)(?m2py2 Int)(?s2py2 Int)(?qpy5 Int)) (! (or (not (= (good_meta ?m1py2) true_1)) (not (= (good_meta ?m2py2) true_1)) (not (= (select1 ?s1py2 ?qpy5) (select1 ?s2py2 ?qpy5))) (= (AbstractValue ?m1py2 ?s1py2 ?qpy5) (AbstractValue ?m2py2 ?s2py2 ?qpy5)) (and (= (select2 ?m1py2 ?qpy5 status_tag) mutable) (= (select2 ?m2py2 ?qpy5 status_tag) mutable))) :pattern ((AbstractValue ?m1py2 ?s1py2 ?qpy5) (AbstractValue ?m2py2 ?s2py2 ?qpy5)) )) :named A1_66))
(assert (! (forall ((?m1py3 Int)(?s1py3 Int)(?m2py3 Int)(?s2py3 Int)(?qpy6 Int)) (! (or (not (= (good_meta ?m1py3) true_1)) (not (= (good_meta ?m2py3) true_1)) (not (= (select1 ?s1py3 ?qpy6) (select1 ?s2py3 ?qpy6))) (and (= (select2 ?m1py3 ?qpy6 status_tag) mutable) (= (select2 ?m2py3 ?qpy6 status_tag) mutable)) (and (or (not (= (ValidQueue ?m1py3 ?s1py3 ?qpy6) true_1)) (= (ValidQueue ?m2py3 ?s2py3 ?qpy6) true_1)) (or (= (ValidQueue ?m1py3 ?s1py3 ?qpy6) true_1) (not (= (ValidQueue ?m2py3 ?s2py3 ?qpy6) true_1))))) :pattern ((ValidQueue ?m1py3 ?s1py3 ?qpy6) (ValidQueue ?m2py3 ?s2py3 ?qpy6)) )) :named A1_67))
(assert (! (forall ((?m1py4 Int)(?s1py4 Int)(?m2py4 Int)(?s2py4 Int)(?qpy7 Int)) (! (or (not (= (good_meta ?m1py4) true_1)) (not (= (good_meta ?m2py4) true_1)) (not (= (select1 ?s1py4 ?qpy7) (select1 ?s2py4 ?qpy7))) (and (= (select2 ?m1py4 ?qpy7 status_tag) mutable) (= (select2 ?m2py4 ?qpy7 status_tag) mutable)) (and (or (not (= (WellformedNodes ?m1py4 ?s1py4 ?qpy7) true_1)) (= (WellformedNodes ?m2py4 ?s2py4 ?qpy7) true_1)) (or (= (WellformedNodes ?m1py4 ?s1py4 ?qpy7) true_1) (not (= (WellformedNodes ?m2py4 ?s2py4 ?qpy7) true_1))))) :pattern ((WellformedNodes ?m1py4 ?s1py4 ?qpy7) (WellformedNodes ?m2py4 ?s2py4 ?qpy7)) )) :named A1_68))
(assert (! (forall ((?n_1py0 Int)) (! (= (is_primitive (ptr_to ?n_1py0)) true_1) :pattern ((ptr_to ?n_1py0)) )) :named A1_69))
(assert (! (forall ((?n_1py1 Int)) (! (= (ptr_level (ptr_to ?n_1py1)) (+ 2 (ptr_level ?n_1py1))) :pattern ((ptr_to ?n_1py1)) )) :named A1_70))
(assert (! (forall ((?n_1py2 Int)) (! (= (sizeof (ptr_to ?n_1py2)) 8) :pattern ((ptr_to ?n_1py2)) )) :named A1_71))
(assert (! (forall ((?n_1py3 Int)) (! (= (unptr_to (ptr_to ?n_1py3)) ?n_1py3) :pattern ((ptr_to ?n_1py3)) )) :named A1_72))
(assert (! (forall ((?o_1py4 Int)) (! (not (= (set_in ?o_1py4 set_empty) true_1)) :pattern ((set_in ?o_1py4 set_empty)) )) :named A1_73))
(assert (! (forall ((?ppy8 Int)(?ipy6 Int)(?jpy1 Int)(?Tpy9 Int)) (! (or (= ?ipy6 0) (= (idx (idx ?ppy8 ?ipy6 ?Tpy9) ?jpy1 ?Tpy9) (idx ?ppy8 (+ ?ipy6 ?jpy1) ?Tpy9))) :pattern ((idx (idx ?ppy8 ?ipy6 ?Tpy9) ?jpy1 ?Tpy9)) )) :named A1_74))
(assert (! (forall ((?ppy9 Int)(?rpy5 Int)(?Tpy10 Int)(?szpy3 Int)) (! (and (or (not (= (in_full_extent_of ?ppy9 (ptr (array ?Tpy10 ?szpy3) ?rpy5)) true_1)) (= ?ppy9 (ptr (array ?Tpy10 ?szpy3) ?rpy5)) (and (<= 0 (?i_1!5 ?szpy3 ?Tpy10 ?rpy5 ?ppy9)) (not (<= ?szpy3 (?i_1!5 ?szpy3 ?Tpy10 ?rpy5 ?ppy9))) (= (in_full_extent_of ?ppy9 (idx (ptr ?Tpy10 ?rpy5) (?i_1!5 ?szpy3 ?Tpy10 ?rpy5 ?ppy9) ?Tpy10)) true_1))) (or (= (in_full_extent_of ?ppy9 (ptr (array ?Tpy10 ?szpy3) ?rpy5)) true_1) (and (not (= ?ppy9 (ptr (array ?Tpy10 ?szpy3) ?rpy5))) (forall ((?i_1py1 Int)) (! (or (<= ?szpy3 ?i_1py1) (not (<= 0 ?i_1py1)) (not (= (in_full_extent_of ?ppy9 (idx (ptr ?Tpy10 ?rpy5) ?i_1py1 ?Tpy10)) true_1))) :pattern ((idx (ptr ?Tpy10 ?rpy5) ?i_1py1 ?Tpy10)) ))))) :pattern ((in_full_extent_of ?ppy9 (ptr (array ?Tpy10 ?szpy3) ?rpy5))) )) :named A1_75))
(assert (! (forall ((?ppy10 Int)(?rpy6 Int)(?Tpy11 Int)(?szpy4 Int)) (! (and (or (not (= (set_in ?ppy10 (array_range (ptr ?Tpy11 ?rpy6) ?Tpy11 ?szpy4)) true_1)) (and (<= 0 (?i_1!5 ?szpy4 ?Tpy11 ?rpy6 ?ppy10)) (not (<= ?szpy4 (?i_1!5 ?szpy4 ?Tpy11 ?rpy6 ?ppy10))) (= (in_full_extent_of ?ppy10 (idx (ptr ?Tpy11 ?rpy6) (?i_1!5 ?szpy4 ?Tpy11 ?rpy6 ?ppy10) ?Tpy11)) true_1))) (or (= (set_in ?ppy10 (array_range (ptr ?Tpy11 ?rpy6) ?Tpy11 ?szpy4)) true_1) (forall ((?i_1py2 Int)) (! (or (<= ?szpy4 ?i_1py2) (not (<= 0 ?i_1py2)) (not (= (in_full_extent_of ?ppy10 (idx (ptr ?Tpy11 ?rpy6) ?i_1py2 ?Tpy11)) true_1))) :pattern ((idx (ptr ?Tpy11 ?rpy6) ?i_1py2 ?Tpy11)) )))) :pattern ((set_in ?ppy10 (array_range (ptr ?Tpy11 ?rpy6) ?Tpy11 ?szpy4))) )) :named A1_76))
(assert (! (forall ((?ppy11 Int)(?spy4 Int)) (! (or (not (= (set_in ?ppy11 (AbstractValues ?spy4)) true_1)) (and (= (dot (?n!12 ?spy4 ?ppy11) node_abstractValue) ?ppy11) (= (set_in (?n!12 ?spy4 ?ppy11) ?spy4) true_1))) :pattern ((set_in ?ppy11 (AbstractValues ?spy4))) )) :named A1_77))
(assert (! (forall ((?p_1py19 Int)(?i_1py3 Int)(?t_1py3 Int)) (! (= (idx ?p_1py19 ?i_1py3 ?t_1py3) (ptr ?t_1py3 (+ (ref ?p_1py19) (* (sizeof ?t_1py3) ?i_1py3)))) :pattern ((idx ?p_1py19 ?i_1py3 ?t_1py3)) )) :named A1_78))
(assert (! (forall ((?p_1py20 Int)(?lpy0 Int)) (! (and (or (not (= (set_in ?p_1py20 (full_extent ?lpy0)) true_1)) (= (in_full_extent_of ?p_1py20 ?lpy0) true_1)) (or (= (set_in ?p_1py20 (full_extent ?lpy0)) true_1) (not (= (in_full_extent_of ?p_1py20 ?lpy0) true_1)))) :pattern ((set_in ?p_1py20 (full_extent ?lpy0))) )) :named A1_79))
(assert (! (forall ((?p_1py21 Int)(?t_1py4 Int)) (! (or (not (= (is ?p_1py21 ?t_1py4) true_1)) (= ?p_1py21 (ptr ?t_1py4 (?r!0 ?t_1py4 ?p_1py21)))) :pattern ((is ?p_1py21 ?t_1py4)) )) :named A1_80))
(assert (! (forall ((?p_1py22 Int)(?t_1py5 Int)) (! (and (or (not (= (is ?p_1py22 ?t_1py5) true_1)) (= (typ ?p_1py22) ?t_1py5)) (or (= (is ?p_1py22 ?t_1py5) true_1) (not (= (typ ?p_1py22) ?t_1py5)))) :pattern ((is ?p_1py22 ?t_1py5)) )) :named A1_81))
(assert (! (forall ((?p_1py23 Int)) (! (or (not (= (is ?p_1py23 node) true_1)) (= (dot ?p_1py23 node_abstractValue) (ptr seq (+ 16 (ref ?p_1py23))))) :pattern ((dot ?p_1py23 node_abstractValue)) )) :named A1_82))
(assert (! (forall ((?p_1py24 Int)) (! (or (not (= (is ?p_1py24 node) true_1)) (= (dot ?p_1py24 node_data) (ptr (ptr_to void) (+ 8 (ref ?p_1py24))))) :pattern ((dot ?p_1py24 node_data)) )) :named A1_83))
(assert (! (forall ((?p_1py25 Int)) (! (or (not (= (is ?p_1py25 node) true_1)) (= (dot ?p_1py25 node_next) (ptr (ptr_to node) (ref ?p_1py25)))) :pattern ((dot ?p_1py25 node_next)) )) :named A1_84))
(assert (! (forall ((?p_1py26 Int)) (! (or (not (= (is ?p_1py26 node) true_1)) (= (dot ?p_1py26 node_prev) (ptr (ptr_to node) (+ 20 (ref ?p_1py26))))) :pattern ((dot ?p_1py26 node_prev)) )) :named A1_85))
(assert (! (forall ((?p_1py27 Int)) (! (or (not (= (is ?p_1py27 queue) true_1)) (= (dot ?p_1py27 queue_abstractValue) (ptr seq (+ 16 (ref ?p_1py27))))) :pattern ((dot ?p_1py27 queue_abstractValue)) )) :named A1_86))
(assert (! (forall ((?p_1py28 Int)) (! (or (not (= (is ?p_1py28 queue) true_1)) (= (dot ?p_1py28 queue_head) (ptr (ptr_to node) (ref ?p_1py28)))) :pattern ((dot ?p_1py28 queue_head)) )) :named A1_87))
(assert (! (forall ((?p_1py29 Int)) (! (or (not (= (is ?p_1py29 queue) true_1)) (= (dot ?p_1py29 queue_tail) (ptr (ptr_to node) (+ 8 (ref ?p_1py29))))) :pattern ((dot ?p_1py29 queue_tail)) )) :named A1_88))
(assert (! (forall ((?rpy7 Int)(?dpy0 Int)) (! (= (is_primitive (map_t ?rpy7 ?dpy0)) true_1) :pattern ((map_t ?rpy7 ?dpy0)) )) :named A1_89))
(assert (! (forall ((?rpy8 Int)(?dpy1 Int)) (! (= (map_domain (map_t ?rpy8 ?dpy1)) ?dpy1) :pattern ((map_t ?rpy8 ?dpy1)) )) :named A1_90))
(assert (! (forall ((?rpy9 Int)(?dpy2 Int)) (! (= (map_range (map_t ?rpy9 ?dpy2)) ?rpy9) :pattern ((map_t ?rpy9 ?dpy2)) )) :named A1_91))
(assert (! (forall ((?rpy10 Int)(?dpy3 Int)) (! (= (ptr_level (map_t ?rpy10 ?dpy3)) (+ 3 (ptr_level ?rpy10))) :pattern ((map_t ?rpy10 ?dpy3)) )) :named A1_92))
(assert (! (forall ((?rpy11 Int)(?o_1py5 Int)) (! (and (or (not (= (set_in ?o_1py5 (set_singleton ?rpy11)) true_1)) (= ?rpy11 ?o_1py5)) (or (not (= ?rpy11 ?o_1py5)) (= (set_in ?o_1py5 (set_singleton ?rpy11)) true_1))) :pattern ((set_in ?o_1py5 (set_singleton ?rpy11))) )) :named A1_93))
(assert (! (forall ((?rpy12 Int)(?q_1py2 Int)) (! (and (or (= ?q_1py2 (ptr node ?rpy12)) (= ?q_1py2 (dot (ptr node ?rpy12) node_next)) (= ?q_1py2 (dot (ptr node ?rpy12) node_data)) (= ?q_1py2 (dot (ptr node ?rpy12) node_abstractValue)) (= ?q_1py2 (dot (ptr node ?rpy12) node_prev)) (not (= (in_full_extent_of ?q_1py2 (ptr node ?rpy12)) true_1))) (or (= (in_full_extent_of ?q_1py2 (ptr node ?rpy12)) true_1) (and (not (= ?q_1py2 (ptr node ?rpy12))) (not (= ?q_1py2 (dot (ptr node ?rpy12) node_next))) (not (= ?q_1py2 (dot (ptr node ?rpy12) node_data))) (not (= ?q_1py2 (dot (ptr node ?rpy12) node_abstractValue))) (not (= ?q_1py2 (dot (ptr node ?rpy12) node_prev)))))) :pattern ((in_full_extent_of ?q_1py2 (ptr node ?rpy12))) )) :named A1_94))
(assert (! (forall ((?rpy13 Int)(?q_1py3 Int)) (! (and (or (= ?q_1py3 (ptr queue ?rpy13)) (= ?q_1py3 (dot (ptr queue ?rpy13) queue_head)) (= ?q_1py3 (dot (ptr queue ?rpy13) queue_tail)) (= ?q_1py3 (dot (ptr queue ?rpy13) queue_abstractValue)) (not (= (in_full_extent_of ?q_1py3 (ptr queue ?rpy13)) true_1))) (or (= (in_full_extent_of ?q_1py3 (ptr queue ?rpy13)) true_1) (and (not (= ?q_1py3 (ptr queue ?rpy13))) (not (= ?q_1py3 (dot (ptr queue ?rpy13) queue_head))) (not (= ?q_1py3 (dot (ptr queue ?rpy13) queue_tail))) (not (= ?q_1py3 (dot (ptr queue ?rpy13) queue_abstractValue)))))) :pattern ((in_full_extent_of ?q_1py3 (ptr queue ?rpy13))) )) :named A1_95))
(assert (! (forall ((?spy5 Int)(?ipy7 Int)(?jpy2 Int)) (! (or (not (<= 0 ?jpy2)) (not (<= 0 ?ipy7)) (and (or (<= ?ipy7 ?jpy2) (= (seq_index (seq_remove ?spy5 ?ipy7) ?jpy2) (seq_index ?spy5 ?jpy2))) (or (not (<= ?ipy7 ?jpy2)) (= (seq_index (seq_remove ?spy5 ?ipy7) ?jpy2) (seq_index ?spy5 (+ 1 ?jpy2)))))) :pattern ((seq_index (seq_remove ?spy5 ?ipy7) ?jpy2)) )) :named A1_96))
(assert (! (forall ((?spy6 Int)(?ipy8 Int)) (! (or (not (<= (seq_length ?spy6) ?ipy8)) (= (seq_remove ?spy6 ?ipy8) ?spy6)) :pattern ((seq_remove ?spy6 ?ipy8)) )) :named A1_97))
(assert (! (forall ((?spy7 Int)(?ipy9 Int)) (! (or (not (<= 0 ?ipy9)) (<= (seq_length ?spy7) ?ipy9) (= (seq_length (seq_remove ?spy7 ?ipy9)) (+ (- 1) (seq_length ?spy7)))) :pattern ((seq_length (seq_remove ?spy7 ?ipy9))) )) :named A1_98))
(assert (! (forall ((?spy8 Int)(?npy7 Int)(?jpy3 Int)) (! (or (<= ?npy7 ?jpy3) (not (<= 0 ?jpy3)) (<= (seq_length ?spy8) ?jpy3) (= (seq_index (seq_take ?spy8 ?npy7) ?jpy3) (seq_index ?spy8 ?jpy3))) :pattern ((seq_index (seq_take ?spy8 ?npy7) ?jpy3)) )) :named A1_99))
(assert (! (forall ((?spy9 Int)(?npy8 Int)(?jpy4 Int)) (! (or (not (<= 0 ?jpy4)) (not (<= 0 ?npy8)) (= (seq_index (seq_drop ?spy9 ?npy8) ?jpy4) (seq_index ?spy9 (+ ?jpy4 ?npy8))) (<= (+ (seq_length ?spy9) (* (- 1) ?npy8)) ?jpy4)) :pattern ((seq_index (seq_drop ?spy9 ?npy8) ?jpy4)) )) :named A1_100))
(assert (! (forall ((?spy10 Int)(?npy9 Int)) (! (or (not (<= 0 ?npy9)) (and (or (not (<= ?npy9 (seq_length ?spy10))) (= (seq_length (seq_drop ?spy10 ?npy9)) (+ (seq_length ?spy10) (* (- 1) ?npy9)))) (or (<= ?npy9 (seq_length ?spy10)) (= (seq_length (seq_drop ?spy10 ?npy9)) 0)))) :pattern ((seq_length (seq_drop ?spy10 ?npy9))) )) :named A1_101))
(assert (! (forall ((?spy11 Int)(?npy10 Int)) (! (or (not (<= 0 ?npy10)) (and (or (not (<= ?npy10 (seq_length ?spy11))) (= (seq_length (seq_take ?spy11 ?npy10)) ?npy10)) (or (<= ?npy10 (seq_length ?spy11)) (= (seq_length (seq_take ?spy11 ?npy10)) (seq_length ?spy11))))) :pattern ((seq_length (seq_take ?spy11 ?npy10))) )) :named A1_102))
(assert (! (forall ((?spy12 Int)) (! (<= 0 (seq_length ?spy12)) :pattern ((seq_length ?spy12)) )) :named A1_103))
(assert (! (forall ((?spy13 Int)) (! (or (not (= (seq_length ?spy13) 0)) (= ?spy13 seq_empty)) :pattern ((seq_length ?spy13)) )) :named A1_104))
(assert (! (forall ((?s0py0 Int)(?s1_1py0 Int)(?npy11 Int)) (! (and (or (<= (seq_length ?s0py0) ?npy11) (= (seq_index (seq_append ?s0py0 ?s1_1py0) ?npy11) (seq_index ?s0py0 ?npy11))) (or (not (<= (seq_length ?s0py0) ?npy11)) (= (seq_index (seq_append ?s0py0 ?s1_1py0) ?npy11) (seq_index ?s1_1py0 (+ ?npy11 (* (- 1) (seq_length ?s0py0))))))) :pattern ((seq_index (seq_append ?s0py0 ?s1_1py0) ?npy11)) )) :named A1_105))
(assert (! (forall ((?s0py1 Int)(?s1_1py1 Int)) (! (= (seq_length (seq_append ?s0py1 ?s1_1py1)) (+ (seq_length ?s0py1) (seq_length ?s1_1py1))) :pattern ((seq_length (seq_append ?s0py1 ?s1_1py1))) )) :named A1_106))
(assert (! (forall ((?s0py2 Int)(?s1_1py2 Int)) (! (or (not (= (seq_equal ?s0py2 ?s1_1py2) true_1)) (= ?s0py2 ?s1_1py2)) :pattern ((seq_equal ?s0py2 ?s1_1py2)) )) :named A1_107))
(assert (! (forall ((?s0py3 Int)(?s1_1py3 Int)) (! (or (not (= (seq_length ?s0py3) (seq_length ?s1_1py3))) (= (seq_equal ?s0py3 ?s1_1py3) true_1) (and (<= 0 (?j!7 ?s1_1py3 ?s0py3)) (not (<= (seq_length ?s0py3) (?j!7 ?s1_1py3 ?s0py3))) (not (= (seq_index ?s0py3 (?j!7 ?s1_1py3 ?s0py3)) (seq_index ?s1_1py3 (?j!7 ?s1_1py3 ?s0py3)))))) :pattern ((seq_equal ?s0py3 ?s1_1py3)) )) :named A1_108))
(assert (! (forall ((?s_1py7 Int)(?mpy27 Int)(?npy12 Int)) (! (and (or (not (= (inv ?mpy27 ?s_1py7 ?npy12 node) true_1)) (and (= (is ?npy12 node) true_1) (= (typed ?mpy27 ?npy12) true_1))) (or (not (= (typed ?mpy27 ?npy12) true_1)) (not (= (is ?npy12 node) true_1)) (= (inv ?mpy27 ?s_1py7 ?npy12 node) true_1))) :pattern ((inv ?mpy27 ?s_1py7 ?npy12 node)) )) :named A1_109))
(assert (! (forall ((?s_1py8 Int)(?mpy28 Int)(?qpy8 Int)) (! (and (or (not (= (inv ?mpy28 ?s_1py8 ?qpy8 queue) true_1)) (= (ValidQueue ?mpy28 ?s_1py8 ?qpy8) true_1)) (or (= (inv ?mpy28 ?s_1py8 ?qpy8 queue) true_1) (not (= (ValidQueue ?mpy28 ?s_1py8 ?qpy8) true_1)))) :pattern ((inv ?mpy28 ?s_1py8 ?qpy8 queue)) :pattern ((ValidQueue ?mpy28 ?s_1py8 ?qpy8)) )) :named A1_110))
(assert (! (forall ((?tpy3 Int)) (! (= (seq_index (seq_singleton ?tpy3) 0) ?tpy3) :pattern ((seq_index (seq_singleton ?tpy3) 0)) )) :named A1_111))
(assert (! (forall ((?tpy4 Int)) (! (= (seq_length (seq_singleton ?tpy4)) 1) :pattern ((seq_length (seq_singleton ?tpy4))) )) :named A1_112))
(assert (! (forall ((?tpy5 Int)) (! (and (or (not (= (is_primitive ?tpy5) true_1)) (= (kind_of ?tpy5) kind_primitive)) (or (= (is_primitive ?tpy5) true_1) (not (= (kind_of ?tpy5) kind_primitive)))) :pattern ((is_primitive ?tpy5)) )) :named A1_113))
(assert (! (forall ((?t_1py6 Int)(?bpy6 Int)) (! (= (ref (ptr ?t_1py6 ?bpy6)) ?bpy6) :pattern ((ptr ?t_1py6 ?bpy6)) )) :named A1_114))
(assert (! (forall ((?t_1py7 Int)(?bpy7 Int)) (! (= (typ (ptr ?t_1py7 ?bpy7)) ?t_1py7) :pattern ((ptr ?t_1py7 ?bpy7)) )) :named A1_115))
(assert (! (= (good_meta meta) true_1) :named A2_0))
(assert (! (= (good_state state) true_1) :named A2_1))
(assert (! (= (inv meta state from queue) true_1) :named A2_2))
(assert (! (= (inv meta state to queue) true_1) :named A2_3))
(assert (! (= (is from queue) true_1) :named A2_4))
(assert (! (= (is to queue) true_1) :named A2_5))
(assert (! (= (select2 meta from status_tag) consistent) :named A2_6))
(assert (! (= (select2 meta to status_tag) consistent) :named A2_7))
(assert (! (not (<= (seq_length (AbstractValue meta state from)) 0)) :named A2_8))
(assert (! (not (= from to)) :named A2_9))
(assert (! (or (not (= (select2 meta from status_tag) consistent)) (and (= (select2 meta from status_tag) consistent) (or (not (= (typ from) queue)) (and (= (typ from) queue) (= (good_meta meta_0) true_1) (= (good_state state_0) true_1) (= (inv meta_0 state_0 from queue) true_1) (= (select2 meta_0 from status_tag) mutable) (forall ((?p_1py30 Int)) (! (or (not (= (emb meta_0 ?p_1py30) from)) (not (= (is_primitive (typ ?p_1py30)) true_1)) (and (= (select2 meta_0 ?p_1py30 status_tag) mutable) (= (select2 meta ?p_1py30 status_tag) committed))) :pattern ((select2 meta_0 ?p_1py30 status_tag)) )) (forall ((?p_1py31 Int)) (! (or (not (= (set_in ?p_1py31 (select2 meta from owned_tag)) true_1)) (and (= (select2 meta_0 ?p_1py31 status_tag) consistent) (= (select2 meta ?p_1py31 status_tag) committed))) :pattern ((select2 meta_0 ?p_1py31 status_tag)) :pattern ((select2 meta ?p_1py31 status_tag)) )) (forall ((?p_1py32 Int)(?t_1py8 Int)) (! (or (= (select2 meta_0 ?p_1py32 ?t_1py8) (select2 meta ?p_1py32 ?t_1py8)) (and (or (= ?p_1py32 from) (= (set_in ?p_1py32 (select2 meta from owned_tag)) true_1) (and (= (is_primitive (typ ?p_1py32)) true_1) (= (emb meta_0 ?p_1py32) from))) (= ?t_1py8 status_tag))) :pattern ((select2 meta_0 ?p_1py32 ?t_1py8)) )) (= state_0 (store1 state from ?x_2!13)) (or (not (= (is_primitive queue) true_1)) (= state state_0)) (= (ptr node ?r!14) (select1 state_0 (dot from queue_head))) (or (not (= (typed meta_0 (dot from queue_head)) true_1)) (not (= (is (dot from queue_head) (ptr_to node)) true_1)) (and (= (is (dot from queue_head) (ptr_to node)) true_1) (= (typed meta_0 (dot from queue_head)) true_1) (= nod_0 (select1 state_0 (dot from queue_head))) (or (and (not (= nod_0 from)) (not (= nod_0 to)) (or (and (not (= (select2 meta nod_0 status_tag) committed)) (not (= (instantiate_int (select2 meta_0 nod_0 status_tag)) true_1))) (and (not (= (select2 meta_0 nod_0 status_tag) mutable)) (not (= (select2 meta_0 nod_0 status_tag) consistent))))) (and (or (= nod_0 from) (= nod_0 to) (and (or (= (select2 meta nod_0 status_tag) committed) (= (instantiate_int (select2 meta_0 nod_0 status_tag)) true_1)) (or (= (select2 meta_0 nod_0 status_tag) mutable) (= (select2 meta_0 nod_0 status_tag) consistent)))) (or (not (= (kind_of (typ from)) kind_composite)) (and (= (kind_of (typ from)) kind_composite) (or (not (= (set_in nod_0 (select2 meta_0 from owned_tag)) true_1)) (and (= (set_in nod_0 (select2 meta_0 from owned_tag)) true_1) (= (good_meta meta_1) true_1) (not (= (select2 meta_1 nod_0 hasowner_tag) true_1)) (= (select2 meta_1 from owned_tag) (set_subtraction (select2 meta_0 from owned_tag) (set_singleton nod_0))) (forall ((?q_1py4 Int)(?t_1py9 Int)) (! (or (= (select2 meta_1 ?q_1py4 ?t_1py9) (select2 meta_0 ?q_1py4 ?t_1py9)) (and (= ?q_1py4 from) (= ?t_1py9 owned_tag)) (and (= ?q_1py4 nod_0) (= ?t_1py9 hasowner_tag))) :pattern ((select2 meta_1 ?q_1py4 ?t_1py9)) )) (or (and (not (= nod_0 from)) (not (= nod_0 to)) (or (and (not (= (select2 meta nod_0 status_tag) committed)) (not (= (instantiate_int (select2 meta_1 nod_0 status_tag)) true_1))) (and (not (= (select2 meta_1 nod_0 status_tag) mutable)) (not (= (select2 meta_1 nod_0 status_tag) consistent))))) (and (or (= nod_0 from) (= nod_0 to) (and (or (= (select2 meta nod_0 status_tag) committed) (= (instantiate_int (select2 meta_1 nod_0 status_tag)) true_1)) (or (= (select2 meta_1 nod_0 status_tag) consistent) (= (select2 meta_1 nod_0 status_tag) mutable)))) (or (not (= (select2 meta_1 nod_0 status_tag) consistent)) (and (= (select2 meta_1 nod_0 status_tag) consistent) (or (not (= (typ nod_0) node)) (and (= (typ nod_0) node) (= (good_meta meta_2) true_1) (= (good_state state_1) true_1) (= (inv meta_2 state_1 nod_0 node) true_1) (= (select2 meta_2 nod_0 status_tag) mutable) (forall ((?p_1py33 Int)) (! (or (not (= (is_primitive (typ ?p_1py33)) true_1)) (not (= (emb meta_2 ?p_1py33) nod_0)) (and (= (select2 meta_2 ?p_1py33 status_tag) mutable) (= (select2 meta_1 ?p_1py33 status_tag) committed))) :pattern ((select2 meta_2 ?p_1py33 status_tag)) )) (forall ((?p_1py34 Int)) (! (or (not (= (set_in ?p_1py34 (select2 meta_1 nod_0 owned_tag)) true_1)) (and (= (select2 meta_2 ?p_1py34 status_tag) consistent) (= (select2 meta_1 ?p_1py34 status_tag) committed))) :pattern ((select2 meta_2 ?p_1py34 status_tag)) :pattern ((select2 meta_1 ?p_1py34 status_tag)) )) (forall ((?p_1py35 Int)(?t_1py10 Int)) (! (or (= (select2 meta_2 ?p_1py35 ?t_1py10) (select2 meta_1 ?p_1py35 ?t_1py10)) (and (or (= ?p_1py35 nod_0) (= (set_in ?p_1py35 (select2 meta_1 nod_0 owned_tag)) true_1) (and (= (is_primitive (typ ?p_1py35)) true_1) (= (emb meta_2 ?p_1py35) nod_0))) (= ?t_1py10 status_tag))) :pattern ((select2 meta_2 ?p_1py35 ?t_1py10)) )) (= state_1 (store1 state_0 nod_0 ?x_2!15)) (or (not (= (is_primitive node) true_1)) (= state_0 state_1)) (= (ptr node ?r!16) (select1 state_1 (dot nod_0 node_next))) (or (not (= (typed meta_2 (dot nod_0 node_next)) true_1)) (not (= (is (dot nod_0 node_next) (ptr_to node)) true_1)) (and (= (is (dot nod_0 node_next) (ptr_to node)) true_1) (= (typed meta_2 (dot nod_0 node_next)) true_1) (= (ptr node ?r!17) (select1 state_1 (dot from queue_head))) (or (not (= (typed meta_2 (dot from queue_head)) true_1)) (not (= (is (dot from queue_head) (ptr_to node)) true_1)) (and (= (is (dot from queue_head) (ptr_to node)) true_1) (= (typed meta_2 (dot from queue_head)) true_1) (or (and (not (= (dot from queue_head) from)) (not (= (dot from queue_head) to)) (or (and (not (= (select2 meta (dot from queue_head) status_tag) committed)) (not (= (instantiate_int (select2 meta_2 (dot from queue_head) status_tag)) true_1))) (and (not (= (select2 meta_2 (dot from queue_head) status_tag) mutable)) (not (= (select2 meta_2 (dot from queue_head) status_tag) consistent))))) (and (or (= (dot from queue_head) from) (= (dot from queue_head) to) (and (or (= (select2 meta (dot from queue_head) status_tag) committed) (= (instantiate_int (select2 meta_2 (dot from queue_head) status_tag)) true_1)) (or (= (select2 meta_2 (dot from queue_head) status_tag) mutable) (= (select2 meta_2 (dot from queue_head) status_tag) consistent)))) (= state_2 (store1 state_1 (dot from queue_head) (select1 state_1 (dot nod_0 node_next)))) (= (ptr node ?r!18) (select1 state_2 (dot from queue_head))) (or (not (= (typed meta_2 (dot from queue_head)) true_1)) (not (= (is (dot from queue_head) (ptr_to node)) true_1)) (and (= (is (dot from queue_head) (ptr_to node)) true_1) (= (typed meta_2 (dot from queue_head)) true_1) (or (not (= (is (dot (select1 state_2 (dot from queue_head)) node_abstractValue) seq) true_1)) (not (= (typed meta_2 (dot (select1 state_2 (dot from queue_head)) node_abstractValue)) true_1)) (and (= (is (dot (select1 state_2 (dot from queue_head)) node_abstractValue) seq) true_1) (= (typed meta_2 (dot (select1 state_2 (dot from queue_head)) node_abstractValue)) true_1) (or (not (= (is (dot from queue_abstractValue) seq) true_1)) (not (= (typed meta_2 (dot from queue_abstractValue)) true_1)) (and (= (is (dot from queue_abstractValue) seq) true_1) (= (typed meta_2 (dot from queue_abstractValue)) true_1) (or (and (not (= (dot from queue_abstractValue) from)) (not (= (dot from queue_abstractValue) to)) (or (and (not (= (select2 meta (dot from queue_abstractValue) status_tag) committed)) (not (= (instantiate_int (select2 meta_2 (dot from queue_abstractValue) status_tag)) true_1))) (and (not (= (select2 meta_2 (dot from queue_abstractValue) status_tag) mutable)) (not (= (select2 meta_2 (dot from queue_abstractValue) status_tag) consistent))))) (and (or (= (dot from queue_abstractValue) from) (= (dot from queue_abstractValue) to) (and (or (= (select2 meta (dot from queue_abstractValue) status_tag) committed) (= (instantiate_int (select2 meta_2 (dot from queue_abstractValue) status_tag)) true_1)) (or (= (select2 meta_2 (dot from queue_abstractValue) status_tag) consistent) (= (select2 meta_2 (dot from queue_abstractValue) status_tag) mutable)))) (= state_3 (store1 state_2 (dot from queue_abstractValue) (select1 state_2 (dot (select1 state_2 (dot from queue_head)) node_abstractValue)))) (= (ptr node ?r!19) (select1 state_3 (dot from queue_head))) (or (not (= (typed meta_2 (dot from queue_head)) true_1)) (not (= (is (dot from queue_head) (ptr_to node)) true_1)) (and (= (is (dot from queue_head) (ptr_to node)) true_1) (= (typed meta_2 (dot from queue_head)) true_1) (= (ptr void ?r!20) (select1 state_3 (dot (select1 state_3 (dot from queue_head)) node_data))) (or (not (= (is (dot (select1 state_3 (dot from queue_head)) node_data) (ptr_to void)) true_1)) (not (= (typed meta_2 (dot (select1 state_3 (dot from queue_head)) node_data)) true_1)) (and (= (is (dot (select1 state_3 (dot from queue_head)) node_data) (ptr_to void)) true_1) (= (typed meta_2 (dot (select1 state_3 (dot from queue_head)) node_data)) true_1) (= (ptr void ?r!21) (select1 state_3 (dot nod_0 node_data))) (or (not (= (typed meta_2 (dot nod_0 node_data)) true_1)) (not (= (is (dot nod_0 node_data) (ptr_to void)) true_1)) (and (= (is (dot nod_0 node_data) (ptr_to void)) true_1) (= (typed meta_2 (dot nod_0 node_data)) true_1) (or (and (not (= (dot nod_0 node_data) from)) (not (= (dot nod_0 node_data) to)) (or (and (not (= (select2 meta (dot nod_0 node_data) status_tag) committed)) (not (= (instantiate_int (select2 meta_2 (dot nod_0 node_data) status_tag)) true_1))) (and (not (= (select2 meta_2 (dot nod_0 node_data) status_tag) mutable)) (not (= (select2 meta_2 (dot nod_0 node_data) status_tag) consistent))))) (and (or (= (dot nod_0 node_data) from) (= (dot nod_0 node_data) to) (and (or (= (select2 meta (dot nod_0 node_data) status_tag) committed) (= (instantiate_int (select2 meta_2 (dot nod_0 node_data) status_tag)) true_1)) (or (= (select2 meta_2 (dot nod_0 node_data) status_tag) mutable) (= (select2 meta_2 (dot nod_0 node_data) status_tag) consistent)))) (= state_4 (store1 state_3 (dot nod_0 node_data) (select1 state_3 (dot (select1 state_3 (dot from queue_head)) node_data)))) (= (ptr node ?r!22) (select1 state_4 (dot from queue_head))) (or (not (= (typed meta_2 (dot from queue_head)) true_1)) (not (= (is (dot from queue_head) (ptr_to node)) true_1)) (and (= (is (dot from queue_head) (ptr_to node)) true_1) (= (typed meta_2 (dot from queue_head)) true_1) (or (and (not (= (select1 state (dot from queue_head)) from)) (not (= (select1 state (dot from queue_head)) to)) (or (and (not (= (select2 meta (select1 state_4 (dot from queue_head)) status_tag) committed)) (not (= (instantiate_int (select2 meta_2 (select1 state_4 (dot from queue_head)) status_tag)) true_1))) (and (not (= (select2 meta_2 (select1 state_4 (dot from queue_head)) status_tag) mutable)) (not (= (select2 meta_2 (select1 state_4 (dot from queue_head)) status_tag) consistent))))) (and (or (= (select1 state (dot from queue_head)) from) (= (select1 state (dot from queue_head)) to) (and (or (= (select2 meta (select1 state_4 (dot from queue_head)) status_tag) committed) (= (instantiate_int (select2 meta_2 (select1 state_4 (dot from queue_head)) status_tag)) true_1)) (or (= (select2 meta_2 (select1 state_4 (dot from queue_head)) status_tag) mutable) (= (select2 meta_2 (select1 state_4 (dot from queue_head)) status_tag) consistent)))) (= call14546formal__l_0 (select1 state_4 (dot from queue_head))) (or (not (= (select2 meta_2 call14546formal__l_0 status_tag) consistent)) (and (= (select2 meta_2 call14546formal__l_0 status_tag) consistent) (or (not (= (typ call14546formal__l_0) node)) (and (= (typ call14546formal__l_0) node) (= (good_meta meta_3) true_1) (= (good_state state_5) true_1) (= (inv meta_3 state_5 call14546formal__l_0 node) true_1) (= (select2 meta_3 call14546formal__l_0 status_tag) mutable) (forall ((?p_1py36 Int)) (! (or (not (= (is_primitive (typ ?p_1py36)) true_1)) (not (= (emb meta_3 ?p_1py36) call14546formal__l_0)) (and (= (select2 meta_3 ?p_1py36 status_tag) mutable) (= (select2 meta_2 ?p_1py36 status_tag) committed))) :pattern ((select2 meta_3 ?p_1py36 status_tag)) )) (forall ((?p_1py37 Int)) (! (or (not (= (set_in ?p_1py37 (select2 meta_2 call14546formal__l_0 owned_tag)) true_1)) (and (= (select2 meta_3 ?p_1py37 status_tag) consistent) (= (select2 meta_2 ?p_1py37 status_tag) committed))) :pattern ((select2 meta_3 ?p_1py37 status_tag)) :pattern ((select2 meta_2 ?p_1py37 status_tag)) )) (forall ((?p_1py38 Int)(?t_1py11 Int)) (! (or (= (select2 meta_3 ?p_1py38 ?t_1py11) (select2 meta_2 ?p_1py38 ?t_1py11)) (and (or (= ?p_1py38 call14546formal__l_0) (= (set_in ?p_1py38 (select2 meta_2 call14546formal__l_0 owned_tag)) true_1) (and (= (is_primitive (typ ?p_1py38)) true_1) (= (emb meta_3 ?p_1py38) call14546formal__l_0))) (= ?t_1py11 status_tag))) :pattern ((select2 meta_3 ?p_1py38 ?t_1py11)) )) (= state_5 (store1 state_4 call14546formal__l_0 ?x_2!23)) (or (not (= (is_primitive node) true_1)) (= state_4 state_5)) (= (ptr node ?r!24) (select1 state_5 (dot from queue_head))) (or (not (= (is (dot from queue_head) (ptr_to node)) true_1)) (not (= (typed meta_3 (dot from queue_head)) true_1)) (and (= (is (dot from queue_head) (ptr_to node)) true_1) (= (typed meta_3 (dot from queue_head)) true_1) (= (ptr node ?r!25) (select1 state_5 (dot (select1 state_5 (dot from queue_head)) node_prev))) (or (not (= (typed meta_3 (dot (select1 state_5 (dot from queue_head)) node_prev)) true_1)) (not (= (is (dot (select1 state_5 (dot from queue_head)) node_prev) (ptr_to node)) true_1)) (and (= (is (dot (select1 state_5 (dot from queue_head)) node_prev) (ptr_to node)) true_1) (= (typed meta_3 (dot (select1 state_5 (dot from queue_head)) node_prev)) true_1) (or (and (not (= (dot (select1 state (dot from queue_head)) node_prev) from)) (not (= (dot (select1 state (dot from queue_head)) node_prev) to)) (or (and (not (= (select2 meta (dot (select1 state_5 (dot from queue_head)) node_prev) status_tag) committed)) (not (= (instantiate_int (select2 meta_3 (dot (select1 state_5 (dot from queue_head)) node_prev) status_tag)) true_1))) (and (not (= (select2 meta_3 (dot (select1 state_5 (dot from queue_head)) node_prev) status_tag) mutable)) (not (= (select2 meta_3 (dot (select1 state_5 (dot from queue_head)) node_prev) status_tag) consistent))))) (and (or (= (dot (select1 state (dot from queue_head)) node_prev) from) (= (dot (select1 state (dot from queue_head)) node_prev) to) (and (or (= (select2 meta (dot (select1 state_5 (dot from queue_head)) node_prev) status_tag) committed) (= (instantiate_int (select2 meta_3 (dot (select1 state_5 (dot from queue_head)) node_prev) status_tag)) true_1)) (or (= (select2 meta_3 (dot (select1 state_5 (dot from queue_head)) node_prev) status_tag) mutable) (= (select2 meta_3 (dot (select1 state_5 (dot from queue_head)) node_prev) status_tag) consistent)))) (= state_6 (store1 state_5 (dot (select1 state_5 (dot from queue_head)) node_prev) (ptr node (ref null)))) (= (ptr node ?r!26) (select1 state_6 (dot from queue_head))) (or (not (= (is (dot from queue_head) (ptr_to node)) true_1)) (not (= (typed meta_3 (dot from queue_head)) true_1)) (and (= (is (dot from queue_head) (ptr_to node)) true_1) (= (typed meta_3 (dot from queue_head)) true_1) (or (and (not (= (select1 state (dot from queue_head)) from)) (not (= (select1 state (dot from queue_head)) to)) (or (and (not (= (select2 meta (select1 state_6 (dot from queue_head)) status_tag) committed)) (not (= (instantiate_int (select2 meta_3 (select1 state_6 (dot from queue_head)) status_tag)) true_1))) (and (not (= (select2 meta_3 (select1 state_6 (dot from queue_head)) status_tag) mutable)) (not (= (select2 meta_3 (select1 state_6 (dot from queue_head)) status_tag) consistent))))) (and (or (= (select1 state (dot from queue_head)) from) (= (select1 state (dot from queue_head)) to) (and (or (= (select2 meta (select1 state_6 (dot from queue_head)) status_tag) committed) (= (instantiate_int (select2 meta_3 (select1 state_6 (dot from queue_head)) status_tag)) true_1)) (or (= (select2 meta_3 (select1 state_6 (dot from queue_head)) status_tag) consistent) (= (select2 meta_3 (select1 state_6 (dot from queue_head)) status_tag) mutable)))) (or (and (= (set_in ?p_1!27 (select2 meta_3 (select1 state_6 (dot from queue_head)) owned_tag)) true_1) (not (= ?p_1!27 from)) (not (= ?p_1!27 to)) (or (and (not (= (select2 meta ?p_1!27 status_tag) committed)) (not (= (instantiate_int (select2 meta_3 ?p_1!27 status_tag)) true_1))) (and (not (= (select2 meta_3 ?p_1!27 status_tag) mutable)) (not (= (select2 meta_3 ?p_1!27 status_tag) consistent))))) (and (forall ((?p_1py39 Int)) (! (or (not (= (set_in ?p_1py39 (select2 meta_3 (select1 state_6 (dot from queue_head)) owned_tag)) true_1)) (= ?p_1py39 from) (= ?p_1py39 to) (and (or (= (select2 meta ?p_1py39 status_tag) committed) (= (instantiate_int (select2 meta_3 ?p_1py39 status_tag)) true_1)) (or (= (select2 meta_3 ?p_1py39 status_tag) consistent) (= (select2 meta_3 ?p_1py39 status_tag) mutable)))) :pattern ((dont_instantiate ?p_1py39)) )) (= call14815formal__l_0 (select1 state_6 (dot from queue_head))) (or (not (= (typ call14815formal__l_0) node)) (and (= (typ call14815formal__l_0) node) (or (not (= (select2 meta_3 call14815formal__l_0 status_tag) mutable)) (and (= (select2 meta_3 call14815formal__l_0 status_tag) mutable) (or (and (= (set_in ?p_1!28 (select2 meta_3 call14815formal__l_0 owned_tag)) true_1) (not (= (select2 meta_3 ?p_1!28 status_tag) consistent))) (and (forall ((?p_1py40 Int)) (! (or (not (= (set_in ?p_1py40 (select2 meta_3 call14815formal__l_0 owned_tag)) true_1)) (= (select2 meta_3 ?p_1py40 status_tag) consistent)) :pattern ((select2 meta_3 ?p_1py40 status_tag)) )) (or (not (= (inv meta_3 state_6 call14815formal__l_0 node) true_1)) (and (= (inv meta_3 state_6 call14815formal__l_0 node) true_1) (= (good_meta meta_4) true_1) (= (good_state state_7) true_1) (= (inv meta_4 state_7 call14815formal__l_0 node) true_1) (forall ((?p_1py41 Int)) (! (or (not (= (set_in ?p_1py41 (select2 meta_3 call14815formal__l_0 owned_tag)) true_1)) (and (= (select2 meta_4 ?p_1py41 status_tag) committed) (= (select2 meta_3 ?p_1py41 status_tag) consistent))) :pattern ((select2 meta_4 ?p_1py41 status_tag)) )) (forall ((?p_1py42 Int)) (! (or (not (= (is_primitive (typ ?p_1py42)) true_1)) (not (= (emb meta_4 ?p_1py42) call14815formal__l_0)) (and (= (select2 meta_4 ?p_1py42 status_tag) committed) (= (select2 meta_3 ?p_1py42 status_tag) mutable))) :pattern ((select2 meta_4 ?p_1py42 status_tag)) )) (= (select2 meta_4 call14815formal__l_0 status_tag) consistent) (forall ((?p_1py43 Int)(?t_1py12 Int)) (! (or (= (select2 meta_4 ?p_1py43 ?t_1py12) (select2 meta_3 ?p_1py43 ?t_1py12)) (and (or (= ?p_1py43 call14815formal__l_0) (= (set_in ?p_1py43 (select2 meta_3 call14815formal__l_0 owned_tag)) true_1) (and (= (is_primitive (typ ?p_1py43)) true_1) (= (emb meta_4 ?p_1py43) call14815formal__l_0))) (= ?t_1py12 status_tag))) :pattern ((select2 meta_4 ?p_1py43 ?t_1py12)) )) (= state_7 (store1 state_6 call14815formal__l_0 ?x_2!29)) (or (not (= (is_primitive node) true_1)) (= state_6 state_7)) (or (and (= (set_in ?p_1!30 (select2 meta_4 from owned_tag)) true_1) (not (= ?p_1!30 from)) (not (= ?p_1!30 to)) (or (and (not (= (select2 meta ?p_1!30 status_tag) committed)) (not (= (instantiate_int (select2 meta_4 ?p_1!30 status_tag)) true_1))) (and (not (= (select2 meta_4 ?p_1!30 status_tag) mutable)) (not (= (select2 meta_4 ?p_1!30 status_tag) consistent))))) (and (forall ((?p_1py44 Int)) (! (or (not (= (set_in ?p_1py44 (select2 meta_4 from owned_tag)) true_1)) (= ?p_1py44 from) (= ?p_1py44 to) (and (or (= (select2 meta ?p_1py44 status_tag) committed) (= (instantiate_int (select2 meta_4 ?p_1py44 status_tag)) true_1)) (or (= (select2 meta_4 ?p_1py44 status_tag) consistent) (= (select2 meta_4 ?p_1py44 status_tag) mutable)))) :pattern ((dont_instantiate ?p_1py44)) )) (or (not (= (typ from) queue)) (and (= (typ from) queue) (or (not (= (select2 meta_4 from status_tag) mutable)) (and (= (select2 meta_4 from status_tag) mutable) (or (and (= (set_in ?p_1!31 (select2 meta_4 from owned_tag)) true_1) (not (= (select2 meta_4 ?p_1!31 status_tag) consistent))) (and (forall ((?p_1py45 Int)) (! (or (not (= (set_in ?p_1py45 (select2 meta_4 from owned_tag)) true_1)) (= (select2 meta_4 ?p_1py45 status_tag) consistent)) :pattern ((select2 meta_4 ?p_1py45 status_tag)) )) (or (not (= (inv meta_4 state_7 from queue) true_1)) (and (= (inv meta_4 state_7 from queue) true_1) (= (good_meta meta_5) true_1) (= (good_state state_8) true_1) (= (inv meta_5 state_8 from queue) true_1) (forall ((?p_1py46 Int)) (! (or (not (= (set_in ?p_1py46 (select2 meta_4 from owned_tag)) true_1)) (and (= (select2 meta_5 ?p_1py46 status_tag) committed) (= (select2 meta_4 ?p_1py46 status_tag) consistent))) :pattern ((select2 meta_5 ?p_1py46 status_tag)) )) (forall ((?p_1py47 Int)) (! (or (not (= (is_primitive (typ ?p_1py47)) true_1)) (not (= (emb meta_5 ?p_1py47) from)) (and (= (select2 meta_5 ?p_1py47 status_tag) committed) (= (select2 meta_4 ?p_1py47 status_tag) mutable))) :pattern ((select2 meta_5 ?p_1py47 status_tag)) )) (= (select2 meta_5 from status_tag) consistent) (forall ((?p_1py48 Int)(?t_1py13 Int)) (! (or (= (select2 meta_5 ?p_1py48 ?t_1py13) (select2 meta_4 ?p_1py48 ?t_1py13)) (and (or (= ?p_1py48 from) (= (set_in ?p_1py48 (select2 meta_4 from owned_tag)) true_1) (and (= (is_primitive (typ ?p_1py48)) true_1) (= (emb meta_5 ?p_1py48) from))) (= ?t_1py13 status_tag))) :pattern ((select2 meta_5 ?p_1py48 ?t_1py13)) )) (= state_8 (store1 state_7 from ?x_2!32)) (or (not (= (is_primitive queue) true_1)) (= state_7 state_8)) (or (not (= (seq_equal (AbstractValue meta_5 state_8 from) (seq_drop (AbstractValue meta state from) 1)) true_1)) (and (= (seq_equal (AbstractValue meta_5 state_8 from) (seq_drop (AbstractValue meta state from) 1)) true_1) (or (not (= (AbstractValue meta_5 state_8 to) (AbstractValue meta state to))) (and (= (AbstractValue meta_5 state_8 to) (AbstractValue meta state to)) (or (not (= (select1 state_8 (dot nod_0 node_data)) (seq_index (AbstractValue meta state from) 0))) (and (= (select1 state_8 (dot nod_0 node_data)) (seq_index (AbstractValue meta state from) 0)) (or (not (= (select2 meta_5 to status_tag) consistent)) (and (= (select2 meta_5 to status_tag) consistent) (or (not (= (typ to) queue)) (and (= (typ to) queue) (= (good_meta meta_6) true_1) (= (good_state state_9) true_1) (= (inv meta_6 state_9 to queue) true_1) (= (select2 meta_6 to status_tag) mutable) (forall ((?p_1py49 Int)) (! (or (not (= (is_primitive (typ ?p_1py49)) true_1)) (not (= (emb meta_6 ?p_1py49) to)) (and (= (select2 meta_6 ?p_1py49 status_tag) mutable) (= (select2 meta_5 ?p_1py49 status_tag) committed))) :pattern ((select2 meta_6 ?p_1py49 status_tag)) )) (forall ((?p_1py50 Int)) (! (or (not (= (set_in ?p_1py50 (select2 meta_5 to owned_tag)) true_1)) (and (= (select2 meta_6 ?p_1py50 status_tag) consistent) (= (select2 meta_5 ?p_1py50 status_tag) committed))) :pattern ((select2 meta_6 ?p_1py50 status_tag)) :pattern ((select2 meta_5 ?p_1py50 status_tag)) )) (forall ((?p_1py51 Int)(?t_1py14 Int)) (! (or (= (select2 meta_6 ?p_1py51 ?t_1py14) (select2 meta_5 ?p_1py51 ?t_1py14)) (and (or (= ?p_1py51 to) (= (set_in ?p_1py51 (select2 meta_5 to owned_tag)) true_1) (and (= (is_primitive (typ ?p_1py51)) true_1) (= (emb meta_6 ?p_1py51) to))) (= ?t_1py14 status_tag))) :pattern ((select2 meta_6 ?p_1py51 ?t_1py14)) )) (= state_9 (store1 state_8 to ?x_2!33)) (or (not (= (is_primitive queue) true_1)) (= state_8 state_9)) (or (and (= (set_in ?p_1!34 (select2 meta_6 to owned_tag)) true_1) (not (= ?p_1!34 from)) (not (= ?p_1!34 to)) (or (and (not (= (select2 meta ?p_1!34 status_tag) committed)) (not (= (instantiate_int (select2 meta_6 ?p_1!34 status_tag)) true_1))) (and (not (= (select2 meta_6 ?p_1!34 status_tag) mutable)) (not (= (select2 meta_6 ?p_1!34 status_tag) consistent))))) (and (forall ((?p_1py52 Int)) (! (or (not (= (set_in ?p_1py52 (select2 meta_6 to owned_tag)) true_1)) (= ?p_1py52 from) (= ?p_1py52 to) (and (or (= (select2 meta ?p_1py52 status_tag) committed) (= (instantiate_int (select2 meta_6 ?p_1py52 status_tag)) true_1)) (or (= (select2 meta_6 ?p_1py52 status_tag) consistent) (= (select2 meta_6 ?p_1py52 status_tag) mutable)))) :pattern ((dont_instantiate ?p_1py52)) )) (= call14971formal__ls_0 (select2 meta_6 to owned_tag)) (or (and (= (set_in ?l!35 call14971formal__ls_0) true_1) (not (= (select2 meta_6 ?l!35 status_tag) consistent))) (and (forall ((?lpy1 Int)) (! (or (not (= (set_in ?lpy1 call14971formal__ls_0) true_1)) (= (select2 meta_6 ?lpy1 status_tag) consistent)) :pattern ((set_in ?lpy1 call14971formal__ls_0)) )) (or (and (= (set_in ?l!36 call14971formal__ls_0) true_1) (not (= (typ ?l!36) node))) (and (forall ((?lpy2 Int)) (! (or (not (= (set_in ?lpy2 call14971formal__ls_0) true_1)) (= (typ ?lpy2) node)) :pattern ((set_in ?lpy2 call14971formal__ls_0)) )) (or (and (= (set_in ?l!37 call14971formal__ls_0) true_1) (= (inv meta_6 state_9 ?l!37 node) true_1) (not (= (select2 meta_6 ?l!37 owned_tag) set_empty))) (and (forall ((?lpy3 Int)) (! (or (not (= (inv meta_6 state_9 ?lpy3 node) true_1)) (= (select2 meta_6 ?lpy3 owned_tag) set_empty) (not (= (set_in ?lpy3 call14971formal__ls_0) true_1))) :pattern ((set_in ?lpy3 call14971formal__ls_0)) )) (= (good_meta meta_7) true_1) (= (good_state state_10) true_1) (forall ((?lpy4 Int)) (! (or (not (= (set_in ?lpy4 call14971formal__ls_0) true_1)) (= (inv meta_7 state_10 ?lpy4 node) true_1)) :pattern ((set_in ?lpy4 call14971formal__ls_0)) )) (forall ((?lpy5 Int)) (! (or (not (= (set_in ?lpy5 call14971formal__ls_0) true_1)) (= (select2 meta_7 ?lpy5 status_tag) mutable)) :pattern ((set_in ?lpy5 call14971formal__ls_0)) )) (forall ((?p_1py53 Int)) (! (or (= (set_in ?p_1py53 call14971formal__ls_0) true_1) (= (select1 state_10 ?p_1py53) (select1 state_9 ?p_1py53))) :pattern ((select1 state_10 ?p_1py53)) )) (forall ((?p_1py54 Int)) (! (or (not (= (is_primitive (typ ?p_1py54)) true_1)) (not (= (set_in (emb meta_7 ?p_1py54) call14971formal__ls_0) true_1)) (and (= (select2 meta_7 ?p_1py54 status_tag) mutable) (= (select2 meta_6 ?p_1py54 status_tag) committed))) :pattern ((select2 meta_7 ?p_1py54 status_tag)) )) (forall ((?p_1py55 Int)(?t_1py15 Int)) (! (or (= (select2 meta_7 ?p_1py55 ?t_1py15) (select2 meta_6 ?p_1py55 ?t_1py15)) (and (or (= (set_in ?p_1py55 call14971formal__ls_0) true_1) (and (= (is_primitive (typ ?p_1py55)) true_1) (= (set_in (emb meta_7 ?p_1py55) call14971formal__ls_0) true_1))) (= ?t_1py15 status_tag))) :pattern ((select2 meta_7 ?p_1py55 ?t_1py15)) )) (= (ptr void ?r!38) (select1 state_10 (dot nod_0 node_data))) (or (not (= (is (dot nod_0 node_data) (ptr_to void)) true_1)) (not (= (typed meta_7 (dot nod_0 node_data)) true_1)) (and (= (is (dot nod_0 node_data) (ptr_to void)) true_1) (= (typed meta_7 (dot nod_0 node_data)) true_1) (or (and (= (set_in ?p_1!39 (AbstractValues (select2 meta_7 to owned_tag))) true_1) (not (= ?p_1!39 from)) (not (= ?p_1!39 to)) (or (and (not (= (select2 meta ?p_1!39 status_tag) committed)) (not (= (instantiate_int (select2 meta_7 ?p_1!39 status_tag)) true_1))) (and (not (= (select2 meta_7 ?p_1!39 status_tag) mutable)) (not (= (select2 meta_7 ?p_1!39 status_tag) consistent))))) (and (forall ((?p_1py56 Int)) (! (or (not (= (set_in ?p_1py56 (AbstractValues (select2 meta_7 to owned_tag))) true_1)) (= ?p_1py56 from) (= ?p_1py56 to) (and (or (= (select2 meta ?p_1py56 status_tag) committed) (= (instantiate_int (select2 meta_7 ?p_1py56 status_tag)) true_1)) (or (= (select2 meta_7 ?p_1py56 status_tag) mutable) (= (select2 meta_7 ?p_1py56 status_tag) consistent)))) :pattern ((dont_instantiate ?p_1py56)) )) (= call15050formal_targetSet_0 (select2 meta_7 to owned_tag)) (= call15050formal_t_0 (select1 state_10 (dot nod_0 node_data))) (or (and (= (set_in ?n!40 call15050formal_targetSet_0) true_1) (or (not (= (is ?n!40 node) true_1)) (not (= (typed meta_7 ?n!40) true_1)) (not (= (select2 meta_7 ?n!40 status_tag) mutable)))) (and (forall ((?npy13 Int)) (! (or (not (= (set_in ?npy13 call15050formal_targetSet_0) true_1)) (and (= (is ?npy13 node) true_1) (= (typed meta_7 ?npy13) true_1) (= (select2 meta_7 ?npy13 status_tag) mutable))) :pattern ((set_in ?npy13 call15050formal_targetSet_0)) )) (or (not (= (is call15050formal_t_0 void) true_1)) (and (= (is call15050formal_t_0 void) true_1) (= (good_state state_11) true_1) (= (good_meta meta_8) true_1) (forall ((?npy14 Int)) (! (or (not (= (set_in ?npy14 call15050formal_targetSet_0) true_1)) (= (select1 state_11 (dot ?npy14 node_abstractValue)) (seq_append (select1 state_10 (dot ?npy14 node_abstractValue)) (seq_singleton call15050formal_t_0)))) :pattern ((set_in ?npy14 call15050formal_targetSet_0)) )) (forall ((?p_1py57 Int)) (! (or (= (select2 meta_7 ?p_1py57 status_tag) committed) (= (set_in ?p_1py57 (AbstractValues call15050formal_targetSet_0)) true_1) (= (select1 state_10 ?p_1py57) (select1 state_11 ?p_1py57))) :pattern ((select1 state_11 ?p_1py57)) )) (forall ((?pmpy0 Int)(?t_1py16 Int)) (! (or (= (select2 meta_7 ?pmpy0 status_tag) committed) (= (set_in ?pmpy0 (AbstractValues call15050formal_targetSet_0)) true_1) (= (select2 meta_7 ?pmpy0 ?t_1py16) (select2 meta_8 ?pmpy0 ?t_1py16))) :pattern ((select2 meta_8 ?pmpy0 ?t_1py16)) )) (or (and (not (= nod_0 from)) (not (= nod_0 to)) (or (and (not (= (select2 meta nod_0 status_tag) committed)) (not (= (instantiate_int (select2 meta_8 nod_0 status_tag)) true_1))) (and (not (= (select2 meta_8 nod_0 status_tag) mutable)) (not (= (select2 meta_8 nod_0 status_tag) consistent))))) (and (or (= nod_0 from) (= nod_0 to) (and (or (= (select2 meta nod_0 status_tag) committed) (= (instantiate_int (select2 meta_8 nod_0 status_tag)) true_1)) (or (= (select2 meta_8 nod_0 status_tag) consistent) (= (select2 meta_8 nod_0 status_tag) mutable)))) (or (not (= (kind_of (typ to)) kind_composite)) (and (= (kind_of (typ to)) kind_composite) (or (= (select2 meta_8 nod_0 hasowner_tag) true_1) (and (not (= (select2 meta_8 nod_0 hasowner_tag) true_1)) (= (good_meta meta_9) true_1) (= (select2 meta_9 to owned_tag) (set_union (set_singleton nod_0) (select2 meta_8 to owned_tag))) (forall ((?q_1py5 Int)(?t_1py17 Int)) (! (or (= (select2 meta_9 ?q_1py5 ?t_1py17) (select2 meta_8 ?q_1py5 ?t_1py17)) (and (= ?q_1py5 nod_0) (= ?t_1py17 hasowner_tag)) (and (= ?q_1py5 to) (= ?t_1py17 owned_tag))) :pattern ((select2 meta_9 ?q_1py5 ?t_1py17)) )) (= (ptr node ?r!41) (select1 state_11 (dot to queue_tail))) (or (not (= (is (dot to queue_tail) (ptr_to node)) true_1)) (not (= (typed meta_9 (dot to queue_tail)) true_1)) (and (= (is (dot to queue_tail) (ptr_to node)) true_1) (= (typed meta_9 (dot to queue_tail)) true_1) (= (ptr node ?r!42) (select1 state_11 (dot nod_0 node_prev))) (or (not (= (typed meta_9 (dot nod_0 node_prev)) true_1)) (not (= (is (dot nod_0 node_prev) (ptr_to node)) true_1)) (and (= (is (dot nod_0 node_prev) (ptr_to node)) true_1) (= (typed meta_9 (dot nod_0 node_prev)) true_1) (or (and (not (= (dot nod_0 node_prev) from)) (not (= (dot nod_0 node_prev) to)) (or (and (not (= (select2 meta (dot nod_0 node_prev) status_tag) committed)) (not (= (instantiate_int (select2 meta_9 (dot nod_0 node_prev) status_tag)) true_1))) (and (not (= (select2 meta_9 (dot nod_0 node_prev) status_tag) mutable)) (not (= (select2 meta_9 (dot nod_0 node_prev) status_tag) consistent))))) (and (or (= (dot nod_0 node_prev) from) (= (dot nod_0 node_prev) to) (and (or (= (select2 meta (dot nod_0 node_prev) status_tag) committed) (= (instantiate_int (select2 meta_9 (dot nod_0 node_prev) status_tag)) true_1)) (or (= (select2 meta_9 (dot nod_0 node_prev) status_tag) mutable) (= (select2 meta_9 (dot nod_0 node_prev) status_tag) consistent)))) (= state_12 (store1 state_11 (dot nod_0 node_prev) (select1 state_11 (dot to queue_tail)))) (= (ptr node ?r!43) (select1 state_12 (dot to queue_head))) (or (not (= (typed meta_9 (dot to queue_head)) true_1)) (not (= (is (dot to queue_head) (ptr_to node)) true_1)) (and (= (is (dot to queue_head) (ptr_to node)) true_1) (= (typed meta_9 (dot to queue_head)) true_1) (or (not (= (typed meta_9 (dot (select1 state_12 (dot to queue_head)) node_abstractValue)) true_1)) (not (= (is (dot (select1 state_12 (dot to queue_head)) node_abstractValue) seq) true_1)) (and (= (is (dot (select1 state_12 (dot to queue_head)) node_abstractValue) seq) true_1) (= (typed meta_9 (dot (select1 state_12 (dot to queue_head)) node_abstractValue)) true_1) (or (not (= (is (dot to queue_abstractValue) seq) true_1)) (not (= (typed meta_9 (dot to queue_abstractValue)) true_1)) (and (= (is (dot to queue_abstractValue) seq) true_1) (= (typed meta_9 (dot to queue_abstractValue)) true_1) (or (and (not (= (dot to queue_abstractValue) from)) (not (= (dot to queue_abstractValue) to)) (or (and (not (= (select2 meta (dot to queue_abstractValue) status_tag) committed)) (not (= (instantiate_int (select2 meta_9 (dot to queue_abstractValue) status_tag)) true_1))) (and (not (= (select2 meta_9 (dot to queue_abstractValue) status_tag) mutable)) (not (= (select2 meta_9 (dot to queue_abstractValue) status_tag) consistent))))) (and (or (= (dot to queue_abstractValue) from) (= (dot to queue_abstractValue) to) (and (or (= (select2 meta (dot to queue_abstractValue) status_tag) committed) (= (instantiate_int (select2 meta_9 (dot to queue_abstractValue) status_tag)) true_1)) (or (= (select2 meta_9 (dot to queue_abstractValue) status_tag) mutable) (= (select2 meta_9 (dot to queue_abstractValue) status_tag) consistent)))) (= state_13 (store1 state_12 (dot to queue_abstractValue) (select1 state_12 (dot (select1 state_12 (dot to queue_head)) node_abstractValue)))) (= (ptr node ?r!44) (select1 state_13 (dot to queue_tail))) (or (not (= (is (dot to queue_tail) (ptr_to node)) true_1)) (not (= (typed meta_9 (dot to queue_tail)) true_1)) (and (= (is (dot to queue_tail) (ptr_to node)) true_1) (= (typed meta_9 (dot to queue_tail)) true_1) (= (ptr node ?r!45) (select1 state_13 (dot (select1 state_13 (dot to queue_tail)) node_next))) (or (not (= (is (dot (select1 state_13 (dot to queue_tail)) node_next) (ptr_to node)) true_1)) (not (= (typed meta_9 (dot (select1 state_13 (dot to queue_tail)) node_next)) true_1)) (and (= (is (dot (select1 state_13 (dot to queue_tail)) node_next) (ptr_to node)) true_1) (= (typed meta_9 (dot (select1 state_13 (dot to queue_tail)) node_next)) true_1) (or (and (not (= (dot (select1 state (dot to queue_tail)) node_next) from)) (not (= (dot (select1 state (dot to queue_tail)) node_next) to)) (or (and (not (= (select2 meta (dot (select1 state_13 (dot to queue_tail)) node_next) status_tag) committed)) (not (= (instantiate_int (select2 meta_9 (dot (select1 state_13 (dot to queue_tail)) node_next) status_tag)) true_1))) (and (not (= (select2 meta_9 (dot (select1 state_13 (dot to queue_tail)) node_next) status_tag) mutable)) (not (= (select2 meta_9 (dot (select1 state_13 (dot to queue_tail)) node_next) status_tag) consistent))))) (and (or (= (dot (select1 state (dot to queue_tail)) node_next) from) (= (dot (select1 state (dot to queue_tail)) node_next) to) (and (or (= (select2 meta (dot (select1 state_13 (dot to queue_tail)) node_next) status_tag) committed) (= (instantiate_int (select2 meta_9 (dot (select1 state_13 (dot to queue_tail)) node_next) status_tag)) true_1)) (or (= (select2 meta_9 (dot (select1 state_13 (dot to queue_tail)) node_next) status_tag) consistent) (= (select2 meta_9 (dot (select1 state_13 (dot to queue_tail)) node_next) status_tag) mutable)))) (= state_14 (store1 state_13 (dot (select1 state_13 (dot to queue_tail)) node_next) nod_0)) (= (ptr node ?r!46) (select1 state_14 (dot to queue_tail))) (or (not (= (is (dot to queue_tail) (ptr_to node)) true_1)) (not (= (typed meta_9 (dot to queue_tail)) true_1)) (and (= (is (dot to queue_tail) (ptr_to node)) true_1) (= (typed meta_9 (dot to queue_tail)) true_1) (or (and (not (= (dot to queue_tail) from)) (not (= (dot to queue_tail) to)) (or (and (not (= (select2 meta (dot to queue_tail) status_tag) committed)) (not (= (instantiate_int (select2 meta_9 (dot to queue_tail) status_tag)) true_1))) (and (not (= (select2 meta_9 (dot to queue_tail) status_tag) mutable)) (not (= (select2 meta_9 (dot to queue_tail) status_tag) consistent))))) (and (or (= (dot to queue_tail) from) (= (dot to queue_tail) to) (and (or (= (select2 meta (dot to queue_tail) status_tag) committed) (= (instantiate_int (select2 meta_9 (dot to queue_tail) status_tag)) true_1)) (or (= (select2 meta_9 (dot to queue_tail) status_tag) mutable) (= (select2 meta_9 (dot to queue_tail) status_tag) consistent)))) (= state_15 (store1 state_14 (dot to queue_tail) nod_0)) (or (not (= (is (dot nod_0 node_abstractValue) seq) true_1)) (not (= (typed meta_9 (dot nod_0 node_abstractValue)) true_1)) (and (= (is (dot nod_0 node_abstractValue) seq) true_1) (= (typed meta_9 (dot nod_0 node_abstractValue)) true_1) (or (and (not (= (dot nod_0 node_abstractValue) from)) (not (= (dot nod_0 node_abstractValue) to)) (or (and (not (= (select2 meta (dot nod_0 node_abstractValue) status_tag) committed)) (not (= (instantiate_int (select2 meta_9 (dot nod_0 node_abstractValue) status_tag)) true_1))) (and (not (= (select2 meta_9 (dot nod_0 node_abstractValue) status_tag) mutable)) (not (= (select2 meta_9 (dot nod_0 node_abstractValue) status_tag) consistent))))) (and (or (= (dot nod_0 node_abstractValue) from) (= (dot nod_0 node_abstractValue) to) (and (or (= (select2 meta (dot nod_0 node_abstractValue) status_tag) committed) (= (instantiate_int (select2 meta_9 (dot nod_0 node_abstractValue) status_tag)) true_1)) (or (= (select2 meta_9 (dot nod_0 node_abstractValue) status_tag) consistent) (= (select2 meta_9 (dot nod_0 node_abstractValue) status_tag) mutable)))) (= state_16 (store1 state_15 (dot nod_0 node_abstractValue) seq_empty)) (= (ptr node ?r!47) (select1 state_16 (dot nod_0 node_next))) (or (not (= (typed meta_9 (dot nod_0 node_next)) true_1)) (not (= (is (dot nod_0 node_next) (ptr_to node)) true_1)) (and (= (is (dot nod_0 node_next) (ptr_to node)) true_1) (= (typed meta_9 (dot nod_0 node_next)) true_1) (or (and (not (= (dot nod_0 node_next) from)) (not (= (dot nod_0 node_next) to)) (or (and (not (= (select2 meta (dot nod_0 node_next) status_tag) committed)) (not (= (instantiate_int (select2 meta_9 (dot nod_0 node_next) status_tag)) true_1))) (and (not (= (select2 meta_9 (dot nod_0 node_next) status_tag) mutable)) (not (= (select2 meta_9 (dot nod_0 node_next) status_tag) consistent))))) (and (or (= (dot nod_0 node_next) from) (= (dot nod_0 node_next) to) (and (or (= (select2 meta (dot nod_0 node_next) status_tag) committed) (= (instantiate_int (select2 meta_9 (dot nod_0 node_next) status_tag)) true_1)) (or (= (select2 meta_9 (dot nod_0 node_next) status_tag) mutable) (= (select2 meta_9 (dot nod_0 node_next) status_tag) consistent)))) (= state_17 (store1 state_16 (dot nod_0 node_next) (ptr node (ref null)))) (or (and (= (set_in ?p_1!48 (select2 meta_9 to owned_tag)) true_1) (not (= ?p_1!48 from)) (not (= ?p_1!48 to)) (or (and (not (= (select2 meta ?p_1!48 status_tag) committed)) (not (= (instantiate_int (select2 meta_9 ?p_1!48 status_tag)) true_1))) (and (not (= (select2 meta_9 ?p_1!48 status_tag) mutable)) (not (= (select2 meta_9 ?p_1!48 status_tag) consistent))))) (and (forall ((?p_1py58 Int)) (! (or (not (= (set_in ?p_1py58 (select2 meta_9 to owned_tag)) true_1)) (= ?p_1py58 from) (= ?p_1py58 to) (and (or (= (select2 meta ?p_1py58 status_tag) committed) (= (instantiate_int (select2 meta_9 ?p_1py58 status_tag)) true_1)) (or (= (select2 meta_9 ?p_1py58 status_tag) consistent) (= (select2 meta_9 ?p_1py58 status_tag) mutable)))) :pattern ((dont_instantiate ?p_1py58)) )) (= call15637formal__ls_0 (select2 meta_9 to owned_tag)) (or (and (= (set_in ?l!49 call15637formal__ls_0) true_1) (not (= (select2 meta_9 ?l!49 owned_tag) set_empty))) (and (forall ((?lpy6 Int)) (! (or (not (= (set_in ?lpy6 call15637formal__ls_0) true_1)) (= (select2 meta_9 ?lpy6 owned_tag) set_empty)) :pattern ((set_in ?lpy6 call15637formal__ls_0)) )) (or (and (= (set_in ?l!50 call15637formal__ls_0) true_1) (not (= (inv meta_9 state_17 ?l!50 node) true_1))) (and (forall ((?lpy7 Int)) (! (or (not (= (set_in ?lpy7 call15637formal__ls_0) true_1)) (= (inv meta_9 state_17 ?lpy7 node) true_1)) :pattern ((set_in ?lpy7 call15637formal__ls_0)) )) (or (and (= (set_in ?l!51 call15637formal__ls_0) true_1) (not (= (select2 meta_9 ?l!51 status_tag) mutable))) (and (forall ((?lpy8 Int)) (! (or (not (= (set_in ?lpy8 call15637formal__ls_0) true_1)) (= (select2 meta_9 ?lpy8 status_tag) mutable)) :pattern ((set_in ?lpy8 call15637formal__ls_0)) )) (= (good_meta meta_10) true_1) (= (good_state state_18) true_1) (forall ((?lpy9 Int)) (! (or (not (= (set_in ?lpy9 call15637formal__ls_0) true_1)) (= (select2 meta_10 ?lpy9 status_tag) consistent)) :pattern ((set_in ?lpy9 call15637formal__ls_0)) )) (forall ((?p_1py59 Int)) (! (or (not (= (is_primitive (typ ?p_1py59)) true_1)) (= (select2 meta_10 ?p_1py59 status_tag) consistent) (not (= (set_in (emb meta_9 ?p_1py59) call15637formal__ls_0) true_1))) :pattern ((select2 meta_10 ?p_1py59 status_tag)) )) (forall ((?p_1py60 Int)(?t_1py18 Int)) (! (or (= (select2 meta_10 ?p_1py60 ?t_1py18) (select2 meta_9 ?p_1py60 ?t_1py18)) (and (or (= (set_in ?p_1py60 call15637formal__ls_0) true_1) (and (= (is_primitive (typ ?p_1py60)) true_1) (= (set_in (emb meta_9 ?p_1py60) call15637formal__ls_0) true_1))) (= ?t_1py18 status_tag))) :pattern ((select2 meta_10 ?p_1py60 ?t_1py18)) )) (forall ((?p_1py61 Int)) (! (or (= (set_in ?p_1py61 call15637formal__ls_0) true_1) (= (select1 state_18 ?p_1py61) (select1 state_17 ?p_1py61))) :pattern ((select1 state_18 ?p_1py61)) )) (or (and (= (set_in ?p_1!52 (select2 meta_10 to owned_tag)) true_1) (not (= ?p_1!52 from)) (not (= ?p_1!52 to)) (or (and (not (= (select2 meta ?p_1!52 status_tag) committed)) (not (= (instantiate_int (select2 meta_10 ?p_1!52 status_tag)) true_1))) (and (not (= (select2 meta_10 ?p_1!52 status_tag) mutable)) (not (= (select2 meta_10 ?p_1!52 status_tag) consistent))))) (and (forall ((?p_1py62 Int)) (! (or (not (= (set_in ?p_1py62 (select2 meta_10 to owned_tag)) true_1)) (= ?p_1py62 from) (= ?p_1py62 to) (and (or (= (select2 meta ?p_1py62 status_tag) committed) (= (instantiate_int (select2 meta_10 ?p_1py62 status_tag)) true_1)) (or (= (select2 meta_10 ?p_1py62 status_tag) mutable) (= (select2 meta_10 ?p_1py62 status_tag) consistent)))) :pattern ((dont_instantiate ?p_1py62)) )) (or (not (= (typ to) queue)) (and (= (typ to) queue) (or (not (= (select2 meta_10 to status_tag) mutable)) (and (= (select2 meta_10 to status_tag) mutable) (or (and (= (set_in ?p_1!53 (select2 meta_10 to owned_tag)) true_1) (not (= (select2 meta_10 ?p_1!53 status_tag) consistent))) (and (forall ((?p_1py63 Int)) (! (or (not (= (set_in ?p_1py63 (select2 meta_10 to owned_tag)) true_1)) (= (select2 meta_10 ?p_1py63 status_tag) consistent)) :pattern ((select2 meta_10 ?p_1py63 status_tag)) )) (or (not (= (inv meta_10 state_18 to queue) true_1)) (and (= (inv meta_10 state_18 to queue) true_1) (= (good_meta meta_11) true_1) (= (good_state state_19) true_1) (= (inv meta_11 state_19 to queue) true_1) (forall ((?p_1py64 Int)) (! (or (not (= (set_in ?p_1py64 (select2 meta_10 to owned_tag)) true_1)) (and (= (select2 meta_11 ?p_1py64 status_tag) committed) (= (select2 meta_10 ?p_1py64 status_tag) consistent))) :pattern ((select2 meta_11 ?p_1py64 status_tag)) )) (forall ((?p_1py65 Int)) (! (or (not (= (is_primitive (typ ?p_1py65)) true_1)) (not (= (emb meta_11 ?p_1py65) to)) (and (= (select2 meta_11 ?p_1py65 status_tag) committed) (= (select2 meta_10 ?p_1py65 status_tag) mutable))) :pattern ((select2 meta_11 ?p_1py65 status_tag)) )) (= (select2 meta_11 to status_tag) consistent) (forall ((?p_1py66 Int)(?t_1py19 Int)) (! (or (= (select2 meta_11 ?p_1py66 ?t_1py19) (select2 meta_10 ?p_1py66 ?t_1py19)) (and (or (= ?p_1py66 to) (= (set_in ?p_1py66 (select2 meta_10 to owned_tag)) true_1) (and (= (is_primitive (typ ?p_1py66)) true_1) (= (emb meta_11 ?p_1py66) to))) (= ?t_1py19 status_tag))) :pattern ((select2 meta_11 ?p_1py66 ?t_1py19)) )) (= state_19 (store1 state_18 to ?x_2!54)) (or (not (= (is_primitive queue) true_1)) (= state_18 state_19)) (or (not (= (seq_equal (AbstractValue meta_11 state_19 from) (seq_drop (AbstractValue meta state from) 1)) true_1)) (and (= (seq_equal (AbstractValue meta_11 state_19 from) (seq_drop (AbstractValue meta state from) 1)) true_1) (or (not (= (seq_equal (AbstractValue meta_11 state_19 to) (seq_append (AbstractValue meta state to) (seq_singleton (seq_index (AbstractValue meta state from) 0)))) true_1)) (and (= (seq_equal (AbstractValue meta_11 state_19 to) (seq_append (AbstractValue meta state to) (seq_singleton (seq_index (AbstractValue meta state from) 0)))) true_1) (or (not (= (inv meta_11 state_19 from queue) true_1)) (not (= (select2 meta_11 to status_tag) consistent)) (not (= (inv meta_11 state_19 to queue) true_1)) (not (= (select2 meta_11 from status_tag) consistent))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :named A2_10))
(check-sat)
(get-info :reason-unknown)
;z3 -T:600 group_023/ematching/tmp/vccp-queue.c.8.transfer_std_unique_aug-gt_unsat-full.smt2
;unknown
;((:reason-unknown "smt tactic failed to show goal to be sat/unsat (incomplete quantifiers)"))
