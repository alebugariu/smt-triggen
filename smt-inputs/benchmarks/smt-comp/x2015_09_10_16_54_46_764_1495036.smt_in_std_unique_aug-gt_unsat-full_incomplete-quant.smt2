(set-info :smt-lib-version 2.6)
(set-info :source | Generated by: Andrew Reynolds Generated on: 2017-04-28 Generator: Sledgehammer, converted to v2.6 by CVC4 Application: Verfication goals in Isabelle Target solver: CVC4, Z3 Publications: "A Decision Procedure for (Co)Datatypes" by Andrew Reynolds and Jasmin Blanchette, CADE 2015. |)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unsat)
(set-logic UF)
(set-option :smt.auto-config false)
(set-option :smt.mbqi false)
(set-option :sat.random_seed 488)
(set-option :smt.random_seed 599)
(set-option :nlsat.seed 611)
(set-option :memory_max_size 6000)
(declare-sort N$ 0)
(declare-sort RegExStr 0)
(declare-sort RMode 0)
(declare-sort T$ 0)
(declare-sort Dtree$ 0)
(declare-sort N_set$ 0)
(declare-sort T_set$ 0)
(declare-sort N_N_fun$ 0)
(declare-sort N_bool_fun$ 0)
(declare-sort T_bool_fun$ 0)
(declare-sort Dtree_N_fun$ 0)
(declare-sort N_N_set_fun$ 0)
(declare-sort N_T_set_fun$ 0)
(declare-sort N_dtree_fun$ 0)
(declare-sort T_N_set_fun$ 0)
(declare-sort T_T_set_fun$ 0)
(declare-sort N_N_prod_set$ 0)
(declare-sort T_T_prod_set$ 0)
(declare-sort Dtree_bool_fun$ 0)
(declare-sort Dtree_dtree_fun$ 0)
(declare-sort N_set_N_set_fun$ 0)
(declare-sort N_set_T_set_fun$ 0)
(declare-sort T_dtree_sum_set$ 0)
(declare-sort T_set_N_set_fun$ 0)
(declare-sort T_set_T_set_fun$ 0)
(declare-sort N_T_N_sum_set_fun$ 0)
(declare-sort T_T_dtree_sum_fun$ 0)
(declare-sort Dtree_N_bool_fun_fun$ 0)
(declare-sort Dtree_T_bool_fun_fun$ 0)
(declare-sort T_dtree_sum_bool_fun$ 0)
(declare-sort Dtree_dtree_bool_fun_fun$ 0)
(declare-sort Dtree_T_dtree_sum_set_fun$ 0)
(declare-sort Dtree_N_fun_dtree_N_fun_fun$ 0)
(declare-sort N_set_dtree_T_bool_fun_fun_fun$ 0)
(declare-sort Dtree_dtree_fun_dtree_N_fun_fun$ 0)
(declare-sort N_T_N_sum_set_fun_N_dtree_fun_fun$ 0)
(declare-sort N_set_dtree_dtree_bool_fun_fun_fun$ 0)
(declare-sort Dtree_dtree_fun_dtree_dtree_fun_fun$ 0)
(declare-sort Dtree_T_dtree_sum_set_fun_dtree_dtree_fun_fun$ 0)
(declare-sort T_dtree_sum$ 0)
(declare-fun projl$ (T_dtree_sum$) T$)
(declare-fun inl$ (T$) T_dtree_sum$)
(declare-fun projr$ (T_dtree_sum$) Dtree$)
(declare-fun inr$ (Dtree$) T_dtree_sum$)
(declare-fun h$ (Dtree$) N_dtree_fun$)
(declare-fun n$ () N$)
(declare-fun fr$ (N_set$ Dtree$) T_set$)
(declare-fun ns$ () N_set$)
(declare-fun uu$ (N_set$) N_bool_fun$)
(declare-fun wf$ (Dtree$) Bool)
(declare-fun bot$ () T_set$)
(declare-fun h_c$ (Dtree$) N_T_N_sum_set_fun$)
(declare-fun h_r$ (Dtree$) N_N_fun$)
(declare-fun reg$ (N_dtree_fun$ Dtree$) Bool)
(declare-fun top$ () N_set$)
(declare-fun uua$ (T_dtree_sum_set$) T_dtree_sum_bool_fun$)
(declare-fun uub$ (T_set$) T_bool_fun$)
(declare-fun uuc$ () T_T_dtree_sum_fun$)
(declare-fun bind$ (T_set$ T_T_set_fun$) T_set$)
(declare-fun bot$a () N_set$)
(declare-fun bot$b () T_dtree_sum_set$)
(declare-fun bot$c () T_bool_fun$)
(declare-fun bot$d () N_bool_fun$)
(declare-fun bot$e (T_dtree_sum$) Bool)
(declare-fun bot$f () T_T_prod_set$)
(declare-fun bot$g () N_N_prod_set$)
(declare-fun comp$ (Dtree_N_fun$) Dtree_dtree_fun_dtree_N_fun_fun$)
(declare-fun cont$ (Dtree$) T_dtree_sum_set$)
(declare-fun inFr$ () N_set_dtree_T_bool_fun_fun_fun$)
(declare-fun node$ (N$ T_dtree_sum_set$) Dtree$)
(declare-fun pick$ (Dtree$) N_dtree_fun$)
(declare-fun rcut$ (Dtree$) Dtree$)
(declare-fun root$ () Dtree_N_fun$)
(declare-fun top$a () T_dtree_sum_set$)
(declare-fun top$b () T_set$)
(declare-fun top$c (T_dtree_sum$) Bool)
(declare-fun top$d (T$) Bool)
(declare-fun top$e () N_bool_fun$)
(declare-fun bind$a (T_set$ T_N_set_fun$) N_set$)
(declare-fun bind$b (N_set$ N_T_set_fun$) T_set$)
(declare-fun bind$c (N_set$ N_N_set_fun$) N_set$)
(declare-fun comp$a (N_N_fun$) Dtree_N_fun_dtree_N_fun_fun$)
(declare-fun comp$b (Dtree_dtree_fun$) Dtree_dtree_fun_dtree_dtree_fun_fun$)
(declare-fun deftr$ () N_dtree_fun$)
(declare-fun id_on$ (T_set$) T_T_prod_set$)
(declare-fun inFr2$ () N_set_dtree_T_bool_fun_fun_fun$)
(declare-fun inFrr$ (N_set$) Dtree_T_bool_fun_fun$)
(declare-fun inItr$ (N_set$) Dtree_N_bool_fun_fun$)
(declare-fun minus$ (N_set$) N_set_N_set_fun$)
(declare-fun subtr$ () N_set_dtree_dtree_bool_fun_fun_fun$)
(declare-fun hsubst$ (Dtree$) Dtree_dtree_fun$)
(declare-fun id_on$a (N_set$) N_N_prod_set$)
(declare-fun insert$ (N$) N_set_N_set_fun$)
(declare-fun member$ (T_dtree_sum$ T_dtree_sum_set$) Bool)
(declare-fun subtr2$ () N_set_dtree_dtree_bool_fun_fun_fun$)
(declare-fun unfold$ (Dtree_N_fun$) Dtree_T_dtree_sum_set_fun_dtree_dtree_fun_fun$)
(declare-fun vimage$ (T_T_dtree_sum_fun$ T_dtree_sum_set$) T_set$)
(declare-fun collect$ (T_bool_fun$) T_set$)
(declare-fun fun_app$ (T_T_dtree_sum_fun$ T$) T_dtree_sum$)
(declare-fun insert$a (T_dtree_sum$ T_dtree_sum_set$) T_dtree_sum_set$)
(declare-fun insert$b (T$) T_set_T_set_fun$)
(declare-fun less_eq$ (T_set$ T_set$) Bool)
(declare-fun member$a (T$ T_set$) Bool)
(declare-fun member$b (N$ N_set$) Bool)
(declare-fun regular$ (Dtree$) Bool)
(declare-fun subtrOf$ (Dtree$) N_dtree_fun$)
(declare-fun unfold$a (N_N_fun$) N_T_N_sum_set_fun_N_dtree_fun_fun$)
(declare-fun collect$a (N_bool_fun$) N_set$)
(declare-fun collect$b (T_dtree_sum_bool_fun$) T_dtree_sum_set$)
(declare-fun fun_app$a (T_dtree_sum_bool_fun$ T_dtree_sum$) Bool)
(declare-fun fun_app$b (T_bool_fun$ T$) Bool)
(declare-fun fun_app$c (N_bool_fun$ N$) Bool)
(declare-fun fun_app$d (Dtree_N_fun$ Dtree$) N$)
(declare-fun fun_app$e (N_dtree_fun$ N$) Dtree$)
(declare-fun fun_app$f (Dtree_dtree_fun$ Dtree$) Dtree$)
(declare-fun fun_app$g (Dtree_T_bool_fun_fun$ Dtree$) T_bool_fun$)
(declare-fun fun_app$h (N_set_dtree_T_bool_fun_fun_fun$ N_set$) Dtree_T_bool_fun_fun$)
(declare-fun fun_app$i (Dtree_T_dtree_sum_set_fun_dtree_dtree_fun_fun$ Dtree_T_dtree_sum_set_fun$) Dtree_dtree_fun$)
(declare-fun fun_app$j (Dtree_bool_fun$ Dtree$) Bool)
(declare-fun fun_app$k (Dtree_dtree_bool_fun_fun$ Dtree$) Dtree_bool_fun$)
(declare-fun fun_app$l (N_set_dtree_dtree_bool_fun_fun_fun$ N_set$) Dtree_dtree_bool_fun_fun$)
(declare-fun fun_app$m (Dtree_dtree_fun_dtree_N_fun_fun$ Dtree_dtree_fun$) Dtree_N_fun$)
(declare-fun fun_app$n (N_N_fun$ N$) N$)
(declare-fun fun_app$o (N_T_N_sum_set_fun_N_dtree_fun_fun$ N_T_N_sum_set_fun$) N_dtree_fun$)
(declare-fun fun_app$p (Dtree_N_fun_dtree_N_fun_fun$ Dtree_N_fun$) Dtree_N_fun$)
(declare-fun fun_app$q (Dtree_dtree_fun_dtree_dtree_fun_fun$ Dtree_dtree_fun$) Dtree_dtree_fun$)
(declare-fun fun_app$r (Dtree_N_bool_fun_fun$ Dtree$) N_bool_fun$)
(declare-fun fun_app$s (T_set_T_set_fun$ T_set$) T_set$)
(declare-fun fun_app$t (T_set_N_set_fun$ T_set$) N_set$)
(declare-fun fun_app$u (N_set_T_set_fun$ N_set$) T_set$)
(declare-fun fun_app$v (N_set_N_set_fun$ N_set$) N_set$)
(declare-fun fun_app$w (Dtree_T_dtree_sum_set_fun$ Dtree$) T_dtree_sum_set$)
(declare-fun hsubst_c$ (Dtree$) Dtree_T_dtree_sum_set_fun$)
(declare-fun hsubst_r$ () Dtree_N_fun$)
(declare-fun is_empty$ (T_set$) Bool)
(declare-fun less_eq$a (N_set$ N_set$) Bool)
(declare-fun less_eq$b (T_dtree_sum_set$ T_dtree_sum_set$) Bool)
(declare-fun is_empty$a (N_set$) Bool)
(declare-fun ?v1!0 (T_bool_fun$) T$)
(declare-fun ?v1!1 (N_bool_fun$) N$)
(declare-fun ?v1!2 (T_dtree_sum_set$) T_dtree_sum$)
(declare-fun ?v1!3 (T_set$) T$)
(declare-fun ?v1!4 (N_set$) N$)
(declare-fun ?v1!5 (T_bool_fun$) T$)
(declare-fun ?v1!6 (N_bool_fun$) N$)
(declare-fun ?v1!7 (T_dtree_sum_set$) T_dtree_sum$)
(declare-fun ?v1!8 (T_set$) T$)
(declare-fun ?v1!9 (N_set$) N$)
(declare-fun ?v1!10 (T_dtree_sum_set$) T_dtree_sum$)
(declare-fun ?v1!11 (T_set$) T$)
(declare-fun ?v1!12 (N_set$) N$)
(declare-fun ?v1!13 (Dtree$) N_dtree_fun$)
(declare-fun ?v1!14 (Dtree$) N_dtree_fun$)
(declare-fun ?v2!15 (N_dtree_fun$) N$)
(declare-fun ?v2!17 (Dtree$ N_dtree_fun$) N_set$)
(declare-fun ?v3!16 (Dtree$ N_dtree_fun$) Dtree$)
(declare-fun ?v2!18 (Dtree$ N_dtree_fun$) Dtree$)
(declare-fun ?v1!19 (T_dtree_sum_set$) T_dtree_sum$)
(declare-fun ?v1!20 (T_set$) T$)
(declare-fun ?v1!21 (N_set$) N$)
(declare-fun ?v0!22 () T_dtree_sum$)
(declare-fun ?v0!23 () T$)
(declare-fun ?v0!24 () N$)
(declare-fun ?v3!25 (N$ Dtree$ N_set$) Dtree$)
(declare-fun ?v3!26 (Dtree$ Dtree$) N$)
(declare-fun ?v2!27 (T_dtree_sum_set$ T_dtree_sum_set$) T_dtree_sum$)
(declare-fun ?v2!28 (T_set$ T_set$) T$)
(declare-fun ?v2!29 (N_set$ N_set$) N$)
(declare-fun ?v2!30 (T_dtree_sum_set$ T_dtree_sum_set$) T_dtree_sum$)
(declare-fun ?v2!31 (T_set$ T_set$) T$)
(declare-fun ?v2!32 (N_set$ N_set$) N$)
(declare-fun ?v2!33 (T_bool_fun$ T_bool_fun$) T$)
(declare-fun ?v2!34 (N_bool_fun$ N_bool_fun$) N$)
(declare-fun ?v2!35 (T_bool_fun$ T_bool_fun$) T$)
(declare-fun ?v2!36 (N_bool_fun$ N_bool_fun$) N$)
(declare-fun ?v5!37 (T_set_T_set_fun$) T_set$)
(declare-fun ?v4!38 (T_set_T_set_fun$) T_set$)
(declare-fun ?v5!39 (T_set_N_set_fun$) T_set$)
(declare-fun ?v4!40 (T_set_N_set_fun$) T_set$)
(declare-fun ?v5!41 (N_set_T_set_fun$) N_set$)
(declare-fun ?v4!42 (N_set_T_set_fun$) N_set$)
(declare-fun ?v4!44 (N_set_N_set_fun$) N_set$)
(declare-fun ?v5!43 (N_set_N_set_fun$) N_set$)
(declare-fun ?v4!46 (T_set_T_set_fun$) T_set$)
(declare-fun ?v5!45 (T_set_T_set_fun$) T_set$)
(declare-fun ?v5!47 (T_set_N_set_fun$) T_set$)
(declare-fun ?v4!48 (T_set_N_set_fun$) T_set$)
(declare-fun ?v4!50 (N_set_T_set_fun$) N_set$)
(declare-fun ?v5!49 (N_set_T_set_fun$) N_set$)
(declare-fun ?v5!51 (N_set_N_set_fun$) N_set$)
(declare-fun ?v4!52 (N_set_N_set_fun$) N_set$)
(declare-fun ?v5!53 (T_set_T_set_fun$) T_set$)
(declare-fun ?v4!54 (T_set_T_set_fun$) T_set$)
(declare-fun ?v5!55 (T_set_N_set_fun$) T_set$)
(declare-fun ?v4!56 (T_set_N_set_fun$) T_set$)
(declare-fun ?v5!57 (N_set_T_set_fun$) N_set$)
(declare-fun ?v4!58 (N_set_T_set_fun$) N_set$)
(declare-fun ?v5!59 (N_set_N_set_fun$) N_set$)
(declare-fun ?v4!60 (N_set_N_set_fun$) N_set$)
(declare-fun ?v4!62 (T_set_T_set_fun$) T_set$)
(declare-fun ?v5!61 (T_set_T_set_fun$) T_set$)
(declare-fun ?v4!64 (N_set_T_set_fun$) N_set$)
(declare-fun ?v5!63 (N_set_T_set_fun$) N_set$)
(declare-fun ?v4!66 (T_set_N_set_fun$) T_set$)
(declare-fun ?v5!65 (T_set_N_set_fun$) T_set$)
(declare-fun ?v4!68 (N_set_N_set_fun$) N_set$)
(declare-fun ?v5!67 (N_set_N_set_fun$) N_set$)
(declare-fun ?v1!69 (T_dtree_sum_set$) T_dtree_sum$)
(declare-fun ?v1!70 (T_set$) T$)
(declare-fun ?v1!71 (N_set$) N$)
(declare-fun z3name!72 (Dtree$ Dtree$) T_dtree_sum_set$)
(declare-fun ?v5!74 (Dtree_dtree_bool_fun_fun$) Dtree$)
(declare-fun ?v4!75 (Dtree_dtree_bool_fun_fun$) Dtree$)
(declare-fun ?v3!73 (Dtree_dtree_bool_fun_fun$) Dtree$)
(declare-fun ?v3!76 (Dtree_dtree_bool_fun_fun$) Dtree$)
(declare-fun ?v4!81 (Dtree$ Dtree$ N_set$) N_set$)
(declare-fun ?v5!80 (Dtree$ Dtree$ N_set$) Dtree$)
(declare-fun ?v4!77 (Dtree$ Dtree$ N_set$) N_set$)
(declare-fun ?v3!78 (Dtree$ Dtree$ N_set$) Dtree$)
(declare-fun ?v6!79 (Dtree$ Dtree$ N_set$) Dtree$)
(declare-fun ?v3!82 (Dtree$ Dtree$ N_set$) Dtree$)
(declare-fun ?v5!87 (N_set_dtree_dtree_bool_fun_fun_fun$) Dtree$)
(declare-fun ?v5!83 (N_set_dtree_dtree_bool_fun_fun_fun$) Dtree$)
(declare-fun ?v4!88 (N_set_dtree_dtree_bool_fun_fun_fun$) N_set$)
(declare-fun ?v6!86 (N_set_dtree_dtree_bool_fun_fun_fun$) Dtree$)
(declare-fun ?v4!84 (N_set_dtree_dtree_bool_fun_fun_fun$) N_set$)
(declare-fun ?v7!85 (N_set_dtree_dtree_bool_fun_fun_fun$) Dtree$)
(declare-fun ?v4!93 (Dtree$ Dtree$ N_set$) N_set$)
(declare-fun ?v5!92 (Dtree$ Dtree$ N_set$) Dtree$)
(declare-fun ?v3!94 (Dtree$ Dtree$ N_set$) Dtree$)
(declare-fun ?v3!90 (Dtree$ Dtree$ N_set$) Dtree$)
(declare-fun ?v4!89 (Dtree$ Dtree$ N_set$) N_set$)
(declare-fun ?v6!91 (Dtree$ Dtree$ N_set$) Dtree$)
(declare-fun ?v6!97 (N$ Dtree$ N_set$) N$)
(declare-fun ?v3!100 (N$ Dtree$ N_set$) Dtree$)
(declare-fun ?v5!98 (N$ Dtree$ N_set$) Dtree$)
(declare-fun ?v4!99 (N$ Dtree$ N_set$) N_set$)
(declare-fun ?v4!95 (N$ Dtree$ N_set$) N_set$)
(declare-fun ?v3!96 (N$ Dtree$ N_set$) Dtree$)
(declare-fun ?v5!104 (N$ Dtree$ N_set$) Dtree$)
(declare-fun ?v4!105 (N$ Dtree$ N_set$) N_set$)
(declare-fun ?v3!102 (N$ Dtree$ N_set$) Dtree$)
(declare-fun ?v4!101 (N$ Dtree$ N_set$) N_set$)
(declare-fun ?v3!106 (N$ Dtree$ N_set$) Dtree$)
(declare-fun ?v6!103 (N$ Dtree$ N_set$) N$)
(declare-fun ?v3!107 (T$ Dtree$ N_set$) Dtree$)
(declare-fun ?v4!112 (Dtree$ Dtree$ N_set$) N_set$)
(declare-fun ?v3!109 (Dtree$ Dtree$ N_set$) Dtree$)
(declare-fun ?v5!111 (Dtree$ Dtree$ N_set$) Dtree$)
(declare-fun ?v3!113 (Dtree$ Dtree$ N_set$) Dtree$)
(declare-fun ?v6!110 (Dtree$ Dtree$ N_set$) Dtree$)
(declare-fun ?v4!108 (Dtree$ Dtree$ N_set$) N_set$)
(declare-fun ?v4!114 (Dtree$ Dtree$ N_set$) N_set$)
(declare-fun ?v4!118 (Dtree$ Dtree$ N_set$) N_set$)
(declare-fun ?v5!117 (Dtree$ Dtree$ N_set$) Dtree$)
(declare-fun ?v6!116 (Dtree$ Dtree$ N_set$) Dtree$)
(declare-fun ?v3!119 (Dtree$ Dtree$ N_set$) Dtree$)
(declare-fun ?v3!115 (Dtree$ Dtree$ N_set$) Dtree$)
(declare-fun ?v4!120 (N_set$ N$ N_set$ N$) N_set$)
(declare-fun ?v4!121 (T_dtree_sum_set$ T_dtree_sum$ T_dtree_sum_set$ T_dtree_sum$) T_dtree_sum_set$)
(declare-fun ?v4!122 (T_set$ T$ T_set$ T$) T_set$)
(declare-fun ?v2!123 (N_set$ N$) N_set$)
(declare-fun ?v2!124 (T_dtree_sum_set$ T_dtree_sum$) T_dtree_sum_set$)
(declare-fun ?v2!125 (T_set$ T$) T_set$)
(declare-fun ?v2!126 (N_set$ N$) N_set$)
(declare-fun ?v2!127 (T_dtree_sum_set$ T_dtree_sum$) T_dtree_sum_set$)
(declare-fun ?v2!128 (T_set$ T$) T_set$)
(declare-fun ?v3!135 (T$ Dtree$ N_set$) Dtree$)
(declare-fun ?v4!134 (T$ Dtree$ N_set$) Dtree$)
(declare-fun ?v5!129 (T$ Dtree$ N_set$) T$)
(declare-fun ?v6!132 (T$ Dtree$ N_set$) T$)
(declare-fun ?v3!131 (T$ Dtree$ N_set$) Dtree$)
(declare-fun ?v4!130 (T$ Dtree$ N_set$) N_set$)
(declare-fun ?v5!133 (T$ Dtree$ N_set$) N_set$)
(declare-fun ?v5!136 (T$ Dtree$ N_set$) T$)
(declare-fun ?v4!137 (T$ Dtree$ N_set$) N_set$)
(declare-fun ?v5!140 (T$ Dtree$ N_set$) N_set$)
(declare-fun ?v4!141 (T$ Dtree$ N_set$) Dtree$)
(declare-fun ?v6!139 (T$ Dtree$ N_set$) T$)
(declare-fun ?v3!142 (T$ Dtree$ N_set$) Dtree$)
(declare-fun ?v3!138 (T$ Dtree$ N_set$) Dtree$)
(declare-fun ?v3!143 (T$ Dtree$ N_set$) Dtree$)
(declare-fun ?v3!150 (T$ Dtree$ N_set$) Dtree$)
(declare-fun ?v4!149 (T$ Dtree$ N_set$) N_set$)
(declare-fun ?v3!146 (T$ Dtree$ N_set$) Dtree$)
(declare-fun ?v4!145 (T$ Dtree$ N_set$) N_set$)
(declare-fun ?v5!148 (T$ Dtree$ N_set$) Dtree$)
(declare-fun ?v6!147 (T$ Dtree$ N_set$) T$)
(declare-fun ?v5!144 (T$ Dtree$ N_set$) T$)
(declare-fun ?v4!156 (T$ Dtree$ N_set$) N_set$)
(declare-fun ?v3!153 (T$ Dtree$ N_set$) Dtree$)
(declare-fun ?v6!154 (T$ Dtree$ N_set$) T$)
(declare-fun ?v5!155 (T$ Dtree$ N_set$) Dtree$)
(declare-fun ?v5!151 (T$ Dtree$ N_set$) T$)
(declare-fun ?v4!152 (T$ Dtree$ N_set$) N_set$)
(declare-fun ?v3!157 (T$ Dtree$ N_set$) Dtree$)
(assert (! (forall ((?v0py0 T$)) (! (= (fun_app$ uuc$ ?v0py0) (inl$ ?v0py0)) :pattern ((fun_app$ uuc$ ?v0py0)) )) :named A0))
(assert (! (forall ((?v0py1 T_dtree_sum_set$)(?v1py0 T_dtree_sum$)) (! (and (or (not (fun_app$a (uua$ ?v0py1) ?v1py0)) (member$ ?v1py0 ?v0py1)) (or (fun_app$a (uua$ ?v0py1) ?v1py0) (not (member$ ?v1py0 ?v0py1)))) :pattern ((fun_app$a (uua$ ?v0py1) ?v1py0)) )) :named A1))
(assert (! (forall ((?v0py2 T_set$)(?v1py1 T$)) (! (and (or (not (fun_app$b (uub$ ?v0py2) ?v1py1)) (member$a ?v1py1 ?v0py2)) (or (fun_app$b (uub$ ?v0py2) ?v1py1) (not (member$a ?v1py1 ?v0py2)))) :pattern ((fun_app$b (uub$ ?v0py2) ?v1py1)) )) :named A2))
(assert (! (forall ((?v0py3 N_set$)(?v1py2 N$)) (! (and (or (not (fun_app$c (uu$ ?v0py3) ?v1py2)) (member$b ?v1py2 ?v0py3)) (or (fun_app$c (uu$ ?v0py3) ?v1py2) (not (member$b ?v1py2 ?v0py3)))) :pattern ((fun_app$c (uu$ ?v0py3) ?v1py2)) )) :named A3))
(assert (! (forall ((?v0py4 Dtree$)) (! (or (not (= bot$ (fr$ ns$ ?v0py4))) (not (wf$ ?v0py4)) (not (= (fun_app$d root$ ?v0py4) n$))) :pattern ((fr$ ns$ ?v0py4)) :pattern ((wf$ ?v0py4)) :pattern ((fun_app$d root$ ?v0py4)) )) :named A4))
(assert (! (not (member$b n$ ns$)) :named A5))
(assert (! (forall ((?v0py5 Dtree$)(?v1py3 N_set$)) (! (or (member$b (fun_app$d root$ ?v0py5) ?v1py3) (= (fr$ ?v1py3 ?v0py5) bot$)) :pattern ((fr$ ?v1py3 ?v0py5)) )) :named A6))
(assert (! (forall ((?v0py6 T_bool_fun$)) (! (and (or (not (= (collect$ ?v0py6) bot$)) (forall ((?v1py4 T$)) (! (not (fun_app$b ?v0py6 ?v1py4)) :pattern ((fun_app$b ?v0py6 ?v1py4)) ))) (or (= (collect$ ?v0py6) bot$) (fun_app$b ?v0py6 (?v1!0 ?v0py6)))) :pattern ((collect$ ?v0py6)) :pattern ((?v1!0 ?v0py6)) )) :named A7))
(assert (! (forall ((?v0py7 N_bool_fun$)) (! (and (or (not (= (collect$a ?v0py7) bot$a)) (forall ((?v1py5 N$)) (! (not (fun_app$c ?v0py7 ?v1py5)) :pattern ((fun_app$c ?v0py7 ?v1py5)) ))) (or (= (collect$a ?v0py7) bot$a) (fun_app$c ?v0py7 (?v1!1 ?v0py7)))) :pattern ((collect$a ?v0py7)) :pattern ((?v1!1 ?v0py7)) )) :named A8))
(assert (! (forall ((?v0py8 T_dtree_sum_set$)) (! (and (or (= ?v0py8 bot$b) (member$ (?v1!2 ?v0py8) ?v0py8)) (or (forall ((?v1py6 T_dtree_sum$)) (! (not (member$ ?v1py6 ?v0py8)) :pattern ((member$ ?v1py6 ?v0py8)) )) (not (= ?v0py8 bot$b)))) :pattern ((?v1!2 ?v0py8)) )) :named A9))
(assert (! (forall ((?v0py9 T_set$)) (! (and (or (= ?v0py9 bot$) (member$a (?v1!3 ?v0py9) ?v0py9)) (or (forall ((?v1py7 T$)) (! (not (member$a ?v1py7 ?v0py9)) :pattern ((member$a ?v1py7 ?v0py9)) )) (not (= ?v0py9 bot$)))) :pattern ((?v1!3 ?v0py9)) )) :named A10))
(assert (! (forall ((?v0py10 N_set$)) (! (and (or (= ?v0py10 bot$a) (member$b (?v1!4 ?v0py10) ?v0py10)) (or (forall ((?v1py8 N$)) (! (not (member$b ?v1py8 ?v0py10)) :pattern ((member$b ?v1py8 ?v0py10)) )) (not (= ?v0py10 bot$a)))) :pattern ((?v1!4 ?v0py10)) )) :named A11))
(assert (! (forall ((?v0py11 T_bool_fun$)) (! (and (or (not (= bot$ (collect$ ?v0py11))) (forall ((?v1py9 T$)) (! (not (fun_app$b ?v0py11 ?v1py9)) :pattern ((fun_app$b ?v0py11 ?v1py9)) ))) (or (= bot$ (collect$ ?v0py11)) (fun_app$b ?v0py11 (?v1!5 ?v0py11)))) :pattern ((collect$ ?v0py11)) :pattern ((?v1!5 ?v0py11)) )) :named A12))
(assert (! (forall ((?v0py12 N_bool_fun$)) (! (and (or (not (= bot$a (collect$a ?v0py12))) (forall ((?v1py10 N$)) (! (not (fun_app$c ?v0py12 ?v1py10)) :pattern ((fun_app$c ?v0py12 ?v1py10)) ))) (or (= bot$a (collect$a ?v0py12)) (fun_app$c ?v0py12 (?v1!6 ?v0py12)))) :pattern ((collect$a ?v0py12)) :pattern ((?v1!6 ?v0py12)) )) :named A13))
(assert (! (forall ((?v0py13 T_dtree_sum$)) (! (not (member$ ?v0py13 bot$b)) :pattern ((member$ ?v0py13 bot$b)) )) :named A14))
(assert (! (forall ((?v0py14 T$)) (! (not (member$a ?v0py14 bot$)) :pattern ((member$a ?v0py14 bot$)) )) :named A15))
(assert (! (forall ((?v0py15 N$)) (! (not (member$b ?v0py15 bot$a)) :pattern ((member$b ?v0py15 bot$a)) )) :named A16))
(assert (! (forall ((?v0py16 Dtree$)) (! (= (fun_app$d hsubst_r$ ?v0py16) (fun_app$d root$ ?v0py16)) :pattern ((fun_app$d hsubst_r$ ?v0py16)) )) :named A17))
(assert (! (forall ((?v0py17 Dtree$)) (! (= (fun_app$d root$ (rcut$ ?v0py17)) (fun_app$d root$ ?v0py17)) :pattern ((rcut$ ?v0py17)) )) :named A18))
(assert (! (forall ((?v0py18 T_dtree_sum_set$)) (! (and (or (forall ((?v1py11 T_dtree_sum$)) (! (not (member$ ?v1py11 ?v0py18)) :pattern ((member$ ?v1py11 ?v0py18)) )) (not (= ?v0py18 bot$b))) (or (= ?v0py18 bot$b) (member$ (?v1!7 ?v0py18) ?v0py18))) :pattern ((?v1!7 ?v0py18)) )) :named A19))
(assert (! (forall ((?v0py19 T_set$)) (! (and (or (forall ((?v1py12 T$)) (! (not (member$a ?v1py12 ?v0py19)) :pattern ((member$a ?v1py12 ?v0py19)) )) (not (= ?v0py19 bot$))) (or (= ?v0py19 bot$) (member$a (?v1!8 ?v0py19) ?v0py19))) :pattern ((?v1!8 ?v0py19)) )) :named A20))
(assert (! (forall ((?v0py20 N_set$)) (! (and (or (forall ((?v1py13 N$)) (! (not (member$b ?v1py13 ?v0py20)) :pattern ((member$b ?v1py13 ?v0py20)) )) (not (= ?v0py20 bot$a))) (or (= ?v0py20 bot$a) (member$b (?v1!9 ?v0py20) ?v0py20))) :pattern ((?v1!9 ?v0py20)) )) :named A21))
(assert (! (forall ((?v0py21 T_dtree_sum_set$)) (! (or (= ?v0py21 bot$b) (member$ (?v1!10 ?v0py21) ?v0py21)) :pattern ((?v1!10 ?v0py21)) )) :named A22))
(assert (! (forall ((?v0py22 T_set$)) (! (or (= ?v0py22 bot$) (member$a (?v1!11 ?v0py22) ?v0py22)) :pattern ((?v1!11 ?v0py22)) )) :named A23))
(assert (! (forall ((?v0py23 N_set$)) (! (or (= ?v0py23 bot$a) (member$b (?v1!12 ?v0py23) ?v0py23)) :pattern ((?v1!12 ?v0py23)) )) :named A24))
(assert (! (forall ((?v0py24 T_dtree_sum_set$)(?v1py14 T_dtree_sum$)) (! (or (not (= ?v0py24 bot$b)) (not (member$ ?v1py14 ?v0py24))) :pattern ((member$ ?v1py14 ?v0py24)) )) :named A25))
(assert (! (forall ((?v0py25 T_set$)(?v1py15 T$)) (! (or (not (= ?v0py25 bot$)) (not (member$a ?v1py15 ?v0py25))) :pattern ((member$a ?v1py15 ?v0py25)) )) :named A26))
(assert (! (forall ((?v0py26 N_set$)(?v1py16 N$)) (! (or (not (= ?v0py26 bot$a)) (not (member$b ?v1py16 ?v0py26))) :pattern ((member$b ?v1py16 ?v0py26)) )) :named A27))
(assert (! (forall ((?v0py27 T_dtree_sum$)) (! (not (member$ ?v0py27 bot$b)) :pattern ((member$ ?v0py27 bot$b)) )) :named A28))
(assert (! (forall ((?v0py28 T$)) (! (not (member$a ?v0py28 bot$)) :pattern ((member$a ?v0py28 bot$)) )) :named A29))
(assert (! (forall ((?v0py29 N$)) (! (not (member$b ?v0py29 bot$a)) :pattern ((member$b ?v0py29 bot$a)) )) :named A30))
(assert (! (= bot$ (collect$ bot$c)) :named A31))
(assert (! (= bot$a (collect$a bot$d)) :named A32))
(assert (! (forall ((?v0py30 Dtree$)) (! (or (not (wf$ ?v0py30)) (wf$ (rcut$ ?v0py30))) :pattern ((rcut$ ?v0py30)) )) :named A33))
(assert (! (forall ((?v0py31 T_set$)) (! (and (or (not (is_empty$ ?v0py31)) (= ?v0py31 bot$)) (or (is_empty$ ?v0py31) (not (= ?v0py31 bot$)))) :pattern ((is_empty$ ?v0py31)) )) :named A34))
(assert (! (forall ((?v0py32 N_set$)) (! (and (or (not (is_empty$a ?v0py32)) (= ?v0py32 bot$a)) (or (is_empty$a ?v0py32) (not (= ?v0py32 bot$a)))) :pattern ((is_empty$a ?v0py32)) )) :named A35))
(assert (! (forall ((?v0py33 Dtree$)) (! (= (rcut$ ?v0py33) (fun_app$e (h$ ?v0py33) (fun_app$d root$ ?v0py33))) :pattern ((rcut$ ?v0py33)) )) :named A36))
(assert (! (forall ((?v0py34 T_dtree_sum$)) (! (and (or (not (bot$e ?v0py34)) (member$ ?v0py34 bot$b)) (or (bot$e ?v0py34) (not (member$ ?v0py34 bot$b)))) :pattern ((bot$e ?v0py34)) )) :named A37))
(assert (! (forall ((?v0py35 T$)) (! (and (or (not (fun_app$b bot$c ?v0py35)) (member$a ?v0py35 bot$)) (or (fun_app$b bot$c ?v0py35) (not (member$a ?v0py35 bot$)))) :pattern ((fun_app$b bot$c ?v0py35)) )) :named A38))
(assert (! (forall ((?v0py36 N$)) (! (and (or (not (fun_app$c bot$d ?v0py36)) (member$b ?v0py36 bot$a)) (or (fun_app$c bot$d ?v0py36) (not (member$b ?v0py36 bot$a)))) :pattern ((fun_app$c bot$d ?v0py36)) )) :named A39))
(assert (! (forall ((?v0py37 N$)) (! (= (fun_app$d root$ (fun_app$e deftr$ ?v0py37)) ?v0py37) :pattern ((fun_app$e deftr$ ?v0py37)) )) :named A40))
(assert (! (forall ((?v0py38 Dtree$)) (! (regular$ (rcut$ ?v0py38)) :pattern ((rcut$ ?v0py38)) )) :named A41))
(assert (! (forall ((?v0py39 N$)) (! (wf$ (fun_app$e deftr$ ?v0py39)) :pattern ((fun_app$e deftr$ ?v0py39)) )) :named A42))
(assert (! (forall ((?v0py40 Dtree$)(?v1py17 Dtree$)) (! (= (fun_app$d root$ (fun_app$f (hsubst$ ?v0py40) ?v1py17)) (fun_app$d root$ ?v1py17)) :pattern ((fun_app$f (hsubst$ ?v0py40) ?v1py17)) )) :named A43))
(assert (! (forall ((?v0py41 N_set$)(?v1py18 Dtree$)(?v2py0 T$)) (! (or (not (fun_app$b (fun_app$g (fun_app$h inFr2$ ?v0py41) ?v1py18) ?v2py0)) (member$b (fun_app$d root$ ?v1py18) ?v0py41)) :pattern ((fun_app$b (fun_app$g (fun_app$h inFr2$ ?v0py41) ?v1py18) ?v2py0)) )) :named A44))
(assert (! (forall ((?v0py42 T_T_set_fun$)) (! (= (bind$ bot$ ?v0py42) bot$) :pattern ((bind$ bot$ ?v0py42)) )) :named A45))
(assert (! (forall ((?v0py43 T_N_set_fun$)) (! (= (bind$a bot$ ?v0py43) bot$a) :pattern ((bind$a bot$ ?v0py43)) )) :named A46))
(assert (! (forall ((?v0py44 N_T_set_fun$)) (! (= (bind$b bot$a ?v0py44) bot$) :pattern ((bind$b bot$a ?v0py44)) )) :named A47))
(assert (! (forall ((?v0py45 N_N_set_fun$)) (! (= (bind$c bot$a ?v0py45) bot$a) :pattern ((bind$c bot$a ?v0py45)) )) :named A48))
(assert (! (forall ((?v0py46 Dtree$)(?v1py19 Dtree$)) (! (or (wf$ (fun_app$f (hsubst$ ?v0py46) ?v1py19)) (not (wf$ ?v0py46)) (not (wf$ ?v1py19))) :pattern ((fun_app$f (hsubst$ ?v0py46) ?v1py19)) )) :named A49))
(assert (! (forall ((?v0py47 N_dtree_fun$)(?v1py20 Dtree$)) (! (or (not (reg$ ?v0py47 ?v1py20)) (= (fun_app$e ?v0py47 (fun_app$d root$ ?v1py20)) ?v1py20)) :pattern ((reg$ ?v0py47 ?v1py20)) :pattern ((fun_app$e ?v0py47 (fun_app$d root$ ?v1py20))) )) :named A50))
(assert (! (forall ((?v0py48 N$)) (! (reg$ deftr$ (fun_app$e deftr$ ?v0py48)) :pattern ((fun_app$e deftr$ ?v0py48)) )) :named A51))
(assert (! (forall ((?v0py49 Dtree$)) (! (and (or (not (regular$ ?v0py49)) (reg$ (?v1!13 ?v0py49) ?v0py49)) (or (regular$ ?v0py49) (forall ((?v1py21 N_dtree_fun$)) (! (not (reg$ ?v1py21 ?v0py49)) :pattern ((reg$ ?v1py21 ?v0py49)) )))) :pattern ((regular$ ?v0py49)) :pattern ((?v1!13 ?v0py49)) )) :named A52))
(assert (! (forall ((?v0py50 Dtree$)) (! (and (or (not (regular$ ?v0py50)) (and (reg$ (?v1!14 ?v0py50) ?v0py50) (forall ((?v2py1 N$)) (! (= (fun_app$d root$ (fun_app$e (?v1!14 ?v0py50) ?v2py1)) ?v2py1) :pattern ((fun_app$e (?v1!14 ?v0py50) ?v2py1)) )))) (or (regular$ ?v0py50) (forall ((?v1py22 N_dtree_fun$)) (! (or (not (reg$ ?v1py22 ?v0py50)) (not (= (fun_app$d root$ (fun_app$e ?v1py22 (?v2!15 ?v1py22))) (?v2!15 ?v1py22)))) :pattern ((reg$ ?v1py22 ?v0py50)) :pattern ((?v2!15 ?v1py22)) )))) :pattern ((regular$ ?v0py50)) :pattern ((?v1!14 ?v0py50)) )) :named A53))
(assert (! (forall ((?v0py51 Dtree$)) (! (reg$ (h$ ?v0py51) (rcut$ ?v0py51)) :pattern ((h$ ?v0py51)) :pattern ((rcut$ ?v0py51)) )) :named A54))
(assert (! (forall ((?v0py52 Dtree$)) (! (or (not (reg$ (h$ ?v0py52) ?v0py52)) (= (rcut$ ?v0py52) ?v0py52)) :pattern ((rcut$ ?v0py52)) )) :named A55))
(assert (! (forall ((?v0py53 Dtree$)) (! (and (or (not (= (rcut$ ?v0py53) ?v0py53)) (reg$ (h$ ?v0py53) ?v0py53)) (or (= (rcut$ ?v0py53) ?v0py53) (not (reg$ (h$ ?v0py53) ?v0py53)))) :pattern ((rcut$ ?v0py53)) :pattern ((h$ ?v0py53)) )) :named A56))
(assert (! (forall ((?v0py54 Dtree$)(?v1py23 Dtree$)) (! (or (not (= (fun_app$d root$ ?v0py54) (fun_app$d root$ ?v1py23))) (= (fun_app$f (hsubst$ ?v1py23) ?v0py54) (fun_app$f (hsubst$ ?v1py23) ?v1py23))) :pattern ((fun_app$f (hsubst$ ?v1py23) ?v0py54)) )) :named A57))
(assert (! (forall ((?v0py55 Dtree$)) (! (= (hsubst$ ?v0py55) (fun_app$i (unfold$ hsubst_r$) (hsubst_c$ ?v0py55))) :pattern ((hsubst$ ?v0py55)) )) :named A58))
(assert (! (forall ((?v0py56 Dtree$)(?v1py24 N$)) (! (= (fun_app$d root$ (fun_app$e (h$ ?v0py56) ?v1py24)) (fun_app$d root$ (fun_app$e (pick$ ?v0py56) ?v1py24))) :pattern ((fun_app$e (h$ ?v0py56) ?v1py24)) :pattern ((fun_app$e (pick$ ?v0py56) ?v1py24)) )) :named A59))
(assert (! (forall ((?v0py57 N_set$)(?v1py25 Dtree$)(?v2py2 T$)(?v3py0 Dtree$)) (! (or (not (fun_app$b (fun_app$g (fun_app$h inFr$ ?v0py57) ?v1py25) ?v2py2)) (member$b (fun_app$d root$ ?v3py0) ?v0py57) (fun_app$b (fun_app$g (fun_app$h inFr$ ?v0py57) (fun_app$f (hsubst$ ?v3py0) ?v1py25)) ?v2py2)) :pattern ((fun_app$b (fun_app$g (fun_app$h inFr$ ?v0py57) (fun_app$f (hsubst$ ?v3py0) ?v1py25)) ?v2py2)) )) :named A60))
(assert (! (forall ((?v0py58 N_set$)(?v1py26 Dtree$)(?v2py3 N$)) (! (or (not (fun_app$j (fun_app$k (fun_app$l subtr$ ?v0py58) ?v1py26) (fun_app$e deftr$ ?v2py3))) (= ?v1py26 (fun_app$e deftr$ (fun_app$d root$ ?v1py26)))) :pattern ((fun_app$j (fun_app$k (fun_app$l subtr$ ?v0py58) ?v1py26) (fun_app$e deftr$ ?v2py3))) )) :named A61))
(assert (! (forall ((?v0py59 N_dtree_fun$)(?v1py27 Dtree$)) (! (and (or (not (reg$ ?v0py59 ?v1py27)) (forall ((?v2py4 N_set$)(?v3py1 Dtree$)) (! (or (not (fun_app$j (fun_app$k (fun_app$l subtr$ ?v2py4) ?v3py1) ?v1py27)) (= ?v3py1 (fun_app$e ?v0py59 (fun_app$d root$ ?v3py1)))) :pattern ((fun_app$k (fun_app$l subtr$ ?v2py4) ?v3py1)) ))) (or (reg$ ?v0py59 ?v1py27) (and (fun_app$j (fun_app$k (fun_app$l subtr$ (?v2!17 ?v1py27 ?v0py59)) (?v3!16 ?v1py27 ?v0py59)) ?v1py27) (not (= (?v3!16 ?v1py27 ?v0py59) (fun_app$e ?v0py59 (fun_app$d root$ (?v3!16 ?v1py27 ?v0py59)))))))) :pattern ((reg$ ?v0py59 ?v1py27)) :pattern ((?v2!17 ?v1py27 ?v0py59)) :pattern ((?v3!16 ?v1py27 ?v0py59)) )) :named A62))
(assert (! (forall ((?v0py60 Dtree$)) (! (= (fun_app$m (comp$ root$) (hsubst$ ?v0py60)) root$) :pattern ((hsubst$ ?v0py60)) )) :named A63))
(assert (! (= (id_on$ bot$) bot$f) :named A64))
(assert (! (= (id_on$a bot$a) bot$g) :named A65))
(assert (! (= inFr$ inFr2$) :named A66))
(assert (! (forall ((?v0py61 N_set$)(?v1py28 Dtree$)(?v2py5 T$)(?v3py2 Dtree$)) (! (or (not (fun_app$b (fun_app$g (fun_app$h inFr$ ?v0py61) ?v1py28) ?v2py5)) (not (fun_app$j (fun_app$k (fun_app$l subtr$ ?v0py61) ?v1py28) ?v3py2)) (fun_app$b (fun_app$g (fun_app$h inFr$ ?v0py61) ?v3py2) ?v2py5)) :pattern ((fun_app$b (fun_app$g (fun_app$h inFr$ ?v0py61) ?v1py28) ?v2py5) (fun_app$j (fun_app$k (fun_app$l subtr$ ?v0py61) ?v1py28) ?v3py2)) )) :named A67))
(assert (! (forall ((?v0py62 N_set$)(?v1py29 Dtree$)(?v2py6 Dtree$)(?v3py3 Dtree$)) (! (or (fun_app$j (fun_app$k (fun_app$l subtr$ ?v0py62) ?v1py29) ?v3py3) (not (fun_app$j (fun_app$k (fun_app$l subtr$ ?v0py62) ?v1py29) ?v2py6)) (not (fun_app$j (fun_app$k (fun_app$l subtr$ ?v0py62) ?v2py6) ?v3py3))) :pattern ((fun_app$j (fun_app$k (fun_app$l subtr$ ?v0py62) ?v1py29) ?v3py3) (fun_app$j (fun_app$k (fun_app$l subtr$ ?v0py62) ?v1py29) ?v2py6)) )) :named A68))
(assert (! (forall ((?v0py63 N_set$)) (! (= (collect$a (uu$ ?v0py63)) ?v0py63) :pattern ((uu$ ?v0py63)) )) :named A69))
(assert (! (forall ((?v0py64 T_dtree_sum_set$)) (! (= (collect$b (uua$ ?v0py64)) ?v0py64) :pattern ((uua$ ?v0py64)) )) :named A70))
(assert (! (forall ((?v0py65 T_set$)) (! (= (collect$ (uub$ ?v0py65)) ?v0py65) :pattern ((uub$ ?v0py65)) )) :named A71))
(assert (! (forall ((?v0py66 N$)(?v1py30 N_bool_fun$)) (! (and (or (not (member$b ?v0py66 (collect$a ?v1py30))) (fun_app$c ?v1py30 ?v0py66)) (or (member$b ?v0py66 (collect$a ?v1py30)) (not (fun_app$c ?v1py30 ?v0py66)))) :pattern ((member$b ?v0py66 (collect$a ?v1py30))) :pattern ((fun_app$c ?v1py30 ?v0py66)) )) :named A72))
(assert (! (forall ((?v0py67 T_dtree_sum$)(?v1py31 T_dtree_sum_bool_fun$)) (! (and (or (not (member$ ?v0py67 (collect$b ?v1py31))) (fun_app$a ?v1py31 ?v0py67)) (or (member$ ?v0py67 (collect$b ?v1py31)) (not (fun_app$a ?v1py31 ?v0py67)))) :pattern ((member$ ?v0py67 (collect$b ?v1py31))) :pattern ((fun_app$a ?v1py31 ?v0py67)) )) :named A73))
(assert (! (forall ((?v0py68 T$)(?v1py32 T_bool_fun$)) (! (and (or (not (member$a ?v0py68 (collect$ ?v1py32))) (fun_app$b ?v1py32 ?v0py68)) (or (member$a ?v0py68 (collect$ ?v1py32)) (not (fun_app$b ?v1py32 ?v0py68)))) :pattern ((member$a ?v0py68 (collect$ ?v1py32))) :pattern ((fun_app$b ?v1py32 ?v0py68)) )) :named A74))
(assert (! (forall ((?v0py69 Dtree$)(?v1py33 N_set$)) (! (or (not (member$b (fun_app$d root$ ?v0py69) ?v1py33)) (fun_app$j (fun_app$k (fun_app$l subtr$ ?v1py33) ?v0py69) ?v0py69)) :pattern ((member$b (fun_app$d root$ ?v0py69) ?v1py33)) :pattern ((fun_app$k (fun_app$l subtr$ ?v1py33) ?v0py69)) )) :named A75))
(assert (! (forall ((?v0py70 N_set$)(?v1py34 Dtree$)(?v2py7 Dtree$)) (! (or (not (fun_app$j (fun_app$k (fun_app$l subtr$ ?v0py70) ?v1py34) ?v2py7)) (member$b (fun_app$d root$ ?v1py34) ?v0py70)) :pattern ((fun_app$j (fun_app$k (fun_app$l subtr$ ?v0py70) ?v1py34) ?v2py7)) )) :named A76))
(assert (! (forall ((?v0py71 N_set$)(?v1py35 Dtree$)(?v2py8 Dtree$)) (! (or (not (fun_app$j (fun_app$k (fun_app$l subtr$ ?v0py71) ?v1py35) ?v2py8)) (member$b (fun_app$d root$ ?v2py8) ?v0py71)) :pattern ((fun_app$j (fun_app$k (fun_app$l subtr$ ?v0py71) ?v1py35) ?v2py8)) )) :named A77))
(assert (! (forall ((?v0py72 Dtree$)(?v1py36 N_set$)(?v2py9 Dtree$)) (! (or (wf$ ?v2py9) (not (wf$ ?v0py72)) (not (fun_app$j (fun_app$k (fun_app$l subtr$ ?v1py36) ?v2py9) ?v0py72))) :pattern ((fun_app$j (fun_app$k (fun_app$l subtr$ ?v1py36) ?v2py9) ?v0py72)) )) :named A78))
(assert (! (forall ((?v0py73 Dtree$)(?v1py37 N_set$)(?v2py10 T$)) (! (or (member$b (fun_app$d root$ ?v0py73) ?v1py37) (not (fun_app$b (fun_app$g (fun_app$h inFr$ ?v1py37) ?v0py73) ?v2py10))) :pattern ((fun_app$b (fun_app$g (fun_app$h inFr$ ?v1py37) ?v0py73) ?v2py10)) )) :named A79))
(assert (! (forall ((?v0py74 N_set$)(?v1py38 Dtree$)(?v2py11 T$)) (! (or (not (fun_app$b (fun_app$g (fun_app$h inFr$ ?v0py74) ?v1py38) ?v2py11)) (member$b (fun_app$d root$ ?v1py38) ?v0py74)) :pattern ((fun_app$b (fun_app$g (fun_app$h inFr$ ?v0py74) ?v1py38) ?v2py11)) )) :named A80))
(assert (! (forall ((?v0py75 N_dtree_fun$)(?v1py39 Dtree$)(?v2py12 N_set$)(?v3py4 Dtree$)) (! (or (not (reg$ ?v0py75 ?v1py39)) (not (fun_app$j (fun_app$k (fun_app$l subtr$ ?v2py12) ?v3py4) ?v1py39)) (reg$ ?v0py75 ?v3py4)) :pattern ((fun_app$j (fun_app$k (fun_app$l subtr$ ?v2py12) ?v3py4) ?v1py39) (reg$ ?v0py75 ?v1py39)) )) :named A81))
(assert (! (forall ((?v0py76 Dtree$)(?v1py40 N_set$)(?v2py13 Dtree$)) (! (or (regular$ ?v2py13) (not (regular$ ?v0py76)) (not (fun_app$j (fun_app$k (fun_app$l subtr$ ?v1py40) ?v2py13) ?v0py76))) :pattern ((fun_app$j (fun_app$k (fun_app$l subtr$ ?v1py40) ?v2py13) ?v0py76)) )) :named A82))
(assert (! (forall ((?v0py77 Dtree$)(?v1py41 N$)) (! (= (fun_app$n (h_r$ ?v0py77) ?v1py41) (fun_app$d root$ (fun_app$e (pick$ ?v0py77) ?v1py41))) :pattern ((fun_app$n (h_r$ ?v0py77) ?v1py41)) )) :named A83))
(assert (! (forall ((?v0py78 Dtree_N_fun$)(?v1py42 Dtree_T_dtree_sum_set_fun$)(?v2py14 Dtree$)) (! (= (fun_app$d root$ (fun_app$f (fun_app$i (unfold$ ?v0py78) ?v1py42) ?v2py14)) (fun_app$d ?v0py78 ?v2py14)) :pattern ((fun_app$f (fun_app$i (unfold$ ?v0py78) ?v1py42) ?v2py14)) )) :named A84))
(assert (! (forall ((?v0py79 N_N_fun$)(?v1py43 N_T_N_sum_set_fun$)(?v2py15 N$)) (! (= (fun_app$d root$ (fun_app$e (fun_app$o (unfold$a ?v0py79) ?v1py43) ?v2py15)) (fun_app$n ?v0py79 ?v2py15)) :pattern ((fun_app$e (fun_app$o (unfold$a ?v0py79) ?v1py43) ?v2py15)) )) :named A85))
(assert (! (forall ((?v0py80 Dtree_N_fun$)(?v1py44 Dtree_dtree_fun$)(?v2py16 Dtree$)) (! (= (fun_app$d (fun_app$m (comp$ ?v0py80) ?v1py44) ?v2py16) (fun_app$d ?v0py80 (fun_app$f ?v1py44 ?v2py16))) :pattern ((fun_app$d (fun_app$m (comp$ ?v0py80) ?v1py44) ?v2py16)) )) :named A86))
(assert (! (forall ((?v0py81 N_dtree_fun$)(?v1py45 Dtree$)) (! (and (or (not (reg$ ?v0py81 ?v1py45)) (forall ((?v2py17 Dtree$)) (! (or (not (fun_app$j (fun_app$k (fun_app$l subtr$ top$) ?v2py17) ?v1py45)) (= ?v2py17 (fun_app$e ?v0py81 (fun_app$d root$ ?v2py17)))) :pattern ((fun_app$k (fun_app$l subtr$ top$) ?v2py17)) :pattern ((fun_app$d root$ ?v2py17)) ))) (or (reg$ ?v0py81 ?v1py45) (and (fun_app$j (fun_app$k (fun_app$l subtr$ top$) (?v2!18 ?v1py45 ?v0py81)) ?v1py45) (not (= (?v2!18 ?v1py45 ?v0py81) (fun_app$e ?v0py81 (fun_app$d root$ (?v2!18 ?v1py45 ?v0py81)))))))) :pattern ((reg$ ?v0py81 ?v1py45)) :pattern ((?v2!18 ?v1py45 ?v0py81)) )) :named A87))
(assert (! (forall ((?v0py82 N_N_fun$)(?v1py46 Dtree_N_fun$)(?v2py18 Dtree_dtree_fun$)) (! (= (fun_app$p (comp$a ?v0py82) (fun_app$m (comp$ ?v1py46) ?v2py18)) (fun_app$m (comp$ (fun_app$p (comp$a ?v0py82) ?v1py46)) ?v2py18)) :pattern ((fun_app$p (comp$a ?v0py82) (fun_app$m (comp$ ?v1py46) ?v2py18))) :pattern ((fun_app$m (comp$ (fun_app$p (comp$a ?v0py82) ?v1py46)) ?v2py18)) )) :named A88))
(assert (! (forall ((?v0py83 Dtree_N_fun$)(?v1py47 Dtree_dtree_fun$)(?v2py19 Dtree_dtree_fun$)) (! (= (fun_app$m (comp$ ?v0py83) (fun_app$q (comp$b ?v1py47) ?v2py19)) (fun_app$m (comp$ (fun_app$m (comp$ ?v0py83) ?v1py47)) ?v2py19)) :pattern ((fun_app$m (comp$ ?v0py83) (fun_app$q (comp$b ?v1py47) ?v2py19))) :pattern ((fun_app$m (comp$ (fun_app$m (comp$ ?v0py83) ?v1py47)) ?v2py19)) )) :named A89))
(assert (! (forall ((?v0py84 N_N_fun$)(?v1py48 Dtree_N_fun$)(?v2py20 Dtree_dtree_fun$)) (! (= (fun_app$m (comp$ (fun_app$p (comp$a ?v0py84) ?v1py48)) ?v2py20) (fun_app$p (comp$a ?v0py84) (fun_app$m (comp$ ?v1py48) ?v2py20))) :pattern ((fun_app$m (comp$ (fun_app$p (comp$a ?v0py84) ?v1py48)) ?v2py20)) :pattern ((fun_app$p (comp$a ?v0py84) (fun_app$m (comp$ ?v1py48) ?v2py20))) )) :named A90))
(assert (! (forall ((?v0py85 Dtree_N_fun$)(?v1py49 Dtree_dtree_fun$)(?v2py21 Dtree_dtree_fun$)) (! (= (fun_app$m (comp$ (fun_app$m (comp$ ?v0py85) ?v1py49)) ?v2py21) (fun_app$m (comp$ ?v0py85) (fun_app$q (comp$b ?v1py49) ?v2py21))) :pattern ((fun_app$m (comp$ (fun_app$m (comp$ ?v0py85) ?v1py49)) ?v2py21)) :pattern ((fun_app$m (comp$ ?v0py85) (fun_app$q (comp$b ?v1py49) ?v2py21))) )) :named A91))
(assert (! (forall ((?v0py86 Dtree_N_fun$)(?v1py50 Dtree_dtree_fun$)(?v2py22 Dtree_N_fun$)(?v3py5 Dtree_dtree_fun$)) (! (or (forall ((?v4py0 Dtree$)) (! (= (fun_app$d ?v0py86 (fun_app$f ?v1py50 ?v4py0)) (fun_app$d ?v2py22 (fun_app$f ?v3py5 ?v4py0))) :pattern ((fun_app$f ?v1py50 ?v4py0)) :pattern ((fun_app$f ?v3py5 ?v4py0)) )) (not (= (fun_app$m (comp$ ?v0py86) ?v1py50) (fun_app$m (comp$ ?v2py22) ?v3py5)))) :pattern ((fun_app$m (comp$ ?v0py86) ?v1py50) (fun_app$m (comp$ ?v2py22) ?v3py5)) )) :named A92))
(assert (! (forall ((?v0py87 T_dtree_sum$)) (! (member$ ?v0py87 top$a) :pattern ((member$ ?v0py87 top$a)) )) :named A93))
(assert (! (forall ((?v0py88 T$)) (! (member$a ?v0py88 top$b) :pattern ((member$a ?v0py88 top$b)) )) :named A94))
(assert (! (forall ((?v0py89 N$)) (! (member$b ?v0py89 top$) :pattern ((member$b ?v0py89 top$)) )) :named A95))
(assert (! (forall ((?v0py90 T_dtree_sum_set$)) (! (or (not (member$ (?v1!19 ?v0py90) ?v0py90)) (= top$a ?v0py90)) :pattern ((?v1!19 ?v0py90)) )) :named A96))
(assert (! (forall ((?v0py91 T_set$)) (! (or (not (member$a (?v1!20 ?v0py91) ?v0py91)) (= top$b ?v0py91)) :pattern ((?v1!20 ?v0py91)) )) :named A97))
(assert (! (forall ((?v0py92 N_set$)) (! (or (not (member$b (?v1!21 ?v0py92) ?v0py92)) (= top$ ?v0py92)) :pattern ((?v1!21 ?v0py92)) )) :named A98))
(assert (! (member$ ?v0!22 top$a) :named A99))
(assert (! (member$a ?v0!23 top$b) :named A100))
(assert (! (member$b ?v0!24 top$) :named A101))
(assert (! (not (= bot$ top$b)) :named A102))
(assert (! (not (= bot$a top$)) :named A103))
(assert (! (forall ((?v0py93 Dtree_N_fun$)(?v1py51 Dtree_dtree_fun$)(?v2py23 Dtree_N_fun$)(?v3py6 Dtree$)) (! (or (not (= (fun_app$m (comp$ ?v0py93) ?v1py51) ?v2py23)) (= (fun_app$d ?v0py93 (fun_app$f ?v1py51 ?v3py6)) (fun_app$d ?v2py23 ?v3py6))) :pattern ((fun_app$d ?v0py93 (fun_app$f ?v1py51 ?v3py6)) (fun_app$d ?v2py23 ?v3py6)) )) :named A104))
(assert (! (forall ((?v0py94 Dtree_N_fun$)(?v1py52 Dtree_dtree_fun$)(?v2py24 Dtree_N_fun$)(?v3py7 Dtree_dtree_fun$)(?v4py1 Dtree$)) (! (or (not (= (fun_app$m (comp$ ?v0py94) ?v1py52) (fun_app$m (comp$ ?v2py24) ?v3py7))) (= (fun_app$d ?v0py94 (fun_app$f ?v1py52 ?v4py1)) (fun_app$d ?v2py24 (fun_app$f ?v3py7 ?v4py1)))) :pattern ((fun_app$d ?v0py94 (fun_app$f ?v1py52 ?v4py1)) (fun_app$d ?v2py24 (fun_app$f ?v3py7 ?v4py1))) )) :named A105))
(assert (! (forall ((?v0py95 Dtree$)) (! (= (h$ ?v0py95) (fun_app$o (unfold$a (h_r$ ?v0py95)) (h_c$ ?v0py95))) :pattern ((h$ ?v0py95)) )) :named A106))
(assert (! (forall ((?v0py96 T_dtree_sum$)) (! (member$ ?v0py96 top$a) :pattern ((member$ ?v0py96 top$a)) )) :named A107))
(assert (! (forall ((?v0py97 T$)) (! (member$a ?v0py97 top$b) :pattern ((member$a ?v0py97 top$b)) )) :named A108))
(assert (! (forall ((?v0py98 N$)) (! (member$b ?v0py98 top$) :pattern ((member$b ?v0py98 top$)) )) :named A109))
(assert (! (forall ((?v0py99 Dtree$)(?v1py53 N$)) (! (or (not (fun_app$c (fun_app$r (inItr$ top$) ?v0py99) ?v1py53)) (and (fun_app$j (fun_app$k (fun_app$l subtr$ top$) (fun_app$e (pick$ ?v0py99) ?v1py53)) ?v0py99) (= (fun_app$d root$ (fun_app$e (pick$ ?v0py99) ?v1py53)) ?v1py53))) :pattern ((fun_app$c (fun_app$r (inItr$ top$) ?v0py99) ?v1py53)) :pattern ((fun_app$e (pick$ ?v0py99) ?v1py53)) )) :named A110))
(assert (! (forall ((?v0py100 Dtree$)(?v1py54 N$)) (! (or (not (fun_app$c (fun_app$r (inItr$ top$) ?v0py100) ?v1py54)) (= (fun_app$d root$ (fun_app$e (h$ ?v0py100) ?v1py54)) ?v1py54)) :pattern ((fun_app$c (fun_app$r (inItr$ top$) ?v0py100) ?v1py54)) :pattern ((fun_app$e (h$ ?v0py100) ?v1py54)) )) :named A111))
(assert (! (forall ((?v0py101 Dtree$)(?v1py55 N$)) (! (or (wf$ (fun_app$e (pick$ ?v0py101) ?v1py55)) (not (wf$ ?v0py101)) (not (fun_app$c (fun_app$r (inItr$ top$) ?v0py101) ?v1py55))) :pattern ((fun_app$e (pick$ ?v0py101) ?v1py55)) :pattern ((fun_app$c (fun_app$r (inItr$ top$) ?v0py101) ?v1py55)) )) :named A112))
(assert (! (forall ((?v0py102 Dtree$)(?v1py56 N$)) (! (or (not (fun_app$c (fun_app$r (inItr$ top$) ?v0py102) ?v1py56)) (fun_app$j (fun_app$k (fun_app$l subtr$ top$) (fun_app$e (pick$ ?v0py102) ?v1py56)) ?v0py102)) :pattern ((fun_app$c (fun_app$r (inItr$ top$) ?v0py102) ?v1py56)) :pattern ((fun_app$e (pick$ ?v0py102) ?v1py56)) )) :named A113))
(assert (! (forall ((?v0py103 T_dtree_sum$)) (! (and (or (not (top$c ?v0py103)) (member$ ?v0py103 top$a)) (or (top$c ?v0py103) (not (member$ ?v0py103 top$a)))) :pattern ((top$c ?v0py103)) )) :named A114))
(assert (! (forall ((?v0py104 T$)) (! (and (or (not (top$d ?v0py104)) (member$a ?v0py104 top$b)) (or (top$d ?v0py104) (not (member$a ?v0py104 top$b)))) :pattern ((top$d ?v0py104)) )) :named A115))
(assert (! (forall ((?v0py105 N$)) (! (and (or (not (fun_app$c top$e ?v0py105)) (member$b ?v0py105 top$)) (or (fun_app$c top$e ?v0py105) (not (member$b ?v0py105 top$)))) :pattern ((fun_app$c top$e ?v0py105)) )) :named A116))
(assert (! (= top$ (collect$a top$e)) :named A117))
(assert (! (forall ((?v0py106 Dtree$)(?v1py57 N_set$)) (! (or (not (member$b (fun_app$d root$ ?v0py106) ?v1py57)) (fun_app$c (fun_app$r (inItr$ ?v1py57) ?v0py106) (fun_app$d root$ ?v0py106))) :pattern ((member$b (fun_app$d root$ ?v0py106) ?v1py57)) :pattern ((fun_app$r (inItr$ ?v1py57) ?v0py106)) )) :named A118))
(assert (! (forall ((?v0py107 N_set$)(?v1py58 Dtree$)(?v2py25 N$)) (! (or (not (fun_app$c (fun_app$r (inItr$ ?v0py107) ?v1py58) ?v2py25)) (member$b (fun_app$d root$ ?v1py58) ?v0py107)) :pattern ((fun_app$c (fun_app$r (inItr$ ?v0py107) ?v1py58) ?v2py25)) )) :named A119))
(assert (! (forall ((?v0py108 N_set$)(?v1py59 Dtree$)(?v2py26 N$)(?v3py8 Dtree$)) (! (or (not (fun_app$c (fun_app$r (inItr$ ?v0py108) ?v1py59) ?v2py26)) (not (fun_app$j (fun_app$k (fun_app$l subtr$ ?v0py108) ?v1py59) ?v3py8)) (fun_app$c (fun_app$r (inItr$ ?v0py108) ?v3py8) ?v2py26)) :pattern ((fun_app$c (fun_app$r (inItr$ ?v0py108) ?v1py59) ?v2py26) (fun_app$c (fun_app$r (inItr$ ?v0py108) ?v3py8) ?v2py26)) )) :named A120))
(assert (! (forall ((?v0py109 N_set$)(?v1py60 Dtree$)(?v2py27 N$)) (! (or (not (fun_app$c (fun_app$r (inItr$ ?v0py109) ?v1py60) ?v2py27)) (and (fun_app$j (fun_app$k (fun_app$l subtr$ ?v0py109) (?v3!25 ?v2py27 ?v1py60 ?v0py109)) ?v1py60) (= (fun_app$d root$ (?v3!25 ?v2py27 ?v1py60 ?v0py109)) ?v2py27))) :pattern ((fun_app$c (fun_app$r (inItr$ ?v0py109) ?v1py60) ?v2py27)) :pattern ((?v3!25 ?v2py27 ?v1py60 ?v0py109)) )) :named A121))
(assert (! (forall ((?v0py110 Dtree$)(?v1py61 N$)) (! (or (not (fun_app$c (fun_app$r (inItr$ top$) ?v0py110) ?v1py61)) (= (fun_app$d root$ (fun_app$e (pick$ ?v0py110) ?v1py61)) ?v1py61)) :pattern ((fun_app$c (fun_app$r (inItr$ top$) ?v0py110) ?v1py61)) :pattern ((fun_app$e (pick$ ?v0py110) ?v1py61)) )) :named A122))
(assert (! (forall ((?v0py111 Dtree$)(?v1py62 N$)(?v2py28 Dtree$)) (! (or (not (fun_app$c (fun_app$r (inItr$ top$) ?v0py111) ?v1py62)) (not (fun_app$j (fun_app$k (fun_app$l subtr$ top$) ?v2py28) (fun_app$e (h$ ?v0py111) ?v1py62))) (and (fun_app$c (fun_app$r (inItr$ top$) ?v0py111) (?v3!26 ?v2py28 ?v0py111)) (= ?v2py28 (fun_app$e (h$ ?v0py111) (?v3!26 ?v2py28 ?v0py111))))) :pattern ((fun_app$j (fun_app$k (fun_app$l subtr$ top$) ?v2py28) (fun_app$e (h$ ?v0py111) ?v1py62))) )) :named A123))
(assert (! (forall ((?v0py112 Dtree$)(?v1py63 N$)) (! (or (wf$ (fun_app$e (h$ ?v0py112) ?v1py63)) (not (wf$ ?v0py112)) (not (fun_app$c (fun_app$r (inItr$ top$) ?v0py112) ?v1py63))) :pattern ((fun_app$e (h$ ?v0py112) ?v1py63)) :pattern ((fun_app$c (fun_app$r (inItr$ top$) ?v0py112) ?v1py63)) )) :named A124))
(assert (! (forall ((?v0py113 Dtree$)) (! (less_eq$ (fr$ top$ (rcut$ ?v0py113)) (fr$ top$ ?v0py113)) :pattern ((rcut$ ?v0py113)) )) :named A125))
(assert (! (forall ((?v0py114 N$)(?v1py64 T_dtree_sum_set$)) (! (= (fun_app$d root$ (node$ ?v0py114 ?v1py64)) ?v0py114) :pattern ((node$ ?v0py114 ?v1py64)) )) :named A126))
(assert (! (forall ((?v0py115 Dtree_dtree_fun$)(?v1py65 Dtree_dtree_fun$)(?v2py29 Dtree_dtree_fun$)(?v3py9 Dtree_dtree_fun$)(?v4py2 Dtree_N_fun$)(?v5py0 Dtree_N_fun$)) (! (or (= (fun_app$m (comp$ (fun_app$m (comp$ ?v4py2) ?v0py115)) ?v1py65) (fun_app$m (comp$ ?v5py0) ?v3py9)) (not (= (fun_app$q (comp$b ?v0py115) ?v1py65) (fun_app$q (comp$b ?v2py29) ?v3py9))) (not (= (fun_app$m (comp$ ?v4py2) ?v2py29) ?v5py0))) :pattern ((fun_app$m (comp$ (fun_app$m (comp$ ?v4py2) ?v0py115)) ?v1py65) (fun_app$m (comp$ ?v5py0) ?v3py9) (fun_app$q (comp$b ?v2py29) ?v3py9)) )) :named A127))
(assert (! (forall ((?v0py116 Dtree_N_fun$)(?v1py66 Dtree_dtree_fun$)(?v2py30 Dtree_N_fun$)(?v3py10 Dtree_dtree_fun$)(?v4py3 N_N_fun$)(?v5py1 Dtree_N_fun$)) (! (or (not (= (fun_app$m (comp$ ?v0py116) ?v1py66) (fun_app$m (comp$ ?v2py30) ?v3py10))) (not (= (fun_app$p (comp$a ?v4py3) ?v2py30) ?v5py1)) (= (fun_app$m (comp$ (fun_app$p (comp$a ?v4py3) ?v0py116)) ?v1py66) (fun_app$m (comp$ ?v5py1) ?v3py10))) :pattern ((fun_app$m (comp$ (fun_app$p (comp$a ?v4py3) ?v0py116)) ?v1py66) (fun_app$m (comp$ ?v2py30) ?v3py10) (fun_app$m (comp$ ?v5py1) ?v3py10)) )) :named A128))
(assert (! (forall ((?v0py117 N_N_fun$)(?v1py67 Dtree_N_fun$)(?v2py31 Dtree_N_fun$)(?v3py11 Dtree_dtree_fun$)(?v4py4 Dtree_dtree_fun$)(?v5py2 Dtree_dtree_fun$)) (! (or (not (= (fun_app$p (comp$a ?v0py117) ?v1py67) (fun_app$m (comp$ ?v2py31) ?v3py11))) (not (= (fun_app$q (comp$b ?v3py11) ?v4py4) ?v5py2)) (= (fun_app$p (comp$a ?v0py117) (fun_app$m (comp$ ?v1py67) ?v4py4)) (fun_app$m (comp$ ?v2py31) ?v5py2))) :pattern ((fun_app$p (comp$a ?v0py117) (fun_app$m (comp$ ?v1py67) ?v4py4)) (fun_app$m (comp$ ?v2py31) ?v3py11) (fun_app$m (comp$ ?v2py31) ?v5py2)) )) :named A129))
(assert (! (forall ((?v0py118 Dtree_N_fun$)(?v1py68 Dtree_dtree_fun$)(?v2py32 N_N_fun$)(?v3py12 Dtree_N_fun$)(?v4py5 Dtree_dtree_fun$)(?v5py3 Dtree_N_fun$)) (! (or (= (fun_app$m (comp$ ?v0py118) (fun_app$q (comp$b ?v1py68) ?v4py5)) (fun_app$p (comp$a ?v2py32) ?v5py3)) (not (= (fun_app$m (comp$ ?v0py118) ?v1py68) (fun_app$p (comp$a ?v2py32) ?v3py12))) (not (= (fun_app$m (comp$ ?v3py12) ?v4py5) ?v5py3))) :pattern ((fun_app$m (comp$ ?v0py118) (fun_app$q (comp$b ?v1py68) ?v4py5)) (fun_app$p (comp$a ?v2py32) ?v5py3) (fun_app$p (comp$a ?v2py32) ?v3py12)) )) :named A130))
(assert (! (forall ((?v0py119 Dtree_N_fun$)(?v1py69 Dtree_dtree_fun$)(?v2py33 Dtree_N_fun$)(?v3py13 Dtree_dtree_fun$)(?v4py6 Dtree_dtree_fun$)(?v5py4 Dtree_dtree_fun$)) (! (or (not (= (fun_app$m (comp$ ?v0py119) ?v1py69) (fun_app$m (comp$ ?v2py33) ?v3py13))) (not (= (fun_app$q (comp$b ?v3py13) ?v4py6) ?v5py4)) (= (fun_app$m (comp$ ?v0py119) (fun_app$q (comp$b ?v1py69) ?v4py6)) (fun_app$m (comp$ ?v2py33) ?v5py4))) :pattern ((fun_app$m (comp$ ?v0py119) (fun_app$q (comp$b ?v1py69) ?v4py6)) (fun_app$m (comp$ ?v2py33) ?v3py13) (fun_app$m (comp$ ?v2py33) ?v5py4)) )) :named A131))
(assert (! (forall ((?v0py120 Dtree_dtree_fun$)(?v1py70 Dtree_dtree_fun$)(?v2py34 Dtree_dtree_fun$)(?v3py14 Dtree_N_fun$)) (! (or (not (= (fun_app$q (comp$b ?v0py120) ?v1py70) ?v2py34)) (= (fun_app$m (comp$ (fun_app$m (comp$ ?v3py14) ?v0py120)) ?v1py70) (fun_app$m (comp$ ?v3py14) ?v2py34))) :pattern ((fun_app$m (comp$ (fun_app$m (comp$ ?v3py14) ?v0py120)) ?v1py70) (fun_app$m (comp$ ?v3py14) ?v2py34)) )) :named A132))
(assert (! (forall ((?v0py121 Dtree_N_fun$)(?v1py71 Dtree_dtree_fun$)(?v2py35 Dtree_N_fun$)(?v3py15 N_N_fun$)) (! (or (not (= (fun_app$m (comp$ ?v0py121) ?v1py71) ?v2py35)) (= (fun_app$m (comp$ (fun_app$p (comp$a ?v3py15) ?v0py121)) ?v1py71) (fun_app$p (comp$a ?v3py15) ?v2py35))) :pattern ((fun_app$m (comp$ (fun_app$p (comp$a ?v3py15) ?v0py121)) ?v1py71) (fun_app$p (comp$a ?v3py15) ?v2py35)) )) :named A133))
(assert (! (forall ((?v0py122 N_N_fun$)(?v1py72 Dtree_N_fun$)(?v2py36 Dtree_N_fun$)(?v3py16 Dtree_dtree_fun$)) (! (or (not (= (fun_app$p (comp$a ?v0py122) ?v1py72) ?v2py36)) (= (fun_app$p (comp$a ?v0py122) (fun_app$m (comp$ ?v1py72) ?v3py16)) (fun_app$m (comp$ ?v2py36) ?v3py16))) :pattern ((fun_app$p (comp$a ?v0py122) (fun_app$m (comp$ ?v1py72) ?v3py16)) (fun_app$m (comp$ ?v2py36) ?v3py16)) )) :named A134))
(assert (! (forall ((?v0py123 Dtree_N_fun$)(?v1py73 Dtree_dtree_fun$)(?v2py37 Dtree_N_fun$)(?v3py17 Dtree_dtree_fun$)) (! (or (not (= (fun_app$m (comp$ ?v0py123) ?v1py73) ?v2py37)) (= (fun_app$m (comp$ ?v0py123) (fun_app$q (comp$b ?v1py73) ?v3py17)) (fun_app$m (comp$ ?v2py37) ?v3py17))) :pattern ((fun_app$m (comp$ ?v0py123) (fun_app$q (comp$b ?v1py73) ?v3py17)) (fun_app$m (comp$ ?v2py37) ?v3py17)) )) :named A135))
(assert (! (forall ((?v0py124 T_set$)) (! (less_eq$ ?v0py124 ?v0py124) :pattern ((less_eq$ ?v0py124 ?v0py124)) )) :named A136))
(assert (! (forall ((?v0py125 N_set$)) (! (less_eq$a ?v0py125 ?v0py125) :pattern ((less_eq$a ?v0py125 ?v0py125)) )) :named A137))
(assert (! (forall ((?v0py126 T_dtree_sum_set$)(?v1py74 T_dtree_sum_set$)) (! (or (less_eq$b ?v0py126 ?v1py74) (and (member$ (?v2!27 ?v1py74 ?v0py126) ?v0py126) (not (member$ (?v2!27 ?v1py74 ?v0py126) ?v1py74)))) :pattern ((less_eq$b ?v0py126 ?v1py74)) :pattern ((?v2!27 ?v1py74 ?v0py126)) )) :named A138))
(assert (! (forall ((?v0py127 T_set$)(?v1py75 T_set$)) (! (or (less_eq$ ?v0py127 ?v1py75) (and (member$a (?v2!28 ?v1py75 ?v0py127) ?v0py127) (not (member$a (?v2!28 ?v1py75 ?v0py127) ?v1py75)))) :pattern ((less_eq$ ?v0py127 ?v1py75)) :pattern ((?v2!28 ?v1py75 ?v0py127)) )) :named A139))
(assert (! (forall ((?v0py128 N_set$)(?v1py76 N_set$)) (! (or (less_eq$a ?v0py128 ?v1py76) (and (member$b (?v2!29 ?v1py76 ?v0py128) ?v0py128) (not (member$b (?v2!29 ?v1py76 ?v0py128) ?v1py76)))) :pattern ((less_eq$a ?v0py128 ?v1py76)) :pattern ((?v2!29 ?v1py76 ?v0py128)) )) :named A140))
(assert (! (forall ((?v0py129 T_set$)(?v1py77 T_set$)) (! (or (= ?v0py129 ?v1py77) (not (less_eq$ ?v0py129 ?v1py77)) (not (less_eq$ ?v1py77 ?v0py129))) :pattern ((less_eq$ ?v1py77 ?v0py129)) :pattern ((less_eq$ ?v0py129 ?v1py77)) )) :named A141))
(assert (! (forall ((?v0py130 N_set$)(?v1py78 N_set$)) (! (or (= ?v0py130 ?v1py78) (not (less_eq$a ?v0py130 ?v1py78)) (not (less_eq$a ?v1py78 ?v0py130))) :pattern ((less_eq$a ?v1py78 ?v0py130)) :pattern ((less_eq$a ?v0py130 ?v1py78)) )) :named A142))
(assert (! (forall ((?v0py131 T_set$)) (! (and (or (not (less_eq$ ?v0py131 bot$)) (= ?v0py131 bot$)) (or (not (= ?v0py131 bot$)) (less_eq$ ?v0py131 bot$))) :pattern ((less_eq$ ?v0py131 bot$)) )) :named A143))
(assert (! (forall ((?v0py132 N_set$)) (! (and (or (not (less_eq$a ?v0py132 bot$a)) (= ?v0py132 bot$a)) (or (not (= ?v0py132 bot$a)) (less_eq$a ?v0py132 bot$a))) :pattern ((less_eq$a ?v0py132 bot$a)) )) :named A144))
(assert (! (forall ((?v0py133 T_set$)) (! (less_eq$ bot$ ?v0py133) :pattern ((less_eq$ bot$ ?v0py133)) )) :named A145))
(assert (! (forall ((?v0py134 N_set$)) (! (less_eq$a bot$a ?v0py134) :pattern ((less_eq$a bot$a ?v0py134)) )) :named A146))
(assert (! (forall ((?v0py135 T_set$)(?v1py79 T_set$)) (! (and (or (not (= ?v0py135 ?v1py79)) (and (less_eq$ ?v0py135 ?v1py79) (less_eq$ ?v1py79 ?v0py135))) (or (= ?v0py135 ?v1py79) (not (less_eq$ ?v0py135 ?v1py79)) (not (less_eq$ ?v1py79 ?v0py135)))) :pattern ((less_eq$ ?v1py79 ?v0py135)) :pattern ((less_eq$ ?v0py135 ?v1py79)) )) :named A147))
(assert (! (forall ((?v0py136 N_set$)(?v1py80 N_set$)) (! (and (or (not (= ?v0py136 ?v1py80)) (and (less_eq$a ?v0py136 ?v1py80) (less_eq$a ?v1py80 ?v0py136))) (or (= ?v0py136 ?v1py80) (not (less_eq$a ?v0py136 ?v1py80)) (not (less_eq$a ?v1py80 ?v0py136)))) :pattern ((less_eq$a ?v1py80 ?v0py136)) :pattern ((less_eq$a ?v0py136 ?v1py80)) )) :named A148))
(assert (! (forall ((?v0py137 T_dtree_sum_set$)(?v1py81 T_dtree_sum_set$)) (! (and (or (not (less_eq$b ?v0py137 ?v1py81)) (forall ((?v2py38 T_dtree_sum$)) (! (or (not (member$ ?v2py38 ?v0py137)) (member$ ?v2py38 ?v1py81)) :pattern ((member$ ?v2py38 ?v0py137)) :pattern ((member$ ?v2py38 ?v1py81)) ))) (or (less_eq$b ?v0py137 ?v1py81) (and (member$ (?v2!30 ?v1py81 ?v0py137) ?v0py137) (not (member$ (?v2!30 ?v1py81 ?v0py137) ?v1py81))))) :pattern ((less_eq$b ?v0py137 ?v1py81)) :pattern ((?v2!30 ?v1py81 ?v0py137)) )) :named A149))
(assert (! (forall ((?v0py138 T_set$)(?v1py82 T_set$)) (! (and (or (not (less_eq$ ?v0py138 ?v1py82)) (forall ((?v2py39 T$)) (! (or (not (member$a ?v2py39 ?v0py138)) (member$a ?v2py39 ?v1py82)) :pattern ((member$a ?v2py39 ?v0py138)) :pattern ((member$a ?v2py39 ?v1py82)) ))) (or (less_eq$ ?v0py138 ?v1py82) (and (member$a (?v2!31 ?v1py82 ?v0py138) ?v0py138) (not (member$a (?v2!31 ?v1py82 ?v0py138) ?v1py82))))) :pattern ((less_eq$ ?v0py138 ?v1py82)) :pattern ((?v2!31 ?v1py82 ?v0py138)) )) :named A150))
(assert (! (forall ((?v0py139 N_set$)(?v1py83 N_set$)) (! (and (or (not (less_eq$a ?v0py139 ?v1py83)) (forall ((?v2py40 N$)) (! (or (not (member$b ?v2py40 ?v0py139)) (member$b ?v2py40 ?v1py83)) :pattern ((member$b ?v2py40 ?v0py139)) :pattern ((member$b ?v2py40 ?v1py83)) ))) (or (less_eq$a ?v0py139 ?v1py83) (and (member$b (?v2!32 ?v1py83 ?v0py139) ?v0py139) (not (member$b (?v2!32 ?v1py83 ?v0py139) ?v1py83))))) :pattern ((less_eq$a ?v0py139 ?v1py83)) :pattern ((?v2!32 ?v1py83 ?v0py139)) )) :named A151))
(assert (! (forall ((?v0py140 T_bool_fun$)(?v1py84 T_bool_fun$)) (! (and (or (not (less_eq$ (collect$ ?v0py140) (collect$ ?v1py84))) (forall ((?v2py41 T$)) (! (or (not (fun_app$b ?v0py140 ?v2py41)) (fun_app$b ?v1py84 ?v2py41)) :pattern ((fun_app$b ?v0py140 ?v2py41)) :pattern ((fun_app$b ?v1py84 ?v2py41)) ))) (or (less_eq$ (collect$ ?v0py140) (collect$ ?v1py84)) (and (fun_app$b ?v0py140 (?v2!33 ?v1py84 ?v0py140)) (not (fun_app$b ?v1py84 (?v2!33 ?v1py84 ?v0py140)))))) :pattern ((less_eq$ (collect$ ?v0py140) (collect$ ?v1py84))) :pattern ((?v2!33 ?v1py84 ?v0py140)) )) :named A152))
(assert (! (forall ((?v0py141 N_bool_fun$)(?v1py85 N_bool_fun$)) (! (and (or (not (less_eq$a (collect$a ?v0py141) (collect$a ?v1py85))) (forall ((?v2py42 N$)) (! (or (not (fun_app$c ?v0py141 ?v2py42)) (fun_app$c ?v1py85 ?v2py42)) :pattern ((fun_app$c ?v0py141 ?v2py42)) :pattern ((fun_app$c ?v1py85 ?v2py42)) ))) (or (less_eq$a (collect$a ?v0py141) (collect$a ?v1py85)) (and (fun_app$c ?v0py141 (?v2!34 ?v1py85 ?v0py141)) (not (fun_app$c ?v1py85 (?v2!34 ?v1py85 ?v0py141)))))) :pattern ((less_eq$a (collect$a ?v0py141) (collect$a ?v1py85))) :pattern ((?v2!34 ?v1py85 ?v0py141)) )) :named A153))
(assert (! (forall ((?v0py142 T_bool_fun$)(?v1py86 T_bool_fun$)) (! (or (less_eq$ (collect$ ?v0py142) (collect$ ?v1py86)) (and (fun_app$b ?v0py142 (?v2!35 ?v1py86 ?v0py142)) (not (fun_app$b ?v1py86 (?v2!35 ?v1py86 ?v0py142))))) :pattern ((less_eq$ (collect$ ?v0py142) (collect$ ?v1py86))) :pattern ((?v2!35 ?v1py86 ?v0py142)) )) :named A154))
(assert (! (forall ((?v0py143 N_bool_fun$)(?v1py87 N_bool_fun$)) (! (or (less_eq$a (collect$a ?v0py143) (collect$a ?v1py87)) (and (fun_app$c ?v0py143 (?v2!36 ?v1py87 ?v0py143)) (not (fun_app$c ?v1py87 (?v2!36 ?v1py87 ?v0py143))))) :pattern ((less_eq$a (collect$a ?v0py143) (collect$a ?v1py87))) :pattern ((?v2!36 ?v1py87 ?v0py143)) )) :named A155))
(assert (! (forall ((?v0py144 T_set$)(?v1py88 T_set$)) (! (or (and (less_eq$ ?v0py144 ?v1py88) (less_eq$ ?v1py88 ?v0py144)) (not (= ?v0py144 ?v1py88))) :pattern ((less_eq$ ?v1py88 ?v0py144)) :pattern ((less_eq$ ?v0py144 ?v1py88)) )) :named A156))
(assert (! (forall ((?v0py145 N_set$)(?v1py89 N_set$)) (! (or (and (less_eq$a ?v0py145 ?v1py89) (less_eq$a ?v1py89 ?v0py145)) (not (= ?v0py145 ?v1py89))) :pattern ((less_eq$a ?v1py89 ?v0py145)) :pattern ((less_eq$a ?v0py145 ?v1py89)) )) :named A157))
(assert (! (forall ((?v0py146 T_set$)(?v1py90 T_set_T_set_fun$)(?v2py43 T_set$)(?v3py18 T_set$)) (! (or (less_eq$ ?v0py146 (fun_app$s ?v1py90 ?v3py18)) (not (less_eq$ ?v2py43 ?v3py18)) (not (= ?v0py146 (fun_app$s ?v1py90 ?v2py43))) (and (less_eq$ (?v4!38 ?v1py90) (?v5!37 ?v1py90)) (not (less_eq$ (fun_app$s ?v1py90 (?v4!38 ?v1py90)) (fun_app$s ?v1py90 (?v5!37 ?v1py90)))))) :pattern ((less_eq$ ?v0py146 (fun_app$s ?v1py90 ?v3py18)) (less_eq$ ?v2py43 ?v3py18)) )) :named A158))
(assert (! (forall ((?v0py147 N_set$)(?v1py91 T_set_N_set_fun$)(?v2py44 T_set$)(?v3py19 T_set$)) (! (or (less_eq$a ?v0py147 (fun_app$t ?v1py91 ?v3py19)) (not (less_eq$ ?v2py44 ?v3py19)) (not (= ?v0py147 (fun_app$t ?v1py91 ?v2py44))) (and (less_eq$ (?v4!40 ?v1py91) (?v5!39 ?v1py91)) (not (less_eq$a (fun_app$t ?v1py91 (?v4!40 ?v1py91)) (fun_app$t ?v1py91 (?v5!39 ?v1py91)))))) :pattern ((less_eq$a ?v0py147 (fun_app$t ?v1py91 ?v3py19)) (less_eq$ ?v2py44 ?v3py19)) )) :named A159))
(assert (! (forall ((?v0py148 T_set$)(?v1py92 N_set_T_set_fun$)(?v2py45 N_set$)(?v3py20 N_set$)) (! (or (less_eq$ ?v0py148 (fun_app$u ?v1py92 ?v3py20)) (not (less_eq$a ?v2py45 ?v3py20)) (not (= ?v0py148 (fun_app$u ?v1py92 ?v2py45))) (and (less_eq$a (?v4!42 ?v1py92) (?v5!41 ?v1py92)) (not (less_eq$ (fun_app$u ?v1py92 (?v4!42 ?v1py92)) (fun_app$u ?v1py92 (?v5!41 ?v1py92)))))) :pattern ((less_eq$ ?v0py148 (fun_app$u ?v1py92 ?v3py20)) (less_eq$a ?v2py45 ?v3py20)) )) :named A160))
(assert (! (forall ((?v0py149 N_set$)(?v1py93 N_set_N_set_fun$)(?v2py46 N_set$)(?v3py21 N_set$)) (! (or (less_eq$a ?v0py149 (fun_app$v ?v1py93 ?v3py21)) (not (less_eq$a ?v2py46 ?v3py21)) (not (= ?v0py149 (fun_app$v ?v1py93 ?v2py46))) (and (less_eq$a (?v4!44 ?v1py93) (?v5!43 ?v1py93)) (not (less_eq$a (fun_app$v ?v1py93 (?v4!44 ?v1py93)) (fun_app$v ?v1py93 (?v5!43 ?v1py93)))))) :pattern ((less_eq$a ?v0py149 (fun_app$v ?v1py93 ?v3py21)) (less_eq$a ?v2py46 ?v3py21)) )) :named A161))
(assert (! (forall ((?v0py150 T_set$)(?v1py94 T_set$)(?v2py47 T_set$)) (! (or (not (= ?v0py150 ?v1py94)) (not (less_eq$ ?v1py94 ?v2py47)) (less_eq$ ?v0py150 ?v2py47)) :pattern ((less_eq$ ?v1py94 ?v2py47) (less_eq$ ?v0py150 ?v2py47)) )) :named A162))
(assert (! (forall ((?v0py151 N_set$)(?v1py95 N_set$)(?v2py48 N_set$)) (! (or (not (= ?v0py151 ?v1py95)) (not (less_eq$a ?v1py95 ?v2py48)) (less_eq$a ?v0py151 ?v2py48)) :pattern ((less_eq$a ?v1py95 ?v2py48) (less_eq$a ?v0py151 ?v2py48)) )) :named A163))
(assert (! (forall ((?v0py152 T_set$)(?v1py96 T_set$)) (! (or (not (= ?v0py152 ?v1py96)) (less_eq$ ?v0py152 ?v1py96)) :pattern ((less_eq$ ?v0py152 ?v1py96)) )) :named A164))
(assert (! (forall ((?v0py153 N_set$)(?v1py97 N_set$)) (! (or (not (= ?v0py153 ?v1py97)) (less_eq$a ?v0py153 ?v1py97)) :pattern ((less_eq$a ?v0py153 ?v1py97)) )) :named A165))
(assert (! (forall ((?v0py154 T_set$)(?v1py98 T_set$)) (! (or (not (= ?v0py154 ?v1py98)) (less_eq$ ?v1py98 ?v0py154)) :pattern ((less_eq$ ?v1py98 ?v0py154)) )) :named A166))
(assert (! (forall ((?v0py155 N_set$)(?v1py99 N_set$)) (! (or (not (= ?v0py155 ?v1py99)) (less_eq$a ?v1py99 ?v0py155)) :pattern ((less_eq$a ?v1py99 ?v0py155)) )) :named A167))
(assert (! (forall ((?v0py156 T_dtree_sum$)(?v1py100 T_dtree_sum_set$)(?v2py49 T_dtree_sum_set$)) (! (or (member$ ?v0py156 ?v2py49) (not (member$ ?v0py156 ?v1py100)) (not (less_eq$b ?v1py100 ?v2py49))) :pattern ((member$ ?v0py156 ?v2py49) (less_eq$b ?v1py100 ?v2py49)) )) :named A168))
(assert (! (forall ((?v0py157 T$)(?v1py101 T_set$)(?v2py50 T_set$)) (! (or (member$a ?v0py157 ?v2py50) (not (member$a ?v0py157 ?v1py101)) (not (less_eq$ ?v1py101 ?v2py50))) :pattern ((less_eq$ ?v1py101 ?v2py50) (member$a ?v0py157 ?v2py50)) )) :named A169))
(assert (! (forall ((?v0py158 N$)(?v1py102 N_set$)(?v2py51 N_set$)) (! (or (member$b ?v0py158 ?v2py51) (not (member$b ?v0py158 ?v1py102)) (not (less_eq$a ?v1py102 ?v2py51))) :pattern ((member$b ?v0py158 ?v2py51) (less_eq$a ?v1py102 ?v2py51)) )) :named A170))
(assert (! (forall ((?v0py159 T_dtree_sum_set$)(?v1py103 T_dtree_sum_set$)(?v2py52 T_dtree_sum$)) (! (or (member$ ?v2py52 ?v1py103) (not (member$ ?v2py52 ?v0py159)) (not (less_eq$b ?v0py159 ?v1py103))) :pattern ((member$ ?v2py52 ?v1py103) (less_eq$b ?v0py159 ?v1py103)) )) :named A171))
(assert (! (forall ((?v0py160 T_set$)(?v1py104 T_set$)(?v2py53 T$)) (! (or (member$a ?v2py53 ?v1py104) (not (member$a ?v2py53 ?v0py160)) (not (less_eq$ ?v0py160 ?v1py104))) :pattern ((member$a ?v2py53 ?v1py104) (less_eq$ ?v0py160 ?v1py104)) )) :named A172))
(assert (! (forall ((?v0py161 N_set$)(?v1py105 N_set$)(?v2py54 N$)) (! (or (member$b ?v2py54 ?v1py105) (not (member$b ?v2py54 ?v0py161)) (not (less_eq$a ?v0py161 ?v1py105))) :pattern ((member$b ?v2py54 ?v1py105) (less_eq$a ?v0py161 ?v1py105)) )) :named A173))
(assert (! (forall ((?v0py162 T_set$)(?v1py106 T_set$)(?v2py55 T_set_T_set_fun$)(?v3py22 T_set$)) (! (or (less_eq$ (fun_app$s ?v2py55 ?v0py162) ?v3py22) (not (less_eq$ ?v0py162 ?v1py106)) (not (= (fun_app$s ?v2py55 ?v1py106) ?v3py22)) (and (less_eq$ (?v4!46 ?v2py55) (?v5!45 ?v2py55)) (not (less_eq$ (fun_app$s ?v2py55 (?v4!46 ?v2py55)) (fun_app$s ?v2py55 (?v5!45 ?v2py55)))))) :pattern ((less_eq$ (fun_app$s ?v2py55 ?v0py162) ?v3py22) (less_eq$ ?v0py162 ?v1py106)) )) :named A174))
(assert (! (forall ((?v0py163 T_set$)(?v1py107 T_set$)(?v2py56 T_set_N_set_fun$)(?v3py23 N_set$)) (! (or (less_eq$a (fun_app$t ?v2py56 ?v0py163) ?v3py23) (not (less_eq$ ?v0py163 ?v1py107)) (not (= (fun_app$t ?v2py56 ?v1py107) ?v3py23)) (and (less_eq$ (?v4!48 ?v2py56) (?v5!47 ?v2py56)) (not (less_eq$a (fun_app$t ?v2py56 (?v4!48 ?v2py56)) (fun_app$t ?v2py56 (?v5!47 ?v2py56)))))) :pattern ((less_eq$a (fun_app$t ?v2py56 ?v0py163) ?v3py23) (less_eq$ ?v0py163 ?v1py107)) )) :named A175))
(assert (! (forall ((?v0py164 N_set$)(?v1py108 N_set$)(?v2py57 N_set_T_set_fun$)(?v3py24 T_set$)) (! (or (less_eq$ (fun_app$u ?v2py57 ?v0py164) ?v3py24) (not (less_eq$a ?v0py164 ?v1py108)) (not (= (fun_app$u ?v2py57 ?v1py108) ?v3py24)) (and (less_eq$a (?v4!50 ?v2py57) (?v5!49 ?v2py57)) (not (less_eq$ (fun_app$u ?v2py57 (?v4!50 ?v2py57)) (fun_app$u ?v2py57 (?v5!49 ?v2py57)))))) :pattern ((less_eq$ (fun_app$u ?v2py57 ?v0py164) ?v3py24) (less_eq$a ?v0py164 ?v1py108)) )) :named A176))
(assert (! (forall ((?v0py165 N_set$)(?v1py109 N_set$)(?v2py58 N_set_N_set_fun$)(?v3py25 N_set$)) (! (or (less_eq$a (fun_app$v ?v2py58 ?v0py165) ?v3py25) (not (less_eq$a ?v0py165 ?v1py109)) (not (= (fun_app$v ?v2py58 ?v1py109) ?v3py25)) (and (less_eq$a (?v4!52 ?v2py58) (?v5!51 ?v2py58)) (not (less_eq$a (fun_app$v ?v2py58 (?v4!52 ?v2py58)) (fun_app$v ?v2py58 (?v5!51 ?v2py58)))))) :pattern ((less_eq$a (fun_app$v ?v2py58 ?v0py165) ?v3py25) (less_eq$a ?v0py165 ?v1py109)) )) :named A177))
(assert (! (forall ((?v0py166 T_set$)(?v1py110 T_set$)(?v2py59 T_set$)) (! (or (less_eq$ ?v0py166 ?v2py59) (not (less_eq$ ?v0py166 ?v1py110)) (not (= ?v1py110 ?v2py59))) :pattern ((less_eq$ ?v0py166 ?v2py59) (less_eq$ ?v0py166 ?v1py110)) )) :named A178))
(assert (! (forall ((?v0py167 N_set$)(?v1py111 N_set$)(?v2py60 N_set$)) (! (or (less_eq$a ?v0py167 ?v2py60) (not (= ?v1py111 ?v2py60)) (not (less_eq$a ?v0py167 ?v1py111))) :pattern ((less_eq$a ?v0py167 ?v1py111) (less_eq$a ?v0py167 ?v2py60)) )) :named A179))
(assert (! (forall ((?v0py168 T_dtree_sum_set$)(?v1py112 T_dtree_sum_set$)(?v2py61 T_dtree_sum$)) (! (or (not (less_eq$b ?v0py168 ?v1py112)) (not (member$ ?v2py61 ?v0py168)) (member$ ?v2py61 ?v1py112)) :pattern ((less_eq$b ?v0py168 ?v1py112) (member$ ?v2py61 ?v0py168)) )) :named A180))
(assert (! (forall ((?v0py169 T_set$)(?v1py113 T_set$)(?v2py62 T$)) (! (or (not (less_eq$ ?v0py169 ?v1py113)) (not (member$a ?v2py62 ?v0py169)) (member$a ?v2py62 ?v1py113)) :pattern ((less_eq$ ?v0py169 ?v1py113) (member$a ?v2py62 ?v0py169)) )) :named A181))
(assert (! (forall ((?v0py170 N_set$)(?v1py114 N_set$)(?v2py63 N$)) (! (or (not (less_eq$a ?v0py170 ?v1py114)) (not (member$b ?v2py63 ?v0py170)) (member$b ?v2py63 ?v1py114)) :pattern ((less_eq$a ?v0py170 ?v1py114) (member$b ?v2py63 ?v0py170)) )) :named A182))
(assert (! (forall ((?v0py171 T_set$)(?v1py115 T_set$)(?v2py64 T_set_T_set_fun$)(?v3py26 T_set$)) (! (or (less_eq$ (fun_app$s ?v2py64 ?v0py171) ?v3py26) (not (less_eq$ ?v0py171 ?v1py115)) (not (less_eq$ (fun_app$s ?v2py64 ?v1py115) ?v3py26)) (and (less_eq$ (?v4!54 ?v2py64) (?v5!53 ?v2py64)) (not (less_eq$ (fun_app$s ?v2py64 (?v4!54 ?v2py64)) (fun_app$s ?v2py64 (?v5!53 ?v2py64)))))) :pattern ((less_eq$ (fun_app$s ?v2py64 ?v0py171) ?v3py26) (less_eq$ (fun_app$s ?v2py64 ?v1py115) ?v3py26)) )) :named A183))
(assert (! (forall ((?v0py172 T_set$)(?v1py116 T_set$)(?v2py65 T_set_N_set_fun$)(?v3py27 N_set$)) (! (or (less_eq$a (fun_app$t ?v2py65 ?v0py172) ?v3py27) (not (less_eq$ ?v0py172 ?v1py116)) (not (less_eq$a (fun_app$t ?v2py65 ?v1py116) ?v3py27)) (and (less_eq$ (?v4!56 ?v2py65) (?v5!55 ?v2py65)) (not (less_eq$a (fun_app$t ?v2py65 (?v4!56 ?v2py65)) (fun_app$t ?v2py65 (?v5!55 ?v2py65)))))) :pattern ((less_eq$a (fun_app$t ?v2py65 ?v0py172) ?v3py27) (less_eq$a (fun_app$t ?v2py65 ?v1py116) ?v3py27)) )) :named A184))
(assert (! (forall ((?v0py173 N_set$)(?v1py117 N_set$)(?v2py66 N_set_T_set_fun$)(?v3py28 T_set$)) (! (or (less_eq$ (fun_app$u ?v2py66 ?v0py173) ?v3py28) (not (less_eq$a ?v0py173 ?v1py117)) (not (less_eq$ (fun_app$u ?v2py66 ?v1py117) ?v3py28)) (and (less_eq$a (?v4!58 ?v2py66) (?v5!57 ?v2py66)) (not (less_eq$ (fun_app$u ?v2py66 (?v4!58 ?v2py66)) (fun_app$u ?v2py66 (?v5!57 ?v2py66)))))) :pattern ((less_eq$ (fun_app$u ?v2py66 ?v0py173) ?v3py28) (less_eq$ (fun_app$u ?v2py66 ?v1py117) ?v3py28)) )) :named A185))
(assert (! (forall ((?v0py174 N_set$)(?v1py118 N_set$)(?v2py67 N_set_N_set_fun$)(?v3py29 N_set$)) (! (or (less_eq$a (fun_app$v ?v2py67 ?v0py174) ?v3py29) (not (less_eq$a ?v0py174 ?v1py118)) (not (less_eq$a (fun_app$v ?v2py67 ?v1py118) ?v3py29)) (and (less_eq$a (?v4!60 ?v2py67) (?v5!59 ?v2py67)) (not (less_eq$a (fun_app$v ?v2py67 (?v4!60 ?v2py67)) (fun_app$v ?v2py67 (?v5!59 ?v2py67)))))) :pattern ((less_eq$a (fun_app$v ?v2py67 ?v0py174) ?v3py29) (less_eq$a (fun_app$v ?v2py67 ?v1py118) ?v3py29)) )) :named A186))
(assert (! (forall ((?v0py175 T_set$)(?v1py119 T_set_T_set_fun$)(?v2py68 T_set$)(?v3py30 T_set$)) (! (or (less_eq$ ?v0py175 (fun_app$s ?v1py119 ?v3py30)) (not (less_eq$ ?v0py175 (fun_app$s ?v1py119 ?v2py68))) (not (less_eq$ ?v2py68 ?v3py30)) (and (less_eq$ (?v4!62 ?v1py119) (?v5!61 ?v1py119)) (not (less_eq$ (fun_app$s ?v1py119 (?v4!62 ?v1py119)) (fun_app$s ?v1py119 (?v5!61 ?v1py119)))))) :pattern ((less_eq$ ?v0py175 (fun_app$s ?v1py119 ?v2py68)) (less_eq$ ?v0py175 (fun_app$s ?v1py119 ?v3py30))) )) :named A187))
(assert (! (forall ((?v0py176 T_set$)(?v1py120 N_set_T_set_fun$)(?v2py69 N_set$)(?v3py31 N_set$)) (! (or (less_eq$ ?v0py176 (fun_app$u ?v1py120 ?v3py31)) (not (less_eq$ ?v0py176 (fun_app$u ?v1py120 ?v2py69))) (not (less_eq$a ?v2py69 ?v3py31)) (and (less_eq$a (?v4!64 ?v1py120) (?v5!63 ?v1py120)) (not (less_eq$ (fun_app$u ?v1py120 (?v4!64 ?v1py120)) (fun_app$u ?v1py120 (?v5!63 ?v1py120)))))) :pattern ((less_eq$ ?v0py176 (fun_app$u ?v1py120 ?v2py69)) (less_eq$ ?v0py176 (fun_app$u ?v1py120 ?v3py31))) )) :named A188))
(assert (! (forall ((?v0py177 N_set$)(?v1py121 T_set_N_set_fun$)(?v2py70 T_set$)(?v3py32 T_set$)) (! (or (less_eq$a ?v0py177 (fun_app$t ?v1py121 ?v3py32)) (not (less_eq$a ?v0py177 (fun_app$t ?v1py121 ?v2py70))) (not (less_eq$ ?v2py70 ?v3py32)) (and (less_eq$ (?v4!66 ?v1py121) (?v5!65 ?v1py121)) (not (less_eq$a (fun_app$t ?v1py121 (?v4!66 ?v1py121)) (fun_app$t ?v1py121 (?v5!65 ?v1py121)))))) :pattern ((less_eq$a ?v0py177 (fun_app$t ?v1py121 ?v3py32)) (less_eq$a ?v0py177 (fun_app$t ?v1py121 ?v2py70))) )) :named A189))
(assert (! (forall ((?v0py178 N_set$)(?v1py122 N_set_N_set_fun$)(?v2py71 N_set$)(?v3py33 N_set$)) (! (or (less_eq$a ?v0py178 (fun_app$v ?v1py122 ?v3py33)) (not (less_eq$a ?v0py178 (fun_app$v ?v1py122 ?v2py71))) (not (less_eq$a ?v2py71 ?v3py33)) (and (less_eq$a (?v4!68 ?v1py122) (?v5!67 ?v1py122)) (not (less_eq$a (fun_app$v ?v1py122 (?v4!68 ?v1py122)) (fun_app$v ?v1py122 (?v5!67 ?v1py122)))))) :pattern ((less_eq$a ?v0py178 (fun_app$v ?v1py122 ?v2py71)) (less_eq$a ?v0py178 (fun_app$v ?v1py122 ?v3py33))) )) :named A190))
(assert (! (forall ((?v0py179 T_set$)(?v1py123 T_set$)) (! (or (not (less_eq$ ?v1py123 ?v0py179)) (= ?v1py123 ?v0py179) (not (less_eq$ ?v0py179 ?v1py123))) :pattern ((less_eq$ ?v1py123 ?v0py179)) :pattern ((less_eq$ ?v0py179 ?v1py123)) )) :named A191))
(assert (! (forall ((?v0py180 N_set$)(?v1py124 N_set$)) (! (or (not (less_eq$a ?v0py180 ?v1py124)) (= ?v1py124 ?v0py180) (not (less_eq$a ?v1py124 ?v0py180))) :pattern ((less_eq$a ?v0py180 ?v1py124)) :pattern ((less_eq$a ?v1py124 ?v0py180)) )) :named A192))
(assert (! (forall ((?v0py181 T_set$)(?v1py125 T_set$)(?v2py72 T_set$)) (! (or (less_eq$ ?v2py72 ?v1py125) (not (less_eq$ ?v0py181 ?v1py125)) (not (less_eq$ ?v2py72 ?v0py181))) :pattern ((less_eq$ ?v2py72 ?v1py125) (less_eq$ ?v0py181 ?v1py125)) )) :named A193))
(assert (! (forall ((?v0py182 N_set$)(?v1py126 N_set$)(?v2py73 N_set$)) (! (or (less_eq$a ?v2py73 ?v1py126) (not (less_eq$a ?v2py73 ?v0py182)) (not (less_eq$a ?v0py182 ?v1py126))) :pattern ((less_eq$a ?v2py73 ?v1py126) (less_eq$a ?v2py73 ?v0py182)) )) :named A194))
(assert (! (forall ((?v0py183 T_set$)(?v1py127 T_set$)(?v2py74 T_set$)) (! (or (less_eq$ ?v0py183 ?v2py74) (not (less_eq$ ?v1py127 ?v2py74)) (not (less_eq$ ?v0py183 ?v1py127))) :pattern ((less_eq$ ?v1py127 ?v2py74) (less_eq$ ?v0py183 ?v1py127)) )) :named A195))
(assert (! (forall ((?v0py184 N_set$)(?v1py128 N_set$)(?v2py75 N_set$)) (! (or (less_eq$a ?v0py184 ?v2py75) (not (less_eq$a ?v1py128 ?v2py75)) (not (less_eq$a ?v0py184 ?v1py128))) :pattern ((less_eq$a ?v0py184 ?v2py75) (less_eq$a ?v1py128 ?v2py75)) )) :named A196))
(assert (! (forall ((?v0py185 T_dtree_sum_set$)(?v1py129 T_dtree_sum_set$)(?v2py76 T_dtree_sum$)) (! (or (member$ ?v2py76 ?v1py129) (not (member$ ?v2py76 ?v0py185)) (not (less_eq$b ?v0py185 ?v1py129))) :pattern ((member$ ?v2py76 ?v1py129) (member$ ?v2py76 ?v0py185)) )) :named A197))
(assert (! (forall ((?v0py186 T_set$)(?v1py130 T_set$)(?v2py77 T$)) (! (or (member$a ?v2py77 ?v1py130) (not (member$a ?v2py77 ?v0py186)) (not (less_eq$ ?v0py186 ?v1py130))) :pattern ((member$a ?v2py77 ?v1py130) (member$a ?v2py77 ?v0py186)) )) :named A198))
(assert (! (forall ((?v0py187 N_set$)(?v1py131 N_set$)(?v2py78 N$)) (! (or (member$b ?v2py78 ?v1py131) (not (member$b ?v2py78 ?v0py187)) (not (less_eq$a ?v0py187 ?v1py131))) :pattern ((member$b ?v2py78 ?v1py131) (member$b ?v2py78 ?v0py187)) )) :named A199))
(assert (! (forall ((?v0py188 T_set$)(?v1py132 T_set$)) (! (or (not (less_eq$ ?v0py188 ?v1py132)) (and (or (not (less_eq$ ?v1py132 ?v0py188)) (= ?v1py132 ?v0py188)) (or (less_eq$ ?v1py132 ?v0py188) (not (= ?v1py132 ?v0py188))))) :pattern ((less_eq$ ?v1py132 ?v0py188)) )) :named A200))
(assert (! (forall ((?v0py189 N_set$)(?v1py133 N_set$)) (! (or (not (less_eq$a ?v0py189 ?v1py133)) (and (or (not (less_eq$a ?v1py133 ?v0py189)) (= ?v1py133 ?v0py189)) (or (less_eq$a ?v1py133 ?v0py189) (not (= ?v1py133 ?v0py189))))) :pattern ((less_eq$a ?v1py133 ?v0py189)) )) :named A201))
(assert (! (forall ((?v0py190 T_set$)) (! (or (not (less_eq$ ?v0py190 bot$)) (= ?v0py190 bot$)) :pattern ((less_eq$ ?v0py190 bot$)) )) :named A202))
(assert (! (forall ((?v0py191 N_set$)) (! (or (not (less_eq$a ?v0py191 bot$a)) (= ?v0py191 bot$a)) :pattern ((less_eq$a ?v0py191 bot$a)) )) :named A203))
(assert (! (forall ((?v0py192 T_set$)) (! (and (or (not (less_eq$ top$b ?v0py192)) (= ?v0py192 top$b)) (or (less_eq$ top$b ?v0py192) (not (= ?v0py192 top$b)))) :pattern ((less_eq$ top$b ?v0py192)) )) :named A204))
(assert (! (forall ((?v0py193 N_set$)) (! (and (or (not (less_eq$a top$ ?v0py193)) (= ?v0py193 top$)) (or (less_eq$a top$ ?v0py193) (not (= ?v0py193 top$)))) :pattern ((less_eq$a top$ ?v0py193)) )) :named A205))
(assert (! (forall ((?v0py194 T_set$)) (! (or (not (less_eq$ top$b ?v0py194)) (= ?v0py194 top$b)) :pattern ((less_eq$ top$b ?v0py194)) )) :named A206))
(assert (! (forall ((?v0py195 N_set$)) (! (or (not (less_eq$a top$ ?v0py195)) (= ?v0py195 top$)) :pattern ((less_eq$a top$ ?v0py195)) )) :named A207))
(assert (! (forall ((?v0py196 T_set$)) (! (less_eq$ ?v0py196 top$b) :pattern ((less_eq$ ?v0py196 top$b)) )) :named A208))
(assert (! (forall ((?v0py197 N_set$)) (! (less_eq$a ?v0py197 top$) :pattern ((less_eq$a ?v0py197 top$)) )) :named A209))
(assert (! (forall ((?v0py198 T_dtree_sum_set$)) (! (or (less_eq$b ?v0py198 bot$b) (member$ (?v1!69 ?v0py198) ?v0py198)) :pattern ((less_eq$b ?v0py198 bot$b)) :pattern ((?v1!69 ?v0py198)) )) :named A210))
(assert (! (forall ((?v0py199 T_set$)) (! (or (less_eq$ ?v0py199 bot$) (member$a (?v1!70 ?v0py199) ?v0py199)) :pattern ((less_eq$ ?v0py199 bot$)) :pattern ((?v1!70 ?v0py199)) )) :named A211))
(assert (! (forall ((?v0py200 N_set$)) (! (or (less_eq$a ?v0py200 bot$a) (member$b (?v1!71 ?v0py200) ?v0py200)) :pattern ((less_eq$a ?v0py200 bot$a)) :pattern ((?v1!71 ?v0py200)) )) :named A212))
(assert (! (forall ((?v0py201 Dtree_N_fun$)(?v1py134 Dtree_dtree_fun$)(?v2py79 Dtree$)(?v3py34 Dtree_N_fun$)(?v4py7 Dtree_dtree_fun$)(?v5py5 Dtree$)) (! (or (not (= (fun_app$d ?v0py201 (fun_app$f ?v1py134 ?v2py79)) (fun_app$d ?v3py34 (fun_app$f ?v4py7 ?v5py5)))) (= (fun_app$d (fun_app$m (comp$ ?v0py201) ?v1py134) ?v2py79) (fun_app$d (fun_app$m (comp$ ?v3py34) ?v4py7) ?v5py5))) :pattern ((fun_app$d ?v0py201 (fun_app$f ?v1py134 ?v2py79)) (fun_app$d ?v3py34 (fun_app$f ?v4py7 ?v5py5))) )) :named A213))
(assert (! (forall ((?v0py202 Dtree_N_fun$)(?v1py135 Dtree_dtree_fun$)(?v2py80 Dtree$)(?v3py35 Dtree_N_fun$)(?v4py8 Dtree_dtree_fun$)) (! (or (not (= (fun_app$d ?v0py202 (fun_app$f ?v1py135 ?v2py80)) (fun_app$d ?v3py35 (fun_app$f ?v4py8 ?v2py80)))) (= (fun_app$d (fun_app$m (comp$ ?v0py202) ?v1py135) ?v2py80) (fun_app$d (fun_app$m (comp$ ?v3py35) ?v4py8) ?v2py80))) :pattern ((fun_app$d ?v0py202 (fun_app$f ?v1py135 ?v2py80)) (fun_app$d ?v3py35 (fun_app$f ?v4py8 ?v2py80))) )) :named A214))
(assert (! (forall ((?v0py203 Dtree_dtree_fun$)(?v1py136 Dtree_dtree_fun$)(?v2py81 Dtree$)(?v3py36 Dtree_dtree_fun$)(?v4py9 Dtree_dtree_fun$)(?v5py6 Dtree_N_fun$)) (! (or (not (= (fun_app$f ?v0py203 (fun_app$f ?v1py136 ?v2py81)) (fun_app$f ?v3py36 (fun_app$f ?v4py9 ?v2py81)))) (= (fun_app$d (fun_app$m (comp$ (fun_app$m (comp$ ?v5py6) ?v0py203)) ?v1py136) ?v2py81) (fun_app$d (fun_app$m (comp$ (fun_app$m (comp$ ?v5py6) ?v3py36)) ?v4py9) ?v2py81))) :pattern ((fun_app$d (fun_app$m (comp$ (fun_app$m (comp$ ?v5py6) ?v0py203)) ?v1py136) ?v2py81) (fun_app$d (fun_app$m (comp$ (fun_app$m (comp$ ?v5py6) ?v3py36)) ?v4py9) ?v2py81)) )) :named A215))
(assert (! (forall ((?v0py204 N_set$)(?v1py137 Dtree$)(?v2py82 Dtree$)(?v3py37 N_set$)) (! (or (fun_app$j (fun_app$k (fun_app$l subtr$ ?v3py37) ?v1py137) ?v2py82) (not (fun_app$j (fun_app$k (fun_app$l subtr$ ?v0py204) ?v1py137) ?v2py82)) (not (less_eq$a ?v0py204 ?v3py37))) :pattern ((fun_app$j (fun_app$k (fun_app$l subtr$ ?v3py37) ?v1py137) ?v2py82) (fun_app$j (fun_app$k (fun_app$l subtr$ ?v0py204) ?v1py137) ?v2py82)) )) :named A216))
(assert (! (forall ((?v0py205 N_set$)(?v1py138 Dtree$)(?v2py83 T$)(?v3py38 N_set$)) (! (or (fun_app$b (fun_app$g (fun_app$h inFr$ ?v3py38) ?v1py138) ?v2py83) (not (fun_app$b (fun_app$g (fun_app$h inFr$ ?v0py205) ?v1py138) ?v2py83)) (not (less_eq$a ?v0py205 ?v3py38))) :pattern ((fun_app$b (fun_app$g (fun_app$h inFr$ ?v3py38) ?v1py138) ?v2py83) (fun_app$b (fun_app$g (fun_app$h inFr$ ?v0py205) ?v1py138) ?v2py83)) )) :named A217))
(assert (! (forall ((?v0py206 N_set$)(?v1py139 Dtree$)(?v2py84 N$)(?v3py39 N_set$)) (! (or (fun_app$c (fun_app$r (inItr$ ?v3py39) ?v1py139) ?v2py84) (not (fun_app$c (fun_app$r (inItr$ ?v0py206) ?v1py139) ?v2py84)) (not (less_eq$a ?v0py206 ?v3py39))) :pattern ((fun_app$c (fun_app$r (inItr$ ?v3py39) ?v1py139) ?v2py84) (fun_app$c (fun_app$r (inItr$ ?v0py206) ?v1py139) ?v2py84)) )) :named A218))
(assert (! (forall ((?v0py207 N_set$)(?v1py140 Dtree$)(?v2py85 T$)(?v3py40 N_set$)) (! (or (fun_app$b (fun_app$g (fun_app$h inFr2$ ?v3py40) ?v1py140) ?v2py85) (not (fun_app$b (fun_app$g (fun_app$h inFr2$ ?v0py207) ?v1py140) ?v2py85)) (not (less_eq$a ?v0py207 ?v3py40))) :pattern ((fun_app$b (fun_app$g (fun_app$h inFr2$ ?v0py207) ?v1py140) ?v2py85) (fun_app$b (fun_app$g (fun_app$h inFr2$ ?v3py40) ?v1py140) ?v2py85)) )) :named A219))
(assert (! (forall ((?v0py208 Dtree$)) (! (= (node$ (fun_app$d root$ ?v0py208) (cont$ ?v0py208)) ?v0py208) :pattern ((fun_app$d root$ ?v0py208)) :pattern ((cont$ ?v0py208)) )) :named A220))
(assert (! (forall ((?v0py209 Dtree$)(?v1py141 Dtree$)) (! (or (not (= (fun_app$d root$ ?v0py209) (fun_app$d root$ ?v1py141))) (not (= (cont$ ?v0py209) (cont$ ?v1py141))) (= ?v0py209 ?v1py141)) :pattern ((cont$ ?v0py209) (cont$ ?v1py141)) )) :named A221))
(assert (! (forall ((?v0py210 Dtree$)(?v1py142 Dtree$)) (! (= (fun_app$w (hsubst_c$ ?v0py210) ?v1py142) (z3name!72 ?v1py142 ?v0py210)) :pattern ((fun_app$w (hsubst_c$ ?v0py210) ?v1py142)) )) :named A222_0))
(assert (! (forall ((x!1py0 Dtree$)(x!2py0 Dtree$)) (! (or (= (fun_app$d root$ x!2py0) (fun_app$d root$ x!1py0)) (= (z3name!72 x!2py0 x!1py0) (cont$ x!2py0))) :pattern ((z3name!72 x!2py0 x!1py0)) )) :named A222_1))
(assert (! (forall ((x!1py1 Dtree$)(x!2py1 Dtree$)) (! (or (not (= (fun_app$d root$ x!2py1) (fun_app$d root$ x!1py1))) (= (z3name!72 x!2py1 x!1py1) (cont$ x!1py1))) :pattern ((z3name!72 x!2py1 x!1py1)) )) :named A222_2))
(assert (! (forall ((?v0py211 Dtree$)(?v1py143 Dtree$)(?v2py86 Dtree$)) (! (or (not (wf$ ?v0py211)) (not (member$ (inr$ ?v1py143) (cont$ ?v0py211))) (not (member$ (inr$ ?v2py86) (cont$ ?v0py211))) (and (or (not (= (fun_app$d root$ ?v1py143) (fun_app$d root$ ?v2py86))) (= ?v1py143 ?v2py86)) (or (= (fun_app$d root$ ?v1py143) (fun_app$d root$ ?v2py86)) (not (= ?v1py143 ?v2py86))))) :pattern ((member$ (inr$ ?v2py86) (cont$ ?v0py211)) (member$ (inr$ ?v1py143) (cont$ ?v0py211))) )) :named A223))
(assert (! (forall ((?v0py212 Dtree$)(?v1py144 Dtree$)(?v2py87 Dtree_dtree_bool_fun_fun$)) (! (or (fun_app$j (fun_app$k ?v2py87 ?v0py212) ?v1py144) (not (fun_app$j (fun_app$k (fun_app$l subtr$ top$) ?v0py212) ?v1py144)) (not (fun_app$j (fun_app$k ?v2py87 (?v3!73 ?v2py87)) (?v3!73 ?v2py87))) (and (member$ (inr$ (?v3!76 ?v2py87)) (cont$ (?v4!75 ?v2py87))) (fun_app$j (fun_app$k (fun_app$l subtr$ top$) (?v4!75 ?v2py87)) (?v5!74 ?v2py87)) (fun_app$j (fun_app$k ?v2py87 (?v4!75 ?v2py87)) (?v5!74 ?v2py87)) (not (fun_app$j (fun_app$k ?v2py87 (?v3!76 ?v2py87)) (?v5!74 ?v2py87))))) :pattern ((fun_app$j (fun_app$k ?v2py87 ?v0py212) ?v1py144)) )) :named A224))
(assert (! (forall ((?v0py213 N_set$)(?v1py145 Dtree$)(?v2py88 T$)(?v3py41 Dtree$)) (! (or (not (member$b (fun_app$d root$ ?v3py41) ?v0py213)) (fun_app$b (fun_app$g (fun_app$h inFr2$ ?v0py213) ?v3py41) ?v2py88) (not (fun_app$b (fun_app$g (fun_app$h inFr2$ ?v0py213) ?v1py145) ?v2py88)) (not (member$ (inr$ ?v1py145) (cont$ ?v3py41)))) :pattern ((fun_app$b (fun_app$g (fun_app$h inFr2$ ?v0py213) ?v1py145) ?v2py88) (fun_app$b (fun_app$g (fun_app$h inFr2$ ?v0py213) ?v3py41) ?v2py88)) )) :named A225))
(assert (! (forall ((?v0py214 Dtree$)(?v1py146 Dtree$)) (! (or (wf$ ?v1py146) (not (member$ (inr$ ?v1py146) (cont$ ?v0py214))) (not (wf$ ?v0py214))) :pattern ((member$ (inr$ ?v1py146) (cont$ ?v0py214))) )) :named A226))
(assert (! (forall ((?v0py215 N_dtree_fun$)(?v1py147 Dtree$)(?v2py89 Dtree$)) (! (or (not (reg$ ?v0py215 ?v1py147)) (not (member$ (inr$ ?v2py89) (cont$ ?v1py147))) (reg$ ?v0py215 ?v2py89)) :pattern ((reg$ ?v0py215 ?v1py147) (reg$ ?v0py215 ?v2py89)) )) :named A227))
(assert (! (forall ((?v0py216 Dtree$)(?v1py148 N_set$)(?v2py90 Dtree$)(?v3py42 Dtree$)) (! (or (fun_app$j (fun_app$k (fun_app$l subtr$ ?v1py148) ?v0py216) ?v3py42) (not (member$b (fun_app$d root$ ?v0py216) ?v1py148)) (not (member$ (inr$ ?v0py216) (cont$ ?v2py90))) (not (fun_app$j (fun_app$k (fun_app$l subtr$ ?v1py148) ?v2py90) ?v3py42))) :pattern ((fun_app$j (fun_app$k (fun_app$l subtr$ ?v1py148) ?v0py216) ?v3py42) (fun_app$j (fun_app$k (fun_app$l subtr$ ?v1py148) ?v2py90) ?v3py42)) )) :named A228))
(assert (! (forall ((?v0py217 Dtree$)(?v1py149 N_set$)(?v2py91 Dtree$)(?v3py43 Dtree$)) (! (or (fun_app$j (fun_app$k (fun_app$l subtr$ ?v1py149) ?v2py91) ?v0py217) (not (member$b (fun_app$d root$ ?v0py217) ?v1py149)) (not (fun_app$j (fun_app$k (fun_app$l subtr$ ?v1py149) ?v2py91) ?v3py43)) (not (member$ (inr$ ?v3py43) (cont$ ?v0py217)))) :pattern ((fun_app$j (fun_app$k (fun_app$l subtr$ ?v1py149) ?v2py91) ?v3py43) (fun_app$j (fun_app$k (fun_app$l subtr$ ?v1py149) ?v2py91) ?v0py217)) )) :named A229))
(assert (! (forall ((?v0py218 N_set$)(?v1py150 Dtree$)(?v2py92 Dtree$)) (! (or (not (fun_app$j (fun_app$k (fun_app$l subtr$ ?v0py218) ?v1py150) ?v2py92)) (and (= ?v0py218 (?v4!81 ?v2py92 ?v1py150 ?v0py218)) (= ?v1py150 (?v5!80 ?v2py92 ?v1py150 ?v0py218)) (= ?v2py92 (?v3!82 ?v2py92 ?v1py150 ?v0py218)) (member$b (fun_app$d root$ (?v3!82 ?v2py92 ?v1py150 ?v0py218)) (?v4!81 ?v2py92 ?v1py150 ?v0py218)) (fun_app$j (fun_app$k (fun_app$l subtr$ (?v4!81 ?v2py92 ?v1py150 ?v0py218)) (?v5!80 ?v2py92 ?v1py150 ?v0py218)) (?v6!79 ?v2py92 ?v1py150 ?v0py218)) (member$ (inr$ (?v6!79 ?v2py92 ?v1py150 ?v0py218)) (cont$ (?v3!82 ?v2py92 ?v1py150 ?v0py218)))) (and (= ?v0py218 (?v4!77 ?v2py92 ?v1py150 ?v0py218)) (= ?v1py150 (?v3!78 ?v2py92 ?v1py150 ?v0py218)) (= ?v2py92 (?v3!78 ?v2py92 ?v1py150 ?v0py218)) (member$b (fun_app$d root$ (?v3!78 ?v2py92 ?v1py150 ?v0py218)) (?v4!77 ?v2py92 ?v1py150 ?v0py218)))) :pattern ((?v3!78 ?v2py92 ?v1py150 ?v0py218)) :pattern ((?v4!77 ?v2py92 ?v1py150 ?v0py218)) :pattern ((?v4!81 ?v2py92 ?v1py150 ?v0py218)) :pattern ((?v5!80 ?v2py92 ?v1py150 ?v0py218)) :pattern ((?v6!79 ?v2py92 ?v1py150 ?v0py218)) :pattern ((?v3!82 ?v2py92 ?v1py150 ?v0py218)) )) :named A230))
(assert (! (forall ((?v0py219 N_set$)(?v1py151 Dtree$)(?v2py93 Dtree$)(?v3py44 N_set_dtree_dtree_bool_fun_fun_fun$)) (! (or (not (fun_app$j (fun_app$k (fun_app$l ?v3py44 (?v4!84 ?v3py44)) (?v5!83 ?v3py44)) (?v5!83 ?v3py44))) (fun_app$j (fun_app$k (fun_app$l ?v3py44 ?v0py219) ?v1py151) ?v2py93) (not (fun_app$j (fun_app$k (fun_app$l subtr$ ?v0py219) ?v1py151) ?v2py93)) (and (member$b (fun_app$d root$ (?v5!87 ?v3py44)) (?v4!88 ?v3py44)) (member$ (inr$ (?v5!87 ?v3py44)) (cont$ (?v6!86 ?v3py44))) (fun_app$j (fun_app$k (fun_app$l subtr$ (?v4!88 ?v3py44)) (?v6!86 ?v3py44)) (?v7!85 ?v3py44)) (fun_app$j (fun_app$k (fun_app$l ?v3py44 (?v4!88 ?v3py44)) (?v6!86 ?v3py44)) (?v7!85 ?v3py44)) (not (fun_app$j (fun_app$k (fun_app$l ?v3py44 (?v4!88 ?v3py44)) (?v5!87 ?v3py44)) (?v7!85 ?v3py44))))) :pattern ((fun_app$j (fun_app$k (fun_app$l ?v3py44 ?v0py219) ?v1py151) ?v2py93)) )) :named A231))
(assert (! (forall ((?v0py220 N_set$)(?v1py152 Dtree$)(?v2py94 Dtree$)) (! (and (or (not (fun_app$j (fun_app$k (fun_app$l subtr$ ?v0py220) ?v1py152) ?v2py94)) (and (= ?v0py220 (?v4!89 ?v2py94 ?v1py152 ?v0py220)) (= ?v1py152 (?v3!90 ?v2py94 ?v1py152 ?v0py220)) (= ?v2py94 (?v3!90 ?v2py94 ?v1py152 ?v0py220)) (member$b (fun_app$d root$ (?v3!90 ?v2py94 ?v1py152 ?v0py220)) (?v4!89 ?v2py94 ?v1py152 ?v0py220))) (and (= ?v0py220 (?v4!93 ?v2py94 ?v1py152 ?v0py220)) (= ?v1py152 (?v5!92 ?v2py94 ?v1py152 ?v0py220)) (= ?v2py94 (?v3!94 ?v2py94 ?v1py152 ?v0py220)) (member$b (fun_app$d root$ (?v3!94 ?v2py94 ?v1py152 ?v0py220)) (?v4!93 ?v2py94 ?v1py152 ?v0py220)) (fun_app$j (fun_app$k (fun_app$l subtr$ (?v4!93 ?v2py94 ?v1py152 ?v0py220)) (?v5!92 ?v2py94 ?v1py152 ?v0py220)) (?v6!91 ?v2py94 ?v1py152 ?v0py220)) (member$ (inr$ (?v6!91 ?v2py94 ?v1py152 ?v0py220)) (cont$ (?v3!94 ?v2py94 ?v1py152 ?v0py220))))) (or (fun_app$j (fun_app$k (fun_app$l subtr$ ?v0py220) ?v1py152) ?v2py94) (and (forall ((?v3py45 Dtree$)(?v4py10 N_set$)) (! (or (not (member$b (fun_app$d root$ ?v3py45) ?v4py10)) (not (= ?v0py220 ?v4py10)) (not (= ?v1py152 ?v3py45)) (not (= ?v2py94 ?v3py45))) :pattern ((member$b (fun_app$d root$ ?v3py45) ?v4py10)) )) (forall ((?v3py46 Dtree$)(?v4py11 N_set$)(?v5py7 Dtree$)(?v6py0 Dtree$)) (! (or (not (fun_app$j (fun_app$k (fun_app$l subtr$ ?v4py11) ?v5py7) ?v6py0)) (not (= ?v0py220 ?v4py11)) (not (= ?v1py152 ?v5py7)) (not (= ?v2py94 ?v3py46)) (not (member$b (fun_app$d root$ ?v3py46) ?v4py11)) (not (member$ (inr$ ?v6py0) (cont$ ?v3py46)))) :pattern ((fun_app$j (fun_app$k (fun_app$l subtr$ ?v4py11) ?v5py7) ?v6py0) (member$ (inr$ ?v6py0) (cont$ ?v3py46))) ))))) :pattern ((?v4!89 ?v2py94 ?v1py152 ?v0py220)) :pattern ((?v3!90 ?v2py94 ?v1py152 ?v0py220)) :pattern ((?v4!93 ?v2py94 ?v1py152 ?v0py220)) :pattern ((?v5!92 ?v2py94 ?v1py152 ?v0py220)) :pattern ((?v3!94 ?v2py94 ?v1py152 ?v0py220)) :pattern ((?v6!91 ?v2py94 ?v1py152 ?v0py220)) )) :named A232))
(assert (! (forall ((?v0py221 Dtree$)(?v1py153 N_set$)(?v2py95 Dtree$)(?v3py47 T$)) (! (or (fun_app$b (fun_app$g (fun_app$h inFr$ ?v1py153) ?v0py221) ?v3py47) (not (member$ (inr$ ?v2py95) (cont$ ?v0py221))) (not (member$b (fun_app$d root$ ?v0py221) ?v1py153)) (not (fun_app$b (fun_app$g (fun_app$h inFr$ ?v1py153) ?v2py95) ?v3py47))) :pattern ((fun_app$b (fun_app$g (fun_app$h inFr$ ?v1py153) ?v0py221) ?v3py47) (fun_app$b (fun_app$g (fun_app$h inFr$ ?v1py153) ?v2py95) ?v3py47)) )) :named A233))
(assert (! (forall ((?v0py222 Dtree$)(?v1py154 N_set$)(?v2py96 Dtree$)(?v3py48 N$)) (! (or (not (member$ (inr$ ?v2py96) (cont$ ?v0py222))) (fun_app$c (fun_app$r (inItr$ ?v1py154) ?v0py222) ?v3py48) (not (fun_app$c (fun_app$r (inItr$ ?v1py154) ?v2py96) ?v3py48)) (not (member$b (fun_app$d root$ ?v0py222) ?v1py154))) :pattern ((fun_app$c (fun_app$r (inItr$ ?v1py154) ?v0py222) ?v3py48) (fun_app$c (fun_app$r (inItr$ ?v1py154) ?v2py96) ?v3py48)) )) :named A234))
(assert (! (forall ((?v0py223 N_set$)(?v1py155 Dtree$)(?v2py97 N$)) (! (or (and (= ?v0py223 (?v4!95 ?v2py97 ?v1py155 ?v0py223)) (= ?v1py155 (?v3!96 ?v2py97 ?v1py155 ?v0py223)) (= ?v2py97 (fun_app$d root$ (?v3!96 ?v2py97 ?v1py155 ?v0py223))) (member$b (fun_app$d root$ (?v3!96 ?v2py97 ?v1py155 ?v0py223)) (?v4!95 ?v2py97 ?v1py155 ?v0py223))) (not (fun_app$c (fun_app$r (inItr$ ?v0py223) ?v1py155) ?v2py97)) (and (= ?v0py223 (?v4!99 ?v2py97 ?v1py155 ?v0py223)) (= ?v1py155 (?v3!100 ?v2py97 ?v1py155 ?v0py223)) (= ?v2py97 (?v6!97 ?v2py97 ?v1py155 ?v0py223)) (member$b (fun_app$d root$ (?v3!100 ?v2py97 ?v1py155 ?v0py223)) (?v4!99 ?v2py97 ?v1py155 ?v0py223)) (member$ (inr$ (?v5!98 ?v2py97 ?v1py155 ?v0py223)) (cont$ (?v3!100 ?v2py97 ?v1py155 ?v0py223))) (fun_app$c (fun_app$r (inItr$ (?v4!99 ?v2py97 ?v1py155 ?v0py223)) (?v5!98 ?v2py97 ?v1py155 ?v0py223)) (?v6!97 ?v2py97 ?v1py155 ?v0py223)))) :pattern ((?v3!96 ?v2py97 ?v1py155 ?v0py223)) :pattern ((?v4!95 ?v2py97 ?v1py155 ?v0py223)) :pattern ((?v5!98 ?v2py97 ?v1py155 ?v0py223)) :pattern ((?v3!100 ?v2py97 ?v1py155 ?v0py223)) :pattern ((?v4!99 ?v2py97 ?v1py155 ?v0py223)) :pattern ((?v6!97 ?v2py97 ?v1py155 ?v0py223)) )) :named A235))
(assert (! (forall ((?v0py224 N_set$)(?v1py156 Dtree$)(?v2py98 N$)) (! (and (or (not (fun_app$c (fun_app$r (inItr$ ?v0py224) ?v1py156) ?v2py98)) (and (= ?v0py224 (?v4!101 ?v2py98 ?v1py156 ?v0py224)) (= ?v1py156 (?v3!102 ?v2py98 ?v1py156 ?v0py224)) (= ?v2py98 (fun_app$d root$ (?v3!102 ?v2py98 ?v1py156 ?v0py224))) (member$b (fun_app$d root$ (?v3!102 ?v2py98 ?v1py156 ?v0py224)) (?v4!101 ?v2py98 ?v1py156 ?v0py224))) (and (= ?v0py224 (?v4!105 ?v2py98 ?v1py156 ?v0py224)) (= ?v1py156 (?v3!106 ?v2py98 ?v1py156 ?v0py224)) (= ?v2py98 (?v6!103 ?v2py98 ?v1py156 ?v0py224)) (member$b (fun_app$d root$ (?v3!106 ?v2py98 ?v1py156 ?v0py224)) (?v4!105 ?v2py98 ?v1py156 ?v0py224)) (member$ (inr$ (?v5!104 ?v2py98 ?v1py156 ?v0py224)) (cont$ (?v3!106 ?v2py98 ?v1py156 ?v0py224))) (fun_app$c (fun_app$r (inItr$ (?v4!105 ?v2py98 ?v1py156 ?v0py224)) (?v5!104 ?v2py98 ?v1py156 ?v0py224)) (?v6!103 ?v2py98 ?v1py156 ?v0py224)))) (or (fun_app$c (fun_app$r (inItr$ ?v0py224) ?v1py156) ?v2py98) (and (forall ((?v3py49 Dtree$)(?v4py12 N_set$)) (! (or (not (member$b (fun_app$d root$ ?v3py49) ?v4py12)) (not (= ?v0py224 ?v4py12)) (not (= ?v1py156 ?v3py49)) (not (= ?v2py98 (fun_app$d root$ ?v3py49)))) :pattern ((member$b (fun_app$d root$ ?v3py49) ?v4py12)) )) (forall ((?v3py50 Dtree$)(?v4py13 N_set$)(?v5py8 Dtree$)(?v6py1 N$)) (! (or (not (fun_app$c (fun_app$r (inItr$ ?v4py13) ?v5py8) ?v6py1)) (not (= ?v0py224 ?v4py13)) (not (= ?v1py156 ?v3py50)) (not (= ?v2py98 ?v6py1)) (not (member$b (fun_app$d root$ ?v3py50) ?v4py13)) (not (member$ (inr$ ?v5py8) (cont$ ?v3py50)))) :pattern ((fun_app$c (fun_app$r (inItr$ ?v4py13) ?v5py8) ?v6py1) (member$ (inr$ ?v5py8) (cont$ ?v3py50))) ))))) :pattern ((?v4!101 ?v2py98 ?v1py156 ?v0py224)) :pattern ((?v3!102 ?v2py98 ?v1py156 ?v0py224)) :pattern ((?v3!106 ?v2py98 ?v1py156 ?v0py224)) :pattern ((?v4!105 ?v2py98 ?v1py156 ?v0py224)) :pattern ((?v5!104 ?v2py98 ?v1py156 ?v0py224)) :pattern ((?v6!103 ?v2py98 ?v1py156 ?v0py224)) )) :named A236))
(assert (! (forall ((?v0py225 Dtree$)(?v1py157 Dtree$)) (! (or (not (wf$ ?v0py225)) (not (member$ (inr$ ?v1py157) (cont$ ?v0py225))) (= (fun_app$e (subtrOf$ ?v0py225) (fun_app$d root$ ?v1py157)) ?v1py157)) :pattern ((member$ (inr$ ?v1py157) (cont$ ?v0py225))) :pattern ((fun_app$e (subtrOf$ ?v0py225) (fun_app$d root$ ?v1py157))) )) :named A237))
(assert (! (forall ((?v0py226 N_set$)(?v1py158 Dtree$)(?v2py99 T$)) (! (and (or (not (fun_app$b (fun_app$g (inFrr$ ?v0py226) ?v1py158) ?v2py99)) (and (member$ (inr$ (?v3!107 ?v2py99 ?v1py158 ?v0py226)) (cont$ ?v1py158)) (fun_app$b (fun_app$g (fun_app$h inFr$ ?v0py226) (?v3!107 ?v2py99 ?v1py158 ?v0py226)) ?v2py99))) (or (fun_app$b (fun_app$g (inFrr$ ?v0py226) ?v1py158) ?v2py99) (forall ((?v3py51 Dtree$)) (! (or (not (member$ (inr$ ?v3py51) (cont$ ?v1py158))) (not (fun_app$b (fun_app$g (fun_app$h inFr$ ?v0py226) ?v3py51) ?v2py99))) :pattern ((inr$ ?v3py51)) :pattern ((fun_app$g (fun_app$h inFr$ ?v0py226) ?v3py51)) )))) :pattern ((fun_app$b (fun_app$g (inFrr$ ?v0py226) ?v1py158) ?v2py99)) :pattern ((?v3!107 ?v2py99 ?v1py158 ?v0py226)) )) :named A238))
(assert (! (forall ((?v0py227 Dtree$)(?v1py159 N_set$)(?v2py100 Dtree$)(?v3py52 Dtree$)) (! (or (fun_app$j (fun_app$k (fun_app$l subtr2$ ?v1py159) ?v0py227) ?v3py52) (not (member$b (fun_app$d root$ ?v0py227) ?v1py159)) (not (member$ (inr$ ?v0py227) (cont$ ?v2py100))) (not (fun_app$j (fun_app$k (fun_app$l subtr2$ ?v1py159) ?v2py100) ?v3py52))) :pattern ((fun_app$j (fun_app$k (fun_app$l subtr2$ ?v1py159) ?v0py227) ?v3py52) (fun_app$j (fun_app$k (fun_app$l subtr2$ ?v1py159) ?v2py100) ?v3py52)) )) :named A239))
(assert (! (forall ((?v0py228 Dtree$)(?v1py160 N_set$)) (! (or (not (member$b (fun_app$d root$ ?v0py228) ?v1py160)) (fun_app$j (fun_app$k (fun_app$l subtr2$ ?v1py160) ?v0py228) ?v0py228)) :pattern ((member$b (fun_app$d root$ ?v0py228) ?v1py160)) :pattern ((fun_app$k (fun_app$l subtr2$ ?v1py160) ?v0py228)) )) :named A240))
(assert (! (forall ((?v0py229 N_set$)(?v1py161 Dtree$)(?v2py101 Dtree$)) (! (or (not (fun_app$j (fun_app$k (fun_app$l subtr2$ ?v0py229) ?v1py161) ?v2py101)) (member$b (fun_app$d root$ ?v1py161) ?v0py229)) :pattern ((fun_app$j (fun_app$k (fun_app$l subtr2$ ?v0py229) ?v1py161) ?v2py101)) )) :named A241))
(assert (! (forall ((?v0py230 N_set$)(?v1py162 Dtree$)(?v2py102 Dtree$)) (! (or (not (fun_app$j (fun_app$k (fun_app$l subtr2$ ?v0py230) ?v1py162) ?v2py102)) (member$b (fun_app$d root$ ?v2py102) ?v0py230)) :pattern ((fun_app$j (fun_app$k (fun_app$l subtr2$ ?v0py230) ?v1py162) ?v2py102)) )) :named A242))
(assert (! (forall ((?v0py231 N_set$)(?v1py163 Dtree$)(?v2py103 Dtree$)(?v3py53 Dtree$)) (! (or (fun_app$j (fun_app$k (fun_app$l subtr2$ ?v0py231) ?v1py163) ?v3py53) (not (fun_app$j (fun_app$k (fun_app$l subtr2$ ?v0py231) ?v1py163) ?v2py103)) (not (fun_app$j (fun_app$k (fun_app$l subtr2$ ?v0py231) ?v2py103) ?v3py53))) :pattern ((fun_app$j (fun_app$k (fun_app$l subtr2$ ?v0py231) ?v2py103) ?v3py53) (fun_app$j (fun_app$k (fun_app$l subtr2$ ?v0py231) ?v1py163) ?v2py103)) )) :named A243))
(assert (! (= subtr$ subtr2$) :named A244))
(assert (! (forall ((?v0py232 N_set$)(?v1py164 Dtree$)(?v2py104 Dtree$)(?v3py54 N_set$)) (! (or (not (less_eq$a ?v0py232 ?v3py54)) (fun_app$j (fun_app$k (fun_app$l subtr2$ ?v3py54) ?v1py164) ?v2py104) (not (fun_app$j (fun_app$k (fun_app$l subtr2$ ?v0py232) ?v1py164) ?v2py104))) :pattern ((fun_app$j (fun_app$k (fun_app$l subtr2$ ?v3py54) ?v1py164) ?v2py104) (fun_app$j (fun_app$k (fun_app$l subtr2$ ?v0py232) ?v1py164) ?v2py104)) )) :named A245))
(assert (! (forall ((?v0py233 N_set$)(?v1py165 Dtree$)(?v2py105 Dtree$)) (! (and (or (not (fun_app$j (fun_app$k (fun_app$l subtr2$ ?v0py233) ?v1py165) ?v2py105)) (and (= ?v0py233 (?v4!108 ?v2py105 ?v1py165 ?v0py233)) (= ?v1py165 (?v3!109 ?v2py105 ?v1py165 ?v0py233)) (= ?v2py105 (?v3!109 ?v2py105 ?v1py165 ?v0py233)) (member$b (fun_app$d root$ (?v3!109 ?v2py105 ?v1py165 ?v0py233)) (?v4!108 ?v2py105 ?v1py165 ?v0py233))) (and (= ?v0py233 (?v4!112 ?v2py105 ?v1py165 ?v0py233)) (= ?v1py165 (?v3!113 ?v2py105 ?v1py165 ?v0py233)) (= ?v2py105 (?v6!110 ?v2py105 ?v1py165 ?v0py233)) (member$b (fun_app$d root$ (?v3!113 ?v2py105 ?v1py165 ?v0py233)) (?v4!112 ?v2py105 ?v1py165 ?v0py233)) (member$ (inr$ (?v3!113 ?v2py105 ?v1py165 ?v0py233)) (cont$ (?v5!111 ?v2py105 ?v1py165 ?v0py233))) (fun_app$j (fun_app$k (fun_app$l subtr2$ (?v4!112 ?v2py105 ?v1py165 ?v0py233)) (?v5!111 ?v2py105 ?v1py165 ?v0py233)) (?v6!110 ?v2py105 ?v1py165 ?v0py233)))) (or (fun_app$j (fun_app$k (fun_app$l subtr2$ ?v0py233) ?v1py165) ?v2py105) (and (forall ((?v3py55 Dtree$)(?v4py14 N_set$)) (! (or (not (member$b (fun_app$d root$ ?v3py55) ?v4py14)) (not (= ?v0py233 ?v4py14)) (not (= ?v1py165 ?v3py55)) (not (= ?v2py105 ?v3py55))) :pattern ((member$b (fun_app$d root$ ?v3py55) ?v4py14)) )) (forall ((?v3py56 Dtree$)(?v4py15 N_set$)(?v5py9 Dtree$)(?v6py2 Dtree$)) (! (or (not (fun_app$j (fun_app$k (fun_app$l subtr2$ ?v4py15) ?v5py9) ?v6py2)) (not (= ?v0py233 ?v4py15)) (not (= ?v1py165 ?v3py56)) (not (= ?v2py105 ?v6py2)) (not (member$b (fun_app$d root$ ?v3py56) ?v4py15)) (not (member$ (inr$ ?v3py56) (cont$ ?v5py9)))) :pattern ((fun_app$j (fun_app$k (fun_app$l subtr2$ ?v4py15) ?v5py9) ?v6py2) (member$ (inr$ ?v3py56) (cont$ ?v5py9))) ))))) :pattern ((?v4!108 ?v2py105 ?v1py165 ?v0py233)) :pattern ((?v3!109 ?v2py105 ?v1py165 ?v0py233)) :pattern ((?v6!110 ?v2py105 ?v1py165 ?v0py233)) :pattern ((?v3!113 ?v2py105 ?v1py165 ?v0py233)) :pattern ((?v4!112 ?v2py105 ?v1py165 ?v0py233)) :pattern ((?v5!111 ?v2py105 ?v1py165 ?v0py233)) )) :named A246))
(assert (! (forall ((?v0py234 N_set$)(?v1py166 Dtree$)(?v2py106 Dtree$)) (! (or (and (= ?v0py234 (?v4!114 ?v2py106 ?v1py166 ?v0py234)) (= ?v1py166 (?v3!115 ?v2py106 ?v1py166 ?v0py234)) (= ?v2py106 (?v3!115 ?v2py106 ?v1py166 ?v0py234)) (member$b (fun_app$d root$ (?v3!115 ?v2py106 ?v1py166 ?v0py234)) (?v4!114 ?v2py106 ?v1py166 ?v0py234))) (and (= ?v0py234 (?v4!118 ?v2py106 ?v1py166 ?v0py234)) (= ?v1py166 (?v3!119 ?v2py106 ?v1py166 ?v0py234)) (= ?v2py106 (?v6!116 ?v2py106 ?v1py166 ?v0py234)) (member$b (fun_app$d root$ (?v3!119 ?v2py106 ?v1py166 ?v0py234)) (?v4!118 ?v2py106 ?v1py166 ?v0py234)) (member$ (inr$ (?v3!119 ?v2py106 ?v1py166 ?v0py234)) (cont$ (?v5!117 ?v2py106 ?v1py166 ?v0py234))) (fun_app$j (fun_app$k (fun_app$l subtr2$ (?v4!118 ?v2py106 ?v1py166 ?v0py234)) (?v5!117 ?v2py106 ?v1py166 ?v0py234)) (?v6!116 ?v2py106 ?v1py166 ?v0py234))) (not (fun_app$j (fun_app$k (fun_app$l subtr2$ ?v0py234) ?v1py166) ?v2py106))) :pattern ((?v3!115 ?v2py106 ?v1py166 ?v0py234)) :pattern ((?v4!114 ?v2py106 ?v1py166 ?v0py234)) :pattern ((?v6!116 ?v2py106 ?v1py166 ?v0py234)) :pattern ((?v4!118 ?v2py106 ?v1py166 ?v0py234)) :pattern ((?v3!119 ?v2py106 ?v1py166 ?v0py234)) :pattern ((?v5!117 ?v2py106 ?v1py166 ?v0py234)) )) :named A247))
(assert (! (forall ((?v0py235 Dtree$)(?v1py167 N_set$)(?v2py107 Dtree$)(?v3py57 Dtree$)) (! (or (fun_app$j (fun_app$k (fun_app$l subtr2$ ?v1py167) ?v3py57) ?v0py235) (not (fun_app$j (fun_app$k (fun_app$l subtr2$ ?v1py167) ?v3py57) ?v2py107)) (not (member$b (fun_app$d root$ ?v0py235) ?v1py167)) (not (member$ (inr$ ?v2py107) (cont$ ?v0py235)))) :pattern ((fun_app$j (fun_app$k (fun_app$l subtr2$ ?v1py167) ?v3py57) ?v2py107) (fun_app$j (fun_app$k (fun_app$l subtr2$ ?v1py167) ?v3py57) ?v0py235)) )) :named A248))
(assert (! (forall ((?v0py236 Dtree$)(?v1py168 Dtree$)(?v2py108 N_set$)(?v3py58 T$)) (! (or (not (member$ (inr$ ?v0py236) (cont$ ?v1py168))) (not (fun_app$b (fun_app$g (fun_app$h inFr2$ ?v2py108) ?v0py236) ?v3py58)) (fun_app$b (fun_app$g (fun_app$h inFr2$ (fun_app$v (insert$ (fun_app$d root$ ?v1py168)) ?v2py108)) ?v1py168) ?v3py58)) :pattern ((fun_app$b (fun_app$g (fun_app$h inFr2$ ?v2py108) ?v0py236) ?v3py58) (fun_app$b (fun_app$g (fun_app$h inFr2$ (fun_app$v (insert$ (fun_app$d root$ ?v1py168)) ?v2py108)) ?v1py168) ?v3py58)) )) :named A249))
(assert (! (forall ((?v0py237 N_set$)(?v1py169 Dtree$)(?v2py109 T$)(?v3py59 Dtree$)) (! (or (fun_app$b (fun_app$g (fun_app$h inFr$ (fun_app$v (insert$ (fun_app$d root$ ?v3py59)) ?v0py237)) ?v3py59) ?v2py109) (not (fun_app$b (fun_app$g (fun_app$h inFr$ ?v0py237) ?v1py169) ?v2py109)) (not (member$ (inr$ ?v1py169) (cont$ ?v3py59)))) :pattern ((fun_app$b (fun_app$g (fun_app$h inFr$ ?v0py237) ?v1py169) ?v2py109) (fun_app$b (fun_app$g (fun_app$h inFr$ (fun_app$v (insert$ (fun_app$d root$ ?v3py59)) ?v0py237)) ?v3py59) ?v2py109)) )) :named A250))
(assert (! (forall ((?v0py238 N$)(?v1py170 N_set$)(?v2py110 N$)) (! (or (and (not (member$b ?v0py238 ?v1py170)) (not (= ?v0py238 ?v2py110))) (member$b ?v0py238 (fun_app$v (insert$ ?v2py110) ?v1py170))) :pattern ((member$b ?v0py238 (fun_app$v (insert$ ?v2py110) ?v1py170))) )) :named A251))
(assert (! (forall ((?v0py239 T_dtree_sum$)(?v1py171 T_dtree_sum_set$)(?v2py111 T_dtree_sum$)) (! (or (and (not (member$ ?v0py239 ?v1py171)) (not (= ?v0py239 ?v2py111))) (member$ ?v0py239 (insert$a ?v2py111 ?v1py171))) :pattern ((member$ ?v0py239 (insert$a ?v2py111 ?v1py171))) )) :named A252))
(assert (! (forall ((?v0py240 T$)(?v1py172 T_set$)(?v2py112 T$)) (! (or (and (not (member$a ?v0py240 ?v1py172)) (not (= ?v0py240 ?v2py112))) (member$a ?v0py240 (fun_app$s (insert$b ?v2py112) ?v1py172))) :pattern ((member$a ?v0py240 (fun_app$s (insert$b ?v2py112) ?v1py172))) )) :named A253))
(assert (! (forall ((?v0py241 N$)(?v1py173 N$)(?v2py113 N_set$)) (! (and (or (member$b ?v0py241 ?v2py113) (= ?v0py241 ?v1py173) (not (member$b ?v0py241 (fun_app$v (insert$ ?v1py173) ?v2py113)))) (or (and (not (= ?v0py241 ?v1py173)) (not (member$b ?v0py241 ?v2py113))) (member$b ?v0py241 (fun_app$v (insert$ ?v1py173) ?v2py113)))) :pattern ((member$b ?v0py241 (fun_app$v (insert$ ?v1py173) ?v2py113))) )) :named A254))
(assert (! (forall ((?v0py242 T_dtree_sum$)(?v1py174 T_dtree_sum$)(?v2py114 T_dtree_sum_set$)) (! (and (or (member$ ?v0py242 ?v2py114) (= ?v0py242 ?v1py174) (not (member$ ?v0py242 (insert$a ?v1py174 ?v2py114)))) (or (member$ ?v0py242 (insert$a ?v1py174 ?v2py114)) (and (not (= ?v0py242 ?v1py174)) (not (member$ ?v0py242 ?v2py114))))) :pattern ((member$ ?v0py242 (insert$a ?v1py174 ?v2py114))) )) :named A255))
(assert (! (forall ((?v0py243 T$)(?v1py175 T$)(?v2py115 T_set$)) (! (and (or (member$a ?v0py243 ?v2py115) (= ?v0py243 ?v1py175) (not (member$a ?v0py243 (fun_app$s (insert$b ?v1py175) ?v2py115)))) (or (member$a ?v0py243 (fun_app$s (insert$b ?v1py175) ?v2py115)) (and (not (= ?v0py243 ?v1py175)) (not (member$a ?v0py243 ?v2py115))))) :pattern ((member$a ?v0py243 (fun_app$s (insert$b ?v1py175) ?v2py115))) )) :named A256))
(assert (! (forall ((?v0py244 N$)(?v1py176 N_set$)) (! (= (fun_app$v (insert$ ?v0py244) (fun_app$v (insert$ ?v0py244) ?v1py176)) (fun_app$v (insert$ ?v0py244) ?v1py176)) :pattern ((fun_app$v (insert$ ?v0py244) (fun_app$v (insert$ ?v0py244) ?v1py176))) )) :named A257))
(assert (! (forall ((?v0py245 T_dtree_sum$)) (! (member$ ?v0py245 (insert$a ?v0py245 bot$b)) :pattern ((insert$a ?v0py245 bot$b)) )) :named A258))
(assert (! (forall ((?v0py246 T$)) (! (member$a ?v0py246 (fun_app$s (insert$b ?v0py246) bot$)) :pattern ((insert$b ?v0py246)) )) :named A259))
(assert (! (forall ((?v0py247 N$)) (! (member$b ?v0py247 (fun_app$v (insert$ ?v0py247) bot$a)) :pattern ((insert$ ?v0py247)) )) :named A260))
(assert (! (forall ((?v0py248 T_dtree_sum$)(?v1py177 T_dtree_sum_set$)(?v2py116 T_dtree_sum_set$)) (! (and (or (not (less_eq$b (insert$a ?v0py248 ?v1py177) ?v2py116)) (and (member$ ?v0py248 ?v2py116) (less_eq$b ?v1py177 ?v2py116))) (or (less_eq$b (insert$a ?v0py248 ?v1py177) ?v2py116) (not (member$ ?v0py248 ?v2py116)) (not (less_eq$b ?v1py177 ?v2py116)))) :pattern ((less_eq$b (insert$a ?v0py248 ?v1py177) ?v2py116)) )) :named A261))
(assert (! (forall ((?v0py249 T$)(?v1py178 T_set$)(?v2py117 T_set$)) (! (and (or (not (less_eq$ (fun_app$s (insert$b ?v0py249) ?v1py178) ?v2py117)) (and (member$a ?v0py249 ?v2py117) (less_eq$ ?v1py178 ?v2py117))) (or (less_eq$ (fun_app$s (insert$b ?v0py249) ?v1py178) ?v2py117) (not (member$a ?v0py249 ?v2py117)) (not (less_eq$ ?v1py178 ?v2py117)))) :pattern ((less_eq$ (fun_app$s (insert$b ?v0py249) ?v1py178) ?v2py117)) )) :named A262))
(assert (! (forall ((?v0py250 N$)(?v1py179 N_set$)(?v2py118 N_set$)) (! (and (or (not (less_eq$a (fun_app$v (insert$ ?v0py250) ?v1py179) ?v2py118)) (and (member$b ?v0py250 ?v2py118) (less_eq$a ?v1py179 ?v2py118))) (or (less_eq$a (fun_app$v (insert$ ?v0py250) ?v1py179) ?v2py118) (not (member$b ?v0py250 ?v2py118)) (not (less_eq$a ?v1py179 ?v2py118)))) :pattern ((less_eq$a (fun_app$v (insert$ ?v0py250) ?v1py179) ?v2py118)) )) :named A263))
(assert (! (forall ((?v0py251 T$)(?v1py180 T_set$)(?v2py119 T$)) (! (and (or (not (= (fun_app$s (insert$b ?v0py251) ?v1py180) (fun_app$s (insert$b ?v2py119) bot$))) (and (= ?v0py251 ?v2py119) (less_eq$ ?v1py180 (fun_app$s (insert$b ?v2py119) bot$)))) (or (not (less_eq$ ?v1py180 (fun_app$s (insert$b ?v2py119) bot$))) (= (fun_app$s (insert$b ?v0py251) ?v1py180) (fun_app$s (insert$b ?v2py119) bot$)) (not (= ?v0py251 ?v2py119)))) :pattern ((fun_app$s (insert$b ?v0py251) ?v1py180) (less_eq$ ?v1py180 (fun_app$s (insert$b ?v2py119) bot$))) )) :named A264))
(assert (! (forall ((?v0py252 N$)(?v1py181 N_set$)(?v2py120 N$)) (! (and (or (not (= (fun_app$v (insert$ ?v0py252) ?v1py181) (fun_app$v (insert$ ?v2py120) bot$a))) (and (= ?v0py252 ?v2py120) (less_eq$a ?v1py181 (fun_app$v (insert$ ?v2py120) bot$a)))) (or (not (less_eq$a ?v1py181 (fun_app$v (insert$ ?v2py120) bot$a))) (= (fun_app$v (insert$ ?v0py252) ?v1py181) (fun_app$v (insert$ ?v2py120) bot$a)) (not (= ?v0py252 ?v2py120)))) :pattern ((fun_app$v (insert$ ?v0py252) ?v1py181) (less_eq$a ?v1py181 (fun_app$v (insert$ ?v2py120) bot$a))) )) :named A265))
(assert (! (forall ((?v0py253 T$)(?v1py182 T$)(?v2py121 T_set$)) (! (and (or (not (= (fun_app$s (insert$b ?v0py253) bot$) (fun_app$s (insert$b ?v1py182) ?v2py121))) (and (= ?v1py182 ?v0py253) (less_eq$ ?v2py121 (fun_app$s (insert$b ?v0py253) bot$)))) (or (not (= ?v1py182 ?v0py253)) (= (fun_app$s (insert$b ?v0py253) bot$) (fun_app$s (insert$b ?v1py182) ?v2py121)) (not (less_eq$ ?v2py121 (fun_app$s (insert$b ?v0py253) bot$))))) :pattern ((fun_app$s (insert$b ?v1py182) ?v2py121) (less_eq$ ?v2py121 (fun_app$s (insert$b ?v0py253) bot$))) )) :named A266))
(assert (! (forall ((?v0py254 N$)(?v1py183 N$)(?v2py122 N_set$)) (! (and (or (not (= (fun_app$v (insert$ ?v0py254) bot$a) (fun_app$v (insert$ ?v1py183) ?v2py122))) (and (= ?v1py183 ?v0py254) (less_eq$a ?v2py122 (fun_app$v (insert$ ?v0py254) bot$a)))) (or (not (= ?v1py183 ?v0py254)) (= (fun_app$v (insert$ ?v0py254) bot$a) (fun_app$v (insert$ ?v1py183) ?v2py122)) (not (less_eq$a ?v2py122 (fun_app$v (insert$ ?v0py254) bot$a))))) :pattern ((fun_app$v (insert$ ?v1py183) ?v2py122) (less_eq$a ?v2py122 (fun_app$v (insert$ ?v0py254) bot$a))) )) :named A267))
(assert (! (forall ((?v0py255 T_set$)(?v1py184 T$)) (! (or (= ?v0py255 bot$) (= ?v0py255 (fun_app$s (insert$b ?v1py184) bot$)) (not (less_eq$ ?v0py255 (fun_app$s (insert$b ?v1py184) bot$)))) :pattern ((less_eq$ ?v0py255 (fun_app$s (insert$b ?v1py184) bot$))) )) :named A268))
(assert (! (forall ((?v0py256 N_set$)(?v1py185 N$)) (! (or (= ?v0py256 bot$a) (not (less_eq$a ?v0py256 (fun_app$v (insert$ ?v1py185) bot$a))) (= ?v0py256 (fun_app$v (insert$ ?v1py185) bot$a))) :pattern ((less_eq$a ?v0py256 (fun_app$v (insert$ ?v1py185) bot$a))) )) :named A269))
(assert (! (forall ((?v0py257 T_set$)(?v1py186 T$)) (! (less_eq$ ?v0py257 (fun_app$s (insert$b ?v1py186) ?v0py257)) :pattern ((fun_app$s (insert$b ?v1py186) ?v0py257)) )) :named A270))
(assert (! (forall ((?v0py258 N_set$)(?v1py187 N$)) (! (less_eq$a ?v0py258 (fun_app$v (insert$ ?v1py187) ?v0py258)) :pattern ((fun_app$v (insert$ ?v1py187) ?v0py258)) )) :named A271))
(assert (! (forall ((?v0py259 T_dtree_sum$)(?v1py188 T_dtree_sum_set$)(?v2py123 T_dtree_sum_set$)) (! (or (member$ ?v0py259 ?v1py188) (and (or (not (less_eq$b ?v1py188 (insert$a ?v0py259 ?v2py123))) (less_eq$b ?v1py188 ?v2py123)) (or (less_eq$b ?v1py188 (insert$a ?v0py259 ?v2py123)) (not (less_eq$b ?v1py188 ?v2py123))))) :pattern ((less_eq$b ?v1py188 (insert$a ?v0py259 ?v2py123))) )) :named A272))
(assert (! (forall ((?v0py260 T$)(?v1py189 T_set$)(?v2py124 T_set$)) (! (or (member$a ?v0py260 ?v1py189) (and (or (not (less_eq$ ?v1py189 (fun_app$s (insert$b ?v0py260) ?v2py124))) (less_eq$ ?v1py189 ?v2py124)) (or (less_eq$ ?v1py189 (fun_app$s (insert$b ?v0py260) ?v2py124)) (not (less_eq$ ?v1py189 ?v2py124))))) :pattern ((less_eq$ ?v1py189 (fun_app$s (insert$b ?v0py260) ?v2py124))) )) :named A273))
(assert (! (forall ((?v0py261 N$)(?v1py190 N_set$)(?v2py125 N_set$)) (! (or (member$b ?v0py261 ?v1py190) (and (or (not (less_eq$a ?v1py190 (fun_app$v (insert$ ?v0py261) ?v2py125))) (less_eq$a ?v1py190 ?v2py125)) (or (less_eq$a ?v1py190 (fun_app$v (insert$ ?v0py261) ?v2py125)) (not (less_eq$a ?v1py190 ?v2py125))))) :pattern ((less_eq$a ?v1py190 (fun_app$v (insert$ ?v0py261) ?v2py125))) )) :named A274))
(assert (! (forall ((?v0py262 T_set$)(?v1py191 T_set$)(?v2py126 T$)) (! (or (not (less_eq$ ?v0py262 ?v1py191)) (less_eq$ ?v0py262 (fun_app$s (insert$b ?v2py126) ?v1py191))) :pattern ((less_eq$ ?v0py262 (fun_app$s (insert$b ?v2py126) ?v1py191))) )) :named A275))
(assert (! (forall ((?v0py263 N_set$)(?v1py192 N_set$)(?v2py127 N$)) (! (or (not (less_eq$a ?v0py263 ?v1py192)) (less_eq$a ?v0py263 (fun_app$v (insert$ ?v2py127) ?v1py192))) :pattern ((less_eq$a ?v0py263 (fun_app$v (insert$ ?v2py127) ?v1py192))) )) :named A276))
(assert (! (forall ((?v0py264 T_set$)(?v1py193 T_set$)(?v2py128 T$)) (! (or (not (less_eq$ ?v0py264 ?v1py193)) (less_eq$ (fun_app$s (insert$b ?v2py128) ?v0py264) (fun_app$s (insert$b ?v2py128) ?v1py193))) :pattern ((less_eq$ (fun_app$s (insert$b ?v2py128) ?v0py264) (fun_app$s (insert$b ?v2py128) ?v1py193))) )) :named A277))
(assert (! (forall ((?v0py265 N_set$)(?v1py194 N_set$)(?v2py129 N$)) (! (or (not (less_eq$a ?v0py265 ?v1py194)) (less_eq$a (fun_app$v (insert$ ?v2py129) ?v0py265) (fun_app$v (insert$ ?v2py129) ?v1py194))) :pattern ((less_eq$a (fun_app$v (insert$ ?v2py129) ?v0py265) (fun_app$v (insert$ ?v2py129) ?v1py194))) )) :named A278))
(assert (! (forall ((?v0py266 N$)(?v1py195 N_set$)) (! (member$b ?v0py266 (fun_app$v (insert$ ?v0py266) ?v1py195)) :pattern ((fun_app$v (insert$ ?v0py266) ?v1py195)) )) :named A279))
(assert (! (forall ((?v0py267 T_dtree_sum$)(?v1py196 T_dtree_sum_set$)) (! (member$ ?v0py267 (insert$a ?v0py267 ?v1py196)) :pattern ((insert$a ?v0py267 ?v1py196)) )) :named A280))
(assert (! (forall ((?v0py268 T$)(?v1py197 T_set$)) (! (member$a ?v0py268 (fun_app$s (insert$b ?v0py268) ?v1py197)) :pattern ((fun_app$s (insert$b ?v0py268) ?v1py197)) )) :named A281))
(assert (! (forall ((?v0py269 N$)(?v1py198 N_set$)(?v2py130 N_set$)) (! (or (member$b ?v0py269 ?v1py198) (member$b ?v0py269 ?v2py130) (and (or (not (= (fun_app$v (insert$ ?v0py269) ?v1py198) (fun_app$v (insert$ ?v0py269) ?v2py130))) (= ?v1py198 ?v2py130)) (or (= (fun_app$v (insert$ ?v0py269) ?v1py198) (fun_app$v (insert$ ?v0py269) ?v2py130)) (not (= ?v1py198 ?v2py130))))) :pattern ((member$b ?v0py269 ?v1py198) (member$b ?v0py269 ?v2py130)) )) :named A282))
(assert (! (forall ((?v0py270 T_dtree_sum$)(?v1py199 T_dtree_sum_set$)(?v2py131 T_dtree_sum_set$)) (! (or (member$ ?v0py270 ?v2py131) (member$ ?v0py270 ?v1py199) (and (or (not (= (insert$a ?v0py270 ?v1py199) (insert$a ?v0py270 ?v2py131))) (= ?v1py199 ?v2py131)) (or (= (insert$a ?v0py270 ?v1py199) (insert$a ?v0py270 ?v2py131)) (not (= ?v1py199 ?v2py131))))) :pattern ((member$ ?v0py270 ?v1py199) (member$ ?v0py270 ?v2py131)) )) :named A283))
(assert (! (forall ((?v0py271 T$)(?v1py200 T_set$)(?v2py132 T_set$)) (! (or (member$a ?v0py271 ?v1py200) (member$a ?v0py271 ?v2py132) (and (or (not (= (fun_app$s (insert$b ?v0py271) ?v1py200) (fun_app$s (insert$b ?v0py271) ?v2py132))) (= ?v1py200 ?v2py132)) (or (= (fun_app$s (insert$b ?v0py271) ?v1py200) (fun_app$s (insert$b ?v0py271) ?v2py132)) (not (= ?v1py200 ?v2py132))))) :pattern ((member$a ?v0py271 ?v2py132) (member$a ?v0py271 ?v1py200)) )) :named A284))
(assert (! (forall ((?v0py272 N$)(?v1py201 N_set$)(?v2py133 N$)(?v3py60 N_set$)) (! (or (member$b ?v2py133 ?v3py60) (member$b ?v0py272 ?v1py201) (and (or (not (= (fun_app$v (insert$ ?v0py272) ?v1py201) (fun_app$v (insert$ ?v2py133) ?v3py60))) (and (or (not (= ?v0py272 ?v2py133)) (= ?v1py201 ?v3py60)) (or (= ?v0py272 ?v2py133) (and (= ?v1py201 (fun_app$v (insert$ ?v2py133) (?v4!120 ?v3py60 ?v2py133 ?v1py201 ?v0py272))) (not (member$b ?v2py133 (?v4!120 ?v3py60 ?v2py133 ?v1py201 ?v0py272))) (= ?v3py60 (fun_app$v (insert$ ?v0py272) (?v4!120 ?v3py60 ?v2py133 ?v1py201 ?v0py272))) (not (member$b ?v0py272 (?v4!120 ?v3py60 ?v2py133 ?v1py201 ?v0py272))))))) (or (= (fun_app$v (insert$ ?v0py272) ?v1py201) (fun_app$v (insert$ ?v2py133) ?v3py60)) (and (or (not (= ?v0py272 ?v2py133)) (not (= ?v1py201 ?v3py60))) (or (= ?v0py272 ?v2py133) (forall ((?v4py16 N_set$)) (! (or (member$b ?v2py133 ?v4py16) (member$b ?v0py272 ?v4py16) (not (= ?v1py201 (fun_app$v (insert$ ?v2py133) ?v4py16))) (not (= ?v3py60 (fun_app$v (insert$ ?v0py272) ?v4py16)))) :pattern ((member$b ?v2py133 ?v4py16)) :pattern ((member$b ?v0py272 ?v4py16)) :pattern ((fun_app$v (insert$ ?v0py272) ?v4py16)) :pattern ((fun_app$v (insert$ ?v2py133) ?v4py16)) ))))))) :pattern ((?v4!120 ?v3py60 ?v2py133 ?v1py201 ?v0py272)) )) :named A285))
(assert (! (forall ((?v0py273 T_dtree_sum$)(?v1py202 T_dtree_sum_set$)(?v2py134 T_dtree_sum$)(?v3py61 T_dtree_sum_set$)) (! (or (member$ ?v0py273 ?v1py202) (member$ ?v2py134 ?v3py61) (and (or (not (= (insert$a ?v0py273 ?v1py202) (insert$a ?v2py134 ?v3py61))) (and (or (not (= ?v0py273 ?v2py134)) (= ?v1py202 ?v3py61)) (or (= ?v0py273 ?v2py134) (and (= ?v1py202 (insert$a ?v2py134 (?v4!121 ?v3py61 ?v2py134 ?v1py202 ?v0py273))) (not (member$ ?v2py134 (?v4!121 ?v3py61 ?v2py134 ?v1py202 ?v0py273))) (= ?v3py61 (insert$a ?v0py273 (?v4!121 ?v3py61 ?v2py134 ?v1py202 ?v0py273))) (not (member$ ?v0py273 (?v4!121 ?v3py61 ?v2py134 ?v1py202 ?v0py273))))))) (or (= (insert$a ?v0py273 ?v1py202) (insert$a ?v2py134 ?v3py61)) (and (or (not (= ?v0py273 ?v2py134)) (not (= ?v1py202 ?v3py61))) (or (= ?v0py273 ?v2py134) (forall ((?v4py17 T_dtree_sum_set$)) (! (or (member$ ?v2py134 ?v4py17) (member$ ?v0py273 ?v4py17) (not (= ?v1py202 (insert$a ?v2py134 ?v4py17))) (not (= ?v3py61 (insert$a ?v0py273 ?v4py17)))) :pattern ((insert$a ?v0py273 ?v4py17)) :pattern ((insert$a ?v2py134 ?v4py17)) :pattern ((member$ ?v0py273 ?v4py17)) :pattern ((member$ ?v2py134 ?v4py17)) ))))))) :pattern ((?v4!121 ?v3py61 ?v2py134 ?v1py202 ?v0py273)) )) :named A286))
(assert (! (forall ((?v0py274 T$)(?v1py203 T_set$)(?v2py135 T$)(?v3py62 T_set$)) (! (or (member$a ?v0py274 ?v1py203) (member$a ?v2py135 ?v3py62) (and (or (not (= (fun_app$s (insert$b ?v0py274) ?v1py203) (fun_app$s (insert$b ?v2py135) ?v3py62))) (and (or (not (= ?v0py274 ?v2py135)) (= ?v1py203 ?v3py62)) (or (= ?v0py274 ?v2py135) (and (= ?v1py203 (fun_app$s (insert$b ?v2py135) (?v4!122 ?v3py62 ?v2py135 ?v1py203 ?v0py274))) (not (member$a ?v2py135 (?v4!122 ?v3py62 ?v2py135 ?v1py203 ?v0py274))) (= ?v3py62 (fun_app$s (insert$b ?v0py274) (?v4!122 ?v3py62 ?v2py135 ?v1py203 ?v0py274))) (not (member$a ?v0py274 (?v4!122 ?v3py62 ?v2py135 ?v1py203 ?v0py274))))))) (or (= (fun_app$s (insert$b ?v0py274) ?v1py203) (fun_app$s (insert$b ?v2py135) ?v3py62)) (and (or (not (= ?v0py274 ?v2py135)) (not (= ?v1py203 ?v3py62))) (or (= ?v0py274 ?v2py135) (forall ((?v4py18 T_set$)) (! (or (member$a ?v2py135 ?v4py18) (member$a ?v0py274 ?v4py18) (not (= ?v1py203 (fun_app$s (insert$b ?v2py135) ?v4py18))) (not (= ?v3py62 (fun_app$s (insert$b ?v0py274) ?v4py18)))) :pattern ((member$a ?v2py135 ?v4py18)) :pattern ((member$a ?v0py274 ?v4py18)) :pattern ((fun_app$s (insert$b ?v0py274) ?v4py18)) :pattern ((fun_app$s (insert$b ?v2py135) ?v4py18)) ))))))) :pattern ((?v4!122 ?v3py62 ?v2py135 ?v1py203 ?v0py274)) )) :named A287))
(assert (! (forall ((?v0py275 N$)(?v1py204 N_set$)) (! (or (not (member$b ?v0py275 ?v1py204)) (and (= ?v1py204 (fun_app$v (insert$ ?v0py275) (?v2!123 ?v1py204 ?v0py275))) (not (member$b ?v0py275 (?v2!123 ?v1py204 ?v0py275))))) :pattern ((?v2!123 ?v1py204 ?v0py275)) )) :named A288))
(assert (! (forall ((?v0py276 T_dtree_sum$)(?v1py205 T_dtree_sum_set$)) (! (or (not (member$ ?v0py276 ?v1py205)) (and (= ?v1py205 (insert$a ?v0py276 (?v2!124 ?v1py205 ?v0py276))) (not (member$ ?v0py276 (?v2!124 ?v1py205 ?v0py276))))) :pattern ((?v2!124 ?v1py205 ?v0py276)) )) :named A289))
(assert (! (forall ((?v0py277 T$)(?v1py206 T_set$)) (! (or (not (member$a ?v0py277 ?v1py206)) (and (= ?v1py206 (fun_app$s (insert$b ?v0py277) (?v2!125 ?v1py206 ?v0py277))) (not (member$a ?v0py277 (?v2!125 ?v1py206 ?v0py277))))) :pattern ((?v2!125 ?v1py206 ?v0py277)) )) :named A290))
(assert (! (forall ((?v0py278 N$)(?v1py207 N_set$)(?v2py136 N$)) (! (or (not (member$b ?v0py278 ?v1py207)) (member$b ?v0py278 (fun_app$v (insert$ ?v2py136) ?v1py207))) :pattern ((member$b ?v0py278 (fun_app$v (insert$ ?v2py136) ?v1py207))) )) :named A291))
(assert (! (forall ((?v0py279 T_dtree_sum$)(?v1py208 T_dtree_sum_set$)(?v2py137 T_dtree_sum$)) (! (or (not (member$ ?v0py279 ?v1py208)) (member$ ?v0py279 (insert$a ?v2py137 ?v1py208))) :pattern ((member$ ?v0py279 (insert$a ?v2py137 ?v1py208))) )) :named A292))
(assert (! (forall ((?v0py280 T$)(?v1py209 T_set$)(?v2py138 T$)) (! (or (not (member$a ?v0py280 ?v1py209)) (member$a ?v0py280 (fun_app$s (insert$b ?v2py138) ?v1py209))) :pattern ((member$a ?v0py280 (fun_app$s (insert$b ?v2py138) ?v1py209))) )) :named A293))
(assert (! (forall ((?v0py281 N$)(?v1py210 N_set$)) (! (or (not (member$b ?v0py281 ?v1py210)) (= (fun_app$v (insert$ ?v0py281) ?v1py210) ?v1py210)) :pattern ((fun_app$v (insert$ ?v0py281) ?v1py210)) )) :named A294))
(assert (! (forall ((?v0py282 T_dtree_sum$)(?v1py211 T_dtree_sum_set$)) (! (or (not (member$ ?v0py282 ?v1py211)) (= (insert$a ?v0py282 ?v1py211) ?v1py211)) :pattern ((insert$a ?v0py282 ?v1py211)) )) :named A295))
(assert (! (forall ((?v0py283 T$)(?v1py212 T_set$)) (! (or (not (member$a ?v0py283 ?v1py212)) (= (fun_app$s (insert$b ?v0py283) ?v1py212) ?v1py212)) :pattern ((fun_app$s (insert$b ?v0py283) ?v1py212)) )) :named A296))
(assert (! (forall ((?v0py284 N$)(?v1py213 N_set$)) (! (or (not (member$b ?v0py284 ?v1py213)) (and (= ?v1py213 (fun_app$v (insert$ ?v0py284) (?v2!126 ?v1py213 ?v0py284))) (not (member$b ?v0py284 (?v2!126 ?v1py213 ?v0py284))))) :pattern ((?v2!126 ?v1py213 ?v0py284)) )) :named A297))
(assert (! (forall ((?v0py285 T_dtree_sum$)(?v1py214 T_dtree_sum_set$)) (! (or (not (member$ ?v0py285 ?v1py214)) (and (= ?v1py214 (insert$a ?v0py285 (?v2!127 ?v1py214 ?v0py285))) (not (member$ ?v0py285 (?v2!127 ?v1py214 ?v0py285))))) :pattern ((?v2!127 ?v1py214 ?v0py285)) )) :named A298))
(assert (! (forall ((?v0py286 T$)(?v1py215 T_set$)) (! (or (not (member$a ?v0py286 ?v1py215)) (and (= ?v1py215 (fun_app$s (insert$b ?v0py286) (?v2!128 ?v1py215 ?v0py286))) (not (member$a ?v0py286 (?v2!128 ?v1py215 ?v0py286))))) :pattern ((?v2!128 ?v1py215 ?v0py286)) )) :named A299))
(assert (! (forall ((?v0py287 N$)(?v1py216 N$)(?v2py139 N_set$)) (! (or (member$b ?v0py287 ?v2py139) (= ?v0py287 ?v1py216) (not (member$b ?v0py287 (fun_app$v (insert$ ?v1py216) ?v2py139)))) :pattern ((member$b ?v0py287 (fun_app$v (insert$ ?v1py216) ?v2py139))) )) :named A300))
(assert (! (forall ((?v0py288 T_dtree_sum$)(?v1py217 T_dtree_sum$)(?v2py140 T_dtree_sum_set$)) (! (or (member$ ?v0py288 ?v2py140) (= ?v0py288 ?v1py217) (not (member$ ?v0py288 (insert$a ?v1py217 ?v2py140)))) :pattern ((member$ ?v0py288 (insert$a ?v1py217 ?v2py140))) )) :named A301))
(assert (! (forall ((?v0py289 T$)(?v1py218 T$)(?v2py141 T_set$)) (! (or (member$a ?v0py289 ?v2py141) (= ?v0py289 ?v1py218) (not (member$a ?v0py289 (fun_app$s (insert$b ?v1py218) ?v2py141)))) :pattern ((member$a ?v0py289 (fun_app$s (insert$b ?v1py218) ?v2py141))) )) :named A302))
(assert (! (forall ((?v0py290 N$)(?v1py219 N$)(?v2py142 N_set$)) (! (= (fun_app$v (insert$ ?v0py290) (fun_app$v (insert$ ?v1py219) ?v2py142)) (fun_app$v (insert$ ?v1py219) (fun_app$v (insert$ ?v0py290) ?v2py142))) :pattern ((fun_app$v (insert$ ?v0py290) (fun_app$v (insert$ ?v1py219) ?v2py142))) :pattern ((fun_app$v (insert$ ?v1py219) (fun_app$v (insert$ ?v0py290) ?v2py142))) )) :named A303))
(assert (! (forall ((?v0py291 N$)) (! (= (fun_app$v (insert$ ?v0py291) top$) top$) :pattern ((insert$ ?v0py291)) )) :named A304))
(assert (! (forall ((?v0py292 T$)(?v1py220 T$)(?v2py143 T$)(?v3py63 T$)) (! (and (or (and (= ?v0py292 ?v2py143) (= ?v1py220 ?v3py63)) (and (= ?v0py292 ?v3py63) (= ?v1py220 ?v2py143)) (not (= (fun_app$s (insert$b ?v0py292) (fun_app$s (insert$b ?v1py220) bot$)) (fun_app$s (insert$b ?v2py143) (fun_app$s (insert$b ?v3py63) bot$))))) (or (= (fun_app$s (insert$b ?v0py292) (fun_app$s (insert$b ?v1py220) bot$)) (fun_app$s (insert$b ?v2py143) (fun_app$s (insert$b ?v3py63) bot$))) (and (or (not (= ?v0py292 ?v2py143)) (not (= ?v1py220 ?v3py63))) (or (not (= ?v0py292 ?v3py63)) (not (= ?v1py220 ?v2py143)))))) :pattern ((fun_app$s (insert$b ?v0py292) (fun_app$s (insert$b ?v1py220) bot$)) (fun_app$s (insert$b ?v2py143) (fun_app$s (insert$b ?v3py63) bot$))) )) :named A305))
(assert (! (forall ((?v0py293 N$)(?v1py221 N$)(?v2py144 N$)(?v3py64 N$)) (! (and (or (and (= ?v0py293 ?v2py144) (= ?v1py221 ?v3py64)) (and (= ?v0py293 ?v3py64) (= ?v1py221 ?v2py144)) (not (= (fun_app$v (insert$ ?v0py293) (fun_app$v (insert$ ?v1py221) bot$a)) (fun_app$v (insert$ ?v2py144) (fun_app$v (insert$ ?v3py64) bot$a))))) (or (= (fun_app$v (insert$ ?v0py293) (fun_app$v (insert$ ?v1py221) bot$a)) (fun_app$v (insert$ ?v2py144) (fun_app$v (insert$ ?v3py64) bot$a))) (and (or (not (= ?v0py293 ?v2py144)) (not (= ?v1py221 ?v3py64))) (or (not (= ?v0py293 ?v3py64)) (not (= ?v1py221 ?v2py144)))))) :pattern ((fun_app$v (insert$ ?v0py293) (fun_app$v (insert$ ?v1py221) bot$a)) (fun_app$v (insert$ ?v2py144) (fun_app$v (insert$ ?v3py64) bot$a))) )) :named A306))
(assert (! (forall ((?v0py294 T_dtree_sum$)(?v1py222 T_dtree_sum$)) (! (and (or (not (member$ ?v0py294 (insert$a ?v1py222 bot$b))) (= ?v0py294 ?v1py222)) (or (member$ ?v0py294 (insert$a ?v1py222 bot$b)) (not (= ?v0py294 ?v1py222)))) :pattern ((member$ ?v0py294 (insert$a ?v1py222 bot$b))) )) :named A307))
(assert (! (forall ((?v0py295 T$)(?v1py223 T$)) (! (and (or (not (member$a ?v0py295 (fun_app$s (insert$b ?v1py223) bot$))) (= ?v0py295 ?v1py223)) (or (member$a ?v0py295 (fun_app$s (insert$b ?v1py223) bot$)) (not (= ?v0py295 ?v1py223)))) :pattern ((member$a ?v0py295 (fun_app$s (insert$b ?v1py223) bot$))) )) :named A308))
(assert (! (forall ((?v0py296 N$)(?v1py224 N$)) (! (and (or (not (member$b ?v0py296 (fun_app$v (insert$ ?v1py224) bot$a))) (= ?v0py296 ?v1py224)) (or (member$b ?v0py296 (fun_app$v (insert$ ?v1py224) bot$a)) (not (= ?v0py296 ?v1py224)))) :pattern ((member$b ?v0py296 (fun_app$v (insert$ ?v1py224) bot$a))) )) :named A309))
(assert (! (forall ((?v0py297 T$)(?v1py225 T$)) (! (or (not (= (fun_app$s (insert$b ?v0py297) bot$) (fun_app$s (insert$b ?v1py225) bot$))) (= ?v0py297 ?v1py225)) :pattern ((insert$b ?v0py297) (insert$b ?v1py225)) )) :named A310))
(assert (! (forall ((?v0py298 N$)(?v1py226 N$)) (! (or (not (= (fun_app$v (insert$ ?v0py298) bot$a) (fun_app$v (insert$ ?v1py226) bot$a))) (= ?v0py298 ?v1py226)) :pattern ((insert$ ?v0py298) (insert$ ?v1py226)) )) :named A311))
(assert (! (forall ((?v0py299 N$)(?v1py227 N$)) (! (or (not (member$b ?v0py299 (fun_app$v (insert$ ?v1py227) bot$a))) (= ?v0py299 ?v1py227)) :pattern ((member$b ?v0py299 (fun_app$v (insert$ ?v1py227) bot$a))) )) :named A312))
(assert (! (forall ((?v0py300 N_set$)(?v1py228 Dtree$)(?v2py145 T$)) (! (or (not (fun_app$b (fun_app$g (fun_app$h inFr2$ ?v0py300) ?v1py228) ?v2py145)) (and (= ?v0py300 (?v4!130 ?v2py145 ?v1py228 ?v0py300)) (= ?v1py228 (?v3!131 ?v2py145 ?v1py228 ?v0py300)) (= ?v2py145 (?v5!129 ?v2py145 ?v1py228 ?v0py300)) (member$b (fun_app$d root$ (?v3!131 ?v2py145 ?v1py228 ?v0py300)) (?v4!130 ?v2py145 ?v1py228 ?v0py300)) (member$ (inl$ (?v5!129 ?v2py145 ?v1py228 ?v0py300)) (cont$ (?v3!131 ?v2py145 ?v1py228 ?v0py300)))) (and (= ?v0py300 (fun_app$v (insert$ (fun_app$d root$ (?v4!134 ?v2py145 ?v1py228 ?v0py300))) (?v5!133 ?v2py145 ?v1py228 ?v0py300))) (= ?v1py228 (?v4!134 ?v2py145 ?v1py228 ?v0py300)) (= ?v2py145 (?v6!132 ?v2py145 ?v1py228 ?v0py300)) (member$ (inr$ (?v3!135 ?v2py145 ?v1py228 ?v0py300)) (cont$ (?v4!134 ?v2py145 ?v1py228 ?v0py300))) (fun_app$b (fun_app$g (fun_app$h inFr2$ (?v5!133 ?v2py145 ?v1py228 ?v0py300)) (?v3!135 ?v2py145 ?v1py228 ?v0py300)) (?v6!132 ?v2py145 ?v1py228 ?v0py300)))) :pattern ((?v3!131 ?v2py145 ?v1py228 ?v0py300)) :pattern ((?v4!130 ?v2py145 ?v1py228 ?v0py300)) :pattern ((?v5!129 ?v2py145 ?v1py228 ?v0py300)) :pattern ((?v4!134 ?v2py145 ?v1py228 ?v0py300)) :pattern ((?v5!133 ?v2py145 ?v1py228 ?v0py300)) :pattern ((?v3!135 ?v2py145 ?v1py228 ?v0py300)) :pattern ((?v6!132 ?v2py145 ?v1py228 ?v0py300)) )) :named A313))
(assert (! (forall ((?v0py301 N_set$)(?v1py229 Dtree$)(?v2py146 T$)) (! (and (or (not (fun_app$b (fun_app$g (fun_app$h inFr2$ ?v0py301) ?v1py229) ?v2py146)) (and (= ?v0py301 (?v4!137 ?v2py146 ?v1py229 ?v0py301)) (= ?v1py229 (?v3!138 ?v2py146 ?v1py229 ?v0py301)) (= ?v2py146 (?v5!136 ?v2py146 ?v1py229 ?v0py301)) (member$b (fun_app$d root$ (?v3!138 ?v2py146 ?v1py229 ?v0py301)) (?v4!137 ?v2py146 ?v1py229 ?v0py301)) (member$ (inl$ (?v5!136 ?v2py146 ?v1py229 ?v0py301)) (cont$ (?v3!138 ?v2py146 ?v1py229 ?v0py301)))) (and (= ?v0py301 (fun_app$v (insert$ (fun_app$d root$ (?v4!141 ?v2py146 ?v1py229 ?v0py301))) (?v5!140 ?v2py146 ?v1py229 ?v0py301))) (= ?v1py229 (?v4!141 ?v2py146 ?v1py229 ?v0py301)) (= ?v2py146 (?v6!139 ?v2py146 ?v1py229 ?v0py301)) (member$ (inr$ (?v3!142 ?v2py146 ?v1py229 ?v0py301)) (cont$ (?v4!141 ?v2py146 ?v1py229 ?v0py301))) (fun_app$b (fun_app$g (fun_app$h inFr2$ (?v5!140 ?v2py146 ?v1py229 ?v0py301)) (?v3!142 ?v2py146 ?v1py229 ?v0py301)) (?v6!139 ?v2py146 ?v1py229 ?v0py301)))) (or (fun_app$b (fun_app$g (fun_app$h inFr2$ ?v0py301) ?v1py229) ?v2py146) (and (forall ((?v3py65 Dtree$)(?v4py19 N_set$)(?v5py10 T$)) (! (or (not (member$b (fun_app$d root$ ?v3py65) ?v4py19)) (not (= ?v0py301 ?v4py19)) (not (= ?v1py229 ?v3py65)) (not (= ?v2py146 ?v5py10)) (not (member$ (inl$ ?v5py10) (cont$ ?v3py65)))) :pattern ((member$b (fun_app$d root$ ?v3py65) ?v4py19) (member$ (inl$ ?v5py10) (cont$ ?v3py65))) )) (forall ((?v3py66 Dtree$)(?v4py20 Dtree$)(?v5py11 N_set$)(?v6py3 T$)) (! (or (not (= ?v0py301 (fun_app$v (insert$ (fun_app$d root$ ?v4py20)) ?v5py11))) (not (= ?v1py229 ?v4py20)) (not (= ?v2py146 ?v6py3)) (not (member$ (inr$ ?v3py66) (cont$ ?v4py20))) (not (fun_app$b (fun_app$g (fun_app$h inFr2$ ?v5py11) ?v3py66) ?v6py3))) :pattern ((fun_app$b (fun_app$g (fun_app$h inFr2$ ?v5py11) ?v3py66) ?v6py3) (member$ (inr$ ?v3py66) (cont$ ?v4py20))) ))))) :pattern ((?v3!138 ?v2py146 ?v1py229 ?v0py301)) :pattern ((?v4!137 ?v2py146 ?v1py229 ?v0py301)) :pattern ((?v5!136 ?v2py146 ?v1py229 ?v0py301)) :pattern ((?v5!140 ?v2py146 ?v1py229 ?v0py301)) :pattern ((?v3!142 ?v2py146 ?v1py229 ?v0py301)) :pattern ((?v6!139 ?v2py146 ?v1py229 ?v0py301)) :pattern ((?v4!141 ?v2py146 ?v1py229 ?v0py301)) )) :named A314))
(assert (! (forall ((?v0py302 Dtree$)(?v1py230 N_set$)(?v2py147 T$)) (! (or (not (member$b (fun_app$d root$ ?v0py302) ?v1py230)) (fun_app$b (fun_app$g (fun_app$h inFr$ ?v1py230) ?v0py302) ?v2py147) (not (member$ (inl$ ?v2py147) (cont$ ?v0py302)))) :pattern ((fun_app$b (fun_app$g (fun_app$h inFr$ ?v1py230) ?v0py302) ?v2py147)) )) :named A315))
(assert (! (forall ((?v0py303 N_set$)(?v1py231 Dtree$)(?v2py148 T$)) (! (or (not (fun_app$b (fun_app$g (fun_app$h inFr$ ?v0py303) ?v1py231) ?v2py148)) (and (fun_app$j (fun_app$k (fun_app$l subtr$ ?v0py303) (?v3!143 ?v2py148 ?v1py231 ?v0py303)) ?v1py231) (member$ (inl$ ?v2py148) (cont$ (?v3!143 ?v2py148 ?v1py231 ?v0py303))))) :pattern ((fun_app$b (fun_app$g (fun_app$h inFr$ ?v0py303) ?v1py231) ?v2py148)) :pattern ((?v3!143 ?v2py148 ?v1py231 ?v0py303)) )) :named A316))
(assert (! (forall ((?v0py304 Dtree$)(?v1py232 N_set$)(?v2py149 T$)) (! (or (not (member$b (fun_app$d root$ ?v0py304) ?v1py232)) (fun_app$b (fun_app$g (fun_app$h inFr2$ ?v1py232) ?v0py304) ?v2py149) (not (member$ (inl$ ?v2py149) (cont$ ?v0py304)))) :pattern ((fun_app$b (fun_app$g (fun_app$h inFr2$ ?v1py232) ?v0py304) ?v2py149)) )) :named A317))
(assert (! (forall ((?v0py305 N_set$)(?v1py233 Dtree$)(?v2py150 T$)) (! (or (not (fun_app$b (fun_app$g (fun_app$h inFr$ ?v0py305) ?v1py233) ?v2py150)) (and (= ?v0py305 (?v4!149 ?v2py150 ?v1py233 ?v0py305)) (= ?v1py233 (?v3!150 ?v2py150 ?v1py233 ?v0py305)) (= ?v2py150 (?v6!147 ?v2py150 ?v1py233 ?v0py305)) (member$b (fun_app$d root$ (?v3!150 ?v2py150 ?v1py233 ?v0py305)) (?v4!149 ?v2py150 ?v1py233 ?v0py305)) (member$ (inr$ (?v5!148 ?v2py150 ?v1py233 ?v0py305)) (cont$ (?v3!150 ?v2py150 ?v1py233 ?v0py305))) (fun_app$b (fun_app$g (fun_app$h inFr$ (?v4!149 ?v2py150 ?v1py233 ?v0py305)) (?v5!148 ?v2py150 ?v1py233 ?v0py305)) (?v6!147 ?v2py150 ?v1py233 ?v0py305))) (and (= ?v0py305 (?v4!145 ?v2py150 ?v1py233 ?v0py305)) (= ?v1py233 (?v3!146 ?v2py150 ?v1py233 ?v0py305)) (= ?v2py150 (?v5!144 ?v2py150 ?v1py233 ?v0py305)) (member$b (fun_app$d root$ (?v3!146 ?v2py150 ?v1py233 ?v0py305)) (?v4!145 ?v2py150 ?v1py233 ?v0py305)) (member$ (inl$ (?v5!144 ?v2py150 ?v1py233 ?v0py305)) (cont$ (?v3!146 ?v2py150 ?v1py233 ?v0py305))))) :pattern ((?v6!147 ?v2py150 ?v1py233 ?v0py305)) :pattern ((?v3!150 ?v2py150 ?v1py233 ?v0py305)) :pattern ((?v4!149 ?v2py150 ?v1py233 ?v0py305)) :pattern ((?v5!148 ?v2py150 ?v1py233 ?v0py305)) :pattern ((?v4!145 ?v2py150 ?v1py233 ?v0py305)) :pattern ((?v3!146 ?v2py150 ?v1py233 ?v0py305)) :pattern ((?v5!144 ?v2py150 ?v1py233 ?v0py305)) )) :named A318))
(assert (! (forall ((?v0py306 N_set$)(?v1py234 Dtree$)(?v2py151 T$)) (! (and (or (not (fun_app$b (fun_app$g (fun_app$h inFr$ ?v0py306) ?v1py234) ?v2py151)) (and (= ?v0py306 (?v4!152 ?v2py151 ?v1py234 ?v0py306)) (= ?v1py234 (?v3!153 ?v2py151 ?v1py234 ?v0py306)) (= ?v2py151 (?v5!151 ?v2py151 ?v1py234 ?v0py306)) (member$b (fun_app$d root$ (?v3!153 ?v2py151 ?v1py234 ?v0py306)) (?v4!152 ?v2py151 ?v1py234 ?v0py306)) (member$ (inl$ (?v5!151 ?v2py151 ?v1py234 ?v0py306)) (cont$ (?v3!153 ?v2py151 ?v1py234 ?v0py306)))) (and (= ?v0py306 (?v4!156 ?v2py151 ?v1py234 ?v0py306)) (= ?v1py234 (?v3!157 ?v2py151 ?v1py234 ?v0py306)) (= ?v2py151 (?v6!154 ?v2py151 ?v1py234 ?v0py306)) (member$b (fun_app$d root$ (?v3!157 ?v2py151 ?v1py234 ?v0py306)) (?v4!156 ?v2py151 ?v1py234 ?v0py306)) (member$ (inr$ (?v5!155 ?v2py151 ?v1py234 ?v0py306)) (cont$ (?v3!157 ?v2py151 ?v1py234 ?v0py306))) (fun_app$b (fun_app$g (fun_app$h inFr$ (?v4!156 ?v2py151 ?v1py234 ?v0py306)) (?v5!155 ?v2py151 ?v1py234 ?v0py306)) (?v6!154 ?v2py151 ?v1py234 ?v0py306)))) (or (fun_app$b (fun_app$g (fun_app$h inFr$ ?v0py306) ?v1py234) ?v2py151) (and (forall ((?v3py67 Dtree$)(?v4py21 N_set$)(?v5py12 T$)) (! (or (not (member$b (fun_app$d root$ ?v3py67) ?v4py21)) (not (= ?v0py306 ?v4py21)) (not (= ?v1py234 ?v3py67)) (not (= ?v2py151 ?v5py12)) (not (member$ (inl$ ?v5py12) (cont$ ?v3py67)))) :pattern ((member$b (fun_app$d root$ ?v3py67) ?v4py21) (member$ (inl$ ?v5py12) (cont$ ?v3py67))) )) (forall ((?v3py68 Dtree$)(?v4py22 N_set$)(?v5py13 Dtree$)(?v6py4 T$)) (! (or (not (= ?v0py306 ?v4py22)) (not (fun_app$b (fun_app$g (fun_app$h inFr$ ?v4py22) ?v5py13) ?v6py4)) (not (= ?v1py234 ?v3py68)) (not (= ?v2py151 ?v6py4)) (not (member$b (fun_app$d root$ ?v3py68) ?v4py22)) (not (member$ (inr$ ?v5py13) (cont$ ?v3py68)))) :pattern ((fun_app$b (fun_app$g (fun_app$h inFr$ ?v4py22) ?v5py13) ?v6py4) (member$ (inr$ ?v5py13) (cont$ ?v3py68))) ))))) :pattern ((?v5!151 ?v2py151 ?v1py234 ?v0py306)) :pattern ((?v3!153 ?v2py151 ?v1py234 ?v0py306)) :pattern ((?v4!152 ?v2py151 ?v1py234 ?v0py306)) :pattern ((?v6!154 ?v2py151 ?v1py234 ?v0py306)) :pattern ((?v4!156 ?v2py151 ?v1py234 ?v0py306)) :pattern ((?v5!155 ?v2py151 ?v1py234 ?v0py306)) :pattern ((?v3!157 ?v2py151 ?v1py234 ?v0py306)) )) :named A319))
(assert (! (forall ((?v0py307 Dtree$)(?v1py235 N$)) (! (= (vimage$ uuc$ (cont$ (fun_app$e (h$ ?v0py307) ?v1py235))) (vimage$ uuc$ (cont$ (fun_app$e (pick$ ?v0py307) ?v1py235)))) :pattern ((fun_app$e (h$ ?v0py307) ?v1py235)) :pattern ((fun_app$e (pick$ ?v0py307) ?v1py235)) )) :named A320))
(assert (! (forall ((?v0py308 Dtree$)(?v1py236 Dtree$)) (! (or (not (= (fun_app$d root$ ?v0py308) (fun_app$d root$ ?v1py236))) (= (vimage$ uuc$ (cont$ (fun_app$f (hsubst$ ?v1py236) ?v0py308))) (vimage$ uuc$ (cont$ ?v1py236)))) :pattern ((fun_app$f (hsubst$ ?v1py236) ?v0py308)) )) :named A321))
(assert (! (forall ((?v0py309 Dtree$)(?v1py237 Dtree$)) (! (or (= (fun_app$d root$ ?v0py309) (fun_app$d root$ ?v1py237)) (= (vimage$ uuc$ (cont$ (fun_app$f (hsubst$ ?v1py237) ?v0py309))) (vimage$ uuc$ (cont$ ?v0py309)))) :pattern ((fun_app$f (hsubst$ ?v1py237) ?v0py309)) )) :named A322))
(assert (! (forall ((?v0py310 N_set$)(?v1py238 Dtree$)(?v2py152 Dtree$)(?v3py69 T$)) (! (or (fun_app$b (fun_app$g (inFrr$ (fun_app$v (minus$ ?v0py310) (fun_app$v (insert$ (fun_app$d root$ ?v1py238)) bot$a))) ?v1py238) ?v3py69) (not (fun_app$b (fun_app$g (fun_app$h inFr$ ?v0py310) (fun_app$f (hsubst$ ?v1py238) ?v2py152)) ?v3py69)) (member$a ?v3py69 (vimage$ uuc$ (cont$ ?v1py238))) (fun_app$b (fun_app$g (fun_app$h inFr$ (fun_app$v (minus$ ?v0py310) (fun_app$v (insert$ (fun_app$d root$ ?v1py238)) bot$a))) ?v2py152) ?v3py69)) :pattern ((fun_app$b (fun_app$g (fun_app$h inFr$ (fun_app$v (minus$ ?v0py310) (fun_app$v (insert$ (fun_app$d root$ ?v1py238)) bot$a))) ?v2py152) ?v3py69)) :pattern ((fun_app$b (fun_app$g (fun_app$h inFr$ ?v0py310) (fun_app$f (hsubst$ ?v1py238) ?v2py152)) ?v3py69)) )) :named A323))
(assert (! (forall ((?v0py311 Dtree$)(?v1py239 N_set$)(?v2py153 T$)) (! (or (not (member$b (fun_app$d root$ ?v0py311) ?v1py239)) (and (or (member$a ?v2py153 (vimage$ uuc$ (cont$ ?v0py311))) (fun_app$b (fun_app$g (inFrr$ (fun_app$v (minus$ ?v1py239) (fun_app$v (insert$ (fun_app$d root$ ?v0py311)) bot$a))) ?v0py311) ?v2py153) (not (fun_app$b (fun_app$g (fun_app$h inFr$ ?v1py239) (fun_app$f (hsubst$ ?v0py311) ?v0py311)) ?v2py153))) (or (fun_app$b (fun_app$g (fun_app$h inFr$ ?v1py239) (fun_app$f (hsubst$ ?v0py311) ?v0py311)) ?v2py153) (and (not (member$a ?v2py153 (vimage$ uuc$ (cont$ ?v0py311)))) (not (fun_app$b (fun_app$g (inFrr$ (fun_app$v (minus$ ?v1py239) (fun_app$v (insert$ (fun_app$d root$ ?v0py311)) bot$a))) ?v0py311) ?v2py153)))))) :pattern ((fun_app$b (fun_app$g (inFrr$ (fun_app$v (minus$ ?v1py239) (fun_app$v (insert$ (fun_app$d root$ ?v0py311)) bot$a))) ?v0py311) ?v2py153)) :pattern ((fun_app$b (fun_app$g (fun_app$h inFr$ ?v1py239) (fun_app$f (hsubst$ ?v0py311) ?v0py311)) ?v2py153)) )) :named A324))
(check-sat)
(get-info :reason-unknown)
;z3 -T:600 group_026/ematching/tmp/x2015_09_10_16_54_46_764_1495036.smt_in_std_unique_aug-gt_unsat-full.smt2
;unknown
;((:reason-unknown "smt tactic failed to show goal to be sat/unsat (incomplete quantifiers)"))
