(set-info :smt-lib-version 2.6)
(set-info :source | Generated by: Andrew Reynolds Generated on: 2017-04-28 Generator: Sledgehammer, converted to v2.6 by CVC4 Application: Verfication goals in Isabelle Target solver: CVC4, Z3 Publications: "A Decision Procedure for (Co)Datatypes" by Andrew Reynolds and Jasmin Blanchette, CADE 2015. |)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unsat)
(set-logic UFDT)
(set-option :smt.auto-config false)
(set-option :smt.mbqi false)
(set-option :sat.random_seed 488)
(set-option :smt.random_seed 599)
(set-option :nlsat.seed 611)
(set-option :memory_max_size 6000)
(declare-sort A$ 0)
(declare-sort RegExStr 0)
(declare-sort RMode 0)
(declare-sort B$ 0)
(declare-sort C$ 0)
(declare-sort D$ 0)
(declare-sort A_a_fun$ 0)
(declare-sort A_c_fun$ 0)
(declare-sort B_b_fun$ 0)
(declare-sort B_d_fun$ 0)
(declare-sort A_bool_fun$ 0)
(declare-sort B_bool_fun$ 0)
(declare-sort Bool_llist$ 0)
(declare-sort C_bool_fun$ 0)
(declare-sort D_bool_fun$ 0)
(declare-sort C_llist_set$ 0)
(declare-sort D_llist_set$ 0)
(declare-sort A_a_a_fun_fun$ 0)
(declare-sort A_a_fun_a_fun$ 0)
(declare-sort A_a_llist_fun$ 0)
(declare-sort A_c_fun_c_fun$ 0)
(declare-sort A_c_llist_fun$ 0)
(declare-sort B_b_b_fun_fun$ 0)
(declare-sort B_b_fun_b_fun$ 0)
(declare-sort B_b_llist_fun$ 0)
(declare-sort B_d_fun_d_fun$ 0)
(declare-sort B_d_llist_fun$ 0)
(declare-sort Bool_bool_fun$ 0)
(declare-sort A_a_bool_fun_fun$ 0)
(declare-sort A_a_fun_bool_fun$ 0)
(declare-sort A_b_bool_fun_fun$ 0)
(declare-sort A_bool_llist_fun$ 0)
(declare-sort A_c_bool_fun_fun$ 0)
(declare-sort A_c_fun_bool_fun$ 0)
(declare-sort A_llist_bool_fun$ 0)
(declare-sort B_a_bool_fun_fun$ 0)
(declare-sort B_b_bool_fun_fun$ 0)
(declare-sort B_b_fun_bool_fun$ 0)
(declare-sort B_bool_llist_fun$ 0)
(declare-sort B_c_bool_fun_fun$ 0)
(declare-sort B_d_fun_bool_fun$ 0)
(declare-sort B_llist_bool_fun$ 0)
(declare-sort C_a_bool_fun_fun$ 0)
(declare-sort C_c_bool_fun_fun$ 0)
(declare-sort C_d_bool_fun_fun$ 0)
(declare-sort C_llist_bool_fun$ 0)
(declare-sort D_b_bool_fun_fun$ 0)
(declare-sort D_c_bool_fun_fun$ 0)
(declare-sort D_d_bool_fun_fun$ 0)
(declare-sort D_llist_bool_fun$ 0)
(declare-sort A_a_a_fun_a_fun_fun$ 0)
(declare-sort A_a_c_fun_c_fun_fun$ 0)
(declare-sort A_bool_bool_fun_fun$ 0)
(declare-sort A_bool_fun_bool_fun$ 0)
(declare-sort A_c_llist_llist_fun$ 0)
(declare-sort B_b_b_fun_b_fun_fun$ 0)
(declare-sort B_b_d_fun_d_fun_fun$ 0)
(declare-sort B_bool_bool_fun_fun$ 0)
(declare-sort B_bool_fun_bool_fun$ 0)
(declare-sort Bool_a_bool_fun_fun$ 0)
(declare-sort Bool_b_bool_fun_fun$ 0)
(declare-sort Bool_c_bool_fun_fun$ 0)
(declare-sort C_bool_bool_fun_fun$ 0)
(declare-sort A_c_llist_fun_bool_fun$ 0)
(declare-sort B_b_b_fun_fun_bool_fun$ 0)
(declare-sort B_d_llist_fun_bool_fun$ 0)
(declare-sort Bool_a_a_a_fun_fun_fun$ 0)
(declare-sort Bool_b_b_b_fun_fun_fun$ 0)
(declare-sort Bool_bool_bool_fun_fun$ 0)
(declare-sort Bool_bool_fun_bool_fun$ 0)
(declare-sort A_a_bool_fun_bool_fun_fun$ 0)
(declare-sort A_a_bool_fun_fun_bool_fun$ 0)
(declare-sort A_a_fun_a_a_llist_fun_fun$ 0)
(declare-sort A_a_fun_a_c_llist_fun_fun$ 0)
(declare-sort A_c_llist_fun_c_llist_fun$ 0)
(declare-sort B_b_bool_fun_bool_fun_fun$ 0)
(declare-sort B_b_bool_fun_fun_bool_fun$ 0)
(declare-sort B_b_fun_b_b_llist_fun_fun$ 0)
(declare-sort B_b_fun_b_d_llist_fun_fun$ 0)
(declare-sort B_d_llist_fun_d_llist_fun$ 0)
(declare-sort D_llist_bool_fun_bool_fun$ 0)
(declare-sort A_a_fun_a_a_fun_bool_fun_fun$ 0)
(declare-sort A_a_fun_a_bool_llist_fun_fun$ 0)
(declare-sort A_a_fun_a_c_fun_bool_fun_fun$ 0)
(declare-sort A_a_fun_b_b_fun_bool_fun_fun$ 0)
(declare-sort A_bool_fun_bool_fun_bool_fun$ 0)
(declare-sort A_c_fun_a_a_fun_bool_fun_fun$ 0)
(declare-sort A_c_fun_a_c_fun_bool_fun_fun$ 0)
(declare-sort A_c_fun_b_d_fun_bool_fun_fun$ 0)
(declare-sort A_d_fun_a_b_fun_bool_fun_fun$ 0)
(declare-sort A_d_fun_a_c_fun_bool_fun_fun$ 0)
(declare-sort A_d_fun_b_c_fun_bool_fun_fun$ 0)
(declare-sort A_llist_b_llist_bool_fun_fun$ 0)
(declare-sort B_b_fun_a_a_fun_bool_fun_fun$ 0)
(declare-sort B_b_fun_a_c_fun_bool_fun_fun$ 0)
(declare-sort B_b_fun_b_b_fun_bool_fun_fun$ 0)
(declare-sort B_b_fun_b_bool_llist_fun_fun$ 0)
(declare-sort B_bool_fun_bool_fun_bool_fun$ 0)
(declare-sort B_d_fun_a_c_fun_bool_fun_fun$ 0)
(declare-sort B_d_fun_b_d_fun_bool_fun_fun$ 0)
(declare-sort B_llist_a_llist_bool_fun_fun$ 0)
(declare-sort B_llist_b_llist_bool_fun_fun$ 0)
(declare-sort B_llist_c_llist_bool_fun_fun$ 0)
(declare-sort C_a_fun_d_b_fun_bool_fun_fun$ 0)
(declare-sort C_c_fun_d_d_fun_bool_fun_fun$ 0)
(declare-sort C_llist_a_llist_bool_fun_fun$ 0)
(declare-sort C_llist_c_llist_bool_fun_fun$ 0)
(declare-sort C_llist_d_llist_bool_fun_fun$ 0)
(declare-sort D_llist_b_llist_bool_fun_fun$ 0)
(declare-sort D_llist_c_llist_bool_fun_fun$ 0)
(declare-sort D_llist_d_llist_bool_fun_fun$ 0)
(declare-sort A_a_bool_fun_fun_a_bool_fun_fun$ 0)
(declare-sort A_a_c_llist_fun_c_llist_fun_fun$ 0)
(declare-sort A_a_fun_a_a_a_a_fun_fun_fun_fun$ 0)
(declare-sort A_a_fun_a_a_fun_a_a_fun_fun_fun$ 0)
(declare-sort A_a_fun_a_bool_fun_bool_fun_fun$ 0)
(declare-sort A_a_fun_a_c_llist_llist_fun_fun$ 0)
(declare-sort A_bool_fun_a_a_bool_fun_fun_fun$ 0)
(declare-sort A_bool_fun_a_a_fun_bool_fun_fun$ 0)
(declare-sort A_bool_fun_a_c_fun_bool_fun_fun$ 0)
(declare-sort A_bool_fun_b_b_fun_bool_fun_fun$ 0)
(declare-sort A_c_fun_a_a_fun_a_c_fun_fun_fun$ 0)
(declare-sort A_c_fun_a_bool_fun_bool_fun_fun$ 0)
(declare-sort A_c_fun_a_c_a_c_fun_fun_fun_fun$ 0)
(declare-sort B_b_bool_fun_fun_b_bool_fun_fun$ 0)
(declare-sort B_b_d_llist_fun_d_llist_fun_fun$ 0)
(declare-sort B_b_fun_a_bool_fun_bool_fun_fun$ 0)
(declare-sort B_b_fun_b_b_b_b_fun_fun_fun_fun$ 0)
(declare-sort B_b_fun_b_b_fun_b_b_fun_fun_fun$ 0)
(declare-sort B_bool_fun_b_b_bool_fun_fun_fun$ 0)
(declare-sort B_d_fun_b_b_fun_b_d_fun_fun_fun$ 0)
(declare-sort B_d_fun_b_d_b_d_fun_fun_fun_fun$ 0)
(declare-sort B_llist_bool_llist_bool_fun_fun$ 0)
(declare-sort Bool_llist_b_llist_bool_fun_fun$ 0)
(declare-sort C_a_fun_a_c_fun_a_a_fun_fun_fun$ 0)
(declare-sort C_c_fun_a_c_fun_a_c_fun_fun_fun$ 0)
(declare-sort D_b_fun_b_d_fun_b_b_fun_fun_fun$ 0)
(declare-sort D_d_fun_b_d_fun_b_d_fun_fun_fun$ 0)
(declare-sort A_bool_fun_a_bool_fun_bool_fun_fun$ 0)
(declare-sort A_bool_fun_b_bool_fun_bool_fun_fun$ 0)
(declare-sort A_bool_fun_c_bool_fun_bool_fun_fun$ 0)
(declare-sort B_bool_fun_a_bool_fun_bool_fun_fun$ 0)
(declare-sort B_bool_fun_b_bool_fun_bool_fun_fun$ 0)
(declare-sort Bool_a_fun_bool_b_fun_bool_fun_fun$ 0)
(declare-sort Bool_c_fun_bool_d_fun_bool_fun_fun$ 0)
(declare-sort Bool_llist_bool_llist_bool_fun_fun$ 0)
(declare-sort C_bool_fun_a_bool_fun_bool_fun_fun$ 0)
(declare-sort C_bool_fun_c_bool_fun_bool_fun_fun$ 0)
(declare-sort C_bool_fun_d_bool_fun_bool_fun_fun$ 0)
(declare-sort D_bool_fun_d_bool_fun_bool_fun_fun$ 0)
(declare-sort A_a_bool_fun_fun_a_a_bool_fun_fun_fun$ 0)
(declare-sort A_a_fun_a_a_fun_a_a_llist_fun_fun_fun$ 0)
(declare-sort A_b_bool_fun_fun_a_b_bool_fun_fun_fun$ 0)
(declare-sort A_bool_fun_a_a_fun_a_bool_fun_fun_fun$ 0)
(declare-sort A_bool_fun_bool_bool_fun_bool_fun_fun$ 0)
(declare-sort A_c_fun_a_a_fun_a_c_llist_fun_fun_fun$ 0)
(declare-sort B_b_bool_fun_fun_a_b_bool_fun_fun_fun$ 0)
(declare-sort B_b_bool_fun_fun_b_b_bool_fun_fun_fun$ 0)
(declare-sort B_b_fun_b_b_fun_b_b_llist_fun_fun_fun$ 0)
(declare-sort B_bool_fun_b_b_fun_b_bool_fun_fun_fun$ 0)
(declare-sort Bool_a_fun_a_bool_fun_a_a_fun_fun_fun$ 0)
(declare-sort Bool_b_fun_b_bool_fun_b_b_fun_fun_fun$ 0)
(declare-sort Bool_bool_fun_a_bool_fun_bool_fun_fun$ 0)
(declare-sort Bool_bool_fun_c_bool_fun_bool_fun_fun$ 0)
(declare-sort Bool_c_fun_a_bool_fun_a_c_fun_fun_fun$ 0)
(declare-sort Bool_d_fun_b_bool_fun_b_d_fun_fun_fun$ 0)
(declare-sort C_bool_fun_a_c_fun_a_bool_fun_fun_fun$ 0)
(declare-sort C_bool_fun_bool_bool_fun_bool_fun_fun$ 0)
(declare-sort D_bool_fun_b_d_fun_b_bool_fun_fun_fun$ 0)
(declare-sort A_a_a_fun_fun_b_b_b_fun_fun_bool_fun_fun$ 0)
(declare-sort A_a_fun_a_fun_b_b_fun_b_fun_bool_fun_fun$ 0)
(declare-sort A_a_llist_fun_b_b_llist_fun_bool_fun_fun$ 0)
(declare-sort A_bool_fun_a_bool_a_bool_fun_fun_fun_fun$ 0)
(declare-sort A_c_fun_c_fun_b_d_fun_d_fun_bool_fun_fun$ 0)
(declare-sort A_c_llist_fun_a_c_llist_fun_bool_fun_fun$ 0)
(declare-sort A_c_llist_fun_b_d_llist_fun_bool_fun_fun$ 0)
(declare-sort A_d_llist_fun_a_b_llist_fun_bool_fun_fun$ 0)
(declare-sort A_d_llist_fun_a_c_llist_fun_bool_fun_fun$ 0)
(declare-sort A_d_llist_fun_b_c_llist_fun_bool_fun_fun$ 0)
(declare-sort B_b_llist_fun_a_a_llist_fun_bool_fun_fun$ 0)
(declare-sort B_b_llist_fun_a_c_llist_fun_bool_fun_fun$ 0)
(declare-sort B_b_llist_fun_b_b_llist_fun_bool_fun_fun$ 0)
(declare-sort B_bool_fun_b_bool_b_bool_fun_fun_fun_fun$ 0)
(declare-sort B_d_llist_fun_a_c_llist_fun_bool_fun_fun$ 0)
(declare-sort B_d_llist_fun_b_d_llist_fun_bool_fun_fun$ 0)
(declare-sort Bool_bool_fun_bool_bool_fun_bool_fun_fun$ 0)
(declare-sort C_a_c_fun_fun_d_b_d_fun_fun_bool_fun_fun$ 0)
(declare-sort C_llist_llist_d_llist_llist_bool_fun_fun$ 0)
(declare-sort A_a_llist_fun_a_a_fun_a_a_llist_fun_fun_fun$ 0)
(declare-sort A_bool_fun_a_a_fun_a_bool_llist_fun_fun_fun$ 0)
(declare-sort A_bool_llist_fun_b_b_llist_fun_bool_fun_fun$ 0)
(declare-sort A_c_llist_fun_a_a_fun_a_c_llist_fun_fun_fun$ 0)
(declare-sort B_b_llist_fun_a_bool_llist_fun_bool_fun_fun$ 0)
(declare-sort B_b_llist_fun_b_b_fun_b_b_llist_fun_fun_fun$ 0)
(declare-sort B_d_llist_fun_b_b_fun_b_d_llist_fun_fun_fun$ 0)
(declare-sort Bool_bool_fun_a_bool_fun_a_bool_fun_fun_fun$ 0)
(declare-sort Bool_bool_fun_b_bool_fun_b_bool_fun_fun_fun$ 0)
(declare-sort A_a_bool_fun_fun_b_b_bool_fun_fun_bool_fun_fun$ 0)
(declare-sort A_a_bool_fun_fun_c_c_bool_fun_fun_bool_fun_fun$ 0)
(declare-sort A_a_fun_bool_fun_a_c_fun_bool_fun_bool_fun_fun$ 0)
(declare-sort A_a_fun_bool_fun_b_b_fun_bool_fun_bool_fun_fun$ 0)
(declare-sort A_bool_llist_fun_a_bool_llist_fun_bool_fun_fun$ 0)
(declare-sort A_bool_llist_fun_b_bool_llist_fun_bool_fun_fun$ 0)
(declare-sort A_c_bool_fun_fun_b_d_bool_fun_fun_bool_fun_fun$ 0)
(declare-sort A_c_fun_bool_fun_a_a_fun_bool_fun_bool_fun_fun$ 0)
(declare-sort A_c_fun_bool_fun_a_c_fun_bool_fun_bool_fun_fun$ 0)
(declare-sort A_c_fun_bool_fun_b_d_fun_bool_fun_bool_fun_fun$ 0)
(declare-sort A_llist_bool_fun_b_llist_bool_fun_bool_fun_fun$ 0)
(declare-sort Bool_c_llist_fun_bool_d_llist_fun_bool_fun_fun$ 0)
(declare-sort C_a_bool_fun_fun_d_b_bool_fun_fun_bool_fun_fun$ 0)
(declare-sort C_c_bool_fun_fun_a_a_bool_fun_fun_bool_fun_fun$ 0)
(declare-sort C_c_bool_fun_fun_c_c_bool_fun_fun_bool_fun_fun$ 0)
(declare-sort C_c_bool_fun_fun_d_d_bool_fun_fun_bool_fun_fun$ 0)
(declare-sort C_d_bool_fun_fun_c_d_bool_fun_fun_bool_fun_fun$ 0)
(declare-sort C_llist_bool_fun_d_llist_bool_fun_bool_fun_fun$ 0)
(declare-sort D_llist_bool_fun_d_llist_bool_fun_bool_fun_fun$ 0)
(declare-sort A_a_bool_fun_fun_a_a_fun_a_a_fun_bool_fun_fun_fun$ 0)
(declare-sort A_a_fun_bool_fun_a_bool_fun_bool_fun_bool_fun_fun$ 0)
(declare-sort A_bool_fun_bool_fun_a_a_fun_bool_fun_bool_fun_fun$ 0)
(declare-sort A_bool_fun_bool_fun_a_c_fun_bool_fun_bool_fun_fun$ 0)
(declare-sort A_bool_llist_fun_a_a_fun_a_bool_llist_fun_fun_fun$ 0)
(declare-sort A_c_bool_fun_fun_a_a_fun_a_c_fun_bool_fun_fun_fun$ 0)
(declare-sort A_c_fun_bool_fun_a_bool_fun_bool_fun_bool_fun_fun$ 0)
(declare-sort A_c_llist_fun_a_a_fun_a_c_llist_llist_fun_fun_fun$ 0)
(declare-sort A_c_llist_fun_a_c_llist_a_c_llist_fun_fun_fun_fun$ 0)
(declare-sort B_b_bool_fun_fun_b_b_fun_b_b_fun_bool_fun_fun_fun$ 0)
(declare-sort B_bool_llist_fun_b_b_fun_b_bool_llist_fun_fun_fun$ 0)
(declare-sort B_d_bool_fun_fun_b_b_fun_b_d_fun_bool_fun_fun_fun$ 0)
(declare-sort B_d_llist_fun_b_d_llist_b_d_llist_fun_fun_fun_fun$ 0)
(declare-sort Bool_bool_bool_fun_fun_bool_bool_bool_fun_fun_fun$ 0)
(declare-sort Bool_c_llist_fun_a_bool_fun_a_c_llist_fun_fun_fun$ 0)
(declare-sort Bool_d_llist_fun_b_bool_fun_b_d_llist_fun_fun_fun$ 0)
(declare-sort C_a_bool_fun_fun_a_c_fun_a_a_fun_bool_fun_fun_fun$ 0)
(declare-sort C_a_bool_fun_fun_c_llist_a_llist_bool_fun_fun_fun$ 0)
(declare-sort C_c_bool_fun_fun_a_c_fun_a_c_fun_bool_fun_fun_fun$ 0)
(declare-sort C_c_bool_fun_fun_c_llist_c_llist_bool_fun_fun_fun$ 0)
(declare-sort C_d_bool_fun_fun_c_llist_d_llist_bool_fun_fun_fun$ 0)
(declare-sort D_b_bool_fun_fun_b_d_fun_b_b_fun_bool_fun_fun_fun$ 0)
(declare-sort D_b_bool_fun_fun_d_llist_b_llist_bool_fun_fun_fun$ 0)
(declare-sort D_d_bool_fun_fun_b_d_fun_b_d_fun_bool_fun_fun_fun$ 0)
(declare-sort D_d_bool_fun_fun_d_llist_d_llist_bool_fun_fun_fun$ 0)
(declare-sort A_a_a_a_fun_fun_fun_b_b_b_b_fun_fun_fun_bool_fun_fun$ 0)
(declare-sort A_a_bool_fun_fun_bool_bool_bool_fun_fun_bool_fun_fun$ 0)
(declare-sort A_a_fun_a_a_fun_fun_b_b_fun_b_b_fun_fun_bool_fun_fun$ 0)
(declare-sort A_a_fun_a_c_fun_fun_b_b_fun_b_d_fun_fun_bool_fun_fun$ 0)
(declare-sort A_bool_bool_fun_fun_b_bool_bool_fun_fun_bool_fun_fun$ 0)
(declare-sort A_bool_fun_a_a_fun_a_a_fun_a_a_llist_fun_fun_fun_fun$ 0)
(declare-sort A_bool_fun_a_c_fun_a_a_fun_a_c_llist_fun_fun_fun_fun$ 0)
(declare-sort A_bool_fun_bool_fun_a_bool_fun_bool_fun_bool_fun_fun$ 0)
(declare-sort A_bool_fun_bool_fun_b_bool_fun_bool_fun_bool_fun_fun$ 0)
(declare-sort A_c_a_c_fun_fun_fun_b_d_b_d_fun_fun_fun_bool_fun_fun$ 0)
(declare-sort A_c_fun_a_a_fun_fun_b_d_fun_b_b_fun_fun_bool_fun_fun$ 0)
(declare-sort A_c_fun_a_c_fun_fun_b_d_fun_b_d_fun_fun_bool_fun_fun$ 0)
(declare-sort A_c_llist_llist_fun_b_d_llist_llist_fun_bool_fun_fun$ 0)
(declare-sort B_bool_fun_b_b_fun_b_b_fun_b_b_llist_fun_fun_fun_fun$ 0)
(declare-sort B_bool_fun_b_d_fun_b_b_fun_b_d_llist_fun_fun_fun_fun$ 0)
(declare-sort Bool_a_bool_fun_fun_bool_b_bool_fun_fun_bool_fun_fun$ 0)
(declare-sort Bool_bool_bool_fun_fun_a_a_bool_fun_fun_bool_fun_fun$ 0)
(declare-sort Bool_bool_bool_fun_fun_c_c_bool_fun_fun_bool_fun_fun$ 0)
(declare-sort Bool_c_bool_fun_fun_bool_c_bool_fun_fun_bool_fun_fun$ 0)
(declare-sort Bool_c_bool_fun_fun_bool_d_bool_fun_fun_bool_fun_fun$ 0)
(declare-sort C_bool_bool_fun_fun_c_bool_bool_fun_fun_bool_fun_fun$ 0)
(declare-sort C_bool_bool_fun_fun_d_bool_bool_fun_fun_bool_fun_fun$ 0)
(declare-sort C_c_bool_fun_fun_bool_bool_bool_fun_fun_bool_fun_fun$ 0)
(declare-sort A_bool_bool_fun_fun_a_a_fun_a_bool_fun_bool_fun_fun_fun$ 0)
(declare-sort A_c_llist_llist_fun_a_a_fun_a_c_llist_llist_fun_fun_fun$ 0)
(declare-sort B_bool_bool_fun_fun_b_b_fun_b_bool_fun_bool_fun_fun_fun$ 0)
(declare-sort Bool_a_bool_fun_fun_a_bool_fun_a_a_fun_bool_fun_fun_fun$ 0)
(declare-sort Bool_b_bool_fun_fun_b_bool_fun_b_b_fun_bool_fun_fun_fun$ 0)
(declare-sort Bool_c_bool_fun_fun_a_bool_fun_a_c_fun_bool_fun_fun_fun$ 0)
(declare-sort Bool_d_bool_fun_fun_b_bool_fun_b_d_fun_bool_fun_fun_fun$ 0)
(declare-sort C_bool_bool_fun_fun_a_c_fun_a_bool_fun_bool_fun_fun_fun$ 0)
(declare-sort D_bool_bool_fun_fun_b_d_fun_b_bool_fun_bool_fun_fun_fun$ 0)
(declare-sort A_a_bool_fun_fun_a_a_bool_fun_fun_a_a_fun_bool_fun_fun_fun$ 0)
(declare-sort A_a_bool_fun_fun_c_c_bool_fun_fun_a_c_fun_bool_fun_fun_fun$ 0)
(declare-sort A_a_fun_a_bool_fun_fun_b_b_fun_b_bool_fun_fun_bool_fun_fun$ 0)
(declare-sort A_bool_fun_a_a_fun_fun_b_bool_fun_b_b_fun_fun_bool_fun_fun$ 0)
(declare-sort A_bool_fun_a_a_llist_fun_a_a_fun_a_a_llist_fun_fun_fun_fun$ 0)
(declare-sort A_bool_fun_a_bool_fun_a_a_fun_a_bool_llist_fun_fun_fun_fun$ 0)
(declare-sort A_bool_fun_a_c_fun_fun_b_bool_fun_b_d_fun_fun_bool_fun_fun$ 0)
(declare-sort A_bool_fun_a_c_llist_fun_a_a_fun_a_c_llist_fun_fun_fun_fun$ 0)
(declare-sort A_c_fun_a_bool_fun_fun_b_d_fun_b_bool_fun_fun_bool_fun_fun$ 0)
(declare-sort A_c_llist_fun_bool_fun_b_d_llist_fun_bool_fun_bool_fun_fun$ 0)
(declare-sort B_b_bool_fun_fun_b_b_bool_fun_fun_b_b_fun_bool_fun_fun_fun$ 0)
(declare-sort B_b_bool_fun_fun_d_d_bool_fun_fun_b_d_fun_bool_fun_fun_fun$ 0)
(declare-sort B_bool_fun_b_b_llist_fun_b_b_fun_b_b_llist_fun_fun_fun_fun$ 0)
(declare-sort B_bool_fun_b_bool_fun_b_b_fun_b_bool_llist_fun_fun_fun_fun$ 0)
(declare-sort B_bool_fun_b_d_llist_fun_b_b_fun_b_d_llist_fun_fun_fun_fun$ 0)
(declare-sort Bool_bool_bool_fun_fun_bool_bool_bool_fun_fun_bool_fun_fun$ 0)
(declare-sort Bool_bool_bool_fun_fun_a_bool_fun_a_bool_fun_bool_fun_fun_fun$ 0)
(declare-sort Bool_bool_bool_fun_fun_b_bool_fun_b_bool_fun_bool_fun_fun_fun$ 0)
(declare-sort C_llist_d_llist_bool_fun_fun_c_llist_d_llist_bool_fun_fun_fun$ 0)
(declare-sort D_llist_d_llist_bool_fun_fun_c_llist_d_llist_bool_fun_fun_fun$ 0)
(declare-sort A_a_fun_a_a_llist_fun_fun_b_b_fun_b_b_llist_fun_fun_bool_fun_fun$ 0)
(declare-sort A_a_fun_a_c_llist_fun_fun_a_a_fun_a_c_llist_fun_fun_bool_fun_fun$ 0)
(declare-sort A_a_fun_a_c_llist_fun_fun_b_b_fun_b_d_llist_fun_fun_bool_fun_fun$ 0)
(declare-sort A_a_fun_a_d_llist_fun_fun_a_a_fun_a_b_llist_fun_fun_bool_fun_fun$ 0)
(declare-sort A_a_fun_a_d_llist_fun_fun_a_a_fun_a_c_llist_fun_fun_bool_fun_fun$ 0)
(declare-sort A_a_fun_a_d_llist_fun_fun_b_b_fun_b_c_llist_fun_fun_bool_fun_fun$ 0)
(declare-sort A_bool_a_bool_fun_fun_fun_b_bool_b_bool_fun_fun_fun_bool_fun_fun$ 0)
(declare-sort A_bool_fun_a_bool_fun_fun_b_bool_fun_b_bool_fun_fun_bool_fun_fun$ 0)
(declare-sort A_bool_fun_a_bool_llist_fun_a_a_fun_a_bool_llist_fun_fun_fun_fun$ 0)
(declare-sort A_bool_fun_a_c_llist_fun_a_a_fun_a_c_llist_llist_fun_fun_fun_fun$ 0)
(declare-sort A_c_llist_fun_c_llist_fun_b_d_llist_fun_d_llist_fun_bool_fun_fun$ 0)
(declare-sort B_b_fun_b_b_llist_fun_fun_a_a_fun_a_a_llist_fun_fun_bool_fun_fun$ 0)
(declare-sort B_b_fun_b_b_llist_fun_fun_a_a_fun_a_c_llist_fun_fun_bool_fun_fun$ 0)
(declare-sort B_b_fun_b_b_llist_fun_fun_b_b_fun_b_b_llist_fun_fun_bool_fun_fun$ 0)
(declare-sort B_b_fun_b_d_llist_fun_fun_a_a_fun_a_c_llist_fun_fun_bool_fun_fun$ 0)
(declare-sort B_b_fun_b_d_llist_fun_fun_b_b_fun_b_d_llist_fun_fun_bool_fun_fun$ 0)
(declare-sort B_bool_fun_b_bool_llist_fun_b_b_fun_b_bool_llist_fun_fun_fun_fun$ 0)
(declare-sort B_bool_fun_b_d_llist_fun_b_b_fun_b_d_llist_llist_fun_fun_fun_fun$ 0)
(declare-sort Bool_c_llist_bool_fun_fun_bool_d_llist_bool_fun_fun_bool_fun_fun$ 0)
(declare-sort C_llist_a_c_llist_fun_fun_d_llist_b_d_llist_fun_fun_bool_fun_fun$ 0)
(declare-sort A_a_bool_fun_fun_bool_bool_bool_fun_fun_a_bool_fun_bool_fun_fun_fun$ 0)
(declare-sort A_a_fun_a_bool_llist_fun_fun_b_b_fun_b_b_llist_fun_fun_bool_fun_fun$ 0)
(declare-sort B_b_bool_fun_fun_bool_bool_bool_fun_fun_b_bool_fun_bool_fun_fun_fun$ 0)
(declare-sort B_b_fun_b_b_llist_fun_fun_a_a_fun_a_bool_llist_fun_fun_bool_fun_fun$ 0)
(declare-sort Bool_c_llist_bool_fun_fun_a_bool_fun_a_c_llist_fun_bool_fun_fun_fun$ 0)
(declare-sort Bool_d_llist_bool_fun_fun_b_bool_fun_b_d_llist_fun_bool_fun_fun_fun$ 0)
(declare-sort A_a_fun_a_a_fun_bool_fun_fun_a_c_fun_a_c_fun_bool_fun_fun_bool_fun_fun$ 0)
(declare-sort A_a_fun_a_a_fun_bool_fun_fun_b_b_fun_b_b_fun_bool_fun_fun_bool_fun_fun$ 0)
(declare-sort A_a_fun_a_bool_fun_a_a_llist_fun_a_a_fun_a_a_llist_fun_fun_fun_fun_fun$ 0)
(declare-sort A_a_fun_a_bool_llist_fun_fun_a_a_fun_a_bool_llist_fun_fun_bool_fun_fun$ 0)
(declare-sort A_a_fun_a_bool_llist_fun_fun_b_b_fun_b_bool_llist_fun_fun_bool_fun_fun$ 0)
(declare-sort A_a_fun_a_c_fun_bool_fun_fun_b_b_fun_b_d_fun_bool_fun_fun_bool_fun_fun$ 0)
(declare-sort A_bool_fun_a_c_llist_fun_fun_b_bool_fun_b_d_llist_fun_fun_bool_fun_fun$ 0)
(declare-sort A_bool_fun_a_c_llist_llist_fun_a_a_fun_a_c_llist_llist_fun_fun_fun_fun$ 0)
(declare-sort A_c_fun_a_a_fun_bool_fun_fun_b_d_fun_b_b_fun_bool_fun_fun_bool_fun_fun$ 0)
(declare-sort A_c_fun_a_bool_fun_a_c_llist_fun_a_a_fun_a_c_llist_fun_fun_fun_fun_fun$ 0)
(declare-sort A_c_fun_a_c_fun_bool_fun_fun_a_a_fun_a_a_fun_bool_fun_fun_bool_fun_fun$ 0)
(declare-sort A_c_fun_a_c_fun_bool_fun_fun_a_c_fun_a_c_fun_bool_fun_fun_bool_fun_fun$ 0)
(declare-sort A_c_fun_a_c_fun_bool_fun_fun_b_d_fun_b_d_fun_bool_fun_fun_bool_fun_fun$ 0)
(declare-sort B_b_fun_b_bool_fun_b_b_llist_fun_b_b_fun_b_b_llist_fun_fun_fun_fun_fun$ 0)
(declare-sort B_d_fun_b_bool_fun_b_d_llist_fun_b_b_fun_b_d_llist_fun_fun_fun_fun_fun$ 0)
(declare-sort C_llist_a_llist_bool_fun_fun_d_llist_b_llist_bool_fun_fun_bool_fun_fun$ 0)
(declare-sort C_llist_c_llist_bool_fun_fun_d_llist_d_llist_bool_fun_fun_bool_fun_fun$ 0)
(declare-sort C_llist_d_llist_bool_fun_fun_c_llist_d_llist_bool_fun_fun_bool_fun_fun$ 0)
(declare-sort A_a_bool_fun_fun_c_llist_c_llist_bool_fun_fun_a_c_llist_fun_bool_fun_fun_fun$ 0)
(declare-sort A_a_fun_a_a_fun_bool_fun_fun_a_bool_fun_a_bool_fun_bool_fun_fun_bool_fun_fun$ 0)
(declare-sort A_a_fun_a_bool_fun_bool_fun_fun_b_b_fun_b_bool_fun_bool_fun_fun_bool_fun_fun$ 0)
(declare-sort A_a_fun_a_c_llist_llist_fun_fun_b_b_fun_b_d_llist_llist_fun_fun_bool_fun_fun$ 0)
(declare-sort A_bool_fun_a_a_fun_bool_fun_fun_b_bool_fun_b_b_fun_bool_fun_fun_bool_fun_fun$ 0)
(declare-sort A_bool_fun_a_bool_fun_bool_fun_fun_a_a_fun_a_a_fun_bool_fun_fun_bool_fun_fun$ 0)
(declare-sort A_bool_fun_a_bool_fun_bool_fun_fun_a_c_fun_a_c_fun_bool_fun_fun_bool_fun_fun$ 0)
(declare-sort A_bool_fun_a_c_fun_bool_fun_fun_a_bool_fun_a_c_fun_bool_fun_fun_bool_fun_fun$ 0)
(declare-sort A_bool_fun_a_c_fun_bool_fun_fun_b_bool_fun_b_d_fun_bool_fun_fun_bool_fun_fun$ 0)
(declare-sort A_c_fun_a_bool_fun_bool_fun_fun_a_c_fun_a_bool_fun_bool_fun_fun_bool_fun_fun$ 0)
(declare-sort A_c_fun_a_bool_fun_bool_fun_fun_b_d_fun_b_bool_fun_bool_fun_fun_bool_fun_fun$ 0)
(declare-sort A_c_fun_a_c_fun_bool_fun_fun_a_bool_fun_a_bool_fun_bool_fun_fun_bool_fun_fun$ 0)
(declare-sort A_c_llist_a_c_llist_fun_fun_fun_b_d_llist_b_d_llist_fun_fun_fun_bool_fun_fun$ 0)
(declare-sort B_b_bool_fun_fun_d_llist_d_llist_bool_fun_fun_b_d_llist_fun_bool_fun_fun_fun$ 0)
(declare-sort A_bool_fun_a_bool_fun_a_bool_llist_fun_a_a_fun_a_bool_llist_fun_fun_fun_fun_fun$ 0)
(declare-sort B_bool_fun_b_bool_fun_b_bool_llist_fun_b_b_fun_b_bool_llist_fun_fun_fun_fun_fun$ 0)
(declare-sort A_bool_fun_a_bool_fun_bool_fun_fun_a_bool_fun_a_bool_fun_bool_fun_fun_bool_fun_fun$ 0)
(declare-sort A_bool_fun_a_bool_fun_bool_fun_fun_b_bool_fun_b_bool_fun_bool_fun_fun_bool_fun_fun$ 0)
(declare-sort A_bool_fun_a_a_fun_a_bool_fun_a_a_llist_fun_a_a_fun_a_a_llist_fun_fun_fun_fun_fun_fun$ 0)
(declare-sort A_bool_fun_a_b_fun_a_bool_fun_a_b_llist_fun_a_a_fun_a_b_llist_fun_fun_fun_fun_fun_fun$ 0)
(declare-sort A_bool_fun_a_c_fun_a_bool_fun_a_c_llist_fun_a_a_fun_a_c_llist_fun_fun_fun_fun_fun_fun$ 0)
(declare-sort A_bool_fun_a_d_fun_a_bool_fun_a_d_llist_fun_a_a_fun_a_d_llist_fun_fun_fun_fun_fun_fun$ 0)
(declare-sort B_bool_fun_b_b_fun_b_bool_fun_b_b_llist_fun_b_b_fun_b_b_llist_fun_fun_fun_fun_fun_fun$ 0)
(declare-sort B_bool_fun_b_c_fun_b_bool_fun_b_c_llist_fun_b_b_fun_b_c_llist_fun_fun_fun_fun_fun_fun$ 0)
(declare-sort B_bool_fun_b_d_fun_b_bool_fun_b_d_llist_fun_b_b_fun_b_d_llist_fun_fun_fun_fun_fun_fun$ 0)
(declare-sort A_a_bool_fun_fun_a_a_fun_bool_fun_fun_b_b_bool_fun_fun_b_b_fun_bool_fun_fun_bool_fun_fun$ 0)
(declare-sort A_a_fun_a_a_fun_a_a_llist_fun_fun_fun_b_b_fun_b_b_fun_b_b_llist_fun_fun_fun_bool_fun_fun$ 0)
(declare-sort A_bool_fun_a_c_llist_fun_bool_fun_fun_b_bool_fun_b_d_llist_fun_bool_fun_fun_bool_fun_fun$ 0)
(declare-sort A_c_fun_a_a_fun_a_c_llist_fun_fun_fun_b_d_fun_b_b_fun_b_d_llist_fun_fun_fun_bool_fun_fun$ 0)
(declare-sort A_c_llist_fun_a_bool_fun_a_c_llist_llist_fun_a_a_fun_a_c_llist_llist_fun_fun_fun_fun_fun$ 0)
(declare-sort B_b_fun_b_b_fun_b_b_llist_fun_fun_fun_a_a_fun_a_a_fun_a_a_llist_fun_fun_fun_bool_fun_fun$ 0)
(declare-sort B_b_fun_b_b_fun_b_b_llist_fun_fun_fun_a_c_fun_a_a_fun_a_c_llist_fun_fun_fun_bool_fun_fun$ 0)
(declare-sort B_b_fun_b_b_fun_b_b_llist_fun_fun_fun_b_b_fun_b_b_fun_b_b_llist_fun_fun_fun_bool_fun_fun$ 0)
(declare-sort C_c_bool_fun_fun_a_c_fun_bool_fun_fun_d_d_bool_fun_fun_b_d_fun_bool_fun_fun_bool_fun_fun$ 0)
(declare-sort A_bool_fun_a_a_fun_a_bool_llist_fun_fun_fun_b_b_fun_b_b_fun_b_b_llist_fun_fun_fun_bool_fun_fun$ 0)
(declare-sort A_bool_fun_a_bool_fun_a_bool_fun_a_bool_llist_fun_a_a_fun_a_bool_llist_fun_fun_fun_fun_fun_fun$ 0)
(declare-sort B_b_fun_b_b_fun_b_b_llist_fun_fun_fun_a_bool_fun_a_a_fun_a_bool_llist_fun_fun_fun_bool_fun_fun$ 0)
(declare-sort B_bool_fun_b_bool_fun_b_bool_fun_b_bool_llist_fun_b_b_fun_b_bool_llist_fun_fun_fun_fun_fun_fun$ 0)
(declare-sort A_a_llist_fun_a_a_fun_a_a_llist_fun_fun_fun_b_b_llist_fun_b_b_fun_b_b_llist_fun_fun_fun_bool_fun_fun$ 0)
(declare-sort A_bool_fun_a_a_fun_a_bool_llist_fun_fun_fun_a_bool_fun_a_a_fun_a_bool_llist_fun_fun_fun_bool_fun_fun$ 0)
(declare-sort A_bool_fun_a_a_fun_a_bool_llist_fun_fun_fun_b_bool_fun_b_b_fun_b_bool_llist_fun_fun_fun_bool_fun_fun$ 0)
(declare-sort A_c_llist_fun_a_a_fun_a_c_llist_fun_fun_fun_a_c_llist_fun_a_a_fun_a_c_llist_fun_fun_fun_bool_fun_fun$ 0)
(declare-sort A_c_llist_fun_a_a_fun_a_c_llist_fun_fun_fun_b_d_llist_fun_b_b_fun_b_d_llist_fun_fun_fun_bool_fun_fun$ 0)
(declare-sort A_d_llist_fun_a_a_fun_a_d_llist_fun_fun_fun_a_b_llist_fun_a_a_fun_a_b_llist_fun_fun_fun_bool_fun_fun$ 0)
(declare-sort A_d_llist_fun_a_a_fun_a_d_llist_fun_fun_fun_a_c_llist_fun_a_a_fun_a_c_llist_fun_fun_fun_bool_fun_fun$ 0)
(declare-sort A_d_llist_fun_a_a_fun_a_d_llist_fun_fun_fun_b_c_llist_fun_b_b_fun_b_c_llist_fun_fun_fun_bool_fun_fun$ 0)
(declare-sort B_d_llist_fun_b_b_fun_b_d_llist_fun_fun_fun_a_c_llist_fun_a_a_fun_a_c_llist_fun_fun_fun_bool_fun_fun$ 0)
(declare-sort B_d_llist_fun_b_b_fun_b_d_llist_fun_fun_fun_b_d_llist_fun_b_b_fun_b_d_llist_fun_fun_fun_bool_fun_fun$ 0)
(declare-sort A_bool_fun_a_c_llist_fun_a_bool_fun_a_c_llist_llist_fun_a_a_fun_a_c_llist_llist_fun_fun_fun_fun_fun_fun$ 0)
(declare-sort B_bool_fun_b_d_llist_fun_b_bool_fun_b_d_llist_llist_fun_b_b_fun_b_d_llist_llist_fun_fun_fun_fun_fun_fun$ 0)
(declare-sort Bool_bool_bool_fun_fun_a_bool_fun_bool_fun_fun_bool_bool_bool_fun_fun_b_bool_fun_bool_fun_fun_bool_fun_fun$ 0)
(declare-sort A_bool_llist_fun_a_a_fun_a_bool_llist_fun_fun_fun_b_bool_llist_fun_b_b_fun_b_bool_llist_fun_fun_fun_bool_fun_fun$ 0)
(declare-sort A_c_llist_fun_a_a_fun_a_c_llist_llist_fun_fun_fun_b_d_llist_fun_b_b_fun_b_d_llist_llist_fun_fun_fun_bool_fun_fun$ 0)
(declare-sort A_c_llist_llist_fun_a_a_fun_a_c_llist_llist_fun_fun_fun_b_d_llist_llist_fun_b_b_fun_b_d_llist_llist_fun_fun_fun_bool_fun_fun$ 0)
(declare-sort C_llist_c_llist_bool_fun_fun_a_c_llist_fun_bool_fun_fun_d_llist_d_llist_bool_fun_fun_b_d_llist_fun_bool_fun_fun_bool_fun_fun$ 0)
(declare-sort A_bool_fun_a_a_llist_fun_a_a_fun_a_a_llist_fun_fun_fun_fun_b_bool_fun_b_b_llist_fun_b_b_fun_b_b_llist_fun_fun_fun_fun_bool_fun_fun$ 0)
(declare-sort A_bool_fun_a_c_llist_fun_a_a_fun_a_c_llist_fun_fun_fun_fun_a_bool_fun_a_c_llist_fun_a_a_fun_a_c_llist_fun_fun_fun_fun_bool_fun_fun$ 0)
(declare-sort A_bool_fun_a_c_llist_fun_a_a_fun_a_c_llist_fun_fun_fun_fun_b_bool_fun_b_d_llist_fun_b_b_fun_b_d_llist_fun_fun_fun_fun_bool_fun_fun$ 0)
(declare-sort A_bool_fun_a_d_llist_fun_a_a_fun_a_d_llist_fun_fun_fun_fun_a_bool_fun_a_b_llist_fun_a_a_fun_a_b_llist_fun_fun_fun_fun_bool_fun_fun$ 0)
(declare-sort A_bool_fun_a_d_llist_fun_a_a_fun_a_d_llist_fun_fun_fun_fun_a_bool_fun_a_c_llist_fun_a_a_fun_a_c_llist_fun_fun_fun_fun_bool_fun_fun$ 0)
(declare-sort A_bool_fun_a_d_llist_fun_a_a_fun_a_d_llist_fun_fun_fun_fun_b_bool_fun_b_c_llist_fun_b_b_fun_b_c_llist_fun_fun_fun_fun_bool_fun_fun$ 0)
(declare-sort B_bool_fun_b_d_llist_fun_b_b_fun_b_d_llist_fun_fun_fun_fun_a_bool_fun_a_c_llist_fun_a_a_fun_a_c_llist_fun_fun_fun_fun_bool_fun_fun$ 0)
(declare-sort B_bool_fun_b_d_llist_fun_b_b_fun_b_d_llist_fun_fun_fun_fun_b_bool_fun_b_d_llist_fun_b_b_fun_b_d_llist_fun_fun_fun_fun_bool_fun_fun$ 0)
(declare-sort A_bool_fun_a_bool_llist_fun_a_a_fun_a_bool_llist_fun_fun_fun_fun_b_bool_fun_b_bool_llist_fun_b_b_fun_b_bool_llist_fun_fun_fun_fun_bool_fun_fun$ 0)
(declare-sort A_a_fun_a_bool_fun_a_a_llist_fun_a_a_fun_a_a_llist_fun_fun_fun_fun_fun_b_b_fun_b_bool_fun_b_b_llist_fun_b_b_fun_b_b_llist_fun_fun_fun_fun_fun_bool_fun_fun$ 0)
(declare-sort A_bool_fun_a_c_llist_llist_fun_a_a_fun_a_c_llist_llist_fun_fun_fun_fun_b_bool_fun_b_d_llist_llist_fun_b_b_fun_b_d_llist_llist_fun_fun_fun_fun_bool_fun_fun$ 0)
(declare-sort A_c_fun_a_bool_fun_a_c_llist_fun_a_a_fun_a_c_llist_fun_fun_fun_fun_fun_a_c_fun_a_bool_fun_a_c_llist_fun_a_a_fun_a_c_llist_fun_fun_fun_fun_fun_bool_fun_fun$ 0)
(declare-sort A_c_fun_a_bool_fun_a_c_llist_fun_a_a_fun_a_c_llist_fun_fun_fun_fun_fun_b_d_fun_b_bool_fun_b_d_llist_fun_b_b_fun_b_d_llist_fun_fun_fun_fun_fun_bool_fun_fun$ 0)
(declare-sort A_d_fun_a_bool_fun_a_d_llist_fun_a_a_fun_a_d_llist_fun_fun_fun_fun_fun_a_b_fun_a_bool_fun_a_b_llist_fun_a_a_fun_a_b_llist_fun_fun_fun_fun_fun_bool_fun_fun$ 0)
(declare-sort A_d_fun_a_bool_fun_a_d_llist_fun_a_a_fun_a_d_llist_fun_fun_fun_fun_fun_a_c_fun_a_bool_fun_a_c_llist_fun_a_a_fun_a_c_llist_fun_fun_fun_fun_fun_bool_fun_fun$ 0)
(declare-sort A_d_fun_a_bool_fun_a_d_llist_fun_a_a_fun_a_d_llist_fun_fun_fun_fun_fun_b_c_fun_b_bool_fun_b_c_llist_fun_b_b_fun_b_c_llist_fun_fun_fun_fun_fun_bool_fun_fun$ 0)
(declare-sort B_d_fun_b_bool_fun_b_d_llist_fun_b_b_fun_b_d_llist_fun_fun_fun_fun_fun_a_c_fun_a_bool_fun_a_c_llist_fun_a_a_fun_a_c_llist_fun_fun_fun_fun_fun_bool_fun_fun$ 0)
(declare-sort B_d_fun_b_bool_fun_b_d_llist_fun_b_b_fun_b_d_llist_fun_fun_fun_fun_fun_b_d_fun_b_bool_fun_b_d_llist_fun_b_b_fun_b_d_llist_fun_fun_fun_fun_fun_bool_fun_fun$ 0)
(declare-sort A_bool_fun_a_bool_fun_a_bool_llist_fun_a_a_fun_a_bool_llist_fun_fun_fun_fun_fun_b_bool_fun_b_bool_fun_b_bool_llist_fun_b_b_fun_b_bool_llist_fun_fun_fun_fun_fun_bool_fun_fun$ 0)
(declare-sort A_c_llist_fun_a_bool_fun_a_c_llist_llist_fun_a_a_fun_a_c_llist_llist_fun_fun_fun_fun_fun_b_d_llist_fun_b_bool_fun_b_d_llist_llist_fun_b_b_fun_b_d_llist_llist_fun_fun_fun_fun_fun_bool_fun_fun$ 0)
(declare-sort C_llist$ 0)
(declare-sort D_llist$ 0)
(declare-sort B_llist$ 0)
(declare-sort C_llist_llist$ 0)
(declare-sort A_llist$ 0)
(declare-sort D_llist_llist$ 0)
(declare-fun lNil$ () C_llist$)
(declare-fun lhd$ (C_llist$) C$)
(declare-fun ltl$ (C_llist$) C_llist$)
(declare-fun lCons$ (C$ C_llist$) C_llist$)
(declare-fun lNil$a () D_llist$)
(declare-fun lhd$a (D_llist$) D$)
(declare-fun ltl$a (D_llist$) D_llist$)
(declare-fun lCons$a (D$ D_llist$) D_llist$)
(declare-fun lNil$b () B_llist$)
(declare-fun lhd$b (B_llist$) B$)
(declare-fun ltl$b (B_llist$) B_llist$)
(declare-fun lCons$b (B$ B_llist$) B_llist$)
(declare-fun lNil$c () C_llist_llist$)
(declare-fun lhd$c (C_llist_llist$) C_llist$)
(declare-fun ltl$c (C_llist_llist$) C_llist_llist$)
(declare-fun lCons$c (C_llist$ C_llist_llist$) C_llist_llist$)
(declare-fun lNil$d () A_llist$)
(declare-fun lhd$d (A_llist$) A$)
(declare-fun ltl$d (A_llist$) A_llist$)
(declare-fun lCons$d (A$ A_llist$) A_llist$)
(declare-fun lNil$e () D_llist_llist$)
(declare-fun lhd$e (D_llist_llist$) D_llist$)
(declare-fun ltl$e (D_llist_llist$) D_llist_llist$)
(declare-fun lCons$e (D_llist$ D_llist_llist$) D_llist_llist$)
(declare-fun a$ () A_b_bool_fun_fun$)
(declare-fun b$ () C_d_bool_fun_fun$)
(declare-fun x$ () A$)
(declare-fun y$ () B$)
(declare-fun uu$ () Bool_bool_bool_fun_fun$)
(declare-fun xa$ () A$)
(declare-fun ya$ () B$)
(declare-fun uua$ () C_c_bool_fun_fun$)
(declare-fun uub$ () C_llist_c_llist_bool_fun_fun$)
(declare-fun uuc$ () A_a_bool_fun_fun$)
(declare-fun uud$ (D_llist_set$) D_llist_bool_fun$)
(declare-fun uue$ (C_llist_set$) C_llist_bool_fun$)
(declare-fun uuf$ () A_c_llist_fun_a_c_llist_fun_bool_fun_fun$)
(declare-fun uug$ () A_bool_fun_a_bool_fun_bool_fun_fun$)
(declare-fun uuh$ () A_c_fun_a_c_fun_bool_fun_fun$)
(declare-fun uui$ () A_a_fun_a_a_fun_bool_fun_fun$)
(declare-fun uuj$ () Bool_a_a_a_fun_fun_fun$)
(declare-fun uuk$ () Bool_b_b_b_fun_fun_fun$)
(declare-fun uul$ () A_a_bool_fun_bool_fun_fun$)
(declare-fun uum$ () B_b_bool_fun_bool_fun_fun$)
(declare-fun uun$ () A_a_a_fun_a_fun_fun$)
(declare-fun uuo$ () B_b_b_fun_b_fun_fun$)
(declare-fun uup$ () A_a_c_fun_c_fun_fun$)
(declare-fun uuq$ () B_b_d_fun_d_fun_fun$)
(declare-fun uur$ () A_a_c_llist_fun_c_llist_fun_fun$)
(declare-fun uus$ () B_b_d_llist_fun_d_llist_fun_fun$)
(declare-fun uut$ () Bool_bool_fun_bool_bool_fun_bool_fun_fun$)
(declare-fun uuu$ () Bool_bool_bool_fun_fun$)
(declare-fun uuv$ () B_b_bool_fun_fun$)
(declare-fun uuw$ () A_bool_fun_bool_fun$)
(declare-fun uux$ () B_bool_fun_bool_fun$)
(declare-fun comp$ () Bool_bool_fun_a_bool_fun_a_bool_fun_fun_fun$)
(declare-fun lHD1$ () A_c_fun$)
(declare-fun lHD2$ () B_d_fun$)
(declare-fun lTL1$ () A_a_fun$)
(declare-fun lTL2$ () B_b_fun$)
(declare-fun comp$a () Bool_bool_fun_b_bool_fun_b_bool_fun_fun_fun$)
(declare-fun comp$b () Bool_a_fun_a_bool_fun_a_a_fun_fun_fun$)
(declare-fun comp$c () Bool_b_fun_b_bool_fun_b_b_fun_fun_fun$)
(declare-fun comp$d () Bool_c_fun_a_bool_fun_a_c_fun_fun_fun$)
(declare-fun comp$e () Bool_d_fun_b_bool_fun_b_d_fun_fun_fun$)
(declare-fun comp$f () C_bool_fun_a_c_fun_a_bool_fun_fun_fun$)
(declare-fun comp$g () D_bool_fun_b_d_fun_b_bool_fun_fun_fun$)
(declare-fun comp$h () C_a_fun_a_c_fun_a_a_fun_fun_fun$)
(declare-fun comp$i () D_b_fun_b_d_fun_b_b_fun_fun_fun$)
(declare-fun comp$j () C_c_fun_a_c_fun_a_c_fun_fun_fun$)
(declare-fun comp$k () D_d_fun_b_d_fun_b_d_fun_fun_fun$)
(declare-fun comp$l () A_bool_fun_a_a_fun_a_bool_fun_fun_fun$)
(declare-fun comp$m () B_bool_fun_b_b_fun_b_bool_fun_fun_fun$)
(declare-fun comp$n () A_a_fun_a_a_fun_a_a_fun_fun_fun$)
(declare-fun comp$o () B_b_fun_b_b_fun_b_b_fun_fun_fun$)
(declare-fun comp$p () A_c_fun_a_a_fun_a_c_fun_fun_fun$)
(declare-fun comp$q () B_d_fun_b_b_fun_b_d_fun_fun_fun$)
(declare-fun comp$r () Bool_c_llist_fun_a_bool_fun_a_c_llist_fun_fun_fun$)
(declare-fun comp$s () Bool_d_llist_fun_b_bool_fun_b_d_llist_fun_fun_fun$)
(declare-fun lNil$f () Bool_llist$)
(declare-fun lnull$ () C_llist_bool_fun$)
(declare-fun mORE1$ () A_c_llist_fun$)
(declare-fun mORE2$ () B_d_llist_fun$)
(declare-fun reflp$ () A_a_bool_fun_fun_bool_fun$)
(declare-fun sTOP1$ () A_bool_fun$)
(declare-fun sTOP2$ () B_bool_fun$)
(declare-fun eq_onp$ () A_bool_fun_a_a_bool_fun_fun_fun$)
(declare-fun lnull$a () D_llist_bool_fun$)
(declare-fun lnull$b (Bool_llist$) Bool)
(declare-fun lnull$c (B_llist$) Bool)
(declare-fun lnull$d (C_llist_llist$) Bool)
(declare-fun lnull$e (A_llist$) Bool)
(declare-fun member$ (D_llist$ D_llist_set$) Bool)
(declare-fun reflp$a () B_b_bool_fun_fun_bool_fun$)
(declare-fun collect$ (D_llist_bool_fun$) D_llist_set$)
(declare-fun domainp$ () A_a_bool_fun_fun_a_bool_fun_fun$)
(declare-fun eq_onp$a () B_bool_fun_b_b_bool_fun_fun_fun$)
(declare-fun fun_app$ (B_bool_fun_bool_fun$ B_bool_fun$) Bool)
(declare-fun fun_ord$ () Bool_bool_bool_fun_fun_a_bool_fun_a_bool_fun_bool_fun_fun_fun$)
(declare-fun fun_upd$ () A_bool_fun_a_bool_a_bool_fun_fun_fun_fun$)
(declare-fun less_eq$ (A_bool_fun_b_bool_fun_bool_fun_fun$ A_bool_fun_b_bool_fun_bool_fun_fun$) Bool)
(declare-fun llexord$ (C_c_bool_fun_fun$) C_llist_c_llist_bool_fun_fun$)
(declare-fun lmember$ (D$) D_llist_bool_fun$)
(declare-fun member$a (C_llist$ C_llist_set$) Bool)
(declare-fun rel_fun$ (A_b_bool_fun_fun$ Bool_bool_bool_fun_fun$) A_bool_fun_b_bool_fun_bool_fun_fun$)
(declare-fun bi_total$ (A_b_bool_fun_fun$) Bool)
(declare-fun collect$a (C_llist_bool_fun$) C_llist_set$)
(declare-fun domainp$a () B_b_bool_fun_fun_b_bool_fun_fun$)
(declare-fun domainp$b (A_b_bool_fun_fun$) A_bool_fun$)
(declare-fun domainp$c (C_llist_d_llist_bool_fun_fun$) C_llist_bool_fun$)
(declare-fun domainp$d (C_d_bool_fun_fun$) C_bool_fun$)
(declare-fun fun_app$a (B_bool_fun$ B$) Bool)
(declare-fun fun_app$b (A_bool_fun_bool_fun$ A_bool_fun$) Bool)
(declare-fun fun_app$c (A_bool_fun$ A$) Bool)
(declare-fun fun_app$d (Bool_bool_fun$ Bool) Bool)
(declare-fun fun_app$e (Bool_bool_bool_fun_fun$ Bool) Bool_bool_fun$)
(declare-fun fun_app$f (D_llist_bool_fun$ D_llist$) Bool)
(declare-fun fun_app$g (C_llist_bool_fun$ C_llist$) Bool)
(declare-fun fun_app$h (C_llist_c_llist_bool_fun_fun$ C_llist$) C_llist_bool_fun$)
(declare-fun fun_app$i (Bool_bool_fun_bool_fun$ Bool_bool_fun$) Bool)
(declare-fun fun_app$j (Bool_bool_fun_bool_bool_fun_bool_fun_fun$ Bool_bool_fun$) Bool_bool_fun_bool_fun$)
(declare-fun fun_app$k (A_c_llist_fun_bool_fun$ A_c_llist_fun$) Bool)
(declare-fun fun_app$l (A_c_llist_fun_a_c_llist_fun_bool_fun_fun$ A_c_llist_fun$) A_c_llist_fun_bool_fun$)
(declare-fun fun_app$m (A_bool_fun_a_bool_fun_bool_fun_fun$ A_bool_fun$) A_bool_fun_bool_fun$)
(declare-fun fun_app$n (A_c_fun_bool_fun$ A_c_fun$) Bool)
(declare-fun fun_app$o (A_c_fun_a_c_fun_bool_fun_fun$ A_c_fun$) A_c_fun_bool_fun$)
(declare-fun fun_app$p (A_a_fun_bool_fun$ A_a_fun$) Bool)
(declare-fun fun_app$q (A_a_fun_a_a_fun_bool_fun_fun$ A_a_fun$) A_a_fun_bool_fun$)
(declare-fun fun_app$r (C_bool_fun$ C$) Bool)
(declare-fun fun_app$s (C_c_bool_fun_fun$ C$) C_bool_fun$)
(declare-fun fun_app$t (B_b_bool_fun_fun$ B$) B_bool_fun$)
(declare-fun fun_app$u (A_a_bool_fun_fun$ A$) A_bool_fun$)
(declare-fun fun_app$v (B_d_llist_fun_d_llist_fun$ B_d_llist_fun$) D_llist$)
(declare-fun fun_app$w (B_b_d_llist_fun_d_llist_fun_fun$ B$) B_d_llist_fun_d_llist_fun$)
(declare-fun fun_app$x (B_d_llist_fun$ B$) D_llist$)
(declare-fun fun_app$y (B_b_bool_fun_bool_fun_fun$ B$) B_bool_fun_bool_fun$)
(declare-fun fun_app$z (B_d_fun_d_fun$ B_d_fun$) D$)
(declare-fun fun_ord$a () Bool_bool_bool_fun_fun_b_bool_fun_b_bool_fun_bool_fun_fun_fun$)
(declare-fun fun_ord$b () Bool_c_bool_fun_fun_a_bool_fun_a_c_fun_bool_fun_fun_fun$)
(declare-fun fun_ord$c () Bool_d_bool_fun_fun_b_bool_fun_b_d_fun_bool_fun_fun_fun$)
(declare-fun fun_ord$d () A_bool_bool_fun_fun_a_a_fun_a_bool_fun_bool_fun_fun_fun$)
(declare-fun fun_ord$e () B_bool_bool_fun_fun_b_b_fun_b_bool_fun_bool_fun_fun_fun$)
(declare-fun fun_ord$f () A_c_bool_fun_fun_a_a_fun_a_c_fun_bool_fun_fun_fun$)
(declare-fun fun_ord$g () B_d_bool_fun_fun_b_b_fun_b_d_fun_bool_fun_fun_fun$)
(declare-fun fun_ord$h () C_bool_bool_fun_fun_a_c_fun_a_bool_fun_bool_fun_fun_fun$)
(declare-fun fun_ord$i () D_bool_bool_fun_fun_b_d_fun_b_bool_fun_bool_fun_fun_fun$)
(declare-fun fun_ord$j () C_c_bool_fun_fun_a_c_fun_a_c_fun_bool_fun_fun_fun$)
(declare-fun fun_ord$k () D_d_bool_fun_fun_b_d_fun_b_d_fun_bool_fun_fun_fun$)
(declare-fun fun_ord$l () Bool_a_bool_fun_fun_a_bool_fun_a_a_fun_bool_fun_fun_fun$)
(declare-fun fun_ord$m () Bool_b_bool_fun_fun_b_bool_fun_b_b_fun_bool_fun_fun_fun$)
(declare-fun fun_ord$n () A_a_bool_fun_fun_a_a_fun_a_a_fun_bool_fun_fun_fun$)
(declare-fun fun_ord$o () B_b_bool_fun_fun_b_b_fun_b_b_fun_bool_fun_fun_fun$)
(declare-fun fun_ord$p () C_a_bool_fun_fun_a_c_fun_a_a_fun_bool_fun_fun_fun$)
(declare-fun fun_ord$q () D_b_bool_fun_fun_b_d_fun_b_b_fun_bool_fun_fun_fun$)
(declare-fun fun_ord$r () Bool_c_llist_bool_fun_fun_a_bool_fun_a_c_llist_fun_bool_fun_fun_fun$)
(declare-fun fun_ord$s () Bool_d_llist_bool_fun_fun_b_bool_fun_b_d_llist_fun_bool_fun_fun_fun$)
(declare-fun fun_upd$a () B_bool_fun_b_bool_b_bool_fun_fun_fun_fun$)
(declare-fun fun_upd$b () A_a_fun_a_a_a_a_fun_fun_fun_fun$)
(declare-fun fun_upd$c () B_b_fun_b_b_b_b_fun_fun_fun_fun$)
(declare-fun fun_upd$d () A_c_fun_a_c_a_c_fun_fun_fun_fun$)
(declare-fun fun_upd$e () B_d_fun_b_d_b_d_fun_fun_fun_fun$)
(declare-fun fun_upd$f () A_c_llist_fun_a_c_llist_a_c_llist_fun_fun_fun_fun$)
(declare-fun fun_upd$g () B_d_llist_fun_b_d_llist_b_d_llist_fun_fun_fun_fun$)
(declare-fun iS_LNIL1$ () A_bool_fun$)
(declare-fun iS_LNIL2$ () B_bool_fun$)
(declare-fun less_eq$a (A_a_fun_b_b_fun_bool_fun_fun$ A_a_fun_b_b_fun_bool_fun_fun$) Bool)
(declare-fun less_eq$b (A_c_fun_b_d_fun_bool_fun_fun$ A_c_fun_b_d_fun_bool_fun_fun$) Bool)
(declare-fun less_eq$c (A_c_llist_fun_b_d_llist_fun_bool_fun_fun$ A_c_llist_fun_b_d_llist_fun_bool_fun_fun$) Bool)
(declare-fun less_eq$d (A_b_bool_fun_fun$ A_b_bool_fun_fun$) Bool)
(declare-fun less_eq$e (Bool_bool_bool_fun_fun$ Bool_bool_bool_fun_fun$) Bool)
(declare-fun less_eq$f (C_d_bool_fun_fun$ C_d_bool_fun_fun$) Bool)
(declare-fun less_eq$g (C_llist_d_llist_bool_fun_fun$ C_llist_d_llist_bool_fun_fun$) Bool)
(declare-fun llexord$a (D_d_bool_fun_fun$) D_llist_d_llist_bool_fun_fun$)
(declare-fun lmember$a (C$) C_llist_bool_fun$)
(declare-fun monotone$ () A_a_bool_fun_fun_bool_bool_bool_fun_fun_a_bool_fun_bool_fun_fun_fun$)
(declare-fun rel_fun$a (A_b_bool_fun_fun$ A_b_bool_fun_fun$) A_a_fun_b_b_fun_bool_fun_fun$)
(declare-fun rel_fun$b (A_b_bool_fun_fun$ C_d_bool_fun_fun$) A_c_fun_b_d_fun_bool_fun_fun$)
(declare-fun rel_fun$c (A_b_bool_fun_fun$ C_llist_d_llist_bool_fun_fun$) A_c_llist_fun_b_d_llist_fun_bool_fun_fun$)
(declare-fun rel_fun$d (A_bool_fun_b_bool_fun_bool_fun_fun$ A_bool_fun_a_a_fun_a_bool_llist_fun_fun_fun_b_bool_fun_b_b_fun_b_bool_llist_fun_fun_fun_bool_fun_fun$ A_bool_fun_a_bool_fun_a_a_fun_a_bool_llist_fun_fun_fun_fun$ B_bool_fun_b_bool_fun_b_b_fun_b_bool_llist_fun_fun_fun_fun$) Bool)
(declare-fun rel_fun$e (A_bool_fun_b_bool_fun_bool_fun_fun$ A_a_fun_a_bool_llist_fun_fun_b_b_fun_b_bool_llist_fun_fun_bool_fun_fun$) A_bool_fun_a_a_fun_a_bool_llist_fun_fun_fun_b_bool_fun_b_b_fun_b_bool_llist_fun_fun_fun_bool_fun_fun$)
(declare-fun rel_fun$f (A_a_fun_b_b_fun_bool_fun_fun$ A_bool_llist_fun_b_bool_llist_fun_bool_fun_fun$) A_a_fun_a_bool_llist_fun_fun_b_b_fun_b_bool_llist_fun_fun_bool_fun_fun$)
(declare-fun rel_fun$g (A_b_bool_fun_fun$ Bool_llist_bool_llist_bool_fun_fun$) A_bool_llist_fun_b_bool_llist_fun_bool_fun_fun$)
(declare-fun rel_fun$h (A_bool_fun_b_bool_fun_bool_fun_fun$ A_a_fun_a_a_fun_a_a_llist_fun_fun_fun_b_b_fun_b_b_fun_b_b_llist_fun_fun_fun_bool_fun_fun$ A_bool_fun_a_a_fun_a_a_fun_a_a_llist_fun_fun_fun_fun$ B_bool_fun_b_b_fun_b_b_fun_b_b_llist_fun_fun_fun_fun$) Bool)
(declare-fun rel_fun$i (A_a_fun_b_b_fun_bool_fun_fun$ A_a_fun_a_a_llist_fun_fun_b_b_fun_b_b_llist_fun_fun_bool_fun_fun$) A_a_fun_a_a_fun_a_a_llist_fun_fun_fun_b_b_fun_b_b_fun_b_b_llist_fun_fun_fun_bool_fun_fun$)
(declare-fun rel_fun$j (A_a_fun_b_b_fun_bool_fun_fun$ A_a_llist_fun_b_b_llist_fun_bool_fun_fun$) A_a_fun_a_a_llist_fun_fun_b_b_fun_b_b_llist_fun_fun_bool_fun_fun$)
(declare-fun rel_fun$k (A_b_bool_fun_fun$ A_llist_b_llist_bool_fun_fun$) A_a_llist_fun_b_b_llist_fun_bool_fun_fun$)
(declare-fun rel_fun$l (A_bool_fun_b_bool_fun_bool_fun_fun$ A_c_fun_a_a_fun_a_c_llist_fun_fun_fun_b_d_fun_b_b_fun_b_d_llist_fun_fun_fun_bool_fun_fun$ A_bool_fun_a_c_fun_a_a_fun_a_c_llist_fun_fun_fun_fun$ B_bool_fun_b_d_fun_b_b_fun_b_d_llist_fun_fun_fun_fun$) Bool)
(declare-fun rel_fun$m (A_c_fun_b_d_fun_bool_fun_fun$ A_a_fun_a_c_llist_fun_fun_b_b_fun_b_d_llist_fun_fun_bool_fun_fun$) A_c_fun_a_a_fun_a_c_llist_fun_fun_fun_b_d_fun_b_b_fun_b_d_llist_fun_fun_fun_bool_fun_fun$)
(declare-fun rel_fun$n (A_a_fun_b_b_fun_bool_fun_fun$ A_c_llist_fun_b_d_llist_fun_bool_fun_fun$) A_a_fun_a_c_llist_fun_fun_b_b_fun_b_d_llist_fun_fun_bool_fun_fun$)
(declare-fun rel_fun$o (A_bool_fun_b_bool_fun_bool_fun_fun$ A_c_llist_fun_a_a_fun_a_c_llist_llist_fun_fun_fun_b_d_llist_fun_b_b_fun_b_d_llist_llist_fun_fun_fun_bool_fun_fun$ A_bool_fun_a_c_llist_fun_a_a_fun_a_c_llist_llist_fun_fun_fun_fun$ B_bool_fun_b_d_llist_fun_b_b_fun_b_d_llist_llist_fun_fun_fun_fun$) Bool)
(declare-fun rel_fun$p (A_c_llist_fun_b_d_llist_fun_bool_fun_fun$ A_a_fun_a_c_llist_llist_fun_fun_b_b_fun_b_d_llist_llist_fun_fun_bool_fun_fun$) A_c_llist_fun_a_a_fun_a_c_llist_llist_fun_fun_fun_b_d_llist_fun_b_b_fun_b_d_llist_llist_fun_fun_fun_bool_fun_fun$)
(declare-fun rel_fun$q (A_a_fun_b_b_fun_bool_fun_fun$ A_c_llist_llist_fun_b_d_llist_llist_fun_bool_fun_fun$) A_a_fun_a_c_llist_llist_fun_fun_b_b_fun_b_d_llist_llist_fun_fun_bool_fun_fun$)
(declare-fun rel_fun$r (A_b_bool_fun_fun$ C_llist_llist_d_llist_llist_bool_fun_fun$) A_c_llist_llist_fun_b_d_llist_llist_fun_bool_fun_fun$)
(declare-fun rel_fun$s (B_bool_fun_b_bool_fun_bool_fun_fun$ B_b_fun_b_b_fun_b_b_llist_fun_fun_fun_b_b_fun_b_b_fun_b_b_llist_fun_fun_fun_bool_fun_fun$ B_bool_fun_b_b_fun_b_b_fun_b_b_llist_fun_fun_fun_fun$ B_bool_fun_b_b_fun_b_b_fun_b_b_llist_fun_fun_fun_fun$) Bool)
(declare-fun rel_fun$t (B_b_bool_fun_fun$ Bool_bool_bool_fun_fun$) B_bool_fun_b_bool_fun_bool_fun_fun$)
(declare-fun rel_fun$u (B_b_fun_b_b_fun_bool_fun_fun$ B_b_fun_b_b_llist_fun_fun_b_b_fun_b_b_llist_fun_fun_bool_fun_fun$) B_b_fun_b_b_fun_b_b_llist_fun_fun_fun_b_b_fun_b_b_fun_b_b_llist_fun_fun_fun_bool_fun_fun$)
(declare-fun rel_fun$v (B_b_bool_fun_fun$ B_b_bool_fun_fun$) B_b_fun_b_b_fun_bool_fun_fun$)
(declare-fun rel_fun$w (B_b_fun_b_b_fun_bool_fun_fun$ B_b_llist_fun_b_b_llist_fun_bool_fun_fun$) B_b_fun_b_b_llist_fun_fun_b_b_fun_b_b_llist_fun_fun_bool_fun_fun$)
(declare-fun rel_fun$x (B_b_bool_fun_fun$ B_llist_b_llist_bool_fun_fun$) B_b_llist_fun_b_b_llist_fun_bool_fun_fun$)
(declare-fun rel_fun$y (B_bool_fun_a_bool_fun_bool_fun_fun$ B_b_fun_b_b_fun_b_b_llist_fun_fun_fun_a_bool_fun_a_a_fun_a_bool_llist_fun_fun_fun_bool_fun_fun$ B_bool_fun_b_b_fun_b_b_fun_b_b_llist_fun_fun_fun_fun$ A_bool_fun_a_bool_fun_a_a_fun_a_bool_llist_fun_fun_fun_fun$) Bool)
(declare-fun rel_fun$z (B_a_bool_fun_fun$ Bool_bool_bool_fun_fun$) B_bool_fun_a_bool_fun_bool_fun_fun$)
(declare-fun relcompp$ (C_c_bool_fun_fun$ C_d_bool_fun_fun$) C_d_bool_fun_fun$)
(declare-fun rtranclp$ () A_a_bool_fun_fun_a_a_bool_fun_fun_fun$)
(declare-fun bi_total$a (C_d_bool_fun_fun$) Bool)
(declare-fun bi_total$b (C_llist_d_llist_bool_fun_fun$) Bool)
(declare-fun bi_total$c (Bool_bool_bool_fun_fun$) Bool)
(declare-fun bi_total$d (A_bool_fun_b_bool_fun_bool_fun_fun$) Bool)
(declare-fun bi_total$e (A_a_fun_b_b_fun_bool_fun_fun$) Bool)
(declare-fun bi_total$f (A_c_fun_b_d_fun_bool_fun_fun$) Bool)
(declare-fun bi_total$g (A_c_llist_fun_b_d_llist_fun_bool_fun_fun$) Bool)
(declare-fun bi_unique$ (A_b_bool_fun_fun$) Bool)
(declare-fun fun_app$aa (B_b_d_fun_d_fun_fun$ B$) B_d_fun_d_fun$)
(declare-fun fun_app$ab (B_d_fun$ B$) D$)
(declare-fun fun_app$ac (B_b_fun_b_fun$ B_b_fun$) B$)
(declare-fun fun_app$ad (B_b_b_fun_b_fun_fun$ B$) B_b_fun_b_fun$)
(declare-fun fun_app$ae (B_b_fun$ B$) B$)
(declare-fun fun_app$af (A_c_llist_fun_c_llist_fun$ A_c_llist_fun$) C_llist$)
(declare-fun fun_app$ag (A_a_c_llist_fun_c_llist_fun_fun$ A$) A_c_llist_fun_c_llist_fun$)
(declare-fun fun_app$ah (A_c_llist_fun$ A$) C_llist$)
(declare-fun fun_app$ai (A_a_bool_fun_bool_fun_fun$ A$) A_bool_fun_bool_fun$)
(declare-fun fun_app$aj (A_c_fun_c_fun$ A_c_fun$) C$)
(declare-fun fun_app$ak (A_a_c_fun_c_fun_fun$ A$) A_c_fun_c_fun$)
(declare-fun fun_app$al (A_c_fun$ A$) C$)
(declare-fun fun_app$am (A_a_fun_a_fun$ A_a_fun$) A$)
(declare-fun fun_app$an (A_a_a_fun_a_fun_fun$ A$) A_a_fun_a_fun$)
(declare-fun fun_app$ao (A_a_fun$ A$) A$)
(declare-fun fun_app$ap (B_b_b_fun_fun$ B$) B_b_fun$)
(declare-fun fun_app$aq (Bool_b_b_b_fun_fun_fun$ Bool) B_b_b_fun_fun$)
(declare-fun fun_app$ar (A_a_a_fun_fun$ A$) A_a_fun$)
(declare-fun fun_app$as (Bool_a_a_a_fun_fun_fun$ Bool) A_a_a_fun_fun$)
(declare-fun fun_app$at (A_a_fun_a_c_llist_fun_fun$ A_a_fun$) A_c_llist_fun$)
(declare-fun fun_app$au (A_c_llist_fun_a_a_fun_a_c_llist_fun_fun_fun$ A_c_llist_fun$) A_a_fun_a_c_llist_fun_fun$)
(declare-fun fun_app$av (A_bool_fun_a_c_llist_fun_a_a_fun_a_c_llist_fun_fun_fun_fun$ A_bool_fun$) A_c_llist_fun_a_a_fun_a_c_llist_fun_fun_fun$)
(declare-fun fun_app$aw (A_c_fun_a_bool_fun_a_c_llist_fun_a_a_fun_a_c_llist_fun_fun_fun_fun_fun$ A_c_fun$) A_bool_fun_a_c_llist_fun_a_a_fun_a_c_llist_fun_fun_fun_fun$)
(declare-fun fun_app$ax (A_bool_fun_a_c_fun_a_bool_fun_a_c_llist_fun_a_a_fun_a_c_llist_fun_fun_fun_fun_fun_fun$ A_bool_fun$) A_c_fun_a_bool_fun_a_c_llist_fun_a_a_fun_a_c_llist_fun_fun_fun_fun_fun$)
(declare-fun fun_app$ay (B_b_fun_b_d_llist_fun_fun$ B_b_fun$) B_d_llist_fun$)
(declare-fun fun_app$az (B_d_llist_fun_b_b_fun_b_d_llist_fun_fun_fun$ B_d_llist_fun$) B_b_fun_b_d_llist_fun_fun$)
(declare-fun fun_app$ba (B_bool_fun_b_d_llist_fun_b_b_fun_b_d_llist_fun_fun_fun_fun$ B_bool_fun$) B_d_llist_fun_b_b_fun_b_d_llist_fun_fun_fun$)
(declare-fun fun_app$bb (B_d_fun_b_bool_fun_b_d_llist_fun_b_b_fun_b_d_llist_fun_fun_fun_fun_fun$ B_d_fun$) B_bool_fun_b_d_llist_fun_b_b_fun_b_d_llist_fun_fun_fun_fun$)
(declare-fun fun_app$bc (B_bool_fun_b_d_fun_b_bool_fun_b_d_llist_fun_b_b_fun_b_d_llist_fun_fun_fun_fun_fun_fun$ B_bool_fun$) B_d_fun_b_bool_fun_b_d_llist_fun_b_b_fun_b_d_llist_fun_fun_fun_fun_fun$)
(declare-fun fun_app$bd (B_bool_llist_fun$ B$) Bool_llist$)
(declare-fun fun_app$be (B_b_fun_b_bool_llist_fun_fun$ B_b_fun$) B_bool_llist_fun$)
(declare-fun fun_app$bf (B_bool_llist_fun_b_b_fun_b_bool_llist_fun_fun_fun$ B_bool_llist_fun$) B_b_fun_b_bool_llist_fun_fun$)
(declare-fun fun_app$bg (B_bool_fun_b_bool_llist_fun_b_b_fun_b_bool_llist_fun_fun_fun_fun$ B_bool_fun$) B_bool_llist_fun_b_b_fun_b_bool_llist_fun_fun_fun$)
(declare-fun fun_app$bh (B_bool_fun_b_bool_fun_b_bool_llist_fun_b_b_fun_b_bool_llist_fun_fun_fun_fun_fun$ B_bool_fun$) B_bool_fun_b_bool_llist_fun_b_b_fun_b_bool_llist_fun_fun_fun_fun$)
(declare-fun fun_app$bi (B_bool_fun_b_bool_fun_b_bool_fun_b_bool_llist_fun_b_b_fun_b_bool_llist_fun_fun_fun_fun_fun_fun$ B_bool_fun$) B_bool_fun_b_bool_fun_b_bool_llist_fun_b_b_fun_b_bool_llist_fun_fun_fun_fun_fun$)
(declare-fun fun_app$bj (B_b_llist_fun$ B$) B_llist$)
(declare-fun fun_app$bk (B_b_fun_b_b_llist_fun_fun$ B_b_fun$) B_b_llist_fun$)
(declare-fun fun_app$bl (B_b_llist_fun_b_b_fun_b_b_llist_fun_fun_fun$ B_b_llist_fun$) B_b_fun_b_b_llist_fun_fun$)
(declare-fun fun_app$bm (B_bool_fun_b_b_llist_fun_b_b_fun_b_b_llist_fun_fun_fun_fun$ B_bool_fun$) B_b_llist_fun_b_b_fun_b_b_llist_fun_fun_fun$)
(declare-fun fun_app$bn (B_b_fun_b_bool_fun_b_b_llist_fun_b_b_fun_b_b_llist_fun_fun_fun_fun_fun$ B_b_fun$) B_bool_fun_b_b_llist_fun_b_b_fun_b_b_llist_fun_fun_fun_fun$)
(declare-fun fun_app$bo (B_bool_fun_b_b_fun_b_bool_fun_b_b_llist_fun_b_b_fun_b_b_llist_fun_fun_fun_fun_fun_fun$ B_bool_fun$) B_b_fun_b_bool_fun_b_b_llist_fun_b_b_fun_b_b_llist_fun_fun_fun_fun_fun$)
(declare-fun fun_app$bp (A_c_llist_llist_fun$ A$) C_llist_llist$)
(declare-fun fun_app$bq (A_a_fun_a_c_llist_llist_fun_fun$ A_a_fun$) A_c_llist_llist_fun$)
(declare-fun fun_app$br (A_c_llist_llist_fun_a_a_fun_a_c_llist_llist_fun_fun_fun$ A_c_llist_llist_fun$) A_a_fun_a_c_llist_llist_fun_fun$)
(declare-fun fun_app$bs (A_bool_fun_a_c_llist_llist_fun_a_a_fun_a_c_llist_llist_fun_fun_fun_fun$ A_bool_fun$) A_c_llist_llist_fun_a_a_fun_a_c_llist_llist_fun_fun_fun$)
(declare-fun fun_app$bt (A_c_llist_fun_a_bool_fun_a_c_llist_llist_fun_a_a_fun_a_c_llist_llist_fun_fun_fun_fun_fun$ A_c_llist_fun$) A_bool_fun_a_c_llist_llist_fun_a_a_fun_a_c_llist_llist_fun_fun_fun_fun$)
(declare-fun fun_app$bu (A_bool_fun_a_c_llist_fun_a_bool_fun_a_c_llist_llist_fun_a_a_fun_a_c_llist_llist_fun_fun_fun_fun_fun_fun$ A_bool_fun$) A_c_llist_fun_a_bool_fun_a_c_llist_llist_fun_a_a_fun_a_c_llist_llist_fun_fun_fun_fun_fun$)
(declare-fun fun_app$bv (A_bool_llist_fun$ A$) Bool_llist$)
(declare-fun fun_app$bw (A_a_fun_a_bool_llist_fun_fun$ A_a_fun$) A_bool_llist_fun$)
(declare-fun fun_app$bx (A_bool_llist_fun_a_a_fun_a_bool_llist_fun_fun_fun$ A_bool_llist_fun$) A_a_fun_a_bool_llist_fun_fun$)
(declare-fun fun_app$by (A_bool_fun_a_bool_llist_fun_a_a_fun_a_bool_llist_fun_fun_fun_fun$ A_bool_fun$) A_bool_llist_fun_a_a_fun_a_bool_llist_fun_fun_fun$)
(declare-fun fun_app$bz (A_bool_fun_a_bool_fun_a_bool_llist_fun_a_a_fun_a_bool_llist_fun_fun_fun_fun_fun$ A_bool_fun$) A_bool_fun_a_bool_llist_fun_a_a_fun_a_bool_llist_fun_fun_fun_fun$)
(declare-fun fun_app$ca (A_bool_fun_a_bool_fun_a_bool_fun_a_bool_llist_fun_a_a_fun_a_bool_llist_fun_fun_fun_fun_fun_fun$ A_bool_fun$) A_bool_fun_a_bool_fun_a_bool_llist_fun_a_a_fun_a_bool_llist_fun_fun_fun_fun_fun$)
(declare-fun fun_app$cb (A_a_llist_fun$ A$) A_llist$)
(declare-fun fun_app$cc (A_a_fun_a_a_llist_fun_fun$ A_a_fun$) A_a_llist_fun$)
(declare-fun fun_app$cd (A_a_llist_fun_a_a_fun_a_a_llist_fun_fun_fun$ A_a_llist_fun$) A_a_fun_a_a_llist_fun_fun$)
(declare-fun fun_app$ce (A_bool_fun_a_a_llist_fun_a_a_fun_a_a_llist_fun_fun_fun_fun$ A_bool_fun$) A_a_llist_fun_a_a_fun_a_a_llist_fun_fun_fun$)
(declare-fun fun_app$cf (A_a_fun_a_bool_fun_a_a_llist_fun_a_a_fun_a_a_llist_fun_fun_fun_fun_fun$ A_a_fun$) A_bool_fun_a_a_llist_fun_a_a_fun_a_a_llist_fun_fun_fun_fun$)
(declare-fun fun_app$cg (A_bool_fun_a_a_fun_a_bool_fun_a_a_llist_fun_a_a_fun_a_a_llist_fun_fun_fun_fun_fun_fun$ A_bool_fun$) A_a_fun_a_bool_fun_a_a_llist_fun_a_a_fun_a_a_llist_fun_fun_fun_fun_fun$)
(declare-fun fun_app$ch (A_b_bool_fun_fun$ A$) B_bool_fun$)
(declare-fun fun_app$ci (A_bool_fun_b_bool_fun_bool_fun_fun$ A_bool_fun$) B_bool_fun_bool_fun$)
(declare-fun fun_app$cj (B_b_fun_bool_fun$ B_b_fun$) Bool)
(declare-fun fun_app$ck (A_a_fun_b_b_fun_bool_fun_fun$ A_a_fun$) B_b_fun_bool_fun$)
(declare-fun fun_app$cl (B_d_fun_bool_fun$ B_d_fun$) Bool)
(declare-fun fun_app$cm (A_c_fun_b_d_fun_bool_fun_fun$ A_c_fun$) B_d_fun_bool_fun$)
(declare-fun fun_app$cn (B_d_llist_fun_bool_fun$ B_d_llist_fun$) Bool)
(declare-fun fun_app$co (A_c_llist_fun_b_d_llist_fun_bool_fun_fun$ A_c_llist_fun$) B_d_llist_fun_bool_fun$)
(declare-fun fun_app$cp (C_d_bool_fun_fun_c_llist_d_llist_bool_fun_fun_fun$ C_d_bool_fun_fun$) C_llist_d_llist_bool_fun_fun$)
(declare-fun fun_app$cq (B_b_fun_b_b_fun_b_b_llist_fun_fun_fun$ B_b_fun$) B_b_fun_b_b_llist_fun_fun$)
(declare-fun fun_app$cr (B_bool_fun_b_b_fun_b_b_fun_b_b_llist_fun_fun_fun_fun$ B_bool_fun$) B_b_fun_b_b_fun_b_b_llist_fun_fun_fun$)
(declare-fun fun_app$cs (A_c_llist_fun_a_a_fun_a_c_llist_llist_fun_fun_fun$ A_c_llist_fun$) A_a_fun_a_c_llist_llist_fun_fun$)
(declare-fun fun_app$ct (A_bool_fun_a_c_llist_fun_a_a_fun_a_c_llist_llist_fun_fun_fun_fun$ A_bool_fun$) A_c_llist_fun_a_a_fun_a_c_llist_llist_fun_fun_fun$)
(declare-fun fun_app$cu (A_bool_fun_a_a_fun_a_bool_llist_fun_fun_fun$ A_bool_fun$) A_a_fun_a_bool_llist_fun_fun$)
(declare-fun fun_app$cv (A_bool_fun_a_bool_fun_a_a_fun_a_bool_llist_fun_fun_fun_fun$ A_bool_fun$) A_bool_fun_a_a_fun_a_bool_llist_fun_fun_fun$)
(declare-fun fun_app$cw (A_c_fun_a_a_fun_a_c_llist_fun_fun_fun$ A_c_fun$) A_a_fun_a_c_llist_fun_fun$)
(declare-fun fun_app$cx (A_bool_fun_a_c_fun_a_a_fun_a_c_llist_fun_fun_fun_fun$ A_bool_fun$) A_c_fun_a_a_fun_a_c_llist_fun_fun_fun$)
(declare-fun fun_app$cy (A_a_fun_a_a_fun_a_a_llist_fun_fun_fun$ A_a_fun$) A_a_fun_a_a_llist_fun_fun$)
(declare-fun fun_app$cz (A_bool_fun_a_a_fun_a_a_fun_a_a_llist_fun_fun_fun_fun$ A_bool_fun$) A_a_fun_a_a_fun_a_a_llist_fun_fun_fun$)
(declare-fun fun_app$da (D_llist_d_llist_bool_fun_fun$ D_llist$) D_llist_bool_fun$)
(declare-fun fun_app$db (D_d_bool_fun_fun_d_llist_d_llist_bool_fun_fun_fun$ D_d_bool_fun_fun$) D_llist_d_llist_bool_fun_fun$)
(declare-fun fun_app$dc (D_llist_c_llist_bool_fun_fun$ D_llist$) C_llist_bool_fun$)
(declare-fun fun_app$dd (D_llist_b_llist_bool_fun_fun$ D_llist$) B_llist_bool_fun$)
(declare-fun fun_app$de (D_b_bool_fun_fun_d_llist_b_llist_bool_fun_fun_fun$ D_b_bool_fun_fun$) D_llist_b_llist_bool_fun_fun$)
(declare-fun fun_app$df (B_llist_bool_fun$ B_llist$) Bool)
(declare-fun fun_app$dg (C_c_bool_fun_fun_c_llist_c_llist_bool_fun_fun_fun$ C_c_bool_fun_fun$) C_llist_c_llist_bool_fun_fun$)
(declare-fun fun_app$dh (C_llist_a_llist_bool_fun_fun$ C_llist$) A_llist_bool_fun$)
(declare-fun fun_app$di (C_a_bool_fun_fun_c_llist_a_llist_bool_fun_fun_fun$ C_a_bool_fun_fun$) C_llist_a_llist_bool_fun_fun$)
(declare-fun fun_app$dj (A_llist_bool_fun$ A_llist$) Bool)
(declare-fun fun_app$dk (A_llist_b_llist_bool_fun_fun$ A_llist$) B_llist_bool_fun$)
(declare-fun fun_app$dl (C_llist_d_llist_bool_fun_fun$ C_llist$) D_llist_bool_fun$)
(declare-fun fun_app$dm (D_bool_fun$ D$) Bool)
(declare-fun fun_app$dn (D_d_bool_fun_fun$ D$) D_bool_fun$)
(declare-fun fun_app$do (D_c_bool_fun_fun$ D$) C_bool_fun$)
(declare-fun fun_app$dp (D_b_bool_fun_fun$ D$) B_bool_fun$)
(declare-fun fun_app$dq (C_a_bool_fun_fun$ C$) A_bool_fun$)
(declare-fun fun_app$dr (C_d_bool_fun_fun$ C$) D_bool_fun$)
(declare-fun fun_app$ds (Bool_bool_bool_fun_fun_a_bool_fun_a_bool_fun_bool_fun_fun_fun$ Bool_bool_bool_fun_fun$) A_bool_fun_a_bool_fun_bool_fun_fun$)
(declare-fun fun_app$dt (A_a_bool_fun_fun_a_a_fun_a_a_fun_bool_fun_fun_fun$ A_a_bool_fun_fun$) A_a_fun_a_a_fun_bool_fun_fun$)
(declare-fun fun_app$du (C_c_bool_fun_fun_a_c_fun_a_c_fun_bool_fun_fun_fun$ C_c_bool_fun_fun$) A_c_fun_a_c_fun_bool_fun_fun$)
(declare-fun fun_app$dv (B_b_b_fun_fun_bool_fun$ B_b_b_fun_fun$) Bool)
(declare-fun fun_app$dw (A_a_a_fun_fun_b_b_b_fun_fun_bool_fun_fun$ A_a_a_fun_fun$) B_b_b_fun_fun_bool_fun$)
(declare-fun fun_app$dx (Bool_c_bool_fun_fun_a_bool_fun_a_c_fun_bool_fun_fun_fun$ Bool_c_bool_fun_fun$) A_bool_fun_a_c_fun_bool_fun_fun$)
(declare-fun fun_app$dy (C_bool_bool_fun_fun_a_c_fun_a_bool_fun_bool_fun_fun_fun$ C_bool_bool_fun_fun$) A_c_fun_a_bool_fun_bool_fun_fun$)
(declare-fun fun_app$dz (D_llist_bool_fun_bool_fun$ D_llist_bool_fun$) Bool)
(declare-fun fun_app$ea (D_llist_bool_fun_d_llist_bool_fun_bool_fun_fun$ D_llist_bool_fun$) D_llist_bool_fun_bool_fun$)
(declare-fun fun_app$eb (C_llist_bool_fun_d_llist_bool_fun_bool_fun_fun$ C_llist_bool_fun$) D_llist_bool_fun_bool_fun$)
(declare-fun fun_app$ec (C_llist_d_llist_bool_fun_fun_c_llist_d_llist_bool_fun_fun_fun$ C_llist_d_llist_bool_fun_fun$) C_llist_d_llist_bool_fun_fun$)
(declare-fun fun_app$ed (D_llist_d_llist_bool_fun_fun_c_llist_d_llist_bool_fun_fun_fun$ D_llist_d_llist_bool_fun_fun$) C_llist_d_llist_bool_fun_fun$)
(declare-fun fun_app$ee (B_bool_fun_bool_fun_bool_fun$ B_bool_fun_bool_fun$) Bool)
(declare-fun fun_app$ef (A_bool_fun_bool_fun_b_bool_fun_bool_fun_bool_fun_fun$ A_bool_fun_bool_fun$) B_bool_fun_bool_fun_bool_fun$)
(declare-fun fun_app$eg (A_b_bool_fun_fun_a_b_bool_fun_fun_fun$ A_b_bool_fun_fun$) A_b_bool_fun_fun$)
(declare-fun fun_app$eh (Bool_bool_bool_fun_fun_bool_bool_bool_fun_fun_fun$ Bool_bool_bool_fun_fun$) Bool_bool_bool_fun_fun$)
(declare-fun fun_app$ei (B_b_bool_fun_fun_a_b_bool_fun_fun_fun$ B_b_bool_fun_fun$) A_b_bool_fun_fun$)
(declare-fun fun_app$ej (B_b_bool_fun_fun_bool_fun$ B_b_bool_fun_fun$) Bool)
(declare-fun fun_app$ek (A_a_bool_fun_fun_b_b_bool_fun_fun_bool_fun_fun$ A_a_bool_fun_fun$) B_b_bool_fun_fun_bool_fun$)
(declare-fun is_filter$ () A_bool_fun_bool_fun_bool_fun$)
(declare-fun monotone$a () B_b_bool_fun_fun_bool_bool_bool_fun_fun_b_bool_fun_bool_fun_fun_fun$)
(declare-fun monotone$b () A_a_bool_fun_fun_c_c_bool_fun_fun_a_c_fun_bool_fun_fun_fun$)
(declare-fun monotone$c () B_b_bool_fun_fun_d_d_bool_fun_fun_b_d_fun_bool_fun_fun_fun$)
(declare-fun monotone$d () A_a_bool_fun_fun_c_llist_c_llist_bool_fun_fun_a_c_llist_fun_bool_fun_fun_fun$)
(declare-fun monotone$e () B_b_bool_fun_fun_d_llist_d_llist_bool_fun_fun_b_d_llist_fun_bool_fun_fun_fun$)
(declare-fun monotone$f () A_a_bool_fun_fun_a_a_bool_fun_fun_a_a_fun_bool_fun_fun_fun$)
(declare-fun monotone$g () B_b_bool_fun_fun_b_b_bool_fun_fun_b_b_fun_bool_fun_fun_fun$)
(declare-fun rel_fun$aa (B_b_fun_a_bool_fun_bool_fun_fun$ B_b_fun_b_b_llist_fun_fun_a_a_fun_a_bool_llist_fun_fun_bool_fun_fun$) B_b_fun_b_b_fun_b_b_llist_fun_fun_fun_a_bool_fun_a_a_fun_a_bool_llist_fun_fun_fun_bool_fun_fun$)
(declare-fun rel_fun$ab (B_a_bool_fun_fun$ B_bool_bool_fun_fun$) B_b_fun_a_bool_fun_bool_fun_fun$)
(declare-fun rel_fun$ac (B_b_fun_a_a_fun_bool_fun_fun$ B_b_llist_fun_a_bool_llist_fun_bool_fun_fun$) B_b_fun_b_b_llist_fun_fun_a_a_fun_a_bool_llist_fun_fun_bool_fun_fun$)
(declare-fun rel_fun$ad (B_a_bool_fun_fun$ B_a_bool_fun_fun$) B_b_fun_a_a_fun_bool_fun_fun$)
(declare-fun rel_fun$ae (B_a_bool_fun_fun$ B_llist_bool_llist_bool_fun_fun$) B_b_llist_fun_a_bool_llist_fun_bool_fun_fun$)
(declare-fun rel_fun$af (B_bool_fun_a_bool_fun_bool_fun_fun$ B_b_fun_b_b_fun_b_b_llist_fun_fun_fun_a_c_fun_a_a_fun_a_c_llist_fun_fun_fun_bool_fun_fun$ B_bool_fun_b_b_fun_b_b_fun_b_b_llist_fun_fun_fun_fun$ A_bool_fun_a_c_fun_a_a_fun_a_c_llist_fun_fun_fun_fun$) Bool)
(declare-fun rel_fun$ag (B_b_fun_a_c_fun_bool_fun_fun$ B_b_fun_b_b_llist_fun_fun_a_a_fun_a_c_llist_fun_fun_bool_fun_fun$) B_b_fun_b_b_fun_b_b_llist_fun_fun_fun_a_c_fun_a_a_fun_a_c_llist_fun_fun_fun_bool_fun_fun$)
(declare-fun rel_fun$ah (B_a_bool_fun_fun$ B_c_bool_fun_fun$) B_b_fun_a_c_fun_bool_fun_fun$)
(declare-fun rel_fun$ai (B_b_fun_a_a_fun_bool_fun_fun$ B_b_llist_fun_a_c_llist_fun_bool_fun_fun$) B_b_fun_b_b_llist_fun_fun_a_a_fun_a_c_llist_fun_fun_bool_fun_fun$)
(declare-fun rel_fun$aj (B_a_bool_fun_fun$ B_llist_c_llist_bool_fun_fun$) B_b_llist_fun_a_c_llist_fun_bool_fun_fun$)
(declare-fun rel_fun$ak (B_bool_fun_a_bool_fun_bool_fun_fun$ B_b_fun_b_b_fun_b_b_llist_fun_fun_fun_a_a_fun_a_a_fun_a_a_llist_fun_fun_fun_bool_fun_fun$ B_bool_fun_b_b_fun_b_b_fun_b_b_llist_fun_fun_fun_fun$ A_bool_fun_a_a_fun_a_a_fun_a_a_llist_fun_fun_fun_fun$) Bool)
(declare-fun rel_fun$al (B_b_fun_a_a_fun_bool_fun_fun$ B_b_fun_b_b_llist_fun_fun_a_a_fun_a_a_llist_fun_fun_bool_fun_fun$) B_b_fun_b_b_fun_b_b_llist_fun_fun_fun_a_a_fun_a_a_fun_a_a_llist_fun_fun_fun_bool_fun_fun$)
(declare-fun rel_fun$am (B_b_fun_a_a_fun_bool_fun_fun$ B_b_llist_fun_a_a_llist_fun_bool_fun_fun$) B_b_fun_b_b_llist_fun_fun_a_a_fun_a_a_llist_fun_fun_bool_fun_fun$)
(declare-fun rel_fun$an (B_a_bool_fun_fun$ B_llist_a_llist_bool_fun_fun$) B_b_llist_fun_a_a_llist_fun_bool_fun_fun$)
(declare-fun rel_fun$ao (A_bool_fun_b_bool_fun_bool_fun_fun$ A_bool_fun_a_a_fun_a_bool_llist_fun_fun_fun_b_b_fun_b_b_fun_b_b_llist_fun_fun_fun_bool_fun_fun$ A_bool_fun_a_bool_fun_a_a_fun_a_bool_llist_fun_fun_fun_fun$ B_bool_fun_b_b_fun_b_b_fun_b_b_llist_fun_fun_fun_fun$) Bool)
(declare-fun rel_fun$ap (A_bool_fun_b_b_fun_bool_fun_fun$ A_a_fun_a_bool_llist_fun_fun_b_b_fun_b_b_llist_fun_fun_bool_fun_fun$) A_bool_fun_a_a_fun_a_bool_llist_fun_fun_fun_b_b_fun_b_b_fun_b_b_llist_fun_fun_fun_bool_fun_fun$)
(declare-fun rel_fun$aq (A_b_bool_fun_fun$ Bool_b_bool_fun_fun$) A_bool_fun_b_b_fun_bool_fun_fun$)
(declare-fun rel_fun$ar (A_a_fun_b_b_fun_bool_fun_fun$ A_bool_llist_fun_b_b_llist_fun_bool_fun_fun$) A_a_fun_a_bool_llist_fun_fun_b_b_fun_b_b_llist_fun_fun_bool_fun_fun$)
(declare-fun rel_fun$as (A_b_bool_fun_fun$ Bool_llist_b_llist_bool_fun_fun$) A_bool_llist_fun_b_b_llist_fun_bool_fun_fun$)
(declare-fun rel_fun$at (A_bool_fun_a_bool_fun_bool_fun_fun$ A_bool_fun_a_a_fun_a_bool_llist_fun_fun_fun_a_bool_fun_a_a_fun_a_bool_llist_fun_fun_fun_bool_fun_fun$ A_bool_fun_a_bool_fun_a_a_fun_a_bool_llist_fun_fun_fun_fun$ A_bool_fun_a_bool_fun_a_a_fun_a_bool_llist_fun_fun_fun_fun$) Bool)
(declare-fun rel_fun$au (A_a_bool_fun_fun$) Bool_bool_bool_fun_fun_a_bool_fun_a_bool_fun_bool_fun_fun_fun$)
(declare-fun rel_fun$av (A_bool_fun_a_bool_fun_bool_fun_fun$ A_a_fun_a_bool_llist_fun_fun_a_a_fun_a_bool_llist_fun_fun_bool_fun_fun$) A_bool_fun_a_a_fun_a_bool_llist_fun_fun_fun_a_bool_fun_a_a_fun_a_bool_llist_fun_fun_fun_bool_fun_fun$)
(declare-fun rel_fun$aw (A_a_fun_a_a_fun_bool_fun_fun$ A_bool_llist_fun_a_bool_llist_fun_bool_fun_fun$) A_a_fun_a_bool_llist_fun_fun_a_a_fun_a_bool_llist_fun_fun_bool_fun_fun$)
(declare-fun rel_fun$ax (A_a_bool_fun_fun$) A_a_bool_fun_fun_a_a_fun_a_a_fun_bool_fun_fun_fun$)
(declare-fun rel_fun$ay (A_a_bool_fun_fun$ Bool_llist_bool_llist_bool_fun_fun$) A_bool_llist_fun_a_bool_llist_fun_bool_fun_fun$)
(declare-fun rel_fun$az (A_bool_fun_b_bool_fun_bool_fun_fun$ A_bool_fun_a_bool_fun_a_bool_llist_fun_a_a_fun_a_bool_llist_fun_fun_fun_fun_fun_b_bool_fun_b_bool_fun_b_bool_llist_fun_b_b_fun_b_bool_llist_fun_fun_fun_fun_fun_bool_fun_fun$ A_bool_fun_a_bool_fun_a_bool_fun_a_bool_llist_fun_a_a_fun_a_bool_llist_fun_fun_fun_fun_fun_fun$ B_bool_fun_b_bool_fun_b_bool_fun_b_bool_llist_fun_b_b_fun_b_bool_llist_fun_fun_fun_fun_fun_fun$) Bool)
(declare-fun rel_fun$ba (A_bool_fun_b_bool_fun_bool_fun_fun$ A_bool_fun_a_bool_llist_fun_a_a_fun_a_bool_llist_fun_fun_fun_fun_b_bool_fun_b_bool_llist_fun_b_b_fun_b_bool_llist_fun_fun_fun_fun_bool_fun_fun$) A_bool_fun_a_bool_fun_a_bool_llist_fun_a_a_fun_a_bool_llist_fun_fun_fun_fun_fun_b_bool_fun_b_bool_fun_b_bool_llist_fun_b_b_fun_b_bool_llist_fun_fun_fun_fun_fun_bool_fun_fun$)
(declare-fun rel_fun$bb (A_bool_fun_b_bool_fun_bool_fun_fun$ A_bool_llist_fun_a_a_fun_a_bool_llist_fun_fun_fun_b_bool_llist_fun_b_b_fun_b_bool_llist_fun_fun_fun_bool_fun_fun$) A_bool_fun_a_bool_llist_fun_a_a_fun_a_bool_llist_fun_fun_fun_fun_b_bool_fun_b_bool_llist_fun_b_b_fun_b_bool_llist_fun_fun_fun_fun_bool_fun_fun$)
(declare-fun rel_fun$bc (A_bool_llist_fun_b_bool_llist_fun_bool_fun_fun$ A_a_fun_a_bool_llist_fun_fun_b_b_fun_b_bool_llist_fun_fun_bool_fun_fun$) A_bool_llist_fun_a_a_fun_a_bool_llist_fun_fun_fun_b_bool_llist_fun_b_b_fun_b_bool_llist_fun_fun_fun_bool_fun_fun$)
(declare-fun rel_fun$bd (A_bool_fun_b_bool_fun_bool_fun_fun$ A_a_fun_a_bool_fun_a_a_llist_fun_a_a_fun_a_a_llist_fun_fun_fun_fun_fun_b_b_fun_b_bool_fun_b_b_llist_fun_b_b_fun_b_b_llist_fun_fun_fun_fun_fun_bool_fun_fun$ A_bool_fun_a_a_fun_a_bool_fun_a_a_llist_fun_a_a_fun_a_a_llist_fun_fun_fun_fun_fun_fun$ B_bool_fun_b_b_fun_b_bool_fun_b_b_llist_fun_b_b_fun_b_b_llist_fun_fun_fun_fun_fun_fun$) Bool)
(declare-fun rel_fun$be (A_a_fun_b_b_fun_bool_fun_fun$ A_bool_fun_a_a_llist_fun_a_a_fun_a_a_llist_fun_fun_fun_fun_b_bool_fun_b_b_llist_fun_b_b_fun_b_b_llist_fun_fun_fun_fun_bool_fun_fun$) A_a_fun_a_bool_fun_a_a_llist_fun_a_a_fun_a_a_llist_fun_fun_fun_fun_fun_b_b_fun_b_bool_fun_b_b_llist_fun_b_b_fun_b_b_llist_fun_fun_fun_fun_fun_bool_fun_fun$)
(declare-fun rel_fun$bf (A_bool_fun_b_bool_fun_bool_fun_fun$ A_a_llist_fun_a_a_fun_a_a_llist_fun_fun_fun_b_b_llist_fun_b_b_fun_b_b_llist_fun_fun_fun_bool_fun_fun$) A_bool_fun_a_a_llist_fun_a_a_fun_a_a_llist_fun_fun_fun_fun_b_bool_fun_b_b_llist_fun_b_b_fun_b_b_llist_fun_fun_fun_fun_bool_fun_fun$)
(declare-fun rel_fun$bg (A_a_llist_fun_b_b_llist_fun_bool_fun_fun$ A_a_fun_a_a_llist_fun_fun_b_b_fun_b_b_llist_fun_fun_bool_fun_fun$) A_a_llist_fun_a_a_fun_a_a_llist_fun_fun_fun_b_b_llist_fun_b_b_fun_b_b_llist_fun_fun_fun_bool_fun_fun$)
(declare-fun rel_fun$bh (A_bool_fun_a_bool_fun_bool_fun_fun$ A_c_fun_a_bool_fun_a_c_llist_fun_a_a_fun_a_c_llist_fun_fun_fun_fun_fun_a_c_fun_a_bool_fun_a_c_llist_fun_a_a_fun_a_c_llist_fun_fun_fun_fun_fun_bool_fun_fun$ A_bool_fun_a_c_fun_a_bool_fun_a_c_llist_fun_a_a_fun_a_c_llist_fun_fun_fun_fun_fun_fun$ A_bool_fun_a_c_fun_a_bool_fun_a_c_llist_fun_a_a_fun_a_c_llist_fun_fun_fun_fun_fun_fun$) Bool)
(declare-fun rel_fun$bi (A_c_fun_a_c_fun_bool_fun_fun$ A_bool_fun_a_c_llist_fun_a_a_fun_a_c_llist_fun_fun_fun_fun_a_bool_fun_a_c_llist_fun_a_a_fun_a_c_llist_fun_fun_fun_fun_bool_fun_fun$) A_c_fun_a_bool_fun_a_c_llist_fun_a_a_fun_a_c_llist_fun_fun_fun_fun_fun_a_c_fun_a_bool_fun_a_c_llist_fun_a_a_fun_a_c_llist_fun_fun_fun_fun_fun_bool_fun_fun$)
(declare-fun rel_fun$bj (A_a_bool_fun_fun$) C_c_bool_fun_fun_a_c_fun_a_c_fun_bool_fun_fun_fun$)
(declare-fun rel_fun$bk (A_bool_fun_a_bool_fun_bool_fun_fun$ A_c_llist_fun_a_a_fun_a_c_llist_fun_fun_fun_a_c_llist_fun_a_a_fun_a_c_llist_fun_fun_fun_bool_fun_fun$) A_bool_fun_a_c_llist_fun_a_a_fun_a_c_llist_fun_fun_fun_fun_a_bool_fun_a_c_llist_fun_a_a_fun_a_c_llist_fun_fun_fun_fun_bool_fun_fun$)
(declare-fun rel_fun$bl (A_c_llist_fun_a_c_llist_fun_bool_fun_fun$ A_a_fun_a_c_llist_fun_fun_a_a_fun_a_c_llist_fun_fun_bool_fun_fun$) A_c_llist_fun_a_a_fun_a_c_llist_fun_fun_fun_a_c_llist_fun_a_a_fun_a_c_llist_fun_fun_fun_bool_fun_fun$)
(declare-fun rel_fun$bm (A_a_bool_fun_fun$ C_llist_c_llist_bool_fun_fun$) A_c_llist_fun_a_c_llist_fun_bool_fun_fun$)
(declare-fun rel_fun$bn (A_a_fun_a_a_fun_bool_fun_fun$ A_c_llist_fun_a_c_llist_fun_bool_fun_fun$) A_a_fun_a_c_llist_fun_fun_a_a_fun_a_c_llist_fun_fun_bool_fun_fun$)
(declare-fun rel_fun$bo (A_bool_fun_b_bool_fun_bool_fun_fun$ A_c_fun_a_bool_fun_a_c_llist_fun_a_a_fun_a_c_llist_fun_fun_fun_fun_fun_b_d_fun_b_bool_fun_b_d_llist_fun_b_b_fun_b_d_llist_fun_fun_fun_fun_fun_bool_fun_fun$ A_bool_fun_a_c_fun_a_bool_fun_a_c_llist_fun_a_a_fun_a_c_llist_fun_fun_fun_fun_fun_fun$ B_bool_fun_b_d_fun_b_bool_fun_b_d_llist_fun_b_b_fun_b_d_llist_fun_fun_fun_fun_fun_fun$) Bool)
(declare-fun rel_fun$bp (A_c_fun_b_d_fun_bool_fun_fun$ A_bool_fun_a_c_llist_fun_a_a_fun_a_c_llist_fun_fun_fun_fun_b_bool_fun_b_d_llist_fun_b_b_fun_b_d_llist_fun_fun_fun_fun_bool_fun_fun$) A_c_fun_a_bool_fun_a_c_llist_fun_a_a_fun_a_c_llist_fun_fun_fun_fun_fun_b_d_fun_b_bool_fun_b_d_llist_fun_b_b_fun_b_d_llist_fun_fun_fun_fun_fun_bool_fun_fun$)
(declare-fun rel_fun$bq (A_bool_fun_b_bool_fun_bool_fun_fun$ A_c_llist_fun_a_a_fun_a_c_llist_fun_fun_fun_b_d_llist_fun_b_b_fun_b_d_llist_fun_fun_fun_bool_fun_fun$) A_bool_fun_a_c_llist_fun_a_a_fun_a_c_llist_fun_fun_fun_fun_b_bool_fun_b_d_llist_fun_b_b_fun_b_d_llist_fun_fun_fun_fun_bool_fun_fun$)
(declare-fun rel_fun$br (A_c_llist_fun_b_d_llist_fun_bool_fun_fun$ A_a_fun_a_c_llist_fun_fun_b_b_fun_b_d_llist_fun_fun_bool_fun_fun$) A_c_llist_fun_a_a_fun_a_c_llist_fun_fun_fun_b_d_llist_fun_b_b_fun_b_d_llist_fun_fun_fun_bool_fun_fun$)
(declare-fun rel_fun$bs (B_bool_fun_a_bool_fun_bool_fun_fun$ B_d_fun_b_bool_fun_b_d_llist_fun_b_b_fun_b_d_llist_fun_fun_fun_fun_fun_a_c_fun_a_bool_fun_a_c_llist_fun_a_a_fun_a_c_llist_fun_fun_fun_fun_fun_bool_fun_fun$ B_bool_fun_b_d_fun_b_bool_fun_b_d_llist_fun_b_b_fun_b_d_llist_fun_fun_fun_fun_fun_fun$ A_bool_fun_a_c_fun_a_bool_fun_a_c_llist_fun_a_a_fun_a_c_llist_fun_fun_fun_fun_fun_fun$) Bool)
(declare-fun rel_fun$bt (B_d_fun_a_c_fun_bool_fun_fun$ B_bool_fun_b_d_llist_fun_b_b_fun_b_d_llist_fun_fun_fun_fun_a_bool_fun_a_c_llist_fun_a_a_fun_a_c_llist_fun_fun_fun_fun_bool_fun_fun$) B_d_fun_b_bool_fun_b_d_llist_fun_b_b_fun_b_d_llist_fun_fun_fun_fun_fun_a_c_fun_a_bool_fun_a_c_llist_fun_a_a_fun_a_c_llist_fun_fun_fun_fun_fun_bool_fun_fun$)
(declare-fun rel_fun$bu (B_a_bool_fun_fun$ D_c_bool_fun_fun$) B_d_fun_a_c_fun_bool_fun_fun$)
(declare-fun rel_fun$bv (B_bool_fun_a_bool_fun_bool_fun_fun$ B_d_llist_fun_b_b_fun_b_d_llist_fun_fun_fun_a_c_llist_fun_a_a_fun_a_c_llist_fun_fun_fun_bool_fun_fun$) B_bool_fun_b_d_llist_fun_b_b_fun_b_d_llist_fun_fun_fun_fun_a_bool_fun_a_c_llist_fun_a_a_fun_a_c_llist_fun_fun_fun_fun_bool_fun_fun$)
(declare-fun rel_fun$bw (B_d_llist_fun_a_c_llist_fun_bool_fun_fun$ B_b_fun_b_d_llist_fun_fun_a_a_fun_a_c_llist_fun_fun_bool_fun_fun$) B_d_llist_fun_b_b_fun_b_d_llist_fun_fun_fun_a_c_llist_fun_a_a_fun_a_c_llist_fun_fun_fun_bool_fun_fun$)
(declare-fun rel_fun$bx (B_a_bool_fun_fun$ D_llist_c_llist_bool_fun_fun$) B_d_llist_fun_a_c_llist_fun_bool_fun_fun$)
(declare-fun rel_fun$by (B_b_fun_a_a_fun_bool_fun_fun$ B_d_llist_fun_a_c_llist_fun_bool_fun_fun$) B_b_fun_b_d_llist_fun_fun_a_a_fun_a_c_llist_fun_fun_bool_fun_fun$)
(declare-fun rel_fun$bz (B_bool_fun_b_bool_fun_bool_fun_fun$ B_d_fun_b_bool_fun_b_d_llist_fun_b_b_fun_b_d_llist_fun_fun_fun_fun_fun_b_d_fun_b_bool_fun_b_d_llist_fun_b_b_fun_b_d_llist_fun_fun_fun_fun_fun_bool_fun_fun$ B_bool_fun_b_d_fun_b_bool_fun_b_d_llist_fun_b_b_fun_b_d_llist_fun_fun_fun_fun_fun_fun$ B_bool_fun_b_d_fun_b_bool_fun_b_d_llist_fun_b_b_fun_b_d_llist_fun_fun_fun_fun_fun_fun$) Bool)
(declare-fun rel_fun$ca (B_d_fun_b_d_fun_bool_fun_fun$ B_bool_fun_b_d_llist_fun_b_b_fun_b_d_llist_fun_fun_fun_fun_b_bool_fun_b_d_llist_fun_b_b_fun_b_d_llist_fun_fun_fun_fun_bool_fun_fun$) B_d_fun_b_bool_fun_b_d_llist_fun_b_b_fun_b_d_llist_fun_fun_fun_fun_fun_b_d_fun_b_bool_fun_b_d_llist_fun_b_b_fun_b_d_llist_fun_fun_fun_fun_fun_bool_fun_fun$)
(declare-fun rel_fun$cb (B_b_bool_fun_fun$ D_d_bool_fun_fun$) B_d_fun_b_d_fun_bool_fun_fun$)
(declare-fun rel_fun$cc (B_bool_fun_b_bool_fun_bool_fun_fun$ B_d_llist_fun_b_b_fun_b_d_llist_fun_fun_fun_b_d_llist_fun_b_b_fun_b_d_llist_fun_fun_fun_bool_fun_fun$) B_bool_fun_b_d_llist_fun_b_b_fun_b_d_llist_fun_fun_fun_fun_b_bool_fun_b_d_llist_fun_b_b_fun_b_d_llist_fun_fun_fun_fun_bool_fun_fun$)
(declare-fun rel_fun$cd (B_d_llist_fun_b_d_llist_fun_bool_fun_fun$ B_b_fun_b_d_llist_fun_fun_b_b_fun_b_d_llist_fun_fun_bool_fun_fun$) B_d_llist_fun_b_b_fun_b_d_llist_fun_fun_fun_b_d_llist_fun_b_b_fun_b_d_llist_fun_fun_fun_bool_fun_fun$)
(declare-fun rel_fun$ce (B_b_bool_fun_fun$ D_llist_d_llist_bool_fun_fun$) B_d_llist_fun_b_d_llist_fun_bool_fun_fun$)
(declare-fun rel_fun$cf (B_b_fun_b_b_fun_bool_fun_fun$ B_d_llist_fun_b_d_llist_fun_bool_fun_fun$) B_b_fun_b_d_llist_fun_fun_b_b_fun_b_d_llist_fun_fun_bool_fun_fun$)
(declare-fun rel_fun$cg (A_bool_fun_b_bool_fun_bool_fun_fun$ A_c_llist_fun_a_bool_fun_a_c_llist_llist_fun_a_a_fun_a_c_llist_llist_fun_fun_fun_fun_fun_b_d_llist_fun_b_bool_fun_b_d_llist_llist_fun_b_b_fun_b_d_llist_llist_fun_fun_fun_fun_fun_bool_fun_fun$ A_bool_fun_a_c_llist_fun_a_bool_fun_a_c_llist_llist_fun_a_a_fun_a_c_llist_llist_fun_fun_fun_fun_fun_fun$ B_bool_fun_b_d_llist_fun_b_bool_fun_b_d_llist_llist_fun_b_b_fun_b_d_llist_llist_fun_fun_fun_fun_fun_fun$) Bool)
(declare-fun rel_fun$ch (A_c_llist_fun_b_d_llist_fun_bool_fun_fun$ A_bool_fun_a_c_llist_llist_fun_a_a_fun_a_c_llist_llist_fun_fun_fun_fun_b_bool_fun_b_d_llist_llist_fun_b_b_fun_b_d_llist_llist_fun_fun_fun_fun_bool_fun_fun$) A_c_llist_fun_a_bool_fun_a_c_llist_llist_fun_a_a_fun_a_c_llist_llist_fun_fun_fun_fun_fun_b_d_llist_fun_b_bool_fun_b_d_llist_llist_fun_b_b_fun_b_d_llist_llist_fun_fun_fun_fun_fun_bool_fun_fun$)
(declare-fun rel_fun$ci (A_bool_fun_b_bool_fun_bool_fun_fun$ A_c_llist_llist_fun_a_a_fun_a_c_llist_llist_fun_fun_fun_b_d_llist_llist_fun_b_b_fun_b_d_llist_llist_fun_fun_fun_bool_fun_fun$) A_bool_fun_a_c_llist_llist_fun_a_a_fun_a_c_llist_llist_fun_fun_fun_fun_b_bool_fun_b_d_llist_llist_fun_b_b_fun_b_d_llist_llist_fun_fun_fun_fun_bool_fun_fun$)
(declare-fun rel_fun$cj (A_c_llist_llist_fun_b_d_llist_llist_fun_bool_fun_fun$ A_a_fun_a_c_llist_llist_fun_fun_b_b_fun_b_d_llist_llist_fun_fun_bool_fun_fun$) A_c_llist_llist_fun_a_a_fun_a_c_llist_llist_fun_fun_fun_b_d_llist_llist_fun_b_b_fun_b_d_llist_llist_fun_fun_fun_bool_fun_fun$)
(declare-fun rel_fun$ck (A_bool_fun_b_bool_fun_bool_fun_fun$ A_d_fun_a_bool_fun_a_d_llist_fun_a_a_fun_a_d_llist_fun_fun_fun_fun_fun_b_c_fun_b_bool_fun_b_c_llist_fun_b_b_fun_b_c_llist_fun_fun_fun_fun_fun_bool_fun_fun$ A_bool_fun_a_d_fun_a_bool_fun_a_d_llist_fun_a_a_fun_a_d_llist_fun_fun_fun_fun_fun_fun$ B_bool_fun_b_c_fun_b_bool_fun_b_c_llist_fun_b_b_fun_b_c_llist_fun_fun_fun_fun_fun_fun$) Bool)
(declare-fun rel_fun$cl (A_d_fun_b_c_fun_bool_fun_fun$ A_bool_fun_a_d_llist_fun_a_a_fun_a_d_llist_fun_fun_fun_fun_b_bool_fun_b_c_llist_fun_b_b_fun_b_c_llist_fun_fun_fun_fun_bool_fun_fun$) A_d_fun_a_bool_fun_a_d_llist_fun_a_a_fun_a_d_llist_fun_fun_fun_fun_fun_b_c_fun_b_bool_fun_b_c_llist_fun_b_b_fun_b_c_llist_fun_fun_fun_fun_fun_bool_fun_fun$)
(declare-fun rel_fun$cm (A_b_bool_fun_fun$ D_c_bool_fun_fun$) A_d_fun_b_c_fun_bool_fun_fun$)
(declare-fun rel_fun$cn (A_bool_fun_b_bool_fun_bool_fun_fun$ A_d_llist_fun_a_a_fun_a_d_llist_fun_fun_fun_b_c_llist_fun_b_b_fun_b_c_llist_fun_fun_fun_bool_fun_fun$) A_bool_fun_a_d_llist_fun_a_a_fun_a_d_llist_fun_fun_fun_fun_b_bool_fun_b_c_llist_fun_b_b_fun_b_c_llist_fun_fun_fun_fun_bool_fun_fun$)
(declare-fun rel_fun$co (A_d_llist_fun_b_c_llist_fun_bool_fun_fun$ A_a_fun_a_d_llist_fun_fun_b_b_fun_b_c_llist_fun_fun_bool_fun_fun$) A_d_llist_fun_a_a_fun_a_d_llist_fun_fun_fun_b_c_llist_fun_b_b_fun_b_c_llist_fun_fun_fun_bool_fun_fun$)
(declare-fun rel_fun$cp (A_b_bool_fun_fun$ D_llist_c_llist_bool_fun_fun$) A_d_llist_fun_b_c_llist_fun_bool_fun_fun$)
(declare-fun rel_fun$cq (A_a_fun_b_b_fun_bool_fun_fun$ A_d_llist_fun_b_c_llist_fun_bool_fun_fun$) A_a_fun_a_d_llist_fun_fun_b_b_fun_b_c_llist_fun_fun_bool_fun_fun$)
(declare-fun rel_fun$cr (A_bool_fun_a_bool_fun_bool_fun_fun$ A_d_fun_a_bool_fun_a_d_llist_fun_a_a_fun_a_d_llist_fun_fun_fun_fun_fun_a_b_fun_a_bool_fun_a_b_llist_fun_a_a_fun_a_b_llist_fun_fun_fun_fun_fun_bool_fun_fun$ A_bool_fun_a_d_fun_a_bool_fun_a_d_llist_fun_a_a_fun_a_d_llist_fun_fun_fun_fun_fun_fun$ A_bool_fun_a_b_fun_a_bool_fun_a_b_llist_fun_a_a_fun_a_b_llist_fun_fun_fun_fun_fun_fun$) Bool)
(declare-fun rel_fun$cs (A_d_fun_a_b_fun_bool_fun_fun$ A_bool_fun_a_d_llist_fun_a_a_fun_a_d_llist_fun_fun_fun_fun_a_bool_fun_a_b_llist_fun_a_a_fun_a_b_llist_fun_fun_fun_fun_bool_fun_fun$) A_d_fun_a_bool_fun_a_d_llist_fun_a_a_fun_a_d_llist_fun_fun_fun_fun_fun_a_b_fun_a_bool_fun_a_b_llist_fun_a_a_fun_a_b_llist_fun_fun_fun_fun_fun_bool_fun_fun$)
(declare-fun rel_fun$ct (A_a_bool_fun_fun$ D_b_bool_fun_fun$) A_d_fun_a_b_fun_bool_fun_fun$)
(declare-fun rel_fun$cu (A_bool_fun_a_bool_fun_bool_fun_fun$ A_d_llist_fun_a_a_fun_a_d_llist_fun_fun_fun_a_b_llist_fun_a_a_fun_a_b_llist_fun_fun_fun_bool_fun_fun$) A_bool_fun_a_d_llist_fun_a_a_fun_a_d_llist_fun_fun_fun_fun_a_bool_fun_a_b_llist_fun_a_a_fun_a_b_llist_fun_fun_fun_fun_bool_fun_fun$)
(declare-fun rel_fun$cv (A_d_llist_fun_a_b_llist_fun_bool_fun_fun$ A_a_fun_a_d_llist_fun_fun_a_a_fun_a_b_llist_fun_fun_bool_fun_fun$) A_d_llist_fun_a_a_fun_a_d_llist_fun_fun_fun_a_b_llist_fun_a_a_fun_a_b_llist_fun_fun_fun_bool_fun_fun$)
(declare-fun rel_fun$cw (A_a_bool_fun_fun$ D_llist_b_llist_bool_fun_fun$) A_d_llist_fun_a_b_llist_fun_bool_fun_fun$)
(declare-fun rel_fun$cx (A_a_fun_a_a_fun_bool_fun_fun$ A_d_llist_fun_a_b_llist_fun_bool_fun_fun$) A_a_fun_a_d_llist_fun_fun_a_a_fun_a_b_llist_fun_fun_bool_fun_fun$)
(declare-fun rel_fun$cy (A_bool_fun_a_bool_fun_bool_fun_fun$ A_d_fun_a_bool_fun_a_d_llist_fun_a_a_fun_a_d_llist_fun_fun_fun_fun_fun_a_c_fun_a_bool_fun_a_c_llist_fun_a_a_fun_a_c_llist_fun_fun_fun_fun_fun_bool_fun_fun$ A_bool_fun_a_d_fun_a_bool_fun_a_d_llist_fun_a_a_fun_a_d_llist_fun_fun_fun_fun_fun_fun$ A_bool_fun_a_c_fun_a_bool_fun_a_c_llist_fun_a_a_fun_a_c_llist_fun_fun_fun_fun_fun_fun$) Bool)
(declare-fun rel_fun$cz (A_d_fun_a_c_fun_bool_fun_fun$ A_bool_fun_a_d_llist_fun_a_a_fun_a_d_llist_fun_fun_fun_fun_a_bool_fun_a_c_llist_fun_a_a_fun_a_c_llist_fun_fun_fun_fun_bool_fun_fun$) A_d_fun_a_bool_fun_a_d_llist_fun_a_a_fun_a_d_llist_fun_fun_fun_fun_fun_a_c_fun_a_bool_fun_a_c_llist_fun_a_a_fun_a_c_llist_fun_fun_fun_fun_fun_bool_fun_fun$)
(declare-fun rel_fun$da (A_a_bool_fun_fun$ D_c_bool_fun_fun$) A_d_fun_a_c_fun_bool_fun_fun$)
(declare-fun rel_fun$db (A_bool_fun_a_bool_fun_bool_fun_fun$ A_d_llist_fun_a_a_fun_a_d_llist_fun_fun_fun_a_c_llist_fun_a_a_fun_a_c_llist_fun_fun_fun_bool_fun_fun$) A_bool_fun_a_d_llist_fun_a_a_fun_a_d_llist_fun_fun_fun_fun_a_bool_fun_a_c_llist_fun_a_a_fun_a_c_llist_fun_fun_fun_fun_bool_fun_fun$)
(declare-fun rel_fun$dc (A_d_llist_fun_a_c_llist_fun_bool_fun_fun$ A_a_fun_a_d_llist_fun_fun_a_a_fun_a_c_llist_fun_fun_bool_fun_fun$) A_d_llist_fun_a_a_fun_a_d_llist_fun_fun_fun_a_c_llist_fun_a_a_fun_a_c_llist_fun_fun_fun_bool_fun_fun$)
(declare-fun rel_fun$dd (A_a_bool_fun_fun$ D_llist_c_llist_bool_fun_fun$) A_d_llist_fun_a_c_llist_fun_bool_fun_fun$)
(declare-fun rel_fun$de (A_a_fun_a_a_fun_bool_fun_fun$ A_d_llist_fun_a_c_llist_fun_bool_fun_fun$) A_a_fun_a_d_llist_fun_fun_a_a_fun_a_c_llist_fun_fun_bool_fun_fun$)
(declare-fun rel_fun$df (A_b_bool_fun_fun$ A_a_fun_b_b_fun_bool_fun_fun$) A_a_a_fun_fun_b_b_b_fun_fun_bool_fun_fun$)
(declare-fun rel_fun$dg (Bool_bool_bool_fun_fun_c_c_bool_fun_fun_bool_fun_fun$ A_bool_fun_a_bool_fun_bool_fun_fun_a_c_fun_a_c_fun_bool_fun_fun_bool_fun_fun$ Bool_bool_bool_fun_fun_a_bool_fun_a_bool_fun_bool_fun_fun_fun$ C_c_bool_fun_fun_a_c_fun_a_c_fun_bool_fun_fun_fun$) Bool)
(declare-fun rel_fun$dh (Bool_c_bool_fun_fun$ Bool_bool_fun_c_bool_fun_bool_fun_fun$) Bool_bool_bool_fun_fun_c_c_bool_fun_fun_bool_fun_fun$)
(declare-fun rel_fun$di (Bool_c_bool_fun_fun$ Bool_bool_bool_fun_fun$) Bool_bool_fun_c_bool_fun_bool_fun_fun$)
(declare-fun rel_fun$dj (A_bool_fun_a_c_fun_bool_fun_fun$ A_bool_fun_bool_fun_a_c_fun_bool_fun_bool_fun_fun$) A_bool_fun_a_bool_fun_bool_fun_fun_a_c_fun_a_c_fun_bool_fun_fun_bool_fun_fun$)
(declare-fun rel_fun$dk (A_a_bool_fun_fun$) Bool_c_bool_fun_fun_a_bool_fun_a_c_fun_bool_fun_fun_fun$)
(declare-fun rel_fun$dl (A_bool_fun_a_c_fun_bool_fun_fun$ Bool_bool_bool_fun_fun$) A_bool_fun_bool_fun_a_c_fun_bool_fun_bool_fun_fun$)
(declare-fun rel_fun$dm (Bool_bool_bool_fun_fun_a_a_bool_fun_fun_bool_fun_fun$ A_bool_fun_a_bool_fun_bool_fun_fun_a_a_fun_a_a_fun_bool_fun_fun_bool_fun_fun$ Bool_bool_bool_fun_fun_a_bool_fun_a_bool_fun_bool_fun_fun_fun$ A_a_bool_fun_fun_a_a_fun_a_a_fun_bool_fun_fun_fun$) Bool)
(declare-fun rel_fun$dn (Bool_a_bool_fun_fun$ Bool_bool_fun_a_bool_fun_bool_fun_fun$) Bool_bool_bool_fun_fun_a_a_bool_fun_fun_bool_fun_fun$)
(declare-fun rel_fun$do (Bool_a_bool_fun_fun$ Bool_bool_bool_fun_fun$) Bool_bool_fun_a_bool_fun_bool_fun_fun$)
(declare-fun rel_fun$dp (A_bool_fun_a_a_fun_bool_fun_fun$ A_bool_fun_bool_fun_a_a_fun_bool_fun_bool_fun_fun$) A_bool_fun_a_bool_fun_bool_fun_fun_a_a_fun_a_a_fun_bool_fun_fun_bool_fun_fun$)
(declare-fun rel_fun$dq (A_a_bool_fun_fun$ Bool_a_bool_fun_fun$) A_bool_fun_a_a_fun_bool_fun_fun$)
(declare-fun rel_fun$dr (A_bool_fun_a_a_fun_bool_fun_fun$ Bool_bool_bool_fun_fun$) A_bool_fun_bool_fun_a_a_fun_bool_fun_bool_fun_fun$)
(declare-fun rel_fun$ds (C_c_bool_fun_fun_bool_bool_bool_fun_fun_bool_fun_fun$ A_c_fun_a_c_fun_bool_fun_fun_a_bool_fun_a_bool_fun_bool_fun_fun_bool_fun_fun$ C_c_bool_fun_fun_a_c_fun_a_c_fun_bool_fun_fun_fun$ Bool_bool_bool_fun_fun_a_bool_fun_a_bool_fun_bool_fun_fun_fun$) Bool)
(declare-fun rel_fun$dt (C_bool_bool_fun_fun$ C_bool_fun_bool_bool_fun_bool_fun_fun$) C_c_bool_fun_fun_bool_bool_bool_fun_fun_bool_fun_fun$)
(declare-fun rel_fun$du (C_bool_bool_fun_fun$ Bool_bool_bool_fun_fun$) C_bool_fun_bool_bool_fun_bool_fun_fun$)
(declare-fun rel_fun$dv (A_c_fun_a_bool_fun_bool_fun_fun$ A_c_fun_bool_fun_a_bool_fun_bool_fun_bool_fun_fun$) A_c_fun_a_c_fun_bool_fun_fun_a_bool_fun_a_bool_fun_bool_fun_fun_bool_fun_fun$)
(declare-fun rel_fun$dw (A_a_bool_fun_fun$) C_bool_bool_fun_fun_a_c_fun_a_bool_fun_bool_fun_fun_fun$)
(declare-fun rel_fun$dx (A_c_fun_a_bool_fun_bool_fun_fun$ Bool_bool_bool_fun_fun$) A_c_fun_bool_fun_a_bool_fun_bool_fun_bool_fun_fun$)
(declare-fun rel_fun$dy (C_c_bool_fun_fun_a_a_bool_fun_fun_bool_fun_fun$ A_c_fun_a_c_fun_bool_fun_fun_a_a_fun_a_a_fun_bool_fun_fun_bool_fun_fun$ C_c_bool_fun_fun_a_c_fun_a_c_fun_bool_fun_fun_fun$ A_a_bool_fun_fun_a_a_fun_a_a_fun_bool_fun_fun_fun$) Bool)
(declare-fun rel_fun$dz (C_a_bool_fun_fun$ C_bool_fun_a_bool_fun_bool_fun_fun$) C_c_bool_fun_fun_a_a_bool_fun_fun_bool_fun_fun$)
(declare-fun rel_fun$ea (C_a_bool_fun_fun$ Bool_bool_bool_fun_fun$) C_bool_fun_a_bool_fun_bool_fun_fun$)
(declare-fun rel_fun$eb (A_c_fun_a_a_fun_bool_fun_fun$ A_c_fun_bool_fun_a_a_fun_bool_fun_bool_fun_fun$) A_c_fun_a_c_fun_bool_fun_fun_a_a_fun_a_a_fun_bool_fun_fun_bool_fun_fun$)
(declare-fun rel_fun$ec (A_a_bool_fun_fun$ C_a_bool_fun_fun$) A_c_fun_a_a_fun_bool_fun_fun$)
(declare-fun rel_fun$ed (A_c_fun_a_a_fun_bool_fun_fun$ Bool_bool_bool_fun_fun$) A_c_fun_bool_fun_a_a_fun_bool_fun_bool_fun_fun$)
(declare-fun rel_fun$ee (A_a_bool_fun_fun_bool_bool_bool_fun_fun_bool_fun_fun$ A_a_fun_a_a_fun_bool_fun_fun_a_bool_fun_a_bool_fun_bool_fun_fun_bool_fun_fun$ A_a_bool_fun_fun_a_a_fun_a_a_fun_bool_fun_fun_fun$ Bool_bool_bool_fun_fun_a_bool_fun_a_bool_fun_bool_fun_fun_fun$) Bool)
(declare-fun rel_fun$ef (A_bool_bool_fun_fun$ A_bool_fun_bool_bool_fun_bool_fun_fun$) A_a_bool_fun_fun_bool_bool_bool_fun_fun_bool_fun_fun$)
(declare-fun rel_fun$eg (A_bool_bool_fun_fun$ Bool_bool_bool_fun_fun$) A_bool_fun_bool_bool_fun_bool_fun_fun$)
(declare-fun rel_fun$eh (A_a_fun_a_bool_fun_bool_fun_fun$ A_a_fun_bool_fun_a_bool_fun_bool_fun_bool_fun_fun$) A_a_fun_a_a_fun_bool_fun_fun_a_bool_fun_a_bool_fun_bool_fun_fun_bool_fun_fun$)
(declare-fun rel_fun$ei (A_a_bool_fun_fun$ A_bool_bool_fun_fun$) A_a_fun_a_bool_fun_bool_fun_fun$)
(declare-fun rel_fun$ej (A_a_fun_a_bool_fun_bool_fun_fun$ Bool_bool_bool_fun_fun$) A_a_fun_bool_fun_a_bool_fun_bool_fun_bool_fun_fun$)
(declare-fun rel_fun$ek (A_a_bool_fun_fun_c_c_bool_fun_fun_bool_fun_fun$ A_a_fun_a_a_fun_bool_fun_fun_a_c_fun_a_c_fun_bool_fun_fun_bool_fun_fun$ A_a_bool_fun_fun_a_a_fun_a_a_fun_bool_fun_fun_fun$ C_c_bool_fun_fun_a_c_fun_a_c_fun_bool_fun_fun_fun$) Bool)
(declare-fun rel_fun$el (A_c_bool_fun_fun$ A_bool_fun_c_bool_fun_bool_fun_fun$) A_a_bool_fun_fun_c_c_bool_fun_fun_bool_fun_fun$)
(declare-fun rel_fun$em (A_c_bool_fun_fun$ Bool_bool_bool_fun_fun$) A_bool_fun_c_bool_fun_bool_fun_fun$)
(declare-fun rel_fun$en (A_a_fun_a_c_fun_bool_fun_fun$ A_a_fun_bool_fun_a_c_fun_bool_fun_bool_fun_fun$) A_a_fun_a_a_fun_bool_fun_fun_a_c_fun_a_c_fun_bool_fun_fun_bool_fun_fun$)
(declare-fun rel_fun$eo (A_a_bool_fun_fun$ A_c_bool_fun_fun$) A_a_fun_a_c_fun_bool_fun_fun$)
(declare-fun rel_fun$ep (A_a_fun_a_c_fun_bool_fun_fun$ Bool_bool_bool_fun_fun$) A_a_fun_bool_fun_a_c_fun_bool_fun_bool_fun_fun$)
(declare-fun rel_fun$eq (Bool_bool_bool_fun_fun_bool_bool_bool_fun_fun_bool_fun_fun$ A_bool_fun_a_bool_fun_bool_fun_fun_a_bool_fun_a_bool_fun_bool_fun_fun_bool_fun_fun$ Bool_bool_bool_fun_fun_a_bool_fun_a_bool_fun_bool_fun_fun_fun$ Bool_bool_bool_fun_fun_a_bool_fun_a_bool_fun_bool_fun_fun_fun$) Bool)
(declare-fun rel_fun$er (Bool_bool_bool_fun_fun$ Bool_bool_fun_bool_bool_fun_bool_fun_fun$) Bool_bool_bool_fun_fun_bool_bool_bool_fun_fun_bool_fun_fun$)
(declare-fun rel_fun$es (Bool_bool_bool_fun_fun$ Bool_bool_bool_fun_fun$) Bool_bool_fun_bool_bool_fun_bool_fun_fun$)
(declare-fun rel_fun$et (A_bool_fun_a_bool_fun_bool_fun_fun$ A_bool_fun_bool_fun_a_bool_fun_bool_fun_bool_fun_fun$) A_bool_fun_a_bool_fun_bool_fun_fun_a_bool_fun_a_bool_fun_bool_fun_fun_bool_fun_fun$)
(declare-fun rel_fun$eu (A_bool_fun_a_bool_fun_bool_fun_fun$ Bool_bool_bool_fun_fun$) A_bool_fun_bool_fun_a_bool_fun_bool_fun_bool_fun_fun$)
(declare-fun rel_fun$ev (Bool_c_bool_fun_fun_bool_c_bool_fun_fun_bool_fun_fun$ A_bool_fun_a_c_fun_bool_fun_fun_a_bool_fun_a_c_fun_bool_fun_fun_bool_fun_fun$ Bool_c_bool_fun_fun_a_bool_fun_a_c_fun_bool_fun_fun_fun$ Bool_c_bool_fun_fun_a_bool_fun_a_c_fun_bool_fun_fun_fun$) Bool)
(declare-fun rel_fun$ew (Bool_bool_bool_fun_fun$ C_bool_fun_c_bool_fun_bool_fun_fun$) Bool_c_bool_fun_fun_bool_c_bool_fun_fun_bool_fun_fun$)
(declare-fun rel_fun$ex (C_c_bool_fun_fun$ Bool_bool_bool_fun_fun$) C_bool_fun_c_bool_fun_bool_fun_fun$)
(declare-fun rel_fun$ey (A_bool_fun_a_bool_fun_bool_fun_fun$ A_c_fun_bool_fun_a_c_fun_bool_fun_bool_fun_fun$) A_bool_fun_a_c_fun_bool_fun_fun_a_bool_fun_a_c_fun_bool_fun_fun_bool_fun_fun$)
(declare-fun rel_fun$ez (A_c_fun_a_c_fun_bool_fun_fun$ Bool_bool_bool_fun_fun$) A_c_fun_bool_fun_a_c_fun_bool_fun_bool_fun_fun$)
(declare-fun rel_fun$fa (C_bool_bool_fun_fun_c_bool_bool_fun_fun_bool_fun_fun$ A_c_fun_a_bool_fun_bool_fun_fun_a_c_fun_a_bool_fun_bool_fun_fun_bool_fun_fun$ C_bool_bool_fun_fun_a_c_fun_a_bool_fun_bool_fun_fun_fun$ C_bool_bool_fun_fun_a_c_fun_a_bool_fun_bool_fun_fun_fun$) Bool)
(declare-fun rel_fun$fb (C_c_bool_fun_fun$ Bool_bool_fun_bool_bool_fun_bool_fun_fun$) C_bool_bool_fun_fun_c_bool_bool_fun_fun_bool_fun_fun$)
(declare-fun rel_fun$fc (A_c_fun_a_c_fun_bool_fun_fun$ A_bool_fun_bool_fun_a_bool_fun_bool_fun_bool_fun_fun$) A_c_fun_a_bool_fun_bool_fun_fun_a_c_fun_a_bool_fun_bool_fun_fun_bool_fun_fun$)
(declare-fun rel_fun$fd (C_c_bool_fun_fun_c_c_bool_fun_fun_bool_fun_fun$ A_c_fun_a_c_fun_bool_fun_fun_a_c_fun_a_c_fun_bool_fun_fun_bool_fun_fun$ C_c_bool_fun_fun_a_c_fun_a_c_fun_bool_fun_fun_fun$ C_c_bool_fun_fun_a_c_fun_a_c_fun_bool_fun_fun_fun$) Bool)
(declare-fun rel_fun$fe (C_c_bool_fun_fun$ C_bool_fun_c_bool_fun_bool_fun_fun$) C_c_bool_fun_fun_c_c_bool_fun_fun_bool_fun_fun$)
(declare-fun rel_fun$ff (A_c_fun_a_c_fun_bool_fun_fun$ A_c_fun_bool_fun_a_c_fun_bool_fun_bool_fun_fun$) A_c_fun_a_c_fun_bool_fun_fun_a_c_fun_a_c_fun_bool_fun_fun_bool_fun_fun$)
(declare-fun rel_fun$fg (C_d_bool_fun_fun_c_d_bool_fun_fun_bool_fun_fun$ C_llist_d_llist_bool_fun_fun_c_llist_d_llist_bool_fun_fun_bool_fun_fun$ C_d_bool_fun_fun_c_llist_d_llist_bool_fun_fun_fun$ C_d_bool_fun_fun_c_llist_d_llist_bool_fun_fun_fun$) Bool)
(declare-fun rel_fun$fh (C_c_bool_fun_fun$ D_bool_fun_d_bool_fun_bool_fun_fun$) C_d_bool_fun_fun_c_d_bool_fun_fun_bool_fun_fun$)
(declare-fun rel_fun$fi (D_d_bool_fun_fun$ Bool_bool_bool_fun_fun$) D_bool_fun_d_bool_fun_bool_fun_fun$)
(declare-fun rel_fun$fj (C_llist_c_llist_bool_fun_fun$ D_llist_bool_fun_d_llist_bool_fun_bool_fun_fun$) C_llist_d_llist_bool_fun_fun_c_llist_d_llist_bool_fun_fun_bool_fun_fun$)
(declare-fun rel_fun$fk (D_llist_d_llist_bool_fun_fun$ Bool_bool_bool_fun_fun$) D_llist_bool_fun_d_llist_bool_fun_bool_fun_fun$)
(declare-fun rel_fun$fl (C_a_bool_fun_fun_d_b_bool_fun_fun_bool_fun_fun$ C_llist_a_llist_bool_fun_fun_d_llist_b_llist_bool_fun_fun_bool_fun_fun$ C_a_bool_fun_fun_c_llist_a_llist_bool_fun_fun_fun$ D_b_bool_fun_fun_d_llist_b_llist_bool_fun_fun_fun$) Bool)
(declare-fun rel_fun$fm (C_d_bool_fun_fun$ A_bool_fun_b_bool_fun_bool_fun_fun$) C_a_bool_fun_fun_d_b_bool_fun_fun_bool_fun_fun$)
(declare-fun rel_fun$fn (C_llist_d_llist_bool_fun_fun$ A_llist_bool_fun_b_llist_bool_fun_bool_fun_fun$) C_llist_a_llist_bool_fun_fun_d_llist_b_llist_bool_fun_fun_bool_fun_fun$)
(declare-fun rel_fun$fo (A_llist_b_llist_bool_fun_fun$ Bool_bool_bool_fun_fun$) A_llist_bool_fun_b_llist_bool_fun_bool_fun_fun$)
(declare-fun rel_fun$fp (C_c_bool_fun_fun_d_d_bool_fun_fun_bool_fun_fun$ C_llist_c_llist_bool_fun_fun_d_llist_d_llist_bool_fun_fun_bool_fun_fun$ C_c_bool_fun_fun_c_llist_c_llist_bool_fun_fun_fun$ D_d_bool_fun_fun_d_llist_d_llist_bool_fun_fun_fun$) Bool)
(declare-fun rel_fun$fq (C_d_bool_fun_fun$ C_bool_fun_d_bool_fun_bool_fun_fun$) C_c_bool_fun_fun_d_d_bool_fun_fun_bool_fun_fun$)
(declare-fun rel_fun$fr (C_d_bool_fun_fun$ Bool_bool_bool_fun_fun$) C_bool_fun_d_bool_fun_bool_fun_fun$)
(declare-fun rel_fun$fs (C_llist_d_llist_bool_fun_fun$ C_llist_bool_fun_d_llist_bool_fun_bool_fun_fun$) C_llist_c_llist_bool_fun_fun_d_llist_d_llist_bool_fun_fun_bool_fun_fun$)
(declare-fun rel_fun$ft (C_llist_d_llist_bool_fun_fun$ Bool_bool_bool_fun_fun$) C_llist_bool_fun_d_llist_bool_fun_bool_fun_fun$)
(declare-fun rel_fun$fu (C_llist_c_llist_bool_fun_fun$ Bool_bool_bool_fun_fun$ C_llist_bool_fun$ C_llist_bool_fun$) Bool)
(declare-fun rel_fun$fv (D_llist_c_llist_bool_fun_fun$ Bool_bool_bool_fun_fun$ D_llist_bool_fun$ C_llist_bool_fun$) Bool)
(declare-fun rel_fun$fw (Bool_bool_bool_fun_fun$ A_a_a_fun_fun_b_b_b_fun_fun_bool_fun_fun$ Bool_a_a_a_fun_fun_fun$ Bool_b_b_b_fun_fun_fun$) Bool)
(declare-fun rel_fun$fx (A_b_bool_fun_fun$ A_bool_fun_bool_fun_b_bool_fun_bool_fun_bool_fun_fun$ A_a_bool_fun_bool_fun_fun$ B_b_bool_fun_bool_fun_fun$) Bool)
(declare-fun rel_fun$fy (A_bool_fun_b_bool_fun_bool_fun_fun$ Bool_bool_bool_fun_fun$) A_bool_fun_bool_fun_b_bool_fun_bool_fun_bool_fun_fun$)
(declare-fun rel_fun$fz (A_b_bool_fun_fun$ A_a_fun_a_fun_b_b_fun_b_fun_bool_fun_fun$ A_a_a_fun_a_fun_fun$ B_b_b_fun_b_fun_fun$) Bool)
(declare-fun rel_fun$ga (A_a_fun_b_b_fun_bool_fun_fun$ A_b_bool_fun_fun$) A_a_fun_a_fun_b_b_fun_b_fun_bool_fun_fun$)
(declare-fun rel_fun$gb (A_b_bool_fun_fun$ A_c_fun_c_fun_b_d_fun_d_fun_bool_fun_fun$ A_a_c_fun_c_fun_fun$ B_b_d_fun_d_fun_fun$) Bool)
(declare-fun rel_fun$gc (A_c_fun_b_d_fun_bool_fun_fun$ C_d_bool_fun_fun$) A_c_fun_c_fun_b_d_fun_d_fun_bool_fun_fun$)
(declare-fun rel_fun$gd (A_b_bool_fun_fun$ A_c_llist_fun_c_llist_fun_b_d_llist_fun_d_llist_fun_bool_fun_fun$ A_a_c_llist_fun_c_llist_fun_fun$ B_b_d_llist_fun_d_llist_fun_fun$) Bool)
(declare-fun rel_fun$ge (A_c_llist_fun_b_d_llist_fun_bool_fun_fun$ C_llist_d_llist_bool_fun_fun$) A_c_llist_fun_c_llist_fun_b_d_llist_fun_d_llist_fun_bool_fun_fun$)
(declare-fun rel_fun$gf (Bool_bool_fun_bool_bool_fun_bool_fun_fun$ A_bool_fun_a_bool_fun_fun_b_bool_fun_b_bool_fun_fun_bool_fun_fun$ Bool_bool_fun_a_bool_fun_a_bool_fun_fun_fun$ Bool_bool_fun_b_bool_fun_b_bool_fun_fun_fun$) Bool)
(declare-fun rel_fun$gg (A_bool_fun_b_bool_fun_bool_fun_fun$ A_bool_fun_b_bool_fun_bool_fun_fun$) A_bool_fun_a_bool_fun_fun_b_bool_fun_b_bool_fun_fun_bool_fun_fun$)
(declare-fun rel_fun$gh (Bool_a_fun_bool_b_fun_bool_fun_fun$ A_bool_fun_a_a_fun_fun_b_bool_fun_b_b_fun_fun_bool_fun_fun$ Bool_a_fun_a_bool_fun_a_a_fun_fun_fun$ Bool_b_fun_b_bool_fun_b_b_fun_fun_fun$) Bool)
(declare-fun rel_fun$gi (Bool_bool_bool_fun_fun$ A_b_bool_fun_fun$) Bool_a_fun_bool_b_fun_bool_fun_fun$)
(declare-fun rel_fun$gj (A_bool_fun_b_bool_fun_bool_fun_fun$ A_a_fun_b_b_fun_bool_fun_fun$) A_bool_fun_a_a_fun_fun_b_bool_fun_b_b_fun_fun_bool_fun_fun$)
(declare-fun rel_fun$gk (Bool_c_fun_bool_d_fun_bool_fun_fun$ A_bool_fun_a_c_fun_fun_b_bool_fun_b_d_fun_fun_bool_fun_fun$ Bool_c_fun_a_bool_fun_a_c_fun_fun_fun$ Bool_d_fun_b_bool_fun_b_d_fun_fun_fun$) Bool)
(declare-fun rel_fun$gl (Bool_bool_bool_fun_fun$ C_d_bool_fun_fun$) Bool_c_fun_bool_d_fun_bool_fun_fun$)
(declare-fun rel_fun$gm (A_bool_fun_b_bool_fun_bool_fun_fun$ A_c_fun_b_d_fun_bool_fun_fun$) A_bool_fun_a_c_fun_fun_b_bool_fun_b_d_fun_fun_bool_fun_fun$)
(declare-fun rel_fun$gn (C_bool_fun_d_bool_fun_bool_fun_fun$ A_c_fun_a_bool_fun_fun_b_d_fun_b_bool_fun_fun_bool_fun_fun$ C_bool_fun_a_c_fun_a_bool_fun_fun_fun$ D_bool_fun_b_d_fun_b_bool_fun_fun_fun$) Bool)
(declare-fun rel_fun$go (A_c_fun_b_d_fun_bool_fun_fun$ A_bool_fun_b_bool_fun_bool_fun_fun$) A_c_fun_a_bool_fun_fun_b_d_fun_b_bool_fun_fun_bool_fun_fun$)
(declare-fun rel_fun$gp (C_a_fun_d_b_fun_bool_fun_fun$ A_c_fun_a_a_fun_fun_b_d_fun_b_b_fun_fun_bool_fun_fun$ C_a_fun_a_c_fun_a_a_fun_fun_fun$ D_b_fun_b_d_fun_b_b_fun_fun_fun$) Bool)
(declare-fun rel_fun$gq (C_d_bool_fun_fun$ A_b_bool_fun_fun$) C_a_fun_d_b_fun_bool_fun_fun$)
(declare-fun rel_fun$gr (A_c_fun_b_d_fun_bool_fun_fun$ A_a_fun_b_b_fun_bool_fun_fun$) A_c_fun_a_a_fun_fun_b_d_fun_b_b_fun_fun_bool_fun_fun$)
(declare-fun rel_fun$gs (C_c_fun_d_d_fun_bool_fun_fun$ A_c_fun_a_c_fun_fun_b_d_fun_b_d_fun_fun_bool_fun_fun$ C_c_fun_a_c_fun_a_c_fun_fun_fun$ D_d_fun_b_d_fun_b_d_fun_fun_fun$) Bool)
(declare-fun rel_fun$gt (C_d_bool_fun_fun$ C_d_bool_fun_fun$) C_c_fun_d_d_fun_bool_fun_fun$)
(declare-fun rel_fun$gu (A_c_fun_b_d_fun_bool_fun_fun$ A_c_fun_b_d_fun_bool_fun_fun$) A_c_fun_a_c_fun_fun_b_d_fun_b_d_fun_fun_bool_fun_fun$)
(declare-fun rel_fun$gv (A_bool_fun_b_bool_fun_bool_fun_fun$ A_a_fun_a_bool_fun_fun_b_b_fun_b_bool_fun_fun_bool_fun_fun$ A_bool_fun_a_a_fun_a_bool_fun_fun_fun$ B_bool_fun_b_b_fun_b_bool_fun_fun_fun$) Bool)
(declare-fun rel_fun$gw (A_a_fun_b_b_fun_bool_fun_fun$ A_bool_fun_b_bool_fun_bool_fun_fun$) A_a_fun_a_bool_fun_fun_b_b_fun_b_bool_fun_fun_bool_fun_fun$)
(declare-fun rel_fun$gx (A_a_fun_b_b_fun_bool_fun_fun$ A_a_fun_a_a_fun_fun_b_b_fun_b_b_fun_fun_bool_fun_fun$ A_a_fun_a_a_fun_a_a_fun_fun_fun$ B_b_fun_b_b_fun_b_b_fun_fun_fun$) Bool)
(declare-fun rel_fun$gy (A_a_fun_b_b_fun_bool_fun_fun$ A_a_fun_b_b_fun_bool_fun_fun$) A_a_fun_a_a_fun_fun_b_b_fun_b_b_fun_fun_bool_fun_fun$)
(declare-fun rel_fun$gz (A_c_fun_b_d_fun_bool_fun_fun$ A_a_fun_a_c_fun_fun_b_b_fun_b_d_fun_fun_bool_fun_fun$ A_c_fun_a_a_fun_a_c_fun_fun_fun$ B_d_fun_b_b_fun_b_d_fun_fun_fun$) Bool)
(declare-fun rel_fun$ha (A_a_fun_b_b_fun_bool_fun_fun$ A_c_fun_b_d_fun_bool_fun_fun$) A_a_fun_a_c_fun_fun_b_b_fun_b_d_fun_fun_bool_fun_fun$)
(declare-fun rel_fun$hb (Bool_c_llist_fun_bool_d_llist_fun_bool_fun_fun$ A_bool_fun_a_c_llist_fun_fun_b_bool_fun_b_d_llist_fun_fun_bool_fun_fun$ Bool_c_llist_fun_a_bool_fun_a_c_llist_fun_fun_fun$ Bool_d_llist_fun_b_bool_fun_b_d_llist_fun_fun_fun$) Bool)
(declare-fun rel_fun$hc (Bool_bool_bool_fun_fun$ C_llist_d_llist_bool_fun_fun$) Bool_c_llist_fun_bool_d_llist_fun_bool_fun_fun$)
(declare-fun rel_fun$hd (A_bool_fun_b_bool_fun_bool_fun_fun$ A_c_llist_fun_b_d_llist_fun_bool_fun_fun$) A_bool_fun_a_c_llist_fun_fun_b_bool_fun_b_d_llist_fun_fun_bool_fun_fun$)
(declare-fun rel_fun$he (Bool_bool_bool_fun_fun_bool_bool_bool_fun_fun_bool_fun_fun$ A_bool_fun_a_bool_fun_bool_fun_fun_b_bool_fun_b_bool_fun_bool_fun_fun_bool_fun_fun$ Bool_bool_bool_fun_fun_a_bool_fun_a_bool_fun_bool_fun_fun_fun$ Bool_bool_bool_fun_fun_b_bool_fun_b_bool_fun_bool_fun_fun_fun$) Bool)
(declare-fun rel_fun$hf (A_bool_fun_b_bool_fun_bool_fun_fun$ A_bool_fun_bool_fun_b_bool_fun_bool_fun_bool_fun_fun$) A_bool_fun_a_bool_fun_bool_fun_fun_b_bool_fun_b_bool_fun_bool_fun_fun_bool_fun_fun$)
(declare-fun rel_fun$hg (Bool_c_bool_fun_fun_bool_d_bool_fun_fun_bool_fun_fun$ A_bool_fun_a_c_fun_bool_fun_fun_b_bool_fun_b_d_fun_bool_fun_fun_bool_fun_fun$ Bool_c_bool_fun_fun_a_bool_fun_a_c_fun_bool_fun_fun_fun$ Bool_d_bool_fun_fun_b_bool_fun_b_d_fun_bool_fun_fun_fun$) Bool)
(declare-fun rel_fun$hh (Bool_bool_bool_fun_fun$ C_bool_fun_d_bool_fun_bool_fun_fun$) Bool_c_bool_fun_fun_bool_d_bool_fun_fun_bool_fun_fun$)
(declare-fun rel_fun$hi (A_bool_fun_b_bool_fun_bool_fun_fun$ A_c_fun_bool_fun_b_d_fun_bool_fun_bool_fun_fun$) A_bool_fun_a_c_fun_bool_fun_fun_b_bool_fun_b_d_fun_bool_fun_fun_bool_fun_fun$)
(declare-fun rel_fun$hj (A_c_fun_b_d_fun_bool_fun_fun$ Bool_bool_bool_fun_fun$) A_c_fun_bool_fun_b_d_fun_bool_fun_bool_fun_fun$)
(declare-fun rel_fun$hk (A_bool_bool_fun_fun_b_bool_bool_fun_fun_bool_fun_fun$ A_a_fun_a_bool_fun_bool_fun_fun_b_b_fun_b_bool_fun_bool_fun_fun_bool_fun_fun$ A_bool_bool_fun_fun_a_a_fun_a_bool_fun_bool_fun_fun_fun$ B_bool_bool_fun_fun_b_b_fun_b_bool_fun_bool_fun_fun_fun$) Bool)
(declare-fun rel_fun$hl (A_b_bool_fun_fun$ Bool_bool_fun_bool_bool_fun_bool_fun_fun$) A_bool_bool_fun_fun_b_bool_bool_fun_fun_bool_fun_fun$)
(declare-fun rel_fun$hm (A_a_fun_b_b_fun_bool_fun_fun$ A_bool_fun_bool_fun_b_bool_fun_bool_fun_bool_fun_fun$) A_a_fun_a_bool_fun_bool_fun_fun_b_b_fun_b_bool_fun_bool_fun_fun_bool_fun_fun$)
(declare-fun rel_fun$hn (A_c_bool_fun_fun_b_d_bool_fun_fun_bool_fun_fun$ A_a_fun_a_c_fun_bool_fun_fun_b_b_fun_b_d_fun_bool_fun_fun_bool_fun_fun$ A_c_bool_fun_fun_a_a_fun_a_c_fun_bool_fun_fun_fun$ B_d_bool_fun_fun_b_b_fun_b_d_fun_bool_fun_fun_fun$) Bool)
(declare-fun rel_fun$ho (A_b_bool_fun_fun$ C_bool_fun_d_bool_fun_bool_fun_fun$) A_c_bool_fun_fun_b_d_bool_fun_fun_bool_fun_fun$)
(declare-fun rel_fun$hp (A_a_fun_b_b_fun_bool_fun_fun$ A_c_fun_bool_fun_b_d_fun_bool_fun_bool_fun_fun$) A_a_fun_a_c_fun_bool_fun_fun_b_b_fun_b_d_fun_bool_fun_fun_bool_fun_fun$)
(declare-fun rel_fun$hq (C_bool_bool_fun_fun_d_bool_bool_fun_fun_bool_fun_fun$ A_c_fun_a_bool_fun_bool_fun_fun_b_d_fun_b_bool_fun_bool_fun_fun_bool_fun_fun$ C_bool_bool_fun_fun_a_c_fun_a_bool_fun_bool_fun_fun_fun$ D_bool_bool_fun_fun_b_d_fun_b_bool_fun_bool_fun_fun_fun$) Bool)
(declare-fun rel_fun$hr (C_d_bool_fun_fun$ Bool_bool_fun_bool_bool_fun_bool_fun_fun$) C_bool_bool_fun_fun_d_bool_bool_fun_fun_bool_fun_fun$)
(declare-fun rel_fun$hs (A_c_fun_b_d_fun_bool_fun_fun$ A_bool_fun_bool_fun_b_bool_fun_bool_fun_bool_fun_fun$) A_c_fun_a_bool_fun_bool_fun_fun_b_d_fun_b_bool_fun_bool_fun_fun_bool_fun_fun$)
(declare-fun rel_fun$ht (C_c_bool_fun_fun_d_d_bool_fun_fun_bool_fun_fun$ A_c_fun_a_c_fun_bool_fun_fun_b_d_fun_b_d_fun_bool_fun_fun_bool_fun_fun$ C_c_bool_fun_fun_a_c_fun_a_c_fun_bool_fun_fun_fun$ D_d_bool_fun_fun_b_d_fun_b_d_fun_bool_fun_fun_fun$) Bool)
(declare-fun rel_fun$hu (A_c_fun_b_d_fun_bool_fun_fun$ A_c_fun_bool_fun_b_d_fun_bool_fun_bool_fun_fun$) A_c_fun_a_c_fun_bool_fun_fun_b_d_fun_b_d_fun_bool_fun_fun_bool_fun_fun$)
(declare-fun rel_fun$hv (Bool_a_bool_fun_fun_bool_b_bool_fun_fun_bool_fun_fun$ A_bool_fun_a_a_fun_bool_fun_fun_b_bool_fun_b_b_fun_bool_fun_fun_bool_fun_fun$ Bool_a_bool_fun_fun_a_bool_fun_a_a_fun_bool_fun_fun_fun$ Bool_b_bool_fun_fun_b_bool_fun_b_b_fun_bool_fun_fun_fun$) Bool)
(declare-fun rel_fun$hw (Bool_bool_bool_fun_fun$ A_bool_fun_b_bool_fun_bool_fun_fun$) Bool_a_bool_fun_fun_bool_b_bool_fun_fun_bool_fun_fun$)
(declare-fun rel_fun$hx (A_bool_fun_b_bool_fun_bool_fun_fun$ A_a_fun_bool_fun_b_b_fun_bool_fun_bool_fun_fun$) A_bool_fun_a_a_fun_bool_fun_fun_b_bool_fun_b_b_fun_bool_fun_fun_bool_fun_fun$)
(declare-fun rel_fun$hy (A_a_fun_b_b_fun_bool_fun_fun$ Bool_bool_bool_fun_fun$) A_a_fun_bool_fun_b_b_fun_bool_fun_bool_fun_fun$)
(declare-fun rel_fun$hz (A_a_bool_fun_fun_b_b_bool_fun_fun_bool_fun_fun$ A_a_fun_a_a_fun_bool_fun_fun_b_b_fun_b_b_fun_bool_fun_fun_bool_fun_fun$ A_a_bool_fun_fun_a_a_fun_a_a_fun_bool_fun_fun_fun$ B_b_bool_fun_fun_b_b_fun_b_b_fun_bool_fun_fun_fun$) Bool)
(declare-fun rel_fun$ia (A_b_bool_fun_fun$ A_bool_fun_b_bool_fun_bool_fun_fun$) A_a_bool_fun_fun_b_b_bool_fun_fun_bool_fun_fun$)
(declare-fun rel_fun$ib (A_a_fun_b_b_fun_bool_fun_fun$ A_a_fun_bool_fun_b_b_fun_bool_fun_bool_fun_fun$) A_a_fun_a_a_fun_bool_fun_fun_b_b_fun_b_b_fun_bool_fun_fun_bool_fun_fun$)
(declare-fun rel_fun$ic (C_a_bool_fun_fun_d_b_bool_fun_fun_bool_fun_fun$ A_c_fun_a_a_fun_bool_fun_fun_b_d_fun_b_b_fun_bool_fun_fun_bool_fun_fun$ C_a_bool_fun_fun_a_c_fun_a_a_fun_bool_fun_fun_fun$ D_b_bool_fun_fun_b_d_fun_b_b_fun_bool_fun_fun_fun$) Bool)
(declare-fun rel_fun$id (A_c_fun_b_d_fun_bool_fun_fun$ A_a_fun_bool_fun_b_b_fun_bool_fun_bool_fun_fun$) A_c_fun_a_a_fun_bool_fun_fun_b_d_fun_b_b_fun_bool_fun_fun_bool_fun_fun$)
(declare-fun rel_fun$ie (Bool_c_llist_bool_fun_fun_bool_d_llist_bool_fun_fun_bool_fun_fun$ A_bool_fun_a_c_llist_fun_bool_fun_fun_b_bool_fun_b_d_llist_fun_bool_fun_fun_bool_fun_fun$ Bool_c_llist_bool_fun_fun_a_bool_fun_a_c_llist_fun_bool_fun_fun_fun$ Bool_d_llist_bool_fun_fun_b_bool_fun_b_d_llist_fun_bool_fun_fun_fun$) Bool)
(declare-fun rel_fun$if (Bool_bool_bool_fun_fun$ C_llist_bool_fun_d_llist_bool_fun_bool_fun_fun$) Bool_c_llist_bool_fun_fun_bool_d_llist_bool_fun_fun_bool_fun_fun$)
(declare-fun rel_fun$ig (A_bool_fun_b_bool_fun_bool_fun_fun$ A_c_llist_fun_bool_fun_b_d_llist_fun_bool_fun_bool_fun_fun$) A_bool_fun_a_c_llist_fun_bool_fun_fun_b_bool_fun_b_d_llist_fun_bool_fun_fun_bool_fun_fun$)
(declare-fun rel_fun$ih (A_c_llist_fun_b_d_llist_fun_bool_fun_fun$ Bool_bool_bool_fun_fun$) A_c_llist_fun_bool_fun_b_d_llist_fun_bool_fun_bool_fun_fun$)
(declare-fun rel_fun$ii (A_a_bool_fun_fun_b_b_bool_fun_fun_bool_fun_fun$ Bool_bool_bool_fun_fun_a_bool_fun_bool_fun_fun_bool_bool_bool_fun_fun_b_bool_fun_bool_fun_fun_bool_fun_fun$ A_a_bool_fun_fun_bool_bool_bool_fun_fun_a_bool_fun_bool_fun_fun_fun$ B_b_bool_fun_fun_bool_bool_bool_fun_fun_b_bool_fun_bool_fun_fun_fun$) Bool)
(declare-fun rel_fun$ij (Bool_bool_bool_fun_fun_bool_bool_bool_fun_fun_bool_fun_fun$ A_bool_fun_bool_fun_b_bool_fun_bool_fun_bool_fun_fun$) Bool_bool_bool_fun_fun_a_bool_fun_bool_fun_fun_bool_bool_bool_fun_fun_b_bool_fun_bool_fun_fun_bool_fun_fun$)
(declare-fun rel_fun$ik (A_a_bool_fun_fun_b_b_bool_fun_fun_bool_fun_fun$ C_c_bool_fun_fun_a_c_fun_bool_fun_fun_d_d_bool_fun_fun_b_d_fun_bool_fun_fun_bool_fun_fun$ A_a_bool_fun_fun_c_c_bool_fun_fun_a_c_fun_bool_fun_fun_fun$ B_b_bool_fun_fun_d_d_bool_fun_fun_b_d_fun_bool_fun_fun_fun$) Bool)
(declare-fun rel_fun$il (C_c_bool_fun_fun_d_d_bool_fun_fun_bool_fun_fun$ A_c_fun_bool_fun_b_d_fun_bool_fun_bool_fun_fun$) C_c_bool_fun_fun_a_c_fun_bool_fun_fun_d_d_bool_fun_fun_b_d_fun_bool_fun_fun_bool_fun_fun$)
(declare-fun rel_fun$im (A_a_bool_fun_fun_b_b_bool_fun_fun_bool_fun_fun$ C_llist_c_llist_bool_fun_fun_a_c_llist_fun_bool_fun_fun_d_llist_d_llist_bool_fun_fun_b_d_llist_fun_bool_fun_fun_bool_fun_fun$ A_a_bool_fun_fun_c_llist_c_llist_bool_fun_fun_a_c_llist_fun_bool_fun_fun_fun$ B_b_bool_fun_fun_d_llist_d_llist_bool_fun_fun_b_d_llist_fun_bool_fun_fun_fun$) Bool)
(declare-fun rel_fun$in (C_llist_c_llist_bool_fun_fun_d_llist_d_llist_bool_fun_fun_bool_fun_fun$ A_c_llist_fun_bool_fun_b_d_llist_fun_bool_fun_bool_fun_fun$) C_llist_c_llist_bool_fun_fun_a_c_llist_fun_bool_fun_fun_d_llist_d_llist_bool_fun_fun_b_d_llist_fun_bool_fun_fun_bool_fun_fun$)
(declare-fun rel_fun$io (A_a_bool_fun_fun_b_b_bool_fun_fun_bool_fun_fun$ A_a_bool_fun_fun_a_a_fun_bool_fun_fun_b_b_bool_fun_fun_b_b_fun_bool_fun_fun_bool_fun_fun$ A_a_bool_fun_fun_a_a_bool_fun_fun_a_a_fun_bool_fun_fun_fun$ B_b_bool_fun_fun_b_b_bool_fun_fun_b_b_fun_bool_fun_fun_fun$) Bool)
(declare-fun rel_fun$ip (A_a_bool_fun_fun_b_b_bool_fun_fun_bool_fun_fun$ A_a_fun_bool_fun_b_b_fun_bool_fun_bool_fun_fun$) A_a_bool_fun_fun_a_a_fun_bool_fun_fun_b_b_bool_fun_fun_b_b_fun_bool_fun_fun_bool_fun_fun$)
(declare-fun rel_fun$iq (A_a_bool_fun_fun_b_b_bool_fun_fun_bool_fun_fun$ Bool_bool_bool_fun_fun$ A_a_bool_fun_fun_bool_fun$ B_b_bool_fun_fun_bool_fun$) Bool)
(declare-fun rel_fun$ir (A_a_bool_fun_fun_b_b_bool_fun_fun_bool_fun_fun$ A_bool_fun_b_bool_fun_bool_fun_fun$ A_a_bool_fun_fun_a_bool_fun_fun$ B_b_bool_fun_fun_b_bool_fun_fun$) Bool)
(declare-fun rel_fun$is (A_bool_fun_b_bool_fun_bool_fun_fun$ A_bool_a_bool_fun_fun_fun_b_bool_b_bool_fun_fun_fun_bool_fun_fun$ A_bool_fun_a_bool_a_bool_fun_fun_fun_fun$ B_bool_fun_b_bool_b_bool_fun_fun_fun_fun$) Bool)
(declare-fun rel_fun$it (A_b_bool_fun_fun$ Bool_a_bool_fun_fun_bool_b_bool_fun_fun_bool_fun_fun$) A_bool_a_bool_fun_fun_fun_b_bool_b_bool_fun_fun_fun_bool_fun_fun$)
(declare-fun rel_fun$iu (A_a_fun_b_b_fun_bool_fun_fun$ A_a_a_a_fun_fun_fun_b_b_b_b_fun_fun_fun_bool_fun_fun$ A_a_fun_a_a_a_a_fun_fun_fun_fun$ B_b_fun_b_b_b_b_fun_fun_fun_fun$) Bool)
(declare-fun rel_fun$iv (A_b_bool_fun_fun$ A_a_a_fun_fun_b_b_b_fun_fun_bool_fun_fun$) A_a_a_a_fun_fun_fun_b_b_b_b_fun_fun_fun_bool_fun_fun$)
(declare-fun rel_fun$iw (A_c_fun_b_d_fun_bool_fun_fun$ A_c_a_c_fun_fun_fun_b_d_b_d_fun_fun_fun_bool_fun_fun$ A_c_fun_a_c_a_c_fun_fun_fun_fun$ B_d_fun_b_d_b_d_fun_fun_fun_fun$) Bool)
(declare-fun rel_fun$ix (A_b_bool_fun_fun$ C_a_c_fun_fun_d_b_d_fun_fun_bool_fun_fun$) A_c_a_c_fun_fun_fun_b_d_b_d_fun_fun_fun_bool_fun_fun$)
(declare-fun rel_fun$iy (C_d_bool_fun_fun$ A_c_fun_b_d_fun_bool_fun_fun$) C_a_c_fun_fun_d_b_d_fun_fun_bool_fun_fun$)
(declare-fun rel_fun$iz (A_c_llist_fun_b_d_llist_fun_bool_fun_fun$ A_c_llist_a_c_llist_fun_fun_fun_b_d_llist_b_d_llist_fun_fun_fun_bool_fun_fun$ A_c_llist_fun_a_c_llist_a_c_llist_fun_fun_fun_fun$ B_d_llist_fun_b_d_llist_b_d_llist_fun_fun_fun_fun$) Bool)
(declare-fun rel_fun$ja (A_b_bool_fun_fun$ C_llist_a_c_llist_fun_fun_d_llist_b_d_llist_fun_fun_bool_fun_fun$) A_c_llist_a_c_llist_fun_fun_fun_b_d_llist_b_d_llist_fun_fun_fun_bool_fun_fun$)
(declare-fun rel_fun$jb (C_llist_d_llist_bool_fun_fun$ A_c_llist_fun_b_d_llist_fun_bool_fun_fun$) C_llist_a_c_llist_fun_fun_d_llist_b_d_llist_fun_fun_bool_fun_fun$)
(declare-fun rel_fun$jc (A_a_bool_fun_fun_b_b_bool_fun_fun_bool_fun_fun$ A_a_bool_fun_fun_b_b_bool_fun_fun_bool_fun_fun$ A_a_bool_fun_fun_a_a_bool_fun_fun_fun$ B_b_bool_fun_fun_b_b_bool_fun_fun_fun$) Bool)
(declare-fun rel_fun$jd (A_bool_fun_b_bool_fun_bool_fun_fun$ A_a_bool_fun_fun_b_b_bool_fun_fun_bool_fun_fun$ A_bool_fun_a_a_bool_fun_fun_fun$ B_bool_fun_b_b_bool_fun_fun_fun$) Bool)
(declare-fun rel_fun$je (A_bool_fun_bool_fun_b_bool_fun_bool_fun_bool_fun_fun$ Bool_bool_bool_fun_fun$ A_bool_fun_bool_fun_bool_fun$ B_bool_fun_bool_fun_bool_fun$) Bool)
(declare-fun relcompp$a (C_llist_c_llist_bool_fun_fun$) C_llist_d_llist_bool_fun_fun_c_llist_d_llist_bool_fun_fun_fun$)
(declare-fun relcompp$b (C_d_bool_fun_fun$ D_d_bool_fun_fun$) C_d_bool_fun_fun$)
(declare-fun relcompp$c (C_llist_d_llist_bool_fun_fun$) D_llist_d_llist_bool_fun_fun_c_llist_d_llist_bool_fun_fun_fun$)
(declare-fun relcompp$d (A_bool_fun_a_bool_fun_bool_fun_fun$ A_bool_fun_b_bool_fun_bool_fun_fun$) A_bool_fun_b_bool_fun_bool_fun_fun$)
(declare-fun relcompp$e (A_a_bool_fun_fun$) A_b_bool_fun_fun_a_b_bool_fun_fun_fun$)
(declare-fun relcompp$f (Bool_bool_bool_fun_fun$) Bool_bool_bool_fun_fun_bool_bool_bool_fun_fun_fun$)
(declare-fun relcompp$g (A_a_fun_a_a_fun_bool_fun_fun$ A_a_fun_b_b_fun_bool_fun_fun$) A_a_fun_b_b_fun_bool_fun_fun$)
(declare-fun relcompp$h (A_c_fun_a_c_fun_bool_fun_fun$ A_c_fun_b_d_fun_bool_fun_fun$) A_c_fun_b_d_fun_bool_fun_fun$)
(declare-fun relcompp$i (A_c_llist_fun_a_c_llist_fun_bool_fun_fun$ A_c_llist_fun_b_d_llist_fun_bool_fun_fun$) A_c_llist_fun_b_d_llist_fun_bool_fun_fun$)
(declare-fun relcompp$j (A_bool_fun_b_bool_fun_bool_fun_fun$ B_bool_fun_b_bool_fun_bool_fun_fun$) A_bool_fun_b_bool_fun_bool_fun_fun$)
(declare-fun relcompp$k (A_b_bool_fun_fun$) B_b_bool_fun_fun_a_b_bool_fun_fun_fun$)
(declare-fun relcompp$l (A_a_fun_b_b_fun_bool_fun_fun$ B_b_fun_b_b_fun_bool_fun_fun$) A_a_fun_b_b_fun_bool_fun_fun$)
(declare-fun relcompp$m (A_c_fun_b_d_fun_bool_fun_fun$ B_d_fun_b_d_fun_bool_fun_fun$) A_c_fun_b_d_fun_bool_fun_fun$)
(declare-fun relcompp$n (A_c_llist_fun_b_d_llist_fun_bool_fun_fun$ B_d_llist_fun_b_d_llist_fun_bool_fun_fun$) A_c_llist_fun_b_d_llist_fun_bool_fun_fun$)
(declare-fun rtranclp$a () B_b_bool_fun_fun_b_b_bool_fun_fun_fun$)
(declare-fun bi_unique$a (Bool_bool_bool_fun_fun$) Bool)
(declare-fun bi_unique$b (A_bool_fun_b_bool_fun_bool_fun_fun$) Bool)
(declare-fun bi_unique$c (A_a_fun_b_b_fun_bool_fun_fun$) Bool)
(declare-fun bi_unique$d (C_d_bool_fun_fun$) Bool)
(declare-fun bi_unique$e (A_c_fun_b_d_fun_bool_fun_fun$) Bool)
(declare-fun bi_unique$f (C_llist_d_llist_bool_fun_fun$) Bool)
(declare-fun bi_unique$g (A_c_llist_fun_b_d_llist_fun_bool_fun_fun$) Bool)
(declare-fun is_filter$a () B_bool_fun_bool_fun_bool_fun$)
(declare-fun left_total$ (C_d_bool_fun_fun$) Bool)
(declare-fun llist_all2$ () C_d_bool_fun_fun_c_llist_d_llist_bool_fun_fun_fun$)
(declare-fun pred_llist$ (C_bool_fun$) C_llist_bool_fun$)
(declare-fun corec_llist$ () A_bool_fun_a_c_fun_a_bool_fun_a_c_llist_fun_a_a_fun_a_c_llist_fun_fun_fun_fun_fun_fun$)
(declare-fun left_total$a (C_llist_d_llist_bool_fun_fun$) Bool)
(declare-fun left_total$b (A_b_bool_fun_fun$) Bool)
(declare-fun left_total$c (B_b_bool_fun_fun$) Bool)
(declare-fun left_total$d (Bool_bool_bool_fun_fun$) Bool)
(declare-fun left_total$e (A_bool_fun_b_bool_fun_bool_fun_fun$) Bool)
(declare-fun left_total$f (A_a_fun_b_b_fun_bool_fun_fun$) Bool)
(declare-fun left_total$g (A_c_fun_b_d_fun_bool_fun_fun$) Bool)
(declare-fun left_total$h (A_c_llist_fun_b_d_llist_fun_bool_fun_fun$) Bool)
(declare-fun left_unique$ (A_a_bool_fun_fun$) Bool)
(declare-fun llist_all2$a () D_d_bool_fun_fun_d_llist_d_llist_bool_fun_fun_fun$)
(declare-fun llist_all2$b (D_c_bool_fun_fun$) D_llist_c_llist_bool_fun_fun$)
(declare-fun llist_all2$c () D_b_bool_fun_fun_d_llist_b_llist_bool_fun_fun_fun$)
(declare-fun llist_all2$d () C_c_bool_fun_fun_c_llist_c_llist_bool_fun_fun_fun$)
(declare-fun llist_all2$e () C_a_bool_fun_fun_c_llist_a_llist_bool_fun_fun_fun$)
(declare-fun llist_all2$f (A_b_bool_fun_fun$) A_llist_b_llist_bool_fun_fun$)
(declare-fun llist_all2$g (Bool_bool_bool_fun_fun$) Bool_llist_bool_llist_bool_fun_fun$)
(declare-fun llist_all2$h (C_llist_d_llist_bool_fun_fun$) C_llist_llist_d_llist_llist_bool_fun_fun$)
(declare-fun llist_all2$i (B_b_bool_fun_fun$) B_llist_b_llist_bool_fun_fun$)
(declare-fun llist_all2$j (B_bool_bool_fun_fun$) B_llist_bool_llist_bool_fun_fun$)
(declare-fun llist_all2$k (B_c_bool_fun_fun$) B_llist_c_llist_bool_fun_fun$)
(declare-fun llist_all2$l (B_a_bool_fun_fun$) B_llist_a_llist_bool_fun_fun$)
(declare-fun llist_all2$m (Bool_b_bool_fun_fun$) Bool_llist_b_llist_bool_fun_fun$)
(declare-fun rev_implies$ () Bool_bool_bool_fun_fun$)
(declare-fun right_total$ (A_b_bool_fun_fun$) Bool)
(declare-fun corec_llist$a () B_bool_fun_b_d_fun_b_bool_fun_b_d_llist_fun_b_b_fun_b_d_llist_fun_fun_fun_fun_fun_fun$)
(declare-fun corec_llist$b () B_bool_fun_b_bool_fun_b_bool_fun_b_bool_llist_fun_b_b_fun_b_bool_llist_fun_fun_fun_fun_fun_fun$)
(declare-fun corec_llist$c () B_bool_fun_b_b_fun_b_bool_fun_b_b_llist_fun_b_b_fun_b_b_llist_fun_fun_fun_fun_fun_fun$)
(declare-fun corec_llist$d () A_bool_fun_a_c_llist_fun_a_bool_fun_a_c_llist_llist_fun_a_a_fun_a_c_llist_llist_fun_fun_fun_fun_fun_fun$)
(declare-fun corec_llist$e () A_bool_fun_a_bool_fun_a_bool_fun_a_bool_llist_fun_a_a_fun_a_bool_llist_fun_fun_fun_fun_fun_fun$)
(declare-fun corec_llist$f () A_bool_fun_a_a_fun_a_bool_fun_a_a_llist_fun_a_a_fun_a_a_llist_fun_fun_fun_fun_fun_fun$)
(declare-fun corec_llist$g () B_bool_fun_b_d_llist_fun_b_bool_fun_b_d_llist_llist_fun_b_b_fun_b_d_llist_llist_fun_fun_fun_fun_fun_fun$)
(declare-fun corec_llist$h () A_bool_fun_a_d_fun_a_bool_fun_a_d_llist_fun_a_a_fun_a_d_llist_fun_fun_fun_fun_fun_fun$)
(declare-fun corec_llist$i () B_bool_fun_b_c_fun_b_bool_fun_b_c_llist_fun_b_b_fun_b_c_llist_fun_fun_fun_fun_fun_fun$)
(declare-fun corec_llist$j () A_bool_fun_a_b_fun_a_bool_fun_a_b_llist_fun_a_a_fun_a_b_llist_fun_fun_fun_fun_fun_fun$)
(declare-fun left_unique$a (A_b_bool_fun_fun$) Bool)
(declare-fun left_unique$b (C_d_bool_fun_fun$) Bool)
(declare-fun left_unique$c (C_llist_d_llist_bool_fun_fun$) Bool)
(declare-fun left_unique$d (Bool_bool_bool_fun_fun$) Bool)
(declare-fun left_unique$e (A_bool_fun_b_bool_fun_bool_fun_fun$) Bool)
(declare-fun left_unique$f (A_a_fun_b_b_fun_bool_fun_fun$) Bool)
(declare-fun left_unique$g (A_c_fun_b_d_fun_bool_fun_fun$) Bool)
(declare-fun left_unique$h (A_c_llist_fun_b_d_llist_fun_bool_fun_fun$) Bool)
(declare-fun left_unique$i (B_b_bool_fun_fun$) Bool)
(declare-fun left_unique$j (D_d_bool_fun_fun$) Bool)
(declare-fun left_unique$k (D_llist_d_llist_bool_fun_fun$) Bool)
(declare-fun right_total$a (C_d_bool_fun_fun$) Bool)
(declare-fun right_total$b (C_llist_d_llist_bool_fun_fun$) Bool)
(declare-fun right_total$c (A_a_bool_fun_fun$) Bool)
(declare-fun right_total$d (Bool_bool_bool_fun_fun$) Bool)
(declare-fun right_total$e (A_bool_fun_b_bool_fun_bool_fun_fun$) Bool)
(declare-fun right_total$f (A_a_fun_b_b_fun_bool_fun_fun$) Bool)
(declare-fun right_total$g (A_c_fun_b_d_fun_bool_fun_fun$) Bool)
(declare-fun right_total$h (A_c_llist_fun_b_d_llist_fun_bool_fun_fun$) Bool)
(declare-fun right_total$i (B_b_bool_fun_fun$) Bool)
(declare-fun right_total$j (D_d_bool_fun_fun$) Bool)
(declare-fun right_total$k (D_llist_d_llist_bool_fun_fun$) Bool)
(declare-fun right_unique$ (A_b_bool_fun_fun$) Bool)
(declare-fun unfold_llist$ () B_bool_fun_b_b_fun_b_b_fun_b_b_llist_fun_fun_fun_fun$)
(declare-fun right_unique$a (B_b_bool_fun_fun$) Bool)
(declare-fun right_unique$b (Bool_bool_bool_fun_fun$) Bool)
(declare-fun right_unique$c (A_bool_fun_b_bool_fun_bool_fun_fun$) Bool)
(declare-fun right_unique$d (A_a_fun_b_b_fun_bool_fun_fun$) Bool)
(declare-fun right_unique$e (C_d_bool_fun_fun$) Bool)
(declare-fun right_unique$f (A_c_fun_b_d_fun_bool_fun_fun$) Bool)
(declare-fun right_unique$g (C_llist_d_llist_bool_fun_fun$) Bool)
(declare-fun right_unique$h (A_c_llist_fun_b_d_llist_fun_bool_fun_fun$) Bool)
(declare-fun unfold_llist$a () A_bool_fun_a_c_llist_fun_a_a_fun_a_c_llist_llist_fun_fun_fun_fun$)
(declare-fun unfold_llist$b () A_bool_fun_a_bool_fun_a_a_fun_a_bool_llist_fun_fun_fun_fun$)
(declare-fun unfold_llist$c () A_bool_fun_a_c_fun_a_a_fun_a_c_llist_fun_fun_fun_fun$)
(declare-fun unfold_llist$d () A_bool_fun_a_a_fun_a_a_fun_a_a_llist_fun_fun_fun_fun$)
(declare-fun unfold_llist$e () B_bool_fun_b_bool_fun_b_b_fun_b_bool_llist_fun_fun_fun_fun$)
(declare-fun unfold_llist$f () B_bool_fun_b_d_fun_b_b_fun_b_d_llist_fun_fun_fun_fun$)
(declare-fun unfold_llist$g () B_bool_fun_b_d_llist_fun_b_b_fun_b_d_llist_llist_fun_fun_fun_fun$)
(declare-fun transfer_forall$ () A_bool_fun_bool_fun$)
(declare-fun transfer_bforall$ (A_bool_fun$) A_bool_fun_bool_fun$)
(declare-fun transfer_forall$a () B_bool_fun_bool_fun$)
(declare-fun ?v1!0 (B_bool_fun$) B$)
(declare-fun ?v2!1 (B$ B_bool_fun$) B$)
(declare-fun ?v2!3 (A$ A_bool_fun$) A$)
(declare-fun ?v1!2 (A_bool_fun$) A$)
(declare-fun z3name!4 (B$ B$ Bool) B$)
(declare-fun z3name!5 (A$ A$ Bool) A$)
(declare-fun ?v1!6 (C_llist_set$) C_llist$)
(declare-fun ?v1!7 (D_llist_set$) D_llist$)
(declare-fun ?v2!8 (C_c_bool_fun_fun$) C$)
(declare-fun ?v3!10 (D_d_bool_fun_fun$) D$)
(declare-fun ?v4!9 (D_d_bool_fun_fun$) D$)
(declare-fun ?v4!11 (C_c_bool_fun_fun$) C$)
(declare-fun ?v3!12 (C_c_bool_fun_fun$) C$)
(declare-fun ?v4!15 (D_d_bool_fun_fun$) D$)
(declare-fun ?v5!14 (D_d_bool_fun_fun$) D$)
(declare-fun ?v6!13 (D_d_bool_fun_fun$) D$)
(declare-fun ?v6!16 (C_c_bool_fun_fun$) C$)
(declare-fun ?v4!18 (C_c_bool_fun_fun$) C$)
(declare-fun ?v5!17 (C_c_bool_fun_fun$) C$)
(declare-fun ?v3!20 (D_d_bool_fun_fun$) D$)
(declare-fun ?v4!19 (D_d_bool_fun_fun$) D$)
(declare-fun ?v3!22 (C_c_bool_fun_fun$) C$)
(declare-fun ?v4!21 (C_c_bool_fun_fun$) C$)
(declare-fun ?v4!24 (D_c_bool_fun_fun$ D_c_bool_fun_fun$) D$)
(declare-fun ?v5!23 (D_c_bool_fun_fun$ D_c_bool_fun_fun$) C$)
(declare-fun ?v4!26 (D_b_bool_fun_fun$ D_b_bool_fun_fun$) D$)
(declare-fun ?v5!25 (D_b_bool_fun_fun$ D_b_bool_fun_fun$) B$)
(declare-fun ?v4!28 (C_c_bool_fun_fun$ C_c_bool_fun_fun$) C$)
(declare-fun ?v5!27 (C_c_bool_fun_fun$ C_c_bool_fun_fun$) C$)
(declare-fun ?v4!30 (C_a_bool_fun_fun$ C_a_bool_fun_fun$) C$)
(declare-fun ?v5!29 (C_a_bool_fun_fun$ C_a_bool_fun_fun$) A$)
(declare-fun ?v5!31 (A_b_bool_fun_fun$ A_b_bool_fun_fun$) B$)
(declare-fun ?v4!32 (A_b_bool_fun_fun$ A_b_bool_fun_fun$) A$)
(declare-fun ?v4!34 (C_d_bool_fun_fun$ C_d_bool_fun_fun$) C$)
(declare-fun ?v5!33 (C_d_bool_fun_fun$ C_d_bool_fun_fun$) D$)
(declare-fun ?v4!36 (B_b_b_fun_fun$ A_a_a_fun_fun$ A_a_fun_b_b_fun_bool_fun_fun$ A_b_bool_fun_fun$) A$)
(declare-fun ?v5!35 (B_b_b_fun_fun$ A_a_a_fun_fun$ A_a_fun_b_b_fun_bool_fun_fun$ A_b_bool_fun_fun$) B$)
(declare-fun ?v5!37 (A_c_llist_fun$ A_c_llist_fun$ C_llist_c_llist_bool_fun_fun$ A_a_bool_fun_fun$) A$)
(declare-fun ?v4!38 (A_c_llist_fun$ A_c_llist_fun$ C_llist_c_llist_bool_fun_fun$ A_a_bool_fun_fun$) A$)
(declare-fun ?v4!40 (A_bool_fun$ A_bool_fun$ Bool_bool_bool_fun_fun$ A_a_bool_fun_fun$) A$)
(declare-fun ?v5!39 (A_bool_fun$ A_bool_fun$ Bool_bool_bool_fun_fun$ A_a_bool_fun_fun$) A$)
(declare-fun ?v5!41 (A_c_fun$ A_c_fun$ C_c_bool_fun_fun$ A_a_bool_fun_fun$) A$)
(declare-fun ?v4!42 (A_c_fun$ A_c_fun$ C_c_bool_fun_fun$ A_a_bool_fun_fun$) A$)
(declare-fun ?v4!44 (A_a_fun$ A_a_fun$ A_a_bool_fun_fun$ A_a_bool_fun_fun$) A$)
(declare-fun ?v5!43 (A_a_fun$ A_a_fun$ A_a_bool_fun_fun$ A_a_bool_fun_fun$) A$)
(declare-fun ?v4!46 (B_bool_fun$ A_bool_fun$ Bool_bool_bool_fun_fun$ A_b_bool_fun_fun$) A$)
(declare-fun ?v5!45 (B_bool_fun$ A_bool_fun$ Bool_bool_bool_fun_fun$ A_b_bool_fun_fun$) B$)
(declare-fun ?v5!47 (B_b_fun$ A_a_fun$ A_b_bool_fun_fun$ A_b_bool_fun_fun$) B$)
(declare-fun ?v4!48 (B_b_fun$ A_a_fun$ A_b_bool_fun_fun$ A_b_bool_fun_fun$) A$)
(declare-fun ?v4!50 (B_d_fun$ A_c_fun$ C_d_bool_fun_fun$ A_b_bool_fun_fun$) A$)
(declare-fun ?v5!49 (B_d_fun$ A_c_fun$ C_d_bool_fun_fun$ A_b_bool_fun_fun$) B$)
(declare-fun ?v5!51 (B_d_llist_fun$ A_c_llist_fun$ C_llist_d_llist_bool_fun_fun$ A_b_bool_fun_fun$) B$)
(declare-fun ?v4!52 (B_d_llist_fun$ A_c_llist_fun$ C_llist_d_llist_bool_fun_fun$ A_b_bool_fun_fun$) A$)
(declare-fun ?v6!53 (B_b_b_fun_fun$ A_a_a_fun_fun$ A_b_bool_fun_fun$ A_b_bool_fun_fun$ A_b_bool_fun_fun$) B$)
(declare-fun ?v5!54 (B_b_b_fun_fun$ A_a_a_fun_fun$ A_b_bool_fun_fun$ A_b_bool_fun_fun$ A_b_bool_fun_fun$) A$)
(declare-fun ?v6!58 (C_c_bool_fun_fun$ C_c_bool_fun_fun$) C$)
(declare-fun ?v7!55 (A_a_bool_fun_fun$ A_a_bool_fun_fun$) A$)
(declare-fun ?v7!57 (C_c_bool_fun_fun$ C_c_bool_fun_fun$) C$)
(declare-fun ?v6!56 (A_a_bool_fun_fun$ A_a_bool_fun_fun$) A$)
(declare-fun ?v6!60 (A_a_bool_fun_fun$ A_a_bool_fun_fun$) A$)
(declare-fun ?v6!62 (A_a_bool_fun_fun$ A_a_bool_fun_fun$) A$)
(declare-fun ?v7!59 (A_a_bool_fun_fun$ A_a_bool_fun_fun$) A$)
(declare-fun ?v7!61 (A_a_bool_fun_fun$ A_a_bool_fun_fun$) A$)
(declare-fun ?v6!66 (Bool_bool_bool_fun_fun$ Bool_bool_bool_fun_fun$) Bool)
(declare-fun ?v6!64 (A_b_bool_fun_fun$ A_b_bool_fun_fun$) A$)
(declare-fun ?v7!65 (Bool_bool_bool_fun_fun$ Bool_bool_bool_fun_fun$) Bool)
(declare-fun ?v7!63 (A_b_bool_fun_fun$ A_b_bool_fun_fun$) B$)
(declare-fun ?v6!68 (A_b_bool_fun_fun$ A_b_bool_fun_fun$) A$)
(declare-fun ?v7!69 (A_b_bool_fun_fun$ A_b_bool_fun_fun$) B$)
(declare-fun ?v6!70 (A_b_bool_fun_fun$ A_b_bool_fun_fun$) A$)
(declare-fun ?v7!67 (A_b_bool_fun_fun$ A_b_bool_fun_fun$) B$)
(declare-fun ?v6!72 (A_b_bool_fun_fun$ A_b_bool_fun_fun$) A$)
(declare-fun ?v6!74 (C_d_bool_fun_fun$ C_d_bool_fun_fun$) C$)
(declare-fun ?v7!71 (A_b_bool_fun_fun$ A_b_bool_fun_fun$) B$)
(declare-fun ?v7!73 (C_d_bool_fun_fun$ C_d_bool_fun_fun$) D$)
(declare-fun ?v7!77 (C_llist_d_llist_bool_fun_fun$ C_llist_d_llist_bool_fun_fun$) D_llist$)
(declare-fun ?v6!76 (A_b_bool_fun_fun$ A_b_bool_fun_fun$) A$)
(declare-fun ?v6!78 (C_llist_d_llist_bool_fun_fun$ C_llist_d_llist_bool_fun_fun$) C_llist$)
(declare-fun ?v7!75 (A_b_bool_fun_fun$ A_b_bool_fun_fun$) B$)
(declare-fun ?v7!81 (Bool_bool_bool_fun_fun$ Bool_bool_bool_fun_fun$) Bool)
(declare-fun ?v6!82 (Bool_bool_bool_fun_fun$ Bool_bool_bool_fun_fun$) Bool)
(declare-fun ?v6!80 (A_b_bool_fun_fun$ A_b_bool_fun_fun$) A$)
(declare-fun ?v7!79 (A_b_bool_fun_fun$ A_b_bool_fun_fun$) B$)
(declare-fun ?v7!85 (A_b_bool_fun_fun$ A_b_bool_fun_fun$) B$)
(declare-fun ?v6!84 (A_b_bool_fun_fun$ A_b_bool_fun_fun$) A$)
(declare-fun ?v7!83 (A_b_bool_fun_fun$ A_b_bool_fun_fun$) B$)
(declare-fun ?v6!86 (A_b_bool_fun_fun$ A_b_bool_fun_fun$) A$)
(declare-fun ?v6!90 (C_d_bool_fun_fun$ C_d_bool_fun_fun$) C$)
(declare-fun ?v7!89 (C_d_bool_fun_fun$ C_d_bool_fun_fun$) D$)
(declare-fun ?v7!87 (A_b_bool_fun_fun$ A_b_bool_fun_fun$) B$)
(declare-fun ?v6!88 (A_b_bool_fun_fun$ A_b_bool_fun_fun$) A$)
(declare-fun ?v6!92 (A_b_bool_fun_fun$ A_b_bool_fun_fun$) A$)
(declare-fun ?v7!93 (C_llist_d_llist_bool_fun_fun$ C_llist_d_llist_bool_fun_fun$) D_llist$)
(declare-fun ?v7!91 (A_b_bool_fun_fun$ A_b_bool_fun_fun$) B$)
(declare-fun ?v6!94 (C_llist_d_llist_bool_fun_fun$ C_llist_d_llist_bool_fun_fun$) C_llist$)
(assert (! (forall ((?v0py0 B_bool_fun$)) (! (and (or (not (fun_app$ uux$ ?v0py0)) (and (fun_app$a ?v0py0 (?v1!0 ?v0py0)) (forall ((?v2py0 B$)) (! (or (not (fun_app$a ?v0py0 ?v2py0)) (= ?v2py0 (?v1!0 ?v0py0))) :pattern ((fun_app$a ?v0py0 ?v2py0)) )))) (or (fun_app$ uux$ ?v0py0) (forall ((?v1py0 B$)) (! (or (not (fun_app$a ?v0py0 ?v1py0)) (and (fun_app$a ?v0py0 (?v2!1 ?v1py0 ?v0py0)) (not (= (?v2!1 ?v1py0 ?v0py0) ?v1py0)))) :pattern ((?v2!1 ?v1py0 ?v0py0)) )))) :pattern ((fun_app$ uux$ ?v0py0)) )) :named A0))
(assert (! (forall ((?v0py1 A_bool_fun$)) (! (and (or (not (fun_app$b uuw$ ?v0py1)) (and (fun_app$c ?v0py1 (?v1!2 ?v0py1)) (forall ((?v2py1 A$)) (! (or (not (fun_app$c ?v0py1 ?v2py1)) (= ?v2py1 (?v1!2 ?v0py1))) :pattern ((fun_app$c ?v0py1 ?v2py1)) )))) (or (fun_app$b uuw$ ?v0py1) (forall ((?v1py1 A$)) (! (or (not (fun_app$c ?v0py1 ?v1py1)) (and (fun_app$c ?v0py1 (?v2!3 ?v1py1 ?v0py1)) (not (= (?v2!3 ?v1py1 ?v0py1) ?v1py1)))) :pattern ((?v2!3 ?v1py1 ?v0py1)) )))) :pattern ((fun_app$b uuw$ ?v0py1)) )) :named A1))
(assert (! (forall ((?v0py2 Bool)(?v1py2 Bool)) (! (and (or ?v1py2 (not ?v0py2) (not (fun_app$d (fun_app$e uuu$ ?v0py2) ?v1py2))) (or (fun_app$d (fun_app$e uuu$ ?v0py2) ?v1py2) (and ?v0py2 (not ?v1py2)))) :pattern ((fun_app$d (fun_app$e uuu$ ?v0py2) ?v1py2)) )) :named A2))
(assert (! (forall ((?v0py3 D_llist_set$)(?v1py3 D_llist$)) (! (and (or (not (fun_app$f (uud$ ?v0py3) ?v1py3)) (member$ ?v1py3 ?v0py3)) (or (fun_app$f (uud$ ?v0py3) ?v1py3) (not (member$ ?v1py3 ?v0py3)))) :pattern ((fun_app$f (uud$ ?v0py3) ?v1py3)) )) :named A3))
(assert (! (forall ((?v0py4 C_llist_set$)(?v1py4 C_llist$)) (! (and (or (not (fun_app$g (uue$ ?v0py4) ?v1py4)) (member$a ?v1py4 ?v0py4)) (or (fun_app$g (uue$ ?v0py4) ?v1py4) (not (member$a ?v1py4 ?v0py4)))) :pattern ((fun_app$g (uue$ ?v0py4) ?v1py4)) )) :named A4))
(assert (! (forall ((?v0py5 C_llist$)(?v1py5 C_llist$)) (! (and (or (not (fun_app$g (fun_app$h uub$ ?v0py5) ?v1py5)) (= ?v0py5 ?v1py5)) (or (fun_app$g (fun_app$h uub$ ?v0py5) ?v1py5) (not (= ?v0py5 ?v1py5)))) :pattern ((fun_app$g (fun_app$h uub$ ?v0py5) ?v1py5)) )) :named A5))
(assert (! (forall ((?v0py6 Bool)(?v1py6 Bool)) (! (and (or (not (fun_app$d (fun_app$e uu$ ?v0py6) ?v1py6)) (and (or (not ?v0py6) ?v1py6) (or ?v0py6 (not ?v1py6)))) (or (fun_app$d (fun_app$e uu$ ?v0py6) ?v1py6) (and (or ?v0py6 ?v1py6) (or (not ?v0py6) (not ?v1py6))))) :pattern ((fun_app$d (fun_app$e uu$ ?v0py6) ?v1py6)) )) :named A6))
(assert (! (forall ((?v0py7 Bool_bool_fun$)(?v1py7 Bool_bool_fun$)) (! (and (or (not (fun_app$i (fun_app$j uut$ ?v0py7) ?v1py7)) (= ?v0py7 ?v1py7)) (or (fun_app$i (fun_app$j uut$ ?v0py7) ?v1py7) (not (= ?v0py7 ?v1py7)))) :pattern ((fun_app$i (fun_app$j uut$ ?v0py7) ?v1py7)) )) :named A7))
(assert (! (forall ((?v0py8 A_c_llist_fun$)(?v1py8 A_c_llist_fun$)) (! (and (or (not (fun_app$k (fun_app$l uuf$ ?v0py8) ?v1py8)) (= ?v0py8 ?v1py8)) (or (fun_app$k (fun_app$l uuf$ ?v0py8) ?v1py8) (not (= ?v0py8 ?v1py8)))) :pattern ((fun_app$k (fun_app$l uuf$ ?v0py8) ?v1py8)) )) :named A8))
(assert (! (forall ((?v0py9 A_bool_fun$)(?v1py9 A_bool_fun$)) (! (and (or (not (fun_app$b (fun_app$m uug$ ?v0py9) ?v1py9)) (= ?v0py9 ?v1py9)) (or (fun_app$b (fun_app$m uug$ ?v0py9) ?v1py9) (not (= ?v0py9 ?v1py9)))) :pattern ((fun_app$b (fun_app$m uug$ ?v0py9) ?v1py9)) )) :named A9))
(assert (! (forall ((?v0py10 A_c_fun$)(?v1py10 A_c_fun$)) (! (and (or (not (fun_app$n (fun_app$o uuh$ ?v0py10) ?v1py10)) (= ?v0py10 ?v1py10)) (or (fun_app$n (fun_app$o uuh$ ?v0py10) ?v1py10) (not (= ?v0py10 ?v1py10)))) :pattern ((fun_app$n (fun_app$o uuh$ ?v0py10) ?v1py10)) )) :named A10))
(assert (! (forall ((?v0py11 A_a_fun$)(?v1py11 A_a_fun$)) (! (and (or (not (fun_app$p (fun_app$q uui$ ?v0py11) ?v1py11)) (= ?v0py11 ?v1py11)) (or (fun_app$p (fun_app$q uui$ ?v0py11) ?v1py11) (not (= ?v0py11 ?v1py11)))) :pattern ((fun_app$p (fun_app$q uui$ ?v0py11) ?v1py11)) )) :named A11))
(assert (! (forall ((?v0py12 C$)(?v1py12 C$)) (! (and (or (not (fun_app$r (fun_app$s uua$ ?v0py12) ?v1py12)) (= ?v0py12 ?v1py12)) (or (fun_app$r (fun_app$s uua$ ?v0py12) ?v1py12) (not (= ?v0py12 ?v1py12)))) :pattern ((fun_app$r (fun_app$s uua$ ?v0py12) ?v1py12)) )) :named A12))
(assert (! (forall ((?v0py13 B$)(?v1py13 B$)) (! (and (or (not (fun_app$a (fun_app$t uuv$ ?v0py13) ?v1py13)) (= ?v0py13 ?v1py13)) (or (fun_app$a (fun_app$t uuv$ ?v0py13) ?v1py13) (not (= ?v0py13 ?v1py13)))) :pattern ((fun_app$a (fun_app$t uuv$ ?v0py13) ?v1py13)) )) :named A13))
(assert (! (forall ((?v0py14 A$)(?v1py14 A$)) (! (and (or (not (fun_app$c (fun_app$u uuc$ ?v0py14) ?v1py14)) (= ?v0py14 ?v1py14)) (or (fun_app$c (fun_app$u uuc$ ?v0py14) ?v1py14) (not (= ?v0py14 ?v1py14)))) :pattern ((fun_app$c (fun_app$u uuc$ ?v0py14) ?v1py14)) )) :named A14))
(assert (! (forall ((?v0py15 B$)(?v1py15 B_d_llist_fun$)) (! (= (fun_app$v (fun_app$w uus$ ?v0py15) ?v1py15) (fun_app$x ?v1py15 ?v0py15)) :pattern ((fun_app$v (fun_app$w uus$ ?v0py15) ?v1py15)) )) :named A15))
(assert (! (forall ((?v0py16 B$)(?v1py16 B_bool_fun$)) (! (and (or (not (fun_app$ (fun_app$y uum$ ?v0py16) ?v1py16)) (fun_app$a ?v1py16 ?v0py16)) (or (fun_app$ (fun_app$y uum$ ?v0py16) ?v1py16) (not (fun_app$a ?v1py16 ?v0py16)))) :pattern ((fun_app$ (fun_app$y uum$ ?v0py16) ?v1py16)) )) :named A16))
(assert (! (forall ((?v0py17 B$)(?v1py17 B_d_fun$)) (! (= (fun_app$z (fun_app$aa uuq$ ?v0py17) ?v1py17) (fun_app$ab ?v1py17 ?v0py17)) :pattern ((fun_app$z (fun_app$aa uuq$ ?v0py17) ?v1py17)) )) :named A17))
(assert (! (forall ((?v0py18 B$)(?v1py18 B_b_fun$)) (! (= (fun_app$ac (fun_app$ad uuo$ ?v0py18) ?v1py18) (fun_app$ae ?v1py18 ?v0py18)) :pattern ((fun_app$ac (fun_app$ad uuo$ ?v0py18) ?v1py18)) )) :named A18))
(assert (! (forall ((?v0py19 A$)(?v1py19 A_c_llist_fun$)) (! (= (fun_app$af (fun_app$ag uur$ ?v0py19) ?v1py19) (fun_app$ah ?v1py19 ?v0py19)) :pattern ((fun_app$af (fun_app$ag uur$ ?v0py19) ?v1py19)) )) :named A19))
(assert (! (forall ((?v0py20 A$)(?v1py20 A_bool_fun$)) (! (and (or (not (fun_app$b (fun_app$ai uul$ ?v0py20) ?v1py20)) (fun_app$c ?v1py20 ?v0py20)) (or (fun_app$b (fun_app$ai uul$ ?v0py20) ?v1py20) (not (fun_app$c ?v1py20 ?v0py20)))) :pattern ((fun_app$b (fun_app$ai uul$ ?v0py20) ?v1py20)) )) :named A20))
(assert (! (forall ((?v0py21 A$)(?v1py21 A_c_fun$)) (! (= (fun_app$aj (fun_app$ak uup$ ?v0py21) ?v1py21) (fun_app$al ?v1py21 ?v0py21)) :pattern ((fun_app$aj (fun_app$ak uup$ ?v0py21) ?v1py21)) )) :named A21))
(assert (! (forall ((?v0py22 A$)(?v1py22 A_a_fun$)) (! (= (fun_app$am (fun_app$an uun$ ?v0py22) ?v1py22) (fun_app$ao ?v1py22 ?v0py22)) :pattern ((fun_app$am (fun_app$an uun$ ?v0py22) ?v1py22)) )) :named A22))
(assert (! (forall ((?v0py23 Bool)(?v1py23 B$)(?v2py2 B$)) (! (= (fun_app$ae (fun_app$ap (fun_app$aq uuk$ ?v0py23) ?v1py23) ?v2py2) (z3name!4 ?v2py2 ?v1py23 ?v0py23)) :pattern ((fun_app$ae (fun_app$ap (fun_app$aq uuk$ ?v0py23) ?v1py23) ?v2py2)) )) :named A23_0))
(assert (! (forall ((x!1py0 Bool)(x!2py0 B$)(x!3py0 B$)) (! (or (not x!1py0) (= (z3name!4 x!3py0 x!2py0 x!1py0) x!2py0)) :pattern ((z3name!4 x!3py0 x!2py0 x!1py0)) )) :named A23_1))
(assert (! (forall ((x!1py1 Bool)(x!2py1 B$)(x!3py1 B$)) (! (or x!1py1 (= (z3name!4 x!3py1 x!2py1 x!1py1) x!3py1)) :pattern ((z3name!4 x!3py1 x!2py1 x!1py1)) )) :named A23_2))
(assert (! (forall ((?v0py24 Bool)(?v1py24 A$)(?v2py3 A$)) (! (= (fun_app$ao (fun_app$ar (fun_app$as uuj$ ?v0py24) ?v1py24) ?v2py3) (z3name!5 ?v2py3 ?v1py24 ?v0py24)) :pattern ((fun_app$ao (fun_app$ar (fun_app$as uuj$ ?v0py24) ?v1py24) ?v2py3)) )) :named A24_0))
(assert (! (forall ((x!1py2 Bool)(x!2py2 A$)(x!3py2 A$)) (! (or (not x!1py2) (= (z3name!5 x!3py2 x!2py2 x!1py2) x!2py2)) :pattern ((z3name!5 x!3py2 x!2py2 x!1py2)) )) :named A24_1))
(assert (! (forall ((x!1py3 Bool)(x!2py3 A$)(x!3py3 A$)) (! (or x!1py3 (= (z3name!5 x!3py3 x!2py3 x!1py3) x!3py3)) :pattern ((z3name!5 x!3py3 x!2py3 x!1py3)) )) :named A24_2))
(assert (! (or (fun_app$g lnull$ (fun_app$ah (fun_app$at (fun_app$au (fun_app$av (fun_app$aw (fun_app$ax corec_llist$ iS_LNIL1$) lHD1$) sTOP1$) mORE1$) lTL1$) xa$)) (fun_app$f lnull$a (fun_app$x (fun_app$ay (fun_app$az (fun_app$ba (fun_app$bb (fun_app$bc corec_llist$a iS_LNIL2$) lHD2$) sTOP2$) mORE2$) lTL2$) ya$))) :named A25_0))
(assert (! (or (not (fun_app$g lnull$ (fun_app$ah (fun_app$at (fun_app$au (fun_app$av (fun_app$aw (fun_app$ax corec_llist$ iS_LNIL1$) lHD1$) sTOP1$) mORE1$) lTL1$) xa$))) (not (fun_app$f lnull$a (fun_app$x (fun_app$ay (fun_app$az (fun_app$ba (fun_app$bb (fun_app$bc corec_llist$a iS_LNIL2$) lHD2$) sTOP2$) mORE2$) lTL2$) ya$)))) :named A25_1))
(assert (! (forall ((?v0py25 B_bool_fun$)(?v1py25 B_bool_fun$)(?v2py4 B_bool_fun$)(?v3py0 B_bool_llist_fun$)(?v4py0 B_b_fun$)(?v5py0 B$)) (! (and (or (lnull$b (fun_app$bd (fun_app$be (fun_app$bf (fun_app$bg (fun_app$bh (fun_app$bi corec_llist$b ?v0py25) ?v1py25) ?v2py4) ?v3py0) ?v4py0) ?v5py0)) (not (fun_app$a ?v0py25 ?v5py0))) (or (not (lnull$b (fun_app$bd (fun_app$be (fun_app$bf (fun_app$bg (fun_app$bh (fun_app$bi corec_llist$b ?v0py25) ?v1py25) ?v2py4) ?v3py0) ?v4py0) ?v5py0))) (fun_app$a ?v0py25 ?v5py0))) :pattern ((fun_app$bd (fun_app$be (fun_app$bf (fun_app$bg (fun_app$bh (fun_app$bi corec_llist$b ?v0py25) ?v1py25) ?v2py4) ?v3py0) ?v4py0) ?v5py0)) )) :named A26))
(assert (! (forall ((?v0py26 B_bool_fun$)(?v1py26 B_b_fun$)(?v2py5 B_bool_fun$)(?v3py1 B_b_llist_fun$)(?v4py1 B_b_fun$)(?v5py1 B$)) (! (and (or (not (fun_app$a ?v0py26 ?v5py1)) (lnull$c (fun_app$bj (fun_app$bk (fun_app$bl (fun_app$bm (fun_app$bn (fun_app$bo corec_llist$c ?v0py26) ?v1py26) ?v2py5) ?v3py1) ?v4py1) ?v5py1))) (or (not (lnull$c (fun_app$bj (fun_app$bk (fun_app$bl (fun_app$bm (fun_app$bn (fun_app$bo corec_llist$c ?v0py26) ?v1py26) ?v2py5) ?v3py1) ?v4py1) ?v5py1))) (fun_app$a ?v0py26 ?v5py1))) :pattern ((fun_app$bj (fun_app$bk (fun_app$bl (fun_app$bm (fun_app$bn (fun_app$bo corec_llist$c ?v0py26) ?v1py26) ?v2py5) ?v3py1) ?v4py1) ?v5py1)) )) :named A27))
(assert (! (forall ((?v0py27 A_bool_fun$)(?v1py27 A_c_llist_fun$)(?v2py6 A_bool_fun$)(?v3py2 A_c_llist_llist_fun$)(?v4py2 A_a_fun$)(?v5py2 A$)) (! (and (or (lnull$d (fun_app$bp (fun_app$bq (fun_app$br (fun_app$bs (fun_app$bt (fun_app$bu corec_llist$d ?v0py27) ?v1py27) ?v2py6) ?v3py2) ?v4py2) ?v5py2)) (not (fun_app$c ?v0py27 ?v5py2))) (or (not (lnull$d (fun_app$bp (fun_app$bq (fun_app$br (fun_app$bs (fun_app$bt (fun_app$bu corec_llist$d ?v0py27) ?v1py27) ?v2py6) ?v3py2) ?v4py2) ?v5py2))) (fun_app$c ?v0py27 ?v5py2))) :pattern ((fun_app$bp (fun_app$bq (fun_app$br (fun_app$bs (fun_app$bt (fun_app$bu corec_llist$d ?v0py27) ?v1py27) ?v2py6) ?v3py2) ?v4py2) ?v5py2)) )) :named A28))
(assert (! (forall ((?v0py28 A_bool_fun$)(?v1py28 A_bool_fun$)(?v2py7 A_bool_fun$)(?v3py3 A_bool_llist_fun$)(?v4py3 A_a_fun$)(?v5py3 A$)) (! (and (or (not (fun_app$c ?v0py28 ?v5py3)) (lnull$b (fun_app$bv (fun_app$bw (fun_app$bx (fun_app$by (fun_app$bz (fun_app$ca corec_llist$e ?v0py28) ?v1py28) ?v2py7) ?v3py3) ?v4py3) ?v5py3))) (or (not (lnull$b (fun_app$bv (fun_app$bw (fun_app$bx (fun_app$by (fun_app$bz (fun_app$ca corec_llist$e ?v0py28) ?v1py28) ?v2py7) ?v3py3) ?v4py3) ?v5py3))) (fun_app$c ?v0py28 ?v5py3))) :pattern ((fun_app$bv (fun_app$bw (fun_app$bx (fun_app$by (fun_app$bz (fun_app$ca corec_llist$e ?v0py28) ?v1py28) ?v2py7) ?v3py3) ?v4py3) ?v5py3)) )) :named A29))
(assert (! (forall ((?v0py29 A_bool_fun$)(?v1py29 A_a_fun$)(?v2py8 A_bool_fun$)(?v3py4 A_a_llist_fun$)(?v4py4 A_a_fun$)(?v5py4 A$)) (! (and (or (not (fun_app$c ?v0py29 ?v5py4)) (lnull$e (fun_app$cb (fun_app$cc (fun_app$cd (fun_app$ce (fun_app$cf (fun_app$cg corec_llist$f ?v0py29) ?v1py29) ?v2py8) ?v3py4) ?v4py4) ?v5py4))) (or (not (lnull$e (fun_app$cb (fun_app$cc (fun_app$cd (fun_app$ce (fun_app$cf (fun_app$cg corec_llist$f ?v0py29) ?v1py29) ?v2py8) ?v3py4) ?v4py4) ?v5py4))) (fun_app$c ?v0py29 ?v5py4))) :pattern ((fun_app$cb (fun_app$cc (fun_app$cd (fun_app$ce (fun_app$cf (fun_app$cg corec_llist$f ?v0py29) ?v1py29) ?v2py8) ?v3py4) ?v4py4) ?v5py4)) )) :named A30))
(assert (! (forall ((?v0py30 A_bool_fun$)(?v1py30 A_c_fun$)(?v2py9 A_bool_fun$)(?v3py5 A_c_llist_fun$)(?v4py5 A_a_fun$)(?v5py5 A$)) (! (and (or (not (fun_app$c ?v0py30 ?v5py5)) (fun_app$g lnull$ (fun_app$ah (fun_app$at (fun_app$au (fun_app$av (fun_app$aw (fun_app$ax corec_llist$ ?v0py30) ?v1py30) ?v2py9) ?v3py5) ?v4py5) ?v5py5))) (or (not (fun_app$g lnull$ (fun_app$ah (fun_app$at (fun_app$au (fun_app$av (fun_app$aw (fun_app$ax corec_llist$ ?v0py30) ?v1py30) ?v2py9) ?v3py5) ?v4py5) ?v5py5))) (fun_app$c ?v0py30 ?v5py5))) :pattern ((fun_app$ah (fun_app$at (fun_app$au (fun_app$av (fun_app$aw (fun_app$ax corec_llist$ ?v0py30) ?v1py30) ?v2py9) ?v3py5) ?v4py5) ?v5py5)) )) :named A31))
(assert (! (forall ((?v0py31 B_bool_fun$)(?v1py31 B_d_fun$)(?v2py10 B_bool_fun$)(?v3py6 B_d_llist_fun$)(?v4py6 B_b_fun$)(?v5py6 B$)) (! (and (or (not (fun_app$a ?v0py31 ?v5py6)) (fun_app$f lnull$a (fun_app$x (fun_app$ay (fun_app$az (fun_app$ba (fun_app$bb (fun_app$bc corec_llist$a ?v0py31) ?v1py31) ?v2py10) ?v3py6) ?v4py6) ?v5py6))) (or (not (fun_app$f lnull$a (fun_app$x (fun_app$ay (fun_app$az (fun_app$ba (fun_app$bb (fun_app$bc corec_llist$a ?v0py31) ?v1py31) ?v2py10) ?v3py6) ?v4py6) ?v5py6))) (fun_app$a ?v0py31 ?v5py6))) :pattern ((fun_app$x (fun_app$ay (fun_app$az (fun_app$ba (fun_app$bb (fun_app$bc corec_llist$a ?v0py31) ?v1py31) ?v2py10) ?v3py6) ?v4py6) ?v5py6)) )) :named A32))
(assert (! (forall ((?v0py32 B_bool_fun$)(?v1py32 B_bool_fun$)(?v2py11 B_bool_fun$)(?v3py7 B_bool_llist_fun$)(?v4py7 B_b_fun$)(?v5py7 B$)) (! (and (or (not (lnull$b (fun_app$bd (fun_app$be (fun_app$bf (fun_app$bg (fun_app$bh (fun_app$bi corec_llist$b ?v0py32) ?v1py32) ?v2py11) ?v3py7) ?v4py7) ?v5py7))) (fun_app$a ?v0py32 ?v5py7)) (or (lnull$b (fun_app$bd (fun_app$be (fun_app$bf (fun_app$bg (fun_app$bh (fun_app$bi corec_llist$b ?v0py32) ?v1py32) ?v2py11) ?v3py7) ?v4py7) ?v5py7)) (not (fun_app$a ?v0py32 ?v5py7)))) :pattern ((fun_app$bd (fun_app$be (fun_app$bf (fun_app$bg (fun_app$bh (fun_app$bi corec_llist$b ?v0py32) ?v1py32) ?v2py11) ?v3py7) ?v4py7) ?v5py7)) )) :named A33))
(assert (! (forall ((?v0py33 B_bool_fun$)(?v1py33 B_b_fun$)(?v2py12 B_bool_fun$)(?v3py8 B_b_llist_fun$)(?v4py8 B_b_fun$)(?v5py8 B$)) (! (and (or (not (lnull$c (fun_app$bj (fun_app$bk (fun_app$bl (fun_app$bm (fun_app$bn (fun_app$bo corec_llist$c ?v0py33) ?v1py33) ?v2py12) ?v3py8) ?v4py8) ?v5py8))) (fun_app$a ?v0py33 ?v5py8)) (or (not (fun_app$a ?v0py33 ?v5py8)) (lnull$c (fun_app$bj (fun_app$bk (fun_app$bl (fun_app$bm (fun_app$bn (fun_app$bo corec_llist$c ?v0py33) ?v1py33) ?v2py12) ?v3py8) ?v4py8) ?v5py8)))) :pattern ((fun_app$bj (fun_app$bk (fun_app$bl (fun_app$bm (fun_app$bn (fun_app$bo corec_llist$c ?v0py33) ?v1py33) ?v2py12) ?v3py8) ?v4py8) ?v5py8)) )) :named A34))
(assert (! (forall ((?v0py34 A_bool_fun$)(?v1py34 A_c_llist_fun$)(?v2py13 A_bool_fun$)(?v3py9 A_c_llist_llist_fun$)(?v4py9 A_a_fun$)(?v5py9 A$)) (! (and (or (not (lnull$d (fun_app$bp (fun_app$bq (fun_app$br (fun_app$bs (fun_app$bt (fun_app$bu corec_llist$d ?v0py34) ?v1py34) ?v2py13) ?v3py9) ?v4py9) ?v5py9))) (fun_app$c ?v0py34 ?v5py9)) (or (lnull$d (fun_app$bp (fun_app$bq (fun_app$br (fun_app$bs (fun_app$bt (fun_app$bu corec_llist$d ?v0py34) ?v1py34) ?v2py13) ?v3py9) ?v4py9) ?v5py9)) (not (fun_app$c ?v0py34 ?v5py9)))) :pattern ((fun_app$bp (fun_app$bq (fun_app$br (fun_app$bs (fun_app$bt (fun_app$bu corec_llist$d ?v0py34) ?v1py34) ?v2py13) ?v3py9) ?v4py9) ?v5py9)) )) :named A35))
(assert (! (forall ((?v0py35 A_bool_fun$)(?v1py35 A_bool_fun$)(?v2py14 A_bool_fun$)(?v3py10 A_bool_llist_fun$)(?v4py10 A_a_fun$)(?v5py10 A$)) (! (and (or (not (lnull$b (fun_app$bv (fun_app$bw (fun_app$bx (fun_app$by (fun_app$bz (fun_app$ca corec_llist$e ?v0py35) ?v1py35) ?v2py14) ?v3py10) ?v4py10) ?v5py10))) (fun_app$c ?v0py35 ?v5py10)) (or (not (fun_app$c ?v0py35 ?v5py10)) (lnull$b (fun_app$bv (fun_app$bw (fun_app$bx (fun_app$by (fun_app$bz (fun_app$ca corec_llist$e ?v0py35) ?v1py35) ?v2py14) ?v3py10) ?v4py10) ?v5py10)))) :pattern ((fun_app$bv (fun_app$bw (fun_app$bx (fun_app$by (fun_app$bz (fun_app$ca corec_llist$e ?v0py35) ?v1py35) ?v2py14) ?v3py10) ?v4py10) ?v5py10)) )) :named A36))
(assert (! (forall ((?v0py36 A_bool_fun$)(?v1py36 A_a_fun$)(?v2py15 A_bool_fun$)(?v3py11 A_a_llist_fun$)(?v4py11 A_a_fun$)(?v5py11 A$)) (! (and (or (not (lnull$e (fun_app$cb (fun_app$cc (fun_app$cd (fun_app$ce (fun_app$cf (fun_app$cg corec_llist$f ?v0py36) ?v1py36) ?v2py15) ?v3py11) ?v4py11) ?v5py11))) (fun_app$c ?v0py36 ?v5py11)) (or (not (fun_app$c ?v0py36 ?v5py11)) (lnull$e (fun_app$cb (fun_app$cc (fun_app$cd (fun_app$ce (fun_app$cf (fun_app$cg corec_llist$f ?v0py36) ?v1py36) ?v2py15) ?v3py11) ?v4py11) ?v5py11)))) :pattern ((fun_app$cb (fun_app$cc (fun_app$cd (fun_app$ce (fun_app$cf (fun_app$cg corec_llist$f ?v0py36) ?v1py36) ?v2py15) ?v3py11) ?v4py11) ?v5py11)) )) :named A37))
(assert (! (forall ((?v0py37 A_bool_fun$)(?v1py37 A_c_fun$)(?v2py16 A_bool_fun$)(?v3py12 A_c_llist_fun$)(?v4py12 A_a_fun$)(?v5py12 A$)) (! (and (or (not (fun_app$g lnull$ (fun_app$ah (fun_app$at (fun_app$au (fun_app$av (fun_app$aw (fun_app$ax corec_llist$ ?v0py37) ?v1py37) ?v2py16) ?v3py12) ?v4py12) ?v5py12))) (fun_app$c ?v0py37 ?v5py12)) (or (not (fun_app$c ?v0py37 ?v5py12)) (fun_app$g lnull$ (fun_app$ah (fun_app$at (fun_app$au (fun_app$av (fun_app$aw (fun_app$ax corec_llist$ ?v0py37) ?v1py37) ?v2py16) ?v3py12) ?v4py12) ?v5py12)))) :pattern ((fun_app$ah (fun_app$at (fun_app$au (fun_app$av (fun_app$aw (fun_app$ax corec_llist$ ?v0py37) ?v1py37) ?v2py16) ?v3py12) ?v4py12) ?v5py12)) )) :named A38))
(assert (! (forall ((?v0py38 B_bool_fun$)(?v1py38 B_d_fun$)(?v2py17 B_bool_fun$)(?v3py13 B_d_llist_fun$)(?v4py13 B_b_fun$)(?v5py13 B$)) (! (and (or (not (fun_app$f lnull$a (fun_app$x (fun_app$ay (fun_app$az (fun_app$ba (fun_app$bb (fun_app$bc corec_llist$a ?v0py38) ?v1py38) ?v2py17) ?v3py13) ?v4py13) ?v5py13))) (fun_app$a ?v0py38 ?v5py13)) (or (not (fun_app$a ?v0py38 ?v5py13)) (fun_app$f lnull$a (fun_app$x (fun_app$ay (fun_app$az (fun_app$ba (fun_app$bb (fun_app$bc corec_llist$a ?v0py38) ?v1py38) ?v2py17) ?v3py13) ?v4py13) ?v5py13)))) :pattern ((fun_app$x (fun_app$ay (fun_app$az (fun_app$ba (fun_app$bb (fun_app$bc corec_llist$a ?v0py38) ?v1py38) ?v2py17) ?v3py13) ?v4py13) ?v5py13)) )) :named A39))
(assert (! (fun_app$a (fun_app$ch a$ xa$) ya$) :named A40))
(assert (! (forall ((?v0py39 C_llist$)(?v1py39 C_llist$)) (! (or (fun_app$g lnull$ ?v1py39) (fun_app$g lnull$ ?v0py39) (and (not (fun_app$g lnull$ ?v0py39)) (not (fun_app$g lnull$ ?v1py39)))) :pattern ((fun_app$g lnull$ ?v1py39) (fun_app$g lnull$ ?v0py39)) )) :named A41))
(assert (! (forall ((?v0py40 C_llist$)(?v1py40 D_llist$)) (! (or (fun_app$g lnull$ ?v0py40) (fun_app$f lnull$a ?v1py40) (and (not (fun_app$g lnull$ ?v0py40)) (not (fun_app$f lnull$a ?v1py40)))) :pattern ((fun_app$f lnull$a ?v1py40) (fun_app$g lnull$ ?v0py40)) )) :named A42))
(assert (! (forall ((?v0py41 D_llist$)(?v1py41 C_llist$)) (! (or (fun_app$g lnull$ ?v1py41) (fun_app$f lnull$a ?v0py41) (and (not (fun_app$f lnull$a ?v0py41)) (not (fun_app$g lnull$ ?v1py41)))) :pattern ((fun_app$f lnull$a ?v0py41) (fun_app$g lnull$ ?v1py41)) )) :named A43))
(assert (! (forall ((?v0py42 D_llist$)(?v1py42 D_llist$)) (! (or (fun_app$f lnull$a ?v1py42) (fun_app$f lnull$a ?v0py42) (and (not (fun_app$f lnull$a ?v0py42)) (not (fun_app$f lnull$a ?v1py42)))) :pattern ((fun_app$f lnull$a ?v1py42) (fun_app$f lnull$a ?v0py42)) )) :named A44))
(assert (! (forall ((?v0py43 C_llist_set$)) (! (or (forall ((?v1py43 C_llist$)) (! (or (not (member$a ?v1py43 ?v0py43)) (fun_app$g lnull$ ?v1py43)) :pattern ((member$a ?v1py43 ?v0py43)) :pattern ((fun_app$g lnull$ ?v1py43)) )) (and (member$a (?v1!6 ?v0py43) ?v0py43) (not (fun_app$g lnull$ (?v1!6 ?v0py43))))) :pattern ((?v1!6 ?v0py43)) )) :named A45))
(assert (! (forall ((?v0py44 D_llist_set$)) (! (or (forall ((?v1py44 D_llist$)) (! (or (not (member$ ?v1py44 ?v0py44)) (fun_app$f lnull$a ?v1py44)) :pattern ((member$ ?v1py44 ?v0py44)) :pattern ((fun_app$f lnull$a ?v1py44)) )) (and (member$ (?v1!7 ?v0py44) ?v0py44) (not (fun_app$f lnull$a (?v1!7 ?v0py44))))) :pattern ((?v1!7 ?v0py44)) )) :named A46))
(assert (! (forall ((?v0py45 C_llist$)(?v1py45 C_llist$)) (! (or (not (fun_app$g lnull$ ?v0py45)) (not (fun_app$g lnull$ ?v1py45)) (and (fun_app$g lnull$ ?v0py45) (fun_app$g lnull$ ?v1py45))) :pattern ((fun_app$g lnull$ ?v1py45) (fun_app$g lnull$ ?v0py45)) )) :named A47))
(assert (! (forall ((?v0py46 D_llist$)(?v1py46 D_llist$)) (! (or (not (fun_app$f lnull$a ?v1py46)) (not (fun_app$f lnull$a ?v0py46)) (and (fun_app$f lnull$a ?v0py46) (fun_app$f lnull$a ?v1py46))) :pattern ((fun_app$f lnull$a ?v1py46) (fun_app$f lnull$a ?v0py46)) )) :named A48))
(assert (! (forall ((?v0py47 B_bool_fun$)(?v1py47 B$)(?v2py18 B_bool_fun$)(?v3py14 B_bool_fun$)(?v4py14 B_bool_llist_fun$)(?v5py14 B_b_fun$)) (! (or (fun_app$a ?v0py47 ?v1py47) (not (lnull$b (fun_app$bd (fun_app$be (fun_app$bf (fun_app$bg (fun_app$bh (fun_app$bi corec_llist$b ?v0py47) ?v2py18) ?v3py14) ?v4py14) ?v5py14) ?v1py47)))) :pattern ((fun_app$bd (fun_app$be (fun_app$bf (fun_app$bg (fun_app$bh (fun_app$bi corec_llist$b ?v0py47) ?v2py18) ?v3py14) ?v4py14) ?v5py14) ?v1py47)) )) :named A51))
(assert (! (forall ((?v0py48 B_bool_fun$)(?v1py48 B$)(?v2py19 B_b_fun$)(?v3py15 B_bool_fun$)(?v4py15 B_b_llist_fun$)(?v5py15 B_b_fun$)) (! (or (fun_app$a ?v0py48 ?v1py48) (not (lnull$c (fun_app$bj (fun_app$bk (fun_app$bl (fun_app$bm (fun_app$bn (fun_app$bo corec_llist$c ?v0py48) ?v2py19) ?v3py15) ?v4py15) ?v5py15) ?v1py48)))) :pattern ((fun_app$bj (fun_app$bk (fun_app$bl (fun_app$bm (fun_app$bn (fun_app$bo corec_llist$c ?v0py48) ?v2py19) ?v3py15) ?v4py15) ?v5py15) ?v1py48)) )) :named A52))
(assert (! (forall ((?v0py49 A_bool_fun$)(?v1py49 A$)(?v2py20 A_c_llist_fun$)(?v3py16 A_bool_fun$)(?v4py16 A_c_llist_llist_fun$)(?v5py16 A_a_fun$)) (! (or (fun_app$c ?v0py49 ?v1py49) (not (lnull$d (fun_app$bp (fun_app$bq (fun_app$br (fun_app$bs (fun_app$bt (fun_app$bu corec_llist$d ?v0py49) ?v2py20) ?v3py16) ?v4py16) ?v5py16) ?v1py49)))) :pattern ((fun_app$bp (fun_app$bq (fun_app$br (fun_app$bs (fun_app$bt (fun_app$bu corec_llist$d ?v0py49) ?v2py20) ?v3py16) ?v4py16) ?v5py16) ?v1py49)) )) :named A53))
(assert (! (forall ((?v0py50 A_bool_fun$)(?v1py50 A$)(?v2py21 A_bool_fun$)(?v3py17 A_bool_fun$)(?v4py17 A_bool_llist_fun$)(?v5py17 A_a_fun$)) (! (or (fun_app$c ?v0py50 ?v1py50) (not (lnull$b (fun_app$bv (fun_app$bw (fun_app$bx (fun_app$by (fun_app$bz (fun_app$ca corec_llist$e ?v0py50) ?v2py21) ?v3py17) ?v4py17) ?v5py17) ?v1py50)))) :pattern ((fun_app$bv (fun_app$bw (fun_app$bx (fun_app$by (fun_app$bz (fun_app$ca corec_llist$e ?v0py50) ?v2py21) ?v3py17) ?v4py17) ?v5py17) ?v1py50)) )) :named A54))
(assert (! (forall ((?v0py51 A_bool_fun$)(?v1py51 A$)(?v2py22 A_a_fun$)(?v3py18 A_bool_fun$)(?v4py18 A_a_llist_fun$)(?v5py18 A_a_fun$)) (! (or (fun_app$c ?v0py51 ?v1py51) (not (lnull$e (fun_app$cb (fun_app$cc (fun_app$cd (fun_app$ce (fun_app$cf (fun_app$cg corec_llist$f ?v0py51) ?v2py22) ?v3py18) ?v4py18) ?v5py18) ?v1py51)))) :pattern ((fun_app$cb (fun_app$cc (fun_app$cd (fun_app$ce (fun_app$cf (fun_app$cg corec_llist$f ?v0py51) ?v2py22) ?v3py18) ?v4py18) ?v5py18) ?v1py51)) )) :named A55))
(assert (! (forall ((?v0py52 A_bool_fun$)(?v1py52 A$)(?v2py23 A_c_fun$)(?v3py19 A_bool_fun$)(?v4py19 A_c_llist_fun$)(?v5py19 A_a_fun$)) (! (or (fun_app$c ?v0py52 ?v1py52) (not (fun_app$g lnull$ (fun_app$ah (fun_app$at (fun_app$au (fun_app$av (fun_app$aw (fun_app$ax corec_llist$ ?v0py52) ?v2py23) ?v3py19) ?v4py19) ?v5py19) ?v1py52)))) :pattern ((fun_app$ah (fun_app$at (fun_app$au (fun_app$av (fun_app$aw (fun_app$ax corec_llist$ ?v0py52) ?v2py23) ?v3py19) ?v4py19) ?v5py19) ?v1py52)) )) :named A56))
(assert (! (forall ((?v0py53 B_bool_fun$)(?v1py53 B$)(?v2py24 B_d_fun$)(?v3py20 B_bool_fun$)(?v4py20 B_d_llist_fun$)(?v5py20 B_b_fun$)) (! (or (fun_app$a ?v0py53 ?v1py53) (not (fun_app$f lnull$a (fun_app$x (fun_app$ay (fun_app$az (fun_app$ba (fun_app$bb (fun_app$bc corec_llist$a ?v0py53) ?v2py24) ?v3py20) ?v4py20) ?v5py20) ?v1py53)))) :pattern ((fun_app$x (fun_app$ay (fun_app$az (fun_app$ba (fun_app$bb (fun_app$bc corec_llist$a ?v0py53) ?v2py24) ?v3py20) ?v4py20) ?v5py20) ?v1py53)) )) :named A57))
(assert (! (forall ((?v0py54 B_bool_fun$)(?v1py54 B$)(?v2py25 B_bool_fun$)(?v3py21 B_bool_fun$)(?v4py21 B_bool_llist_fun$)(?v5py21 B_b_fun$)) (! (or (not (fun_app$a ?v0py54 ?v1py54)) (lnull$b (fun_app$bd (fun_app$be (fun_app$bf (fun_app$bg (fun_app$bh (fun_app$bi corec_llist$b ?v0py54) ?v2py25) ?v3py21) ?v4py21) ?v5py21) ?v1py54))) :pattern ((fun_app$bd (fun_app$be (fun_app$bf (fun_app$bg (fun_app$bh (fun_app$bi corec_llist$b ?v0py54) ?v2py25) ?v3py21) ?v4py21) ?v5py21) ?v1py54)) )) :named A58))
(assert (! (forall ((?v0py55 B_bool_fun$)(?v1py55 B$)(?v2py26 B_b_fun$)(?v3py22 B_bool_fun$)(?v4py22 B_b_llist_fun$)(?v5py22 B_b_fun$)) (! (or (not (fun_app$a ?v0py55 ?v1py55)) (lnull$c (fun_app$bj (fun_app$bk (fun_app$bl (fun_app$bm (fun_app$bn (fun_app$bo corec_llist$c ?v0py55) ?v2py26) ?v3py22) ?v4py22) ?v5py22) ?v1py55))) :pattern ((fun_app$bj (fun_app$bk (fun_app$bl (fun_app$bm (fun_app$bn (fun_app$bo corec_llist$c ?v0py55) ?v2py26) ?v3py22) ?v4py22) ?v5py22) ?v1py55)) )) :named A59))
(assert (! (forall ((?v0py56 A_bool_fun$)(?v1py56 A$)(?v2py27 A_c_llist_fun$)(?v3py23 A_bool_fun$)(?v4py23 A_c_llist_llist_fun$)(?v5py23 A_a_fun$)) (! (or (not (fun_app$c ?v0py56 ?v1py56)) (lnull$d (fun_app$bp (fun_app$bq (fun_app$br (fun_app$bs (fun_app$bt (fun_app$bu corec_llist$d ?v0py56) ?v2py27) ?v3py23) ?v4py23) ?v5py23) ?v1py56))) :pattern ((fun_app$bp (fun_app$bq (fun_app$br (fun_app$bs (fun_app$bt (fun_app$bu corec_llist$d ?v0py56) ?v2py27) ?v3py23) ?v4py23) ?v5py23) ?v1py56)) )) :named A60))
(assert (! (forall ((?v0py57 A_bool_fun$)(?v1py57 A$)(?v2py28 A_bool_fun$)(?v3py24 A_bool_fun$)(?v4py24 A_bool_llist_fun$)(?v5py24 A_a_fun$)) (! (or (not (fun_app$c ?v0py57 ?v1py57)) (lnull$b (fun_app$bv (fun_app$bw (fun_app$bx (fun_app$by (fun_app$bz (fun_app$ca corec_llist$e ?v0py57) ?v2py28) ?v3py24) ?v4py24) ?v5py24) ?v1py57))) :pattern ((fun_app$bv (fun_app$bw (fun_app$bx (fun_app$by (fun_app$bz (fun_app$ca corec_llist$e ?v0py57) ?v2py28) ?v3py24) ?v4py24) ?v5py24) ?v1py57)) )) :named A61))
(assert (! (forall ((?v0py58 A_bool_fun$)(?v1py58 A$)(?v2py29 A_a_fun$)(?v3py25 A_bool_fun$)(?v4py25 A_a_llist_fun$)(?v5py25 A_a_fun$)) (! (or (not (fun_app$c ?v0py58 ?v1py58)) (lnull$e (fun_app$cb (fun_app$cc (fun_app$cd (fun_app$ce (fun_app$cf (fun_app$cg corec_llist$f ?v0py58) ?v2py29) ?v3py25) ?v4py25) ?v5py25) ?v1py58))) :pattern ((fun_app$cb (fun_app$cc (fun_app$cd (fun_app$ce (fun_app$cf (fun_app$cg corec_llist$f ?v0py58) ?v2py29) ?v3py25) ?v4py25) ?v5py25) ?v1py58)) )) :named A62))
(assert (! (forall ((?v0py59 A_bool_fun$)(?v1py59 A$)(?v2py30 A_c_fun$)(?v3py26 A_bool_fun$)(?v4py26 A_c_llist_fun$)(?v5py26 A_a_fun$)) (! (or (not (fun_app$c ?v0py59 ?v1py59)) (fun_app$g lnull$ (fun_app$ah (fun_app$at (fun_app$au (fun_app$av (fun_app$aw (fun_app$ax corec_llist$ ?v0py59) ?v2py30) ?v3py26) ?v4py26) ?v5py26) ?v1py59))) :pattern ((fun_app$ah (fun_app$at (fun_app$au (fun_app$av (fun_app$aw (fun_app$ax corec_llist$ ?v0py59) ?v2py30) ?v3py26) ?v4py26) ?v5py26) ?v1py59)) )) :named A63))
(assert (! (forall ((?v0py60 B_bool_fun$)(?v1py60 B$)(?v2py31 B_d_fun$)(?v3py27 B_bool_fun$)(?v4py27 B_d_llist_fun$)(?v5py27 B_b_fun$)) (! (or (not (fun_app$a ?v0py60 ?v1py60)) (fun_app$f lnull$a (fun_app$x (fun_app$ay (fun_app$az (fun_app$ba (fun_app$bb (fun_app$bc corec_llist$a ?v0py60) ?v2py31) ?v3py27) ?v4py27) ?v5py27) ?v1py60))) :pattern ((fun_app$x (fun_app$ay (fun_app$az (fun_app$ba (fun_app$bb (fun_app$bc corec_llist$a ?v0py60) ?v2py31) ?v3py27) ?v4py27) ?v5py27) ?v1py60)) )) :named A64))
(assert (! (fun_app$ (fun_app$ci (rel_fun$ a$ uu$) sTOP1$) sTOP2$) :named A65))
(assert (! (fun_app$ (fun_app$ci (rel_fun$ a$ uu$) iS_LNIL1$) iS_LNIL2$) :named A66))
(assert (! (fun_app$cj (fun_app$ck (rel_fun$a a$ a$) lTL1$) lTL2$) :named A67))
(assert (! (fun_app$cl (fun_app$cm (rel_fun$b a$ b$) lHD1$) lHD2$) :named A68))
(assert (! (fun_app$cn (fun_app$co (rel_fun$c a$ (fun_app$cp llist_all2$ b$)) mORE1$) mORE2$) :named A69))
(assert (! (fun_app$a (fun_app$ch a$ x$) y$) :named A70))
(assert (! (forall ((?v0py61 B_bool_fun$)(?v1py61 B_b_fun$)(?v2py32 B_b_fun$)(?v3py28 B$)) (! (and (or (lnull$c (fun_app$bj (fun_app$bk (fun_app$cq (fun_app$cr unfold_llist$ ?v0py61) ?v1py61) ?v2py32) ?v3py28)) (not (fun_app$a ?v0py61 ?v3py28))) (or (not (lnull$c (fun_app$bj (fun_app$bk (fun_app$cq (fun_app$cr unfold_llist$ ?v0py61) ?v1py61) ?v2py32) ?v3py28))) (fun_app$a ?v0py61 ?v3py28))) :pattern ((fun_app$bj (fun_app$bk (fun_app$cq (fun_app$cr unfold_llist$ ?v0py61) ?v1py61) ?v2py32) ?v3py28)) )) :named A71))
(assert (! (forall ((?v0py62 A_bool_fun$)(?v1py62 A_c_llist_fun$)(?v2py33 A_a_fun$)(?v3py29 A$)) (! (and (or (lnull$d (fun_app$bp (fun_app$bq (fun_app$cs (fun_app$ct unfold_llist$a ?v0py62) ?v1py62) ?v2py33) ?v3py29)) (not (fun_app$c ?v0py62 ?v3py29))) (or (not (lnull$d (fun_app$bp (fun_app$bq (fun_app$cs (fun_app$ct unfold_llist$a ?v0py62) ?v1py62) ?v2py33) ?v3py29))) (fun_app$c ?v0py62 ?v3py29))) :pattern ((fun_app$bp (fun_app$bq (fun_app$cs (fun_app$ct unfold_llist$a ?v0py62) ?v1py62) ?v2py33) ?v3py29)) )) :named A72))
(assert (! (forall ((?v0py63 A_bool_fun$)(?v1py63 A_bool_fun$)(?v2py34 A_a_fun$)(?v3py30 A$)) (! (and (or (not (fun_app$c ?v0py63 ?v3py30)) (lnull$b (fun_app$bv (fun_app$bw (fun_app$cu (fun_app$cv unfold_llist$b ?v0py63) ?v1py63) ?v2py34) ?v3py30))) (or (not (lnull$b (fun_app$bv (fun_app$bw (fun_app$cu (fun_app$cv unfold_llist$b ?v0py63) ?v1py63) ?v2py34) ?v3py30))) (fun_app$c ?v0py63 ?v3py30))) :pattern ((fun_app$bv (fun_app$bw (fun_app$cu (fun_app$cv unfold_llist$b ?v0py63) ?v1py63) ?v2py34) ?v3py30)) )) :named A73))
(assert (! (forall ((?v0py64 A_bool_fun$)(?v1py64 A_c_fun$)(?v2py35 A_a_fun$)(?v3py31 A$)) (! (and (or (not (fun_app$c ?v0py64 ?v3py31)) (fun_app$g lnull$ (fun_app$ah (fun_app$at (fun_app$cw (fun_app$cx unfold_llist$c ?v0py64) ?v1py64) ?v2py35) ?v3py31))) (or (not (fun_app$g lnull$ (fun_app$ah (fun_app$at (fun_app$cw (fun_app$cx unfold_llist$c ?v0py64) ?v1py64) ?v2py35) ?v3py31))) (fun_app$c ?v0py64 ?v3py31))) :pattern ((fun_app$ah (fun_app$at (fun_app$cw (fun_app$cx unfold_llist$c ?v0py64) ?v1py64) ?v2py35) ?v3py31)) )) :named A74))
(assert (! (forall ((?v0py65 A_bool_fun$)(?v1py65 A_a_fun$)(?v2py36 A_a_fun$)(?v3py32 A$)) (! (and (or (not (fun_app$c ?v0py65 ?v3py32)) (lnull$e (fun_app$cb (fun_app$cc (fun_app$cy (fun_app$cz unfold_llist$d ?v0py65) ?v1py65) ?v2py36) ?v3py32))) (or (not (lnull$e (fun_app$cb (fun_app$cc (fun_app$cy (fun_app$cz unfold_llist$d ?v0py65) ?v1py65) ?v2py36) ?v3py32))) (fun_app$c ?v0py65 ?v3py32))) :pattern ((fun_app$cb (fun_app$cc (fun_app$cy (fun_app$cz unfold_llist$d ?v0py65) ?v1py65) ?v2py36) ?v3py32)) )) :named A75))
(assert (! (forall ((?v0py66 B_bool_fun$)(?v1py66 B_b_fun$)(?v2py37 B_b_fun$)(?v3py33 B$)) (! (and (or (not (lnull$c (fun_app$bj (fun_app$bk (fun_app$cq (fun_app$cr unfold_llist$ ?v0py66) ?v1py66) ?v2py37) ?v3py33))) (fun_app$a ?v0py66 ?v3py33)) (or (lnull$c (fun_app$bj (fun_app$bk (fun_app$cq (fun_app$cr unfold_llist$ ?v0py66) ?v1py66) ?v2py37) ?v3py33)) (not (fun_app$a ?v0py66 ?v3py33)))) :pattern ((fun_app$bj (fun_app$bk (fun_app$cq (fun_app$cr unfold_llist$ ?v0py66) ?v1py66) ?v2py37) ?v3py33)) )) :named A76))
(assert (! (forall ((?v0py67 A_bool_fun$)(?v1py67 A_c_llist_fun$)(?v2py38 A_a_fun$)(?v3py34 A$)) (! (and (or (not (lnull$d (fun_app$bp (fun_app$bq (fun_app$cs (fun_app$ct unfold_llist$a ?v0py67) ?v1py67) ?v2py38) ?v3py34))) (fun_app$c ?v0py67 ?v3py34)) (or (lnull$d (fun_app$bp (fun_app$bq (fun_app$cs (fun_app$ct unfold_llist$a ?v0py67) ?v1py67) ?v2py38) ?v3py34)) (not (fun_app$c ?v0py67 ?v3py34)))) :pattern ((fun_app$bp (fun_app$bq (fun_app$cs (fun_app$ct unfold_llist$a ?v0py67) ?v1py67) ?v2py38) ?v3py34)) )) :named A77))
(assert (! (forall ((?v0py68 A_bool_fun$)(?v1py68 A_bool_fun$)(?v2py39 A_a_fun$)(?v3py35 A$)) (! (and (or (not (lnull$b (fun_app$bv (fun_app$bw (fun_app$cu (fun_app$cv unfold_llist$b ?v0py68) ?v1py68) ?v2py39) ?v3py35))) (fun_app$c ?v0py68 ?v3py35)) (or (not (fun_app$c ?v0py68 ?v3py35)) (lnull$b (fun_app$bv (fun_app$bw (fun_app$cu (fun_app$cv unfold_llist$b ?v0py68) ?v1py68) ?v2py39) ?v3py35)))) :pattern ((fun_app$bv (fun_app$bw (fun_app$cu (fun_app$cv unfold_llist$b ?v0py68) ?v1py68) ?v2py39) ?v3py35)) )) :named A78))
(assert (! (forall ((?v0py69 A_bool_fun$)(?v1py69 A_c_fun$)(?v2py40 A_a_fun$)(?v3py36 A$)) (! (and (or (not (fun_app$g lnull$ (fun_app$ah (fun_app$at (fun_app$cw (fun_app$cx unfold_llist$c ?v0py69) ?v1py69) ?v2py40) ?v3py36))) (fun_app$c ?v0py69 ?v3py36)) (or (not (fun_app$c ?v0py69 ?v3py36)) (fun_app$g lnull$ (fun_app$ah (fun_app$at (fun_app$cw (fun_app$cx unfold_llist$c ?v0py69) ?v1py69) ?v2py40) ?v3py36)))) :pattern ((fun_app$ah (fun_app$at (fun_app$cw (fun_app$cx unfold_llist$c ?v0py69) ?v1py69) ?v2py40) ?v3py36)) )) :named A79))
(assert (! (forall ((?v0py70 A_bool_fun$)(?v1py70 A_a_fun$)(?v2py41 A_a_fun$)(?v3py37 A$)) (! (and (or (not (lnull$e (fun_app$cb (fun_app$cc (fun_app$cy (fun_app$cz unfold_llist$d ?v0py70) ?v1py70) ?v2py41) ?v3py37))) (fun_app$c ?v0py70 ?v3py37)) (or (not (fun_app$c ?v0py70 ?v3py37)) (lnull$e (fun_app$cb (fun_app$cc (fun_app$cy (fun_app$cz unfold_llist$d ?v0py70) ?v1py70) ?v2py41) ?v3py37)))) :pattern ((fun_app$cb (fun_app$cc (fun_app$cy (fun_app$cz unfold_llist$d ?v0py70) ?v1py70) ?v2py41) ?v3py37)) )) :named A80))
(assert (! (forall ((?v0py71 C_llist$)(?v1py71 C_c_bool_fun_fun$)(?v2py42 C_llist$)) (! (or (not (fun_app$g lnull$ ?v0py71)) (and (or (not (fun_app$g (fun_app$h (llexord$ ?v1py71) ?v2py42) ?v0py71)) (fun_app$g lnull$ ?v2py42)) (or (not (fun_app$g lnull$ ?v2py42)) (fun_app$g (fun_app$h (llexord$ ?v1py71) ?v2py42) ?v0py71)))) :pattern ((fun_app$g (fun_app$h (llexord$ ?v1py71) ?v2py42) ?v0py71)) )) :named A81))
(assert (! (forall ((?v0py72 D_llist$)(?v1py72 D_d_bool_fun_fun$)(?v2py43 D_llist$)) (! (or (not (fun_app$f lnull$a ?v0py72)) (and (or (not (fun_app$f (fun_app$da (llexord$a ?v1py72) ?v2py43) ?v0py72)) (fun_app$f lnull$a ?v2py43)) (or (not (fun_app$f lnull$a ?v2py43)) (fun_app$f (fun_app$da (llexord$a ?v1py72) ?v2py43) ?v0py72)))) :pattern ((fun_app$f (fun_app$da (llexord$a ?v1py72) ?v2py43) ?v0py72)) )) :named A82))
(assert (! (forall ((?v0py73 B_bool_fun$)(?v1py73 B$)(?v2py44 B_b_fun$)(?v3py38 B_b_fun$)) (! (or (fun_app$a ?v0py73 ?v1py73) (not (lnull$c (fun_app$bj (fun_app$bk (fun_app$cq (fun_app$cr unfold_llist$ ?v0py73) ?v2py44) ?v3py38) ?v1py73)))) :pattern ((fun_app$bj (fun_app$bk (fun_app$cq (fun_app$cr unfold_llist$ ?v0py73) ?v2py44) ?v3py38) ?v1py73)) )) :named A83))
(assert (! (forall ((?v0py74 A_bool_fun$)(?v1py74 A$)(?v2py45 A_c_llist_fun$)(?v3py39 A_a_fun$)) (! (or (fun_app$c ?v0py74 ?v1py74) (not (lnull$d (fun_app$bp (fun_app$bq (fun_app$cs (fun_app$ct unfold_llist$a ?v0py74) ?v2py45) ?v3py39) ?v1py74)))) :pattern ((fun_app$bp (fun_app$bq (fun_app$cs (fun_app$ct unfold_llist$a ?v0py74) ?v2py45) ?v3py39) ?v1py74)) )) :named A84))
(assert (! (forall ((?v0py75 A_bool_fun$)(?v1py75 A$)(?v2py46 A_bool_fun$)(?v3py40 A_a_fun$)) (! (or (fun_app$c ?v0py75 ?v1py75) (not (lnull$b (fun_app$bv (fun_app$bw (fun_app$cu (fun_app$cv unfold_llist$b ?v0py75) ?v2py46) ?v3py40) ?v1py75)))) :pattern ((fun_app$bv (fun_app$bw (fun_app$cu (fun_app$cv unfold_llist$b ?v0py75) ?v2py46) ?v3py40) ?v1py75)) )) :named A85))
(assert (! (forall ((?v0py76 A_bool_fun$)(?v1py76 A$)(?v2py47 A_c_fun$)(?v3py41 A_a_fun$)) (! (or (fun_app$c ?v0py76 ?v1py76) (not (fun_app$g lnull$ (fun_app$ah (fun_app$at (fun_app$cw (fun_app$cx unfold_llist$c ?v0py76) ?v2py47) ?v3py41) ?v1py76)))) :pattern ((fun_app$ah (fun_app$at (fun_app$cw (fun_app$cx unfold_llist$c ?v0py76) ?v2py47) ?v3py41) ?v1py76)) )) :named A86))
(assert (! (forall ((?v0py77 A_bool_fun$)(?v1py77 A$)(?v2py48 A_a_fun$)(?v3py42 A_a_fun$)) (! (or (fun_app$c ?v0py77 ?v1py77) (not (lnull$e (fun_app$cb (fun_app$cc (fun_app$cy (fun_app$cz unfold_llist$d ?v0py77) ?v2py48) ?v3py42) ?v1py77)))) :pattern ((fun_app$cb (fun_app$cc (fun_app$cy (fun_app$cz unfold_llist$d ?v0py77) ?v2py48) ?v3py42) ?v1py77)) )) :named A87))
(assert (! (forall ((?v0py78 B_bool_fun$)(?v1py78 B$)(?v2py49 B_b_fun$)(?v3py43 B_b_fun$)) (! (or (not (fun_app$a ?v0py78 ?v1py78)) (lnull$c (fun_app$bj (fun_app$bk (fun_app$cq (fun_app$cr unfold_llist$ ?v0py78) ?v2py49) ?v3py43) ?v1py78))) :pattern ((fun_app$bj (fun_app$bk (fun_app$cq (fun_app$cr unfold_llist$ ?v0py78) ?v2py49) ?v3py43) ?v1py78)) )) :named A88))
(assert (! (forall ((?v0py79 A_bool_fun$)(?v1py79 A$)(?v2py50 A_c_llist_fun$)(?v3py44 A_a_fun$)) (! (or (not (fun_app$c ?v0py79 ?v1py79)) (lnull$d (fun_app$bp (fun_app$bq (fun_app$cs (fun_app$ct unfold_llist$a ?v0py79) ?v2py50) ?v3py44) ?v1py79))) :pattern ((fun_app$bp (fun_app$bq (fun_app$cs (fun_app$ct unfold_llist$a ?v0py79) ?v2py50) ?v3py44) ?v1py79)) )) :named A89))
(assert (! (forall ((?v0py80 A_bool_fun$)(?v1py80 A$)(?v2py51 A_bool_fun$)(?v3py45 A_a_fun$)) (! (or (not (fun_app$c ?v0py80 ?v1py80)) (lnull$b (fun_app$bv (fun_app$bw (fun_app$cu (fun_app$cv unfold_llist$b ?v0py80) ?v2py51) ?v3py45) ?v1py80))) :pattern ((fun_app$bv (fun_app$bw (fun_app$cu (fun_app$cv unfold_llist$b ?v0py80) ?v2py51) ?v3py45) ?v1py80)) )) :named A90))
(assert (! (forall ((?v0py81 A_bool_fun$)(?v1py81 A$)(?v2py52 A_c_fun$)(?v3py46 A_a_fun$)) (! (or (not (fun_app$c ?v0py81 ?v1py81)) (fun_app$g lnull$ (fun_app$ah (fun_app$at (fun_app$cw (fun_app$cx unfold_llist$c ?v0py81) ?v2py52) ?v3py46) ?v1py81))) :pattern ((fun_app$ah (fun_app$at (fun_app$cw (fun_app$cx unfold_llist$c ?v0py81) ?v2py52) ?v3py46) ?v1py81)) )) :named A91))
(assert (! (forall ((?v0py82 A_bool_fun$)(?v1py82 A$)(?v2py53 A_a_fun$)(?v3py47 A_a_fun$)) (! (or (not (fun_app$c ?v0py82 ?v1py82)) (lnull$e (fun_app$cb (fun_app$cc (fun_app$cy (fun_app$cz unfold_llist$d ?v0py82) ?v2py53) ?v3py47) ?v1py82))) :pattern ((fun_app$cb (fun_app$cc (fun_app$cy (fun_app$cz unfold_llist$d ?v0py82) ?v2py53) ?v3py47) ?v1py82)) )) :named A92))
(assert (! (forall ((?v0py83 B_bool_fun$)(?v1py83 B$)(?v2py54 B_bool_fun$)(?v3py48 B_bool_fun$)(?v4py28 B_bool_llist_fun$)(?v5py28 B_b_fun$)) (! (or (not (fun_app$a ?v0py83 ?v1py83)) (= (fun_app$bd (fun_app$be (fun_app$bf (fun_app$bg (fun_app$bh (fun_app$bi corec_llist$b ?v0py83) ?v2py54) ?v3py48) ?v4py28) ?v5py28) ?v1py83) lNil$f)) :pattern ((fun_app$bd (fun_app$be (fun_app$bf (fun_app$bg (fun_app$bh (fun_app$bi corec_llist$b ?v0py83) ?v2py54) ?v3py48) ?v4py28) ?v5py28) ?v1py83)) )) :named A93))
(assert (! (forall ((?v0py84 B_bool_fun$)(?v1py84 B$)(?v2py55 B_b_fun$)(?v3py49 B_bool_fun$)(?v4py29 B_b_llist_fun$)(?v5py29 B_b_fun$)) (! (or (not (fun_app$a ?v0py84 ?v1py84)) (= (fun_app$bj (fun_app$bk (fun_app$bl (fun_app$bm (fun_app$bn (fun_app$bo corec_llist$c ?v0py84) ?v2py55) ?v3py49) ?v4py29) ?v5py29) ?v1py84) lNil$b)) :pattern ((fun_app$bj (fun_app$bk (fun_app$bl (fun_app$bm (fun_app$bn (fun_app$bo corec_llist$c ?v0py84) ?v2py55) ?v3py49) ?v4py29) ?v5py29) ?v1py84)) )) :named A94))
(assert (! (forall ((?v0py85 A_bool_fun$)(?v1py85 A$)(?v2py56 A_c_llist_fun$)(?v3py50 A_bool_fun$)(?v4py30 A_c_llist_llist_fun$)(?v5py30 A_a_fun$)) (! (or (not (fun_app$c ?v0py85 ?v1py85)) (= (fun_app$bp (fun_app$bq (fun_app$br (fun_app$bs (fun_app$bt (fun_app$bu corec_llist$d ?v0py85) ?v2py56) ?v3py50) ?v4py30) ?v5py30) ?v1py85) lNil$c)) :pattern ((fun_app$bp (fun_app$bq (fun_app$br (fun_app$bs (fun_app$bt (fun_app$bu corec_llist$d ?v0py85) ?v2py56) ?v3py50) ?v4py30) ?v5py30) ?v1py85)) )) :named A95))
(assert (! (forall ((?v0py86 A_bool_fun$)(?v1py86 A$)(?v2py57 A_bool_fun$)(?v3py51 A_bool_fun$)(?v4py31 A_bool_llist_fun$)(?v5py31 A_a_fun$)) (! (or (not (fun_app$c ?v0py86 ?v1py86)) (= (fun_app$bv (fun_app$bw (fun_app$bx (fun_app$by (fun_app$bz (fun_app$ca corec_llist$e ?v0py86) ?v2py57) ?v3py51) ?v4py31) ?v5py31) ?v1py86) lNil$f)) :pattern ((fun_app$bv (fun_app$bw (fun_app$bx (fun_app$by (fun_app$bz (fun_app$ca corec_llist$e ?v0py86) ?v2py57) ?v3py51) ?v4py31) ?v5py31) ?v1py86)) )) :named A96))
(assert (! (forall ((?v0py87 A_bool_fun$)(?v1py87 A$)(?v2py58 A_a_fun$)(?v3py52 A_bool_fun$)(?v4py32 A_a_llist_fun$)(?v5py32 A_a_fun$)) (! (or (not (fun_app$c ?v0py87 ?v1py87)) (= (fun_app$cb (fun_app$cc (fun_app$cd (fun_app$ce (fun_app$cf (fun_app$cg corec_llist$f ?v0py87) ?v2py58) ?v3py52) ?v4py32) ?v5py32) ?v1py87) lNil$d)) :pattern ((fun_app$cb (fun_app$cc (fun_app$cd (fun_app$ce (fun_app$cf (fun_app$cg corec_llist$f ?v0py87) ?v2py58) ?v3py52) ?v4py32) ?v5py32) ?v1py87)) )) :named A97))
(assert (! (forall ((?v0py88 A_bool_fun$)(?v1py88 A$)(?v2py59 A_c_fun$)(?v3py53 A_bool_fun$)(?v4py33 A_c_llist_fun$)(?v5py33 A_a_fun$)) (! (or (not (fun_app$c ?v0py88 ?v1py88)) (= (fun_app$ah (fun_app$at (fun_app$au (fun_app$av (fun_app$aw (fun_app$ax corec_llist$ ?v0py88) ?v2py59) ?v3py53) ?v4py33) ?v5py33) ?v1py88) lNil$)) :pattern ((fun_app$ah (fun_app$at (fun_app$au (fun_app$av (fun_app$aw (fun_app$ax corec_llist$ ?v0py88) ?v2py59) ?v3py53) ?v4py33) ?v5py33) ?v1py88)) )) :named A98))
(assert (! (forall ((?v0py89 B_bool_fun$)(?v1py89 B$)(?v2py60 B_d_fun$)(?v3py54 B_bool_fun$)(?v4py34 B_d_llist_fun$)(?v5py34 B_b_fun$)) (! (or (not (fun_app$a ?v0py89 ?v1py89)) (= (fun_app$x (fun_app$ay (fun_app$az (fun_app$ba (fun_app$bb (fun_app$bc corec_llist$a ?v0py89) ?v2py60) ?v3py54) ?v4py34) ?v5py34) ?v1py89) lNil$a)) :pattern ((fun_app$x (fun_app$ay (fun_app$az (fun_app$ba (fun_app$bb (fun_app$bc corec_llist$a ?v0py89) ?v2py60) ?v3py54) ?v4py34) ?v5py34) ?v1py89)) )) :named A99))
(assert (! (forall ((?v0py90 D_d_bool_fun_fun$)(?v1py90 D_llist$)) (! (fun_app$f (fun_app$da (llexord$a ?v0py90) ?v1py90) ?v1py90) :pattern ((fun_app$da (llexord$a ?v0py90) ?v1py90)) )) :named A100))
(assert (! (forall ((?v0py91 C_c_bool_fun_fun$)(?v1py91 C_llist$)) (! (fun_app$g (fun_app$h (llexord$ ?v0py91) ?v1py91) ?v1py91) :pattern ((fun_app$h (llexord$ ?v0py91) ?v1py91)) )) :named A101))
(assert (! (forall ((?v0py92 D_d_bool_fun_fun$)(?v1py92 D_llist$)) (! (and (or (not (fun_app$f (fun_app$da (fun_app$db llist_all2$a ?v0py92) ?v1py92) lNil$a)) (= ?v1py92 lNil$a)) (or (fun_app$f (fun_app$da (fun_app$db llist_all2$a ?v0py92) ?v1py92) lNil$a) (not (= ?v1py92 lNil$a)))) :pattern ((fun_app$da (fun_app$db llist_all2$a ?v0py92) ?v1py92)) )) :named A102))
(assert (! (forall ((?v0py93 D_c_bool_fun_fun$)(?v1py93 D_llist$)) (! (and (or (not (fun_app$g (fun_app$dc (llist_all2$b ?v0py93) ?v1py93) lNil$)) (= ?v1py93 lNil$a)) (or (fun_app$g (fun_app$dc (llist_all2$b ?v0py93) ?v1py93) lNil$) (not (= ?v1py93 lNil$a)))) :pattern ((fun_app$dc (llist_all2$b ?v0py93) ?v1py93)) )) :named A103))
(assert (! (forall ((?v0py94 D_b_bool_fun_fun$)(?v1py94 D_llist$)) (! (and (or (not (fun_app$df (fun_app$dd (fun_app$de llist_all2$c ?v0py94) ?v1py94) lNil$b)) (= ?v1py94 lNil$a)) (or (fun_app$df (fun_app$dd (fun_app$de llist_all2$c ?v0py94) ?v1py94) lNil$b) (not (= ?v1py94 lNil$a)))) :pattern ((fun_app$dd (fun_app$de llist_all2$c ?v0py94) ?v1py94)) )) :named A104))
(assert (! (forall ((?v0py95 C_c_bool_fun_fun$)(?v1py95 C_llist$)) (! (and (or (not (fun_app$g (fun_app$h (fun_app$dg llist_all2$d ?v0py95) ?v1py95) lNil$)) (= ?v1py95 lNil$)) (or (fun_app$g (fun_app$h (fun_app$dg llist_all2$d ?v0py95) ?v1py95) lNil$) (not (= ?v1py95 lNil$)))) :pattern ((fun_app$h (fun_app$dg llist_all2$d ?v0py95) ?v1py95)) )) :named A105))
(assert (! (forall ((?v0py96 C_a_bool_fun_fun$)(?v1py96 C_llist$)) (! (and (or (not (fun_app$dj (fun_app$dh (fun_app$di llist_all2$e ?v0py96) ?v1py96) lNil$d)) (= ?v1py96 lNil$)) (or (fun_app$dj (fun_app$dh (fun_app$di llist_all2$e ?v0py96) ?v1py96) lNil$d) (not (= ?v1py96 lNil$)))) :pattern ((fun_app$dh (fun_app$di llist_all2$e ?v0py96) ?v1py96)) )) :named A106))
(assert (! (forall ((?v0py97 A_b_bool_fun_fun$)(?v1py97 A_llist$)) (! (and (or (not (fun_app$df (fun_app$dk (llist_all2$f ?v0py97) ?v1py97) lNil$b)) (= ?v1py97 lNil$d)) (or (fun_app$df (fun_app$dk (llist_all2$f ?v0py97) ?v1py97) lNil$b) (not (= ?v1py97 lNil$d)))) :pattern ((fun_app$dk (llist_all2$f ?v0py97) ?v1py97)) )) :named A107))
(assert (! (forall ((?v0py98 C_d_bool_fun_fun$)(?v1py98 C_llist$)) (! (and (or (not (fun_app$f (fun_app$dl (fun_app$cp llist_all2$ ?v0py98) ?v1py98) lNil$a)) (= ?v1py98 lNil$)) (or (fun_app$f (fun_app$dl (fun_app$cp llist_all2$ ?v0py98) ?v1py98) lNil$a) (not (= ?v1py98 lNil$)))) :pattern ((fun_app$dl (fun_app$cp llist_all2$ ?v0py98) ?v1py98)) )) :named A108))
(assert (! (forall ((?v0py99 D_d_bool_fun_fun$)(?v1py99 D_llist$)) (! (and (or (not (fun_app$f (fun_app$da (fun_app$db llist_all2$a ?v0py99) lNil$a) ?v1py99)) (= ?v1py99 lNil$a)) (or (fun_app$f (fun_app$da (fun_app$db llist_all2$a ?v0py99) lNil$a) ?v1py99) (not (= ?v1py99 lNil$a)))) :pattern ((fun_app$f (fun_app$da (fun_app$db llist_all2$a ?v0py99) lNil$a) ?v1py99)) )) :named A109))
(assert (! (forall ((?v0py100 D_c_bool_fun_fun$)(?v1py100 C_llist$)) (! (and (or (not (fun_app$g (fun_app$dc (llist_all2$b ?v0py100) lNil$a) ?v1py100)) (= ?v1py100 lNil$)) (or (fun_app$g (fun_app$dc (llist_all2$b ?v0py100) lNil$a) ?v1py100) (not (= ?v1py100 lNil$)))) :pattern ((fun_app$g (fun_app$dc (llist_all2$b ?v0py100) lNil$a) ?v1py100)) )) :named A110))
(assert (! (forall ((?v0py101 D_b_bool_fun_fun$)(?v1py101 B_llist$)) (! (and (or (not (fun_app$df (fun_app$dd (fun_app$de llist_all2$c ?v0py101) lNil$a) ?v1py101)) (= ?v1py101 lNil$b)) (or (fun_app$df (fun_app$dd (fun_app$de llist_all2$c ?v0py101) lNil$a) ?v1py101) (not (= ?v1py101 lNil$b)))) :pattern ((fun_app$df (fun_app$dd (fun_app$de llist_all2$c ?v0py101) lNil$a) ?v1py101)) )) :named A111))
(assert (! (forall ((?v0py102 C_c_bool_fun_fun$)(?v1py102 C_llist$)) (! (and (or (not (fun_app$g (fun_app$h (fun_app$dg llist_all2$d ?v0py102) lNil$) ?v1py102)) (= ?v1py102 lNil$)) (or (fun_app$g (fun_app$h (fun_app$dg llist_all2$d ?v0py102) lNil$) ?v1py102) (not (= ?v1py102 lNil$)))) :pattern ((fun_app$g (fun_app$h (fun_app$dg llist_all2$d ?v0py102) lNil$) ?v1py102)) )) :named A112))
(assert (! (forall ((?v0py103 C_a_bool_fun_fun$)(?v1py103 A_llist$)) (! (and (or (not (fun_app$dj (fun_app$dh (fun_app$di llist_all2$e ?v0py103) lNil$) ?v1py103)) (= ?v1py103 lNil$d)) (or (fun_app$dj (fun_app$dh (fun_app$di llist_all2$e ?v0py103) lNil$) ?v1py103) (not (= ?v1py103 lNil$d)))) :pattern ((fun_app$dj (fun_app$dh (fun_app$di llist_all2$e ?v0py103) lNil$) ?v1py103)) )) :named A113))
(assert (! (forall ((?v0py104 A_b_bool_fun_fun$)(?v1py104 B_llist$)) (! (and (or (not (fun_app$df (fun_app$dk (llist_all2$f ?v0py104) lNil$d) ?v1py104)) (= ?v1py104 lNil$b)) (or (fun_app$df (fun_app$dk (llist_all2$f ?v0py104) lNil$d) ?v1py104) (not (= ?v1py104 lNil$b)))) :pattern ((fun_app$df (fun_app$dk (llist_all2$f ?v0py104) lNil$d) ?v1py104)) )) :named A114))
(assert (! (forall ((?v0py105 C_d_bool_fun_fun$)(?v1py105 D_llist$)) (! (and (or (not (fun_app$f (fun_app$dl (fun_app$cp llist_all2$ ?v0py105) lNil$) ?v1py105)) (= ?v1py105 lNil$a)) (or (fun_app$f (fun_app$dl (fun_app$cp llist_all2$ ?v0py105) lNil$) ?v1py105) (not (= ?v1py105 lNil$a)))) :pattern ((fun_app$f (fun_app$dl (fun_app$cp llist_all2$ ?v0py105) lNil$) ?v1py105)) )) :named A115))
(assert (! (forall ((?v0py106 D_d_bool_fun_fun$)(?v1py106 D_llist$)) (! (fun_app$f (fun_app$da (llexord$a ?v0py106) lNil$a) ?v1py106) :pattern ((fun_app$f (fun_app$da (llexord$a ?v0py106) lNil$a) ?v1py106)) )) :named A116))
(assert (! (forall ((?v0py107 C_c_bool_fun_fun$)(?v1py107 C_llist$)) (! (fun_app$g (fun_app$h (llexord$ ?v0py107) lNil$) ?v1py107) :pattern ((fun_app$g (fun_app$h (llexord$ ?v0py107) lNil$) ?v1py107)) )) :named A117))
(assert (! (= (fun_app$dg llist_all2$d uua$) uub$) :named A118))
(assert (! (forall ((?v0py108 C_c_bool_fun_fun$)(?v1py108 C_llist$)) (! (or (not (fun_app$r (fun_app$s ?v0py108 (?v2!8 ?v0py108)) (?v2!8 ?v0py108))) (fun_app$g (fun_app$h (fun_app$dg llist_all2$d ?v0py108) ?v1py108) ?v1py108)) :pattern ((fun_app$h (fun_app$dg llist_all2$d ?v0py108) ?v1py108)) )) :named A119))
(assert (! (forall ((?v0py109 D_d_bool_fun_fun$)(?v1py109 D_llist$)(?v2py61 D_llist$)) (! (or (fun_app$f (fun_app$da (llexord$a ?v0py109) ?v1py109) ?v2py61) (fun_app$f (fun_app$da (llexord$a ?v0py109) ?v2py61) ?v1py109) (and (not (fun_app$dm (fun_app$dn ?v0py109 (?v3!10 ?v0py109)) (?v4!9 ?v0py109))) (not (= (?v3!10 ?v0py109) (?v4!9 ?v0py109))) (not (fun_app$dm (fun_app$dn ?v0py109 (?v4!9 ?v0py109)) (?v3!10 ?v0py109))))) :pattern ((fun_app$f (fun_app$da (llexord$a ?v0py109) ?v2py61) ?v1py109)) :pattern ((fun_app$f (fun_app$da (llexord$a ?v0py109) ?v1py109) ?v2py61)) )) :named A120))
(assert (! (forall ((?v0py110 C_c_bool_fun_fun$)(?v1py110 C_llist$)(?v2py62 C_llist$)) (! (or (fun_app$g (fun_app$h (llexord$ ?v0py110) ?v1py110) ?v2py62) (fun_app$g (fun_app$h (llexord$ ?v0py110) ?v2py62) ?v1py110) (and (not (fun_app$r (fun_app$s ?v0py110 (?v3!12 ?v0py110)) (?v4!11 ?v0py110))) (not (= (?v3!12 ?v0py110) (?v4!11 ?v0py110))) (not (fun_app$r (fun_app$s ?v0py110 (?v4!11 ?v0py110)) (?v3!12 ?v0py110))))) :pattern ((fun_app$g (fun_app$h (llexord$ ?v0py110) ?v2py62) ?v1py110)) :pattern ((fun_app$g (fun_app$h (llexord$ ?v0py110) ?v1py110) ?v2py62)) )) :named A121))
(assert (! (forall ((?v0py111 D_d_bool_fun_fun$)(?v1py111 D_llist$)(?v2py63 D_llist$)(?v3py55 D_llist$)) (! (or (fun_app$f (fun_app$da (llexord$a ?v0py111) ?v1py111) ?v3py55) (not (fun_app$f (fun_app$da (llexord$a ?v0py111) ?v1py111) ?v2py63)) (not (fun_app$f (fun_app$da (llexord$a ?v0py111) ?v2py63) ?v3py55)) (and (fun_app$dm (fun_app$dn ?v0py111 (?v4!15 ?v0py111)) (?v5!14 ?v0py111)) (fun_app$dm (fun_app$dn ?v0py111 (?v5!14 ?v0py111)) (?v6!13 ?v0py111)) (not (fun_app$dm (fun_app$dn ?v0py111 (?v4!15 ?v0py111)) (?v6!13 ?v0py111))))) :pattern ((fun_app$f (fun_app$da (llexord$a ?v0py111) ?v1py111) ?v3py55) (fun_app$f (fun_app$da (llexord$a ?v0py111) ?v2py63) ?v3py55)) )) :named A122))
(assert (! (forall ((?v0py112 C_c_bool_fun_fun$)(?v1py112 C_llist$)(?v2py64 C_llist$)(?v3py56 C_llist$)) (! (or (fun_app$g (fun_app$h (llexord$ ?v0py112) ?v1py112) ?v3py56) (not (fun_app$g (fun_app$h (llexord$ ?v0py112) ?v1py112) ?v2py64)) (not (fun_app$g (fun_app$h (llexord$ ?v0py112) ?v2py64) ?v3py56)) (and (fun_app$r (fun_app$s ?v0py112 (?v4!18 ?v0py112)) (?v5!17 ?v0py112)) (fun_app$r (fun_app$s ?v0py112 (?v5!17 ?v0py112)) (?v6!16 ?v0py112)) (not (fun_app$r (fun_app$s ?v0py112 (?v4!18 ?v0py112)) (?v6!16 ?v0py112))))) :pattern ((fun_app$g (fun_app$h (llexord$ ?v0py112) ?v2py64) ?v3py56) (fun_app$g (fun_app$h (llexord$ ?v0py112) ?v1py112) ?v2py64)) )) :named A123))
(assert (! (forall ((?v0py113 D_d_bool_fun_fun$)(?v1py113 D_llist$)(?v2py65 D_llist$)) (! (or (= ?v1py113 ?v2py65) (not (fun_app$f (fun_app$da (llexord$a ?v0py113) ?v1py113) ?v2py65)) (not (fun_app$f (fun_app$da (llexord$a ?v0py113) ?v2py65) ?v1py113)) (and (fun_app$dm (fun_app$dn ?v0py113 (?v3!20 ?v0py113)) (?v4!19 ?v0py113)) (fun_app$dm (fun_app$dn ?v0py113 (?v4!19 ?v0py113)) (?v3!20 ?v0py113)))) :pattern ((fun_app$f (fun_app$da (llexord$a ?v0py113) ?v1py113) ?v2py65)) :pattern ((fun_app$f (fun_app$da (llexord$a ?v0py113) ?v2py65) ?v1py113)) )) :named A124))
(assert (! (forall ((?v0py114 C_c_bool_fun_fun$)(?v1py114 C_llist$)(?v2py66 C_llist$)) (! (or (= ?v1py114 ?v2py66) (not (fun_app$g (fun_app$h (llexord$ ?v0py114) ?v1py114) ?v2py66)) (not (fun_app$g (fun_app$h (llexord$ ?v0py114) ?v2py66) ?v1py114)) (and (fun_app$r (fun_app$s ?v0py114 (?v3!22 ?v0py114)) (?v4!21 ?v0py114)) (fun_app$r (fun_app$s ?v0py114 (?v4!21 ?v0py114)) (?v3!22 ?v0py114)))) :pattern ((fun_app$g (fun_app$h (llexord$ ?v0py114) ?v1py114) ?v2py66)) :pattern ((fun_app$g (fun_app$h (llexord$ ?v0py114) ?v2py66) ?v1py114)) )) :named A125))
(assert (! (forall ((?v0py115 D_c_bool_fun_fun$)(?v1py115 D_llist$)(?v2py67 C_llist$)(?v3py57 D_c_bool_fun_fun$)) (! (or (fun_app$g (fun_app$dc (llist_all2$b ?v3py57) ?v1py115) ?v2py67) (not (fun_app$g (fun_app$dc (llist_all2$b ?v0py115) ?v1py115) ?v2py67)) (and (fun_app$r (fun_app$do ?v0py115 (?v4!24 ?v3py57 ?v0py115)) (?v5!23 ?v3py57 ?v0py115)) (not (fun_app$r (fun_app$do ?v3py57 (?v4!24 ?v3py57 ?v0py115)) (?v5!23 ?v3py57 ?v0py115))))) :pattern ((fun_app$g (fun_app$dc (llist_all2$b ?v0py115) ?v1py115) ?v2py67) (fun_app$g (fun_app$dc (llist_all2$b ?v3py57) ?v1py115) ?v2py67)) )) :named A126))
(assert (! (forall ((?v0py116 D_b_bool_fun_fun$)(?v1py116 D_llist$)(?v2py68 B_llist$)(?v3py58 D_b_bool_fun_fun$)) (! (or (fun_app$df (fun_app$dd (fun_app$de llist_all2$c ?v3py58) ?v1py116) ?v2py68) (not (fun_app$df (fun_app$dd (fun_app$de llist_all2$c ?v0py116) ?v1py116) ?v2py68)) (and (fun_app$a (fun_app$dp ?v0py116 (?v4!26 ?v3py58 ?v0py116)) (?v5!25 ?v3py58 ?v0py116)) (not (fun_app$a (fun_app$dp ?v3py58 (?v4!26 ?v3py58 ?v0py116)) (?v5!25 ?v3py58 ?v0py116))))) :pattern ((fun_app$df (fun_app$dd (fun_app$de llist_all2$c ?v3py58) ?v1py116) ?v2py68) (fun_app$df (fun_app$dd (fun_app$de llist_all2$c ?v0py116) ?v1py116) ?v2py68)) )) :named A127))
(assert (! (forall ((?v0py117 C_c_bool_fun_fun$)(?v1py117 C_llist$)(?v2py69 C_llist$)(?v3py59 C_c_bool_fun_fun$)) (! (or (fun_app$g (fun_app$h (fun_app$dg llist_all2$d ?v3py59) ?v1py117) ?v2py69) (not (fun_app$g (fun_app$h (fun_app$dg llist_all2$d ?v0py117) ?v1py117) ?v2py69)) (and (fun_app$r (fun_app$s ?v0py117 (?v4!28 ?v3py59 ?v0py117)) (?v5!27 ?v3py59 ?v0py117)) (not (fun_app$r (fun_app$s ?v3py59 (?v4!28 ?v3py59 ?v0py117)) (?v5!27 ?v3py59 ?v0py117))))) :pattern ((fun_app$g (fun_app$h (fun_app$dg llist_all2$d ?v0py117) ?v1py117) ?v2py69) (fun_app$g (fun_app$h (fun_app$dg llist_all2$d ?v3py59) ?v1py117) ?v2py69)) )) :named A128))
(assert (! (forall ((?v0py118 C_a_bool_fun_fun$)(?v1py118 C_llist$)(?v2py70 A_llist$)(?v3py60 C_a_bool_fun_fun$)) (! (or (fun_app$dj (fun_app$dh (fun_app$di llist_all2$e ?v3py60) ?v1py118) ?v2py70) (not (fun_app$dj (fun_app$dh (fun_app$di llist_all2$e ?v0py118) ?v1py118) ?v2py70)) (and (fun_app$c (fun_app$dq ?v0py118 (?v4!30 ?v3py60 ?v0py118)) (?v5!29 ?v3py60 ?v0py118)) (not (fun_app$c (fun_app$dq ?v3py60 (?v4!30 ?v3py60 ?v0py118)) (?v5!29 ?v3py60 ?v0py118))))) :pattern ((fun_app$dj (fun_app$dh (fun_app$di llist_all2$e ?v0py118) ?v1py118) ?v2py70) (fun_app$dj (fun_app$dh (fun_app$di llist_all2$e ?v3py60) ?v1py118) ?v2py70)) )) :named A129))
(assert (! (forall ((?v0py119 A_b_bool_fun_fun$)(?v1py119 A_llist$)(?v2py71 B_llist$)(?v3py61 A_b_bool_fun_fun$)) (! (or (fun_app$df (fun_app$dk (llist_all2$f ?v3py61) ?v1py119) ?v2py71) (not (fun_app$df (fun_app$dk (llist_all2$f ?v0py119) ?v1py119) ?v2py71)) (and (fun_app$a (fun_app$ch ?v0py119 (?v4!32 ?v3py61 ?v0py119)) (?v5!31 ?v3py61 ?v0py119)) (not (fun_app$a (fun_app$ch ?v3py61 (?v4!32 ?v3py61 ?v0py119)) (?v5!31 ?v3py61 ?v0py119))))) :pattern ((fun_app$df (fun_app$dk (llist_all2$f ?v0py119) ?v1py119) ?v2py71) (fun_app$df (fun_app$dk (llist_all2$f ?v3py61) ?v1py119) ?v2py71)) )) :named A130))
(assert (! (forall ((?v0py120 C_d_bool_fun_fun$)(?v1py120 C_llist$)(?v2py72 D_llist$)(?v3py62 C_d_bool_fun_fun$)) (! (or (fun_app$f (fun_app$dl (fun_app$cp llist_all2$ ?v3py62) ?v1py120) ?v2py72) (not (fun_app$f (fun_app$dl (fun_app$cp llist_all2$ ?v0py120) ?v1py120) ?v2py72)) (and (fun_app$dm (fun_app$dr ?v0py120 (?v4!34 ?v3py62 ?v0py120)) (?v5!33 ?v3py62 ?v0py120)) (not (fun_app$dm (fun_app$dr ?v3py62 (?v4!34 ?v3py62 ?v0py120)) (?v5!33 ?v3py62 ?v0py120))))) :pattern ((fun_app$f (fun_app$dl (fun_app$cp llist_all2$ ?v0py120) ?v1py120) ?v2py72) (fun_app$f (fun_app$dl (fun_app$cp llist_all2$ ?v3py62) ?v1py120) ?v2py72)) )) :named A131))
(assert (! (forall ((?v0py121 B_bool_fun$)(?v1py121 B$)(?v2py73 B_b_fun$)(?v3py63 B_b_fun$)) (! (or (not (fun_app$a ?v0py121 ?v1py121)) (= (fun_app$bj (fun_app$bk (fun_app$cq (fun_app$cr unfold_llist$ ?v0py121) ?v2py73) ?v3py63) ?v1py121) lNil$b)) :pattern ((fun_app$bj (fun_app$bk (fun_app$cq (fun_app$cr unfold_llist$ ?v0py121) ?v2py73) ?v3py63) ?v1py121)) )) :named A132))
(assert (! (forall ((?v0py122 A_bool_fun$)(?v1py122 A$)(?v2py74 A_c_llist_fun$)(?v3py64 A_a_fun$)) (! (or (not (fun_app$c ?v0py122 ?v1py122)) (= (fun_app$bp (fun_app$bq (fun_app$cs (fun_app$ct unfold_llist$a ?v0py122) ?v2py74) ?v3py64) ?v1py122) lNil$c)) :pattern ((fun_app$bp (fun_app$bq (fun_app$cs (fun_app$ct unfold_llist$a ?v0py122) ?v2py74) ?v3py64) ?v1py122)) )) :named A133))
(assert (! (forall ((?v0py123 A_bool_fun$)(?v1py123 A$)(?v2py75 A_bool_fun$)(?v3py65 A_a_fun$)) (! (or (not (fun_app$c ?v0py123 ?v1py123)) (= (fun_app$bv (fun_app$bw (fun_app$cu (fun_app$cv unfold_llist$b ?v0py123) ?v2py75) ?v3py65) ?v1py123) lNil$f)) :pattern ((fun_app$bv (fun_app$bw (fun_app$cu (fun_app$cv unfold_llist$b ?v0py123) ?v2py75) ?v3py65) ?v1py123)) )) :named A134))
(assert (! (forall ((?v0py124 A_bool_fun$)(?v1py124 A$)(?v2py76 A_c_fun$)(?v3py66 A_a_fun$)) (! (or (not (fun_app$c ?v0py124 ?v1py124)) (= (fun_app$ah (fun_app$at (fun_app$cw (fun_app$cx unfold_llist$c ?v0py124) ?v2py76) ?v3py66) ?v1py124) lNil$)) :pattern ((fun_app$ah (fun_app$at (fun_app$cw (fun_app$cx unfold_llist$c ?v0py124) ?v2py76) ?v3py66) ?v1py124)) )) :named A135))
(assert (! (forall ((?v0py125 A_bool_fun$)(?v1py125 A$)(?v2py77 A_a_fun$)(?v3py67 A_a_fun$)) (! (or (not (fun_app$c ?v0py125 ?v1py125)) (= (fun_app$cb (fun_app$cc (fun_app$cy (fun_app$cz unfold_llist$d ?v0py125) ?v2py77) ?v3py67) ?v1py125) lNil$d)) :pattern ((fun_app$cb (fun_app$cc (fun_app$cy (fun_app$cz unfold_llist$d ?v0py125) ?v2py77) ?v3py67) ?v1py125)) )) :named A136))
(assert (! (forall ((?v0py126 A_b_bool_fun_fun$)(?v1py126 Bool_bool_bool_fun_fun$)) (! (rel_fun$d (rel_fun$ ?v0py126 uu$) (rel_fun$e (rel_fun$ ?v0py126 ?v1py126) (rel_fun$f (rel_fun$a ?v0py126 ?v0py126) (rel_fun$g ?v0py126 (llist_all2$g ?v1py126)))) unfold_llist$b unfold_llist$e) :pattern ((rel_fun$ ?v0py126 ?v1py126)) :pattern ((rel_fun$g ?v0py126 (llist_all2$g ?v1py126))) )) :named A137))
(assert (! (forall ((?v0py127 A_b_bool_fun_fun$)(?v1py127 A_b_bool_fun_fun$)) (! (rel_fun$h (rel_fun$ ?v0py127 uu$) (rel_fun$i (rel_fun$a ?v0py127 ?v1py127) (rel_fun$j (rel_fun$a ?v0py127 ?v0py127) (rel_fun$k ?v0py127 (llist_all2$f ?v1py127)))) unfold_llist$d unfold_llist$) :pattern ((rel_fun$a ?v0py127 ?v1py127)) :pattern ((rel_fun$k ?v0py127 (llist_all2$f ?v1py127))) )) :named A138))
(assert (! (forall ((?v0py128 A_b_bool_fun_fun$)(?v1py128 C_d_bool_fun_fun$)) (! (rel_fun$l (rel_fun$ ?v0py128 uu$) (rel_fun$m (rel_fun$b ?v0py128 ?v1py128) (rel_fun$n (rel_fun$a ?v0py128 ?v0py128) (rel_fun$c ?v0py128 (fun_app$cp llist_all2$ ?v1py128)))) unfold_llist$c unfold_llist$f) :pattern ((rel_fun$b ?v0py128 ?v1py128)) :pattern ((rel_fun$c ?v0py128 (fun_app$cp llist_all2$ ?v1py128))) )) :named A139))
(assert (! (forall ((?v0py129 A_b_bool_fun_fun$)(?v1py129 C_llist_d_llist_bool_fun_fun$)) (! (rel_fun$o (rel_fun$ ?v0py129 uu$) (rel_fun$p (rel_fun$c ?v0py129 ?v1py129) (rel_fun$q (rel_fun$a ?v0py129 ?v0py129) (rel_fun$r ?v0py129 (llist_all2$h ?v1py129)))) unfold_llist$a unfold_llist$g) :pattern ((rel_fun$c ?v0py129 ?v1py129)) :pattern ((rel_fun$r ?v0py129 (llist_all2$h ?v1py129))) )) :named A140))
(assert (! (forall ((?v0py130 B_b_bool_fun_fun$)(?v1py130 B_b_bool_fun_fun$)) (! (rel_fun$s (rel_fun$t ?v0py130 uu$) (rel_fun$u (rel_fun$v ?v0py130 ?v1py130) (rel_fun$w (rel_fun$v ?v0py130 ?v0py130) (rel_fun$x ?v0py130 (llist_all2$i ?v1py130)))) unfold_llist$ unfold_llist$) :pattern ((rel_fun$v ?v0py130 ?v1py130)) :pattern ((rel_fun$x ?v0py130 (llist_all2$i ?v1py130))) )) :named A141))
(assert (! (forall ((?v0py131 B_a_bool_fun_fun$)(?v1py131 B_bool_bool_fun_fun$)) (! (rel_fun$y (rel_fun$z ?v0py131 uu$) (rel_fun$aa (rel_fun$ab ?v0py131 ?v1py131) (rel_fun$ac (rel_fun$ad ?v0py131 ?v0py131) (rel_fun$ae ?v0py131 (llist_all2$j ?v1py131)))) unfold_llist$ unfold_llist$b) :pattern ((rel_fun$ab ?v0py131 ?v1py131)) :pattern ((rel_fun$ae ?v0py131 (llist_all2$j ?v1py131))) )) :named A142))
(assert (! (forall ((?v0py132 B_a_bool_fun_fun$)(?v1py132 B_c_bool_fun_fun$)) (! (rel_fun$af (rel_fun$z ?v0py132 uu$) (rel_fun$ag (rel_fun$ah ?v0py132 ?v1py132) (rel_fun$ai (rel_fun$ad ?v0py132 ?v0py132) (rel_fun$aj ?v0py132 (llist_all2$k ?v1py132)))) unfold_llist$ unfold_llist$c) :pattern ((rel_fun$ah ?v0py132 ?v1py132)) :pattern ((rel_fun$aj ?v0py132 (llist_all2$k ?v1py132))) )) :named A143))
(assert (! (forall ((?v0py133 B_a_bool_fun_fun$)(?v1py133 B_a_bool_fun_fun$)) (! (rel_fun$ak (rel_fun$z ?v0py133 uu$) (rel_fun$al (rel_fun$ad ?v0py133 ?v1py133) (rel_fun$am (rel_fun$ad ?v0py133 ?v0py133) (rel_fun$an ?v0py133 (llist_all2$l ?v1py133)))) unfold_llist$ unfold_llist$d) :pattern ((rel_fun$ad ?v0py133 ?v1py133)) :pattern ((rel_fun$an ?v0py133 (llist_all2$l ?v1py133))) )) :named A144))
(assert (! (forall ((?v0py134 A_b_bool_fun_fun$)(?v1py134 Bool_b_bool_fun_fun$)) (! (rel_fun$ao (rel_fun$ ?v0py134 uu$) (rel_fun$ap (rel_fun$aq ?v0py134 ?v1py134) (rel_fun$ar (rel_fun$a ?v0py134 ?v0py134) (rel_fun$as ?v0py134 (llist_all2$m ?v1py134)))) unfold_llist$b unfold_llist$) :pattern ((rel_fun$aq ?v0py134 ?v1py134)) :pattern ((rel_fun$as ?v0py134 (llist_all2$m ?v1py134))) )) :named A145))
(assert (! (forall ((?v0py135 A_a_bool_fun_fun$)(?v1py135 Bool_bool_bool_fun_fun$)) (! (rel_fun$at (fun_app$ds (rel_fun$au ?v0py135) uu$) (rel_fun$av (fun_app$ds (rel_fun$au ?v0py135) ?v1py135) (rel_fun$aw (fun_app$dt (rel_fun$ax ?v0py135) ?v0py135) (rel_fun$ay ?v0py135 (llist_all2$g ?v1py135)))) unfold_llist$b unfold_llist$b) :pattern ((fun_app$ds (rel_fun$au ?v0py135) ?v1py135)) :pattern ((rel_fun$ay ?v0py135 (llist_all2$g ?v1py135))) )) :named A146))
(assert (! (forall ((?v0py136 A_b_bool_fun_fun$)(?v1py136 Bool_bool_bool_fun_fun$)) (! (rel_fun$az (rel_fun$ ?v0py136 uu$) (rel_fun$ba (rel_fun$ ?v0py136 ?v1py136) (rel_fun$bb (rel_fun$ ?v0py136 uu$) (rel_fun$bc (rel_fun$g ?v0py136 (llist_all2$g ?v1py136)) (rel_fun$f (rel_fun$a ?v0py136 ?v0py136) (rel_fun$g ?v0py136 (llist_all2$g ?v1py136)))))) corec_llist$e corec_llist$b) :pattern ((rel_fun$ ?v0py136 ?v1py136)) :pattern ((rel_fun$g ?v0py136 (llist_all2$g ?v1py136))) )) :named A147))
(assert (! (forall ((?v0py137 A_b_bool_fun_fun$)(?v1py137 A_b_bool_fun_fun$)) (! (rel_fun$bd (rel_fun$ ?v0py137 uu$) (rel_fun$be (rel_fun$a ?v0py137 ?v1py137) (rel_fun$bf (rel_fun$ ?v0py137 uu$) (rel_fun$bg (rel_fun$k ?v0py137 (llist_all2$f ?v1py137)) (rel_fun$j (rel_fun$a ?v0py137 ?v0py137) (rel_fun$k ?v0py137 (llist_all2$f ?v1py137)))))) corec_llist$f corec_llist$c) :pattern ((rel_fun$a ?v0py137 ?v1py137)) :pattern ((rel_fun$k ?v0py137 (llist_all2$f ?v1py137))) )) :named A148))
(assert (! (forall ((?v0py138 A_a_bool_fun_fun$)(?v1py138 C_c_bool_fun_fun$)) (! (rel_fun$bh (fun_app$ds (rel_fun$au ?v0py138) uu$) (rel_fun$bi (fun_app$du (rel_fun$bj ?v0py138) ?v1py138) (rel_fun$bk (fun_app$ds (rel_fun$au ?v0py138) uu$) (rel_fun$bl (rel_fun$bm ?v0py138 (fun_app$dg llist_all2$d ?v1py138)) (rel_fun$bn (fun_app$dt (rel_fun$ax ?v0py138) ?v0py138) (rel_fun$bm ?v0py138 (fun_app$dg llist_all2$d ?v1py138)))))) corec_llist$ corec_llist$) :pattern ((fun_app$du (rel_fun$bj ?v0py138) ?v1py138)) :pattern ((rel_fun$bm ?v0py138 (fun_app$dg llist_all2$d ?v1py138))) )) :named A149))
(assert (! (forall ((?v0py139 A_b_bool_fun_fun$)(?v1py139 C_d_bool_fun_fun$)) (! (rel_fun$bo (rel_fun$ ?v0py139 uu$) (rel_fun$bp (rel_fun$b ?v0py139 ?v1py139) (rel_fun$bq (rel_fun$ ?v0py139 uu$) (rel_fun$br (rel_fun$c ?v0py139 (fun_app$cp llist_all2$ ?v1py139)) (rel_fun$n (rel_fun$a ?v0py139 ?v0py139) (rel_fun$c ?v0py139 (fun_app$cp llist_all2$ ?v1py139)))))) corec_llist$ corec_llist$a) :pattern ((rel_fun$b ?v0py139 ?v1py139)) :pattern ((rel_fun$c ?v0py139 (fun_app$cp llist_all2$ ?v1py139))) )) :named A150))
(assert (! (forall ((?v0py140 B_a_bool_fun_fun$)(?v1py140 D_c_bool_fun_fun$)) (! (rel_fun$bs (rel_fun$z ?v0py140 uu$) (rel_fun$bt (rel_fun$bu ?v0py140 ?v1py140) (rel_fun$bv (rel_fun$z ?v0py140 uu$) (rel_fun$bw (rel_fun$bx ?v0py140 (llist_all2$b ?v1py140)) (rel_fun$by (rel_fun$ad ?v0py140 ?v0py140) (rel_fun$bx ?v0py140 (llist_all2$b ?v1py140)))))) corec_llist$a corec_llist$) :pattern ((rel_fun$bu ?v0py140 ?v1py140)) :pattern ((rel_fun$bx ?v0py140 (llist_all2$b ?v1py140))) )) :named A151))
(assert (! (forall ((?v0py141 B_b_bool_fun_fun$)(?v1py141 D_d_bool_fun_fun$)) (! (rel_fun$bz (rel_fun$t ?v0py141 uu$) (rel_fun$ca (rel_fun$cb ?v0py141 ?v1py141) (rel_fun$cc (rel_fun$t ?v0py141 uu$) (rel_fun$cd (rel_fun$ce ?v0py141 (fun_app$db llist_all2$a ?v1py141)) (rel_fun$cf (rel_fun$v ?v0py141 ?v0py141) (rel_fun$ce ?v0py141 (fun_app$db llist_all2$a ?v1py141)))))) corec_llist$a corec_llist$a) :pattern ((rel_fun$cb ?v0py141 ?v1py141)) :pattern ((rel_fun$ce ?v0py141 (fun_app$db llist_all2$a ?v1py141))) )) :named A152))
(assert (! (forall ((?v0py142 A_b_bool_fun_fun$)(?v1py142 C_llist_d_llist_bool_fun_fun$)) (! (rel_fun$cg (rel_fun$ ?v0py142 uu$) (rel_fun$ch (rel_fun$c ?v0py142 ?v1py142) (rel_fun$ci (rel_fun$ ?v0py142 uu$) (rel_fun$cj (rel_fun$r ?v0py142 (llist_all2$h ?v1py142)) (rel_fun$q (rel_fun$a ?v0py142 ?v0py142) (rel_fun$r ?v0py142 (llist_all2$h ?v1py142)))))) corec_llist$d corec_llist$g) :pattern ((rel_fun$c ?v0py142 ?v1py142)) :pattern ((rel_fun$r ?v0py142 (llist_all2$h ?v1py142))) )) :named A153))
(assert (! (forall ((?v0py143 A_b_bool_fun_fun$)(?v1py143 D_c_bool_fun_fun$)) (! (rel_fun$ck (rel_fun$ ?v0py143 uu$) (rel_fun$cl (rel_fun$cm ?v0py143 ?v1py143) (rel_fun$cn (rel_fun$ ?v0py143 uu$) (rel_fun$co (rel_fun$cp ?v0py143 (llist_all2$b ?v1py143)) (rel_fun$cq (rel_fun$a ?v0py143 ?v0py143) (rel_fun$cp ?v0py143 (llist_all2$b ?v1py143)))))) corec_llist$h corec_llist$i) :pattern ((rel_fun$cm ?v0py143 ?v1py143)) :pattern ((rel_fun$cp ?v0py143 (llist_all2$b ?v1py143))) )) :named A154))
(assert (! (forall ((?v0py144 A_a_bool_fun_fun$)(?v1py144 D_b_bool_fun_fun$)) (! (rel_fun$cr (fun_app$ds (rel_fun$au ?v0py144) uu$) (rel_fun$cs (rel_fun$ct ?v0py144 ?v1py144) (rel_fun$cu (fun_app$ds (rel_fun$au ?v0py144) uu$) (rel_fun$cv (rel_fun$cw ?v0py144 (fun_app$de llist_all2$c ?v1py144)) (rel_fun$cx (fun_app$dt (rel_fun$ax ?v0py144) ?v0py144) (rel_fun$cw ?v0py144 (fun_app$de llist_all2$c ?v1py144)))))) corec_llist$h corec_llist$j) :pattern ((rel_fun$ct ?v0py144 ?v1py144)) :pattern ((rel_fun$cw ?v0py144 (fun_app$de llist_all2$c ?v1py144))) )) :named A155))
(assert (! (forall ((?v0py145 A_a_bool_fun_fun$)(?v1py145 D_c_bool_fun_fun$)) (! (rel_fun$cy (fun_app$ds (rel_fun$au ?v0py145) uu$) (rel_fun$cz (rel_fun$da ?v0py145 ?v1py145) (rel_fun$db (fun_app$ds (rel_fun$au ?v0py145) uu$) (rel_fun$dc (rel_fun$dd ?v0py145 (llist_all2$b ?v1py145)) (rel_fun$de (fun_app$dt (rel_fun$ax ?v0py145) ?v0py145) (rel_fun$dd ?v0py145 (llist_all2$b ?v1py145)))))) corec_llist$h corec_llist$) :pattern ((rel_fun$da ?v0py145 ?v1py145)) :pattern ((rel_fun$dd ?v0py145 (llist_all2$b ?v1py145))) )) :named A156))
(assert (! (forall ((?v0py146 D_d_bool_fun_fun$)(?v1py146 D_llist$)) (! (fun_app$f (fun_app$da (llexord$a ?v0py146) lNil$a) ?v1py146) :pattern ((fun_app$f (fun_app$da (llexord$a ?v0py146) lNil$a) ?v1py146)) )) :named A157))
(assert (! (forall ((?v0py147 C_c_bool_fun_fun$)(?v1py147 C_llist$)) (! (fun_app$g (fun_app$h (llexord$ ?v0py147) lNil$) ?v1py147) :pattern ((fun_app$g (fun_app$h (llexord$ ?v0py147) lNil$) ?v1py147)) )) :named A158))
(assert (! (forall ((?v0py148 D_d_bool_fun_fun$)) (! (fun_app$f (fun_app$da (fun_app$db llist_all2$a ?v0py148) lNil$a) lNil$a) :pattern ((fun_app$db llist_all2$a ?v0py148)) )) :named A159))
(assert (! (forall ((?v0py149 D_c_bool_fun_fun$)) (! (fun_app$g (fun_app$dc (llist_all2$b ?v0py149) lNil$a) lNil$) :pattern ((llist_all2$b ?v0py149)) )) :named A160))
(assert (! (forall ((?v0py150 D_b_bool_fun_fun$)) (! (fun_app$df (fun_app$dd (fun_app$de llist_all2$c ?v0py150) lNil$a) lNil$b) :pattern ((fun_app$de llist_all2$c ?v0py150)) )) :named A161))
(assert (! (forall ((?v0py151 C_c_bool_fun_fun$)) (! (fun_app$g (fun_app$h (fun_app$dg llist_all2$d ?v0py151) lNil$) lNil$) :pattern ((fun_app$dg llist_all2$d ?v0py151)) )) :named A162))
(assert (! (forall ((?v0py152 C_a_bool_fun_fun$)) (! (fun_app$dj (fun_app$dh (fun_app$di llist_all2$e ?v0py152) lNil$) lNil$d) :pattern ((fun_app$di llist_all2$e ?v0py152)) )) :named A163))
(assert (! (forall ((?v0py153 A_b_bool_fun_fun$)) (! (fun_app$df (fun_app$dk (llist_all2$f ?v0py153) lNil$d) lNil$b) :pattern ((llist_all2$f ?v0py153)) )) :named A164))
(assert (! (forall ((?v0py154 C_d_bool_fun_fun$)) (! (fun_app$f (fun_app$dl (fun_app$cp llist_all2$ ?v0py154) lNil$) lNil$a) :pattern ((fun_app$cp llist_all2$ ?v0py154)) )) :named A165))
(assert (! (forall ((?v0py155 D_b_bool_fun_fun$)(?v1py148 D_llist$)(?v2py78 B_llist$)) (! (or (not (fun_app$df (fun_app$dd (fun_app$de llist_all2$c ?v0py155) ?v1py148) ?v2py78)) (and (or (not (fun_app$f lnull$a ?v1py148)) (lnull$c ?v2py78)) (or (fun_app$f lnull$a ?v1py148) (not (lnull$c ?v2py78))))) :pattern ((fun_app$df (fun_app$dd (fun_app$de llist_all2$c ?v0py155) ?v1py148) ?v2py78)) )) :named A166))
(assert (! (forall ((?v0py156 C_a_bool_fun_fun$)(?v1py149 C_llist$)(?v2py79 A_llist$)) (! (or (not (fun_app$dj (fun_app$dh (fun_app$di llist_all2$e ?v0py156) ?v1py149) ?v2py79)) (and (or (not (fun_app$g lnull$ ?v1py149)) (lnull$e ?v2py79)) (or (fun_app$g lnull$ ?v1py149) (not (lnull$e ?v2py79))))) :pattern ((fun_app$dj (fun_app$dh (fun_app$di llist_all2$e ?v0py156) ?v1py149) ?v2py79)) )) :named A167))
(assert (! (forall ((?v0py157 A_b_bool_fun_fun$)(?v1py150 A_llist$)(?v2py80 B_llist$)) (! (or (not (fun_app$df (fun_app$dk (llist_all2$f ?v0py157) ?v1py150) ?v2py80)) (and (or (lnull$c ?v2py80) (not (lnull$e ?v1py150))) (or (lnull$e ?v1py150) (not (lnull$c ?v2py80))))) :pattern ((fun_app$df (fun_app$dk (llist_all2$f ?v0py157) ?v1py150) ?v2py80)) )) :named A168))
(assert (! (forall ((?v0py158 C_c_bool_fun_fun$)(?v1py151 C_llist$)(?v2py81 C_llist$)) (! (or (not (fun_app$g (fun_app$h (fun_app$dg llist_all2$d ?v0py158) ?v1py151) ?v2py81)) (and (or (not (fun_app$g lnull$ ?v1py151)) (fun_app$g lnull$ ?v2py81)) (or (fun_app$g lnull$ ?v1py151) (not (fun_app$g lnull$ ?v2py81))))) :pattern ((fun_app$g (fun_app$h (fun_app$dg llist_all2$d ?v0py158) ?v1py151) ?v2py81)) )) :named A169))
(assert (! (forall ((?v0py159 D_c_bool_fun_fun$)(?v1py152 D_llist$)(?v2py82 C_llist$)) (! (or (not (fun_app$g (fun_app$dc (llist_all2$b ?v0py159) ?v1py152) ?v2py82)) (and (or (not (fun_app$f lnull$a ?v1py152)) (fun_app$g lnull$ ?v2py82)) (or (not (fun_app$g lnull$ ?v2py82)) (fun_app$f lnull$a ?v1py152)))) :pattern ((fun_app$g (fun_app$dc (llist_all2$b ?v0py159) ?v1py152) ?v2py82)) )) :named A170))
(assert (! (forall ((?v0py160 D_d_bool_fun_fun$)(?v1py153 D_llist$)(?v2py83 D_llist$)) (! (or (not (fun_app$f (fun_app$da (fun_app$db llist_all2$a ?v0py160) ?v1py153) ?v2py83)) (and (or (not (fun_app$f lnull$a ?v1py153)) (fun_app$f lnull$a ?v2py83)) (or (not (fun_app$f lnull$a ?v2py83)) (fun_app$f lnull$a ?v1py153)))) :pattern ((fun_app$f (fun_app$da (fun_app$db llist_all2$a ?v0py160) ?v1py153) ?v2py83)) )) :named A171))
(assert (! (forall ((?v0py161 C_d_bool_fun_fun$)(?v1py154 C_llist$)(?v2py84 D_llist$)) (! (or (not (fun_app$f (fun_app$dl (fun_app$cp llist_all2$ ?v0py161) ?v1py154) ?v2py84)) (and (or (not (fun_app$g lnull$ ?v1py154)) (fun_app$f lnull$a ?v2py84)) (or (fun_app$g lnull$ ?v1py154) (not (fun_app$f lnull$a ?v2py84))))) :pattern ((fun_app$f (fun_app$dl (fun_app$cp llist_all2$ ?v0py161) ?v1py154) ?v2py84)) )) :named A172))
(assert (! (fun_app$g lnull$ lNil$) :named A173))
(assert (! (fun_app$f lnull$a lNil$a) :named A174))
(assert (! (forall ((?v0py162 C_llist$)) (! (or (not (fun_app$g lnull$ ?v0py162)) (= ?v0py162 lNil$)) :pattern ((fun_app$g lnull$ ?v0py162)) )) :named A175))
(assert (! (forall ((?v0py163 D_llist$)) (! (or (not (fun_app$f lnull$a ?v0py163)) (= ?v0py163 lNil$a)) :pattern ((fun_app$f lnull$a ?v0py163)) )) :named A176))
(assert (! (forall ((?v0py164 C_llist$)) (! (or (not (= ?v0py164 lNil$)) (fun_app$g lnull$ ?v0py164)) :pattern ((fun_app$g lnull$ ?v0py164)) )) :named A177))
(assert (! (forall ((?v0py165 D_llist$)) (! (or (not (= ?v0py165 lNil$a)) (fun_app$f lnull$a ?v0py165)) :pattern ((fun_app$f lnull$a ?v0py165)) )) :named A178))
(assert (! (forall ((?v0py166 C_llist$)) (! (and (or (not (fun_app$g lnull$ ?v0py166)) (= ?v0py166 lNil$)) (or (fun_app$g lnull$ ?v0py166) (not (= ?v0py166 lNil$)))) :pattern ((fun_app$g lnull$ ?v0py166)) )) :named A179))
(assert (! (forall ((?v0py167 D_llist$)) (! (and (or (not (fun_app$f lnull$a ?v0py167)) (= ?v0py167 lNil$a)) (or (fun_app$f lnull$a ?v0py167) (not (= ?v0py167 lNil$a)))) :pattern ((fun_app$f lnull$a ?v0py167)) )) :named A180))
(assert (! (forall ((?v0py168 C_llist$)(?v1py155 C_c_bool_fun_fun$)(?v2py85 C_llist$)) (! (or (not (fun_app$g lnull$ ?v0py168)) (fun_app$g (fun_app$h (llexord$ ?v1py155) ?v0py168) ?v2py85)) :pattern ((fun_app$g (fun_app$h (llexord$ ?v1py155) ?v0py168) ?v2py85)) )) :named A181))
(assert (! (forall ((?v0py169 D_llist$)(?v1py156 D_d_bool_fun_fun$)(?v2py86 D_llist$)) (! (or (not (fun_app$f lnull$a ?v0py169)) (fun_app$f (fun_app$da (llexord$a ?v1py156) ?v0py169) ?v2py86)) :pattern ((fun_app$f (fun_app$da (llexord$a ?v1py156) ?v0py169) ?v2py86)) )) :named A182))
(assert (! (forall ((?v0py170 A_b_bool_fun_fun$)(?v1py157 A_a_fun_b_b_fun_bool_fun_fun$)(?v2py87 A_a_a_fun_fun$)(?v3py68 B_b_b_fun_fun$)) (! (or (fun_app$dv (fun_app$dw (rel_fun$df ?v0py170 ?v1py157) ?v2py87) ?v3py68) (and (fun_app$a (fun_app$ch ?v0py170 (?v4!36 ?v3py68 ?v2py87 ?v1py157 ?v0py170)) (?v5!35 ?v3py68 ?v2py87 ?v1py157 ?v0py170)) (not (fun_app$cj (fun_app$ck ?v1py157 (fun_app$ar ?v2py87 (?v4!36 ?v3py68 ?v2py87 ?v1py157 ?v0py170))) (fun_app$ap ?v3py68 (?v5!35 ?v3py68 ?v2py87 ?v1py157 ?v0py170)))))) :pattern ((fun_app$dv (fun_app$dw (rel_fun$df ?v0py170 ?v1py157) ?v2py87) ?v3py68)) :pattern ((?v4!36 ?v3py68 ?v2py87 ?v1py157 ?v0py170)) :pattern ((?v5!35 ?v3py68 ?v2py87 ?v1py157 ?v0py170)) )) :named A183))
(assert (! (forall ((?v0py171 A_a_bool_fun_fun$)(?v1py158 C_llist_c_llist_bool_fun_fun$)(?v2py88 A_c_llist_fun$)(?v3py69 A_c_llist_fun$)) (! (or (fun_app$k (fun_app$l (rel_fun$bm ?v0py171 ?v1py158) ?v2py88) ?v3py69) (and (fun_app$c (fun_app$u ?v0py171 (?v4!38 ?v3py69 ?v2py88 ?v1py158 ?v0py171)) (?v5!37 ?v3py69 ?v2py88 ?v1py158 ?v0py171)) (not (fun_app$g (fun_app$h ?v1py158 (fun_app$ah ?v2py88 (?v4!38 ?v3py69 ?v2py88 ?v1py158 ?v0py171))) (fun_app$ah ?v3py69 (?v5!37 ?v3py69 ?v2py88 ?v1py158 ?v0py171)))))) :pattern ((fun_app$k (fun_app$l (rel_fun$bm ?v0py171 ?v1py158) ?v2py88) ?v3py69)) :pattern ((?v4!38 ?v3py69 ?v2py88 ?v1py158 ?v0py171)) :pattern ((?v5!37 ?v3py69 ?v2py88 ?v1py158 ?v0py171)) )) :named A184))
(assert (! (forall ((?v0py172 A_a_bool_fun_fun$)(?v1py159 Bool_bool_bool_fun_fun$)(?v2py89 A_bool_fun$)(?v3py70 A_bool_fun$)) (! (or (fun_app$b (fun_app$m (fun_app$ds (rel_fun$au ?v0py172) ?v1py159) ?v2py89) ?v3py70) (and (fun_app$c (fun_app$u ?v0py172 (?v4!40 ?v3py70 ?v2py89 ?v1py159 ?v0py172)) (?v5!39 ?v3py70 ?v2py89 ?v1py159 ?v0py172)) (not (fun_app$d (fun_app$e ?v1py159 (fun_app$c ?v2py89 (?v4!40 ?v3py70 ?v2py89 ?v1py159 ?v0py172))) (fun_app$c ?v3py70 (?v5!39 ?v3py70 ?v2py89 ?v1py159 ?v0py172)))))) :pattern ((fun_app$b (fun_app$m (fun_app$ds (rel_fun$au ?v0py172) ?v1py159) ?v2py89) ?v3py70)) :pattern ((?v4!40 ?v3py70 ?v2py89 ?v1py159 ?v0py172)) :pattern ((?v5!39 ?v3py70 ?v2py89 ?v1py159 ?v0py172)) )) :named A185))
(assert (! (forall ((?v0py173 A_a_bool_fun_fun$)(?v1py160 C_c_bool_fun_fun$)(?v2py90 A_c_fun$)(?v3py71 A_c_fun$)) (! (or (fun_app$n (fun_app$o (fun_app$du (rel_fun$bj ?v0py173) ?v1py160) ?v2py90) ?v3py71) (and (fun_app$c (fun_app$u ?v0py173 (?v4!42 ?v3py71 ?v2py90 ?v1py160 ?v0py173)) (?v5!41 ?v3py71 ?v2py90 ?v1py160 ?v0py173)) (not (fun_app$r (fun_app$s ?v1py160 (fun_app$al ?v2py90 (?v4!42 ?v3py71 ?v2py90 ?v1py160 ?v0py173))) (fun_app$al ?v3py71 (?v5!41 ?v3py71 ?v2py90 ?v1py160 ?v0py173)))))) :pattern ((fun_app$n (fun_app$o (fun_app$du (rel_fun$bj ?v0py173) ?v1py160) ?v2py90) ?v3py71)) :pattern ((?v4!42 ?v3py71 ?v2py90 ?v1py160 ?v0py173)) :pattern ((?v5!41 ?v3py71 ?v2py90 ?v1py160 ?v0py173)) )) :named A186))
(assert (! (forall ((?v0py174 A_a_bool_fun_fun$)(?v1py161 A_a_bool_fun_fun$)(?v2py91 A_a_fun$)(?v3py72 A_a_fun$)) (! (or (fun_app$p (fun_app$q (fun_app$dt (rel_fun$ax ?v0py174) ?v1py161) ?v2py91) ?v3py72) (and (fun_app$c (fun_app$u ?v0py174 (?v4!44 ?v3py72 ?v2py91 ?v1py161 ?v0py174)) (?v5!43 ?v3py72 ?v2py91 ?v1py161 ?v0py174)) (not (fun_app$c (fun_app$u ?v1py161 (fun_app$ao ?v2py91 (?v4!44 ?v3py72 ?v2py91 ?v1py161 ?v0py174))) (fun_app$ao ?v3py72 (?v5!43 ?v3py72 ?v2py91 ?v1py161 ?v0py174)))))) :pattern ((fun_app$p (fun_app$q (fun_app$dt (rel_fun$ax ?v0py174) ?v1py161) ?v2py91) ?v3py72)) :pattern ((?v4!44 ?v3py72 ?v2py91 ?v1py161 ?v0py174)) :pattern ((?v5!43 ?v3py72 ?v2py91 ?v1py161 ?v0py174)) )) :named A187))
(assert (! (forall ((?v0py175 A_b_bool_fun_fun$)(?v1py162 Bool_bool_bool_fun_fun$)(?v2py92 A_bool_fun$)(?v3py73 B_bool_fun$)) (! (or (fun_app$ (fun_app$ci (rel_fun$ ?v0py175 ?v1py162) ?v2py92) ?v3py73) (and (fun_app$a (fun_app$ch ?v0py175 (?v4!46 ?v3py73 ?v2py92 ?v1py162 ?v0py175)) (?v5!45 ?v3py73 ?v2py92 ?v1py162 ?v0py175)) (not (fun_app$d (fun_app$e ?v1py162 (fun_app$c ?v2py92 (?v4!46 ?v3py73 ?v2py92 ?v1py162 ?v0py175))) (fun_app$a ?v3py73 (?v5!45 ?v3py73 ?v2py92 ?v1py162 ?v0py175)))))) :pattern ((fun_app$ (fun_app$ci (rel_fun$ ?v0py175 ?v1py162) ?v2py92) ?v3py73)) :pattern ((?v4!46 ?v3py73 ?v2py92 ?v1py162 ?v0py175)) :pattern ((?v5!45 ?v3py73 ?v2py92 ?v1py162 ?v0py175)) )) :named A188))
(assert (! (forall ((?v0py176 A_b_bool_fun_fun$)(?v1py163 A_b_bool_fun_fun$)(?v2py93 A_a_fun$)(?v3py74 B_b_fun$)) (! (or (fun_app$cj (fun_app$ck (rel_fun$a ?v0py176 ?v1py163) ?v2py93) ?v3py74) (and (fun_app$a (fun_app$ch ?v0py176 (?v4!48 ?v3py74 ?v2py93 ?v1py163 ?v0py176)) (?v5!47 ?v3py74 ?v2py93 ?v1py163 ?v0py176)) (not (fun_app$a (fun_app$ch ?v1py163 (fun_app$ao ?v2py93 (?v4!48 ?v3py74 ?v2py93 ?v1py163 ?v0py176))) (fun_app$ae ?v3py74 (?v5!47 ?v3py74 ?v2py93 ?v1py163 ?v0py176)))))) :pattern ((fun_app$cj (fun_app$ck (rel_fun$a ?v0py176 ?v1py163) ?v2py93) ?v3py74)) :pattern ((?v4!48 ?v3py74 ?v2py93 ?v1py163 ?v0py176)) :pattern ((?v5!47 ?v3py74 ?v2py93 ?v1py163 ?v0py176)) )) :named A189))
(assert (! (forall ((?v0py177 A_b_bool_fun_fun$)(?v1py164 C_d_bool_fun_fun$)(?v2py94 A_c_fun$)(?v3py75 B_d_fun$)) (! (or (fun_app$cl (fun_app$cm (rel_fun$b ?v0py177 ?v1py164) ?v2py94) ?v3py75) (and (fun_app$a (fun_app$ch ?v0py177 (?v4!50 ?v3py75 ?v2py94 ?v1py164 ?v0py177)) (?v5!49 ?v3py75 ?v2py94 ?v1py164 ?v0py177)) (not (fun_app$dm (fun_app$dr ?v1py164 (fun_app$al ?v2py94 (?v4!50 ?v3py75 ?v2py94 ?v1py164 ?v0py177))) (fun_app$ab ?v3py75 (?v5!49 ?v3py75 ?v2py94 ?v1py164 ?v0py177)))))) :pattern ((fun_app$cl (fun_app$cm (rel_fun$b ?v0py177 ?v1py164) ?v2py94) ?v3py75)) :pattern ((?v4!50 ?v3py75 ?v2py94 ?v1py164 ?v0py177)) :pattern ((?v5!49 ?v3py75 ?v2py94 ?v1py164 ?v0py177)) )) :named A190))
(assert (! (forall ((?v0py178 A_b_bool_fun_fun$)(?v1py165 C_llist_d_llist_bool_fun_fun$)(?v2py95 A_c_llist_fun$)(?v3py76 B_d_llist_fun$)) (! (or (fun_app$cn (fun_app$co (rel_fun$c ?v0py178 ?v1py165) ?v2py95) ?v3py76) (and (fun_app$a (fun_app$ch ?v0py178 (?v4!52 ?v3py76 ?v2py95 ?v1py165 ?v0py178)) (?v5!51 ?v3py76 ?v2py95 ?v1py165 ?v0py178)) (not (fun_app$f (fun_app$dl ?v1py165 (fun_app$ah ?v2py95 (?v4!52 ?v3py76 ?v2py95 ?v1py165 ?v0py178))) (fun_app$x ?v3py76 (?v5!51 ?v3py76 ?v2py95 ?v1py165 ?v0py178)))))) :pattern ((fun_app$cn (fun_app$co (rel_fun$c ?v0py178 ?v1py165) ?v2py95) ?v3py76)) :pattern ((?v4!52 ?v3py76 ?v2py95 ?v1py165 ?v0py178)) :pattern ((?v5!51 ?v3py76 ?v2py95 ?v1py165 ?v0py178)) )) :named A191))
(assert (! (forall ((?v0py179 Bool_c_bool_fun_fun$)(?v1py166 Bool_c_bool_fun_fun$)) (! (rel_fun$dg (rel_fun$dh ?v0py179 (rel_fun$di ?v1py166 uu$)) (rel_fun$dj (fun_app$dx (rel_fun$dk uuc$) ?v0py179) (rel_fun$dl (fun_app$dx (rel_fun$dk uuc$) ?v1py166) uu$)) (rel_fun$au uuc$) (rel_fun$bj uuc$)) :pattern ((rel_fun$dh ?v0py179 (rel_fun$di ?v1py166 uu$))) :pattern ((rel_fun$dj (fun_app$dx (rel_fun$dk uuc$) ?v0py179) (rel_fun$dl (fun_app$dx (rel_fun$dk uuc$) ?v1py166) uu$))) )) :named A192))
(assert (! (forall ((?v0py180 Bool_a_bool_fun_fun$)(?v1py167 Bool_a_bool_fun_fun$)) (! (rel_fun$dm (rel_fun$dn ?v0py180 (rel_fun$do ?v1py167 uu$)) (rel_fun$dp (rel_fun$dq uuc$ ?v0py180) (rel_fun$dr (rel_fun$dq uuc$ ?v1py167) uu$)) (rel_fun$au uuc$) (rel_fun$ax uuc$)) :pattern ((rel_fun$dn ?v0py180 (rel_fun$do ?v1py167 uu$))) :pattern ((rel_fun$dp (rel_fun$dq uuc$ ?v0py180) (rel_fun$dr (rel_fun$dq uuc$ ?v1py167) uu$))) )) :named A193))
(assert (! (forall ((?v0py181 C_bool_bool_fun_fun$)(?v1py168 C_bool_bool_fun_fun$)) (! (rel_fun$ds (rel_fun$dt ?v0py181 (rel_fun$du ?v1py168 uu$)) (rel_fun$dv (fun_app$dy (rel_fun$dw uuc$) ?v0py181) (rel_fun$dx (fun_app$dy (rel_fun$dw uuc$) ?v1py168) uu$)) (rel_fun$bj uuc$) (rel_fun$au uuc$)) :pattern ((rel_fun$dt ?v0py181 (rel_fun$du ?v1py168 uu$))) :pattern ((rel_fun$dv (fun_app$dy (rel_fun$dw uuc$) ?v0py181) (rel_fun$dx (fun_app$dy (rel_fun$dw uuc$) ?v1py168) uu$))) )) :named A194))
(assert (! (forall ((?v0py182 C_a_bool_fun_fun$)(?v1py169 C_a_bool_fun_fun$)) (! (rel_fun$dy (rel_fun$dz ?v0py182 (rel_fun$ea ?v1py169 uu$)) (rel_fun$eb (rel_fun$ec uuc$ ?v0py182) (rel_fun$ed (rel_fun$ec uuc$ ?v1py169) uu$)) (rel_fun$bj uuc$) (rel_fun$ax uuc$)) :pattern ((rel_fun$dz ?v0py182 (rel_fun$ea ?v1py169 uu$))) :pattern ((rel_fun$eb (rel_fun$ec uuc$ ?v0py182) (rel_fun$ed (rel_fun$ec uuc$ ?v1py169) uu$))) )) :named A195))
(assert (! (forall ((?v0py183 A_bool_bool_fun_fun$)(?v1py170 A_bool_bool_fun_fun$)) (! (rel_fun$ee (rel_fun$ef ?v0py183 (rel_fun$eg ?v1py170 uu$)) (rel_fun$eh (rel_fun$ei uuc$ ?v0py183) (rel_fun$ej (rel_fun$ei uuc$ ?v1py170) uu$)) (rel_fun$ax uuc$) (rel_fun$au uuc$)) :pattern ((rel_fun$ef ?v0py183 (rel_fun$eg ?v1py170 uu$))) :pattern ((rel_fun$eh (rel_fun$ei uuc$ ?v0py183) (rel_fun$ej (rel_fun$ei uuc$ ?v1py170) uu$))) )) :named A196))
(assert (! (forall ((?v0py184 A_c_bool_fun_fun$)(?v1py171 A_c_bool_fun_fun$)) (! (rel_fun$ek (rel_fun$el ?v0py184 (rel_fun$em ?v1py171 uu$)) (rel_fun$en (rel_fun$eo uuc$ ?v0py184) (rel_fun$ep (rel_fun$eo uuc$ ?v1py171) uu$)) (rel_fun$ax uuc$) (rel_fun$bj uuc$)) :pattern ((rel_fun$el ?v0py184 (rel_fun$em ?v1py171 uu$))) :pattern ((rel_fun$en (rel_fun$eo uuc$ ?v0py184) (rel_fun$ep (rel_fun$eo uuc$ ?v1py171) uu$))) )) :named A197))
(assert (! (forall ((?v0py185 Bool_bool_bool_fun_fun$)(?v1py172 Bool_bool_bool_fun_fun$)) (! (rel_fun$eq (rel_fun$er ?v0py185 (rel_fun$es ?v1py172 uu$)) (rel_fun$et (fun_app$ds (rel_fun$au uuc$) ?v0py185) (rel_fun$eu (fun_app$ds (rel_fun$au uuc$) ?v1py172) uu$)) (rel_fun$au uuc$) (rel_fun$au uuc$)) :pattern ((rel_fun$er ?v0py185 (rel_fun$es ?v1py172 uu$))) :pattern ((rel_fun$et (fun_app$ds (rel_fun$au uuc$) ?v0py185) (rel_fun$eu (fun_app$ds (rel_fun$au uuc$) ?v1py172) uu$))) )) :named A198))
(assert (! (forall ((?v0py186 Bool_bool_bool_fun_fun$)(?v1py173 C_c_bool_fun_fun$)) (! (rel_fun$ev (rel_fun$ew ?v0py186 (rel_fun$ex ?v1py173 uu$)) (rel_fun$ey (fun_app$ds (rel_fun$au uuc$) ?v0py186) (rel_fun$ez (fun_app$du (rel_fun$bj uuc$) ?v1py173) uu$)) (rel_fun$dk uuc$) (rel_fun$dk uuc$)) :pattern ((rel_fun$ew ?v0py186 (rel_fun$ex ?v1py173 uu$))) :pattern ((rel_fun$ey (fun_app$ds (rel_fun$au uuc$) ?v0py186) (rel_fun$ez (fun_app$du (rel_fun$bj uuc$) ?v1py173) uu$))) )) :named A199))
(assert (! (forall ((?v0py187 C_c_bool_fun_fun$)(?v1py174 Bool_bool_bool_fun_fun$)) (! (rel_fun$fa (rel_fun$fb ?v0py187 (rel_fun$es ?v1py174 uu$)) (rel_fun$fc (fun_app$du (rel_fun$bj uuc$) ?v0py187) (rel_fun$eu (fun_app$ds (rel_fun$au uuc$) ?v1py174) uu$)) (rel_fun$dw uuc$) (rel_fun$dw uuc$)) :pattern ((rel_fun$fb ?v0py187 (rel_fun$es ?v1py174 uu$))) :pattern ((rel_fun$fc (fun_app$du (rel_fun$bj uuc$) ?v0py187) (rel_fun$eu (fun_app$ds (rel_fun$au uuc$) ?v1py174) uu$))) )) :named A200))
(assert (! (forall ((?v0py188 C_c_bool_fun_fun$)(?v1py175 C_c_bool_fun_fun$)) (! (rel_fun$fd (rel_fun$fe ?v0py188 (rel_fun$ex ?v1py175 uu$)) (rel_fun$ff (fun_app$du (rel_fun$bj uuc$) ?v0py188) (rel_fun$ez (fun_app$du (rel_fun$bj uuc$) ?v1py175) uu$)) (rel_fun$bj uuc$) (rel_fun$bj uuc$)) :pattern ((rel_fun$fe ?v0py188 (rel_fun$ex ?v1py175 uu$))) :pattern ((rel_fun$ff (fun_app$du (rel_fun$bj uuc$) ?v0py188) (rel_fun$ez (fun_app$du (rel_fun$bj uuc$) ?v1py175) uu$))) )) :named A201))
(assert (! (forall ((?v0py189 D_llist_set$)) (! (= (collect$ (uud$ ?v0py189)) ?v0py189) :pattern ((uud$ ?v0py189)) )) :named A202))
(assert (! (forall ((?v0py190 C_llist_set$)) (! (= (collect$a (uue$ ?v0py190)) ?v0py190) :pattern ((uue$ ?v0py190)) )) :named A203))
(assert (! (forall ((?v0py191 D_llist$)(?v1py176 D_llist_bool_fun$)) (! (and (or (not (member$ ?v0py191 (collect$ ?v1py176))) (fun_app$f ?v1py176 ?v0py191)) (or (member$ ?v0py191 (collect$ ?v1py176)) (not (fun_app$f ?v1py176 ?v0py191)))) :pattern ((member$ ?v0py191 (collect$ ?v1py176))) :pattern ((fun_app$f ?v1py176 ?v0py191)) )) :named A204))
(assert (! (forall ((?v0py192 C_llist$)(?v1py177 C_llist_bool_fun$)) (! (and (or (not (member$a ?v0py192 (collect$a ?v1py177))) (fun_app$g ?v1py177 ?v0py192)) (or (member$a ?v0py192 (collect$a ?v1py177)) (not (fun_app$g ?v1py177 ?v0py192)))) :pattern ((member$a ?v0py192 (collect$a ?v1py177))) :pattern ((fun_app$g ?v1py177 ?v0py192)) )) :named A205))
(assert (! (forall ((?v0py193 D$)) (! (not (fun_app$f (lmember$ ?v0py193) lNil$a)) :pattern ((lmember$ ?v0py193)) )) :named A206))
(assert (! (forall ((?v0py194 C$)) (! (not (fun_app$g (lmember$a ?v0py194) lNil$)) :pattern ((lmember$a ?v0py194)) )) :named A207))
(assert (! (forall ((?v0py195 A_b_bool_fun_fun$)(?v1py178 A_b_bool_fun_fun$)(?v2py96 A_b_bool_fun_fun$)(?v3py77 A_a_a_fun_fun$)(?v4py35 B_b_b_fun_fun$)) (! (and (or (not (fun_app$dv (fun_app$dw (rel_fun$df ?v0py195 (rel_fun$a ?v1py178 ?v2py96)) ?v3py77) ?v4py35)) (forall ((?v5py35 A$)(?v6py0 B$)) (! (or (not (fun_app$a (fun_app$ch ?v0py195 ?v5py35) ?v6py0)) (fun_app$cj (fun_app$ck (rel_fun$a ?v1py178 ?v2py96) (fun_app$ar ?v3py77 ?v5py35)) (fun_app$ap ?v4py35 ?v6py0))) :pattern ((fun_app$a (fun_app$ch ?v0py195 ?v5py35) ?v6py0)) :pattern ((fun_app$cj (fun_app$ck (rel_fun$a ?v1py178 ?v2py96) (fun_app$ar ?v3py77 ?v5py35)) (fun_app$ap ?v4py35 ?v6py0))) ))) (or (fun_app$dv (fun_app$dw (rel_fun$df ?v0py195 (rel_fun$a ?v1py178 ?v2py96)) ?v3py77) ?v4py35) (and (fun_app$a (fun_app$ch ?v0py195 (?v5!54 ?v4py35 ?v3py77 ?v2py96 ?v1py178 ?v0py195)) (?v6!53 ?v4py35 ?v3py77 ?v2py96 ?v1py178 ?v0py195)) (not (fun_app$cj (fun_app$ck (rel_fun$a ?v1py178 ?v2py96) (fun_app$ar ?v3py77 (?v5!54 ?v4py35 ?v3py77 ?v2py96 ?v1py178 ?v0py195))) (fun_app$ap ?v4py35 (?v6!53 ?v4py35 ?v3py77 ?v2py96 ?v1py178 ?v0py195))))))) :pattern ((fun_app$dv (fun_app$dw (rel_fun$df ?v0py195 (rel_fun$a ?v1py178 ?v2py96)) ?v3py77) ?v4py35)) :pattern ((?v5!54 ?v4py35 ?v3py77 ?v2py96 ?v1py178 ?v0py195)) :pattern ((?v6!53 ?v4py35 ?v3py77 ?v2py96 ?v1py178 ?v0py195)) )) :named A208))
(assert (! (= (rel_fun$bm uuc$ uub$) uuf$) :named A209))
(assert (! (= (fun_app$ds (rel_fun$au uuc$) uu$) uug$) :named A210))
(assert (! (= (fun_app$du (rel_fun$bj uuc$) uua$) uuh$) :named A211))
(assert (! (= (fun_app$dt (rel_fun$ax uuc$) uuc$) uui$) :named A212))
(assert (! (forall ((?v0py196 A_a_bool_fun_fun$)(?v1py179 A_a_bool_fun_fun$)(?v2py97 C_c_bool_fun_fun$)(?v3py78 C_c_bool_fun_fun$)(?v4py36 A_c_fun$)(?v5py36 A_c_fun$)) (! (or (fun_app$n (fun_app$o (fun_app$du (rel_fun$bj ?v0py196) ?v3py78) ?v4py36) ?v5py36) (and (fun_app$c (fun_app$u ?v0py196 (?v6!56 ?v1py179 ?v0py196)) (?v7!55 ?v1py179 ?v0py196)) (not (fun_app$c (fun_app$u ?v1py179 (?v6!56 ?v1py179 ?v0py196)) (?v7!55 ?v1py179 ?v0py196)))) (and (fun_app$r (fun_app$s ?v2py97 (?v6!58 ?v3py78 ?v2py97)) (?v7!57 ?v3py78 ?v2py97)) (not (fun_app$r (fun_app$s ?v3py78 (?v6!58 ?v3py78 ?v2py97)) (?v7!57 ?v3py78 ?v2py97)))) (not (fun_app$n (fun_app$o (fun_app$du (rel_fun$bj ?v1py179) ?v2py97) ?v4py36) ?v5py36))) :pattern ((fun_app$n (fun_app$o (fun_app$du (rel_fun$bj ?v0py196) ?v3py78) ?v4py36) ?v5py36) (fun_app$n (fun_app$o (fun_app$du (rel_fun$bj ?v1py179) ?v2py97) ?v4py36) ?v5py36)) )) :named A213))
(assert (! (forall ((?v0py197 A_a_bool_fun_fun$)(?v1py180 A_a_bool_fun_fun$)(?v2py98 A_a_bool_fun_fun$)(?v3py79 A_a_bool_fun_fun$)(?v4py37 A_a_fun$)(?v5py37 A_a_fun$)) (! (or (fun_app$p (fun_app$q (fun_app$dt (rel_fun$ax ?v0py197) ?v3py79) ?v4py37) ?v5py37) (and (fun_app$c (fun_app$u ?v0py197 (?v6!60 ?v1py180 ?v0py197)) (?v7!59 ?v1py180 ?v0py197)) (not (fun_app$c (fun_app$u ?v1py180 (?v6!60 ?v1py180 ?v0py197)) (?v7!59 ?v1py180 ?v0py197)))) (and (fun_app$c (fun_app$u ?v2py98 (?v6!62 ?v3py79 ?v2py98)) (?v7!61 ?v3py79 ?v2py98)) (not (fun_app$c (fun_app$u ?v3py79 (?v6!62 ?v3py79 ?v2py98)) (?v7!61 ?v3py79 ?v2py98)))) (not (fun_app$p (fun_app$q (fun_app$dt (rel_fun$ax ?v1py180) ?v2py98) ?v4py37) ?v5py37))) :pattern ((fun_app$p (fun_app$q (fun_app$dt (rel_fun$ax ?v0py197) ?v3py79) ?v4py37) ?v5py37) (fun_app$p (fun_app$q (fun_app$dt (rel_fun$ax ?v1py180) ?v2py98) ?v4py37) ?v5py37)) )) :named A214))
(assert (! (forall ((?v0py198 A_b_bool_fun_fun$)(?v1py181 A_b_bool_fun_fun$)(?v2py99 Bool_bool_bool_fun_fun$)(?v3py80 Bool_bool_bool_fun_fun$)(?v4py38 A_bool_fun$)(?v5py38 B_bool_fun$)) (! (or (fun_app$ (fun_app$ci (rel_fun$ ?v0py198 ?v3py80) ?v4py38) ?v5py38) (and (fun_app$a (fun_app$ch ?v0py198 (?v6!64 ?v1py181 ?v0py198)) (?v7!63 ?v1py181 ?v0py198)) (not (fun_app$a (fun_app$ch ?v1py181 (?v6!64 ?v1py181 ?v0py198)) (?v7!63 ?v1py181 ?v0py198)))) (and (fun_app$d (fun_app$e ?v2py99 (?v6!66 ?v3py80 ?v2py99)) (?v7!65 ?v3py80 ?v2py99)) (not (fun_app$d (fun_app$e ?v3py80 (?v6!66 ?v3py80 ?v2py99)) (?v7!65 ?v3py80 ?v2py99)))) (not (fun_app$ (fun_app$ci (rel_fun$ ?v1py181 ?v2py99) ?v4py38) ?v5py38))) :pattern ((fun_app$ (fun_app$ci (rel_fun$ ?v0py198 ?v3py80) ?v4py38) ?v5py38) (fun_app$ (fun_app$ci (rel_fun$ ?v1py181 ?v2py99) ?v4py38) ?v5py38)) )) :named A215))
(assert (! (forall ((?v0py199 A_b_bool_fun_fun$)(?v1py182 A_b_bool_fun_fun$)(?v2py100 A_b_bool_fun_fun$)(?v3py81 A_b_bool_fun_fun$)(?v4py39 A_a_fun$)(?v5py39 B_b_fun$)) (! (or (fun_app$cj (fun_app$ck (rel_fun$a ?v0py199 ?v3py81) ?v4py39) ?v5py39) (and (fun_app$a (fun_app$ch ?v0py199 (?v6!68 ?v1py182 ?v0py199)) (?v7!67 ?v1py182 ?v0py199)) (not (fun_app$a (fun_app$ch ?v1py182 (?v6!68 ?v1py182 ?v0py199)) (?v7!67 ?v1py182 ?v0py199)))) (and (fun_app$a (fun_app$ch ?v2py100 (?v6!70 ?v3py81 ?v2py100)) (?v7!69 ?v3py81 ?v2py100)) (not (fun_app$a (fun_app$ch ?v3py81 (?v6!70 ?v3py81 ?v2py100)) (?v7!69 ?v3py81 ?v2py100)))) (not (fun_app$cj (fun_app$ck (rel_fun$a ?v1py182 ?v2py100) ?v4py39) ?v5py39))) :pattern ((fun_app$cj (fun_app$ck (rel_fun$a ?v0py199 ?v3py81) ?v4py39) ?v5py39) (fun_app$cj (fun_app$ck (rel_fun$a ?v1py182 ?v2py100) ?v4py39) ?v5py39)) )) :named A216))
(assert (! (forall ((?v0py200 A_b_bool_fun_fun$)(?v1py183 A_b_bool_fun_fun$)(?v2py101 C_d_bool_fun_fun$)(?v3py82 C_d_bool_fun_fun$)(?v4py40 A_c_fun$)(?v5py40 B_d_fun$)) (! (or (fun_app$cl (fun_app$cm (rel_fun$b ?v0py200 ?v3py82) ?v4py40) ?v5py40) (and (fun_app$a (fun_app$ch ?v0py200 (?v6!72 ?v1py183 ?v0py200)) (?v7!71 ?v1py183 ?v0py200)) (not (fun_app$a (fun_app$ch ?v1py183 (?v6!72 ?v1py183 ?v0py200)) (?v7!71 ?v1py183 ?v0py200)))) (and (fun_app$dm (fun_app$dr ?v2py101 (?v6!74 ?v3py82 ?v2py101)) (?v7!73 ?v3py82 ?v2py101)) (not (fun_app$dm (fun_app$dr ?v3py82 (?v6!74 ?v3py82 ?v2py101)) (?v7!73 ?v3py82 ?v2py101)))) (not (fun_app$cl (fun_app$cm (rel_fun$b ?v1py183 ?v2py101) ?v4py40) ?v5py40))) :pattern ((fun_app$cl (fun_app$cm (rel_fun$b ?v0py200 ?v3py82) ?v4py40) ?v5py40) (fun_app$cl (fun_app$cm (rel_fun$b ?v1py183 ?v2py101) ?v4py40) ?v5py40)) )) :named A217))
(assert (! (forall ((?v0py201 A_b_bool_fun_fun$)(?v1py184 A_b_bool_fun_fun$)(?v2py102 C_llist_d_llist_bool_fun_fun$)(?v3py83 C_llist_d_llist_bool_fun_fun$)(?v4py41 A_c_llist_fun$)(?v5py41 B_d_llist_fun$)) (! (or (fun_app$cn (fun_app$co (rel_fun$c ?v0py201 ?v3py83) ?v4py41) ?v5py41) (and (fun_app$a (fun_app$ch ?v0py201 (?v6!76 ?v1py184 ?v0py201)) (?v7!75 ?v1py184 ?v0py201)) (not (fun_app$a (fun_app$ch ?v1py184 (?v6!76 ?v1py184 ?v0py201)) (?v7!75 ?v1py184 ?v0py201)))) (and (fun_app$f (fun_app$dl ?v2py102 (?v6!78 ?v3py83 ?v2py102)) (?v7!77 ?v3py83 ?v2py102)) (not (fun_app$f (fun_app$dl ?v3py83 (?v6!78 ?v3py83 ?v2py102)) (?v7!77 ?v3py83 ?v2py102)))) (not (fun_app$cn (fun_app$co (rel_fun$c ?v1py184 ?v2py102) ?v4py41) ?v5py41))) :pattern ((fun_app$cn (fun_app$co (rel_fun$c ?v0py201 ?v3py83) ?v4py41) ?v5py41) (fun_app$cn (fun_app$co (rel_fun$c ?v1py184 ?v2py102) ?v4py41) ?v5py41)) )) :named A218))
(assert (! (forall ((?v0py202 A_b_bool_fun_fun$)(?v1py185 Bool_bool_bool_fun_fun$)(?v2py103 A_bool_fun$)(?v3py84 B_bool_fun$)(?v4py42 A_b_bool_fun_fun$)(?v5py42 Bool_bool_bool_fun_fun$)) (! (or (fun_app$ (fun_app$ci (rel_fun$ ?v4py42 ?v5py42) ?v2py103) ?v3py84) (not (fun_app$ (fun_app$ci (rel_fun$ ?v0py202 ?v1py185) ?v2py103) ?v3py84)) (and (fun_app$a (fun_app$ch ?v4py42 (?v6!80 ?v4py42 ?v0py202)) (?v7!79 ?v4py42 ?v0py202)) (not (fun_app$a (fun_app$ch ?v0py202 (?v6!80 ?v4py42 ?v0py202)) (?v7!79 ?v4py42 ?v0py202)))) (and (fun_app$d (fun_app$e ?v1py185 (?v6!82 ?v5py42 ?v1py185)) (?v7!81 ?v5py42 ?v1py185)) (not (fun_app$d (fun_app$e ?v5py42 (?v6!82 ?v5py42 ?v1py185)) (?v7!81 ?v5py42 ?v1py185))))) :pattern ((fun_app$ (fun_app$ci (rel_fun$ ?v0py202 ?v1py185) ?v2py103) ?v3py84) (fun_app$ (fun_app$ci (rel_fun$ ?v4py42 ?v5py42) ?v2py103) ?v3py84)) )) :named A219))
(assert (! (forall ((?v0py203 A_b_bool_fun_fun$)(?v1py186 A_b_bool_fun_fun$)(?v2py104 A_a_fun$)(?v3py85 B_b_fun$)(?v4py43 A_b_bool_fun_fun$)(?v5py43 A_b_bool_fun_fun$)) (! (or (fun_app$cj (fun_app$ck (rel_fun$a ?v4py43 ?v5py43) ?v2py104) ?v3py85) (not (fun_app$cj (fun_app$ck (rel_fun$a ?v0py203 ?v1py186) ?v2py104) ?v3py85)) (and (fun_app$a (fun_app$ch ?v4py43 (?v6!84 ?v4py43 ?v0py203)) (?v7!83 ?v4py43 ?v0py203)) (not (fun_app$a (fun_app$ch ?v0py203 (?v6!84 ?v4py43 ?v0py203)) (?v7!83 ?v4py43 ?v0py203)))) (and (fun_app$a (fun_app$ch ?v1py186 (?v6!86 ?v5py43 ?v1py186)) (?v7!85 ?v5py43 ?v1py186)) (not (fun_app$a (fun_app$ch ?v5py43 (?v6!86 ?v5py43 ?v1py186)) (?v7!85 ?v5py43 ?v1py186))))) :pattern ((fun_app$cj (fun_app$ck (rel_fun$a ?v4py43 ?v5py43) ?v2py104) ?v3py85) (fun_app$cj (fun_app$ck (rel_fun$a ?v0py203 ?v1py186) ?v2py104) ?v3py85)) )) :named A220))
(assert (! (forall ((?v0py204 A_b_bool_fun_fun$)(?v1py187 C_d_bool_fun_fun$)(?v2py105 A_c_fun$)(?v3py86 B_d_fun$)(?v4py44 A_b_bool_fun_fun$)(?v5py44 C_d_bool_fun_fun$)) (! (or (fun_app$cl (fun_app$cm (rel_fun$b ?v4py44 ?v5py44) ?v2py105) ?v3py86) (not (fun_app$cl (fun_app$cm (rel_fun$b ?v0py204 ?v1py187) ?v2py105) ?v3py86)) (and (fun_app$a (fun_app$ch ?v4py44 (?v6!88 ?v4py44 ?v0py204)) (?v7!87 ?v4py44 ?v0py204)) (not (fun_app$a (fun_app$ch ?v0py204 (?v6!88 ?v4py44 ?v0py204)) (?v7!87 ?v4py44 ?v0py204)))) (and (fun_app$dm (fun_app$dr ?v1py187 (?v6!90 ?v5py44 ?v1py187)) (?v7!89 ?v5py44 ?v1py187)) (not (fun_app$dm (fun_app$dr ?v5py44 (?v6!90 ?v5py44 ?v1py187)) (?v7!89 ?v5py44 ?v1py187))))) :pattern ((fun_app$cl (fun_app$cm (rel_fun$b ?v0py204 ?v1py187) ?v2py105) ?v3py86) (fun_app$cl (fun_app$cm (rel_fun$b ?v4py44 ?v5py44) ?v2py105) ?v3py86)) )) :named A221))
(assert (! (forall ((?v0py205 A_b_bool_fun_fun$)(?v1py188 C_llist_d_llist_bool_fun_fun$)(?v2py106 A_c_llist_fun$)(?v3py87 B_d_llist_fun$)(?v4py45 A_b_bool_fun_fun$)(?v5py45 C_llist_d_llist_bool_fun_fun$)) (! (or (fun_app$cn (fun_app$co (rel_fun$c ?v4py45 ?v5py45) ?v2py106) ?v3py87) (not (fun_app$cn (fun_app$co (rel_fun$c ?v0py205 ?v1py188) ?v2py106) ?v3py87)) (and (fun_app$a (fun_app$ch ?v4py45 (?v6!92 ?v4py45 ?v0py205)) (?v7!91 ?v4py45 ?v0py205)) (not (fun_app$a (fun_app$ch ?v0py205 (?v6!92 ?v4py45 ?v0py205)) (?v7!91 ?v4py45 ?v0py205)))) (and (fun_app$f (fun_app$dl ?v1py188 (?v6!94 ?v5py45 ?v1py188)) (?v7!93 ?v5py45 ?v1py188)) (not (fun_app$f (fun_app$dl ?v5py45 (?v6!94 ?v5py45 ?v1py188)) (?v7!93 ?v5py45 ?v1py188))))) :pattern ((fun_app$cn (fun_app$co (rel_fun$c ?v0py205 ?v1py188) ?v2py106) ?v3py87) (fun_app$cn (fun_app$co (rel_fun$c ?v4py45 ?v5py45) ?v2py106) ?v3py87)) )) :named A222))
(assert (! (forall ((?v0py206 A_b_bool_fun_fun$)(?v1py189 Bool_bool_bool_fun_fun$)(?v2py107 A_bool_fun$)(?v3py88 B_bool_fun$)(?v4py46 A$)(?v5py46 B$)) (! (or (fun_app$d (fun_app$e ?v1py189 (fun_app$c ?v2py107 ?v4py46)) (fun_app$a ?v3py88 ?v5py46)) (not (fun_app$ (fun_app$ci (rel_fun$ ?v0py206 ?v1py189) ?v2py107) ?v3py88)) (not (fun_app$a (fun_app$ch ?v0py206 ?v4py46) ?v5py46))) :pattern ((fun_app$d (fun_app$e ?v1py189 (fun_app$c ?v2py107 ?v4py46)) (fun_app$a ?v3py88 ?v5py46)) (fun_app$ (fun_app$ci (rel_fun$ ?v0py206 ?v1py189) ?v2py107) ?v3py88)) )) :named A223))
(assert (! (forall ((?v0py207 A_b_bool_fun_fun$)(?v1py190 A_b_bool_fun_fun$)(?v2py108 A_a_fun$)(?v3py89 B_b_fun$)(?v4py47 A$)(?v5py47 B$)) (! (or (fun_app$a (fun_app$ch ?v1py190 (fun_app$ao ?v2py108 ?v4py47)) (fun_app$ae ?v3py89 ?v5py47)) (not (fun_app$a (fun_app$ch ?v0py207 ?v4py47) ?v5py47)) (not (fun_app$cj (fun_app$ck (rel_fun$a ?v0py207 ?v1py190) ?v2py108) ?v3py89))) :pattern ((fun_app$a (fun_app$ch ?v1py190 (fun_app$ao ?v2py108 ?v4py47)) (fun_app$ae ?v3py89 ?v5py47)) (fun_app$cj (fun_app$ck (rel_fun$a ?v0py207 ?v1py190) ?v2py108) ?v3py89)) )) :named A224))
(assert (! (forall ((?v0py208 A_b_bool_fun_fun$)(?v1py191 C_d_bool_fun_fun$)(?v2py109 A_c_fun$)(?v3py90 B_d_fun$)(?v4py48 A$)(?v5py48 B$)) (! (or (fun_app$dm (fun_app$dr ?v1py191 (fun_app$al ?v2py109 ?v4py48)) (fun_app$ab ?v3py90 ?v5py48)) (not (fun_app$cl (fun_app$cm (rel_fun$b ?v0py208 ?v1py191) ?v2py109) ?v3py90)) (not (fun_app$a (fun_app$ch ?v0py208 ?v4py48) ?v5py48))) :pattern ((fun_app$dm (fun_app$dr ?v1py191 (fun_app$al ?v2py109 ?v4py48)) (fun_app$ab ?v3py90 ?v5py48)) (fun_app$cl (fun_app$cm (rel_fun$b ?v0py208 ?v1py191) ?v2py109) ?v3py90)) )) :named A225))
(assert (! (forall ((?v0py209 A_b_bool_fun_fun$)(?v1py192 C_llist_d_llist_bool_fun_fun$)(?v2py110 A_c_llist_fun$)(?v3py91 B_d_llist_fun$)(?v4py49 A$)(?v5py49 B$)) (! (or (fun_app$f (fun_app$dl ?v1py192 (fun_app$ah ?v2py110 ?v4py49)) (fun_app$x ?v3py91 ?v5py49)) (not (fun_app$a (fun_app$ch ?v0py209 ?v4py49) ?v5py49)) (not (fun_app$cn (fun_app$co (rel_fun$c ?v0py209 ?v1py192) ?v2py110) ?v3py91))) :pattern ((fun_app$f (fun_app$dl ?v1py192 (fun_app$ah ?v2py110 ?v4py49)) (fun_app$x ?v3py91 ?v5py49)) (fun_app$cn (fun_app$co (rel_fun$c ?v0py209 ?v1py192) ?v2py110) ?v3py91)) )) :named A226))
(assert (! (forall ((?v0py210 C_c_bool_fun_fun$)(?v1py193 D_d_bool_fun_fun$)) (! (rel_fun$fg (rel_fun$fh ?v0py210 (rel_fun$fi ?v1py193 uu$)) (rel_fun$fj (fun_app$dg llist_all2$d ?v0py210) (rel_fun$fk (fun_app$db llist_all2$a ?v1py193) uu$)) llist_all2$ llist_all2$) :pattern ((rel_fun$fh ?v0py210 (rel_fun$fi ?v1py193 uu$))) :pattern ((rel_fun$fj (fun_app$dg llist_all2$d ?v0py210) (rel_fun$fk (fun_app$db llist_all2$a ?v1py193) uu$))) )) :named A227))
(assert (! (forall ((?v0py211 C_d_bool_fun_fun$)(?v1py194 A_b_bool_fun_fun$)) (! (rel_fun$fl (rel_fun$fm ?v0py211 (rel_fun$ ?v1py194 uu$)) (rel_fun$fn (fun_app$cp llist_all2$ ?v0py211) (rel_fun$fo (llist_all2$f ?v1py194) uu$)) llist_all2$e llist_all2$c) :pattern ((rel_fun$fm ?v0py211 (rel_fun$ ?v1py194 uu$))) :pattern ((rel_fun$fn (fun_app$cp llist_all2$ ?v0py211) (rel_fun$fo (llist_all2$f ?v1py194) uu$))) )) :named A228))
(assert (! (forall ((?v0py212 C_d_bool_fun_fun$)(?v1py195 C_d_bool_fun_fun$)) (! (rel_fun$fp (rel_fun$fq ?v0py212 (rel_fun$fr ?v1py195 uu$)) (rel_fun$fs (fun_app$cp llist_all2$ ?v0py212) (rel_fun$ft (fun_app$cp llist_all2$ ?v1py195) uu$)) llist_all2$d llist_all2$a) :pattern ((rel_fun$fq ?v0py212 (rel_fun$fr ?v1py195 uu$))) :pattern ((rel_fun$fs (fun_app$cp llist_all2$ ?v0py212) (rel_fun$ft (fun_app$cp llist_all2$ ?v1py195) uu$))) )) :named A229))
(assert (! (forall ((?v0py213 C_c_bool_fun_fun$)) (! (rel_fun$fu (fun_app$dg llist_all2$d ?v0py213) uu$ lnull$ lnull$) :pattern ((fun_app$dg llist_all2$d ?v0py213)) )) :named A230))
(assert (! (forall ((?v0py214 D_c_bool_fun_fun$)) (! (rel_fun$fv (llist_all2$b ?v0py214) uu$ lnull$a lnull$) :pattern ((llist_all2$b ?v0py214)) )) :named A231))
(assert (! (forall ((?v0py215 D_d_bool_fun_fun$)) (! (fun_app$dz (fun_app$ea (rel_fun$fk (fun_app$db llist_all2$a ?v0py215) uu$) lnull$a) lnull$a) :pattern ((fun_app$db llist_all2$a ?v0py215)) )) :named A232))
(assert (! (forall ((?v0py216 C_d_bool_fun_fun$)) (! (fun_app$dz (fun_app$eb (rel_fun$ft (fun_app$cp llist_all2$ ?v0py216) uu$) lnull$) lnull$a) :pattern ((fun_app$cp llist_all2$ ?v0py216)) )) :named A233))
(assert (! (forall ((?v0py217 A_b_bool_fun_fun$)) (! (rel_fun$fw uu$ (rel_fun$df ?v0py217 (rel_fun$a ?v0py217 ?v0py217)) uuj$ uuk$) :pattern ((rel_fun$a ?v0py217 ?v0py217)) )) :named A234))
(assert (! (forall ((?v0py218 A_b_bool_fun_fun$)(?v1py196 Bool_bool_bool_fun_fun$)) (! (rel_fun$fx ?v0py218 (rel_fun$fy (rel_fun$ ?v0py218 ?v1py196) ?v1py196) uul$ uum$) :pattern ((rel_fun$ ?v0py218 ?v1py196)) )) :named A235))
(assert (! (forall ((?v0py219 A_b_bool_fun_fun$)(?v1py197 A_b_bool_fun_fun$)) (! (rel_fun$fz ?v0py219 (rel_fun$ga (rel_fun$a ?v0py219 ?v1py197) ?v1py197) uun$ uuo$) :pattern ((rel_fun$a ?v0py219 ?v1py197)) )) :named A236))
(assert (! (forall ((?v0py220 A_b_bool_fun_fun$)(?v1py198 C_d_bool_fun_fun$)) (! (rel_fun$gb ?v0py220 (rel_fun$gc (rel_fun$b ?v0py220 ?v1py198) ?v1py198) uup$ uuq$) :pattern ((rel_fun$b ?v0py220 ?v1py198)) )) :named A237))
(assert (! (forall ((?v0py221 A_b_bool_fun_fun$)(?v1py199 C_llist_d_llist_bool_fun_fun$)) (! (rel_fun$gd ?v0py221 (rel_fun$ge (rel_fun$c ?v0py221 ?v1py199) ?v1py199) uur$ uus$) :pattern ((rel_fun$c ?v0py221 ?v1py199)) )) :named A238))
(assert (! (forall ((?v0py222 A_b_bool_fun_fun$)(?v1py200 Bool_bool_bool_fun_fun$)(?v2py111 A_bool_fun$)(?v3py92 B_bool_fun$)(?v4py50 A$)(?v5py50 B$)) (! (or (fun_app$d (fun_app$e ?v1py200 (fun_app$c ?v2py111 ?v4py50)) (fun_app$a ?v3py92 ?v5py50)) (not (fun_app$ (fun_app$ci (rel_fun$ ?v0py222 ?v1py200) ?v2py111) ?v3py92)) (not (fun_app$a (fun_app$ch ?v0py222 ?v4py50) ?v5py50))) :pattern ((fun_app$d (fun_app$e ?v1py200 (fun_app$c ?v2py111 ?v4py50)) (fun_app$a ?v3py92 ?v5py50)) (fun_app$ (fun_app$ci (rel_fun$ ?v0py222 ?v1py200) ?v2py111) ?v3py92)) )) :named A239))
(assert (! (forall ((?v0py223 A_b_bool_fun_fun$)(?v1py201 A_b_bool_fun_fun$)(?v2py112 A_a_fun$)(?v3py93 B_b_fun$)(?v4py51 A$)(?v5py51 B$)) (! (or (fun_app$a (fun_app$ch ?v1py201 (fun_app$ao ?v2py112 ?v4py51)) (fun_app$ae ?v3py93 ?v5py51)) (not (fun_app$a (fun_app$ch ?v0py223 ?v4py51) ?v5py51)) (not (fun_app$cj (fun_app$ck (rel_fun$a ?v0py223 ?v1py201) ?v2py112) ?v3py93))) :pattern ((fun_app$a (fun_app$ch ?v1py201 (fun_app$ao ?v2py112 ?v4py51)) (fun_app$ae ?v3py93 ?v5py51)) (fun_app$cj (fun_app$ck (rel_fun$a ?v0py223 ?v1py201) ?v2py112) ?v3py93)) )) :named A240))
(assert (! (forall ((?v0py224 A_b_bool_fun_fun$)(?v1py202 C_d_bool_fun_fun$)(?v2py113 A_c_fun$)(?v3py94 B_d_fun$)(?v4py52 A$)(?v5py52 B$)) (! (or (fun_app$dm (fun_app$dr ?v1py202 (fun_app$al ?v2py113 ?v4py52)) (fun_app$ab ?v3py94 ?v5py52)) (not (fun_app$a (fun_app$ch ?v0py224 ?v4py52) ?v5py52)) (not (fun_app$cl (fun_app$cm (rel_fun$b ?v0py224 ?v1py202) ?v2py113) ?v3py94))) :pattern ((fun_app$dm (fun_app$dr ?v1py202 (fun_app$al ?v2py113 ?v4py52)) (fun_app$ab ?v3py94 ?v5py52)) (fun_app$cl (fun_app$cm (rel_fun$b ?v0py224 ?v1py202) ?v2py113) ?v3py94)) )) :named A241))
(assert (! (forall ((?v0py225 A_b_bool_fun_fun$)(?v1py203 C_llist_d_llist_bool_fun_fun$)(?v2py114 A_c_llist_fun$)(?v3py95 B_d_llist_fun$)(?v4py53 A$)(?v5py53 B$)) (! (or (fun_app$f (fun_app$dl ?v1py203 (fun_app$ah ?v2py114 ?v4py53)) (fun_app$x ?v3py95 ?v5py53)) (not (fun_app$a (fun_app$ch ?v0py225 ?v4py53) ?v5py53)) (not (fun_app$cn (fun_app$co (rel_fun$c ?v0py225 ?v1py203) ?v2py114) ?v3py95))) :pattern ((fun_app$f (fun_app$dl ?v1py203 (fun_app$ah ?v2py114 ?v4py53)) (fun_app$x ?v3py95 ?v5py53)) (fun_app$cn (fun_app$co (rel_fun$c ?v0py225 ?v1py203) ?v2py114) ?v3py95)) )) :named A242))
(assert (! (forall ((?v0py226 Bool_bool_bool_fun_fun$)(?v1py204 Bool_bool_bool_fun_fun$)(?v2py115 A_b_bool_fun_fun$)) (! (rel_fun$gf (rel_fun$es ?v0py226 ?v1py204) (rel_fun$gg (rel_fun$ ?v2py115 ?v0py226) (rel_fun$ ?v2py115 ?v1py204)) comp$ comp$a) :pattern ((rel_fun$gg (rel_fun$ ?v2py115 ?v0py226) (rel_fun$ ?v2py115 ?v1py204))) )) :named A243))
(assert (! (forall ((?v0py227 Bool_bool_bool_fun_fun$)(?v1py205 A_b_bool_fun_fun$)(?v2py116 A_b_bool_fun_fun$)) (! (rel_fun$gh (rel_fun$gi ?v0py227 ?v1py205) (rel_fun$gj (rel_fun$ ?v2py116 ?v0py227) (rel_fun$a ?v2py116 ?v1py205)) comp$b comp$c) :pattern ((rel_fun$gj (rel_fun$ ?v2py116 ?v0py227) (rel_fun$a ?v2py116 ?v1py205))) )) :named A244))
(assert (! (forall ((?v0py228 Bool_bool_bool_fun_fun$)(?v1py206 C_d_bool_fun_fun$)(?v2py117 A_b_bool_fun_fun$)) (! (rel_fun$gk (rel_fun$gl ?v0py228 ?v1py206) (rel_fun$gm (rel_fun$ ?v2py117 ?v0py228) (rel_fun$b ?v2py117 ?v1py206)) comp$d comp$e) :pattern ((rel_fun$gm (rel_fun$ ?v2py117 ?v0py228) (rel_fun$b ?v2py117 ?v1py206))) )) :named A245))
(assert (! (forall ((?v0py229 C_d_bool_fun_fun$)(?v1py207 Bool_bool_bool_fun_fun$)(?v2py118 A_b_bool_fun_fun$)) (! (rel_fun$gn (rel_fun$fr ?v0py229 ?v1py207) (rel_fun$go (rel_fun$b ?v2py118 ?v0py229) (rel_fun$ ?v2py118 ?v1py207)) comp$f comp$g) :pattern ((rel_fun$go (rel_fun$b ?v2py118 ?v0py229) (rel_fun$ ?v2py118 ?v1py207))) )) :named A246))
(assert (! (forall ((?v0py230 C_d_bool_fun_fun$)(?v1py208 A_b_bool_fun_fun$)(?v2py119 A_b_bool_fun_fun$)) (! (rel_fun$gp (rel_fun$gq ?v0py230 ?v1py208) (rel_fun$gr (rel_fun$b ?v2py119 ?v0py230) (rel_fun$a ?v2py119 ?v1py208)) comp$h comp$i) :pattern ((rel_fun$gr (rel_fun$b ?v2py119 ?v0py230) (rel_fun$a ?v2py119 ?v1py208))) )) :named A247))
(assert (! (forall ((?v0py231 C_d_bool_fun_fun$)(?v1py209 C_d_bool_fun_fun$)(?v2py120 A_b_bool_fun_fun$)) (! (rel_fun$gs (rel_fun$gt ?v0py231 ?v1py209) (rel_fun$gu (rel_fun$b ?v2py120 ?v0py231) (rel_fun$b ?v2py120 ?v1py209)) comp$j comp$k) :pattern ((rel_fun$gu (rel_fun$b ?v2py120 ?v0py231) (rel_fun$b ?v2py120 ?v1py209))) )) :named A248))
(assert (! (forall ((?v0py232 A_b_bool_fun_fun$)(?v1py210 Bool_bool_bool_fun_fun$)(?v2py121 A_b_bool_fun_fun$)) (! (rel_fun$gv (rel_fun$ ?v0py232 ?v1py210) (rel_fun$gw (rel_fun$a ?v2py121 ?v0py232) (rel_fun$ ?v2py121 ?v1py210)) comp$l comp$m) :pattern ((rel_fun$gw (rel_fun$a ?v2py121 ?v0py232) (rel_fun$ ?v2py121 ?v1py210))) )) :named A249))
(assert (! (forall ((?v0py233 A_b_bool_fun_fun$)(?v1py211 A_b_bool_fun_fun$)(?v2py122 A_b_bool_fun_fun$)) (! (rel_fun$gx (rel_fun$a ?v0py233 ?v1py211) (rel_fun$gy (rel_fun$a ?v2py122 ?v0py233) (rel_fun$a ?v2py122 ?v1py211)) comp$n comp$o) :pattern ((rel_fun$gy (rel_fun$a ?v2py122 ?v0py233) (rel_fun$a ?v2py122 ?v1py211))) )) :named A250))
(assert (! (forall ((?v0py234 A_b_bool_fun_fun$)(?v1py212 C_d_bool_fun_fun$)(?v2py123 A_b_bool_fun_fun$)) (! (rel_fun$gz (rel_fun$b ?v0py234 ?v1py212) (rel_fun$ha (rel_fun$a ?v2py123 ?v0py234) (rel_fun$b ?v2py123 ?v1py212)) comp$p comp$q) :pattern ((rel_fun$ha (rel_fun$a ?v2py123 ?v0py234) (rel_fun$b ?v2py123 ?v1py212))) )) :named A251))
(assert (! (forall ((?v0py235 Bool_bool_bool_fun_fun$)(?v1py213 C_llist_d_llist_bool_fun_fun$)(?v2py124 A_b_bool_fun_fun$)) (! (rel_fun$hb (rel_fun$hc ?v0py235 ?v1py213) (rel_fun$hd (rel_fun$ ?v2py124 ?v0py235) (rel_fun$c ?v2py124 ?v1py213)) comp$r comp$s) :pattern ((rel_fun$hd (rel_fun$ ?v2py124 ?v0py235) (rel_fun$c ?v2py124 ?v1py213))) )) :named A252))
(assert (! (forall ((?v0py236 A_b_bool_fun_fun$)(?v1py214 Bool_bool_bool_fun_fun$)(?v2py125 Bool_bool_bool_fun_fun$)) (! (or (not (bi_total$ ?v0py236)) (rel_fun$he (rel_fun$er ?v1py214 (rel_fun$es ?v2py125 uu$)) (rel_fun$hf (rel_fun$ ?v0py236 ?v1py214) (rel_fun$fy (rel_fun$ ?v0py236 ?v2py125) uu$)) fun_ord$ fun_ord$a)) :pattern ((rel_fun$hf (rel_fun$ ?v0py236 ?v1py214) (rel_fun$fy (rel_fun$ ?v0py236 ?v2py125) uu$))) )) :named A253))
(assert (! (forall ((?v0py237 A_b_bool_fun_fun$)(?v1py215 Bool_bool_bool_fun_fun$)(?v2py126 C_d_bool_fun_fun$)) (! (or (not (bi_total$ ?v0py237)) (rel_fun$hg (rel_fun$hh ?v1py215 (rel_fun$fr ?v2py126 uu$)) (rel_fun$hi (rel_fun$ ?v0py237 ?v1py215) (rel_fun$hj (rel_fun$b ?v0py237 ?v2py126) uu$)) fun_ord$b fun_ord$c)) :pattern ((rel_fun$hi (rel_fun$ ?v0py237 ?v1py215) (rel_fun$hj (rel_fun$b ?v0py237 ?v2py126) uu$))) )) :named A254))
(assert (! (forall ((?v0py238 A_b_bool_fun_fun$)(?v1py216 A_b_bool_fun_fun$)(?v2py127 Bool_bool_bool_fun_fun$)) (! (or (not (bi_total$ ?v0py238)) (rel_fun$hk (rel_fun$hl ?v1py216 (rel_fun$es ?v2py127 uu$)) (rel_fun$hm (rel_fun$a ?v0py238 ?v1py216) (rel_fun$fy (rel_fun$ ?v0py238 ?v2py127) uu$)) fun_ord$d fun_ord$e)) :pattern ((rel_fun$hm (rel_fun$a ?v0py238 ?v1py216) (rel_fun$fy (rel_fun$ ?v0py238 ?v2py127) uu$))) )) :named A255))
(assert (! (forall ((?v0py239 A_b_bool_fun_fun$)(?v1py217 A_b_bool_fun_fun$)(?v2py128 C_d_bool_fun_fun$)) (! (or (not (bi_total$ ?v0py239)) (rel_fun$hn (rel_fun$ho ?v1py217 (rel_fun$fr ?v2py128 uu$)) (rel_fun$hp (rel_fun$a ?v0py239 ?v1py217) (rel_fun$hj (rel_fun$b ?v0py239 ?v2py128) uu$)) fun_ord$f fun_ord$g)) :pattern ((rel_fun$hp (rel_fun$a ?v0py239 ?v1py217) (rel_fun$hj (rel_fun$b ?v0py239 ?v2py128) uu$))) )) :named A256))
(assert (! (forall ((?v0py240 A_b_bool_fun_fun$)(?v1py218 C_d_bool_fun_fun$)(?v2py129 Bool_bool_bool_fun_fun$)) (! (or (not (bi_total$ ?v0py240)) (rel_fun$hq (rel_fun$hr ?v1py218 (rel_fun$es ?v2py129 uu$)) (rel_fun$hs (rel_fun$b ?v0py240 ?v1py218) (rel_fun$fy (rel_fun$ ?v0py240 ?v2py129) uu$)) fun_ord$h fun_ord$i)) :pattern ((rel_fun$hs (rel_fun$b ?v0py240 ?v1py218) (rel_fun$fy (rel_fun$ ?v0py240 ?v2py129) uu$))) )) :named A257))
(assert (! (forall ((?v0py241 A_b_bool_fun_fun$)(?v1py219 C_d_bool_fun_fun$)(?v2py130 C_d_bool_fun_fun$)) (! (or (not (bi_total$ ?v0py241)) (rel_fun$ht (rel_fun$fq ?v1py219 (rel_fun$fr ?v2py130 uu$)) (rel_fun$hu (rel_fun$b ?v0py241 ?v1py219) (rel_fun$hj (rel_fun$b ?v0py241 ?v2py130) uu$)) fun_ord$j fun_ord$k)) :pattern ((rel_fun$hu (rel_fun$b ?v0py241 ?v1py219) (rel_fun$hj (rel_fun$b ?v0py241 ?v2py130) uu$))) )) :named A258))
(assert (! (forall ((?v0py242 A_b_bool_fun_fun$)(?v1py220 Bool_bool_bool_fun_fun$)(?v2py131 A_b_bool_fun_fun$)) (! (or (not (bi_total$ ?v0py242)) (rel_fun$hv (rel_fun$hw ?v1py220 (rel_fun$ ?v2py131 uu$)) (rel_fun$hx (rel_fun$ ?v0py242 ?v1py220) (rel_fun$hy (rel_fun$a ?v0py242 ?v2py131) uu$)) fun_ord$l fun_ord$m)) :pattern ((rel_fun$hx (rel_fun$ ?v0py242 ?v1py220) (rel_fun$hy (rel_fun$a ?v0py242 ?v2py131) uu$))) )) :named A259))
(assert (! (forall ((?v0py243 A_b_bool_fun_fun$)(?v1py221 A_b_bool_fun_fun$)(?v2py132 A_b_bool_fun_fun$)) (! (or (not (bi_total$ ?v0py243)) (rel_fun$hz (rel_fun$ia ?v1py221 (rel_fun$ ?v2py132 uu$)) (rel_fun$ib (rel_fun$a ?v0py243 ?v1py221) (rel_fun$hy (rel_fun$a ?v0py243 ?v2py132) uu$)) fun_ord$n fun_ord$o)) :pattern ((rel_fun$ib (rel_fun$a ?v0py243 ?v1py221) (rel_fun$hy (rel_fun$a ?v0py243 ?v2py132) uu$))) )) :named A260))
(assert (! (forall ((?v0py244 A_b_bool_fun_fun$)(?v1py222 C_d_bool_fun_fun$)(?v2py133 A_b_bool_fun_fun$)) (! (or (not (bi_total$ ?v0py244)) (rel_fun$ic (rel_fun$fm ?v1py222 (rel_fun$ ?v2py133 uu$)) (rel_fun$id (rel_fun$b ?v0py244 ?v1py222) (rel_fun$hy (rel_fun$a ?v0py244 ?v2py133) uu$)) fun_ord$p fun_ord$q)) :pattern ((rel_fun$id (rel_fun$b ?v0py244 ?v1py222) (rel_fun$hy (rel_fun$a ?v0py244 ?v2py133) uu$))) )) :named A261))
(assert (! (forall ((?v0py245 A_b_bool_fun_fun$)(?v1py223 Bool_bool_bool_fun_fun$)(?v2py134 C_llist_d_llist_bool_fun_fun$)) (! (or (not (bi_total$ ?v0py245)) (rel_fun$ie (rel_fun$if ?v1py223 (rel_fun$ft ?v2py134 uu$)) (rel_fun$ig (rel_fun$ ?v0py245 ?v1py223) (rel_fun$ih (rel_fun$c ?v0py245 ?v2py134) uu$)) fun_ord$r fun_ord$s)) :pattern ((rel_fun$ig (rel_fun$ ?v0py245 ?v1py223) (rel_fun$ih (rel_fun$c ?v0py245 ?v2py134) uu$))) )) :named A262))
(assert (! (forall ((?v0py246 C_d_bool_fun_fun$)) (! (or (bi_total$b (fun_app$cp llist_all2$ ?v0py246)) (not (bi_total$a ?v0py246))) :pattern ((fun_app$cp llist_all2$ ?v0py246)) :pattern ((bi_total$a ?v0py246)) )) :named A263))
(assert (! (forall ((?v0py247 A_b_bool_fun_fun$)) (! (rel_fun$gf uut$ (rel_fun$gg (rel_fun$ ?v0py247 uu$) (rel_fun$ ?v0py247 uu$)) comp$ comp$a) :pattern ((rel_fun$ ?v0py247 uu$)) )) :named A264))
(assert (! (forall ((?v0py248 A_b_bool_fun_fun$)(?v1py224 Bool_bool_bool_fun_fun$)) (! (or (not (bi_total$ ?v0py248)) (rel_fun$ii (rel_fun$ia ?v0py248 (rel_fun$ ?v0py248 uu$)) (rel_fun$ij (rel_fun$er ?v1py224 (rel_fun$es ?v1py224 uu$)) (rel_fun$fy (rel_fun$ ?v0py248 ?v1py224) uu$)) monotone$ monotone$a)) :pattern ((rel_fun$ ?v0py248 ?v1py224)) )) :named A265))
(assert (! (forall ((?v0py249 A_b_bool_fun_fun$)(?v1py225 C_d_bool_fun_fun$)) (! (or (not (bi_total$ ?v0py249)) (rel_fun$ik (rel_fun$ia ?v0py249 (rel_fun$ ?v0py249 uu$)) (rel_fun$il (rel_fun$fq ?v1py225 (rel_fun$fr ?v1py225 uu$)) (rel_fun$hj (rel_fun$b ?v0py249 ?v1py225) uu$)) monotone$b monotone$c)) :pattern ((rel_fun$b ?v0py249 ?v1py225)) )) :named A266))
(assert (! (forall ((?v0py250 A_b_bool_fun_fun$)(?v1py226 C_llist_d_llist_bool_fun_fun$)) (! (or (not (bi_total$ ?v0py250)) (rel_fun$im (rel_fun$ia ?v0py250 (rel_fun$ ?v0py250 uu$)) (rel_fun$in (rel_fun$fs ?v1py226 (rel_fun$ft ?v1py226 uu$)) (rel_fun$ih (rel_fun$c ?v0py250 ?v1py226) uu$)) monotone$d monotone$e)) :pattern ((rel_fun$c ?v0py250 ?v1py226)) )) :named A267))
(assert (! (forall ((?v0py251 A_b_bool_fun_fun$)(?v1py227 A_b_bool_fun_fun$)) (! (or (not (bi_total$ ?v0py251)) (rel_fun$io (rel_fun$ia ?v0py251 (rel_fun$ ?v0py251 uu$)) (rel_fun$ip (rel_fun$ia ?v1py227 (rel_fun$ ?v1py227 uu$)) (rel_fun$hy (rel_fun$a ?v0py251 ?v1py227) uu$)) monotone$f monotone$g)) :pattern ((rel_fun$a ?v0py251 ?v1py227)) )) :named A268))
(assert (! (forall ((?v0py252 C_d_bool_fun_fun$)) (! (or (left_total$a (fun_app$cp llist_all2$ ?v0py252)) (not (left_total$ ?v0py252))) :pattern ((fun_app$cp llist_all2$ ?v0py252)) :pattern ((left_total$ ?v0py252)) )) :named A269))
(assert (! (forall ((?v0py253 C_c_bool_fun_fun$)(?v1py228 C_d_bool_fun_fun$)) (! (= (fun_app$cp llist_all2$ (relcompp$ ?v0py253 ?v1py228)) (fun_app$ec (relcompp$a (fun_app$dg llist_all2$d ?v0py253)) (fun_app$cp llist_all2$ ?v1py228))) :pattern ((relcompp$ ?v0py253 ?v1py228)) :pattern ((fun_app$ec (relcompp$a (fun_app$dg llist_all2$d ?v0py253)) (fun_app$cp llist_all2$ ?v1py228))) )) :named A270))
(assert (! (forall ((?v0py254 C_d_bool_fun_fun$)(?v1py229 D_d_bool_fun_fun$)) (! (= (fun_app$cp llist_all2$ (relcompp$b ?v0py254 ?v1py229)) (fun_app$ed (relcompp$c (fun_app$cp llist_all2$ ?v0py254)) (fun_app$db llist_all2$a ?v1py229))) :pattern ((relcompp$b ?v0py254 ?v1py229)) :pattern ((fun_app$ed (relcompp$c (fun_app$cp llist_all2$ ?v0py254)) (fun_app$db llist_all2$a ?v1py229))) )) :named A271))
(assert (! (forall ((?v0py255 A_b_bool_fun_fun$)) (! (or (not (bi_total$ ?v0py255)) (rel_fun$iq (rel_fun$ia ?v0py255 (rel_fun$ ?v0py255 uu$)) uu$ reflp$ reflp$a)) :pattern ((bi_total$ ?v0py255)) :pattern ((rel_fun$ ?v0py255 uu$)) )) :named A272))
(assert (! (forall ((?v0py256 A_b_bool_fun_fun$)(?v1py230 A_b_bool_fun_fun$)) (! (or (not (bi_total$ ?v0py256)) (rel_fun$ir (rel_fun$ia ?v1py230 (rel_fun$ ?v0py256 uu$)) (rel_fun$ ?v1py230 uu$) domainp$ domainp$a)) :pattern ((rel_fun$ia ?v1py230 (rel_fun$ ?v0py256 uu$))) )) :named A273))
(assert (! (forall ((?v0py257 A_b_bool_fun_fun$)) (! (or (not (bi_total$ ?v0py257)) (fun_app$ee (fun_app$ef (rel_fun$fy (rel_fun$ ?v0py257 uu$) uu$) transfer_forall$) transfer_forall$a)) :pattern ((bi_total$ ?v0py257)) :pattern ((rel_fun$ ?v0py257 uu$)) )) :named A274))
(assert (! (forall ((?v0py258 A_b_bool_fun_fun$)) (! (or (not (right_total$ ?v0py258)) (fun_app$ee (fun_app$ef (rel_fun$fy (rel_fun$ ?v0py258 uu$) uuu$) transfer_forall$) transfer_forall$a)) :pattern ((right_total$ ?v0py258)) :pattern ((rel_fun$ ?v0py258 uu$)) )) :named A275))
(assert (! (forall ((?v0py259 A_b_bool_fun_fun$)) (! (or (not (right_total$ ?v0py259)) (fun_app$ee (fun_app$ef (rel_fun$fy (rel_fun$ ?v0py259 uuu$) uuu$) transfer_forall$) transfer_forall$a)) :pattern ((right_total$ ?v0py259)) :pattern ((rel_fun$ ?v0py259 uuu$)) )) :named A276))
(assert (! (forall ((?v0py260 C_d_bool_fun_fun$)) (! (or (not (right_total$a ?v0py260)) (right_total$b (fun_app$cp llist_all2$ ?v0py260))) :pattern ((right_total$a ?v0py260)) :pattern ((fun_app$cp llist_all2$ ?v0py260)) )) :named A277))
(assert (! (forall ((?v0py261 A_b_bool_fun_fun$)) (! (or (not (right_total$ ?v0py261)) (rel_fun$iq (rel_fun$ia ?v0py261 (rel_fun$ ?v0py261 uuu$)) uuu$ reflp$ reflp$a)) :pattern ((right_total$ ?v0py261)) :pattern ((rel_fun$ ?v0py261 uuu$)) )) :named A278))
(assert (! (forall ((?v0py262 A_b_bool_fun_fun$)) (! (or (not (right_total$ ?v0py262)) (rel_fun$iq (rel_fun$ia ?v0py262 (rel_fun$ ?v0py262 uu$)) uuu$ reflp$ reflp$a)) :pattern ((right_total$ ?v0py262)) :pattern ((rel_fun$ ?v0py262 uu$)) )) :named A279))
(assert (! (forall ((?v0py263 A_b_bool_fun_fun$)) (! (or (not (right_total$ ?v0py263)) (fun_app$ee (fun_app$ef (rel_fun$fy (rel_fun$ ?v0py263 uu$) uu$) (transfer_bforall$ (domainp$b ?v0py263))) transfer_forall$a)) :pattern ((right_total$ ?v0py263)) :pattern ((rel_fun$ ?v0py263 uu$)) :pattern ((domainp$b ?v0py263)) )) :named A280))
(assert (! (forall ((?v0py264 A_b_bool_fun_fun$)) (! (or (not (bi_total$ ?v0py264)) (rel_fun$iq (rel_fun$ia ?v0py264 (rel_fun$ ?v0py264 rev_implies$)) rev_implies$ reflp$ reflp$a)) :pattern ((bi_total$ ?v0py264)) :pattern ((rel_fun$ ?v0py264 rev_implies$)) )) :named A281))
(assert (! (forall ((?v0py265 A_b_bool_fun_fun$)) (! (or (not (bi_total$ ?v0py265)) (rel_fun$iq (rel_fun$ia ?v0py265 (rel_fun$ ?v0py265 uu$)) rev_implies$ reflp$ reflp$a)) :pattern ((bi_total$ ?v0py265)) :pattern ((rel_fun$ ?v0py265 uu$)) )) :named A282))
(assert (! (forall ((?v0py266 A_b_bool_fun_fun$)) (! (or (not (bi_total$ ?v0py266)) (fun_app$ee (fun_app$ef (rel_fun$fy (rel_fun$ ?v0py266 uu$) rev_implies$) transfer_forall$) transfer_forall$a)) :pattern ((bi_total$ ?v0py266)) :pattern ((rel_fun$ ?v0py266 uu$)) )) :named A283))
(assert (! (forall ((?v0py267 Bool)(?v1py231 Bool)) (! (and (or ?v0py267 (not ?v1py231) (not (fun_app$d (fun_app$e rev_implies$ ?v0py267) ?v1py231))) (or (fun_app$d (fun_app$e rev_implies$ ?v0py267) ?v1py231) (and ?v1py231 (not ?v0py267)))) :pattern ((fun_app$d (fun_app$e rev_implies$ ?v0py267) ?v1py231)) )) :named A284))
(assert (! (forall ((?v0py268 A_b_bool_fun_fun$)) (! (or (not (bi_total$ ?v0py268)) (fun_app$ee (fun_app$ef (rel_fun$fy (rel_fun$ ?v0py268 rev_implies$) rev_implies$) transfer_forall$) transfer_forall$a)) :pattern ((bi_total$ ?v0py268)) :pattern ((rel_fun$ ?v0py268 rev_implies$)) )) :named A285))
(assert (! (forall ((?v0py269 C_d_bool_fun_fun$)) (! (= (domainp$c (fun_app$cp llist_all2$ ?v0py269)) (pred_llist$ (domainp$d ?v0py269))) :pattern ((fun_app$cp llist_all2$ ?v0py269)) :pattern ((domainp$d ?v0py269)) )) :named A286))
(assert (! (forall ((?v0py270 A_a_bool_fun_fun$)(?v1py232 Bool_bool_bool_fun_fun$)(?v2py135 A_b_bool_fun_fun$)(?v3py96 Bool_bool_bool_fun_fun$)) (! (less_eq$ (relcompp$d (fun_app$ds (rel_fun$au ?v0py270) ?v1py232) (rel_fun$ ?v2py135 ?v3py96)) (rel_fun$ (fun_app$eg (relcompp$e ?v0py270) ?v2py135) (fun_app$eh (relcompp$f ?v1py232) ?v3py96))) :pattern ((relcompp$d (fun_app$ds (rel_fun$au ?v0py270) ?v1py232) (rel_fun$ ?v2py135 ?v3py96))) :pattern ((rel_fun$ (fun_app$eg (relcompp$e ?v0py270) ?v2py135) (fun_app$eh (relcompp$f ?v1py232) ?v3py96))) )) :named A287))
(assert (! (forall ((?v0py271 A_a_bool_fun_fun$)(?v1py233 A_a_bool_fun_fun$)(?v2py136 A_b_bool_fun_fun$)(?v3py97 A_b_bool_fun_fun$)) (! (less_eq$a (relcompp$g (fun_app$dt (rel_fun$ax ?v0py271) ?v1py233) (rel_fun$a ?v2py136 ?v3py97)) (rel_fun$a (fun_app$eg (relcompp$e ?v0py271) ?v2py136) (fun_app$eg (relcompp$e ?v1py233) ?v3py97))) :pattern ((relcompp$g (fun_app$dt (rel_fun$ax ?v0py271) ?v1py233) (rel_fun$a ?v2py136 ?v3py97))) :pattern ((rel_fun$a (fun_app$eg (relcompp$e ?v0py271) ?v2py136) (fun_app$eg (relcompp$e ?v1py233) ?v3py97))) )) :named A288))
(assert (! (forall ((?v0py272 A_a_bool_fun_fun$)(?v1py234 C_c_bool_fun_fun$)(?v2py137 A_b_bool_fun_fun$)(?v3py98 C_d_bool_fun_fun$)) (! (less_eq$b (relcompp$h (fun_app$du (rel_fun$bj ?v0py272) ?v1py234) (rel_fun$b ?v2py137 ?v3py98)) (rel_fun$b (fun_app$eg (relcompp$e ?v0py272) ?v2py137) (relcompp$ ?v1py234 ?v3py98))) :pattern ((relcompp$h (fun_app$du (rel_fun$bj ?v0py272) ?v1py234) (rel_fun$b ?v2py137 ?v3py98))) :pattern ((rel_fun$b (fun_app$eg (relcompp$e ?v0py272) ?v2py137) (relcompp$ ?v1py234 ?v3py98))) )) :named A289))
(assert (! (forall ((?v0py273 A_a_bool_fun_fun$)(?v1py235 C_llist_c_llist_bool_fun_fun$)(?v2py138 A_b_bool_fun_fun$)(?v3py99 C_llist_d_llist_bool_fun_fun$)) (! (less_eq$c (relcompp$i (rel_fun$bm ?v0py273 ?v1py235) (rel_fun$c ?v2py138 ?v3py99)) (rel_fun$c (fun_app$eg (relcompp$e ?v0py273) ?v2py138) (fun_app$ec (relcompp$a ?v1py235) ?v3py99))) :pattern ((relcompp$i (rel_fun$bm ?v0py273 ?v1py235) (rel_fun$c ?v2py138 ?v3py99))) :pattern ((rel_fun$c (fun_app$eg (relcompp$e ?v0py273) ?v2py138) (fun_app$ec (relcompp$a ?v1py235) ?v3py99))) )) :named A290))
(assert (! (forall ((?v0py274 A_b_bool_fun_fun$)(?v1py236 Bool_bool_bool_fun_fun$)(?v2py139 B_b_bool_fun_fun$)(?v3py100 Bool_bool_bool_fun_fun$)) (! (less_eq$ (relcompp$j (rel_fun$ ?v0py274 ?v1py236) (rel_fun$t ?v2py139 ?v3py100)) (rel_fun$ (fun_app$ei (relcompp$k ?v0py274) ?v2py139) (fun_app$eh (relcompp$f ?v1py236) ?v3py100))) :pattern ((relcompp$j (rel_fun$ ?v0py274 ?v1py236) (rel_fun$t ?v2py139 ?v3py100))) :pattern ((rel_fun$ (fun_app$ei (relcompp$k ?v0py274) ?v2py139) (fun_app$eh (relcompp$f ?v1py236) ?v3py100))) )) :named A291))
(assert (! (forall ((?v0py275 A_b_bool_fun_fun$)(?v1py237 A_b_bool_fun_fun$)(?v2py140 B_b_bool_fun_fun$)(?v3py101 B_b_bool_fun_fun$)) (! (less_eq$a (relcompp$l (rel_fun$a ?v0py275 ?v1py237) (rel_fun$v ?v2py140 ?v3py101)) (rel_fun$a (fun_app$ei (relcompp$k ?v0py275) ?v2py140) (fun_app$ei (relcompp$k ?v1py237) ?v3py101))) :pattern ((relcompp$l (rel_fun$a ?v0py275 ?v1py237) (rel_fun$v ?v2py140 ?v3py101))) :pattern ((rel_fun$a (fun_app$ei (relcompp$k ?v0py275) ?v2py140) (fun_app$ei (relcompp$k ?v1py237) ?v3py101))) )) :named A292))
(assert (! (forall ((?v0py276 A_b_bool_fun_fun$)(?v1py238 C_d_bool_fun_fun$)(?v2py141 B_b_bool_fun_fun$)(?v3py102 D_d_bool_fun_fun$)) (! (less_eq$b (relcompp$m (rel_fun$b ?v0py276 ?v1py238) (rel_fun$cb ?v2py141 ?v3py102)) (rel_fun$b (fun_app$ei (relcompp$k ?v0py276) ?v2py141) (relcompp$b ?v1py238 ?v3py102))) :pattern ((relcompp$m (rel_fun$b ?v0py276 ?v1py238) (rel_fun$cb ?v2py141 ?v3py102))) :pattern ((rel_fun$b (fun_app$ei (relcompp$k ?v0py276) ?v2py141) (relcompp$b ?v1py238 ?v3py102))) )) :named A293))
(assert (! (forall ((?v0py277 A_b_bool_fun_fun$)(?v1py239 C_llist_d_llist_bool_fun_fun$)(?v2py142 B_b_bool_fun_fun$)(?v3py103 D_llist_d_llist_bool_fun_fun$)) (! (less_eq$c (relcompp$n (rel_fun$c ?v0py277 ?v1py239) (rel_fun$ce ?v2py142 ?v3py103)) (rel_fun$c (fun_app$ei (relcompp$k ?v0py277) ?v2py142) (fun_app$ed (relcompp$c ?v1py239) ?v3py103))) :pattern ((relcompp$n (rel_fun$c ?v0py277 ?v1py239) (rel_fun$ce ?v2py142 ?v3py103))) :pattern ((rel_fun$c (fun_app$ei (relcompp$k ?v0py277) ?v2py142) (fun_app$ed (relcompp$c ?v1py239) ?v3py103))) )) :named A294))
(assert (! (forall ((?v0py278 A_b_bool_fun_fun$)(?v1py240 A_b_bool_fun_fun$)(?v2py143 Bool_bool_bool_fun_fun$)(?v3py104 Bool_bool_bool_fun_fun$)) (! (or (not (less_eq$d ?v0py278 ?v1py240)) (not (less_eq$e ?v2py143 ?v3py104)) (less_eq$ (rel_fun$ ?v1py240 ?v2py143) (rel_fun$ ?v0py278 ?v3py104))) :pattern ((less_eq$ (rel_fun$ ?v1py240 ?v2py143) (rel_fun$ ?v0py278 ?v3py104))) )) :named A295))
(assert (! (forall ((?v0py279 A_b_bool_fun_fun$)(?v1py241 A_b_bool_fun_fun$)(?v2py144 A_b_bool_fun_fun$)(?v3py105 A_b_bool_fun_fun$)) (! (or (less_eq$a (rel_fun$a ?v1py241 ?v2py144) (rel_fun$a ?v0py279 ?v3py105)) (not (less_eq$d ?v0py279 ?v1py241)) (not (less_eq$d ?v2py144 ?v3py105))) :pattern ((less_eq$a (rel_fun$a ?v1py241 ?v2py144) (rel_fun$a ?v0py279 ?v3py105))) )) :named A296))
(assert (! (forall ((?v0py280 A_b_bool_fun_fun$)(?v1py242 A_b_bool_fun_fun$)(?v2py145 C_d_bool_fun_fun$)(?v3py106 C_d_bool_fun_fun$)) (! (or (not (less_eq$d ?v0py280 ?v1py242)) (not (less_eq$f ?v2py145 ?v3py106)) (less_eq$b (rel_fun$b ?v1py242 ?v2py145) (rel_fun$b ?v0py280 ?v3py106))) :pattern ((less_eq$b (rel_fun$b ?v1py242 ?v2py145) (rel_fun$b ?v0py280 ?v3py106))) )) :named A297))
(assert (! (forall ((?v0py281 A_b_bool_fun_fun$)(?v1py243 A_b_bool_fun_fun$)(?v2py146 C_llist_d_llist_bool_fun_fun$)(?v3py107 C_llist_d_llist_bool_fun_fun$)) (! (or (not (less_eq$d ?v0py281 ?v1py243)) (not (less_eq$g ?v2py146 ?v3py107)) (less_eq$c (rel_fun$c ?v1py243 ?v2py146) (rel_fun$c ?v0py281 ?v3py107))) :pattern ((less_eq$c (rel_fun$c ?v1py243 ?v2py146) (rel_fun$c ?v0py281 ?v3py107))) )) :named A298))
(assert (! (forall ((?v0py282 C_d_bool_fun_fun$)(?v1py244 C_d_bool_fun_fun$)) (! (or (not (less_eq$f ?v0py282 ?v1py244)) (less_eq$g (fun_app$cp llist_all2$ ?v0py282) (fun_app$cp llist_all2$ ?v1py244))) :pattern ((less_eq$f ?v0py282 ?v1py244)) :pattern ((less_eq$g (fun_app$cp llist_all2$ ?v0py282) (fun_app$cp llist_all2$ ?v1py244))) )) :named A299))
(assert (! (forall ((?v0py283 A_a_bool_fun_fun$)(?v1py245 A_b_bool_fun_fun$)(?v2py147 Bool_bool_bool_fun_fun$)(?v3py108 Bool_bool_bool_fun_fun$)) (! (or (less_eq$ (rel_fun$ (fun_app$eg (relcompp$e ?v0py283) ?v1py245) (fun_app$eh (relcompp$f ?v2py147) ?v3py108)) (relcompp$d (fun_app$ds (rel_fun$au ?v0py283) ?v2py147) (rel_fun$ ?v1py245 ?v3py108))) (not (left_unique$ ?v0py283)) (not (right_total$c ?v0py283)) (not (right_unique$ ?v1py245)) (not (left_total$b ?v1py245))) :pattern ((rel_fun$ (fun_app$eg (relcompp$e ?v0py283) ?v1py245) (fun_app$eh (relcompp$f ?v2py147) ?v3py108))) :pattern ((relcompp$d (fun_app$ds (rel_fun$au ?v0py283) ?v2py147) (rel_fun$ ?v1py245 ?v3py108))) )) :named A300))
(assert (! (forall ((?v0py284 A_b_bool_fun_fun$)(?v1py246 B_b_bool_fun_fun$)(?v2py148 Bool_bool_bool_fun_fun$)(?v3py109 Bool_bool_bool_fun_fun$)) (! (or (less_eq$ (rel_fun$ (fun_app$ei (relcompp$k ?v0py284) ?v1py246) (fun_app$eh (relcompp$f ?v2py148) ?v3py109)) (relcompp$j (rel_fun$ ?v0py284 ?v2py148) (rel_fun$t ?v1py246 ?v3py109))) (not (left_unique$a ?v0py284)) (not (right_total$ ?v0py284)) (not (right_unique$a ?v1py246)) (not (left_total$c ?v1py246))) :pattern ((rel_fun$ (fun_app$ei (relcompp$k ?v0py284) ?v1py246) (fun_app$eh (relcompp$f ?v2py148) ?v3py109))) :pattern ((relcompp$j (rel_fun$ ?v0py284 ?v2py148) (rel_fun$t ?v1py246 ?v3py109))) )) :named A301))
(assert (! (forall ((?v0py285 A_a_bool_fun_fun$)(?v1py247 A_b_bool_fun_fun$)(?v2py149 A_a_bool_fun_fun$)(?v3py110 A_b_bool_fun_fun$)) (! (or (less_eq$a (rel_fun$a (fun_app$eg (relcompp$e ?v0py285) ?v1py247) (fun_app$eg (relcompp$e ?v2py149) ?v3py110)) (relcompp$g (fun_app$dt (rel_fun$ax ?v0py285) ?v2py149) (rel_fun$a ?v1py247 ?v3py110))) (not (left_unique$ ?v0py285)) (not (right_total$c ?v0py285)) (not (right_unique$ ?v1py247)) (not (left_total$b ?v1py247))) :pattern ((rel_fun$a (fun_app$eg (relcompp$e ?v0py285) ?v1py247) (fun_app$eg (relcompp$e ?v2py149) ?v3py110))) :pattern ((relcompp$g (fun_app$dt (rel_fun$ax ?v0py285) ?v2py149) (rel_fun$a ?v1py247 ?v3py110))) )) :named A302))
(assert (! (forall ((?v0py286 A_b_bool_fun_fun$)(?v1py248 B_b_bool_fun_fun$)(?v2py150 A_b_bool_fun_fun$)(?v3py111 B_b_bool_fun_fun$)) (! (or (less_eq$a (rel_fun$a (fun_app$ei (relcompp$k ?v0py286) ?v1py248) (fun_app$ei (relcompp$k ?v2py150) ?v3py111)) (relcompp$l (rel_fun$a ?v0py286 ?v2py150) (rel_fun$v ?v1py248 ?v3py111))) (not (left_unique$a ?v0py286)) (not (right_total$ ?v0py286)) (not (right_unique$a ?v1py248)) (not (left_total$c ?v1py248))) :pattern ((rel_fun$a (fun_app$ei (relcompp$k ?v0py286) ?v1py248) (fun_app$ei (relcompp$k ?v2py150) ?v3py111))) :pattern ((relcompp$l (rel_fun$a ?v0py286 ?v2py150) (rel_fun$v ?v1py248 ?v3py111))) )) :named A303))
(assert (! (forall ((?v0py287 A_a_bool_fun_fun$)(?v1py249 A_b_bool_fun_fun$)(?v2py151 C_c_bool_fun_fun$)(?v3py112 C_d_bool_fun_fun$)) (! (or (less_eq$b (rel_fun$b (fun_app$eg (relcompp$e ?v0py287) ?v1py249) (relcompp$ ?v2py151 ?v3py112)) (relcompp$h (fun_app$du (rel_fun$bj ?v0py287) ?v2py151) (rel_fun$b ?v1py249 ?v3py112))) (not (left_unique$ ?v0py287)) (not (right_total$c ?v0py287)) (not (right_unique$ ?v1py249)) (not (left_total$b ?v1py249))) :pattern ((rel_fun$b (fun_app$eg (relcompp$e ?v0py287) ?v1py249) (relcompp$ ?v2py151 ?v3py112))) :pattern ((relcompp$h (fun_app$du (rel_fun$bj ?v0py287) ?v2py151) (rel_fun$b ?v1py249 ?v3py112))) )) :named A304))
(assert (! (forall ((?v0py288 A_b_bool_fun_fun$)(?v1py250 B_b_bool_fun_fun$)(?v2py152 C_d_bool_fun_fun$)(?v3py113 D_d_bool_fun_fun$)) (! (or (less_eq$b (rel_fun$b (fun_app$ei (relcompp$k ?v0py288) ?v1py250) (relcompp$b ?v2py152 ?v3py113)) (relcompp$m (rel_fun$b ?v0py288 ?v2py152) (rel_fun$cb ?v1py250 ?v3py113))) (not (left_unique$a ?v0py288)) (not (right_total$ ?v0py288)) (not (right_unique$a ?v1py250)) (not (left_total$c ?v1py250))) :pattern ((rel_fun$b (fun_app$ei (relcompp$k ?v0py288) ?v1py250) (relcompp$b ?v2py152 ?v3py113))) :pattern ((relcompp$m (rel_fun$b ?v0py288 ?v2py152) (rel_fun$cb ?v1py250 ?v3py113))) )) :named A305))
(assert (! (forall ((?v0py289 A_a_bool_fun_fun$)(?v1py251 A_b_bool_fun_fun$)(?v2py153 C_llist_c_llist_bool_fun_fun$)(?v3py114 C_llist_d_llist_bool_fun_fun$)) (! (or (less_eq$c (rel_fun$c (fun_app$eg (relcompp$e ?v0py289) ?v1py251) (fun_app$ec (relcompp$a ?v2py153) ?v3py114)) (relcompp$i (rel_fun$bm ?v0py289 ?v2py153) (rel_fun$c ?v1py251 ?v3py114))) (not (left_unique$ ?v0py289)) (not (right_total$c ?v0py289)) (not (right_unique$ ?v1py251)) (not (left_total$b ?v1py251))) :pattern ((rel_fun$c (fun_app$eg (relcompp$e ?v0py289) ?v1py251) (fun_app$ec (relcompp$a ?v2py153) ?v3py114))) :pattern ((relcompp$i (rel_fun$bm ?v0py289 ?v2py153) (rel_fun$c ?v1py251 ?v3py114))) )) :named A306))
(assert (! (forall ((?v0py290 A_b_bool_fun_fun$)(?v1py252 B_b_bool_fun_fun$)(?v2py154 C_llist_d_llist_bool_fun_fun$)(?v3py115 D_llist_d_llist_bool_fun_fun$)) (! (or (less_eq$c (rel_fun$c (fun_app$ei (relcompp$k ?v0py290) ?v1py252) (fun_app$ed (relcompp$c ?v2py154) ?v3py115)) (relcompp$n (rel_fun$c ?v0py290 ?v2py154) (rel_fun$ce ?v1py252 ?v3py115))) (not (left_unique$a ?v0py290)) (not (right_total$ ?v0py290)) (not (right_unique$a ?v1py252)) (not (left_total$c ?v1py252))) :pattern ((rel_fun$c (fun_app$ei (relcompp$k ?v0py290) ?v1py252) (fun_app$ed (relcompp$c ?v2py154) ?v3py115))) :pattern ((relcompp$n (rel_fun$c ?v0py290 ?v2py154) (rel_fun$ce ?v1py252 ?v3py115))) )) :named A307))
(assert (! (forall ((?v0py291 A_b_bool_fun_fun$)(?v1py253 Bool_bool_bool_fun_fun$)) (! (or (not (right_total$ ?v0py291)) (not (right_unique$b ?v1py253)) (right_unique$c (rel_fun$ ?v0py291 ?v1py253))) :pattern ((rel_fun$ ?v0py291 ?v1py253)) )) :named A308))
(assert (! (forall ((?v0py292 A_b_bool_fun_fun$)(?v1py254 A_b_bool_fun_fun$)) (! (or (not (right_total$ ?v0py292)) (not (right_unique$ ?v1py254)) (right_unique$d (rel_fun$a ?v0py292 ?v1py254))) :pattern ((rel_fun$a ?v0py292 ?v1py254)) )) :named A309))
(assert (! (forall ((?v0py293 A_b_bool_fun_fun$)(?v1py255 C_d_bool_fun_fun$)) (! (or (not (right_total$ ?v0py293)) (not (right_unique$e ?v1py255)) (right_unique$f (rel_fun$b ?v0py293 ?v1py255))) :pattern ((rel_fun$b ?v0py293 ?v1py255)) )) :named A310))
(assert (! (forall ((?v0py294 A_b_bool_fun_fun$)(?v1py256 C_llist_d_llist_bool_fun_fun$)) (! (or (not (right_total$ ?v0py294)) (not (right_unique$g ?v1py256)) (right_unique$h (rel_fun$c ?v0py294 ?v1py256))) :pattern ((rel_fun$c ?v0py294 ?v1py256)) )) :named A311))
(assert (! (forall ((?v0py295 C_d_bool_fun_fun$)) (! (or (not (right_unique$e ?v0py295)) (right_unique$g (fun_app$cp llist_all2$ ?v0py295))) :pattern ((right_unique$e ?v0py295)) :pattern ((fun_app$cp llist_all2$ ?v0py295)) )) :named A312))
(assert (! (forall ((?v0py296 C_d_bool_fun_fun$)) (! (or (left_unique$c (fun_app$cp llist_all2$ ?v0py296)) (not (left_unique$b ?v0py296))) :pattern ((fun_app$cp llist_all2$ ?v0py296)) :pattern ((left_unique$b ?v0py296)) )) :named A313))
(assert (! (forall ((?v0py297 A_b_bool_fun_fun$)(?v1py257 Bool_bool_bool_fun_fun$)) (! (or (left_unique$e (rel_fun$ ?v0py297 ?v1py257)) (not (left_total$b ?v0py297)) (not (left_unique$d ?v1py257))) :pattern ((rel_fun$ ?v0py297 ?v1py257)) )) :named A314))
(assert (! (forall ((?v0py298 A_b_bool_fun_fun$)(?v1py258 A_b_bool_fun_fun$)) (! (or (left_unique$f (rel_fun$a ?v0py298 ?v1py258)) (not (left_total$b ?v0py298)) (not (left_unique$a ?v1py258))) :pattern ((rel_fun$a ?v0py298 ?v1py258)) )) :named A315))
(assert (! (forall ((?v0py299 A_b_bool_fun_fun$)(?v1py259 C_d_bool_fun_fun$)) (! (or (left_unique$g (rel_fun$b ?v0py299 ?v1py259)) (not (left_total$b ?v0py299)) (not (left_unique$b ?v1py259))) :pattern ((rel_fun$b ?v0py299 ?v1py259)) )) :named A316))
(assert (! (forall ((?v0py300 A_b_bool_fun_fun$)(?v1py260 C_llist_d_llist_bool_fun_fun$)) (! (or (left_unique$h (rel_fun$c ?v0py300 ?v1py260)) (not (left_total$b ?v0py300)) (not (left_unique$c ?v1py260))) :pattern ((rel_fun$c ?v0py300 ?v1py260)) )) :named A317))
(assert (! (forall ((?v0py301 A_b_bool_fun_fun$)(?v1py261 Bool_bool_bool_fun_fun$)) (! (or (right_total$e (rel_fun$ ?v0py301 ?v1py261)) (not (right_unique$ ?v0py301)) (not (right_total$d ?v1py261))) :pattern ((rel_fun$ ?v0py301 ?v1py261)) )) :named A318))
(assert (! (forall ((?v0py302 A_b_bool_fun_fun$)(?v1py262 A_b_bool_fun_fun$)) (! (or (right_total$f (rel_fun$a ?v0py302 ?v1py262)) (not (right_unique$ ?v0py302)) (not (right_total$ ?v1py262))) :pattern ((rel_fun$a ?v0py302 ?v1py262)) )) :named A319))
(assert (! (forall ((?v0py303 A_b_bool_fun_fun$)(?v1py263 C_d_bool_fun_fun$)) (! (or (not (right_unique$ ?v0py303)) (right_total$g (rel_fun$b ?v0py303 ?v1py263)) (not (right_total$a ?v1py263))) :pattern ((rel_fun$b ?v0py303 ?v1py263)) )) :named A320))
(assert (! (forall ((?v0py304 A_b_bool_fun_fun$)(?v1py264 C_llist_d_llist_bool_fun_fun$)) (! (or (right_total$h (rel_fun$c ?v0py304 ?v1py264)) (not (right_unique$ ?v0py304)) (not (right_total$b ?v1py264))) :pattern ((rel_fun$c ?v0py304 ?v1py264)) )) :named A321))
(assert (! (forall ((?v0py305 A_b_bool_fun_fun$)(?v1py265 Bool_bool_bool_fun_fun$)) (! (or (left_total$e (rel_fun$ ?v0py305 ?v1py265)) (not (left_unique$a ?v0py305)) (not (left_total$d ?v1py265))) :pattern ((rel_fun$ ?v0py305 ?v1py265)) )) :named A322))
(assert (! (forall ((?v0py306 A_b_bool_fun_fun$)(?v1py266 A_b_bool_fun_fun$)) (! (or (left_total$f (rel_fun$a ?v0py306 ?v1py266)) (not (left_unique$a ?v0py306)) (not (left_total$b ?v1py266))) :pattern ((rel_fun$a ?v0py306 ?v1py266)) )) :named A323))
(assert (! (forall ((?v0py307 A_b_bool_fun_fun$)(?v1py267 C_d_bool_fun_fun$)) (! (or (left_total$g (rel_fun$b ?v0py307 ?v1py267)) (not (left_unique$a ?v0py307)) (not (left_total$ ?v1py267))) :pattern ((rel_fun$b ?v0py307 ?v1py267)) )) :named A324))
(assert (! (forall ((?v0py308 A_b_bool_fun_fun$)(?v1py268 C_llist_d_llist_bool_fun_fun$)) (! (or (left_total$h (rel_fun$c ?v0py308 ?v1py268)) (not (left_unique$a ?v0py308)) (not (left_total$a ?v1py268))) :pattern ((rel_fun$c ?v0py308 ?v1py268)) )) :named A325))
(assert (! (forall ((?v0py309 A_b_bool_fun_fun$)) (! (or (not (right_unique$ ?v0py309)) (fun_app$ej (fun_app$ek (rel_fun$ia ?v0py309 (rel_fun$ ?v0py309 uuu$)) uuc$) uuv$)) :pattern ((right_unique$ ?v0py309)) :pattern ((rel_fun$ ?v0py309 uuu$)) )) :named A326))
(assert (! (forall ((?v0py310 A_b_bool_fun_fun$)) (! (and (or (not (right_unique$ ?v0py310)) (fun_app$ej (fun_app$ek (rel_fun$ia ?v0py310 (rel_fun$ ?v0py310 uuu$)) uuc$) uuv$)) (or (right_unique$ ?v0py310) (not (fun_app$ej (fun_app$ek (rel_fun$ia ?v0py310 (rel_fun$ ?v0py310 uuu$)) uuc$) uuv$)))) :pattern ((right_unique$ ?v0py310)) )) :named A327))
(assert (! (forall ((?v0py311 A_b_bool_fun_fun$)(?v1py269 Bool_bool_bool_fun_fun$)(?v2py155 A_a_bool_fun_fun$)(?v3py116 Bool_bool_bool_fun_fun$)) (! (or (less_eq$ (rel_fun$ (fun_app$eg (relcompp$e ?v2py155) ?v0py311) (fun_app$eh (relcompp$f ?v3py116) ?v1py269)) (relcompp$d (fun_app$ds (rel_fun$au ?v2py155) ?v3py116) (rel_fun$ ?v0py311 ?v1py269))) (not (right_unique$ ?v0py311)) (not (left_total$b ?v0py311)) (not (left_unique$d ?v1py269)) (not (right_total$d ?v1py269))) :pattern ((rel_fun$ (fun_app$eg (relcompp$e ?v2py155) ?v0py311) (fun_app$eh (relcompp$f ?v3py116) ?v1py269))) :pattern ((relcompp$d (fun_app$ds (rel_fun$au ?v2py155) ?v3py116) (rel_fun$ ?v0py311 ?v1py269))) )) :named A328))
(assert (! (forall ((?v0py312 B_b_bool_fun_fun$)(?v1py270 Bool_bool_bool_fun_fun$)(?v2py156 A_b_bool_fun_fun$)(?v3py117 Bool_bool_bool_fun_fun$)) (! (or (less_eq$ (rel_fun$ (fun_app$ei (relcompp$k ?v2py156) ?v0py312) (fun_app$eh (relcompp$f ?v3py117) ?v1py270)) (relcompp$j (rel_fun$ ?v2py156 ?v3py117) (rel_fun$t ?v0py312 ?v1py270))) (not (right_unique$a ?v0py312)) (not (left_total$c ?v0py312)) (not (left_unique$d ?v1py270)) (not (right_total$d ?v1py270))) :pattern ((rel_fun$ (fun_app$ei (relcompp$k ?v2py156) ?v0py312) (fun_app$eh (relcompp$f ?v3py117) ?v1py270))) :pattern ((relcompp$j (rel_fun$ ?v2py156 ?v3py117) (rel_fun$t ?v0py312 ?v1py270))) )) :named A329))
(assert (! (forall ((?v0py313 A_b_bool_fun_fun$)(?v1py271 A_b_bool_fun_fun$)(?v2py157 A_a_bool_fun_fun$)(?v3py118 A_a_bool_fun_fun$)) (! (or (less_eq$a (rel_fun$a (fun_app$eg (relcompp$e ?v2py157) ?v0py313) (fun_app$eg (relcompp$e ?v3py118) ?v1py271)) (relcompp$g (fun_app$dt (rel_fun$ax ?v2py157) ?v3py118) (rel_fun$a ?v0py313 ?v1py271))) (not (right_unique$ ?v0py313)) (not (left_total$b ?v0py313)) (not (left_unique$a ?v1py271)) (not (right_total$ ?v1py271))) :pattern ((rel_fun$a (fun_app$eg (relcompp$e ?v2py157) ?v0py313) (fun_app$eg (relcompp$e ?v3py118) ?v1py271))) :pattern ((relcompp$g (fun_app$dt (rel_fun$ax ?v2py157) ?v3py118) (rel_fun$a ?v0py313 ?v1py271))) )) :named A330))
(assert (! (forall ((?v0py314 B_b_bool_fun_fun$)(?v1py272 B_b_bool_fun_fun$)(?v2py158 A_b_bool_fun_fun$)(?v3py119 A_b_bool_fun_fun$)) (! (or (less_eq$a (rel_fun$a (fun_app$ei (relcompp$k ?v2py158) ?v0py314) (fun_app$ei (relcompp$k ?v3py119) ?v1py272)) (relcompp$l (rel_fun$a ?v2py158 ?v3py119) (rel_fun$v ?v0py314 ?v1py272))) (not (right_unique$a ?v0py314)) (not (left_total$c ?v0py314)) (not (left_unique$i ?v1py272)) (not (right_total$i ?v1py272))) :pattern ((rel_fun$a (fun_app$ei (relcompp$k ?v2py158) ?v0py314) (fun_app$ei (relcompp$k ?v3py119) ?v1py272))) :pattern ((relcompp$l (rel_fun$a ?v2py158 ?v3py119) (rel_fun$v ?v0py314 ?v1py272))) )) :named A331))
(assert (! (forall ((?v0py315 A_b_bool_fun_fun$)(?v1py273 C_d_bool_fun_fun$)(?v2py159 A_a_bool_fun_fun$)(?v3py120 C_c_bool_fun_fun$)) (! (or (less_eq$b (rel_fun$b (fun_app$eg (relcompp$e ?v2py159) ?v0py315) (relcompp$ ?v3py120 ?v1py273)) (relcompp$h (fun_app$du (rel_fun$bj ?v2py159) ?v3py120) (rel_fun$b ?v0py315 ?v1py273))) (not (right_unique$ ?v0py315)) (not (left_total$b ?v0py315)) (not (left_unique$b ?v1py273)) (not (right_total$a ?v1py273))) :pattern ((rel_fun$b (fun_app$eg (relcompp$e ?v2py159) ?v0py315) (relcompp$ ?v3py120 ?v1py273))) :pattern ((relcompp$h (fun_app$du (rel_fun$bj ?v2py159) ?v3py120) (rel_fun$b ?v0py315 ?v1py273))) )) :named A332))
(assert (! (forall ((?v0py316 B_b_bool_fun_fun$)(?v1py274 D_d_bool_fun_fun$)(?v2py160 A_b_bool_fun_fun$)(?v3py121 C_d_bool_fun_fun$)) (! (or (less_eq$b (rel_fun$b (fun_app$ei (relcompp$k ?v2py160) ?v0py316) (relcompp$b ?v3py121 ?v1py274)) (relcompp$m (rel_fun$b ?v2py160 ?v3py121) (rel_fun$cb ?v0py316 ?v1py274))) (not (right_unique$a ?v0py316)) (not (left_total$c ?v0py316)) (not (left_unique$j ?v1py274)) (not (right_total$j ?v1py274))) :pattern ((rel_fun$b (fun_app$ei (relcompp$k ?v2py160) ?v0py316) (relcompp$b ?v3py121 ?v1py274))) :pattern ((relcompp$m (rel_fun$b ?v2py160 ?v3py121) (rel_fun$cb ?v0py316 ?v1py274))) )) :named A333))
(assert (! (forall ((?v0py317 A_b_bool_fun_fun$)(?v1py275 C_llist_d_llist_bool_fun_fun$)(?v2py161 A_a_bool_fun_fun$)(?v3py122 C_llist_c_llist_bool_fun_fun$)) (! (or (less_eq$c (rel_fun$c (fun_app$eg (relcompp$e ?v2py161) ?v0py317) (fun_app$ec (relcompp$a ?v3py122) ?v1py275)) (relcompp$i (rel_fun$bm ?v2py161 ?v3py122) (rel_fun$c ?v0py317 ?v1py275))) (not (right_unique$ ?v0py317)) (not (left_total$b ?v0py317)) (not (left_unique$c ?v1py275)) (not (right_total$b ?v1py275))) :pattern ((rel_fun$c (fun_app$eg (relcompp$e ?v2py161) ?v0py317) (fun_app$ec (relcompp$a ?v3py122) ?v1py275))) :pattern ((relcompp$i (rel_fun$bm ?v2py161 ?v3py122) (rel_fun$c ?v0py317 ?v1py275))) )) :named A334))
(assert (! (forall ((?v0py318 B_b_bool_fun_fun$)(?v1py276 D_llist_d_llist_bool_fun_fun$)(?v2py162 A_b_bool_fun_fun$)(?v3py123 C_llist_d_llist_bool_fun_fun$)) (! (or (less_eq$c (rel_fun$c (fun_app$ei (relcompp$k ?v2py162) ?v0py318) (fun_app$ed (relcompp$c ?v3py123) ?v1py276)) (relcompp$n (rel_fun$c ?v2py162 ?v3py123) (rel_fun$ce ?v0py318 ?v1py276))) (not (right_unique$a ?v0py318)) (not (left_total$c ?v0py318)) (not (left_unique$k ?v1py276)) (not (right_total$k ?v1py276))) :pattern ((rel_fun$c (fun_app$ei (relcompp$k ?v2py162) ?v0py318) (fun_app$ed (relcompp$c ?v3py123) ?v1py276))) :pattern ((relcompp$n (rel_fun$c ?v2py162 ?v3py123) (rel_fun$ce ?v0py318 ?v1py276))) )) :named A335))
(assert (! (forall ((?v0py319 A_b_bool_fun_fun$)(?v1py277 Bool_bool_bool_fun_fun$)) (! (or (bi_total$d (rel_fun$ ?v0py319 ?v1py277)) (not (bi_total$c ?v1py277)) (not (bi_unique$ ?v0py319))) :pattern ((rel_fun$ ?v0py319 ?v1py277)) )) :named A336))
(assert (! (forall ((?v0py320 A_b_bool_fun_fun$)(?v1py278 A_b_bool_fun_fun$)) (! (or (bi_total$e (rel_fun$a ?v0py320 ?v1py278)) (not (bi_unique$ ?v0py320)) (not (bi_total$ ?v1py278))) :pattern ((rel_fun$a ?v0py320 ?v1py278)) )) :named A337))
(assert (! (forall ((?v0py321 A_b_bool_fun_fun$)(?v1py279 C_d_bool_fun_fun$)) (! (or (not (bi_unique$ ?v0py321)) (bi_total$f (rel_fun$b ?v0py321 ?v1py279)) (not (bi_total$a ?v1py279))) :pattern ((rel_fun$b ?v0py321 ?v1py279)) )) :named A338))
(assert (! (forall ((?v0py322 A_b_bool_fun_fun$)(?v1py280 C_llist_d_llist_bool_fun_fun$)) (! (or (bi_total$g (rel_fun$c ?v0py322 ?v1py280)) (not (bi_unique$ ?v0py322)) (not (bi_total$b ?v1py280))) :pattern ((rel_fun$c ?v0py322 ?v1py280)) )) :named A339))
(assert (! (forall ((?v0py323 A_b_bool_fun_fun$)) (! (or (not (bi_unique$ ?v0py323)) (fun_app$ej (fun_app$ek (rel_fun$ia ?v0py323 (rel_fun$ ?v0py323 uu$)) uuc$) uuv$)) :pattern ((bi_unique$ ?v0py323)) :pattern ((rel_fun$ ?v0py323 uu$)) )) :named A340))
(assert (! (forall ((?v0py324 A_b_bool_fun_fun$)) (! (and (or (not (bi_unique$ ?v0py324)) (fun_app$ej (fun_app$ek (rel_fun$ia ?v0py324 (rel_fun$ ?v0py324 uu$)) uuc$) uuv$)) (or (bi_unique$ ?v0py324) (not (fun_app$ej (fun_app$ek (rel_fun$ia ?v0py324 (rel_fun$ ?v0py324 uu$)) uuc$) uuv$)))) :pattern ((bi_unique$ ?v0py324)) )) :named A341))
(assert (! (forall ((?v0py325 A_b_bool_fun_fun$)(?v1py281 Bool_bool_bool_fun_fun$)) (! (or (bi_unique$b (rel_fun$ ?v0py325 ?v1py281)) (not (bi_total$ ?v0py325)) (not (bi_unique$a ?v1py281))) :pattern ((rel_fun$ ?v0py325 ?v1py281)) )) :named A342))
(assert (! (forall ((?v0py326 A_b_bool_fun_fun$)(?v1py282 A_b_bool_fun_fun$)) (! (or (bi_unique$c (rel_fun$a ?v0py326 ?v1py282)) (not (bi_total$ ?v0py326)) (not (bi_unique$ ?v1py282))) :pattern ((rel_fun$a ?v0py326 ?v1py282)) )) :named A343))
(assert (! (forall ((?v0py327 A_b_bool_fun_fun$)(?v1py283 C_d_bool_fun_fun$)) (! (or (bi_unique$e (rel_fun$b ?v0py327 ?v1py283)) (not (bi_total$ ?v0py327)) (not (bi_unique$d ?v1py283))) :pattern ((rel_fun$b ?v0py327 ?v1py283)) )) :named A344))
(assert (! (forall ((?v0py328 A_b_bool_fun_fun$)(?v1py284 C_llist_d_llist_bool_fun_fun$)) (! (or (bi_unique$g (rel_fun$c ?v0py328 ?v1py284)) (not (bi_total$ ?v0py328)) (not (bi_unique$f ?v1py284))) :pattern ((rel_fun$c ?v0py328 ?v1py284)) )) :named A345))
(assert (! (forall ((?v0py329 C_d_bool_fun_fun$)) (! (or (not (bi_unique$d ?v0py329)) (bi_unique$f (fun_app$cp llist_all2$ ?v0py329))) :pattern ((fun_app$cp llist_all2$ ?v0py329)) :pattern ((bi_unique$d ?v0py329)) )) :named A346))
(assert (! (forall ((?v0py330 A_b_bool_fun_fun$)(?v1py285 Bool_bool_bool_fun_fun$)) (! (or (not (bi_unique$ ?v0py330)) (rel_fun$is (rel_fun$ ?v0py330 ?v1py285) (rel_fun$it ?v0py330 (rel_fun$hw ?v1py285 (rel_fun$ ?v0py330 ?v1py285))) fun_upd$ fun_upd$a)) :pattern ((rel_fun$ ?v0py330 ?v1py285)) )) :named A347))
(assert (! (forall ((?v0py331 A_b_bool_fun_fun$)(?v1py286 A_b_bool_fun_fun$)) (! (or (not (bi_unique$ ?v0py331)) (rel_fun$iu (rel_fun$a ?v0py331 ?v1py286) (rel_fun$iv ?v0py331 (rel_fun$df ?v1py286 (rel_fun$a ?v0py331 ?v1py286))) fun_upd$b fun_upd$c)) :pattern ((rel_fun$a ?v0py331 ?v1py286)) )) :named A348))
(assert (! (forall ((?v0py332 A_b_bool_fun_fun$)(?v1py287 C_d_bool_fun_fun$)) (! (or (not (bi_unique$ ?v0py332)) (rel_fun$iw (rel_fun$b ?v0py332 ?v1py287) (rel_fun$ix ?v0py332 (rel_fun$iy ?v1py287 (rel_fun$b ?v0py332 ?v1py287))) fun_upd$d fun_upd$e)) :pattern ((rel_fun$b ?v0py332 ?v1py287)) )) :named A349))
(assert (! (forall ((?v0py333 A_b_bool_fun_fun$)(?v1py288 C_llist_d_llist_bool_fun_fun$)) (! (or (not (bi_unique$ ?v0py333)) (rel_fun$iz (rel_fun$c ?v0py333 ?v1py288) (rel_fun$ja ?v0py333 (rel_fun$jb ?v1py288 (rel_fun$c ?v0py333 ?v1py288))) fun_upd$f fun_upd$g)) :pattern ((rel_fun$c ?v0py333 ?v1py288)) )) :named A350))
(assert (! (forall ((?v0py334 A_b_bool_fun_fun$)) (! (or (rel_fun$jc (rel_fun$ia ?v0py334 (rel_fun$ ?v0py334 uu$)) (rel_fun$ia ?v0py334 (rel_fun$ ?v0py334 uu$)) rtranclp$ rtranclp$a) (not (bi_unique$ ?v0py334)) (not (bi_total$ ?v0py334))) :pattern ((rel_fun$ ?v0py334 uu$)) :pattern ((bi_unique$ ?v0py334)) :pattern ((bi_total$ ?v0py334)) )) :named A351))
(assert (! (forall ((?v0py335 A_b_bool_fun_fun$)) (! (or (fun_app$ee (fun_app$ef (rel_fun$fy (rel_fun$ ?v0py335 uu$) uu$) uuw$) uux$) (not (bi_unique$ ?v0py335)) (not (bi_total$ ?v0py335))) :pattern ((rel_fun$ ?v0py335 uu$)) :pattern ((bi_unique$ ?v0py335)) :pattern ((bi_total$ ?v0py335)) )) :named A352))
(assert (! (forall ((?v0py336 A_b_bool_fun_fun$)) (! (or (not (bi_unique$ ?v0py336)) (rel_fun$jd (rel_fun$ ?v0py336 uu$) (rel_fun$ia ?v0py336 (rel_fun$ ?v0py336 uu$)) eq_onp$ eq_onp$a)) :pattern ((bi_unique$ ?v0py336)) :pattern ((rel_fun$ ?v0py336 uu$)) )) :named A353))
(assert (! (forall ((?v0py337 A_b_bool_fun_fun$)) (! (or (not (bi_total$ ?v0py337)) (not (bi_unique$ ?v0py337)) (rel_fun$je (rel_fun$fy (rel_fun$ ?v0py337 uu$) uu$) uu$ is_filter$ is_filter$a)) :pattern ((bi_total$ ?v0py337)) :pattern ((bi_unique$ ?v0py337)) :pattern ((rel_fun$ ?v0py337 uu$)) )) :named A354))
(check-sat)
(get-info :reason-unknown)
;z3 -T:600 group_026/ematching/tmp/x2015_09_10_17_19_34_833_2884007.smt_in_std_unique_aug-gt_unsat-full.smt2
;unknown
;((:reason-unknown "smt tactic failed to show goal to be sat/unsat (incomplete quantifiers)"))
