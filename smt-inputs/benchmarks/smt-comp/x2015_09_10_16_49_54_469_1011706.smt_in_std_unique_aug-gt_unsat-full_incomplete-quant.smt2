(set-info :smt-lib-version 2.6)
(set-info :source | Generated by: Andrew Reynolds Generated on: 2017-04-28 Generator: Sledgehammer, converted to v2.6 by CVC4 Application: Verfication goals in Isabelle Target solver: CVC4, Z3 Publications: "A Decision Procedure for (Co)Datatypes" by Andrew Reynolds and Jasmin Blanchette, CADE 2015. |)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unsat)
(set-logic UFDT)
(set-option :smt.auto-config false)
(set-option :smt.mbqi false)
(set-option :sat.random_seed 488)
(set-option :smt.random_seed 599)
(set-option :nlsat.seed 611)
(set-option :memory_max_size 6000)
(declare-sort A$ 0)
(declare-sort RegExStr 0)
(declare-sort RMode 0)
(declare-sort B$ 0)
(declare-sort A_a_fun$ 0)
(declare-sort B_a_fun$ 0)
(declare-sort A_a_fun_a_fun$ 0)
(declare-sort A_b_a_fun_fun$ 0)
(declare-sort B_a_fun_a_fun$ 0)
(declare-sort A_tree_a_tree_fun$ 0)
(declare-sort A_a_fun_a_a_fun_fun$ 0)
(declare-sort A_b_a_fun_a_fun_fun$ 0)
(declare-sort B_a_fun_b_a_fun_fun$ 0)
(declare-sort A_a_fun_tree_bool_fun$ 0)
(declare-sort A_tree_b_a_fun_tree_fun$ 0)
(declare-sort B_a_fun_tree_a_tree_fun$ 0)
(declare-sort A_a_fun_tree_a_a_fun_fun$ 0)
(declare-sort A_a_fun_a_b_a_fun_fun_fun$ 0)
(declare-sort A_b_a_fun_fun_a_a_fun_fun$ 0)
(declare-sort A_b_a_fun_fun_b_a_fun_fun$ 0)
(declare-sort A_b_a_fun_fun_tree_bool_fun$ 0)
(declare-sort A_a_fun_tree_a_a_fun_tree_fun$ 0)
(declare-sort A_a_fun_a_a_fun_a_a_fun_fun_fun$ 0)
(declare-sort A_a_fun_a_a_fun_fun_a_a_fun_fun$ 0)
(declare-sort A_a_fun_a_b_a_fun_a_fun_fun_fun$ 0)
(declare-sort A_b_a_fun_a_fun_fun_a_a_fun_fun$ 0)
(declare-sort A_b_a_fun_fun_a_b_a_fun_fun_fun$ 0)
(declare-sort B_a_fun_a_fun_b_a_fun_a_fun_fun$ 0)
(declare-sort A_b_a_fun_a_fun_fun_tree_bool_fun$ 0)
(declare-sort A_b_a_fun_fun_tree_a_a_fun_tree_fun$ 0)
(declare-sort A_b_a_fun_fun_tree_a_b_a_fun_fun_fun$ 0)
(declare-sort A_a_fun_a_b_a_fun_fun_a_a_fun_fun_fun$ 0)
(declare-sort A_b_a_fun_a_fun_fun_a_b_a_fun_fun_fun$ 0)
(declare-sort A_b_a_fun_fun_a_a_fun_fun_a_a_fun_fun$ 0)
(declare-sort A_b_a_fun_fun_a_b_a_fun_a_fun_fun_fun$ 0)
(declare-sort B_a_fun_b_a_fun_fun_b_a_fun_a_fun_fun$ 0)
(declare-sort A_a_fun_tree_a_a_fun_tree_bool_fun_fun$ 0)
(declare-sort A_b_a_fun_fun_a_a_fun_fun_tree_bool_fun$ 0)
(declare-sort A_a_fun_tree_a_a_fun_tree_a_a_fun_fun_fun$ 0)
(declare-sort A_b_a_fun_fun_tree_a_b_a_fun_fun_tree_fun$ 0)
(declare-sort A_a_fun_a_a_fun_fun_a_a_fun_a_a_fun_fun_fun$ 0)
(declare-sort A_b_a_fun_a_fun_fun_a_b_a_fun_a_fun_fun_fun$ 0)
(declare-sort A_b_a_fun_fun_a_a_fun_a_b_a_fun_fun_fun_fun$ 0)
(declare-sort B_a_fun_a_fun_a_b_a_fun_fun_a_a_fun_fun_fun$ 0)
(declare-sort A_a_fun_tree_a_a_fun_tree_a_a_fun_tree_fun_fun$ 0)
(declare-sort A_b_a_fun_a_fun_fun_tree_a_b_a_fun_a_fun_fun_fun$ 0)
(declare-sort A_a_fun_a_b_a_fun_fun_fun_a_a_fun_a_a_fun_fun_fun$ 0)
(declare-sort A_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun$ 0)
(declare-sort A_b_a_fun_fun_a_a_fun_fun_a_b_a_fun_a_fun_fun_fun$ 0)
(declare-sort A_b_a_fun_fun_a_b_a_fun_fun_fun_a_b_a_fun_fun_fun$ 0)
(declare-sort A_b_a_fun_fun_tree_a_b_a_fun_fun_tree_bool_fun_fun$ 0)
(declare-sort A_a_fun_a_a_fun_tree_a_a_fun_tree_a_a_fun_fun_fun_fun$ 0)
(declare-sort A_b_a_fun_a_fun_fun_tree_a_b_a_fun_a_fun_fun_tree_fun$ 0)
(declare-sort A_b_a_fun_fun_a_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun$ 0)
(declare-sort B_a_fun_b_a_fun_fun_a_b_a_fun_fun_a_b_a_fun_fun_fun_fun$ 0)
(declare-sort A_a_fun_a_a_fun_tree_a_a_fun_tree_a_a_fun_tree_fun_fun_fun$ 0)
(declare-sort A_b_a_fun_a_fun_fun_tree_a_b_a_fun_fun_a_a_fun_fun_tree_fun$ 0)
(declare-sort A_b_a_fun_fun_tree_a_b_a_fun_fun_tree_a_b_a_fun_fun_fun_fun$ 0)
(declare-sort A_b_a_fun_fun_a_a_fun_fun_tree_a_b_a_fun_fun_a_a_fun_fun_fun$ 0)
(declare-sort A_b_a_fun_fun_a_a_fun_fun_a_b_a_fun_fun_a_b_a_fun_fun_fun_fun$ 0)
(declare-sort A_b_a_fun_fun_a_b_a_fun_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun$ 0)
(declare-sort A_b_a_fun_a_fun_fun_tree_a_b_a_fun_a_fun_fun_tree_bool_fun_fun$ 0)
(declare-sort A_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_tree_bool_fun$ 0)
(declare-sort A_b_a_fun_fun_tree_a_b_a_fun_fun_tree_a_b_a_fun_fun_tree_fun_fun$ 0)
(declare-sort A_b_a_fun_fun_a_a_fun_fun_tree_a_b_a_fun_fun_a_a_fun_fun_tree_fun$ 0)
(declare-sort A_a_fun_a_a_fun_fun_a_a_fun_a_a_fun_fun_a_a_fun_a_a_fun_fun_fun_fun$ 0)
(declare-sort A_b_a_fun_a_fun_fun_a_b_a_fun_a_fun_fun_fun_a_b_a_fun_a_fun_fun_fun$ 0)
(declare-sort A_b_a_fun_fun_a_b_a_fun_fun_fun_a_b_a_fun_fun_a_b_a_fun_fun_fun_fun$ 0)
(declare-sort A_b_a_fun_fun_a_a_fun_fun_tree_a_b_a_fun_fun_a_a_fun_fun_tree_bool_fun_fun$ 0)
(declare-sort A_b_a_fun_a_fun_fun_tree_a_b_a_fun_a_fun_fun_tree_a_b_a_fun_a_fun_fun_fun_fun$ 0)
(declare-sort A_b_a_fun_fun_a_b_a_fun_fun_tree_a_b_a_fun_fun_tree_a_b_a_fun_fun_fun_fun_fun$ 0)
(declare-sort A_a_fun_a_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_fun$ 0)
(declare-sort A_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun$ 0)
(declare-sort B_a_fun_a_fun_b_a_fun_a_fun_fun_a_b_a_fun_a_fun_fun_a_b_a_fun_a_fun_fun_fun_fun$ 0)
(declare-sort A_b_a_fun_a_fun_fun_tree_a_b_a_fun_a_fun_fun_tree_a_b_a_fun_a_fun_fun_tree_fun_fun$ 0)
(declare-sort A_b_a_fun_fun_a_b_a_fun_fun_tree_a_b_a_fun_fun_tree_a_b_a_fun_fun_tree_fun_fun_fun$ 0)
(declare-sort A_b_a_fun_a_fun_fun_a_b_a_fun_a_fun_fun_fun_a_b_a_fun_a_fun_fun_a_b_a_fun_a_fun_fun_fun_fun$ 0)
(declare-sort A_b_a_fun_fun_a_a_fun_fun_a_b_a_fun_fun_a_b_a_fun_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_fun$ 0)
(declare-sort A_b_a_fun_fun_a_a_fun_fun_tree_a_b_a_fun_fun_a_a_fun_fun_tree_a_b_a_fun_fun_a_a_fun_fun_fun_fun$ 0)
(declare-sort A_b_a_fun_a_fun_fun_a_b_a_fun_a_fun_fun_fun_a_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_fun$ 0)
(declare-sort A_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_a_b_a_fun_a_fun_fun_a_b_a_fun_a_fun_fun_fun_fun$ 0)
(declare-sort A_b_a_fun_fun_a_a_fun_fun_tree_a_b_a_fun_fun_a_a_fun_fun_tree_a_b_a_fun_fun_a_a_fun_fun_tree_fun_fun$ 0)
(declare-sort A_b_a_fun_a_fun_fun_a_b_a_fun_a_fun_fun_tree_a_b_a_fun_a_fun_fun_tree_a_b_a_fun_a_fun_fun_fun_fun_fun$ 0)
(declare-sort A_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_a_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_fun$ 0)
(declare-sort A_b_a_fun_a_fun_fun_a_b_a_fun_a_fun_fun_tree_a_b_a_fun_a_fun_fun_tree_a_b_a_fun_a_fun_fun_tree_fun_fun_fun$ 0)
(declare-sort A_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_tree_a_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_fun$ 0)
(declare-sort A_b_a_fun_fun_a_a_fun_fun_a_b_a_fun_a_fun_fun_fun_a_b_a_fun_fun_a_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_fun$ 0)
(declare-sort A_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_tree_a_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_tree_fun$ 0)
(declare-sort A_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_tree_a_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_tree_bool_fun_fun$ 0)
(declare-sort A_b_a_fun_fun_a_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_tree_a_b_a_fun_fun_a_a_fun_fun_tree_a_b_a_fun_fun_a_a_fun_fun_fun_fun_fun$ 0)
(declare-sort A_b_a_fun_fun_a_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_tree_a_b_a_fun_fun_a_a_fun_fun_tree_a_b_a_fun_fun_a_a_fun_fun_tree_fun_fun_fun$ 0)
(declare-sort A_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_a_b_a_fun_a_fun_fun_a_b_a_fun_a_fun_fun_fun_a_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_fun_fun$ 0)
(declare-sort A_b_a_fun_fun_a_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_a_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_a_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_fun_fun$ 0)
(declare-sort A_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_tree_a_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_tree_a_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_fun_fun$ 0)
(declare-sort A_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_tree_a_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_tree_a_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_tree_fun_fun$ 0)
(declare-sort A_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_a_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_tree_a_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_tree_a_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_fun_fun_fun$ 0)
(declare-sort A_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_a_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_tree_a_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_tree_a_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_tree_fun_fun_fun$ 0)
(declare-sort A_a_fun_tree$ 0)
(declare-sort A_b_a_fun_fun_a_a_fun_fun_tree$ 0)
(declare-sort A_b_a_fun_fun_tree$ 0)
(declare-sort A_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_tree$ 0)
(declare-sort A_b_a_fun_a_fun_fun_tree$ 0)
(declare-sort A_b_a_fun_a_fun_fun_a_b_a_fun_a_fun_fun_fun_tree$ 0)
(declare-sort A_b_a_fun_fun_a_b_a_fun_fun_fun_tree$ 0)
(declare-sort A_a_fun_a_a_fun_fun_tree$ 0)
(declare-sort A_tree$ 0)
(declare-sort B_a_fun_tree$ 0)
(declare-sort B_a_fun_a_fun_tree$ 0)
(declare-sort B_a_fun_a_fun_a_b_a_fun_fun_a_a_fun_fun_fun_tree$ 0)
(declare-sort A_b_a_fun_fun_a_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_tree$ 0)
(declare-sort A_a_fun_a_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_fun_tree$ 0)
(declare-sort A_b_a_fun_fun_a_b_a_fun_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_tree$ 0)
(declare-sort A_b_a_fun_fun_a_a_fun_fun_a_b_a_fun_fun_a_b_a_fun_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_fun_tree$ 0)
(declare-sort A_b_a_fun_a_fun_fun_a_b_a_fun_a_fun_fun_fun_a_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_fun_tree$ 0)
(declare-sort A_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_a_b_a_fun_a_fun_fun_a_b_a_fun_a_fun_fun_fun_a_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_fun_fun_tree$ 0)
(declare-sort A_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_a_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_fun_tree$ 0)
(declare-sort A_b_a_fun_fun_a_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_a_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_a_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_fun_fun_tree$ 0)
(declare-sort A_a_fun_a_a_fun_a_a_fun_fun_fun_tree$ 0)
(declare-sort A_a_fun_a_b_a_fun_fun_fun_tree$ 0)
(declare-sort A_b_a_fun_fun_a_a_fun_a_b_a_fun_fun_fun_fun_tree$ 0)
(declare-sort B_a_fun_b_a_fun_fun_tree$ 0)
(declare-sort B_a_fun_b_a_fun_fun_a_b_a_fun_fun_a_b_a_fun_fun_fun_fun_tree$ 0)
(declare-sort A_a_fun_a_a_fun_fun_a_a_fun_a_a_fun_fun_fun_tree$ 0)
(declare-sort A_a_fun_a_a_fun_fun_a_a_fun_a_a_fun_fun_a_a_fun_a_a_fun_fun_fun_fun_tree$ 0)
(declare-sort B_a_fun_a_fun_b_a_fun_a_fun_fun_tree$ 0)
(declare-sort B_a_fun_a_fun_b_a_fun_a_fun_fun_a_b_a_fun_a_fun_fun_a_b_a_fun_a_fun_fun_fun_fun_tree$ 0)
(declare-sort A_b_a_fun_a_fun_fun_a_a_fun_fun_tree$ 0)
(declare-sort A_a_fun_a_b_a_fun_a_fun_fun_fun_tree$ 0)
(declare-sort A_b_a_fun_fun_b_a_fun_fun_tree$ 0)
(declare-sort A_a_fun_a_fun_tree$ 0)
(declare-sort A_b_a_fun_a_fun_fun_a_b_a_fun_a_fun_fun_fun_a_b_a_fun_a_fun_fun_fun_tree$ 0)
(declare-sort A_b_a_fun_fun_a_b_a_fun_fun_fun_a_b_a_fun_fun_fun_tree$ 0)
(declare-sort A_a_fun_a_a_fun_fun_a_a_fun_fun_tree$ 0)
(declare-sort A_b_a_fun_fun_a_a_fun_fun_a_a_fun_fun_tree$ 0)
(declare-sort A_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_tree$ 0)
(declare-fun select$ (A_a_fun_tree$) A_a_fun$)
(declare-fun selecta$ (A_a_fun_tree$) A_a_fun_tree$)
(declare-fun selectb$ (A_a_fun_tree$) A_a_fun_tree$)
(declare-fun node$ (A_a_fun$ A_a_fun_tree$ A_a_fun_tree$) A_a_fun_tree$)
(declare-fun selectc$ (A_b_a_fun_fun_a_a_fun_fun_tree$) A_b_a_fun_fun_a_a_fun_fun$)
(declare-fun selectd$ (A_b_a_fun_fun_a_a_fun_fun_tree$) A_b_a_fun_fun_a_a_fun_fun_tree$)
(declare-fun selecte$ (A_b_a_fun_fun_a_a_fun_fun_tree$) A_b_a_fun_fun_a_a_fun_fun_tree$)
(declare-fun node$a (A_b_a_fun_fun_a_a_fun_fun$ A_b_a_fun_fun_a_a_fun_fun_tree$ A_b_a_fun_fun_a_a_fun_fun_tree$) A_b_a_fun_fun_a_a_fun_fun_tree$)
(declare-fun selectf$ (A_b_a_fun_fun_tree$) A_b_a_fun_fun$)
(declare-fun selectg$ (A_b_a_fun_fun_tree$) A_b_a_fun_fun_tree$)
(declare-fun selecth$ (A_b_a_fun_fun_tree$) A_b_a_fun_fun_tree$)
(declare-fun node$b (A_b_a_fun_fun$ A_b_a_fun_fun_tree$ A_b_a_fun_fun_tree$) A_b_a_fun_fun_tree$)
(declare-fun selecti$ (A_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_tree$) A_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun$)
(declare-fun selectj$ (A_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_tree$) A_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_tree$)
(declare-fun selectk$ (A_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_tree$) A_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_tree$)
(declare-fun node$c (A_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun$ A_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_tree$ A_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_tree$) A_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_tree$)
(declare-fun selectl$ (A_b_a_fun_a_fun_fun_tree$) A_b_a_fun_a_fun_fun$)
(declare-fun selectm$ (A_b_a_fun_a_fun_fun_tree$) A_b_a_fun_a_fun_fun_tree$)
(declare-fun selectn$ (A_b_a_fun_a_fun_fun_tree$) A_b_a_fun_a_fun_fun_tree$)
(declare-fun node$d (A_b_a_fun_a_fun_fun$ A_b_a_fun_a_fun_fun_tree$ A_b_a_fun_a_fun_fun_tree$) A_b_a_fun_a_fun_fun_tree$)
(declare-fun selecto$ (A_b_a_fun_a_fun_fun_a_b_a_fun_a_fun_fun_fun_tree$) A_b_a_fun_a_fun_fun_a_b_a_fun_a_fun_fun_fun$)
(declare-fun selectp$ (A_b_a_fun_a_fun_fun_a_b_a_fun_a_fun_fun_fun_tree$) A_b_a_fun_a_fun_fun_a_b_a_fun_a_fun_fun_fun_tree$)
(declare-fun selectq$ (A_b_a_fun_a_fun_fun_a_b_a_fun_a_fun_fun_fun_tree$) A_b_a_fun_a_fun_fun_a_b_a_fun_a_fun_fun_fun_tree$)
(declare-fun node$e (A_b_a_fun_a_fun_fun_a_b_a_fun_a_fun_fun_fun$ A_b_a_fun_a_fun_fun_a_b_a_fun_a_fun_fun_fun_tree$ A_b_a_fun_a_fun_fun_a_b_a_fun_a_fun_fun_fun_tree$) A_b_a_fun_a_fun_fun_a_b_a_fun_a_fun_fun_fun_tree$)
(declare-fun selectr$ (A_b_a_fun_fun_a_b_a_fun_fun_fun_tree$) A_b_a_fun_fun_a_b_a_fun_fun_fun$)
(declare-fun selects$ (A_b_a_fun_fun_a_b_a_fun_fun_fun_tree$) A_b_a_fun_fun_a_b_a_fun_fun_fun_tree$)
(declare-fun selectt$ (A_b_a_fun_fun_a_b_a_fun_fun_fun_tree$) A_b_a_fun_fun_a_b_a_fun_fun_fun_tree$)
(declare-fun node$f (A_b_a_fun_fun_a_b_a_fun_fun_fun$ A_b_a_fun_fun_a_b_a_fun_fun_fun_tree$ A_b_a_fun_fun_a_b_a_fun_fun_fun_tree$) A_b_a_fun_fun_a_b_a_fun_fun_fun_tree$)
(declare-fun selectu$ (A_a_fun_a_a_fun_fun_tree$) A_a_fun_a_a_fun_fun$)
(declare-fun selectv$ (A_a_fun_a_a_fun_fun_tree$) A_a_fun_a_a_fun_fun_tree$)
(declare-fun selectw$ (A_a_fun_a_a_fun_fun_tree$) A_a_fun_a_a_fun_fun_tree$)
(declare-fun node$g (A_a_fun_a_a_fun_fun$ A_a_fun_a_a_fun_fun_tree$ A_a_fun_a_a_fun_fun_tree$) A_a_fun_a_a_fun_fun_tree$)
(declare-fun root$ (A_tree$) A$)
(declare-fun left$ (A_tree$) A_tree$)
(declare-fun right$ (A_tree$) A_tree$)
(declare-fun node$h (A$ A_tree$ A_tree$) A_tree$)
(declare-fun selectx$ (B_a_fun_tree$) B_a_fun$)
(declare-fun selecty$ (B_a_fun_tree$) B_a_fun_tree$)
(declare-fun selectz$ (B_a_fun_tree$) B_a_fun_tree$)
(declare-fun node$i (B_a_fun$ B_a_fun_tree$ B_a_fun_tree$) B_a_fun_tree$)
(declare-fun selecua$ (B_a_fun_a_fun_tree$) B_a_fun_a_fun$)
(declare-fun selecub$ (B_a_fun_a_fun_tree$) B_a_fun_a_fun_tree$)
(declare-fun selecuc$ (B_a_fun_a_fun_tree$) B_a_fun_a_fun_tree$)
(declare-fun node$j (B_a_fun_a_fun$ B_a_fun_a_fun_tree$ B_a_fun_a_fun_tree$) B_a_fun_a_fun_tree$)
(declare-fun selecud$ (B_a_fun_a_fun_a_b_a_fun_fun_a_a_fun_fun_fun_tree$) B_a_fun_a_fun_a_b_a_fun_fun_a_a_fun_fun_fun$)
(declare-fun selecue$ (B_a_fun_a_fun_a_b_a_fun_fun_a_a_fun_fun_fun_tree$) B_a_fun_a_fun_a_b_a_fun_fun_a_a_fun_fun_fun_tree$)
(declare-fun selecuf$ (B_a_fun_a_fun_a_b_a_fun_fun_a_a_fun_fun_fun_tree$) B_a_fun_a_fun_a_b_a_fun_fun_a_a_fun_fun_fun_tree$)
(declare-fun node$k (B_a_fun_a_fun_a_b_a_fun_fun_a_a_fun_fun_fun$ B_a_fun_a_fun_a_b_a_fun_fun_a_a_fun_fun_fun_tree$ B_a_fun_a_fun_a_b_a_fun_fun_a_a_fun_fun_fun_tree$) B_a_fun_a_fun_a_b_a_fun_fun_a_a_fun_fun_fun_tree$)
(declare-fun selecug$ (A_b_a_fun_fun_a_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_tree$) A_b_a_fun_fun_a_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun$)
(declare-fun selecuh$ (A_b_a_fun_fun_a_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_tree$) A_b_a_fun_fun_a_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_tree$)
(declare-fun selecui$ (A_b_a_fun_fun_a_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_tree$) A_b_a_fun_fun_a_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_tree$)
(declare-fun node$l (A_b_a_fun_fun_a_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun$ A_b_a_fun_fun_a_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_tree$ A_b_a_fun_fun_a_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_tree$) A_b_a_fun_fun_a_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_tree$)
(declare-fun selecuj$ (A_a_fun_a_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_fun_tree$) A_a_fun_a_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_fun$)
(declare-fun selecuk$ (A_a_fun_a_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_fun_tree$) A_a_fun_a_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_fun_tree$)
(declare-fun selecul$ (A_a_fun_a_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_fun_tree$) A_a_fun_a_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_fun_tree$)
(declare-fun node$m (A_a_fun_a_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_fun$ A_a_fun_a_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_fun_tree$ A_a_fun_a_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_fun_tree$) A_a_fun_a_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_fun_tree$)
(declare-fun selecum$ (A_b_a_fun_fun_a_b_a_fun_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_tree$) A_b_a_fun_fun_a_b_a_fun_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun$)
(declare-fun selecun$ (A_b_a_fun_fun_a_b_a_fun_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_tree$) A_b_a_fun_fun_a_b_a_fun_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_tree$)
(declare-fun selecuo$ (A_b_a_fun_fun_a_b_a_fun_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_tree$) A_b_a_fun_fun_a_b_a_fun_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_tree$)
(declare-fun node$n (A_b_a_fun_fun_a_b_a_fun_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun$ A_b_a_fun_fun_a_b_a_fun_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_tree$ A_b_a_fun_fun_a_b_a_fun_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_tree$) A_b_a_fun_fun_a_b_a_fun_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_tree$)
(declare-fun selecup$ (A_b_a_fun_fun_a_a_fun_fun_a_b_a_fun_fun_a_b_a_fun_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_fun_tree$) A_b_a_fun_fun_a_a_fun_fun_a_b_a_fun_fun_a_b_a_fun_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_fun$)
(declare-fun selecuq$ (A_b_a_fun_fun_a_a_fun_fun_a_b_a_fun_fun_a_b_a_fun_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_fun_tree$) A_b_a_fun_fun_a_a_fun_fun_a_b_a_fun_fun_a_b_a_fun_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_fun_tree$)
(declare-fun selecur$ (A_b_a_fun_fun_a_a_fun_fun_a_b_a_fun_fun_a_b_a_fun_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_fun_tree$) A_b_a_fun_fun_a_a_fun_fun_a_b_a_fun_fun_a_b_a_fun_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_fun_tree$)
(declare-fun node$o (A_b_a_fun_fun_a_a_fun_fun_a_b_a_fun_fun_a_b_a_fun_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_fun$ A_b_a_fun_fun_a_a_fun_fun_a_b_a_fun_fun_a_b_a_fun_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_fun_tree$ A_b_a_fun_fun_a_a_fun_fun_a_b_a_fun_fun_a_b_a_fun_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_fun_tree$) A_b_a_fun_fun_a_a_fun_fun_a_b_a_fun_fun_a_b_a_fun_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_fun_tree$)
(declare-fun selecus$ (A_b_a_fun_a_fun_fun_a_b_a_fun_a_fun_fun_fun_a_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_fun_tree$) A_b_a_fun_a_fun_fun_a_b_a_fun_a_fun_fun_fun_a_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_fun$)
(declare-fun selecut$ (A_b_a_fun_a_fun_fun_a_b_a_fun_a_fun_fun_fun_a_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_fun_tree$) A_b_a_fun_a_fun_fun_a_b_a_fun_a_fun_fun_fun_a_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_fun_tree$)
(declare-fun selecuu$ (A_b_a_fun_a_fun_fun_a_b_a_fun_a_fun_fun_fun_a_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_fun_tree$) A_b_a_fun_a_fun_fun_a_b_a_fun_a_fun_fun_fun_a_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_fun_tree$)
(declare-fun node$p (A_b_a_fun_a_fun_fun_a_b_a_fun_a_fun_fun_fun_a_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_fun$ A_b_a_fun_a_fun_fun_a_b_a_fun_a_fun_fun_fun_a_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_fun_tree$ A_b_a_fun_a_fun_fun_a_b_a_fun_a_fun_fun_fun_a_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_fun_tree$) A_b_a_fun_a_fun_fun_a_b_a_fun_a_fun_fun_fun_a_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_fun_tree$)
(declare-fun selecuv$ (A_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_a_b_a_fun_a_fun_fun_a_b_a_fun_a_fun_fun_fun_a_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_fun_fun_tree$) A_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_a_b_a_fun_a_fun_fun_a_b_a_fun_a_fun_fun_fun_a_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_fun_fun$)
(declare-fun selecuw$ (A_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_a_b_a_fun_a_fun_fun_a_b_a_fun_a_fun_fun_fun_a_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_fun_fun_tree$) A_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_a_b_a_fun_a_fun_fun_a_b_a_fun_a_fun_fun_fun_a_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_fun_fun_tree$)
(declare-fun selecux$ (A_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_a_b_a_fun_a_fun_fun_a_b_a_fun_a_fun_fun_fun_a_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_fun_fun_tree$) A_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_a_b_a_fun_a_fun_fun_a_b_a_fun_a_fun_fun_fun_a_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_fun_fun_tree$)
(declare-fun node$q (A_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_a_b_a_fun_a_fun_fun_a_b_a_fun_a_fun_fun_fun_a_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_fun_fun$ A_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_a_b_a_fun_a_fun_fun_a_b_a_fun_a_fun_fun_fun_a_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_fun_fun_tree$ A_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_a_b_a_fun_a_fun_fun_a_b_a_fun_a_fun_fun_fun_a_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_fun_fun_tree$) A_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_a_b_a_fun_a_fun_fun_a_b_a_fun_a_fun_fun_fun_a_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_fun_fun_tree$)
(declare-fun selecuy$ (A_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_a_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_fun_tree$) A_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_a_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_fun$)
(declare-fun selecuz$ (A_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_a_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_fun_tree$) A_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_a_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_fun_tree$)
(declare-fun selecva$ (A_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_a_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_fun_tree$) A_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_a_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_fun_tree$)
(declare-fun node$r (A_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_a_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_fun$ A_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_a_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_fun_tree$ A_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_a_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_fun_tree$) A_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_a_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_fun_tree$)
(declare-fun selecvb$ (A_b_a_fun_fun_a_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_a_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_a_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_fun_fun_tree$) A_b_a_fun_fun_a_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_a_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_a_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_fun_fun$)
(declare-fun selecvc$ (A_b_a_fun_fun_a_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_a_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_a_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_fun_fun_tree$) A_b_a_fun_fun_a_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_a_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_a_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_fun_fun_tree$)
(declare-fun selecvd$ (A_b_a_fun_fun_a_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_a_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_a_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_fun_fun_tree$) A_b_a_fun_fun_a_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_a_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_a_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_fun_fun_tree$)
(declare-fun node$s (A_b_a_fun_fun_a_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_a_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_a_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_fun_fun$ A_b_a_fun_fun_a_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_a_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_a_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_fun_fun_tree$ A_b_a_fun_fun_a_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_a_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_a_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_fun_fun_tree$) A_b_a_fun_fun_a_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_a_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_a_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_fun_fun_tree$)
(declare-fun selecve$ (A_a_fun_a_a_fun_a_a_fun_fun_fun_tree$) A_a_fun_a_a_fun_a_a_fun_fun_fun$)
(declare-fun selecvf$ (A_a_fun_a_a_fun_a_a_fun_fun_fun_tree$) A_a_fun_a_a_fun_a_a_fun_fun_fun_tree$)
(declare-fun selecvg$ (A_a_fun_a_a_fun_a_a_fun_fun_fun_tree$) A_a_fun_a_a_fun_a_a_fun_fun_fun_tree$)
(declare-fun node$t (A_a_fun_a_a_fun_a_a_fun_fun_fun$ A_a_fun_a_a_fun_a_a_fun_fun_fun_tree$ A_a_fun_a_a_fun_a_a_fun_fun_fun_tree$) A_a_fun_a_a_fun_a_a_fun_fun_fun_tree$)
(declare-fun selecvh$ (A_a_fun_a_b_a_fun_fun_fun_tree$) A_a_fun_a_b_a_fun_fun_fun$)
(declare-fun selecvi$ (A_a_fun_a_b_a_fun_fun_fun_tree$) A_a_fun_a_b_a_fun_fun_fun_tree$)
(declare-fun selecvj$ (A_a_fun_a_b_a_fun_fun_fun_tree$) A_a_fun_a_b_a_fun_fun_fun_tree$)
(declare-fun node$u (A_a_fun_a_b_a_fun_fun_fun$ A_a_fun_a_b_a_fun_fun_fun_tree$ A_a_fun_a_b_a_fun_fun_fun_tree$) A_a_fun_a_b_a_fun_fun_fun_tree$)
(declare-fun selecvk$ (A_b_a_fun_fun_a_a_fun_a_b_a_fun_fun_fun_fun_tree$) A_b_a_fun_fun_a_a_fun_a_b_a_fun_fun_fun_fun$)
(declare-fun selecvl$ (A_b_a_fun_fun_a_a_fun_a_b_a_fun_fun_fun_fun_tree$) A_b_a_fun_fun_a_a_fun_a_b_a_fun_fun_fun_fun_tree$)
(declare-fun selecvm$ (A_b_a_fun_fun_a_a_fun_a_b_a_fun_fun_fun_fun_tree$) A_b_a_fun_fun_a_a_fun_a_b_a_fun_fun_fun_fun_tree$)
(declare-fun node$v (A_b_a_fun_fun_a_a_fun_a_b_a_fun_fun_fun_fun$ A_b_a_fun_fun_a_a_fun_a_b_a_fun_fun_fun_fun_tree$ A_b_a_fun_fun_a_a_fun_a_b_a_fun_fun_fun_fun_tree$) A_b_a_fun_fun_a_a_fun_a_b_a_fun_fun_fun_fun_tree$)
(declare-fun selecvn$ (B_a_fun_b_a_fun_fun_tree$) B_a_fun_b_a_fun_fun$)
(declare-fun selecvo$ (B_a_fun_b_a_fun_fun_tree$) B_a_fun_b_a_fun_fun_tree$)
(declare-fun selecvp$ (B_a_fun_b_a_fun_fun_tree$) B_a_fun_b_a_fun_fun_tree$)
(declare-fun node$w (B_a_fun_b_a_fun_fun$ B_a_fun_b_a_fun_fun_tree$ B_a_fun_b_a_fun_fun_tree$) B_a_fun_b_a_fun_fun_tree$)
(declare-fun selecvq$ (B_a_fun_b_a_fun_fun_a_b_a_fun_fun_a_b_a_fun_fun_fun_fun_tree$) B_a_fun_b_a_fun_fun_a_b_a_fun_fun_a_b_a_fun_fun_fun_fun$)
(declare-fun selecvr$ (B_a_fun_b_a_fun_fun_a_b_a_fun_fun_a_b_a_fun_fun_fun_fun_tree$) B_a_fun_b_a_fun_fun_a_b_a_fun_fun_a_b_a_fun_fun_fun_fun_tree$)
(declare-fun selecvs$ (B_a_fun_b_a_fun_fun_a_b_a_fun_fun_a_b_a_fun_fun_fun_fun_tree$) B_a_fun_b_a_fun_fun_a_b_a_fun_fun_a_b_a_fun_fun_fun_fun_tree$)
(declare-fun node$x (B_a_fun_b_a_fun_fun_a_b_a_fun_fun_a_b_a_fun_fun_fun_fun$ B_a_fun_b_a_fun_fun_a_b_a_fun_fun_a_b_a_fun_fun_fun_fun_tree$ B_a_fun_b_a_fun_fun_a_b_a_fun_fun_a_b_a_fun_fun_fun_fun_tree$) B_a_fun_b_a_fun_fun_a_b_a_fun_fun_a_b_a_fun_fun_fun_fun_tree$)
(declare-fun selecvt$ (A_a_fun_a_a_fun_fun_a_a_fun_a_a_fun_fun_fun_tree$) A_a_fun_a_a_fun_fun_a_a_fun_a_a_fun_fun_fun$)
(declare-fun selecvu$ (A_a_fun_a_a_fun_fun_a_a_fun_a_a_fun_fun_fun_tree$) A_a_fun_a_a_fun_fun_a_a_fun_a_a_fun_fun_fun_tree$)
(declare-fun selecvv$ (A_a_fun_a_a_fun_fun_a_a_fun_a_a_fun_fun_fun_tree$) A_a_fun_a_a_fun_fun_a_a_fun_a_a_fun_fun_fun_tree$)
(declare-fun node$y (A_a_fun_a_a_fun_fun_a_a_fun_a_a_fun_fun_fun$ A_a_fun_a_a_fun_fun_a_a_fun_a_a_fun_fun_fun_tree$ A_a_fun_a_a_fun_fun_a_a_fun_a_a_fun_fun_fun_tree$) A_a_fun_a_a_fun_fun_a_a_fun_a_a_fun_fun_fun_tree$)
(declare-fun selecvw$ (A_a_fun_a_a_fun_fun_a_a_fun_a_a_fun_fun_a_a_fun_a_a_fun_fun_fun_fun_tree$) A_a_fun_a_a_fun_fun_a_a_fun_a_a_fun_fun_a_a_fun_a_a_fun_fun_fun_fun$)
(declare-fun selecvx$ (A_a_fun_a_a_fun_fun_a_a_fun_a_a_fun_fun_a_a_fun_a_a_fun_fun_fun_fun_tree$) A_a_fun_a_a_fun_fun_a_a_fun_a_a_fun_fun_a_a_fun_a_a_fun_fun_fun_fun_tree$)
(declare-fun selecvy$ (A_a_fun_a_a_fun_fun_a_a_fun_a_a_fun_fun_a_a_fun_a_a_fun_fun_fun_fun_tree$) A_a_fun_a_a_fun_fun_a_a_fun_a_a_fun_fun_a_a_fun_a_a_fun_fun_fun_fun_tree$)
(declare-fun node$z (A_a_fun_a_a_fun_fun_a_a_fun_a_a_fun_fun_a_a_fun_a_a_fun_fun_fun_fun$ A_a_fun_a_a_fun_fun_a_a_fun_a_a_fun_fun_a_a_fun_a_a_fun_fun_fun_fun_tree$ A_a_fun_a_a_fun_fun_a_a_fun_a_a_fun_fun_a_a_fun_a_a_fun_fun_fun_fun_tree$) A_a_fun_a_a_fun_fun_a_a_fun_a_a_fun_fun_a_a_fun_a_a_fun_fun_fun_fun_tree$)
(declare-fun selecvz$ (B_a_fun_a_fun_b_a_fun_a_fun_fun_tree$) B_a_fun_a_fun_b_a_fun_a_fun_fun$)
(declare-fun selecwa$ (B_a_fun_a_fun_b_a_fun_a_fun_fun_tree$) B_a_fun_a_fun_b_a_fun_a_fun_fun_tree$)
(declare-fun selecwb$ (B_a_fun_a_fun_b_a_fun_a_fun_fun_tree$) B_a_fun_a_fun_b_a_fun_a_fun_fun_tree$)
(declare-fun node$aa (B_a_fun_a_fun_b_a_fun_a_fun_fun$ B_a_fun_a_fun_b_a_fun_a_fun_fun_tree$ B_a_fun_a_fun_b_a_fun_a_fun_fun_tree$) B_a_fun_a_fun_b_a_fun_a_fun_fun_tree$)
(declare-fun selecwc$ (B_a_fun_a_fun_b_a_fun_a_fun_fun_a_b_a_fun_a_fun_fun_a_b_a_fun_a_fun_fun_fun_fun_tree$) B_a_fun_a_fun_b_a_fun_a_fun_fun_a_b_a_fun_a_fun_fun_a_b_a_fun_a_fun_fun_fun_fun$)
(declare-fun selecwd$ (B_a_fun_a_fun_b_a_fun_a_fun_fun_a_b_a_fun_a_fun_fun_a_b_a_fun_a_fun_fun_fun_fun_tree$) B_a_fun_a_fun_b_a_fun_a_fun_fun_a_b_a_fun_a_fun_fun_a_b_a_fun_a_fun_fun_fun_fun_tree$)
(declare-fun selecwe$ (B_a_fun_a_fun_b_a_fun_a_fun_fun_a_b_a_fun_a_fun_fun_a_b_a_fun_a_fun_fun_fun_fun_tree$) B_a_fun_a_fun_b_a_fun_a_fun_fun_a_b_a_fun_a_fun_fun_a_b_a_fun_a_fun_fun_fun_fun_tree$)
(declare-fun node$ab (B_a_fun_a_fun_b_a_fun_a_fun_fun_a_b_a_fun_a_fun_fun_a_b_a_fun_a_fun_fun_fun_fun$ B_a_fun_a_fun_b_a_fun_a_fun_fun_a_b_a_fun_a_fun_fun_a_b_a_fun_a_fun_fun_fun_fun_tree$ B_a_fun_a_fun_b_a_fun_a_fun_fun_a_b_a_fun_a_fun_fun_a_b_a_fun_a_fun_fun_fun_fun_tree$) B_a_fun_a_fun_b_a_fun_a_fun_fun_a_b_a_fun_a_fun_fun_a_b_a_fun_a_fun_fun_fun_fun_tree$)
(declare-fun selecwf$ (A_b_a_fun_a_fun_fun_a_a_fun_fun_tree$) A_b_a_fun_a_fun_fun_a_a_fun_fun$)
(declare-fun selecwg$ (A_b_a_fun_a_fun_fun_a_a_fun_fun_tree$) A_b_a_fun_a_fun_fun_a_a_fun_fun_tree$)
(declare-fun selecwh$ (A_b_a_fun_a_fun_fun_a_a_fun_fun_tree$) A_b_a_fun_a_fun_fun_a_a_fun_fun_tree$)
(declare-fun node$ac (A_b_a_fun_a_fun_fun_a_a_fun_fun$ A_b_a_fun_a_fun_fun_a_a_fun_fun_tree$ A_b_a_fun_a_fun_fun_a_a_fun_fun_tree$) A_b_a_fun_a_fun_fun_a_a_fun_fun_tree$)
(declare-fun selecwi$ (A_a_fun_a_b_a_fun_a_fun_fun_fun_tree$) A_a_fun_a_b_a_fun_a_fun_fun_fun$)
(declare-fun selecwj$ (A_a_fun_a_b_a_fun_a_fun_fun_fun_tree$) A_a_fun_a_b_a_fun_a_fun_fun_fun_tree$)
(declare-fun selecwk$ (A_a_fun_a_b_a_fun_a_fun_fun_fun_tree$) A_a_fun_a_b_a_fun_a_fun_fun_fun_tree$)
(declare-fun node$ad (A_a_fun_a_b_a_fun_a_fun_fun_fun$ A_a_fun_a_b_a_fun_a_fun_fun_fun_tree$ A_a_fun_a_b_a_fun_a_fun_fun_fun_tree$) A_a_fun_a_b_a_fun_a_fun_fun_fun_tree$)
(declare-fun selecwl$ (A_b_a_fun_fun_b_a_fun_fun_tree$) A_b_a_fun_fun_b_a_fun_fun$)
(declare-fun selecwm$ (A_b_a_fun_fun_b_a_fun_fun_tree$) A_b_a_fun_fun_b_a_fun_fun_tree$)
(declare-fun selecwn$ (A_b_a_fun_fun_b_a_fun_fun_tree$) A_b_a_fun_fun_b_a_fun_fun_tree$)
(declare-fun node$ae (A_b_a_fun_fun_b_a_fun_fun$ A_b_a_fun_fun_b_a_fun_fun_tree$ A_b_a_fun_fun_b_a_fun_fun_tree$) A_b_a_fun_fun_b_a_fun_fun_tree$)
(declare-fun selecwo$ (A_a_fun_a_fun_tree$) A_a_fun_a_fun$)
(declare-fun selecwp$ (A_a_fun_a_fun_tree$) A_a_fun_a_fun_tree$)
(declare-fun selecwq$ (A_a_fun_a_fun_tree$) A_a_fun_a_fun_tree$)
(declare-fun node$af (A_a_fun_a_fun$ A_a_fun_a_fun_tree$ A_a_fun_a_fun_tree$) A_a_fun_a_fun_tree$)
(declare-fun selecwr$ (A_b_a_fun_a_fun_fun_a_b_a_fun_a_fun_fun_fun_a_b_a_fun_a_fun_fun_fun_tree$) A_b_a_fun_a_fun_fun_a_b_a_fun_a_fun_fun_fun_a_b_a_fun_a_fun_fun_fun$)
(declare-fun selecws$ (A_b_a_fun_a_fun_fun_a_b_a_fun_a_fun_fun_fun_a_b_a_fun_a_fun_fun_fun_tree$) A_b_a_fun_a_fun_fun_a_b_a_fun_a_fun_fun_fun_a_b_a_fun_a_fun_fun_fun_tree$)
(declare-fun selecwt$ (A_b_a_fun_a_fun_fun_a_b_a_fun_a_fun_fun_fun_a_b_a_fun_a_fun_fun_fun_tree$) A_b_a_fun_a_fun_fun_a_b_a_fun_a_fun_fun_fun_a_b_a_fun_a_fun_fun_fun_tree$)
(declare-fun node$ag (A_b_a_fun_a_fun_fun_a_b_a_fun_a_fun_fun_fun_a_b_a_fun_a_fun_fun_fun$ A_b_a_fun_a_fun_fun_a_b_a_fun_a_fun_fun_fun_a_b_a_fun_a_fun_fun_fun_tree$ A_b_a_fun_a_fun_fun_a_b_a_fun_a_fun_fun_fun_a_b_a_fun_a_fun_fun_fun_tree$) A_b_a_fun_a_fun_fun_a_b_a_fun_a_fun_fun_fun_a_b_a_fun_a_fun_fun_fun_tree$)
(declare-fun selecwu$ (A_b_a_fun_fun_a_b_a_fun_fun_fun_a_b_a_fun_fun_fun_tree$) A_b_a_fun_fun_a_b_a_fun_fun_fun_a_b_a_fun_fun_fun$)
(declare-fun selecwv$ (A_b_a_fun_fun_a_b_a_fun_fun_fun_a_b_a_fun_fun_fun_tree$) A_b_a_fun_fun_a_b_a_fun_fun_fun_a_b_a_fun_fun_fun_tree$)
(declare-fun selecww$ (A_b_a_fun_fun_a_b_a_fun_fun_fun_a_b_a_fun_fun_fun_tree$) A_b_a_fun_fun_a_b_a_fun_fun_fun_a_b_a_fun_fun_fun_tree$)
(declare-fun node$ah (A_b_a_fun_fun_a_b_a_fun_fun_fun_a_b_a_fun_fun_fun$ A_b_a_fun_fun_a_b_a_fun_fun_fun_a_b_a_fun_fun_fun_tree$ A_b_a_fun_fun_a_b_a_fun_fun_fun_a_b_a_fun_fun_fun_tree$) A_b_a_fun_fun_a_b_a_fun_fun_fun_a_b_a_fun_fun_fun_tree$)
(declare-fun selecwx$ (A_a_fun_a_a_fun_fun_a_a_fun_fun_tree$) A_a_fun_a_a_fun_fun_a_a_fun_fun$)
(declare-fun selecwy$ (A_a_fun_a_a_fun_fun_a_a_fun_fun_tree$) A_a_fun_a_a_fun_fun_a_a_fun_fun_tree$)
(declare-fun selecwz$ (A_a_fun_a_a_fun_fun_a_a_fun_fun_tree$) A_a_fun_a_a_fun_fun_a_a_fun_fun_tree$)
(declare-fun node$ai (A_a_fun_a_a_fun_fun_a_a_fun_fun$ A_a_fun_a_a_fun_fun_a_a_fun_fun_tree$ A_a_fun_a_a_fun_fun_a_a_fun_fun_tree$) A_a_fun_a_a_fun_fun_a_a_fun_fun_tree$)
(declare-fun selecxa$ (A_b_a_fun_fun_a_a_fun_fun_a_a_fun_fun_tree$) A_b_a_fun_fun_a_a_fun_fun_a_a_fun_fun$)
(declare-fun selecxb$ (A_b_a_fun_fun_a_a_fun_fun_a_a_fun_fun_tree$) A_b_a_fun_fun_a_a_fun_fun_a_a_fun_fun_tree$)
(declare-fun selecxc$ (A_b_a_fun_fun_a_a_fun_fun_a_a_fun_fun_tree$) A_b_a_fun_fun_a_a_fun_fun_a_a_fun_fun_tree$)
(declare-fun node$aj (A_b_a_fun_fun_a_a_fun_fun_a_a_fun_fun$ A_b_a_fun_fun_a_a_fun_fun_a_a_fun_fun_tree$ A_b_a_fun_fun_a_a_fun_fun_a_a_fun_fun_tree$) A_b_a_fun_fun_a_a_fun_fun_a_a_fun_fun_tree$)
(declare-fun selecxd$ (A_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_tree$) A_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun$)
(declare-fun selecxe$ (A_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_tree$) A_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_tree$)
(declare-fun selecxf$ (A_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_tree$) A_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_tree$)
(declare-fun node$ak (A_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun$ A_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_tree$ A_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_tree$) A_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_tree$)
(declare-fun id$ () A_a_fun$)
(declare-fun uu$ () A_b_a_fun_a_fun_fun$)
(declare-fun id$a () A_tree_a_tree_fun$)
(declare-fun id$b () A_b_a_fun_a_fun_fun_a_b_a_fun_a_fun_fun_fun$)
(declare-fun id$c () A_b_a_fun_fun_a_b_a_fun_fun_fun$)
(declare-fun id$d () A_a_fun_a_a_fun_fun$)
(declare-fun id$e () A_b_a_fun_fun_a_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun$)
(declare-fun id$f () A_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_a_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_fun$)
(declare-fun uua$ () A_b_a_fun_fun$)
(declare-fun uub$ (A$) A_b_a_fun_fun_b_a_fun_fun$)
(declare-fun uuc$ (A$) A_a_fun_a_fun$)
(declare-fun uud$ (A_b_a_fun_a_fun_fun$) A_b_a_fun_a_fun_fun_a_b_a_fun_a_fun_fun_fun_a_b_a_fun_a_fun_fun_fun$)
(declare-fun uue$ (A_b_a_fun_fun$) A_b_a_fun_fun_a_b_a_fun_fun_fun_a_b_a_fun_fun_fun$)
(declare-fun uuf$ (A_a_fun$) A_a_fun_a_a_fun_fun_a_a_fun_fun$)
(declare-fun uug$ (A_b_a_fun_fun$) A_b_a_fun_fun_a_a_fun_fun_a_a_fun_fun$)
(declare-fun uuh$ (A_b_a_fun_a_fun_fun$) A_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun$)
(declare-fun uui$ () A_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun$)
(declare-fun uuj$ () A_b_a_fun_fun_a_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_tree_a_b_a_fun_fun_a_a_fun_fun_tree_a_b_a_fun_fun_a_a_fun_fun_tree_fun_fun_fun$)
(declare-fun uuk$ () A_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_a_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_tree_a_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_tree_a_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_tree_fun_fun_fun$)
(declare-fun uul$ () A_b_a_fun_a_fun_fun_a_b_a_fun_a_fun_fun_tree_a_b_a_fun_a_fun_fun_tree_a_b_a_fun_a_fun_fun_tree_fun_fun_fun$)
(declare-fun uum$ () A_a_fun_a_a_fun_tree_a_a_fun_tree_a_a_fun_tree_fun_fun_fun$)
(declare-fun uun$ () A_b_a_fun_fun_a_b_a_fun_fun_tree_a_b_a_fun_fun_tree_a_b_a_fun_fun_tree_fun_fun_fun$)
(declare-fun uuo$ () A_b_a_fun_fun_a_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_tree_a_b_a_fun_fun_a_a_fun_fun_tree_a_b_a_fun_fun_a_a_fun_fun_tree_fun_fun_fun$)
(declare-fun uup$ () A_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_a_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_tree_a_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_tree_a_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_tree_fun_fun_fun$)
(declare-fun uuq$ () A_b_a_fun_a_fun_fun_a_b_a_fun_a_fun_fun_tree_a_b_a_fun_a_fun_fun_tree_a_b_a_fun_a_fun_fun_tree_fun_fun_fun$)
(declare-fun uur$ () A_a_fun_a_a_fun_tree_a_a_fun_tree_a_a_fun_tree_fun_fun_fun$)
(declare-fun uus$ () A_b_a_fun_fun_a_b_a_fun_fun_tree_a_b_a_fun_fun_tree_a_b_a_fun_fun_tree_fun_fun_fun$)
(declare-fun uut$ () A_b_a_fun_fun_a_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_tree_a_b_a_fun_fun_a_a_fun_fun_tree_a_b_a_fun_fun_a_a_fun_fun_fun_fun_fun$)
(declare-fun uuu$ () A_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_a_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_tree_a_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_tree_a_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_fun_fun_fun$)
(declare-fun uuv$ () A_b_a_fun_a_fun_fun_a_b_a_fun_a_fun_fun_tree_a_b_a_fun_a_fun_fun_tree_a_b_a_fun_a_fun_fun_fun_fun_fun$)
(declare-fun uuw$ () A_a_fun_a_a_fun_tree_a_a_fun_tree_a_a_fun_fun_fun_fun$)
(declare-fun uux$ () A_b_a_fun_fun_a_b_a_fun_fun_tree_a_b_a_fun_fun_tree_a_b_a_fun_fun_fun_fun_fun$)
(declare-fun comp$ () B_a_fun_a_fun_a_b_a_fun_fun_a_a_fun_fun_fun$)
(declare-fun comp$a () A_a_fun_a_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_fun$)
(declare-fun comp$b () A_b_a_fun_fun_a_a_fun_fun_a_b_a_fun_fun_a_b_a_fun_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_fun$)
(declare-fun comp$c () A_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_a_b_a_fun_a_fun_fun_a_b_a_fun_a_fun_fun_fun_a_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_fun_fun$)
(declare-fun comp$d () A_b_a_fun_fun_a_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_a_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_a_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_fun_fun$)
(declare-fun comp$e () A_a_fun_a_a_fun_a_a_fun_fun_fun$)
(declare-fun comp$f () A_b_a_fun_fun_a_a_fun_a_b_a_fun_fun_fun_fun$)
(declare-fun comp$g () B_a_fun_b_a_fun_fun_a_b_a_fun_fun_a_b_a_fun_fun_fun_fun$)
(declare-fun comp$h () A_a_fun_a_a_fun_fun_a_a_fun_a_a_fun_fun_a_a_fun_a_a_fun_fun_fun_fun$)
(declare-fun comp$i () B_a_fun_a_fun_b_a_fun_a_fun_fun_a_b_a_fun_a_fun_fun_a_b_a_fun_a_fun_fun_fun_fun$)
(declare-fun comp$j (B_a_fun_tree_a_tree_fun$ A_tree_b_a_fun_tree_fun$) A_tree_a_tree_fun$)
(declare-fun comp$k (A_b_a_fun_fun_a_a_fun_fun_tree_a_b_a_fun_fun_a_a_fun_fun_tree_fun$ A_b_a_fun_a_fun_fun_tree_a_b_a_fun_fun_a_a_fun_fun_tree_fun$) A_b_a_fun_a_fun_fun_tree_a_b_a_fun_fun_a_a_fun_fun_tree_fun$)
(declare-fun comp$l (A_b_a_fun_a_fun_fun_tree_a_b_a_fun_fun_a_a_fun_fun_tree_fun$ A_b_a_fun_a_fun_fun_tree_a_b_a_fun_a_fun_fun_tree_fun$) A_b_a_fun_a_fun_fun_tree_a_b_a_fun_fun_a_a_fun_fun_tree_fun$)
(declare-fun comp$m (A_a_fun_tree_a_a_fun_tree_fun$ A_b_a_fun_fun_tree_a_a_fun_tree_fun$) A_b_a_fun_fun_tree_a_a_fun_tree_fun$)
(declare-fun comp$n (A_b_a_fun_fun_tree_a_a_fun_tree_fun$ A_b_a_fun_fun_tree_a_b_a_fun_fun_tree_fun$) A_b_a_fun_fun_tree_a_a_fun_tree_fun$)
(declare-fun comp$o (A_a_fun$) B_a_fun_a_fun_b_a_fun_a_fun_fun$)
(declare-fun comp$p (B_a_fun_a_fun$) B_a_fun_b_a_fun_fun_b_a_fun_a_fun_fun$)
(declare-fun comp$q (A_b_a_fun_fun_a_a_fun_fun$) A_a_fun_a_b_a_fun_fun_fun_a_a_fun_a_a_fun_fun_fun$)
(declare-fun comp$r (A_a_fun_a_b_a_fun_fun_fun$) A_b_a_fun_fun_a_a_fun_fun_a_b_a_fun_fun_a_b_a_fun_fun_fun_fun$)
(declare-fun comp$s (A_b_a_fun_fun_a_b_a_fun_fun_fun$) A_b_a_fun_fun_a_b_a_fun_fun_fun_a_b_a_fun_fun_a_b_a_fun_fun_fun_fun$)
(declare-fun comp$t (A_b_a_fun_a_fun_fun_a_b_a_fun_a_fun_fun_fun$) A_b_a_fun_a_fun_fun_a_b_a_fun_a_fun_fun_fun_a_b_a_fun_a_fun_fun_a_b_a_fun_a_fun_fun_fun_fun$)
(declare-fun comp$u (A_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun$) A_b_a_fun_fun_a_a_fun_fun_a_b_a_fun_a_fun_fun_fun_a_b_a_fun_fun_a_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_fun$)
(declare-fun comp$v (A_b_a_fun_fun_a_a_fun_fun_a_b_a_fun_a_fun_fun_fun$) A_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_a_b_a_fun_a_fun_fun_a_b_a_fun_a_fun_fun_fun_fun$)
(declare-fun left$a (A_a_fun_tree$) A_a_fun_tree$)
(declare-fun left$b (A_b_a_fun_fun_a_a_fun_fun_tree$) A_b_a_fun_fun_a_a_fun_fun_tree$)
(declare-fun left$c (A_b_a_fun_fun_tree$) A_b_a_fun_fun_tree$)
(declare-fun left$d (A_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_tree$) A_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_tree$)
(declare-fun left$e (A_b_a_fun_a_fun_fun_tree$) A_b_a_fun_a_fun_fun_tree$)
(declare-fun left$f (B_a_fun_tree$) B_a_fun_tree$)
(declare-fun left$g (B_a_fun_a_fun_tree$) B_a_fun_a_fun_tree$)
(declare-fun left$h (A_a_fun_a_a_fun_fun_tree$) A_a_fun_a_a_fun_fun_tree$)
(declare-fun left$i (A_a_fun_a_b_a_fun_fun_fun_tree$) A_a_fun_a_b_a_fun_fun_fun_tree$)
(declare-fun left$j (A_a_fun_a_b_a_fun_a_fun_fun_fun_tree$) A_a_fun_a_b_a_fun_a_fun_fun_fun_tree$)
(declare-fun left$k (A_b_a_fun_a_fun_fun_a_a_fun_fun_tree$) A_b_a_fun_a_fun_fun_a_a_fun_fun_tree$)
(declare-fun left$l (A_b_a_fun_fun_a_b_a_fun_fun_fun_tree$) A_b_a_fun_fun_a_b_a_fun_fun_fun_tree$)
(declare-fun root$a (A_a_fun_tree$) A_a_fun$)
(declare-fun root$b (A_b_a_fun_fun_a_a_fun_fun_tree$) A_b_a_fun_fun_a_a_fun_fun$)
(declare-fun root$c (A_b_a_fun_fun_tree$) A_b_a_fun_fun$)
(declare-fun root$d (A_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_tree$) A_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun$)
(declare-fun root$e (A_b_a_fun_a_fun_fun_tree$) A_b_a_fun_a_fun_fun$)
(declare-fun root$f (B_a_fun_tree$) B_a_fun$)
(declare-fun root$g (B_a_fun_a_fun_tree$) B_a_fun_a_fun$)
(declare-fun root$h (A_a_fun_a_a_fun_fun_tree$) A_a_fun_a_a_fun_fun$)
(declare-fun root$i (A_a_fun_a_b_a_fun_fun_fun_tree$) A_a_fun_a_b_a_fun_fun_fun$)
(declare-fun root$j (A_a_fun_a_b_a_fun_a_fun_fun_fun_tree$) A_a_fun_a_b_a_fun_a_fun_fun_fun$)
(declare-fun root$k (A_b_a_fun_a_fun_fun_a_a_fun_fun_tree$) A_b_a_fun_a_fun_fun_a_a_fun_fun$)
(declare-fun root$l (A_b_a_fun_fun_a_b_a_fun_fun_fun_tree$) A_b_a_fun_fun_a_b_a_fun_fun_fun$)
(declare-fun i_tree$ () A_a_fun_tree$)
(declare-fun k_tree$ () A_b_a_fun_a_fun_fun_tree$)
(declare-fun right$a (A_a_fun_tree$) A_a_fun_tree$)
(declare-fun right$b (A_b_a_fun_fun_a_a_fun_fun_tree$) A_b_a_fun_fun_a_a_fun_fun_tree$)
(declare-fun right$c (A_b_a_fun_fun_tree$) A_b_a_fun_fun_tree$)
(declare-fun right$d (A_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_tree$) A_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_tree$)
(declare-fun right$e (A_b_a_fun_a_fun_fun_tree$) A_b_a_fun_a_fun_fun_tree$)
(declare-fun right$f (B_a_fun_tree$) B_a_fun_tree$)
(declare-fun right$g (B_a_fun_a_fun_tree$) B_a_fun_a_fun_tree$)
(declare-fun right$h (A_a_fun_a_a_fun_fun_tree$) A_a_fun_a_a_fun_fun_tree$)
(declare-fun right$i (A_a_fun_a_b_a_fun_fun_fun_tree$) A_a_fun_a_b_a_fun_fun_fun_tree$)
(declare-fun right$j (A_a_fun_a_b_a_fun_a_fun_fun_fun_tree$) A_a_fun_a_b_a_fun_a_fun_fun_fun_tree$)
(declare-fun right$k (A_b_a_fun_a_fun_fun_a_a_fun_fun_tree$) A_b_a_fun_a_fun_fun_a_a_fun_fun_tree$)
(declare-fun right$l (A_b_a_fun_fun_a_b_a_fun_fun_fun_tree$) A_b_a_fun_fun_a_b_a_fun_fun_fun_tree$)
(declare-fun s_tree$ () A_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_tree$)
(declare-fun ap_tree$ (A_b_a_fun_fun_a_a_fun_fun_tree$ A_b_a_fun_fun_tree$) A_a_fun_tree$)
(declare-fun fun_app$ (A_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun$ A_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun$) A_b_a_fun_fun_a_a_fun_fun$)
(declare-fun k_tree$a () A_b_a_fun_fun_tree$)
(declare-fun ap_tree$a (A_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_tree$ A_b_a_fun_a_fun_fun_tree$) A_b_a_fun_fun_a_a_fun_fun_tree$)
(declare-fun ap_tree$b (A_b_a_fun_a_fun_fun_a_b_a_fun_a_fun_fun_fun_tree$ A_b_a_fun_a_fun_fun_tree$) A_b_a_fun_a_fun_fun_tree$)
(declare-fun ap_tree$c (A_b_a_fun_fun_a_b_a_fun_fun_fun_tree$ A_b_a_fun_fun_tree$) A_b_a_fun_fun_tree$)
(declare-fun ap_tree$d (A_a_fun_a_a_fun_fun_tree$ A_a_fun_tree$) A_a_fun_tree$)
(declare-fun ap_tree$e (A_b_a_fun_fun_tree$ A_tree$) B_a_fun_tree$)
(declare-fun ap_tree$f (A_a_fun_tree$ A_tree$) A_tree$)
(declare-fun ap_tree$g (B_a_fun_a_fun_a_b_a_fun_fun_a_a_fun_fun_fun_tree$ B_a_fun_a_fun_tree$) A_b_a_fun_fun_a_a_fun_fun_tree$)
(declare-fun ap_tree$h (B_a_fun_a_fun_tree$ B_a_fun_tree$) A_tree$)
(declare-fun ap_tree$i (A_b_a_fun_fun_a_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_tree$ A_b_a_fun_fun_a_a_fun_fun_tree$) A_b_a_fun_fun_a_a_fun_fun_tree$)
(declare-fun ap_tree$j (A_a_fun_a_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_fun_tree$ A_a_fun_a_a_fun_fun_tree$) A_b_a_fun_fun_a_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_tree$)
(declare-fun ap_tree$k (A_b_a_fun_fun_a_b_a_fun_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_tree$ A_b_a_fun_fun_a_b_a_fun_fun_fun_tree$) A_b_a_fun_fun_a_a_fun_fun_tree$)
(declare-fun ap_tree$l (A_b_a_fun_fun_a_a_fun_fun_a_b_a_fun_fun_a_b_a_fun_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_fun_tree$ A_b_a_fun_fun_a_a_fun_fun_tree$) A_b_a_fun_fun_a_b_a_fun_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_tree$)
(declare-fun ap_tree$m (A_b_a_fun_a_fun_fun_a_b_a_fun_a_fun_fun_fun_a_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_fun_tree$ A_b_a_fun_a_fun_fun_a_b_a_fun_a_fun_fun_fun_tree$) A_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_tree$)
(declare-fun ap_tree$n (A_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_a_b_a_fun_a_fun_fun_a_b_a_fun_a_fun_fun_fun_a_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_fun_fun_tree$ A_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_tree$) A_b_a_fun_a_fun_fun_a_b_a_fun_a_fun_fun_fun_a_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_fun_tree$)
(declare-fun ap_tree$o (A_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_a_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_fun_tree$ A_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_tree$) A_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_tree$)
(declare-fun ap_tree$p (A_b_a_fun_fun_a_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_a_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_a_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_fun_fun_tree$ A_b_a_fun_fun_a_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_tree$) A_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_a_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_fun_tree$)
(declare-fun ap_tree$q (A_a_fun_a_a_fun_a_a_fun_fun_fun_tree$ A_a_fun_tree$) A_a_fun_a_a_fun_fun_tree$)
(declare-fun ap_tree$r (A_a_fun_a_b_a_fun_fun_fun_tree$ A_a_fun_tree$) A_b_a_fun_fun_tree$)
(declare-fun ap_tree$s (A_b_a_fun_fun_a_a_fun_a_b_a_fun_fun_fun_fun_tree$ A_b_a_fun_fun_tree$) A_a_fun_a_b_a_fun_fun_fun_tree$)
(declare-fun ap_tree$t (B_a_fun_b_a_fun_fun_a_b_a_fun_fun_a_b_a_fun_fun_fun_fun_tree$ B_a_fun_b_a_fun_fun_tree$) A_b_a_fun_fun_a_b_a_fun_fun_fun_tree$)
(declare-fun ap_tree$u (B_a_fun_b_a_fun_fun_tree$ B_a_fun_tree$) B_a_fun_tree$)
(declare-fun ap_tree$v (A_a_fun_a_a_fun_fun_a_a_fun_a_a_fun_fun_fun_tree$ A_a_fun_a_a_fun_fun_tree$) A_a_fun_a_a_fun_fun_tree$)
(declare-fun ap_tree$w (A_a_fun_a_a_fun_fun_a_a_fun_a_a_fun_fun_a_a_fun_a_a_fun_fun_fun_fun_tree$ A_a_fun_a_a_fun_fun_tree$) A_a_fun_a_a_fun_fun_a_a_fun_a_a_fun_fun_fun_tree$)
(declare-fun ap_tree$x (A_b_a_fun_a_fun_fun_tree$ A_tree$) B_a_fun_a_fun_tree$)
(declare-fun ap_tree$y (B_a_fun_a_fun_b_a_fun_a_fun_fun_a_b_a_fun_a_fun_fun_a_b_a_fun_a_fun_fun_fun_fun_tree$ B_a_fun_a_fun_b_a_fun_a_fun_fun_tree$) A_b_a_fun_a_fun_fun_a_b_a_fun_a_fun_fun_fun_tree$)
(declare-fun ap_tree$z (B_a_fun_a_fun_b_a_fun_a_fun_fun_tree$ B_a_fun_a_fun_tree$) B_a_fun_a_fun_tree$)
(declare-fun fun_app$a (A_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun$ A_b_a_fun_a_fun_fun$) A_b_a_fun_fun_a_a_fun_fun$)
(declare-fun fun_app$b (A_b_a_fun_a_fun_fun_a_b_a_fun_a_fun_fun_fun_a_b_a_fun_a_fun_fun_fun$ A_b_a_fun_a_fun_fun_a_b_a_fun_a_fun_fun_fun$) A_b_a_fun_a_fun_fun$)
(declare-fun fun_app$c (A_b_a_fun_a_fun_fun_a_b_a_fun_a_fun_fun_fun$ A_b_a_fun_a_fun_fun$) A_b_a_fun_a_fun_fun$)
(declare-fun fun_app$d (A_b_a_fun_fun_a_b_a_fun_fun_fun_a_b_a_fun_fun_fun$ A_b_a_fun_fun_a_b_a_fun_fun_fun$) A_b_a_fun_fun$)
(declare-fun fun_app$e (A_b_a_fun_fun_a_b_a_fun_fun_fun$ A_b_a_fun_fun$) A_b_a_fun_fun$)
(declare-fun fun_app$f (A_b_a_fun_fun_a_a_fun_fun_a_a_fun_fun$ A_b_a_fun_fun_a_a_fun_fun$) A_a_fun$)
(declare-fun fun_app$g (A_b_a_fun_fun_a_a_fun_fun$ A_b_a_fun_fun$) A_a_fun$)
(declare-fun fun_app$h (A_a_fun_a_a_fun_fun_a_a_fun_fun$ A_a_fun_a_a_fun_fun$) A_a_fun$)
(declare-fun fun_app$i (A_a_fun_a_a_fun_fun$ A_a_fun$) A_a_fun$)
(declare-fun fun_app$j (A_b_a_fun_fun_b_a_fun_fun$ A_b_a_fun_fun$) B_a_fun$)
(declare-fun fun_app$k (A_b_a_fun_fun$ A$) B_a_fun$)
(declare-fun fun_app$l (A_a_fun_a_fun$ A_a_fun$) A$)
(declare-fun fun_app$m (A_a_fun$ A$) A$)
(declare-fun fun_app$n (B_a_fun_a_fun$ B_a_fun$) A$)
(declare-fun fun_app$o (A_b_a_fun_a_fun_fun$ A$) B_a_fun_a_fun$)
(declare-fun fun_app$p (A_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_tree_a_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_fun$ A_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_tree$) A_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun$)
(declare-fun fun_app$q (A_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_tree_a_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_tree_a_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_fun_fun$ A_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_tree$) A_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_tree_a_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_fun$)
(declare-fun fun_app$r (A_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_a_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_tree_a_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_tree_a_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_fun_fun_fun$ A_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun$) A_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_tree_a_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_tree_a_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_fun_fun$)
(declare-fun fun_app$s (A_b_a_fun_fun_a_a_fun_fun_tree_a_b_a_fun_fun_a_a_fun_fun_fun$ A_b_a_fun_fun_a_a_fun_fun_tree$) A_b_a_fun_fun_a_a_fun_fun$)
(declare-fun fun_app$t (A_b_a_fun_fun_a_a_fun_fun_tree_a_b_a_fun_fun_a_a_fun_fun_tree_a_b_a_fun_fun_a_a_fun_fun_fun_fun$ A_b_a_fun_fun_a_a_fun_fun_tree$) A_b_a_fun_fun_a_a_fun_fun_tree_a_b_a_fun_fun_a_a_fun_fun_fun$)
(declare-fun fun_app$u (A_b_a_fun_fun_a_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_tree_a_b_a_fun_fun_a_a_fun_fun_tree_a_b_a_fun_fun_a_a_fun_fun_fun_fun_fun$ A_b_a_fun_fun_a_a_fun_fun$) A_b_a_fun_fun_a_a_fun_fun_tree_a_b_a_fun_fun_a_a_fun_fun_tree_a_b_a_fun_fun_a_a_fun_fun_fun_fun$)
(declare-fun fun_app$v (A_b_a_fun_a_fun_fun_tree_a_b_a_fun_a_fun_fun_fun$ A_b_a_fun_a_fun_fun_tree$) A_b_a_fun_a_fun_fun$)
(declare-fun fun_app$w (A_b_a_fun_a_fun_fun_tree_a_b_a_fun_a_fun_fun_tree_a_b_a_fun_a_fun_fun_fun_fun$ A_b_a_fun_a_fun_fun_tree$) A_b_a_fun_a_fun_fun_tree_a_b_a_fun_a_fun_fun_fun$)
(declare-fun fun_app$x (A_b_a_fun_a_fun_fun_a_b_a_fun_a_fun_fun_tree_a_b_a_fun_a_fun_fun_tree_a_b_a_fun_a_fun_fun_fun_fun_fun$ A_b_a_fun_a_fun_fun$) A_b_a_fun_a_fun_fun_tree_a_b_a_fun_a_fun_fun_tree_a_b_a_fun_a_fun_fun_fun_fun$)
(declare-fun fun_app$y (A_b_a_fun_fun_tree_a_b_a_fun_fun_fun$ A_b_a_fun_fun_tree$) A_b_a_fun_fun$)
(declare-fun fun_app$z (A_b_a_fun_fun_tree_a_b_a_fun_fun_tree_a_b_a_fun_fun_fun_fun$ A_b_a_fun_fun_tree$) A_b_a_fun_fun_tree_a_b_a_fun_fun_fun$)
(declare-fun map_tree$ (A_b_a_fun_a_fun_fun_a_b_a_fun_a_fun_fun_fun$) A_b_a_fun_a_fun_fun_tree_a_b_a_fun_a_fun_fun_tree_fun$)
(declare-fun ap_tree$aa (A_b_a_fun_a_fun_fun_a_a_fun_fun_tree$ A_b_a_fun_a_fun_fun_tree$) A_a_fun_tree$)
(declare-fun ap_tree$ab (A_a_fun_a_b_a_fun_a_fun_fun_fun_tree$ A_a_fun_tree$) A_b_a_fun_a_fun_fun_tree$)
(declare-fun ap_tree$ac (A_b_a_fun_fun_b_a_fun_fun_tree$ A_b_a_fun_fun_tree$) B_a_fun_tree$)
(declare-fun ap_tree$ad (A_a_fun_a_fun_tree$ A_a_fun_tree$) A_tree$)
(declare-fun ap_tree$ae (A_b_a_fun_a_fun_fun_a_b_a_fun_a_fun_fun_fun_a_b_a_fun_a_fun_fun_fun_tree$ A_b_a_fun_a_fun_fun_a_b_a_fun_a_fun_fun_fun_tree$) A_b_a_fun_a_fun_fun_tree$)
(declare-fun ap_tree$af (A_b_a_fun_fun_a_b_a_fun_fun_fun_a_b_a_fun_fun_fun_tree$ A_b_a_fun_fun_a_b_a_fun_fun_fun_tree$) A_b_a_fun_fun_tree$)
(declare-fun ap_tree$ag (A_a_fun_a_a_fun_fun_a_a_fun_fun_tree$ A_a_fun_a_a_fun_fun_tree$) A_a_fun_tree$)
(declare-fun ap_tree$ah (A_b_a_fun_fun_a_a_fun_fun_a_a_fun_fun_tree$ A_b_a_fun_fun_a_a_fun_fun_tree$) A_a_fun_tree$)
(declare-fun ap_tree$ai (A_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_tree$ A_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_tree$) A_b_a_fun_fun_a_a_fun_fun_tree$)
(declare-fun case_tree$ (A_b_a_fun_fun_a_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_tree_a_b_a_fun_fun_a_a_fun_fun_tree_a_b_a_fun_fun_a_a_fun_fun_tree_fun_fun_fun$ A_b_a_fun_fun_a_a_fun_fun_tree$) A_b_a_fun_fun_a_a_fun_fun_tree$)
(declare-fun fun_app$aa (A_b_a_fun_fun_a_b_a_fun_fun_tree_a_b_a_fun_fun_tree_a_b_a_fun_fun_fun_fun_fun$ A_b_a_fun_fun$) A_b_a_fun_fun_tree_a_b_a_fun_fun_tree_a_b_a_fun_fun_fun_fun$)
(declare-fun fun_app$ab (A_a_fun_tree_a_a_fun_fun$ A_a_fun_tree$) A_a_fun$)
(declare-fun fun_app$ac (A_a_fun_tree_a_a_fun_tree_a_a_fun_fun_fun$ A_a_fun_tree$) A_a_fun_tree_a_a_fun_fun$)
(declare-fun fun_app$ad (A_a_fun_a_a_fun_tree_a_a_fun_tree_a_a_fun_fun_fun_fun$ A_a_fun$) A_a_fun_tree_a_a_fun_tree_a_a_fun_fun_fun$)
(declare-fun fun_app$ae (A_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_tree_a_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_tree_fun$ A_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_tree$) A_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_tree$)
(declare-fun fun_app$af (A_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_tree_a_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_tree_a_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_tree_fun_fun$ A_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_tree$) A_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_tree_a_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_tree_fun$)
(declare-fun fun_app$ag (A_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_a_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_tree_a_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_tree_a_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_tree_fun_fun_fun$ A_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun$) A_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_tree_a_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_tree_a_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_tree_fun_fun$)
(declare-fun fun_app$ah (A_b_a_fun_fun_a_a_fun_fun_tree_a_b_a_fun_fun_a_a_fun_fun_tree_fun$ A_b_a_fun_fun_a_a_fun_fun_tree$) A_b_a_fun_fun_a_a_fun_fun_tree$)
(declare-fun fun_app$ai (A_b_a_fun_fun_a_a_fun_fun_tree_a_b_a_fun_fun_a_a_fun_fun_tree_a_b_a_fun_fun_a_a_fun_fun_tree_fun_fun$ A_b_a_fun_fun_a_a_fun_fun_tree$) A_b_a_fun_fun_a_a_fun_fun_tree_a_b_a_fun_fun_a_a_fun_fun_tree_fun$)
(declare-fun fun_app$aj (A_b_a_fun_fun_a_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_tree_a_b_a_fun_fun_a_a_fun_fun_tree_a_b_a_fun_fun_a_a_fun_fun_tree_fun_fun_fun$ A_b_a_fun_fun_a_a_fun_fun$) A_b_a_fun_fun_a_a_fun_fun_tree_a_b_a_fun_fun_a_a_fun_fun_tree_a_b_a_fun_fun_a_a_fun_fun_tree_fun_fun$)
(declare-fun fun_app$ak (A_b_a_fun_a_fun_fun_tree_a_b_a_fun_a_fun_fun_tree_fun$ A_b_a_fun_a_fun_fun_tree$) A_b_a_fun_a_fun_fun_tree$)
(declare-fun fun_app$al (A_b_a_fun_a_fun_fun_tree_a_b_a_fun_a_fun_fun_tree_a_b_a_fun_a_fun_fun_tree_fun_fun$ A_b_a_fun_a_fun_fun_tree$) A_b_a_fun_a_fun_fun_tree_a_b_a_fun_a_fun_fun_tree_fun$)
(declare-fun fun_app$am (A_b_a_fun_a_fun_fun_a_b_a_fun_a_fun_fun_tree_a_b_a_fun_a_fun_fun_tree_a_b_a_fun_a_fun_fun_tree_fun_fun_fun$ A_b_a_fun_a_fun_fun$) A_b_a_fun_a_fun_fun_tree_a_b_a_fun_a_fun_fun_tree_a_b_a_fun_a_fun_fun_tree_fun_fun$)
(declare-fun fun_app$an (A_b_a_fun_fun_tree_a_b_a_fun_fun_tree_fun$ A_b_a_fun_fun_tree$) A_b_a_fun_fun_tree$)
(declare-fun fun_app$ao (A_b_a_fun_fun_tree_a_b_a_fun_fun_tree_a_b_a_fun_fun_tree_fun_fun$ A_b_a_fun_fun_tree$) A_b_a_fun_fun_tree_a_b_a_fun_fun_tree_fun$)
(declare-fun fun_app$ap (A_b_a_fun_fun_a_b_a_fun_fun_tree_a_b_a_fun_fun_tree_a_b_a_fun_fun_tree_fun_fun_fun$ A_b_a_fun_fun$) A_b_a_fun_fun_tree_a_b_a_fun_fun_tree_a_b_a_fun_fun_tree_fun_fun$)
(declare-fun fun_app$aq (A_a_fun_tree_a_a_fun_tree_fun$ A_a_fun_tree$) A_a_fun_tree$)
(declare-fun fun_app$ar (A_a_fun_tree_a_a_fun_tree_a_a_fun_tree_fun_fun$ A_a_fun_tree$) A_a_fun_tree_a_a_fun_tree_fun$)
(declare-fun fun_app$as (A_a_fun_a_a_fun_tree_a_a_fun_tree_a_a_fun_tree_fun_fun_fun$ A_a_fun$) A_a_fun_tree_a_a_fun_tree_a_a_fun_tree_fun_fun$)
(declare-fun fun_app$at (B_a_fun$ B$) A$)
(declare-fun fun_app$au (A_a_fun_a_b_a_fun_fun_fun$ A_a_fun$) A_b_a_fun_fun$)
(declare-fun fun_app$av (A_b_a_fun_a_fun_fun_a_a_fun_fun$ A_b_a_fun_a_fun_fun$) A_a_fun$)
(declare-fun fun_app$aw (A_a_fun_a_b_a_fun_a_fun_fun_fun$ A_a_fun$) A_b_a_fun_a_fun_fun$)
(declare-fun fun_app$ax (A_tree_b_a_fun_tree_fun$ A_tree$) B_a_fun_tree$)
(declare-fun fun_app$ay (A_tree_a_tree_fun$ A_tree$) A_tree$)
(declare-fun fun_app$az (A_b_a_fun_fun_tree_a_a_fun_tree_fun$ A_b_a_fun_fun_tree$) A_a_fun_tree$)
(declare-fun fun_app$ba (A_b_a_fun_a_fun_fun_tree_a_b_a_fun_fun_a_a_fun_fun_tree_fun$ A_b_a_fun_a_fun_fun_tree$) A_b_a_fun_fun_a_a_fun_fun_tree$)
(declare-fun fun_app$bb (A_a_fun_a_b_a_fun_fun_a_a_fun_fun_fun$ A_a_fun$) A_b_a_fun_fun_a_a_fun_fun$)
(declare-fun fun_app$bc (A_b_a_fun_fun_a_b_a_fun_a_fun_fun_fun$ A_b_a_fun_fun$) A_b_a_fun_a_fun_fun$)
(declare-fun fun_app$bd (A_b_a_fun_a_fun_fun_a_b_a_fun_fun_fun$ A_b_a_fun_a_fun_fun$) A_b_a_fun_fun$)
(declare-fun fun_app$be (B_a_fun_tree_a_tree_fun$ B_a_fun_tree$) A_tree$)
(declare-fun fun_app$bf (B_a_fun_a_fun_a_b_a_fun_fun_a_a_fun_fun_fun$ B_a_fun_a_fun$) A_b_a_fun_fun_a_a_fun_fun$)
(declare-fun fun_app$bg (A_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_a_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_fun$ A_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun$) A_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun$)
(declare-fun fun_app$bh (A_b_a_fun_fun_a_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_a_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_a_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_fun_fun$ A_b_a_fun_fun_a_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun$) A_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_a_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_fun$)
(declare-fun fun_app$bi (A_b_a_fun_fun_a_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun$ A_b_a_fun_fun_a_a_fun_fun$) A_b_a_fun_fun_a_a_fun_fun$)
(declare-fun fun_app$bj (A_a_fun_a_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_fun$ A_a_fun_a_a_fun_fun$) A_b_a_fun_fun_a_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun$)
(declare-fun fun_app$bk (A_b_a_fun_a_fun_fun_a_b_a_fun_a_fun_fun_fun_a_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_fun$ A_b_a_fun_a_fun_fun_a_b_a_fun_a_fun_fun_fun$) A_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun$)
(declare-fun fun_app$bl (A_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_a_b_a_fun_a_fun_fun_a_b_a_fun_a_fun_fun_fun_a_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_fun_fun$ A_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun$) A_b_a_fun_a_fun_fun_a_b_a_fun_a_fun_fun_fun_a_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_fun$)
(declare-fun fun_app$bm (A_b_a_fun_fun_a_b_a_fun_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun$ A_b_a_fun_fun_a_b_a_fun_fun_fun$) A_b_a_fun_fun_a_a_fun_fun$)
(declare-fun fun_app$bn (A_b_a_fun_fun_a_a_fun_fun_a_b_a_fun_fun_a_b_a_fun_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_fun$ A_b_a_fun_fun_a_a_fun_fun$) A_b_a_fun_fun_a_b_a_fun_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun$)
(declare-fun fun_app$bo (A_b_a_fun_fun_a_a_fun_fun_tree_bool_fun$ A_b_a_fun_fun_a_a_fun_fun_tree$) Bool)
(declare-fun fun_app$bp (A_b_a_fun_fun_a_a_fun_fun_tree_a_b_a_fun_fun_a_a_fun_fun_tree_bool_fun_fun$ A_b_a_fun_fun_a_a_fun_fun_tree$) A_b_a_fun_fun_a_a_fun_fun_tree_bool_fun$)
(declare-fun fun_app$bq (A_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_tree_bool_fun$ A_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_tree$) Bool)
(declare-fun fun_app$br (A_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_tree_a_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_tree_bool_fun_fun$ A_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_tree$) A_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_tree_bool_fun$)
(declare-fun fun_app$bs (A_b_a_fun_a_fun_fun_tree_bool_fun$ A_b_a_fun_a_fun_fun_tree$) Bool)
(declare-fun fun_app$bt (A_b_a_fun_a_fun_fun_tree_a_b_a_fun_a_fun_fun_tree_bool_fun_fun$ A_b_a_fun_a_fun_fun_tree$) A_b_a_fun_a_fun_fun_tree_bool_fun$)
(declare-fun fun_app$bu (A_a_fun_tree_bool_fun$ A_a_fun_tree$) Bool)
(declare-fun fun_app$bv (A_a_fun_tree_a_a_fun_tree_bool_fun_fun$ A_a_fun_tree$) A_a_fun_tree_bool_fun$)
(declare-fun fun_app$bw (A_b_a_fun_fun_tree_bool_fun$ A_b_a_fun_fun_tree$) Bool)
(declare-fun fun_app$bx (A_b_a_fun_fun_tree_a_b_a_fun_fun_tree_bool_fun_fun$ A_b_a_fun_fun_tree$) A_b_a_fun_fun_tree_bool_fun$)
(declare-fun fun_app$by (A_a_fun_a_a_fun_a_a_fun_fun_fun$ A_a_fun$) A_a_fun_a_a_fun_fun$)
(declare-fun fun_app$bz (B_a_fun_a_fun_b_a_fun_a_fun_fun$ B_a_fun_a_fun$) B_a_fun_a_fun$)
(declare-fun fun_app$ca (A_b_a_fun_fun_a_a_fun_a_b_a_fun_fun_fun_fun$ A_b_a_fun_fun$) A_a_fun_a_b_a_fun_fun_fun$)
(declare-fun fun_app$cb (B_a_fun_b_a_fun_fun_b_a_fun_a_fun_fun$ B_a_fun_b_a_fun_fun$) B_a_fun_a_fun$)
(declare-fun fun_app$cc (B_a_fun_b_a_fun_fun_a_b_a_fun_fun_a_b_a_fun_fun_fun_fun$ B_a_fun_b_a_fun_fun$) A_b_a_fun_fun_a_b_a_fun_fun_fun$)
(declare-fun fun_app$cd (A_a_fun_a_a_fun_fun_a_a_fun_a_a_fun_fun_fun$ A_a_fun_a_a_fun_fun$) A_a_fun_a_a_fun_fun$)
(declare-fun fun_app$ce (A_a_fun_a_a_fun_fun_a_a_fun_a_a_fun_fun_a_a_fun_a_a_fun_fun_fun_fun$ A_a_fun_a_a_fun_fun$) A_a_fun_a_a_fun_fun_a_a_fun_a_a_fun_fun_fun$)
(declare-fun fun_app$cf (A_a_fun_a_b_a_fun_fun_fun_a_a_fun_a_a_fun_fun_fun$ A_a_fun_a_b_a_fun_fun_fun$) A_a_fun_a_a_fun_fun$)
(declare-fun fun_app$cg (A_b_a_fun_fun_a_a_fun_fun_a_b_a_fun_fun_a_b_a_fun_fun_fun_fun$ A_b_a_fun_fun_a_a_fun_fun$) A_b_a_fun_fun_a_b_a_fun_fun_fun$)
(declare-fun fun_app$ch (A_b_a_fun_fun_a_b_a_fun_fun_fun_a_b_a_fun_fun_a_b_a_fun_fun_fun_fun$ A_b_a_fun_fun_a_b_a_fun_fun_fun$) A_b_a_fun_fun_a_b_a_fun_fun_fun$)
(declare-fun fun_app$ci (A_b_a_fun_a_fun_fun_a_b_a_fun_a_fun_fun_fun_a_b_a_fun_a_fun_fun_a_b_a_fun_a_fun_fun_fun_fun$ A_b_a_fun_a_fun_fun_a_b_a_fun_a_fun_fun_fun$) A_b_a_fun_a_fun_fun_a_b_a_fun_a_fun_fun_fun$)
(declare-fun fun_app$cj (A_b_a_fun_fun_a_a_fun_fun_a_b_a_fun_a_fun_fun_fun_a_b_a_fun_fun_a_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_fun$ A_b_a_fun_fun_a_a_fun_fun_a_b_a_fun_a_fun_fun_fun$) A_b_a_fun_fun_a_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun$)
(declare-fun fun_app$ck (A_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_a_b_a_fun_a_fun_fun_a_b_a_fun_a_fun_fun_fun_fun$ A_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun$) A_b_a_fun_a_fun_fun_a_b_a_fun_a_fun_fun_fun$)
(declare-fun map_tree$a (A_b_a_fun_fun_a_b_a_fun_fun_fun$) A_b_a_fun_fun_tree_a_b_a_fun_fun_tree_fun$)
(declare-fun map_tree$b (A_a_fun_a_a_fun_fun$) A_a_fun_tree_a_a_fun_tree_fun$)
(declare-fun map_tree$c (A_b_a_fun_a_fun_fun$ A_tree$) B_a_fun_a_fun_tree$)
(declare-fun map_tree$d (A_b_a_fun_fun$) A_tree_b_a_fun_tree_fun$)
(declare-fun map_tree$e (A_a_fun$) A_tree_a_tree_fun$)
(declare-fun map_tree$f (A_b_a_fun_fun_a_a_fun_fun$) A_b_a_fun_fun_tree_a_a_fun_tree_fun$)
(declare-fun map_tree$g (A_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun$) A_b_a_fun_a_fun_fun_tree_a_b_a_fun_fun_a_a_fun_fun_tree_fun$)
(declare-fun map_tree$h (A_a_fun_a_b_a_fun_fun_fun$ A_a_fun_tree$) A_b_a_fun_fun_tree$)
(declare-fun map_tree$i (A_a_fun_a_b_a_fun_a_fun_fun_fun$ A_a_fun_tree$) A_b_a_fun_a_fun_fun_tree$)
(declare-fun map_tree$j (A_b_a_fun_a_fun_fun_a_a_fun_fun$ A_b_a_fun_a_fun_fun_tree$) A_a_fun_tree$)
(declare-fun map_tree$k (A_a_fun_a_b_a_fun_fun_a_a_fun_fun_fun$ A_a_fun_tree$) A_b_a_fun_fun_a_a_fun_fun_tree$)
(declare-fun map_tree$l (A_b_a_fun_fun_a_b_a_fun_a_fun_fun_fun$ A_b_a_fun_fun_tree$) A_b_a_fun_a_fun_fun_tree$)
(declare-fun map_tree$m (A_b_a_fun_fun_a_a_fun_fun_a_a_fun_fun$ A_b_a_fun_fun_a_a_fun_fun_tree$) A_a_fun_tree$)
(declare-fun map_tree$n (A_b_a_fun_a_fun_fun_a_b_a_fun_fun_fun$ A_b_a_fun_a_fun_fun_tree$) A_b_a_fun_fun_tree$)
(declare-fun map_tree$o (B_a_fun_a_fun$) B_a_fun_tree_a_tree_fun$)
(declare-fun map_tree$p (A_b_a_fun_fun_a_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun$) A_b_a_fun_fun_a_a_fun_fun_tree_a_b_a_fun_fun_a_a_fun_fun_tree_fun$)
(declare-fun pure_tree$ (B_a_fun_a_fun_a_b_a_fun_fun_a_a_fun_fun_fun$) B_a_fun_a_fun_a_b_a_fun_fun_a_a_fun_fun_fun_tree$)
(declare-fun case_tree$a (A_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_a_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_tree_a_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_tree_a_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_tree_fun_fun_fun$ A_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_tree$) A_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_tree$)
(declare-fun case_tree$b (A_b_a_fun_a_fun_fun_a_b_a_fun_a_fun_fun_tree_a_b_a_fun_a_fun_fun_tree_a_b_a_fun_a_fun_fun_tree_fun_fun_fun$ A_b_a_fun_a_fun_fun_tree$) A_b_a_fun_a_fun_fun_tree$)
(declare-fun case_tree$c (A_a_fun_a_a_fun_tree_a_a_fun_tree_a_a_fun_tree_fun_fun_fun$ A_a_fun_tree$) A_a_fun_tree$)
(declare-fun case_tree$d (A_b_a_fun_fun_a_b_a_fun_fun_tree_a_b_a_fun_fun_tree_a_b_a_fun_fun_tree_fun_fun_fun$ A_b_a_fun_fun_tree$) A_b_a_fun_fun_tree$)
(declare-fun case_tree$e (A_b_a_fun_fun_a_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_tree_a_b_a_fun_fun_a_a_fun_fun_tree_a_b_a_fun_fun_a_a_fun_fun_fun_fun_fun$) A_b_a_fun_fun_a_a_fun_fun_tree_a_b_a_fun_fun_a_a_fun_fun_fun$)
(declare-fun case_tree$f (A_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_a_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_tree_a_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_tree_a_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_fun_fun_fun$) A_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_tree_a_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_fun$)
(declare-fun case_tree$g (A_b_a_fun_a_fun_fun_a_b_a_fun_a_fun_fun_tree_a_b_a_fun_a_fun_fun_tree_a_b_a_fun_a_fun_fun_fun_fun_fun$) A_b_a_fun_a_fun_fun_tree_a_b_a_fun_a_fun_fun_fun$)
(declare-fun case_tree$h (A_a_fun_a_a_fun_tree_a_a_fun_tree_a_a_fun_fun_fun_fun$) A_a_fun_tree_a_a_fun_fun$)
(declare-fun case_tree$i (A_b_a_fun_fun_a_b_a_fun_fun_tree_a_b_a_fun_fun_tree_a_b_a_fun_fun_fun_fun_fun$) A_b_a_fun_fun_tree_a_b_a_fun_fun_fun$)
(declare-fun pure_tree$a (A_a_fun_a_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_fun$) A_a_fun_a_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_fun_tree$)
(declare-fun pure_tree$b (A_b_a_fun_fun_a_a_fun_fun_a_b_a_fun_fun_a_b_a_fun_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_fun$) A_b_a_fun_fun_a_a_fun_fun_a_b_a_fun_fun_a_b_a_fun_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_fun_tree$)
(declare-fun pure_tree$c (A_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_a_b_a_fun_a_fun_fun_a_b_a_fun_a_fun_fun_fun_a_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_fun_fun$) A_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_a_b_a_fun_a_fun_fun_a_b_a_fun_a_fun_fun_fun_a_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_fun_fun_tree$)
(declare-fun pure_tree$d (A_b_a_fun_fun_a_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_a_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_a_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_fun_fun$) A_b_a_fun_fun_a_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_a_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_a_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_fun_fun_tree$)
(declare-fun pure_tree$e (A_a_fun_a_a_fun_a_a_fun_fun_fun$) A_a_fun_a_a_fun_a_a_fun_fun_fun_tree$)
(declare-fun pure_tree$f (A_b_a_fun_fun_a_a_fun_a_b_a_fun_fun_fun_fun$) A_b_a_fun_fun_a_a_fun_a_b_a_fun_fun_fun_fun_tree$)
(declare-fun pure_tree$g (B_a_fun_b_a_fun_fun_a_b_a_fun_fun_a_b_a_fun_fun_fun_fun$) B_a_fun_b_a_fun_fun_a_b_a_fun_fun_a_b_a_fun_fun_fun_fun_tree$)
(declare-fun pure_tree$h (A_a_fun_a_a_fun_fun_a_a_fun_a_a_fun_fun_a_a_fun_a_a_fun_fun_fun_fun$) A_a_fun_a_a_fun_fun_a_a_fun_a_a_fun_fun_a_a_fun_a_a_fun_fun_fun_fun_tree$)
(declare-fun pure_tree$i (B_a_fun_a_fun_b_a_fun_a_fun_fun_a_b_a_fun_a_fun_fun_a_b_a_fun_a_fun_fun_fun_fun$) B_a_fun_a_fun_b_a_fun_a_fun_fun_a_b_a_fun_a_fun_fun_a_b_a_fun_a_fun_fun_fun_fun_tree$)
(declare-fun pure_tree$j (A$) A_tree$)
(declare-fun pure_tree$k (A_b_a_fun_a_fun_fun$) A_b_a_fun_a_fun_fun_tree$)
(declare-fun pure_tree$l (A_b_a_fun_fun$) A_b_a_fun_fun_tree$)
(declare-fun pure_tree$m (A_a_fun$) A_a_fun_tree$)
(declare-fun pure_tree$n (A_b_a_fun_fun_a_a_fun_fun$) A_b_a_fun_fun_a_a_fun_fun_tree$)
(declare-fun pure_tree$o (A_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun$) A_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_tree$)
(declare-fun pure_tree$p (B_a_fun$) B_a_fun_tree$)
(declare-fun pure_tree$q (A_a_fun_a_a_fun_fun$) A_a_fun_a_a_fun_fun_tree$)
(declare-fun pure_tree$r (B_a_fun_a_fun$) B_a_fun_a_fun_tree$)
(declare-fun pure_tree$s (A_a_fun_a_b_a_fun_fun_fun$) A_a_fun_a_b_a_fun_fun_fun_tree$)
(declare-fun pure_tree$t (A_b_a_fun_a_fun_fun_a_a_fun_fun$) A_b_a_fun_a_fun_fun_a_a_fun_fun_tree$)
(declare-fun pure_tree$u (A_b_a_fun_fun_a_b_a_fun_fun_fun$) A_b_a_fun_fun_a_b_a_fun_fun_fun_tree$)
(declare-fun pure_tree$v (A_a_fun_a_b_a_fun_a_fun_fun_fun$) A_a_fun_a_b_a_fun_a_fun_fun_fun_tree$)
(declare-fun pure_tree$w (A_b_a_fun_fun_b_a_fun_fun$) A_b_a_fun_fun_b_a_fun_fun_tree$)
(declare-fun pure_tree$x (A_a_fun_a_fun$) A_a_fun_a_fun_tree$)
(declare-fun pure_tree$y (A_b_a_fun_a_fun_fun_a_b_a_fun_a_fun_fun_fun_a_b_a_fun_a_fun_fun_fun$) A_b_a_fun_a_fun_fun_a_b_a_fun_a_fun_fun_fun_a_b_a_fun_a_fun_fun_fun_tree$)
(declare-fun pure_tree$z (A_b_a_fun_fun_a_b_a_fun_fun_fun_a_b_a_fun_fun_fun$) A_b_a_fun_fun_a_b_a_fun_fun_fun_a_b_a_fun_fun_fun_tree$)
(declare-fun pure_tree$aa (A_a_fun_a_a_fun_fun_a_a_fun_fun$) A_a_fun_a_a_fun_fun_a_a_fun_fun_tree$)
(declare-fun pure_tree$ab (A_b_a_fun_fun_a_a_fun_fun_a_a_fun_fun$) A_b_a_fun_fun_a_a_fun_fun_a_a_fun_fun_tree$)
(declare-fun pure_tree$ac (A_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun$) A_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_tree$)
(declare-fun pure_tree$ad (A_b_a_fun_a_fun_fun_a_b_a_fun_a_fun_fun_fun$) A_b_a_fun_a_fun_fun_a_b_a_fun_a_fun_fun_fun_tree$)
(declare-fun ?v2!0 (A_b_a_fun_a_fun_fun_a_b_a_fun_a_fun_fun_fun_tree$ A_b_a_fun_a_fun_fun_a_b_a_fun_a_fun_fun_fun_tree$) A_b_a_fun_a_fun_fun_tree$)
(declare-fun ?v2!1 (A_b_a_fun_fun_a_b_a_fun_fun_fun_tree$ A_b_a_fun_fun_a_b_a_fun_fun_fun_tree$) A_b_a_fun_fun_tree$)
(declare-fun ?v2!2 (A_a_fun_a_a_fun_fun_tree$ A_a_fun_a_a_fun_fun_tree$) A_a_fun_tree$)
(declare-fun ?v2!3 (A_b_a_fun_fun_tree$ A_b_a_fun_fun_tree$) A_tree$)
(declare-fun ?v2!4 (A_a_fun_tree$ A_a_fun_tree$) A_tree$)
(declare-fun ?v2!5 (A_b_a_fun_fun_a_a_fun_fun_tree$ A_b_a_fun_fun_a_a_fun_fun_tree$) A_b_a_fun_fun_tree$)
(declare-fun ?v2!6 (A_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_tree$ A_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_tree$) A_b_a_fun_a_fun_fun_tree$)
(declare-fun ?v2!7 (A_b_a_fun_fun_tree$ A_b_a_fun_fun_tree$) A$)
(declare-fun ?v2!8 (A_a_fun_tree$ A_a_fun_tree$) A$)
(declare-fun ?v2!9 (A_b_a_fun_a_fun_fun_a_b_a_fun_a_fun_fun_fun_tree$ A_b_a_fun_a_fun_fun_a_b_a_fun_a_fun_fun_fun_tree$) A_b_a_fun_a_fun_fun$)
(declare-fun ?v2!10 (A_b_a_fun_fun_a_b_a_fun_fun_fun_tree$ A_b_a_fun_fun_a_b_a_fun_fun_fun_tree$) A_b_a_fun_fun$)
(declare-fun ?v2!11 (A_a_fun_a_a_fun_fun_tree$ A_a_fun_a_a_fun_fun_tree$) A_a_fun$)
(declare-fun ?v2!12 (A_b_a_fun_fun_a_a_fun_fun_tree$ A_b_a_fun_fun_a_a_fun_fun_tree$) A_b_a_fun_fun$)
(declare-fun ?v2!13 (A_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_tree$ A_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_tree$) A_b_a_fun_a_fun_fun$)
(declare-fun ?v3!14 (A_b_a_fun_a_fun_fun_tree$) A_b_a_fun_a_fun_fun_tree$)
(declare-fun ?v1!16 (A_b_a_fun_a_fun_fun_tree$) A_b_a_fun_a_fun_fun$)
(declare-fun ?v2!15 (A_b_a_fun_a_fun_fun_tree$) A_b_a_fun_a_fun_fun_tree$)
(declare-fun ?v2!18 (A_b_a_fun_fun_a_a_fun_fun_tree$) A_b_a_fun_fun_a_a_fun_fun_tree$)
(declare-fun ?v3!17 (A_b_a_fun_fun_a_a_fun_fun_tree$) A_b_a_fun_fun_a_a_fun_fun_tree$)
(declare-fun ?v1!19 (A_b_a_fun_fun_a_a_fun_fun_tree$) A_b_a_fun_fun_a_a_fun_fun$)
(declare-fun ?v2!21 (A_b_a_fun_fun_tree$) A_b_a_fun_fun_tree$)
(declare-fun ?v1!22 (A_b_a_fun_fun_tree$) A_b_a_fun_fun$)
(declare-fun ?v3!20 (A_b_a_fun_fun_tree$) A_b_a_fun_fun_tree$)
(declare-fun ?v3!23 (A_a_fun_tree$) A_a_fun_tree$)
(declare-fun ?v1!25 (A_a_fun_tree$) A_a_fun$)
(declare-fun ?v2!24 (A_a_fun_tree$) A_a_fun_tree$)
(declare-fun ?v3!26 (A_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_tree$) A_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_tree$)
(declare-fun ?v1!28 (A_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_tree$) A_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun$)
(declare-fun ?v2!27 (A_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_tree$) A_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_tree$)
(declare-fun ?v3!30 (A_b_a_fun_fun_a_a_fun_fun_tree_a_b_a_fun_fun_a_a_fun_fun_tree_bool_fun_fun$) A_b_a_fun_fun_a_a_fun_fun_tree$)
(declare-fun ?v4!29 (A_b_a_fun_fun_a_a_fun_fun_tree_a_b_a_fun_fun_a_a_fun_fun_tree_bool_fun_fun$) A_b_a_fun_fun_a_a_fun_fun_tree$)
(declare-fun ?v3!32 (A_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_tree_a_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_tree_bool_fun_fun$) A_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_tree$)
(declare-fun ?v4!31 (A_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_tree_a_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_tree_bool_fun_fun$) A_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_tree$)
(declare-fun ?v4!33 (A_b_a_fun_a_fun_fun_tree_a_b_a_fun_a_fun_fun_tree_bool_fun_fun$) A_b_a_fun_a_fun_fun_tree$)
(declare-fun ?v3!34 (A_b_a_fun_a_fun_fun_tree_a_b_a_fun_a_fun_fun_tree_bool_fun_fun$) A_b_a_fun_a_fun_fun_tree$)
(declare-fun ?v3!36 (A_a_fun_tree_a_a_fun_tree_bool_fun_fun$) A_a_fun_tree$)
(declare-fun ?v4!35 (A_a_fun_tree_a_a_fun_tree_bool_fun_fun$) A_a_fun_tree$)
(declare-fun ?v3!38 (A_b_a_fun_fun_tree_a_b_a_fun_fun_tree_bool_fun_fun$) A_b_a_fun_fun_tree$)
(declare-fun ?v4!37 (A_b_a_fun_fun_tree_a_b_a_fun_fun_tree_bool_fun_fun$) A_b_a_fun_fun_tree$)
(declare-fun ?v4!39 (A_b_a_fun_fun_a_a_fun_fun_tree_a_b_a_fun_fun_a_a_fun_fun_tree_bool_fun_fun$) A_b_a_fun_fun_a_a_fun_fun_tree$)
(declare-fun ?v3!40 (A_b_a_fun_fun_a_a_fun_fun_tree_a_b_a_fun_fun_a_a_fun_fun_tree_bool_fun_fun$) A_b_a_fun_fun_a_a_fun_fun_tree$)
(declare-fun ?v3!42 (A_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_tree_a_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_tree_bool_fun_fun$) A_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_tree$)
(declare-fun ?v4!41 (A_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_tree_a_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_tree_bool_fun_fun$) A_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_tree$)
(declare-fun ?v4!43 (A_b_a_fun_a_fun_fun_tree_a_b_a_fun_a_fun_fun_tree_bool_fun_fun$) A_b_a_fun_a_fun_fun_tree$)
(declare-fun ?v3!44 (A_b_a_fun_a_fun_fun_tree_a_b_a_fun_a_fun_fun_tree_bool_fun_fun$) A_b_a_fun_a_fun_fun_tree$)
(declare-fun ?v4!45 (A_a_fun_tree_a_a_fun_tree_bool_fun_fun$) A_a_fun_tree$)
(declare-fun ?v3!46 (A_a_fun_tree_a_a_fun_tree_bool_fun_fun$) A_a_fun_tree$)
(declare-fun ?v4!47 (A_b_a_fun_fun_tree_a_b_a_fun_fun_tree_bool_fun_fun$) A_b_a_fun_fun_tree$)
(declare-fun ?v3!48 (A_b_a_fun_fun_tree_a_b_a_fun_fun_tree_bool_fun_fun$) A_b_a_fun_fun_tree$)
(assert (! (forall ((?v0py0 A_b_a_fun_a_fun_fun$)(?v1py0 A_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun$)) (! (= (fun_app$ (uuh$ ?v0py0) ?v1py0) (fun_app$a ?v1py0 ?v0py0)) :pattern ((fun_app$ (uuh$ ?v0py0) ?v1py0)) )) :named A0))
(assert (! (forall ((?v0py1 A_b_a_fun_a_fun_fun$)(?v1py1 A_b_a_fun_a_fun_fun_a_b_a_fun_a_fun_fun_fun$)) (! (= (fun_app$b (uud$ ?v0py1) ?v1py1) (fun_app$c ?v1py1 ?v0py1)) :pattern ((fun_app$b (uud$ ?v0py1) ?v1py1)) )) :named A1))
(assert (! (forall ((?v0py2 A_b_a_fun_fun$)(?v1py2 A_b_a_fun_fun_a_b_a_fun_fun_fun$)) (! (= (fun_app$d (uue$ ?v0py2) ?v1py2) (fun_app$e ?v1py2 ?v0py2)) :pattern ((fun_app$d (uue$ ?v0py2) ?v1py2)) )) :named A2))
(assert (! (forall ((?v0py3 A_b_a_fun_fun$)(?v1py3 A_b_a_fun_fun_a_a_fun_fun$)) (! (= (fun_app$f (uug$ ?v0py3) ?v1py3) (fun_app$g ?v1py3 ?v0py3)) :pattern ((fun_app$f (uug$ ?v0py3) ?v1py3)) )) :named A3))
(assert (! (forall ((?v0py4 A_a_fun$)(?v1py4 A_a_fun_a_a_fun_fun$)) (! (= (fun_app$h (uuf$ ?v0py4) ?v1py4) (fun_app$i ?v1py4 ?v0py4)) :pattern ((fun_app$h (uuf$ ?v0py4) ?v1py4)) )) :named A4))
(assert (! (forall ((?v0py5 A$)(?v1py5 A_b_a_fun_fun$)) (! (= (fun_app$j (uub$ ?v0py5) ?v1py5) (fun_app$k ?v1py5 ?v0py5)) :pattern ((fun_app$j (uub$ ?v0py5) ?v1py5)) )) :named A5))
(assert (! (forall ((?v0py6 A$)(?v1py6 A_a_fun$)) (! (= (fun_app$l (uuc$ ?v0py6) ?v1py6) (fun_app$m ?v1py6 ?v0py6)) :pattern ((fun_app$l (uuc$ ?v0py6) ?v1py6)) )) :named A6))
(assert (! (forall ((?v0py7 A_b_a_fun_a_fun_fun$)(?v1py7 A_b_a_fun_fun$)(?v2py0 A$)) (! (= (fun_app$m (fun_app$g (fun_app$a uui$ ?v0py7) ?v1py7) ?v2py0) (fun_app$n (fun_app$o ?v0py7 ?v2py0) (fun_app$k ?v1py7 ?v2py0))) :pattern ((fun_app$m (fun_app$g (fun_app$a uui$ ?v0py7) ?v1py7) ?v2py0)) )) :named A7))
(assert (! (forall ((?v0py8 A_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun$)(?v1py8 A_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_tree$)(?v2py1 A_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_tree$)) (! (= (fun_app$p (fun_app$q (fun_app$r uuu$ ?v0py8) ?v1py8) ?v2py1) ?v0py8) :pattern ((fun_app$p (fun_app$q (fun_app$r uuu$ ?v0py8) ?v1py8) ?v2py1)) )) :named A8))
(assert (! (forall ((?v0py9 A_b_a_fun_fun_a_a_fun_fun$)(?v1py9 A_b_a_fun_fun_a_a_fun_fun_tree$)(?v2py2 A_b_a_fun_fun_a_a_fun_fun_tree$)) (! (= (fun_app$s (fun_app$t (fun_app$u uut$ ?v0py9) ?v1py9) ?v2py2) ?v0py9) :pattern ((fun_app$s (fun_app$t (fun_app$u uut$ ?v0py9) ?v1py9) ?v2py2)) )) :named A9))
(assert (! (forall ((?v0py10 A_b_a_fun_a_fun_fun$)(?v1py10 A_b_a_fun_a_fun_fun_tree$)(?v2py3 A_b_a_fun_a_fun_fun_tree$)) (! (= (fun_app$v (fun_app$w (fun_app$x uuv$ ?v0py10) ?v1py10) ?v2py3) ?v0py10) :pattern ((fun_app$v (fun_app$w (fun_app$x uuv$ ?v0py10) ?v1py10) ?v2py3)) )) :named A10))
(assert (! (forall ((?v0py11 A_b_a_fun_fun$)(?v1py11 A_b_a_fun_fun_tree$)(?v2py4 A_b_a_fun_fun_tree$)) (! (= (fun_app$y (fun_app$z (fun_app$aa uux$ ?v0py11) ?v1py11) ?v2py4) ?v0py11) :pattern ((fun_app$y (fun_app$z (fun_app$aa uux$ ?v0py11) ?v1py11) ?v2py4)) )) :named A11))
(assert (! (forall ((?v0py12 A_a_fun$)(?v1py12 A_a_fun_tree$)(?v2py5 A_a_fun_tree$)) (! (= (fun_app$ab (fun_app$ac (fun_app$ad uuw$ ?v0py12) ?v1py12) ?v2py5) ?v0py12) :pattern ((fun_app$ab (fun_app$ac (fun_app$ad uuw$ ?v0py12) ?v1py12) ?v2py5)) )) :named A12))
(assert (! (forall ((?v0py13 A_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun$)(?v1py13 A_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_tree$)(?v2py6 A_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_tree$)) (! (= (fun_app$ae (fun_app$af (fun_app$ag uup$ ?v0py13) ?v1py13) ?v2py6) ?v1py13) :pattern ((fun_app$ae (fun_app$af (fun_app$ag uup$ ?v0py13) ?v1py13) ?v2py6)) )) :named A13))
(assert (! (forall ((?v0py14 A_b_a_fun_fun_a_a_fun_fun$)(?v1py14 A_b_a_fun_fun_a_a_fun_fun_tree$)(?v2py7 A_b_a_fun_fun_a_a_fun_fun_tree$)) (! (= (fun_app$ah (fun_app$ai (fun_app$aj uuo$ ?v0py14) ?v1py14) ?v2py7) ?v1py14) :pattern ((fun_app$ah (fun_app$ai (fun_app$aj uuo$ ?v0py14) ?v1py14) ?v2py7)) )) :named A14))
(assert (! (forall ((?v0py15 A_b_a_fun_a_fun_fun$)(?v1py15 A_b_a_fun_a_fun_fun_tree$)(?v2py8 A_b_a_fun_a_fun_fun_tree$)) (! (= (fun_app$ak (fun_app$al (fun_app$am uuq$ ?v0py15) ?v1py15) ?v2py8) ?v1py15) :pattern ((fun_app$ak (fun_app$al (fun_app$am uuq$ ?v0py15) ?v1py15) ?v2py8)) )) :named A15))
(assert (! (forall ((?v0py16 A_b_a_fun_fun$)(?v1py16 A_b_a_fun_fun_tree$)(?v2py9 A_b_a_fun_fun_tree$)) (! (= (fun_app$an (fun_app$ao (fun_app$ap uus$ ?v0py16) ?v1py16) ?v2py9) ?v1py16) :pattern ((fun_app$an (fun_app$ao (fun_app$ap uus$ ?v0py16) ?v1py16) ?v2py9)) )) :named A16))
(assert (! (forall ((?v0py17 A_a_fun$)(?v1py17 A_a_fun_tree$)(?v2py10 A_a_fun_tree$)) (! (= (fun_app$aq (fun_app$ar (fun_app$as uur$ ?v0py17) ?v1py17) ?v2py10) ?v1py17) :pattern ((fun_app$aq (fun_app$ar (fun_app$as uur$ ?v0py17) ?v1py17) ?v2py10)) )) :named A17))
(assert (! (forall ((?v0py18 A_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun$)(?v1py18 A_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_tree$)(?v2py11 A_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_tree$)) (! (= (fun_app$ae (fun_app$af (fun_app$ag uuk$ ?v0py18) ?v1py18) ?v2py11) ?v2py11) :pattern ((fun_app$ae (fun_app$af (fun_app$ag uuk$ ?v0py18) ?v1py18) ?v2py11)) )) :named A18))
(assert (! (forall ((?v0py19 A_b_a_fun_fun_a_a_fun_fun$)(?v1py19 A_b_a_fun_fun_a_a_fun_fun_tree$)(?v2py12 A_b_a_fun_fun_a_a_fun_fun_tree$)) (! (= (fun_app$ah (fun_app$ai (fun_app$aj uuj$ ?v0py19) ?v1py19) ?v2py12) ?v2py12) :pattern ((fun_app$ah (fun_app$ai (fun_app$aj uuj$ ?v0py19) ?v1py19) ?v2py12)) )) :named A19))
(assert (! (forall ((?v0py20 A_b_a_fun_a_fun_fun$)(?v1py20 A_b_a_fun_a_fun_fun_tree$)(?v2py13 A_b_a_fun_a_fun_fun_tree$)) (! (= (fun_app$ak (fun_app$al (fun_app$am uul$ ?v0py20) ?v1py20) ?v2py13) ?v2py13) :pattern ((fun_app$ak (fun_app$al (fun_app$am uul$ ?v0py20) ?v1py20) ?v2py13)) )) :named A20))
(assert (! (forall ((?v0py21 A_b_a_fun_fun$)(?v1py21 A_b_a_fun_fun_tree$)(?v2py14 A_b_a_fun_fun_tree$)) (! (= (fun_app$an (fun_app$ao (fun_app$ap uun$ ?v0py21) ?v1py21) ?v2py14) ?v2py14) :pattern ((fun_app$an (fun_app$ao (fun_app$ap uun$ ?v0py21) ?v1py21) ?v2py14)) )) :named A21))
(assert (! (forall ((?v0py22 A_a_fun$)(?v1py22 A_a_fun_tree$)(?v2py15 A_a_fun_tree$)) (! (= (fun_app$aq (fun_app$ar (fun_app$as uum$ ?v0py22) ?v1py22) ?v2py15) ?v2py15) :pattern ((fun_app$aq (fun_app$ar (fun_app$as uum$ ?v0py22) ?v1py22) ?v2py15)) )) :named A22))
(assert (! (forall ((?v0py23 A$)(?v1py23 B_a_fun$)) (! (= (fun_app$n (fun_app$o uu$ ?v0py23) ?v1py23) ?v0py23) :pattern ((fun_app$n (fun_app$o uu$ ?v0py23) ?v1py23)) )) :named A23))
(assert (! (forall ((?v0py24 A$)(?v1py24 B$)) (! (= (fun_app$at (fun_app$k uua$ ?v0py24) ?v1py24) ?v0py24) :pattern ((fun_app$at (fun_app$k uua$ ?v0py24) ?v1py24)) )) :named A24))
(assert (! (not (= i_tree$ (ap_tree$ (ap_tree$a s_tree$ k_tree$) k_tree$a))) :named A25))
(assert (! (forall ((?v0py25 A_b_a_fun_a_fun_fun_a_b_a_fun_a_fun_fun_fun_tree$)(?v1py25 A_b_a_fun_a_fun_fun_a_b_a_fun_a_fun_fun_fun_tree$)) (! (or (not (= (ap_tree$b ?v0py25 (?v2!0 ?v1py25 ?v0py25)) (ap_tree$b ?v1py25 (?v2!0 ?v1py25 ?v0py25)))) (= ?v0py25 ?v1py25)) :pattern ((?v2!0 ?v1py25 ?v0py25)) )) :named A26))
(assert (! (forall ((?v0py26 A_b_a_fun_fun_a_b_a_fun_fun_fun_tree$)(?v1py26 A_b_a_fun_fun_a_b_a_fun_fun_fun_tree$)) (! (or (not (= (ap_tree$c ?v0py26 (?v2!1 ?v1py26 ?v0py26)) (ap_tree$c ?v1py26 (?v2!1 ?v1py26 ?v0py26)))) (= ?v0py26 ?v1py26)) :pattern ((?v2!1 ?v1py26 ?v0py26)) )) :named A27))
(assert (! (forall ((?v0py27 A_a_fun_a_a_fun_fun_tree$)(?v1py27 A_a_fun_a_a_fun_fun_tree$)) (! (or (not (= (ap_tree$d ?v0py27 (?v2!2 ?v1py27 ?v0py27)) (ap_tree$d ?v1py27 (?v2!2 ?v1py27 ?v0py27)))) (= ?v0py27 ?v1py27)) :pattern ((?v2!2 ?v1py27 ?v0py27)) )) :named A28))
(assert (! (forall ((?v0py28 A_b_a_fun_fun_tree$)(?v1py28 A_b_a_fun_fun_tree$)) (! (or (not (= (ap_tree$e ?v0py28 (?v2!3 ?v1py28 ?v0py28)) (ap_tree$e ?v1py28 (?v2!3 ?v1py28 ?v0py28)))) (= ?v0py28 ?v1py28)) :pattern ((?v2!3 ?v1py28 ?v0py28)) )) :named A29))
(assert (! (forall ((?v0py29 A_a_fun_tree$)(?v1py29 A_a_fun_tree$)) (! (or (not (= (ap_tree$f ?v0py29 (?v2!4 ?v1py29 ?v0py29)) (ap_tree$f ?v1py29 (?v2!4 ?v1py29 ?v0py29)))) (= ?v0py29 ?v1py29)) :pattern ((?v2!4 ?v1py29 ?v0py29)) )) :named A30))
(assert (! (forall ((?v0py30 A_b_a_fun_fun_a_a_fun_fun_tree$)(?v1py30 A_b_a_fun_fun_a_a_fun_fun_tree$)) (! (or (not (= (ap_tree$ ?v0py30 (?v2!5 ?v1py30 ?v0py30)) (ap_tree$ ?v1py30 (?v2!5 ?v1py30 ?v0py30)))) (= ?v0py30 ?v1py30)) :pattern ((?v2!5 ?v1py30 ?v0py30)) )) :named A31))
(assert (! (forall ((?v0py31 A_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_tree$)(?v1py31 A_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_tree$)) (! (or (not (= (ap_tree$a ?v0py31 (?v2!6 ?v1py31 ?v0py31)) (ap_tree$a ?v1py31 (?v2!6 ?v1py31 ?v0py31)))) (= ?v0py31 ?v1py31)) :pattern ((?v2!6 ?v1py31 ?v0py31)) )) :named A32))
(assert (! (forall ((?v0py32 B_a_fun_a_fun_tree$)(?v1py32 A_b_a_fun_fun_tree$)(?v2py16 A_tree$)) (! (= (ap_tree$f (ap_tree$ (ap_tree$g (pure_tree$ comp$) ?v0py32) ?v1py32) ?v2py16) (ap_tree$h ?v0py32 (ap_tree$e ?v1py32 ?v2py16))) :pattern ((ap_tree$f (ap_tree$ (ap_tree$g (pure_tree$ comp$) ?v0py32) ?v1py32) ?v2py16)) :pattern ((ap_tree$h ?v0py32 (ap_tree$e ?v1py32 ?v2py16))) )) :named A33))
(assert (! (forall ((?v0py33 A_a_fun_a_a_fun_fun_tree$)(?v1py33 A_b_a_fun_fun_a_a_fun_fun_tree$)(?v2py17 A_b_a_fun_fun_tree$)) (! (= (ap_tree$ (ap_tree$i (ap_tree$j (pure_tree$a comp$a) ?v0py33) ?v1py33) ?v2py17) (ap_tree$d ?v0py33 (ap_tree$ ?v1py33 ?v2py17))) :pattern ((ap_tree$ (ap_tree$i (ap_tree$j (pure_tree$a comp$a) ?v0py33) ?v1py33) ?v2py17)) :pattern ((ap_tree$d ?v0py33 (ap_tree$ ?v1py33 ?v2py17))) )) :named A34))
(assert (! (forall ((?v0py34 A_b_a_fun_fun_a_a_fun_fun_tree$)(?v1py34 A_b_a_fun_fun_a_b_a_fun_fun_fun_tree$)(?v2py18 A_b_a_fun_fun_tree$)) (! (= (ap_tree$ (ap_tree$k (ap_tree$l (pure_tree$b comp$b) ?v0py34) ?v1py34) ?v2py18) (ap_tree$ ?v0py34 (ap_tree$c ?v1py34 ?v2py18))) :pattern ((ap_tree$ (ap_tree$k (ap_tree$l (pure_tree$b comp$b) ?v0py34) ?v1py34) ?v2py18)) :pattern ((ap_tree$ ?v0py34 (ap_tree$c ?v1py34 ?v2py18))) )) :named A35))
(assert (! (forall ((?v0py35 A_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_tree$)(?v1py35 A_b_a_fun_a_fun_fun_a_b_a_fun_a_fun_fun_fun_tree$)(?v2py19 A_b_a_fun_a_fun_fun_tree$)) (! (= (ap_tree$a (ap_tree$m (ap_tree$n (pure_tree$c comp$c) ?v0py35) ?v1py35) ?v2py19) (ap_tree$a ?v0py35 (ap_tree$b ?v1py35 ?v2py19))) :pattern ((ap_tree$a (ap_tree$m (ap_tree$n (pure_tree$c comp$c) ?v0py35) ?v1py35) ?v2py19)) :pattern ((ap_tree$a ?v0py35 (ap_tree$b ?v1py35 ?v2py19))) )) :named A36))
(assert (! (forall ((?v0py36 A_b_a_fun_fun_a_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_tree$)(?v1py36 A_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_tree$)(?v2py20 A_b_a_fun_a_fun_fun_tree$)) (! (= (ap_tree$a (ap_tree$o (ap_tree$p (pure_tree$d comp$d) ?v0py36) ?v1py36) ?v2py20) (ap_tree$i ?v0py36 (ap_tree$a ?v1py36 ?v2py20))) :pattern ((ap_tree$a (ap_tree$o (ap_tree$p (pure_tree$d comp$d) ?v0py36) ?v1py36) ?v2py20)) :pattern ((ap_tree$i ?v0py36 (ap_tree$a ?v1py36 ?v2py20))) )) :named A37))
(assert (! (forall ((?v0py37 A_a_fun_tree$)(?v1py37 A_a_fun_tree$)(?v2py21 A_tree$)) (! (= (ap_tree$f (ap_tree$d (ap_tree$q (pure_tree$e comp$e) ?v0py37) ?v1py37) ?v2py21) (ap_tree$f ?v0py37 (ap_tree$f ?v1py37 ?v2py21))) :pattern ((ap_tree$f (ap_tree$d (ap_tree$q (pure_tree$e comp$e) ?v0py37) ?v1py37) ?v2py21)) :pattern ((ap_tree$f ?v0py37 (ap_tree$f ?v1py37 ?v2py21))) )) :named A38))
(assert (! (forall ((?v0py38 A_b_a_fun_fun_tree$)(?v1py38 A_a_fun_tree$)(?v2py22 A_tree$)) (! (= (ap_tree$e (ap_tree$r (ap_tree$s (pure_tree$f comp$f) ?v0py38) ?v1py38) ?v2py22) (ap_tree$e ?v0py38 (ap_tree$f ?v1py38 ?v2py22))) :pattern ((ap_tree$e (ap_tree$r (ap_tree$s (pure_tree$f comp$f) ?v0py38) ?v1py38) ?v2py22)) :pattern ((ap_tree$e ?v0py38 (ap_tree$f ?v1py38 ?v2py22))) )) :named A39))
(assert (! (forall ((?v0py39 B_a_fun_b_a_fun_fun_tree$)(?v1py39 A_b_a_fun_fun_tree$)(?v2py23 A_tree$)) (! (= (ap_tree$e (ap_tree$c (ap_tree$t (pure_tree$g comp$g) ?v0py39) ?v1py39) ?v2py23) (ap_tree$u ?v0py39 (ap_tree$e ?v1py39 ?v2py23))) :pattern ((ap_tree$e (ap_tree$c (ap_tree$t (pure_tree$g comp$g) ?v0py39) ?v1py39) ?v2py23)) :pattern ((ap_tree$u ?v0py39 (ap_tree$e ?v1py39 ?v2py23))) )) :named A40))
(assert (! (forall ((?v0py40 A_a_fun_a_a_fun_fun_tree$)(?v1py40 A_a_fun_a_a_fun_fun_tree$)(?v2py24 A_a_fun_tree$)) (! (= (ap_tree$d (ap_tree$v (ap_tree$w (pure_tree$h comp$h) ?v0py40) ?v1py40) ?v2py24) (ap_tree$d ?v0py40 (ap_tree$d ?v1py40 ?v2py24))) :pattern ((ap_tree$d (ap_tree$v (ap_tree$w (pure_tree$h comp$h) ?v0py40) ?v1py40) ?v2py24)) :pattern ((ap_tree$d ?v0py40 (ap_tree$d ?v1py40 ?v2py24))) )) :named A41))
(assert (! (forall ((?v0py41 B_a_fun_a_fun_b_a_fun_a_fun_fun_tree$)(?v1py41 A_b_a_fun_a_fun_fun_tree$)(?v2py25 A_tree$)) (! (= (ap_tree$x (ap_tree$b (ap_tree$y (pure_tree$i comp$i) ?v0py41) ?v1py41) ?v2py25) (ap_tree$z ?v0py41 (ap_tree$x ?v1py41 ?v2py25))) :pattern ((ap_tree$x (ap_tree$b (ap_tree$y (pure_tree$i comp$i) ?v0py41) ?v1py41) ?v2py25)) :pattern ((ap_tree$z ?v0py41 (ap_tree$x ?v1py41 ?v2py25))) )) :named A42))
(assert (! (forall ((?v0py42 A_b_a_fun_fun_tree$)(?v1py42 A_b_a_fun_fun_tree$)) (! (or (not (= (ap_tree$e ?v0py42 (pure_tree$j (?v2!7 ?v1py42 ?v0py42))) (ap_tree$e ?v1py42 (pure_tree$j (?v2!7 ?v1py42 ?v0py42))))) (= ?v0py42 ?v1py42)) :pattern ((?v2!7 ?v1py42 ?v0py42)) )) :named A43))
(assert (! (forall ((?v0py43 A_a_fun_tree$)(?v1py43 A_a_fun_tree$)) (! (or (not (= (ap_tree$f ?v0py43 (pure_tree$j (?v2!8 ?v1py43 ?v0py43))) (ap_tree$f ?v1py43 (pure_tree$j (?v2!8 ?v1py43 ?v0py43))))) (= ?v0py43 ?v1py43)) :pattern ((?v2!8 ?v1py43 ?v0py43)) )) :named A44))
(assert (! (forall ((?v0py44 A_b_a_fun_a_fun_fun_a_b_a_fun_a_fun_fun_fun_tree$)(?v1py44 A_b_a_fun_a_fun_fun_a_b_a_fun_a_fun_fun_fun_tree$)) (! (or (not (= (ap_tree$b ?v0py44 (pure_tree$k (?v2!9 ?v1py44 ?v0py44))) (ap_tree$b ?v1py44 (pure_tree$k (?v2!9 ?v1py44 ?v0py44))))) (= ?v0py44 ?v1py44)) :pattern ((?v2!9 ?v1py44 ?v0py44)) )) :named A45))
(assert (! (forall ((?v0py45 A_b_a_fun_fun_a_b_a_fun_fun_fun_tree$)(?v1py45 A_b_a_fun_fun_a_b_a_fun_fun_fun_tree$)) (! (or (not (= (ap_tree$c ?v0py45 (pure_tree$l (?v2!10 ?v1py45 ?v0py45))) (ap_tree$c ?v1py45 (pure_tree$l (?v2!10 ?v1py45 ?v0py45))))) (= ?v0py45 ?v1py45)) :pattern ((?v2!10 ?v1py45 ?v0py45)) )) :named A46))
(assert (! (forall ((?v0py46 A_a_fun_a_a_fun_fun_tree$)(?v1py46 A_a_fun_a_a_fun_fun_tree$)) (! (or (not (= (ap_tree$d ?v0py46 (pure_tree$m (?v2!11 ?v1py46 ?v0py46))) (ap_tree$d ?v1py46 (pure_tree$m (?v2!11 ?v1py46 ?v0py46))))) (= ?v0py46 ?v1py46)) :pattern ((?v2!11 ?v1py46 ?v0py46)) )) :named A47))
(assert (! (forall ((?v0py47 A_b_a_fun_fun_a_a_fun_fun_tree$)(?v1py47 A_b_a_fun_fun_a_a_fun_fun_tree$)) (! (or (not (= (ap_tree$ ?v0py47 (pure_tree$l (?v2!12 ?v1py47 ?v0py47))) (ap_tree$ ?v1py47 (pure_tree$l (?v2!12 ?v1py47 ?v0py47))))) (= ?v0py47 ?v1py47)) :pattern ((?v2!12 ?v1py47 ?v0py47)) )) :named A48))
(assert (! (forall ((?v0py48 A_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_tree$)(?v1py48 A_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_tree$)) (! (or (not (= (ap_tree$a ?v0py48 (pure_tree$k (?v2!13 ?v1py48 ?v0py48))) (ap_tree$a ?v1py48 (pure_tree$k (?v2!13 ?v1py48 ?v0py48))))) (= ?v0py48 ?v1py48)) :pattern ((?v2!13 ?v1py48 ?v0py48)) )) :named A49))
(assert (! (= i_tree$ (pure_tree$m id$)) :named A50))
(assert (! (= k_tree$ (pure_tree$k uu$)) :named A51))
(assert (! (= k_tree$a (pure_tree$l uua$)) :named A52))
(assert (! (forall ((?v0py49 A_b_a_fun_fun_a_a_fun_fun$)(?v1py49 A_b_a_fun_fun$)) (! (= (ap_tree$ (pure_tree$n ?v0py49) (pure_tree$l ?v1py49)) (pure_tree$m (fun_app$g ?v0py49 ?v1py49))) :pattern ((ap_tree$ (pure_tree$n ?v0py49) (pure_tree$l ?v1py49))) :pattern ((fun_app$g ?v0py49 ?v1py49)) )) :named A53))
(assert (! (forall ((?v0py50 A_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun$)(?v1py50 A_b_a_fun_a_fun_fun$)) (! (= (ap_tree$a (pure_tree$o ?v0py50) (pure_tree$k ?v1py50)) (pure_tree$n (fun_app$a ?v0py50 ?v1py50))) :pattern ((ap_tree$a (pure_tree$o ?v0py50) (pure_tree$k ?v1py50))) :pattern ((fun_app$a ?v0py50 ?v1py50)) )) :named A54))
(assert (! (forall ((?v0py51 A_a_fun$)(?v1py51 A$)) (! (= (ap_tree$f (pure_tree$m ?v0py51) (pure_tree$j ?v1py51)) (pure_tree$j (fun_app$m ?v0py51 ?v1py51))) :pattern ((ap_tree$f (pure_tree$m ?v0py51) (pure_tree$j ?v1py51))) :pattern ((fun_app$m ?v0py51 ?v1py51)) )) :named A55))
(assert (! (forall ((?v0py52 A_b_a_fun_fun$)(?v1py52 A$)) (! (= (ap_tree$e (pure_tree$l ?v0py52) (pure_tree$j ?v1py52)) (pure_tree$p (fun_app$k ?v0py52 ?v1py52))) :pattern ((ap_tree$e (pure_tree$l ?v0py52) (pure_tree$j ?v1py52))) :pattern ((fun_app$k ?v0py52 ?v1py52)) )) :named A56))
(assert (! (forall ((?v0py53 A_a_fun_a_a_fun_fun$)(?v1py53 A_a_fun$)) (! (= (ap_tree$d (pure_tree$q ?v0py53) (pure_tree$m ?v1py53)) (pure_tree$m (fun_app$i ?v0py53 ?v1py53))) :pattern ((ap_tree$d (pure_tree$q ?v0py53) (pure_tree$m ?v1py53))) :pattern ((fun_app$i ?v0py53 ?v1py53)) )) :named A57))
(assert (! (forall ((?v0py54 A_b_a_fun_a_fun_fun$)(?v1py54 A$)) (! (= (ap_tree$x (pure_tree$k ?v0py54) (pure_tree$j ?v1py54)) (pure_tree$r (fun_app$o ?v0py54 ?v1py54))) :pattern ((ap_tree$x (pure_tree$k ?v0py54) (pure_tree$j ?v1py54))) :pattern ((fun_app$o ?v0py54 ?v1py54)) )) :named A58))
(assert (! (forall ((?v0py55 A_a_fun_a_b_a_fun_fun_fun$)(?v1py55 A_a_fun$)) (! (= (ap_tree$r (pure_tree$s ?v0py55) (pure_tree$m ?v1py55)) (pure_tree$l (fun_app$au ?v0py55 ?v1py55))) :pattern ((ap_tree$r (pure_tree$s ?v0py55) (pure_tree$m ?v1py55))) :pattern ((fun_app$au ?v0py55 ?v1py55)) )) :named A59))
(assert (! (forall ((?v0py56 A_b_a_fun_a_fun_fun_a_a_fun_fun$)(?v1py56 A_b_a_fun_a_fun_fun$)) (! (= (ap_tree$aa (pure_tree$t ?v0py56) (pure_tree$k ?v1py56)) (pure_tree$m (fun_app$av ?v0py56 ?v1py56))) :pattern ((ap_tree$aa (pure_tree$t ?v0py56) (pure_tree$k ?v1py56))) :pattern ((fun_app$av ?v0py56 ?v1py56)) )) :named A60))
(assert (! (forall ((?v0py57 A_b_a_fun_fun_a_b_a_fun_fun_fun$)(?v1py57 A_b_a_fun_fun$)) (! (= (ap_tree$c (pure_tree$u ?v0py57) (pure_tree$l ?v1py57)) (pure_tree$l (fun_app$e ?v0py57 ?v1py57))) :pattern ((ap_tree$c (pure_tree$u ?v0py57) (pure_tree$l ?v1py57))) :pattern ((fun_app$e ?v0py57 ?v1py57)) )) :named A61))
(assert (! (forall ((?v0py58 A_a_fun_a_b_a_fun_a_fun_fun_fun$)(?v1py58 A_a_fun$)) (! (= (ap_tree$ab (pure_tree$v ?v0py58) (pure_tree$m ?v1py58)) (pure_tree$k (fun_app$aw ?v0py58 ?v1py58))) :pattern ((ap_tree$ab (pure_tree$v ?v0py58) (pure_tree$m ?v1py58))) :pattern ((fun_app$aw ?v0py58 ?v1py58)) )) :named A62))
(assert (! (forall ((?v0py59 A_b_a_fun_fun_a_a_fun_fun$)(?v1py59 A_b_a_fun_fun$)(?v2py26 A_b_a_fun_fun_tree$)(?v3py0 A_b_a_fun_fun_tree$)) (! (= (ap_tree$ (pure_tree$n ?v0py59) (node$b ?v1py59 ?v2py26 ?v3py0)) (node$ (fun_app$g ?v0py59 ?v1py59) (ap_tree$ (pure_tree$n ?v0py59) ?v2py26) (ap_tree$ (pure_tree$n ?v0py59) ?v3py0))) :pattern ((ap_tree$ (pure_tree$n ?v0py59) (node$b ?v1py59 ?v2py26 ?v3py0))) :pattern ((node$ (fun_app$g ?v0py59 ?v1py59) (ap_tree$ (pure_tree$n ?v0py59) ?v2py26) (ap_tree$ (pure_tree$n ?v0py59) ?v3py0))) )) :named A63))
(assert (! (forall ((?v0py60 A_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun$)(?v1py60 A_b_a_fun_a_fun_fun$)(?v2py27 A_b_a_fun_a_fun_fun_tree$)(?v3py1 A_b_a_fun_a_fun_fun_tree$)) (! (= (ap_tree$a (pure_tree$o ?v0py60) (node$d ?v1py60 ?v2py27 ?v3py1)) (node$a (fun_app$a ?v0py60 ?v1py60) (ap_tree$a (pure_tree$o ?v0py60) ?v2py27) (ap_tree$a (pure_tree$o ?v0py60) ?v3py1))) :pattern ((ap_tree$a (pure_tree$o ?v0py60) (node$d ?v1py60 ?v2py27 ?v3py1))) :pattern ((node$a (fun_app$a ?v0py60 ?v1py60) (ap_tree$a (pure_tree$o ?v0py60) ?v2py27) (ap_tree$a (pure_tree$o ?v0py60) ?v3py1))) )) :named A64))
(assert (! (forall ((?v0py61 A_a_fun$)(?v1py61 A$)(?v2py28 A_tree$)(?v3py2 A_tree$)) (! (= (ap_tree$f (pure_tree$m ?v0py61) (node$h ?v1py61 ?v2py28 ?v3py2)) (node$h (fun_app$m ?v0py61 ?v1py61) (ap_tree$f (pure_tree$m ?v0py61) ?v2py28) (ap_tree$f (pure_tree$m ?v0py61) ?v3py2))) :pattern ((ap_tree$f (pure_tree$m ?v0py61) (node$h ?v1py61 ?v2py28 ?v3py2))) :pattern ((node$h (fun_app$m ?v0py61 ?v1py61) (ap_tree$f (pure_tree$m ?v0py61) ?v2py28) (ap_tree$f (pure_tree$m ?v0py61) ?v3py2))) )) :named A65))
(assert (! (forall ((?v0py62 A_b_a_fun_fun$)(?v1py62 A$)(?v2py29 A_tree$)(?v3py3 A_tree$)) (! (= (ap_tree$e (pure_tree$l ?v0py62) (node$h ?v1py62 ?v2py29 ?v3py3)) (node$i (fun_app$k ?v0py62 ?v1py62) (ap_tree$e (pure_tree$l ?v0py62) ?v2py29) (ap_tree$e (pure_tree$l ?v0py62) ?v3py3))) :pattern ((ap_tree$e (pure_tree$l ?v0py62) (node$h ?v1py62 ?v2py29 ?v3py3))) :pattern ((node$i (fun_app$k ?v0py62 ?v1py62) (ap_tree$e (pure_tree$l ?v0py62) ?v2py29) (ap_tree$e (pure_tree$l ?v0py62) ?v3py3))) )) :named A66))
(assert (! (forall ((?v0py63 A_b_a_fun_a_fun_fun$)(?v1py63 A$)(?v2py30 A_tree$)(?v3py4 A_tree$)) (! (= (ap_tree$x (pure_tree$k ?v0py63) (node$h ?v1py63 ?v2py30 ?v3py4)) (node$j (fun_app$o ?v0py63 ?v1py63) (ap_tree$x (pure_tree$k ?v0py63) ?v2py30) (ap_tree$x (pure_tree$k ?v0py63) ?v3py4))) :pattern ((ap_tree$x (pure_tree$k ?v0py63) (node$h ?v1py63 ?v2py30 ?v3py4))) :pattern ((node$j (fun_app$o ?v0py63 ?v1py63) (ap_tree$x (pure_tree$k ?v0py63) ?v2py30) (ap_tree$x (pure_tree$k ?v0py63) ?v3py4))) )) :named A67))
(assert (! (forall ((?v0py64 A_a_fun_a_a_fun_fun$)(?v1py64 A_a_fun$)(?v2py31 A_a_fun_tree$)(?v3py5 A_a_fun_tree$)) (! (= (ap_tree$d (pure_tree$q ?v0py64) (node$ ?v1py64 ?v2py31 ?v3py5)) (node$ (fun_app$i ?v0py64 ?v1py64) (ap_tree$d (pure_tree$q ?v0py64) ?v2py31) (ap_tree$d (pure_tree$q ?v0py64) ?v3py5))) :pattern ((ap_tree$d (pure_tree$q ?v0py64) (node$ ?v1py64 ?v2py31 ?v3py5))) :pattern ((node$ (fun_app$i ?v0py64 ?v1py64) (ap_tree$d (pure_tree$q ?v0py64) ?v2py31) (ap_tree$d (pure_tree$q ?v0py64) ?v3py5))) )) :named A68))
(assert (! (forall ((?v0py65 A_a_fun_a_b_a_fun_fun_fun$)(?v1py65 A_a_fun$)(?v2py32 A_a_fun_tree$)(?v3py6 A_a_fun_tree$)) (! (= (ap_tree$r (pure_tree$s ?v0py65) (node$ ?v1py65 ?v2py32 ?v3py6)) (node$b (fun_app$au ?v0py65 ?v1py65) (ap_tree$r (pure_tree$s ?v0py65) ?v2py32) (ap_tree$r (pure_tree$s ?v0py65) ?v3py6))) :pattern ((ap_tree$r (pure_tree$s ?v0py65) (node$ ?v1py65 ?v2py32 ?v3py6))) :pattern ((node$b (fun_app$au ?v0py65 ?v1py65) (ap_tree$r (pure_tree$s ?v0py65) ?v2py32) (ap_tree$r (pure_tree$s ?v0py65) ?v3py6))) )) :named A69))
(assert (! (forall ((?v0py66 A_b_a_fun_a_fun_fun_a_a_fun_fun$)(?v1py66 A_b_a_fun_a_fun_fun$)(?v2py33 A_b_a_fun_a_fun_fun_tree$)(?v3py7 A_b_a_fun_a_fun_fun_tree$)) (! (= (ap_tree$aa (pure_tree$t ?v0py66) (node$d ?v1py66 ?v2py33 ?v3py7)) (node$ (fun_app$av ?v0py66 ?v1py66) (ap_tree$aa (pure_tree$t ?v0py66) ?v2py33) (ap_tree$aa (pure_tree$t ?v0py66) ?v3py7))) :pattern ((ap_tree$aa (pure_tree$t ?v0py66) (node$d ?v1py66 ?v2py33 ?v3py7))) :pattern ((node$ (fun_app$av ?v0py66 ?v1py66) (ap_tree$aa (pure_tree$t ?v0py66) ?v2py33) (ap_tree$aa (pure_tree$t ?v0py66) ?v3py7))) )) :named A70))
(assert (! (forall ((?v0py67 A_b_a_fun_fun_a_b_a_fun_fun_fun$)(?v1py67 A_b_a_fun_fun$)(?v2py34 A_b_a_fun_fun_tree$)(?v3py8 A_b_a_fun_fun_tree$)) (! (= (ap_tree$c (pure_tree$u ?v0py67) (node$b ?v1py67 ?v2py34 ?v3py8)) (node$b (fun_app$e ?v0py67 ?v1py67) (ap_tree$c (pure_tree$u ?v0py67) ?v2py34) (ap_tree$c (pure_tree$u ?v0py67) ?v3py8))) :pattern ((ap_tree$c (pure_tree$u ?v0py67) (node$b ?v1py67 ?v2py34 ?v3py8))) :pattern ((node$b (fun_app$e ?v0py67 ?v1py67) (ap_tree$c (pure_tree$u ?v0py67) ?v2py34) (ap_tree$c (pure_tree$u ?v0py67) ?v3py8))) )) :named A71))
(assert (! (forall ((?v0py68 A_a_fun_a_b_a_fun_a_fun_fun_fun$)(?v1py68 A_a_fun$)(?v2py35 A_a_fun_tree$)(?v3py9 A_a_fun_tree$)) (! (= (ap_tree$ab (pure_tree$v ?v0py68) (node$ ?v1py68 ?v2py35 ?v3py9)) (node$d (fun_app$aw ?v0py68 ?v1py68) (ap_tree$ab (pure_tree$v ?v0py68) ?v2py35) (ap_tree$ab (pure_tree$v ?v0py68) ?v3py9))) :pattern ((ap_tree$ab (pure_tree$v ?v0py68) (node$ ?v1py68 ?v2py35 ?v3py9))) :pattern ((node$d (fun_app$aw ?v0py68 ?v1py68) (ap_tree$ab (pure_tree$v ?v0py68) ?v2py35) (ap_tree$ab (pure_tree$v ?v0py68) ?v3py9))) )) :named A72))
(assert (! (forall ((?v0py69 A_b_a_fun_fun_a_a_fun_fun$)(?v1py69 A_b_a_fun_fun_a_a_fun_fun_tree$)(?v2py36 A_b_a_fun_fun_a_a_fun_fun_tree$)(?v3py10 A_b_a_fun_fun$)(?v4py0 A_b_a_fun_fun_tree$)(?v5py0 A_b_a_fun_fun_tree$)) (! (= (ap_tree$ (node$a ?v0py69 ?v1py69 ?v2py36) (node$b ?v3py10 ?v4py0 ?v5py0)) (node$ (fun_app$g ?v0py69 ?v3py10) (ap_tree$ ?v1py69 ?v4py0) (ap_tree$ ?v2py36 ?v5py0))) :pattern ((ap_tree$ (node$a ?v0py69 ?v1py69 ?v2py36) (node$b ?v3py10 ?v4py0 ?v5py0))) )) :named A73))
(assert (! (forall ((?v0py70 A_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun$)(?v1py70 A_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_tree$)(?v2py37 A_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_tree$)(?v3py11 A_b_a_fun_a_fun_fun$)(?v4py1 A_b_a_fun_a_fun_fun_tree$)(?v5py1 A_b_a_fun_a_fun_fun_tree$)) (! (= (ap_tree$a (node$c ?v0py70 ?v1py70 ?v2py37) (node$d ?v3py11 ?v4py1 ?v5py1)) (node$a (fun_app$a ?v0py70 ?v3py11) (ap_tree$a ?v1py70 ?v4py1) (ap_tree$a ?v2py37 ?v5py1))) :pattern ((ap_tree$a (node$c ?v0py70 ?v1py70 ?v2py37) (node$d ?v3py11 ?v4py1 ?v5py1))) )) :named A74))
(assert (! (forall ((?v0py71 A_a_fun$)(?v1py71 A_a_fun_tree$)(?v2py38 A_a_fun_tree$)(?v3py12 A$)(?v4py2 A_tree$)(?v5py2 A_tree$)) (! (= (ap_tree$f (node$ ?v0py71 ?v1py71 ?v2py38) (node$h ?v3py12 ?v4py2 ?v5py2)) (node$h (fun_app$m ?v0py71 ?v3py12) (ap_tree$f ?v1py71 ?v4py2) (ap_tree$f ?v2py38 ?v5py2))) :pattern ((ap_tree$f (node$ ?v0py71 ?v1py71 ?v2py38) (node$h ?v3py12 ?v4py2 ?v5py2))) )) :named A75))
(assert (! (forall ((?v0py72 A_b_a_fun_fun$)(?v1py72 A_b_a_fun_fun_tree$)(?v2py39 A_b_a_fun_fun_tree$)(?v3py13 A$)(?v4py3 A_tree$)(?v5py3 A_tree$)) (! (= (ap_tree$e (node$b ?v0py72 ?v1py72 ?v2py39) (node$h ?v3py13 ?v4py3 ?v5py3)) (node$i (fun_app$k ?v0py72 ?v3py13) (ap_tree$e ?v1py72 ?v4py3) (ap_tree$e ?v2py39 ?v5py3))) :pattern ((ap_tree$e (node$b ?v0py72 ?v1py72 ?v2py39) (node$h ?v3py13 ?v4py3 ?v5py3))) )) :named A76))
(assert (! (forall ((?v0py73 A_a_fun_a_a_fun_fun$)(?v1py73 A_a_fun_a_a_fun_fun_tree$)(?v2py40 A_a_fun_a_a_fun_fun_tree$)(?v3py14 A_a_fun$)(?v4py4 A_a_fun_tree$)(?v5py4 A_a_fun_tree$)) (! (= (ap_tree$d (node$g ?v0py73 ?v1py73 ?v2py40) (node$ ?v3py14 ?v4py4 ?v5py4)) (node$ (fun_app$i ?v0py73 ?v3py14) (ap_tree$d ?v1py73 ?v4py4) (ap_tree$d ?v2py40 ?v5py4))) :pattern ((ap_tree$d (node$g ?v0py73 ?v1py73 ?v2py40) (node$ ?v3py14 ?v4py4 ?v5py4))) )) :named A77))
(assert (! (forall ((?v0py74 A_b_a_fun_a_fun_fun$)(?v1py74 A_b_a_fun_a_fun_fun_tree$)(?v2py41 A_b_a_fun_a_fun_fun_tree$)(?v3py15 A$)(?v4py5 A_tree$)(?v5py5 A_tree$)) (! (= (ap_tree$x (node$d ?v0py74 ?v1py74 ?v2py41) (node$h ?v3py15 ?v4py5 ?v5py5)) (node$j (fun_app$o ?v0py74 ?v3py15) (ap_tree$x ?v1py74 ?v4py5) (ap_tree$x ?v2py41 ?v5py5))) :pattern ((ap_tree$x (node$d ?v0py74 ?v1py74 ?v2py41) (node$h ?v3py15 ?v4py5 ?v5py5))) )) :named A78))
(assert (! (forall ((?v0py75 A_a_fun_a_b_a_fun_fun_fun$)(?v1py75 A_a_fun_a_b_a_fun_fun_fun_tree$)(?v2py42 A_a_fun_a_b_a_fun_fun_fun_tree$)(?v3py16 A_a_fun$)(?v4py6 A_a_fun_tree$)(?v5py6 A_a_fun_tree$)) (! (= (ap_tree$r (node$u ?v0py75 ?v1py75 ?v2py42) (node$ ?v3py16 ?v4py6 ?v5py6)) (node$b (fun_app$au ?v0py75 ?v3py16) (ap_tree$r ?v1py75 ?v4py6) (ap_tree$r ?v2py42 ?v5py6))) :pattern ((ap_tree$r (node$u ?v0py75 ?v1py75 ?v2py42) (node$ ?v3py16 ?v4py6 ?v5py6))) )) :named A79))
(assert (! (forall ((?v0py76 A_b_a_fun_a_fun_fun_a_a_fun_fun$)(?v1py76 A_b_a_fun_a_fun_fun_a_a_fun_fun_tree$)(?v2py43 A_b_a_fun_a_fun_fun_a_a_fun_fun_tree$)(?v3py17 A_b_a_fun_a_fun_fun$)(?v4py7 A_b_a_fun_a_fun_fun_tree$)(?v5py7 A_b_a_fun_a_fun_fun_tree$)) (! (= (ap_tree$aa (node$ac ?v0py76 ?v1py76 ?v2py43) (node$d ?v3py17 ?v4py7 ?v5py7)) (node$ (fun_app$av ?v0py76 ?v3py17) (ap_tree$aa ?v1py76 ?v4py7) (ap_tree$aa ?v2py43 ?v5py7))) :pattern ((ap_tree$aa (node$ac ?v0py76 ?v1py76 ?v2py43) (node$d ?v3py17 ?v4py7 ?v5py7))) )) :named A80))
(assert (! (forall ((?v0py77 A_b_a_fun_fun_a_b_a_fun_fun_fun$)(?v1py77 A_b_a_fun_fun_a_b_a_fun_fun_fun_tree$)(?v2py44 A_b_a_fun_fun_a_b_a_fun_fun_fun_tree$)(?v3py18 A_b_a_fun_fun$)(?v4py8 A_b_a_fun_fun_tree$)(?v5py8 A_b_a_fun_fun_tree$)) (! (= (ap_tree$c (node$f ?v0py77 ?v1py77 ?v2py44) (node$b ?v3py18 ?v4py8 ?v5py8)) (node$b (fun_app$e ?v0py77 ?v3py18) (ap_tree$c ?v1py77 ?v4py8) (ap_tree$c ?v2py44 ?v5py8))) :pattern ((ap_tree$c (node$f ?v0py77 ?v1py77 ?v2py44) (node$b ?v3py18 ?v4py8 ?v5py8))) )) :named A81))
(assert (! (forall ((?v0py78 A_a_fun_a_b_a_fun_a_fun_fun_fun$)(?v1py78 A_a_fun_a_b_a_fun_a_fun_fun_fun_tree$)(?v2py45 A_a_fun_a_b_a_fun_a_fun_fun_fun_tree$)(?v3py19 A_a_fun$)(?v4py9 A_a_fun_tree$)(?v5py9 A_a_fun_tree$)) (! (= (ap_tree$ab (node$ad ?v0py78 ?v1py78 ?v2py45) (node$ ?v3py19 ?v4py9 ?v5py9)) (node$d (fun_app$aw ?v0py78 ?v3py19) (ap_tree$ab ?v1py78 ?v4py9) (ap_tree$ab ?v2py45 ?v5py9))) :pattern ((ap_tree$ab (node$ad ?v0py78 ?v1py78 ?v2py45) (node$ ?v3py19 ?v4py9 ?v5py9))) )) :named A82))
(assert (! (forall ((?v0py79 A_b_a_fun_fun_tree$)(?v1py79 A$)) (! (= (ap_tree$e ?v0py79 (pure_tree$j ?v1py79)) (ap_tree$ac (pure_tree$w (uub$ ?v1py79)) ?v0py79)) :pattern ((ap_tree$e ?v0py79 (pure_tree$j ?v1py79))) :pattern ((ap_tree$ac (pure_tree$w (uub$ ?v1py79)) ?v0py79)) )) :named A83))
(assert (! (forall ((?v0py80 A_a_fun_tree$)(?v1py80 A$)) (! (= (ap_tree$f ?v0py80 (pure_tree$j ?v1py80)) (ap_tree$ad (pure_tree$x (uuc$ ?v1py80)) ?v0py80)) :pattern ((ap_tree$f ?v0py80 (pure_tree$j ?v1py80))) :pattern ((ap_tree$ad (pure_tree$x (uuc$ ?v1py80)) ?v0py80)) )) :named A84))
(assert (! (forall ((?v0py81 A_b_a_fun_a_fun_fun_a_b_a_fun_a_fun_fun_fun_tree$)(?v1py81 A_b_a_fun_a_fun_fun$)) (! (= (ap_tree$b ?v0py81 (pure_tree$k ?v1py81)) (ap_tree$ae (pure_tree$y (uud$ ?v1py81)) ?v0py81)) :pattern ((ap_tree$b ?v0py81 (pure_tree$k ?v1py81))) :pattern ((ap_tree$ae (pure_tree$y (uud$ ?v1py81)) ?v0py81)) )) :named A85))
(assert (! (forall ((?v0py82 A_b_a_fun_fun_a_b_a_fun_fun_fun_tree$)(?v1py82 A_b_a_fun_fun$)) (! (= (ap_tree$c ?v0py82 (pure_tree$l ?v1py82)) (ap_tree$af (pure_tree$z (uue$ ?v1py82)) ?v0py82)) :pattern ((ap_tree$c ?v0py82 (pure_tree$l ?v1py82))) :pattern ((ap_tree$af (pure_tree$z (uue$ ?v1py82)) ?v0py82)) )) :named A86))
(assert (! (forall ((?v0py83 A_a_fun_a_a_fun_fun_tree$)(?v1py83 A_a_fun$)) (! (= (ap_tree$d ?v0py83 (pure_tree$m ?v1py83)) (ap_tree$ag (pure_tree$aa (uuf$ ?v1py83)) ?v0py83)) :pattern ((ap_tree$d ?v0py83 (pure_tree$m ?v1py83))) :pattern ((ap_tree$ag (pure_tree$aa (uuf$ ?v1py83)) ?v0py83)) )) :named A87))
(assert (! (forall ((?v0py84 A_b_a_fun_fun_a_a_fun_fun_tree$)(?v1py84 A_b_a_fun_fun$)) (! (= (ap_tree$ ?v0py84 (pure_tree$l ?v1py84)) (ap_tree$ah (pure_tree$ab (uug$ ?v1py84)) ?v0py84)) :pattern ((ap_tree$ ?v0py84 (pure_tree$l ?v1py84))) :pattern ((ap_tree$ah (pure_tree$ab (uug$ ?v1py84)) ?v0py84)) )) :named A88))
(assert (! (forall ((?v0py85 A_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_tree$)(?v1py85 A_b_a_fun_a_fun_fun$)) (! (= (ap_tree$a ?v0py85 (pure_tree$k ?v1py85)) (ap_tree$ai (pure_tree$ac (uuh$ ?v1py85)) ?v0py85)) :pattern ((ap_tree$a ?v0py85 (pure_tree$k ?v1py85))) :pattern ((ap_tree$ai (pure_tree$ac (uuh$ ?v1py85)) ?v0py85)) )) :named A89))
(assert (! (forall ((?v0py86 A_b_a_fun_a_fun_fun_a_b_a_fun_a_fun_fun_fun$)(?v1py86 A_b_a_fun_a_fun_fun_tree$)) (! (= (ap_tree$b (pure_tree$ad ?v0py86) ?v1py86) (fun_app$ak (map_tree$ ?v0py86) ?v1py86)) :pattern ((ap_tree$b (pure_tree$ad ?v0py86) ?v1py86)) :pattern ((fun_app$ak (map_tree$ ?v0py86) ?v1py86)) )) :named A90))
(assert (! (forall ((?v0py87 A_b_a_fun_fun_a_b_a_fun_fun_fun$)(?v1py87 A_b_a_fun_fun_tree$)) (! (= (ap_tree$c (pure_tree$u ?v0py87) ?v1py87) (fun_app$an (map_tree$a ?v0py87) ?v1py87)) :pattern ((ap_tree$c (pure_tree$u ?v0py87) ?v1py87)) :pattern ((fun_app$an (map_tree$a ?v0py87) ?v1py87)) )) :named A91))
(assert (! (forall ((?v0py88 A_a_fun_a_a_fun_fun$)(?v1py88 A_a_fun_tree$)) (! (= (ap_tree$d (pure_tree$q ?v0py88) ?v1py88) (fun_app$aq (map_tree$b ?v0py88) ?v1py88)) :pattern ((ap_tree$d (pure_tree$q ?v0py88) ?v1py88)) :pattern ((fun_app$aq (map_tree$b ?v0py88) ?v1py88)) )) :named A92))
(assert (! (forall ((?v0py89 A_b_a_fun_a_fun_fun$)(?v1py89 A_tree$)) (! (= (ap_tree$x (pure_tree$k ?v0py89) ?v1py89) (map_tree$c ?v0py89 ?v1py89)) :pattern ((ap_tree$x (pure_tree$k ?v0py89) ?v1py89)) :pattern ((map_tree$c ?v0py89 ?v1py89)) )) :named A93))
(assert (! (forall ((?v0py90 A_b_a_fun_fun$)(?v1py90 A_tree$)) (! (= (ap_tree$e (pure_tree$l ?v0py90) ?v1py90) (fun_app$ax (map_tree$d ?v0py90) ?v1py90)) :pattern ((ap_tree$e (pure_tree$l ?v0py90) ?v1py90)) :pattern ((fun_app$ax (map_tree$d ?v0py90) ?v1py90)) )) :named A94))
(assert (! (forall ((?v0py91 A_a_fun$)(?v1py91 A_tree$)) (! (= (ap_tree$f (pure_tree$m ?v0py91) ?v1py91) (fun_app$ay (map_tree$e ?v0py91) ?v1py91)) :pattern ((ap_tree$f (pure_tree$m ?v0py91) ?v1py91)) :pattern ((fun_app$ay (map_tree$e ?v0py91) ?v1py91)) )) :named A95))
(assert (! (forall ((?v0py92 A_b_a_fun_fun_a_a_fun_fun$)(?v1py92 A_b_a_fun_fun_tree$)) (! (= (ap_tree$ (pure_tree$n ?v0py92) ?v1py92) (fun_app$az (map_tree$f ?v0py92) ?v1py92)) :pattern ((ap_tree$ (pure_tree$n ?v0py92) ?v1py92)) :pattern ((fun_app$az (map_tree$f ?v0py92) ?v1py92)) )) :named A96))
(assert (! (forall ((?v0py93 A_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun$)(?v1py93 A_b_a_fun_a_fun_fun_tree$)) (! (= (ap_tree$a (pure_tree$o ?v0py93) ?v1py93) (fun_app$ba (map_tree$g ?v0py93) ?v1py93)) :pattern ((ap_tree$a (pure_tree$o ?v0py93) ?v1py93)) :pattern ((fun_app$ba (map_tree$g ?v0py93) ?v1py93)) )) :named A97))
(assert (! (forall ((?v0py94 A_b_a_fun_fun_a_a_fun_fun_tree$)(?v1py94 A_b_a_fun_fun_tree$)) (! (= (root$a (ap_tree$ ?v0py94 ?v1py94)) (fun_app$g (root$b ?v0py94) (root$c ?v1py94))) :pattern ((ap_tree$ ?v0py94 ?v1py94)) :pattern ((fun_app$g (root$b ?v0py94) (root$c ?v1py94))) )) :named A98))
(assert (! (forall ((?v0py95 A_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_tree$)(?v1py95 A_b_a_fun_a_fun_fun_tree$)) (! (= (root$b (ap_tree$a ?v0py95 ?v1py95)) (fun_app$a (root$d ?v0py95) (root$e ?v1py95))) :pattern ((ap_tree$a ?v0py95 ?v1py95)) :pattern ((fun_app$a (root$d ?v0py95) (root$e ?v1py95))) )) :named A99))
(assert (! (forall ((?v0py96 A_a_fun_tree$)(?v1py96 A_tree$)) (! (= (root$ (ap_tree$f ?v0py96 ?v1py96)) (fun_app$m (root$a ?v0py96) (root$ ?v1py96))) :pattern ((ap_tree$f ?v0py96 ?v1py96)) :pattern ((fun_app$m (root$a ?v0py96) (root$ ?v1py96))) )) :named A100))
(assert (! (forall ((?v0py97 A_b_a_fun_fun_tree$)(?v1py97 A_tree$)) (! (= (root$f (ap_tree$e ?v0py97 ?v1py97)) (fun_app$k (root$c ?v0py97) (root$ ?v1py97))) :pattern ((ap_tree$e ?v0py97 ?v1py97)) :pattern ((fun_app$k (root$c ?v0py97) (root$ ?v1py97))) )) :named A101))
(assert (! (forall ((?v0py98 A_b_a_fun_a_fun_fun_tree$)(?v1py98 A_tree$)) (! (= (root$g (ap_tree$x ?v0py98 ?v1py98)) (fun_app$o (root$e ?v0py98) (root$ ?v1py98))) :pattern ((ap_tree$x ?v0py98 ?v1py98)) :pattern ((fun_app$o (root$e ?v0py98) (root$ ?v1py98))) )) :named A102))
(assert (! (forall ((?v0py99 A_a_fun_a_a_fun_fun_tree$)(?v1py99 A_a_fun_tree$)) (! (= (root$a (ap_tree$d ?v0py99 ?v1py99)) (fun_app$i (root$h ?v0py99) (root$a ?v1py99))) :pattern ((ap_tree$d ?v0py99 ?v1py99)) :pattern ((fun_app$i (root$h ?v0py99) (root$a ?v1py99))) )) :named A103))
(assert (! (forall ((?v0py100 A_a_fun_a_b_a_fun_fun_fun_tree$)(?v1py100 A_a_fun_tree$)) (! (= (root$c (ap_tree$r ?v0py100 ?v1py100)) (fun_app$au (root$i ?v0py100) (root$a ?v1py100))) :pattern ((ap_tree$r ?v0py100 ?v1py100)) :pattern ((fun_app$au (root$i ?v0py100) (root$a ?v1py100))) )) :named A104))
(assert (! (forall ((?v0py101 A_a_fun_a_b_a_fun_a_fun_fun_fun_tree$)(?v1py101 A_a_fun_tree$)) (! (= (root$e (ap_tree$ab ?v0py101 ?v1py101)) (fun_app$aw (root$j ?v0py101) (root$a ?v1py101))) :pattern ((ap_tree$ab ?v0py101 ?v1py101)) :pattern ((fun_app$aw (root$j ?v0py101) (root$a ?v1py101))) )) :named A105))
(assert (! (forall ((?v0py102 A_b_a_fun_a_fun_fun_a_a_fun_fun_tree$)(?v1py102 A_b_a_fun_a_fun_fun_tree$)) (! (= (root$a (ap_tree$aa ?v0py102 ?v1py102)) (fun_app$av (root$k ?v0py102) (root$e ?v1py102))) :pattern ((ap_tree$aa ?v0py102 ?v1py102)) :pattern ((fun_app$av (root$k ?v0py102) (root$e ?v1py102))) )) :named A106))
(assert (! (forall ((?v0py103 A_b_a_fun_fun_a_b_a_fun_fun_fun_tree$)(?v1py103 A_b_a_fun_fun_tree$)) (! (= (root$c (ap_tree$c ?v0py103 ?v1py103)) (fun_app$e (root$l ?v0py103) (root$c ?v1py103))) :pattern ((ap_tree$c ?v0py103 ?v1py103)) :pattern ((fun_app$e (root$l ?v0py103) (root$c ?v1py103))) )) :named A107))
(assert (! (forall ((?v0py104 A_b_a_fun_fun_a_a_fun_fun_tree$)(?v1py104 A_b_a_fun_fun_tree$)) (! (= (left$a (ap_tree$ ?v0py104 ?v1py104)) (ap_tree$ (left$b ?v0py104) (left$c ?v1py104))) :pattern ((left$a (ap_tree$ ?v0py104 ?v1py104))) :pattern ((ap_tree$ (left$b ?v0py104) (left$c ?v1py104))) )) :named A108))
(assert (! (forall ((?v0py105 A_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_tree$)(?v1py105 A_b_a_fun_a_fun_fun_tree$)) (! (= (left$b (ap_tree$a ?v0py105 ?v1py105)) (ap_tree$a (left$d ?v0py105) (left$e ?v1py105))) :pattern ((left$b (ap_tree$a ?v0py105 ?v1py105))) :pattern ((ap_tree$a (left$d ?v0py105) (left$e ?v1py105))) )) :named A109))
(assert (! (forall ((?v0py106 A_a_fun_tree$)(?v1py106 A_tree$)) (! (= (left$ (ap_tree$f ?v0py106 ?v1py106)) (ap_tree$f (left$a ?v0py106) (left$ ?v1py106))) :pattern ((left$ (ap_tree$f ?v0py106 ?v1py106))) :pattern ((ap_tree$f (left$a ?v0py106) (left$ ?v1py106))) )) :named A110))
(assert (! (forall ((?v0py107 A_b_a_fun_fun_tree$)(?v1py107 A_tree$)) (! (= (left$f (ap_tree$e ?v0py107 ?v1py107)) (ap_tree$e (left$c ?v0py107) (left$ ?v1py107))) :pattern ((left$f (ap_tree$e ?v0py107 ?v1py107))) :pattern ((ap_tree$e (left$c ?v0py107) (left$ ?v1py107))) )) :named A111))
(assert (! (forall ((?v0py108 A_b_a_fun_a_fun_fun_tree$)(?v1py108 A_tree$)) (! (= (left$g (ap_tree$x ?v0py108 ?v1py108)) (ap_tree$x (left$e ?v0py108) (left$ ?v1py108))) :pattern ((left$g (ap_tree$x ?v0py108 ?v1py108))) :pattern ((ap_tree$x (left$e ?v0py108) (left$ ?v1py108))) )) :named A112))
(assert (! (forall ((?v0py109 A_a_fun_a_a_fun_fun_tree$)(?v1py109 A_a_fun_tree$)) (! (= (left$a (ap_tree$d ?v0py109 ?v1py109)) (ap_tree$d (left$h ?v0py109) (left$a ?v1py109))) :pattern ((left$a (ap_tree$d ?v0py109 ?v1py109))) :pattern ((ap_tree$d (left$h ?v0py109) (left$a ?v1py109))) )) :named A113))
(assert (! (forall ((?v0py110 A_a_fun_a_b_a_fun_fun_fun_tree$)(?v1py110 A_a_fun_tree$)) (! (= (left$c (ap_tree$r ?v0py110 ?v1py110)) (ap_tree$r (left$i ?v0py110) (left$a ?v1py110))) :pattern ((left$c (ap_tree$r ?v0py110 ?v1py110))) :pattern ((ap_tree$r (left$i ?v0py110) (left$a ?v1py110))) )) :named A114))
(assert (! (forall ((?v0py111 A_a_fun_a_b_a_fun_a_fun_fun_fun_tree$)(?v1py111 A_a_fun_tree$)) (! (= (left$e (ap_tree$ab ?v0py111 ?v1py111)) (ap_tree$ab (left$j ?v0py111) (left$a ?v1py111))) :pattern ((left$e (ap_tree$ab ?v0py111 ?v1py111))) :pattern ((ap_tree$ab (left$j ?v0py111) (left$a ?v1py111))) )) :named A115))
(assert (! (forall ((?v0py112 A_b_a_fun_a_fun_fun_a_a_fun_fun_tree$)(?v1py112 A_b_a_fun_a_fun_fun_tree$)) (! (= (left$a (ap_tree$aa ?v0py112 ?v1py112)) (ap_tree$aa (left$k ?v0py112) (left$e ?v1py112))) :pattern ((left$a (ap_tree$aa ?v0py112 ?v1py112))) :pattern ((ap_tree$aa (left$k ?v0py112) (left$e ?v1py112))) )) :named A116))
(assert (! (forall ((?v0py113 A_b_a_fun_fun_a_b_a_fun_fun_fun_tree$)(?v1py113 A_b_a_fun_fun_tree$)) (! (= (left$c (ap_tree$c ?v0py113 ?v1py113)) (ap_tree$c (left$l ?v0py113) (left$c ?v1py113))) :pattern ((left$c (ap_tree$c ?v0py113 ?v1py113))) :pattern ((ap_tree$c (left$l ?v0py113) (left$c ?v1py113))) )) :named A117))
(assert (! (forall ((?v0py114 A_b_a_fun_fun_a_a_fun_fun_tree$)(?v1py114 A_b_a_fun_fun_tree$)) (! (= (right$a (ap_tree$ ?v0py114 ?v1py114)) (ap_tree$ (right$b ?v0py114) (right$c ?v1py114))) :pattern ((right$a (ap_tree$ ?v0py114 ?v1py114))) :pattern ((ap_tree$ (right$b ?v0py114) (right$c ?v1py114))) )) :named A118))
(assert (! (forall ((?v0py115 A_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_tree$)(?v1py115 A_b_a_fun_a_fun_fun_tree$)) (! (= (right$b (ap_tree$a ?v0py115 ?v1py115)) (ap_tree$a (right$d ?v0py115) (right$e ?v1py115))) :pattern ((right$b (ap_tree$a ?v0py115 ?v1py115))) :pattern ((ap_tree$a (right$d ?v0py115) (right$e ?v1py115))) )) :named A119))
(assert (! (forall ((?v0py116 A_a_fun_tree$)(?v1py116 A_tree$)) (! (= (right$ (ap_tree$f ?v0py116 ?v1py116)) (ap_tree$f (right$a ?v0py116) (right$ ?v1py116))) :pattern ((right$ (ap_tree$f ?v0py116 ?v1py116))) :pattern ((ap_tree$f (right$a ?v0py116) (right$ ?v1py116))) )) :named A120))
(assert (! (forall ((?v0py117 A_b_a_fun_fun_tree$)(?v1py117 A_tree$)) (! (= (right$f (ap_tree$e ?v0py117 ?v1py117)) (ap_tree$e (right$c ?v0py117) (right$ ?v1py117))) :pattern ((right$f (ap_tree$e ?v0py117 ?v1py117))) :pattern ((ap_tree$e (right$c ?v0py117) (right$ ?v1py117))) )) :named A121))
(assert (! (forall ((?v0py118 A_b_a_fun_a_fun_fun_tree$)(?v1py118 A_tree$)) (! (= (right$g (ap_tree$x ?v0py118 ?v1py118)) (ap_tree$x (right$e ?v0py118) (right$ ?v1py118))) :pattern ((right$g (ap_tree$x ?v0py118 ?v1py118))) :pattern ((ap_tree$x (right$e ?v0py118) (right$ ?v1py118))) )) :named A122))
(assert (! (forall ((?v0py119 A_a_fun_a_a_fun_fun_tree$)(?v1py119 A_a_fun_tree$)) (! (= (right$a (ap_tree$d ?v0py119 ?v1py119)) (ap_tree$d (right$h ?v0py119) (right$a ?v1py119))) :pattern ((right$a (ap_tree$d ?v0py119 ?v1py119))) :pattern ((ap_tree$d (right$h ?v0py119) (right$a ?v1py119))) )) :named A123))
(assert (! (forall ((?v0py120 A_a_fun_a_b_a_fun_fun_fun_tree$)(?v1py120 A_a_fun_tree$)) (! (= (right$c (ap_tree$r ?v0py120 ?v1py120)) (ap_tree$r (right$i ?v0py120) (right$a ?v1py120))) :pattern ((right$c (ap_tree$r ?v0py120 ?v1py120))) :pattern ((ap_tree$r (right$i ?v0py120) (right$a ?v1py120))) )) :named A124))
(assert (! (forall ((?v0py121 A_a_fun_a_b_a_fun_a_fun_fun_fun_tree$)(?v1py121 A_a_fun_tree$)) (! (= (right$e (ap_tree$ab ?v0py121 ?v1py121)) (ap_tree$ab (right$j ?v0py121) (right$a ?v1py121))) :pattern ((right$e (ap_tree$ab ?v0py121 ?v1py121))) :pattern ((ap_tree$ab (right$j ?v0py121) (right$a ?v1py121))) )) :named A125))
(assert (! (forall ((?v0py122 A_b_a_fun_a_fun_fun_a_a_fun_fun_tree$)(?v1py122 A_b_a_fun_a_fun_fun_tree$)) (! (= (right$a (ap_tree$aa ?v0py122 ?v1py122)) (ap_tree$aa (right$k ?v0py122) (right$e ?v1py122))) :pattern ((right$a (ap_tree$aa ?v0py122 ?v1py122))) :pattern ((ap_tree$aa (right$k ?v0py122) (right$e ?v1py122))) )) :named A126))
(assert (! (forall ((?v0py123 A_b_a_fun_fun_a_b_a_fun_fun_fun_tree$)(?v1py123 A_b_a_fun_fun_tree$)) (! (= (right$c (ap_tree$c ?v0py123 ?v1py123)) (ap_tree$c (right$l ?v0py123) (right$c ?v1py123))) :pattern ((right$c (ap_tree$c ?v0py123 ?v1py123))) :pattern ((ap_tree$c (right$l ?v0py123) (right$c ?v1py123))) )) :named A127))
(assert (! (forall ((?v0py124 A_b_a_fun_a_fun_fun$)(?v1py124 A_b_a_fun_a_fun_fun_tree$)(?v2py46 A_b_a_fun_a_fun_fun_tree$)(?v3py20 A_b_a_fun_a_fun_fun$)(?v4py10 A_b_a_fun_a_fun_fun_tree$)(?v5py10 A_b_a_fun_a_fun_fun_tree$)) (! (and (or (not (= (node$d ?v0py124 ?v1py124 ?v2py46) (node$d ?v3py20 ?v4py10 ?v5py10))) (and (= ?v0py124 ?v3py20) (= ?v1py124 ?v4py10) (= ?v2py46 ?v5py10))) (or (= (node$d ?v0py124 ?v1py124 ?v2py46) (node$d ?v3py20 ?v4py10 ?v5py10)) (not (= ?v0py124 ?v3py20)) (not (= ?v1py124 ?v4py10)) (not (= ?v2py46 ?v5py10)))) :pattern ((node$d ?v0py124 ?v1py124 ?v2py46) (node$d ?v3py20 ?v4py10 ?v5py10)) )) :named A128))
(assert (! (forall ((?v0py125 A_b_a_fun_fun_a_a_fun_fun$)(?v1py125 A_b_a_fun_fun_a_a_fun_fun_tree$)(?v2py47 A_b_a_fun_fun_a_a_fun_fun_tree$)(?v3py21 A_b_a_fun_fun_a_a_fun_fun$)(?v4py11 A_b_a_fun_fun_a_a_fun_fun_tree$)(?v5py11 A_b_a_fun_fun_a_a_fun_fun_tree$)) (! (and (or (not (= (node$a ?v0py125 ?v1py125 ?v2py47) (node$a ?v3py21 ?v4py11 ?v5py11))) (and (= ?v0py125 ?v3py21) (= ?v1py125 ?v4py11) (= ?v2py47 ?v5py11))) (or (= (node$a ?v0py125 ?v1py125 ?v2py47) (node$a ?v3py21 ?v4py11 ?v5py11)) (not (= ?v0py125 ?v3py21)) (not (= ?v1py125 ?v4py11)) (not (= ?v2py47 ?v5py11)))) :pattern ((node$a ?v0py125 ?v1py125 ?v2py47) (node$a ?v3py21 ?v4py11 ?v5py11)) )) :named A129))
(assert (! (forall ((?v0py126 A_b_a_fun_fun$)(?v1py126 A_b_a_fun_fun_tree$)(?v2py48 A_b_a_fun_fun_tree$)(?v3py22 A_b_a_fun_fun$)(?v4py12 A_b_a_fun_fun_tree$)(?v5py12 A_b_a_fun_fun_tree$)) (! (and (or (not (= (node$b ?v0py126 ?v1py126 ?v2py48) (node$b ?v3py22 ?v4py12 ?v5py12))) (and (= ?v0py126 ?v3py22) (= ?v1py126 ?v4py12) (= ?v2py48 ?v5py12))) (or (not (= ?v0py126 ?v3py22)) (= (node$b ?v0py126 ?v1py126 ?v2py48) (node$b ?v3py22 ?v4py12 ?v5py12)) (not (= ?v1py126 ?v4py12)) (not (= ?v2py48 ?v5py12)))) :pattern ((node$b ?v0py126 ?v1py126 ?v2py48) (node$b ?v3py22 ?v4py12 ?v5py12)) )) :named A130))
(assert (! (forall ((?v0py127 A_a_fun$)(?v1py127 A_a_fun_tree$)(?v2py49 A_a_fun_tree$)(?v3py23 A_a_fun$)(?v4py13 A_a_fun_tree$)(?v5py13 A_a_fun_tree$)) (! (and (or (not (= (node$ ?v0py127 ?v1py127 ?v2py49) (node$ ?v3py23 ?v4py13 ?v5py13))) (and (= ?v0py127 ?v3py23) (= ?v1py127 ?v4py13) (= ?v2py49 ?v5py13))) (or (not (= ?v0py127 ?v3py23)) (not (= ?v1py127 ?v4py13)) (= (node$ ?v0py127 ?v1py127 ?v2py49) (node$ ?v3py23 ?v4py13 ?v5py13)) (not (= ?v2py49 ?v5py13)))) :pattern ((node$ ?v0py127 ?v1py127 ?v2py49) (node$ ?v3py23 ?v4py13 ?v5py13)) )) :named A131))
(assert (! (forall ((?v0py128 A_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun$)(?v1py128 A_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_tree$)(?v2py50 A_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_tree$)(?v3py24 A_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun$)(?v4py14 A_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_tree$)(?v5py14 A_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_tree$)) (! (and (or (not (= (node$c ?v0py128 ?v1py128 ?v2py50) (node$c ?v3py24 ?v4py14 ?v5py14))) (and (= ?v0py128 ?v3py24) (= ?v1py128 ?v4py14) (= ?v2py50 ?v5py14))) (or (not (= ?v0py128 ?v3py24)) (= (node$c ?v0py128 ?v1py128 ?v2py50) (node$c ?v3py24 ?v4py14 ?v5py14)) (not (= ?v1py128 ?v4py14)) (not (= ?v2py50 ?v5py14)))) :pattern ((node$c ?v0py128 ?v1py128 ?v2py50) (node$c ?v3py24 ?v4py14 ?v5py14)) )) :named A132))
(assert (! (forall ((?v0py129 A_a_fun_a_a_fun_fun$)(?v1py129 A_a_fun_tree$)) (! (= (left$a (fun_app$aq (map_tree$b ?v0py129) ?v1py129)) (fun_app$aq (map_tree$b ?v0py129) (left$a ?v1py129))) :pattern ((left$a (fun_app$aq (map_tree$b ?v0py129) ?v1py129))) :pattern ((fun_app$aq (map_tree$b ?v0py129) (left$a ?v1py129))) )) :named A133))
(assert (! (forall ((?v0py130 A_a_fun_a_b_a_fun_fun_fun$)(?v1py130 A_a_fun_tree$)) (! (= (left$c (map_tree$h ?v0py130 ?v1py130)) (map_tree$h ?v0py130 (left$a ?v1py130))) :pattern ((left$c (map_tree$h ?v0py130 ?v1py130))) :pattern ((map_tree$h ?v0py130 (left$a ?v1py130))) )) :named A134))
(assert (! (forall ((?v0py131 A_b_a_fun_fun_a_a_fun_fun$)(?v1py131 A_b_a_fun_fun_tree$)) (! (= (left$a (fun_app$az (map_tree$f ?v0py131) ?v1py131)) (fun_app$az (map_tree$f ?v0py131) (left$c ?v1py131))) :pattern ((left$a (fun_app$az (map_tree$f ?v0py131) ?v1py131))) :pattern ((fun_app$az (map_tree$f ?v0py131) (left$c ?v1py131))) )) :named A135))
(assert (! (forall ((?v0py132 A_a_fun_a_b_a_fun_a_fun_fun_fun$)(?v1py132 A_a_fun_tree$)) (! (= (left$e (map_tree$i ?v0py132 ?v1py132)) (map_tree$i ?v0py132 (left$a ?v1py132))) :pattern ((left$e (map_tree$i ?v0py132 ?v1py132))) :pattern ((map_tree$i ?v0py132 (left$a ?v1py132))) )) :named A136))
(assert (! (forall ((?v0py133 A_b_a_fun_a_fun_fun_a_a_fun_fun$)(?v1py133 A_b_a_fun_a_fun_fun_tree$)) (! (= (left$a (map_tree$j ?v0py133 ?v1py133)) (map_tree$j ?v0py133 (left$e ?v1py133))) :pattern ((left$a (map_tree$j ?v0py133 ?v1py133))) :pattern ((map_tree$j ?v0py133 (left$e ?v1py133))) )) :named A137))
(assert (! (forall ((?v0py134 A_b_a_fun_fun_a_b_a_fun_fun_fun$)(?v1py134 A_b_a_fun_fun_tree$)) (! (= (left$c (fun_app$an (map_tree$a ?v0py134) ?v1py134)) (fun_app$an (map_tree$a ?v0py134) (left$c ?v1py134))) :pattern ((left$c (fun_app$an (map_tree$a ?v0py134) ?v1py134))) :pattern ((fun_app$an (map_tree$a ?v0py134) (left$c ?v1py134))) )) :named A138))
(assert (! (forall ((?v0py135 A_a_fun_a_b_a_fun_fun_a_a_fun_fun_fun$)(?v1py135 A_a_fun_tree$)) (! (= (left$b (map_tree$k ?v0py135 ?v1py135)) (map_tree$k ?v0py135 (left$a ?v1py135))) :pattern ((left$b (map_tree$k ?v0py135 ?v1py135))) :pattern ((map_tree$k ?v0py135 (left$a ?v1py135))) )) :named A139))
(assert (! (forall ((?v0py136 A_b_a_fun_fun_a_b_a_fun_a_fun_fun_fun$)(?v1py136 A_b_a_fun_fun_tree$)) (! (= (left$e (map_tree$l ?v0py136 ?v1py136)) (map_tree$l ?v0py136 (left$c ?v1py136))) :pattern ((left$e (map_tree$l ?v0py136 ?v1py136))) :pattern ((map_tree$l ?v0py136 (left$c ?v1py136))) )) :named A140))
(assert (! (forall ((?v0py137 A_b_a_fun_fun_a_a_fun_fun_a_a_fun_fun$)(?v1py137 A_b_a_fun_fun_a_a_fun_fun_tree$)) (! (= (left$a (map_tree$m ?v0py137 ?v1py137)) (map_tree$m ?v0py137 (left$b ?v1py137))) :pattern ((left$a (map_tree$m ?v0py137 ?v1py137))) :pattern ((map_tree$m ?v0py137 (left$b ?v1py137))) )) :named A141))
(assert (! (forall ((?v0py138 A_b_a_fun_a_fun_fun_a_b_a_fun_fun_fun$)(?v1py138 A_b_a_fun_a_fun_fun_tree$)) (! (= (left$c (map_tree$n ?v0py138 ?v1py138)) (map_tree$n ?v0py138 (left$e ?v1py138))) :pattern ((left$c (map_tree$n ?v0py138 ?v1py138))) :pattern ((map_tree$n ?v0py138 (left$e ?v1py138))) )) :named A142))
(assert (! (forall ((?v0py139 A_a_fun_a_a_fun_fun$)(?v1py139 A_a_fun_tree$)) (! (= (right$a (fun_app$aq (map_tree$b ?v0py139) ?v1py139)) (fun_app$aq (map_tree$b ?v0py139) (right$a ?v1py139))) :pattern ((right$a (fun_app$aq (map_tree$b ?v0py139) ?v1py139))) :pattern ((fun_app$aq (map_tree$b ?v0py139) (right$a ?v1py139))) )) :named A143))
(assert (! (forall ((?v0py140 A_a_fun_a_b_a_fun_fun_fun$)(?v1py140 A_a_fun_tree$)) (! (= (right$c (map_tree$h ?v0py140 ?v1py140)) (map_tree$h ?v0py140 (right$a ?v1py140))) :pattern ((right$c (map_tree$h ?v0py140 ?v1py140))) :pattern ((map_tree$h ?v0py140 (right$a ?v1py140))) )) :named A144))
(assert (! (forall ((?v0py141 A_b_a_fun_fun_a_a_fun_fun$)(?v1py141 A_b_a_fun_fun_tree$)) (! (= (right$a (fun_app$az (map_tree$f ?v0py141) ?v1py141)) (fun_app$az (map_tree$f ?v0py141) (right$c ?v1py141))) :pattern ((right$a (fun_app$az (map_tree$f ?v0py141) ?v1py141))) :pattern ((fun_app$az (map_tree$f ?v0py141) (right$c ?v1py141))) )) :named A145))
(assert (! (forall ((?v0py142 A_a_fun_a_b_a_fun_a_fun_fun_fun$)(?v1py142 A_a_fun_tree$)) (! (= (right$e (map_tree$i ?v0py142 ?v1py142)) (map_tree$i ?v0py142 (right$a ?v1py142))) :pattern ((right$e (map_tree$i ?v0py142 ?v1py142))) :pattern ((map_tree$i ?v0py142 (right$a ?v1py142))) )) :named A146))
(assert (! (forall ((?v0py143 A_b_a_fun_a_fun_fun_a_a_fun_fun$)(?v1py143 A_b_a_fun_a_fun_fun_tree$)) (! (= (right$a (map_tree$j ?v0py143 ?v1py143)) (map_tree$j ?v0py143 (right$e ?v1py143))) :pattern ((right$a (map_tree$j ?v0py143 ?v1py143))) :pattern ((map_tree$j ?v0py143 (right$e ?v1py143))) )) :named A147))
(assert (! (forall ((?v0py144 A_b_a_fun_fun_a_b_a_fun_fun_fun$)(?v1py144 A_b_a_fun_fun_tree$)) (! (= (right$c (fun_app$an (map_tree$a ?v0py144) ?v1py144)) (fun_app$an (map_tree$a ?v0py144) (right$c ?v1py144))) :pattern ((right$c (fun_app$an (map_tree$a ?v0py144) ?v1py144))) :pattern ((fun_app$an (map_tree$a ?v0py144) (right$c ?v1py144))) )) :named A148))
(assert (! (forall ((?v0py145 A_a_fun_a_b_a_fun_fun_a_a_fun_fun_fun$)(?v1py145 A_a_fun_tree$)) (! (= (right$b (map_tree$k ?v0py145 ?v1py145)) (map_tree$k ?v0py145 (right$a ?v1py145))) :pattern ((right$b (map_tree$k ?v0py145 ?v1py145))) :pattern ((map_tree$k ?v0py145 (right$a ?v1py145))) )) :named A149))
(assert (! (forall ((?v0py146 A_b_a_fun_fun_a_b_a_fun_a_fun_fun_fun$)(?v1py146 A_b_a_fun_fun_tree$)) (! (= (right$e (map_tree$l ?v0py146 ?v1py146)) (map_tree$l ?v0py146 (right$c ?v1py146))) :pattern ((right$e (map_tree$l ?v0py146 ?v1py146))) :pattern ((map_tree$l ?v0py146 (right$c ?v1py146))) )) :named A150))
(assert (! (forall ((?v0py147 A_b_a_fun_fun_a_a_fun_fun_a_a_fun_fun$)(?v1py147 A_b_a_fun_fun_a_a_fun_fun_tree$)) (! (= (right$a (map_tree$m ?v0py147 ?v1py147)) (map_tree$m ?v0py147 (right$b ?v1py147))) :pattern ((right$a (map_tree$m ?v0py147 ?v1py147))) :pattern ((map_tree$m ?v0py147 (right$b ?v1py147))) )) :named A151))
(assert (! (forall ((?v0py148 A_b_a_fun_a_fun_fun_a_b_a_fun_fun_fun$)(?v1py148 A_b_a_fun_a_fun_fun_tree$)) (! (= (right$c (map_tree$n ?v0py148 ?v1py148)) (map_tree$n ?v0py148 (right$e ?v1py148))) :pattern ((right$c (map_tree$n ?v0py148 ?v1py148))) :pattern ((map_tree$n ?v0py148 (right$e ?v1py148))) )) :named A152))
(assert (! (forall ((?v0py149 A_a_fun_a_a_fun_fun$)(?v1py149 A_a_fun_tree$)) (! (= (root$a (fun_app$aq (map_tree$b ?v0py149) ?v1py149)) (fun_app$i ?v0py149 (root$a ?v1py149))) :pattern ((fun_app$aq (map_tree$b ?v0py149) ?v1py149)) :pattern ((fun_app$i ?v0py149 (root$a ?v1py149))) )) :named A153))
(assert (! (forall ((?v0py150 A_a_fun_a_b_a_fun_fun_fun$)(?v1py150 A_a_fun_tree$)) (! (= (root$c (map_tree$h ?v0py150 ?v1py150)) (fun_app$au ?v0py150 (root$a ?v1py150))) :pattern ((map_tree$h ?v0py150 ?v1py150)) :pattern ((fun_app$au ?v0py150 (root$a ?v1py150))) )) :named A154))
(assert (! (forall ((?v0py151 A_b_a_fun_fun_a_a_fun_fun$)(?v1py151 A_b_a_fun_fun_tree$)) (! (= (root$a (fun_app$az (map_tree$f ?v0py151) ?v1py151)) (fun_app$g ?v0py151 (root$c ?v1py151))) :pattern ((fun_app$az (map_tree$f ?v0py151) ?v1py151)) :pattern ((fun_app$g ?v0py151 (root$c ?v1py151))) )) :named A155))
(assert (! (forall ((?v0py152 A_a_fun_a_b_a_fun_a_fun_fun_fun$)(?v1py152 A_a_fun_tree$)) (! (= (root$e (map_tree$i ?v0py152 ?v1py152)) (fun_app$aw ?v0py152 (root$a ?v1py152))) :pattern ((map_tree$i ?v0py152 ?v1py152)) :pattern ((fun_app$aw ?v0py152 (root$a ?v1py152))) )) :named A156))
(assert (! (forall ((?v0py153 A_b_a_fun_a_fun_fun_a_a_fun_fun$)(?v1py153 A_b_a_fun_a_fun_fun_tree$)) (! (= (root$a (map_tree$j ?v0py153 ?v1py153)) (fun_app$av ?v0py153 (root$e ?v1py153))) :pattern ((map_tree$j ?v0py153 ?v1py153)) :pattern ((fun_app$av ?v0py153 (root$e ?v1py153))) )) :named A157))
(assert (! (forall ((?v0py154 A_b_a_fun_fun_a_b_a_fun_fun_fun$)(?v1py154 A_b_a_fun_fun_tree$)) (! (= (root$c (fun_app$an (map_tree$a ?v0py154) ?v1py154)) (fun_app$e ?v0py154 (root$c ?v1py154))) :pattern ((fun_app$an (map_tree$a ?v0py154) ?v1py154)) :pattern ((fun_app$e ?v0py154 (root$c ?v1py154))) )) :named A158))
(assert (! (forall ((?v0py155 A_a_fun_a_b_a_fun_fun_a_a_fun_fun_fun$)(?v1py155 A_a_fun_tree$)) (! (= (root$b (map_tree$k ?v0py155 ?v1py155)) (fun_app$bb ?v0py155 (root$a ?v1py155))) :pattern ((map_tree$k ?v0py155 ?v1py155)) :pattern ((fun_app$bb ?v0py155 (root$a ?v1py155))) )) :named A159))
(assert (! (forall ((?v0py156 A_b_a_fun_fun_a_b_a_fun_a_fun_fun_fun$)(?v1py156 A_b_a_fun_fun_tree$)) (! (= (root$e (map_tree$l ?v0py156 ?v1py156)) (fun_app$bc ?v0py156 (root$c ?v1py156))) :pattern ((map_tree$l ?v0py156 ?v1py156)) :pattern ((fun_app$bc ?v0py156 (root$c ?v1py156))) )) :named A160))
(assert (! (forall ((?v0py157 A_b_a_fun_fun_a_a_fun_fun_a_a_fun_fun$)(?v1py157 A_b_a_fun_fun_a_a_fun_fun_tree$)) (! (= (root$a (map_tree$m ?v0py157 ?v1py157)) (fun_app$f ?v0py157 (root$b ?v1py157))) :pattern ((map_tree$m ?v0py157 ?v1py157)) :pattern ((fun_app$f ?v0py157 (root$b ?v1py157))) )) :named A161))
(assert (! (forall ((?v0py158 A_b_a_fun_a_fun_fun_a_b_a_fun_fun_fun$)(?v1py158 A_b_a_fun_a_fun_fun_tree$)) (! (= (root$c (map_tree$n ?v0py158 ?v1py158)) (fun_app$bd ?v0py158 (root$e ?v1py158))) :pattern ((map_tree$n ?v0py158 ?v1py158)) :pattern ((fun_app$bd ?v0py158 (root$e ?v1py158))) )) :named A162))
(assert (! (forall ((?v0py159 A_a_fun_a_a_fun_fun$)(?v1py159 A_a_fun$)) (! (= (fun_app$aq (map_tree$b ?v0py159) (pure_tree$m ?v1py159)) (pure_tree$m (fun_app$i ?v0py159 ?v1py159))) :pattern ((fun_app$aq (map_tree$b ?v0py159) (pure_tree$m ?v1py159))) :pattern ((fun_app$i ?v0py159 ?v1py159)) )) :named A163))
(assert (! (forall ((?v0py160 A_a_fun_a_b_a_fun_fun_fun$)(?v1py160 A_a_fun$)) (! (= (map_tree$h ?v0py160 (pure_tree$m ?v1py160)) (pure_tree$l (fun_app$au ?v0py160 ?v1py160))) :pattern ((map_tree$h ?v0py160 (pure_tree$m ?v1py160))) :pattern ((fun_app$au ?v0py160 ?v1py160)) )) :named A164))
(assert (! (forall ((?v0py161 A_b_a_fun_fun_a_a_fun_fun$)(?v1py161 A_b_a_fun_fun$)) (! (= (fun_app$az (map_tree$f ?v0py161) (pure_tree$l ?v1py161)) (pure_tree$m (fun_app$g ?v0py161 ?v1py161))) :pattern ((fun_app$az (map_tree$f ?v0py161) (pure_tree$l ?v1py161))) :pattern ((fun_app$g ?v0py161 ?v1py161)) )) :named A165))
(assert (! (forall ((?v0py162 A_b_a_fun_a_fun_fun_a_a_fun_fun$)(?v1py162 A_b_a_fun_a_fun_fun$)) (! (= (map_tree$j ?v0py162 (pure_tree$k ?v1py162)) (pure_tree$m (fun_app$av ?v0py162 ?v1py162))) :pattern ((map_tree$j ?v0py162 (pure_tree$k ?v1py162))) :pattern ((fun_app$av ?v0py162 ?v1py162)) )) :named A166))
(assert (! (forall ((?v0py163 A_b_a_fun_fun_a_b_a_fun_fun_fun$)(?v1py163 A_b_a_fun_fun$)) (! (= (fun_app$an (map_tree$a ?v0py163) (pure_tree$l ?v1py163)) (pure_tree$l (fun_app$e ?v0py163 ?v1py163))) :pattern ((fun_app$an (map_tree$a ?v0py163) (pure_tree$l ?v1py163))) :pattern ((fun_app$e ?v0py163 ?v1py163)) )) :named A167))
(assert (! (forall ((?v0py164 A_a_fun_a_b_a_fun_a_fun_fun_fun$)(?v1py164 A_a_fun$)) (! (= (map_tree$i ?v0py164 (pure_tree$m ?v1py164)) (pure_tree$k (fun_app$aw ?v0py164 ?v1py164))) :pattern ((map_tree$i ?v0py164 (pure_tree$m ?v1py164))) :pattern ((fun_app$aw ?v0py164 ?v1py164)) )) :named A168))
(assert (! (forall ((?v0py165 A_b_a_fun_fun_a_a_fun_fun_a_a_fun_fun$)(?v1py165 A_b_a_fun_fun_a_a_fun_fun$)) (! (= (map_tree$m ?v0py165 (pure_tree$n ?v1py165)) (pure_tree$m (fun_app$f ?v0py165 ?v1py165))) :pattern ((map_tree$m ?v0py165 (pure_tree$n ?v1py165))) :pattern ((fun_app$f ?v0py165 ?v1py165)) )) :named A169))
(assert (! (forall ((?v0py166 A_b_a_fun_a_fun_fun_a_b_a_fun_fun_fun$)(?v1py166 A_b_a_fun_a_fun_fun$)) (! (= (map_tree$n ?v0py166 (pure_tree$k ?v1py166)) (pure_tree$l (fun_app$bd ?v0py166 ?v1py166))) :pattern ((map_tree$n ?v0py166 (pure_tree$k ?v1py166))) :pattern ((fun_app$bd ?v0py166 ?v1py166)) )) :named A170))
(assert (! (forall ((?v0py167 A_b_a_fun_fun_a_b_a_fun_a_fun_fun_fun$)(?v1py167 A_b_a_fun_fun$)) (! (= (map_tree$l ?v0py167 (pure_tree$l ?v1py167)) (pure_tree$k (fun_app$bc ?v0py167 ?v1py167))) :pattern ((map_tree$l ?v0py167 (pure_tree$l ?v1py167))) :pattern ((fun_app$bc ?v0py167 ?v1py167)) )) :named A171))
(assert (! (forall ((?v0py168 A_a_fun_a_b_a_fun_fun_a_a_fun_fun_fun$)(?v1py168 A_a_fun$)) (! (= (map_tree$k ?v0py168 (pure_tree$m ?v1py168)) (pure_tree$n (fun_app$bb ?v0py168 ?v1py168))) :pattern ((map_tree$k ?v0py168 (pure_tree$m ?v1py168))) :pattern ((fun_app$bb ?v0py168 ?v1py168)) )) :named A172))
(assert (! (forall ((?v0py169 A_b_a_fun_fun_a_a_fun_fun_tree$)) (! (= (node$a (root$b ?v0py169) (left$b ?v0py169) (right$b ?v0py169)) ?v0py169) :pattern ((root$b ?v0py169)) :pattern ((left$b ?v0py169)) :pattern ((right$b ?v0py169)) )) :named A173))
(assert (! (forall ((?v0py170 A_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_tree$)) (! (= (node$c (root$d ?v0py170) (left$d ?v0py170) (right$d ?v0py170)) ?v0py170) :pattern ((root$d ?v0py170)) :pattern ((left$d ?v0py170)) :pattern ((right$d ?v0py170)) )) :named A174))
(assert (! (forall ((?v0py171 A_b_a_fun_a_fun_fun_tree$)) (! (= (node$d (root$e ?v0py171) (left$e ?v0py171) (right$e ?v0py171)) ?v0py171) :pattern ((root$e ?v0py171)) :pattern ((left$e ?v0py171)) :pattern ((right$e ?v0py171)) )) :named A175))
(assert (! (forall ((?v0py172 A_a_fun_tree$)) (! (= (node$ (root$a ?v0py172) (left$a ?v0py172) (right$a ?v0py172)) ?v0py172) :pattern ((root$a ?v0py172)) :pattern ((left$a ?v0py172)) :pattern ((right$a ?v0py172)) )) :named A176))
(assert (! (forall ((?v0py173 A_b_a_fun_fun_tree$)) (! (= (node$b (root$c ?v0py173) (left$c ?v0py173) (right$c ?v0py173)) ?v0py173) :pattern ((root$c ?v0py173)) :pattern ((left$c ?v0py173)) :pattern ((right$c ?v0py173)) )) :named A177))
(assert (! (forall ((?v0py174 A_b_a_fun_fun_a_a_fun_fun_tree$)(?v1py169 A_b_a_fun_fun_tree$)) (! (= (ap_tree$ ?v0py174 ?v1py169) (node$ (fun_app$g (root$b ?v0py174) (root$c ?v1py169)) (ap_tree$ (left$b ?v0py174) (left$c ?v1py169)) (ap_tree$ (right$b ?v0py174) (right$c ?v1py169)))) :pattern ((fun_app$g (root$b ?v0py174) (root$c ?v1py169))) :pattern ((ap_tree$ (left$b ?v0py174) (left$c ?v1py169))) :pattern ((ap_tree$ (right$b ?v0py174) (right$c ?v1py169))) )) :named A178))
(assert (! (forall ((?v0py175 A_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_tree$)(?v1py170 A_b_a_fun_a_fun_fun_tree$)) (! (= (ap_tree$a ?v0py175 ?v1py170) (node$a (fun_app$a (root$d ?v0py175) (root$e ?v1py170)) (ap_tree$a (left$d ?v0py175) (left$e ?v1py170)) (ap_tree$a (right$d ?v0py175) (right$e ?v1py170)))) :pattern ((fun_app$a (root$d ?v0py175) (root$e ?v1py170))) :pattern ((ap_tree$a (left$d ?v0py175) (left$e ?v1py170))) :pattern ((ap_tree$a (right$d ?v0py175) (right$e ?v1py170))) )) :named A179))
(assert (! (forall ((?v0py176 A_a_fun_tree$)(?v1py171 A_tree$)) (! (= (ap_tree$f ?v0py176 ?v1py171) (node$h (fun_app$m (root$a ?v0py176) (root$ ?v1py171)) (ap_tree$f (left$a ?v0py176) (left$ ?v1py171)) (ap_tree$f (right$a ?v0py176) (right$ ?v1py171)))) :pattern ((fun_app$m (root$a ?v0py176) (root$ ?v1py171))) :pattern ((ap_tree$f (left$a ?v0py176) (left$ ?v1py171))) :pattern ((ap_tree$f (right$a ?v0py176) (right$ ?v1py171))) )) :named A180))
(assert (! (forall ((?v0py177 A_b_a_fun_fun_tree$)(?v1py172 A_tree$)) (! (= (ap_tree$e ?v0py177 ?v1py172) (node$i (fun_app$k (root$c ?v0py177) (root$ ?v1py172)) (ap_tree$e (left$c ?v0py177) (left$ ?v1py172)) (ap_tree$e (right$c ?v0py177) (right$ ?v1py172)))) :pattern ((fun_app$k (root$c ?v0py177) (root$ ?v1py172))) :pattern ((ap_tree$e (left$c ?v0py177) (left$ ?v1py172))) :pattern ((ap_tree$e (right$c ?v0py177) (right$ ?v1py172))) )) :named A181))
(assert (! (forall ((?v0py178 A_a_fun_a_a_fun_fun_tree$)(?v1py173 A_a_fun_tree$)) (! (= (ap_tree$d ?v0py178 ?v1py173) (node$ (fun_app$i (root$h ?v0py178) (root$a ?v1py173)) (ap_tree$d (left$h ?v0py178) (left$a ?v1py173)) (ap_tree$d (right$h ?v0py178) (right$a ?v1py173)))) :pattern ((fun_app$i (root$h ?v0py178) (root$a ?v1py173))) :pattern ((ap_tree$d (left$h ?v0py178) (left$a ?v1py173))) :pattern ((ap_tree$d (right$h ?v0py178) (right$a ?v1py173))) )) :named A182))
(assert (! (forall ((?v0py179 A_b_a_fun_a_fun_fun_tree$)(?v1py174 A_tree$)) (! (= (ap_tree$x ?v0py179 ?v1py174) (node$j (fun_app$o (root$e ?v0py179) (root$ ?v1py174)) (ap_tree$x (left$e ?v0py179) (left$ ?v1py174)) (ap_tree$x (right$e ?v0py179) (right$ ?v1py174)))) :pattern ((fun_app$o (root$e ?v0py179) (root$ ?v1py174))) :pattern ((ap_tree$x (left$e ?v0py179) (left$ ?v1py174))) :pattern ((ap_tree$x (right$e ?v0py179) (right$ ?v1py174))) )) :named A183))
(assert (! (forall ((?v0py180 A_a_fun_a_b_a_fun_fun_fun_tree$)(?v1py175 A_a_fun_tree$)) (! (= (ap_tree$r ?v0py180 ?v1py175) (node$b (fun_app$au (root$i ?v0py180) (root$a ?v1py175)) (ap_tree$r (left$i ?v0py180) (left$a ?v1py175)) (ap_tree$r (right$i ?v0py180) (right$a ?v1py175)))) :pattern ((fun_app$au (root$i ?v0py180) (root$a ?v1py175))) :pattern ((ap_tree$r (left$i ?v0py180) (left$a ?v1py175))) :pattern ((ap_tree$r (right$i ?v0py180) (right$a ?v1py175))) )) :named A184))
(assert (! (forall ((?v0py181 A_b_a_fun_a_fun_fun_a_a_fun_fun_tree$)(?v1py176 A_b_a_fun_a_fun_fun_tree$)) (! (= (ap_tree$aa ?v0py181 ?v1py176) (node$ (fun_app$av (root$k ?v0py181) (root$e ?v1py176)) (ap_tree$aa (left$k ?v0py181) (left$e ?v1py176)) (ap_tree$aa (right$k ?v0py181) (right$e ?v1py176)))) :pattern ((fun_app$av (root$k ?v0py181) (root$e ?v1py176))) :pattern ((ap_tree$aa (left$k ?v0py181) (left$e ?v1py176))) :pattern ((ap_tree$aa (right$k ?v0py181) (right$e ?v1py176))) )) :named A185))
(assert (! (forall ((?v0py182 A_a_fun_a_b_a_fun_a_fun_fun_fun_tree$)(?v1py177 A_a_fun_tree$)) (! (= (ap_tree$ab ?v0py182 ?v1py177) (node$d (fun_app$aw (root$j ?v0py182) (root$a ?v1py177)) (ap_tree$ab (left$j ?v0py182) (left$a ?v1py177)) (ap_tree$ab (right$j ?v0py182) (right$a ?v1py177)))) :pattern ((fun_app$aw (root$j ?v0py182) (root$a ?v1py177))) :pattern ((ap_tree$ab (left$j ?v0py182) (left$a ?v1py177))) :pattern ((ap_tree$ab (right$j ?v0py182) (right$a ?v1py177))) )) :named A186))
(assert (! (forall ((?v0py183 A_b_a_fun_fun_a_b_a_fun_fun_fun_tree$)(?v1py178 A_b_a_fun_fun_tree$)) (! (= (ap_tree$c ?v0py183 ?v1py178) (node$b (fun_app$e (root$l ?v0py183) (root$c ?v1py178)) (ap_tree$c (left$l ?v0py183) (left$c ?v1py178)) (ap_tree$c (right$l ?v0py183) (right$c ?v1py178)))) :pattern ((fun_app$e (root$l ?v0py183) (root$c ?v1py178))) :pattern ((ap_tree$c (left$l ?v0py183) (left$c ?v1py178))) :pattern ((ap_tree$c (right$l ?v0py183) (right$c ?v1py178))) )) :named A187))
(assert (! (forall ((?v0py184 A_a_fun_a_a_fun_fun$)(?v1py179 A_a_fun$)(?v2py51 A_a_fun_tree$)(?v3py25 A_a_fun_tree$)) (! (= (fun_app$aq (map_tree$b ?v0py184) (node$ ?v1py179 ?v2py51 ?v3py25)) (node$ (fun_app$i ?v0py184 ?v1py179) (fun_app$aq (map_tree$b ?v0py184) ?v2py51) (fun_app$aq (map_tree$b ?v0py184) ?v3py25))) :pattern ((fun_app$aq (map_tree$b ?v0py184) (node$ ?v1py179 ?v2py51 ?v3py25))) )) :named A188))
(assert (! (forall ((?v0py185 A_a_fun_a_b_a_fun_fun_fun$)(?v1py180 A_a_fun$)(?v2py52 A_a_fun_tree$)(?v3py26 A_a_fun_tree$)) (! (= (map_tree$h ?v0py185 (node$ ?v1py180 ?v2py52 ?v3py26)) (node$b (fun_app$au ?v0py185 ?v1py180) (map_tree$h ?v0py185 ?v2py52) (map_tree$h ?v0py185 ?v3py26))) :pattern ((map_tree$h ?v0py185 (node$ ?v1py180 ?v2py52 ?v3py26))) )) :named A189))
(assert (! (forall ((?v0py186 A_b_a_fun_fun_a_a_fun_fun$)(?v1py181 A_b_a_fun_fun$)(?v2py53 A_b_a_fun_fun_tree$)(?v3py27 A_b_a_fun_fun_tree$)) (! (= (fun_app$az (map_tree$f ?v0py186) (node$b ?v1py181 ?v2py53 ?v3py27)) (node$ (fun_app$g ?v0py186 ?v1py181) (fun_app$az (map_tree$f ?v0py186) ?v2py53) (fun_app$az (map_tree$f ?v0py186) ?v3py27))) :pattern ((fun_app$az (map_tree$f ?v0py186) (node$b ?v1py181 ?v2py53 ?v3py27))) )) :named A190))
(assert (! (forall ((?v0py187 A_b_a_fun_a_fun_fun_a_a_fun_fun$)(?v1py182 A_b_a_fun_a_fun_fun$)(?v2py54 A_b_a_fun_a_fun_fun_tree$)(?v3py28 A_b_a_fun_a_fun_fun_tree$)) (! (= (map_tree$j ?v0py187 (node$d ?v1py182 ?v2py54 ?v3py28)) (node$ (fun_app$av ?v0py187 ?v1py182) (map_tree$j ?v0py187 ?v2py54) (map_tree$j ?v0py187 ?v3py28))) :pattern ((map_tree$j ?v0py187 (node$d ?v1py182 ?v2py54 ?v3py28))) )) :named A191))
(assert (! (forall ((?v0py188 A_b_a_fun_fun_a_b_a_fun_fun_fun$)(?v1py183 A_b_a_fun_fun$)(?v2py55 A_b_a_fun_fun_tree$)(?v3py29 A_b_a_fun_fun_tree$)) (! (= (fun_app$an (map_tree$a ?v0py188) (node$b ?v1py183 ?v2py55 ?v3py29)) (node$b (fun_app$e ?v0py188 ?v1py183) (fun_app$an (map_tree$a ?v0py188) ?v2py55) (fun_app$an (map_tree$a ?v0py188) ?v3py29))) :pattern ((fun_app$an (map_tree$a ?v0py188) (node$b ?v1py183 ?v2py55 ?v3py29))) )) :named A192))
(assert (! (forall ((?v0py189 A_a_fun_a_b_a_fun_a_fun_fun_fun$)(?v1py184 A_a_fun$)(?v2py56 A_a_fun_tree$)(?v3py30 A_a_fun_tree$)) (! (= (map_tree$i ?v0py189 (node$ ?v1py184 ?v2py56 ?v3py30)) (node$d (fun_app$aw ?v0py189 ?v1py184) (map_tree$i ?v0py189 ?v2py56) (map_tree$i ?v0py189 ?v3py30))) :pattern ((map_tree$i ?v0py189 (node$ ?v1py184 ?v2py56 ?v3py30))) )) :named A193))
(assert (! (forall ((?v0py190 A_b_a_fun_a_fun_fun_a_b_a_fun_fun_fun$)(?v1py185 A_b_a_fun_a_fun_fun$)(?v2py57 A_b_a_fun_a_fun_fun_tree$)(?v3py31 A_b_a_fun_a_fun_fun_tree$)) (! (= (map_tree$n ?v0py190 (node$d ?v1py185 ?v2py57 ?v3py31)) (node$b (fun_app$bd ?v0py190 ?v1py185) (map_tree$n ?v0py190 ?v2py57) (map_tree$n ?v0py190 ?v3py31))) :pattern ((map_tree$n ?v0py190 (node$d ?v1py185 ?v2py57 ?v3py31))) )) :named A194))
(assert (! (forall ((?v0py191 A_b_a_fun_fun_a_a_fun_fun_a_a_fun_fun$)(?v1py186 A_b_a_fun_fun_a_a_fun_fun$)(?v2py58 A_b_a_fun_fun_a_a_fun_fun_tree$)(?v3py32 A_b_a_fun_fun_a_a_fun_fun_tree$)) (! (= (map_tree$m ?v0py191 (node$a ?v1py186 ?v2py58 ?v3py32)) (node$ (fun_app$f ?v0py191 ?v1py186) (map_tree$m ?v0py191 ?v2py58) (map_tree$m ?v0py191 ?v3py32))) :pattern ((map_tree$m ?v0py191 (node$a ?v1py186 ?v2py58 ?v3py32))) )) :named A195))
(assert (! (forall ((?v0py192 A_b_a_fun_fun_a_b_a_fun_a_fun_fun_fun$)(?v1py187 A_b_a_fun_fun$)(?v2py59 A_b_a_fun_fun_tree$)(?v3py33 A_b_a_fun_fun_tree$)) (! (= (map_tree$l ?v0py192 (node$b ?v1py187 ?v2py59 ?v3py33)) (node$d (fun_app$bc ?v0py192 ?v1py187) (map_tree$l ?v0py192 ?v2py59) (map_tree$l ?v0py192 ?v3py33))) :pattern ((map_tree$l ?v0py192 (node$b ?v1py187 ?v2py59 ?v3py33))) )) :named A196))
(assert (! (forall ((?v0py193 A_a_fun_a_b_a_fun_fun_a_a_fun_fun_fun$)(?v1py188 A_a_fun$)(?v2py60 A_a_fun_tree$)(?v3py34 A_a_fun_tree$)) (! (= (map_tree$k ?v0py193 (node$ ?v1py188 ?v2py60 ?v3py34)) (node$a (fun_app$bb ?v0py193 ?v1py188) (map_tree$k ?v0py193 ?v2py60) (map_tree$k ?v0py193 ?v3py34))) :pattern ((map_tree$k ?v0py193 (node$ ?v1py188 ?v2py60 ?v3py34))) )) :named A197))
(assert (! (forall ((?v0py194 B_a_fun_a_fun$)(?v1py189 A_b_a_fun_fun$)(?v2py61 A_tree$)) (! (= (fun_app$be (map_tree$o ?v0py194) (fun_app$ax (map_tree$d ?v1py189) ?v2py61)) (fun_app$ay (map_tree$e (fun_app$g (fun_app$bf comp$ ?v0py194) ?v1py189)) ?v2py61)) :pattern ((fun_app$be (map_tree$o ?v0py194) (fun_app$ax (map_tree$d ?v1py189) ?v2py61))) :pattern ((fun_app$ay (map_tree$e (fun_app$g (fun_app$bf comp$ ?v0py194) ?v1py189)) ?v2py61)) )) :named A198))
(assert (! (forall ((?v0py195 A_b_a_fun_fun_a_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun$)(?v1py190 A_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun$)(?v2py62 A_b_a_fun_a_fun_fun_tree$)) (! (= (fun_app$ah (map_tree$p ?v0py195) (fun_app$ba (map_tree$g ?v1py190) ?v2py62)) (fun_app$ba (map_tree$g (fun_app$bg (fun_app$bh comp$d ?v0py195) ?v1py190)) ?v2py62)) :pattern ((fun_app$ah (map_tree$p ?v0py195) (fun_app$ba (map_tree$g ?v1py190) ?v2py62))) :pattern ((fun_app$ba (map_tree$g (fun_app$bg (fun_app$bh comp$d ?v0py195) ?v1py190)) ?v2py62)) )) :named A199))
(assert (! (forall ((?v0py196 A_a_fun_a_a_fun_fun$)(?v1py191 A_b_a_fun_fun_a_a_fun_fun$)(?v2py63 A_b_a_fun_fun_tree$)) (! (= (fun_app$aq (map_tree$b ?v0py196) (fun_app$az (map_tree$f ?v1py191) ?v2py63)) (fun_app$az (map_tree$f (fun_app$bi (fun_app$bj comp$a ?v0py196) ?v1py191)) ?v2py63)) :pattern ((fun_app$aq (map_tree$b ?v0py196) (fun_app$az (map_tree$f ?v1py191) ?v2py63))) :pattern ((fun_app$az (map_tree$f (fun_app$bi (fun_app$bj comp$a ?v0py196) ?v1py191)) ?v2py63)) )) :named A200))
(assert (! (forall ((?v0py197 A_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun$)(?v1py192 A_b_a_fun_a_fun_fun_a_b_a_fun_a_fun_fun_fun$)(?v2py64 A_b_a_fun_a_fun_fun_tree$)) (! (= (fun_app$ba (map_tree$g ?v0py197) (fun_app$ak (map_tree$ ?v1py192) ?v2py64)) (fun_app$ba (map_tree$g (fun_app$bk (fun_app$bl comp$c ?v0py197) ?v1py192)) ?v2py64)) :pattern ((fun_app$ba (map_tree$g ?v0py197) (fun_app$ak (map_tree$ ?v1py192) ?v2py64))) :pattern ((fun_app$ba (map_tree$g (fun_app$bk (fun_app$bl comp$c ?v0py197) ?v1py192)) ?v2py64)) )) :named A201))
(assert (! (forall ((?v0py198 A_b_a_fun_fun_a_a_fun_fun$)(?v1py193 A_b_a_fun_fun_a_b_a_fun_fun_fun$)(?v2py65 A_b_a_fun_fun_tree$)) (! (= (fun_app$az (map_tree$f ?v0py198) (fun_app$an (map_tree$a ?v1py193) ?v2py65)) (fun_app$az (map_tree$f (fun_app$bm (fun_app$bn comp$b ?v0py198) ?v1py193)) ?v2py65)) :pattern ((fun_app$az (map_tree$f ?v0py198) (fun_app$an (map_tree$a ?v1py193) ?v2py65))) :pattern ((fun_app$az (map_tree$f (fun_app$bm (fun_app$bn comp$b ?v0py198) ?v1py193)) ?v2py65)) )) :named A202))
(assert (! (forall ((?v0py199 A_b_a_fun_a_fun_fun$)) (! (= (pure_tree$k ?v0py199) (node$d ?v0py199 (pure_tree$k ?v0py199) (pure_tree$k ?v0py199))) :pattern ((pure_tree$k ?v0py199)) )) :named A203))
(assert (! (forall ((?v0py200 A_b_a_fun_fun_a_a_fun_fun$)) (! (= (pure_tree$n ?v0py200) (node$a ?v0py200 (pure_tree$n ?v0py200) (pure_tree$n ?v0py200))) :pattern ((pure_tree$n ?v0py200)) )) :named A204))
(assert (! (forall ((?v0py201 A_b_a_fun_fun$)) (! (= (pure_tree$l ?v0py201) (node$b ?v0py201 (pure_tree$l ?v0py201) (pure_tree$l ?v0py201))) :pattern ((pure_tree$l ?v0py201)) )) :named A205))
(assert (! (forall ((?v0py202 A_a_fun$)) (! (= (pure_tree$m ?v0py202) (node$ ?v0py202 (pure_tree$m ?v0py202) (pure_tree$m ?v0py202))) :pattern ((pure_tree$m ?v0py202)) )) :named A206))
(assert (! (forall ((?v0py203 A_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun$)) (! (= (pure_tree$o ?v0py203) (node$c ?v0py203 (pure_tree$o ?v0py203) (pure_tree$o ?v0py203))) :pattern ((pure_tree$o ?v0py203)) )) :named A207))
(assert (! (forall ((?v0py204 A_b_a_fun_fun_a_a_fun_fun$)) (! (= (left$b (pure_tree$n ?v0py204)) (pure_tree$n ?v0py204)) :pattern ((pure_tree$n ?v0py204)) )) :named A208))
(assert (! (forall ((?v0py205 A_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun$)) (! (= (left$d (pure_tree$o ?v0py205)) (pure_tree$o ?v0py205)) :pattern ((pure_tree$o ?v0py205)) )) :named A209))
(assert (! (forall ((?v0py206 A_b_a_fun_a_fun_fun$)) (! (= (left$e (pure_tree$k ?v0py206)) (pure_tree$k ?v0py206)) :pattern ((pure_tree$k ?v0py206)) )) :named A210))
(assert (! (forall ((?v0py207 A_a_fun$)) (! (= (left$a (pure_tree$m ?v0py207)) (pure_tree$m ?v0py207)) :pattern ((pure_tree$m ?v0py207)) )) :named A211))
(assert (! (forall ((?v0py208 A_b_a_fun_fun$)) (! (= (left$c (pure_tree$l ?v0py208)) (pure_tree$l ?v0py208)) :pattern ((pure_tree$l ?v0py208)) )) :named A212))
(assert (! (forall ((?v0py209 A_b_a_fun_fun_a_a_fun_fun$)) (! (= (right$b (pure_tree$n ?v0py209)) (pure_tree$n ?v0py209)) :pattern ((pure_tree$n ?v0py209)) )) :named A213))
(assert (! (forall ((?v0py210 A_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun$)) (! (= (right$d (pure_tree$o ?v0py210)) (pure_tree$o ?v0py210)) :pattern ((pure_tree$o ?v0py210)) )) :named A214))
(assert (! (forall ((?v0py211 A_b_a_fun_a_fun_fun$)) (! (= (right$e (pure_tree$k ?v0py211)) (pure_tree$k ?v0py211)) :pattern ((pure_tree$k ?v0py211)) )) :named A215))
(assert (! (forall ((?v0py212 A_a_fun$)) (! (= (right$a (pure_tree$m ?v0py212)) (pure_tree$m ?v0py212)) :pattern ((pure_tree$m ?v0py212)) )) :named A216))
(assert (! (forall ((?v0py213 A_b_a_fun_fun$)) (! (= (right$c (pure_tree$l ?v0py213)) (pure_tree$l ?v0py213)) :pattern ((pure_tree$l ?v0py213)) )) :named A217))
(assert (! (forall ((?v0py214 B_a_fun_a_fun$)(?v1py194 A_b_a_fun_fun$)) (! (= (map_tree$e (fun_app$g (fun_app$bf comp$ ?v0py214) ?v1py194)) (comp$j (map_tree$o ?v0py214) (map_tree$d ?v1py194))) :pattern ((fun_app$g (fun_app$bf comp$ ?v0py214) ?v1py194)) :pattern ((comp$j (map_tree$o ?v0py214) (map_tree$d ?v1py194))) )) :named A218))
(assert (! (forall ((?v0py215 A_b_a_fun_fun_a_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun$)(?v1py195 A_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun$)) (! (= (map_tree$g (fun_app$bg (fun_app$bh comp$d ?v0py215) ?v1py195)) (comp$k (map_tree$p ?v0py215) (map_tree$g ?v1py195))) :pattern ((fun_app$bg (fun_app$bh comp$d ?v0py215) ?v1py195)) :pattern ((comp$k (map_tree$p ?v0py215) (map_tree$g ?v1py195))) )) :named A219))
(assert (! (forall ((?v0py216 A_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun$)(?v1py196 A_b_a_fun_a_fun_fun_a_b_a_fun_a_fun_fun_fun$)) (! (= (map_tree$g (fun_app$bk (fun_app$bl comp$c ?v0py216) ?v1py196)) (comp$l (map_tree$g ?v0py216) (map_tree$ ?v1py196))) :pattern ((fun_app$bk (fun_app$bl comp$c ?v0py216) ?v1py196)) :pattern ((comp$l (map_tree$g ?v0py216) (map_tree$ ?v1py196))) )) :named A220))
(assert (! (forall ((?v0py217 A_a_fun_a_a_fun_fun$)(?v1py197 A_b_a_fun_fun_a_a_fun_fun$)) (! (= (map_tree$f (fun_app$bi (fun_app$bj comp$a ?v0py217) ?v1py197)) (comp$m (map_tree$b ?v0py217) (map_tree$f ?v1py197))) :pattern ((fun_app$bi (fun_app$bj comp$a ?v0py217) ?v1py197)) :pattern ((comp$m (map_tree$b ?v0py217) (map_tree$f ?v1py197))) )) :named A221))
(assert (! (forall ((?v0py218 A_b_a_fun_fun_a_a_fun_fun$)(?v1py198 A_b_a_fun_fun_a_b_a_fun_fun_fun$)) (! (= (map_tree$f (fun_app$bm (fun_app$bn comp$b ?v0py218) ?v1py198)) (comp$n (map_tree$f ?v0py218) (map_tree$a ?v1py198))) :pattern ((fun_app$bm (fun_app$bn comp$b ?v0py218) ?v1py198)) :pattern ((comp$n (map_tree$f ?v0py218) (map_tree$a ?v1py198))) )) :named A222))
(assert (! (forall ((?v0py219 A_tree$)) (! (= (fun_app$ay (map_tree$e id$) ?v0py219) ?v0py219) :pattern ((fun_app$ay (map_tree$e id$) ?v0py219)) )) :named A223))
(assert (! (forall ((?v0py220 A_b_a_fun_fun_a_a_fun_fun$)(?v1py199 A_b_a_fun_fun_a_a_fun_fun_tree$)(?v2py66 A_b_a_fun_fun_a_a_fun_fun_tree$)) (! (= (left$b (node$a ?v0py220 ?v1py199 ?v2py66)) ?v1py199) :pattern ((node$a ?v0py220 ?v1py199 ?v2py66)) )) :named A224))
(assert (! (forall ((?v0py221 A_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun$)(?v1py200 A_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_tree$)(?v2py67 A_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_tree$)) (! (= (left$d (node$c ?v0py221 ?v1py200 ?v2py67)) ?v1py200) :pattern ((node$c ?v0py221 ?v1py200 ?v2py67)) )) :named A225))
(assert (! (forall ((?v0py222 A_b_a_fun_a_fun_fun$)(?v1py201 A_b_a_fun_a_fun_fun_tree$)(?v2py68 A_b_a_fun_a_fun_fun_tree$)) (! (= (left$e (node$d ?v0py222 ?v1py201 ?v2py68)) ?v1py201) :pattern ((node$d ?v0py222 ?v1py201 ?v2py68)) )) :named A226))
(assert (! (forall ((?v0py223 A_a_fun$)(?v1py202 A_a_fun_tree$)(?v2py69 A_a_fun_tree$)) (! (= (left$a (node$ ?v0py223 ?v1py202 ?v2py69)) ?v1py202) :pattern ((node$ ?v0py223 ?v1py202 ?v2py69)) )) :named A227))
(assert (! (forall ((?v0py224 A_b_a_fun_fun$)(?v1py203 A_b_a_fun_fun_tree$)(?v2py70 A_b_a_fun_fun_tree$)) (! (= (left$c (node$b ?v0py224 ?v1py203 ?v2py70)) ?v1py203) :pattern ((node$b ?v0py224 ?v1py203 ?v2py70)) )) :named A228))
(assert (! (forall ((?v0py225 A_b_a_fun_fun_a_a_fun_fun$)(?v1py204 A_b_a_fun_fun_a_a_fun_fun_tree$)(?v2py71 A_b_a_fun_fun_a_a_fun_fun_tree$)) (! (= (root$b (node$a ?v0py225 ?v1py204 ?v2py71)) ?v0py225) :pattern ((node$a ?v0py225 ?v1py204 ?v2py71)) )) :named A229))
(assert (! (forall ((?v0py226 A_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun$)(?v1py205 A_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_tree$)(?v2py72 A_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_tree$)) (! (= (root$d (node$c ?v0py226 ?v1py205 ?v2py72)) ?v0py226) :pattern ((node$c ?v0py226 ?v1py205 ?v2py72)) )) :named A230))
(assert (! (forall ((?v0py227 A_b_a_fun_a_fun_fun$)(?v1py206 A_b_a_fun_a_fun_fun_tree$)(?v2py73 A_b_a_fun_a_fun_fun_tree$)) (! (= (root$e (node$d ?v0py227 ?v1py206 ?v2py73)) ?v0py227) :pattern ((node$d ?v0py227 ?v1py206 ?v2py73)) )) :named A231))
(assert (! (forall ((?v0py228 A_a_fun$)(?v1py207 A_a_fun_tree$)(?v2py74 A_a_fun_tree$)) (! (= (root$a (node$ ?v0py228 ?v1py207 ?v2py74)) ?v0py228) :pattern ((node$ ?v0py228 ?v1py207 ?v2py74)) )) :named A232))
(assert (! (forall ((?v0py229 A_b_a_fun_fun$)(?v1py208 A_b_a_fun_fun_tree$)(?v2py75 A_b_a_fun_fun_tree$)) (! (= (root$c (node$b ?v0py229 ?v1py208 ?v2py75)) ?v0py229) :pattern ((node$b ?v0py229 ?v1py208 ?v2py75)) )) :named A233))
(assert (! (forall ((?v0py230 A_b_a_fun_fun_a_a_fun_fun$)) (! (= (root$b (pure_tree$n ?v0py230)) ?v0py230) :pattern ((pure_tree$n ?v0py230)) )) :named A234))
(assert (! (forall ((?v0py231 A_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun$)) (! (= (root$d (pure_tree$o ?v0py231)) ?v0py231) :pattern ((pure_tree$o ?v0py231)) )) :named A235))
(assert (! (forall ((?v0py232 A_b_a_fun_a_fun_fun$)) (! (= (root$e (pure_tree$k ?v0py232)) ?v0py232) :pattern ((pure_tree$k ?v0py232)) )) :named A236))
(assert (! (forall ((?v0py233 A_a_fun$)) (! (= (root$a (pure_tree$m ?v0py233)) ?v0py233) :pattern ((pure_tree$m ?v0py233)) )) :named A237))
(assert (! (forall ((?v0py234 A_b_a_fun_fun$)) (! (= (root$c (pure_tree$l ?v0py234)) ?v0py234) :pattern ((pure_tree$l ?v0py234)) )) :named A238))
(assert (! (forall ((?v0py235 A_b_a_fun_fun_a_a_fun_fun$)(?v1py209 A_b_a_fun_fun_a_a_fun_fun_tree$)(?v2py76 A_b_a_fun_fun_a_a_fun_fun_tree$)) (! (= (right$b (node$a ?v0py235 ?v1py209 ?v2py76)) ?v2py76) :pattern ((node$a ?v0py235 ?v1py209 ?v2py76)) )) :named A239))
(assert (! (forall ((?v0py236 A_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun$)(?v1py210 A_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_tree$)(?v2py77 A_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_tree$)) (! (= (right$d (node$c ?v0py236 ?v1py210 ?v2py77)) ?v2py77) :pattern ((node$c ?v0py236 ?v1py210 ?v2py77)) )) :named A240))
(assert (! (forall ((?v0py237 A_b_a_fun_a_fun_fun$)(?v1py211 A_b_a_fun_a_fun_fun_tree$)(?v2py78 A_b_a_fun_a_fun_fun_tree$)) (! (= (right$e (node$d ?v0py237 ?v1py211 ?v2py78)) ?v2py78) :pattern ((node$d ?v0py237 ?v1py211 ?v2py78)) )) :named A241))
(assert (! (forall ((?v0py238 A_a_fun$)(?v1py212 A_a_fun_tree$)(?v2py79 A_a_fun_tree$)) (! (= (right$a (node$ ?v0py238 ?v1py212 ?v2py79)) ?v2py79) :pattern ((node$ ?v0py238 ?v1py212 ?v2py79)) )) :named A242))
(assert (! (forall ((?v0py239 A_b_a_fun_fun$)(?v1py213 A_b_a_fun_fun_tree$)(?v2py80 A_b_a_fun_fun_tree$)) (! (= (right$c (node$b ?v0py239 ?v1py213 ?v2py80)) ?v2py80) :pattern ((node$b ?v0py239 ?v1py213 ?v2py80)) )) :named A243))
(assert (! (= (map_tree$e id$) id$a) :named A244))
(assert (! (forall ((?v0py240 A_b_a_fun_fun_a_a_fun_fun_tree$)) (! (= ?v0py240 (node$a (root$b ?v0py240) (left$b ?v0py240) (right$b ?v0py240))) :pattern ((root$b ?v0py240)) :pattern ((left$b ?v0py240)) :pattern ((right$b ?v0py240)) )) :named A245))
(assert (! (forall ((?v0py241 A_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_tree$)) (! (= ?v0py241 (node$c (root$d ?v0py241) (left$d ?v0py241) (right$d ?v0py241))) :pattern ((root$d ?v0py241)) :pattern ((left$d ?v0py241)) :pattern ((right$d ?v0py241)) )) :named A246))
(assert (! (forall ((?v0py242 A_b_a_fun_a_fun_fun_tree$)) (! (= ?v0py242 (node$d (root$e ?v0py242) (left$e ?v0py242) (right$e ?v0py242))) :pattern ((root$e ?v0py242)) :pattern ((left$e ?v0py242)) :pattern ((right$e ?v0py242)) )) :named A247))
(assert (! (forall ((?v0py243 A_a_fun_tree$)) (! (= ?v0py243 (node$ (root$a ?v0py243) (left$a ?v0py243) (right$a ?v0py243))) :pattern ((root$a ?v0py243)) :pattern ((left$a ?v0py243)) :pattern ((right$a ?v0py243)) )) :named A248))
(assert (! (forall ((?v0py244 A_b_a_fun_fun_tree$)) (! (= ?v0py244 (node$b (root$c ?v0py244) (left$c ?v0py244) (right$c ?v0py244))) :pattern ((root$c ?v0py244)) :pattern ((left$c ?v0py244)) :pattern ((right$c ?v0py244)) )) :named A249))
(assert (! (forall ((?v0py245 A_b_a_fun_a_fun_fun_tree$)) (! (= ?v0py245 (node$d (?v1!16 ?v0py245) (?v2!15 ?v0py245) (?v3!14 ?v0py245))) :pattern ((?v1!16 ?v0py245)) :pattern ((?v2!15 ?v0py245)) :pattern ((?v3!14 ?v0py245)) )) :named A250))
(assert (! (forall ((?v0py246 A_b_a_fun_fun_a_a_fun_fun_tree$)) (! (= ?v0py246 (node$a (?v1!19 ?v0py246) (?v2!18 ?v0py246) (?v3!17 ?v0py246))) :pattern ((?v1!19 ?v0py246)) :pattern ((?v2!18 ?v0py246)) :pattern ((?v3!17 ?v0py246)) )) :named A251))
(assert (! (forall ((?v0py247 A_b_a_fun_fun_tree$)) (! (= ?v0py247 (node$b (?v1!22 ?v0py247) (?v2!21 ?v0py247) (?v3!20 ?v0py247))) :pattern ((?v1!22 ?v0py247)) :pattern ((?v2!21 ?v0py247)) :pattern ((?v3!20 ?v0py247)) )) :named A252))
(assert (! (forall ((?v0py248 A_a_fun_tree$)) (! (= ?v0py248 (node$ (?v1!25 ?v0py248) (?v2!24 ?v0py248) (?v3!23 ?v0py248))) :pattern ((?v1!25 ?v0py248)) :pattern ((?v2!24 ?v0py248)) :pattern ((?v3!23 ?v0py248)) )) :named A253))
(assert (! (forall ((?v0py249 A_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_tree$)) (! (= ?v0py249 (node$c (?v1!28 ?v0py249) (?v2!27 ?v0py249) (?v3!26 ?v0py249))) :pattern ((?v1!28 ?v0py249)) :pattern ((?v2!27 ?v0py249)) :pattern ((?v3!26 ?v0py249)) )) :named A254))
(assert (! (forall ((?v0py250 A_b_a_fun_fun_a_a_fun_fun_tree$)(?v1py214 A_b_a_fun_fun_a_a_fun_fun_tree$)) (! (or (not (= (root$b ?v0py250) (root$b ?v1py214))) (not (= (left$b ?v0py250) (left$b ?v1py214))) (not (= (right$b ?v0py250) (right$b ?v1py214))) (= ?v0py250 ?v1py214)) :pattern ((root$b ?v0py250) (root$b ?v1py214)) )) :named A255))
(assert (! (forall ((?v0py251 A_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_tree$)(?v1py215 A_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_tree$)) (! (or (not (= (root$d ?v0py251) (root$d ?v1py215))) (not (= (left$d ?v0py251) (left$d ?v1py215))) (not (= (right$d ?v0py251) (right$d ?v1py215))) (= ?v0py251 ?v1py215)) :pattern ((root$d ?v0py251) (root$d ?v1py215)) )) :named A256))
(assert (! (forall ((?v0py252 A_b_a_fun_a_fun_fun_tree$)(?v1py216 A_b_a_fun_a_fun_fun_tree$)) (! (or (not (= (root$e ?v0py252) (root$e ?v1py216))) (not (= (left$e ?v0py252) (left$e ?v1py216))) (not (= (right$e ?v0py252) (right$e ?v1py216))) (= ?v0py252 ?v1py216)) :pattern ((root$e ?v0py252) (root$e ?v1py216)) )) :named A257))
(assert (! (forall ((?v0py253 A_a_fun_tree$)(?v1py217 A_a_fun_tree$)) (! (or (not (= (root$a ?v0py253) (root$a ?v1py217))) (not (= (left$a ?v0py253) (left$a ?v1py217))) (not (= (right$a ?v0py253) (right$a ?v1py217))) (= ?v0py253 ?v1py217)) :pattern ((root$a ?v0py253) (root$a ?v1py217)) )) :named A258))
(assert (! (forall ((?v0py254 A_b_a_fun_fun_tree$)(?v1py218 A_b_a_fun_fun_tree$)) (! (or (not (= (root$c ?v0py254) (root$c ?v1py218))) (not (= (left$c ?v0py254) (left$c ?v1py218))) (not (= (right$c ?v0py254) (right$c ?v1py218))) (= ?v0py254 ?v1py218)) :pattern ((root$c ?v0py254) (root$c ?v1py218)) )) :named A259))
(assert (! (forall ((?v0py255 A_b_a_fun_fun_a_a_fun_fun_tree_a_b_a_fun_fun_a_a_fun_fun_tree_bool_fun_fun$)(?v1py219 A_b_a_fun_fun_a_a_fun_fun_tree$)(?v2py81 A_b_a_fun_fun_a_a_fun_fun_tree$)) (! (or (= ?v1py219 ?v2py81) (not (fun_app$bo (fun_app$bp ?v0py255 ?v1py219) ?v2py81)) (and (fun_app$bo (fun_app$bp ?v0py255 (?v3!30 ?v0py255)) (?v4!29 ?v0py255)) (or (not (= (root$b (?v3!30 ?v0py255)) (root$b (?v4!29 ?v0py255)))) (and (not (fun_app$bo (fun_app$bp ?v0py255 (left$b (?v3!30 ?v0py255))) (left$b (?v4!29 ?v0py255)))) (not (= (left$b (?v3!30 ?v0py255)) (left$b (?v4!29 ?v0py255))))) (and (not (fun_app$bo (fun_app$bp ?v0py255 (right$b (?v3!30 ?v0py255))) (right$b (?v4!29 ?v0py255)))) (not (= (right$b (?v3!30 ?v0py255)) (right$b (?v4!29 ?v0py255)))))))) :pattern ((fun_app$bo (fun_app$bp ?v0py255 ?v1py219) ?v2py81)) )) :named A260))
(assert (! (forall ((?v0py256 A_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_tree_a_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_tree_bool_fun_fun$)(?v1py220 A_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_tree$)(?v2py82 A_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_tree$)) (! (or (= ?v1py220 ?v2py82) (not (fun_app$bq (fun_app$br ?v0py256 ?v1py220) ?v2py82)) (and (fun_app$bq (fun_app$br ?v0py256 (?v3!32 ?v0py256)) (?v4!31 ?v0py256)) (or (not (= (root$d (?v3!32 ?v0py256)) (root$d (?v4!31 ?v0py256)))) (and (not (fun_app$bq (fun_app$br ?v0py256 (left$d (?v3!32 ?v0py256))) (left$d (?v4!31 ?v0py256)))) (not (= (left$d (?v3!32 ?v0py256)) (left$d (?v4!31 ?v0py256))))) (and (not (fun_app$bq (fun_app$br ?v0py256 (right$d (?v3!32 ?v0py256))) (right$d (?v4!31 ?v0py256)))) (not (= (right$d (?v3!32 ?v0py256)) (right$d (?v4!31 ?v0py256)))))))) :pattern ((fun_app$bq (fun_app$br ?v0py256 ?v1py220) ?v2py82)) )) :named A261))
(assert (! (forall ((?v0py257 A_b_a_fun_a_fun_fun_tree_a_b_a_fun_a_fun_fun_tree_bool_fun_fun$)(?v1py221 A_b_a_fun_a_fun_fun_tree$)(?v2py83 A_b_a_fun_a_fun_fun_tree$)) (! (or (= ?v1py221 ?v2py83) (not (fun_app$bs (fun_app$bt ?v0py257 ?v1py221) ?v2py83)) (and (fun_app$bs (fun_app$bt ?v0py257 (?v3!34 ?v0py257)) (?v4!33 ?v0py257)) (or (not (= (root$e (?v3!34 ?v0py257)) (root$e (?v4!33 ?v0py257)))) (and (not (fun_app$bs (fun_app$bt ?v0py257 (left$e (?v3!34 ?v0py257))) (left$e (?v4!33 ?v0py257)))) (not (= (left$e (?v3!34 ?v0py257)) (left$e (?v4!33 ?v0py257))))) (and (not (fun_app$bs (fun_app$bt ?v0py257 (right$e (?v3!34 ?v0py257))) (right$e (?v4!33 ?v0py257)))) (not (= (right$e (?v3!34 ?v0py257)) (right$e (?v4!33 ?v0py257)))))))) :pattern ((fun_app$bs (fun_app$bt ?v0py257 ?v1py221) ?v2py83)) )) :named A262))
(assert (! (forall ((?v0py258 A_a_fun_tree_a_a_fun_tree_bool_fun_fun$)(?v1py222 A_a_fun_tree$)(?v2py84 A_a_fun_tree$)) (! (or (= ?v1py222 ?v2py84) (not (fun_app$bu (fun_app$bv ?v0py258 ?v1py222) ?v2py84)) (and (fun_app$bu (fun_app$bv ?v0py258 (?v3!36 ?v0py258)) (?v4!35 ?v0py258)) (or (not (= (root$a (?v3!36 ?v0py258)) (root$a (?v4!35 ?v0py258)))) (and (not (fun_app$bu (fun_app$bv ?v0py258 (left$a (?v3!36 ?v0py258))) (left$a (?v4!35 ?v0py258)))) (not (= (left$a (?v3!36 ?v0py258)) (left$a (?v4!35 ?v0py258))))) (and (not (fun_app$bu (fun_app$bv ?v0py258 (right$a (?v3!36 ?v0py258))) (right$a (?v4!35 ?v0py258)))) (not (= (right$a (?v3!36 ?v0py258)) (right$a (?v4!35 ?v0py258)))))))) :pattern ((fun_app$bu (fun_app$bv ?v0py258 ?v1py222) ?v2py84)) )) :named A263))
(assert (! (forall ((?v0py259 A_b_a_fun_fun_tree_a_b_a_fun_fun_tree_bool_fun_fun$)(?v1py223 A_b_a_fun_fun_tree$)(?v2py85 A_b_a_fun_fun_tree$)) (! (or (= ?v1py223 ?v2py85) (not (fun_app$bw (fun_app$bx ?v0py259 ?v1py223) ?v2py85)) (and (fun_app$bw (fun_app$bx ?v0py259 (?v3!38 ?v0py259)) (?v4!37 ?v0py259)) (or (not (= (root$c (?v3!38 ?v0py259)) (root$c (?v4!37 ?v0py259)))) (and (not (fun_app$bw (fun_app$bx ?v0py259 (left$c (?v3!38 ?v0py259))) (left$c (?v4!37 ?v0py259)))) (not (= (left$c (?v3!38 ?v0py259)) (left$c (?v4!37 ?v0py259))))) (and (not (fun_app$bw (fun_app$bx ?v0py259 (right$c (?v3!38 ?v0py259))) (right$c (?v4!37 ?v0py259)))) (not (= (right$c (?v3!38 ?v0py259)) (right$c (?v4!37 ?v0py259)))))))) :pattern ((fun_app$bw (fun_app$bx ?v0py259 ?v1py223) ?v2py85)) )) :named A264))
(assert (! (forall ((?v0py260 A_b_a_fun_fun_a_a_fun_fun_tree_a_b_a_fun_fun_a_a_fun_fun_tree_bool_fun_fun$)(?v1py224 A_b_a_fun_fun_a_a_fun_fun_tree$)(?v2py86 A_b_a_fun_fun_a_a_fun_fun_tree$)) (! (or (= ?v1py224 ?v2py86) (not (fun_app$bo (fun_app$bp ?v0py260 ?v1py224) ?v2py86)) (and (fun_app$bo (fun_app$bp ?v0py260 (?v3!40 ?v0py260)) (?v4!39 ?v0py260)) (or (not (= (root$b (?v3!40 ?v0py260)) (root$b (?v4!39 ?v0py260)))) (not (fun_app$bo (fun_app$bp ?v0py260 (left$b (?v3!40 ?v0py260))) (left$b (?v4!39 ?v0py260)))) (not (fun_app$bo (fun_app$bp ?v0py260 (right$b (?v3!40 ?v0py260))) (right$b (?v4!39 ?v0py260))))))) :pattern ((fun_app$bo (fun_app$bp ?v0py260 ?v1py224) ?v2py86)) )) :named A265))
(assert (! (forall ((?v0py261 A_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_tree_a_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_tree_bool_fun_fun$)(?v1py225 A_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_tree$)(?v2py87 A_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_tree$)) (! (or (= ?v1py225 ?v2py87) (not (fun_app$bq (fun_app$br ?v0py261 ?v1py225) ?v2py87)) (and (fun_app$bq (fun_app$br ?v0py261 (?v3!42 ?v0py261)) (?v4!41 ?v0py261)) (or (not (= (root$d (?v3!42 ?v0py261)) (root$d (?v4!41 ?v0py261)))) (not (fun_app$bq (fun_app$br ?v0py261 (left$d (?v3!42 ?v0py261))) (left$d (?v4!41 ?v0py261)))) (not (fun_app$bq (fun_app$br ?v0py261 (right$d (?v3!42 ?v0py261))) (right$d (?v4!41 ?v0py261))))))) :pattern ((fun_app$bq (fun_app$br ?v0py261 ?v1py225) ?v2py87)) )) :named A266))
(assert (! (forall ((?v0py262 A_b_a_fun_a_fun_fun_tree_a_b_a_fun_a_fun_fun_tree_bool_fun_fun$)(?v1py226 A_b_a_fun_a_fun_fun_tree$)(?v2py88 A_b_a_fun_a_fun_fun_tree$)) (! (or (= ?v1py226 ?v2py88) (not (fun_app$bs (fun_app$bt ?v0py262 ?v1py226) ?v2py88)) (and (fun_app$bs (fun_app$bt ?v0py262 (?v3!44 ?v0py262)) (?v4!43 ?v0py262)) (or (not (= (root$e (?v3!44 ?v0py262)) (root$e (?v4!43 ?v0py262)))) (not (fun_app$bs (fun_app$bt ?v0py262 (left$e (?v3!44 ?v0py262))) (left$e (?v4!43 ?v0py262)))) (not (fun_app$bs (fun_app$bt ?v0py262 (right$e (?v3!44 ?v0py262))) (right$e (?v4!43 ?v0py262))))))) :pattern ((fun_app$bs (fun_app$bt ?v0py262 ?v1py226) ?v2py88)) )) :named A267))
(assert (! (forall ((?v0py263 A_a_fun_tree_a_a_fun_tree_bool_fun_fun$)(?v1py227 A_a_fun_tree$)(?v2py89 A_a_fun_tree$)) (! (or (= ?v1py227 ?v2py89) (not (fun_app$bu (fun_app$bv ?v0py263 ?v1py227) ?v2py89)) (and (fun_app$bu (fun_app$bv ?v0py263 (?v3!46 ?v0py263)) (?v4!45 ?v0py263)) (or (not (= (root$a (?v3!46 ?v0py263)) (root$a (?v4!45 ?v0py263)))) (not (fun_app$bu (fun_app$bv ?v0py263 (left$a (?v3!46 ?v0py263))) (left$a (?v4!45 ?v0py263)))) (not (fun_app$bu (fun_app$bv ?v0py263 (right$a (?v3!46 ?v0py263))) (right$a (?v4!45 ?v0py263))))))) :pattern ((fun_app$bu (fun_app$bv ?v0py263 ?v1py227) ?v2py89)) )) :named A268))
(assert (! (forall ((?v0py264 A_b_a_fun_fun_tree_a_b_a_fun_fun_tree_bool_fun_fun$)(?v1py228 A_b_a_fun_fun_tree$)(?v2py90 A_b_a_fun_fun_tree$)) (! (or (= ?v1py228 ?v2py90) (not (fun_app$bw (fun_app$bx ?v0py264 ?v1py228) ?v2py90)) (and (fun_app$bw (fun_app$bx ?v0py264 (?v3!48 ?v0py264)) (?v4!47 ?v0py264)) (or (not (= (root$c (?v3!48 ?v0py264)) (root$c (?v4!47 ?v0py264)))) (not (fun_app$bw (fun_app$bx ?v0py264 (left$c (?v3!48 ?v0py264))) (left$c (?v4!47 ?v0py264)))) (not (fun_app$bw (fun_app$bx ?v0py264 (right$c (?v3!48 ?v0py264))) (right$c (?v4!47 ?v0py264))))))) :pattern ((fun_app$bw (fun_app$bx ?v0py264 ?v1py228) ?v2py90)) )) :named A269))
(assert (! (= s_tree$ (pure_tree$o uui$)) :named A270))
(assert (! (forall ((?v0py265 A_b_a_fun_a_fun_fun_tree$)) (! (= (ap_tree$b (pure_tree$ad id$b) ?v0py265) ?v0py265) :pattern ((ap_tree$b (pure_tree$ad id$b) ?v0py265)) )) :named A271))
(assert (! (forall ((?v0py266 A_b_a_fun_fun_tree$)) (! (= (ap_tree$c (pure_tree$u id$c) ?v0py266) ?v0py266) :pattern ((ap_tree$c (pure_tree$u id$c) ?v0py266)) )) :named A272))
(assert (! (forall ((?v0py267 A_a_fun_tree$)) (! (= (ap_tree$d (pure_tree$q id$d) ?v0py267) ?v0py267) :pattern ((ap_tree$d (pure_tree$q id$d) ?v0py267)) )) :named A273))
(assert (! (forall ((?v0py268 A_tree$)) (! (= (ap_tree$f (pure_tree$m id$) ?v0py268) ?v0py268) :pattern ((ap_tree$f (pure_tree$m id$) ?v0py268)) )) :named A274))
(assert (! (forall ((?v0py269 A_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun$)) (! (= (fun_app$bk (fun_app$bl comp$c ?v0py269) id$b) ?v0py269) :pattern ((fun_app$bl comp$c ?v0py269)) )) :named A275))
(assert (! (forall ((?v0py270 A_b_a_fun_fun_a_a_fun_fun$)) (! (= (fun_app$bm (fun_app$bn comp$b ?v0py270) id$c) ?v0py270) :pattern ((fun_app$bn comp$b ?v0py270)) )) :named A276))
(assert (! (forall ((?v0py271 A_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun$)) (! (= (fun_app$bg (fun_app$bh comp$d id$e) ?v0py271) ?v0py271) :pattern ((fun_app$bg (fun_app$bh comp$d id$e) ?v0py271)) )) :named A277))
(assert (! (forall ((?v0py272 A_b_a_fun_fun_a_a_fun_fun$)) (! (= (fun_app$bi (fun_app$bj comp$a id$d) ?v0py272) ?v0py272) :pattern ((fun_app$bi (fun_app$bj comp$a id$d) ?v0py272)) )) :named A278))
(assert (! (forall ((?v0py273 A$)) (! (= (fun_app$m id$ ?v0py273) ?v0py273) :pattern ((fun_app$m id$ ?v0py273)) )) :named A279))
(assert (! (forall ((?v0py274 A_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun$)(?v1py229 A_b_a_fun_a_fun_fun_a_b_a_fun_a_fun_fun_fun$)(?v2py91 A_b_a_fun_a_fun_fun$)) (! (= (fun_app$a (fun_app$bk (fun_app$bl comp$c ?v0py274) ?v1py229) ?v2py91) (fun_app$a ?v0py274 (fun_app$c ?v1py229 ?v2py91))) :pattern ((fun_app$a (fun_app$bk (fun_app$bl comp$c ?v0py274) ?v1py229) ?v2py91)) )) :named A280))
(assert (! (forall ((?v0py275 A_b_a_fun_fun_a_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun$)(?v1py230 A_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun$)(?v2py92 A_b_a_fun_a_fun_fun$)) (! (= (fun_app$a (fun_app$bg (fun_app$bh comp$d ?v0py275) ?v1py230) ?v2py92) (fun_app$bi ?v0py275 (fun_app$a ?v1py230 ?v2py92))) :pattern ((fun_app$a (fun_app$bg (fun_app$bh comp$d ?v0py275) ?v1py230) ?v2py92)) )) :named A281))
(assert (! (forall ((?v0py276 A_b_a_fun_fun_a_a_fun_fun$)(?v1py231 A_b_a_fun_fun_a_b_a_fun_fun_fun$)(?v2py93 A_b_a_fun_fun$)) (! (= (fun_app$g (fun_app$bm (fun_app$bn comp$b ?v0py276) ?v1py231) ?v2py93) (fun_app$g ?v0py276 (fun_app$e ?v1py231 ?v2py93))) :pattern ((fun_app$g (fun_app$bm (fun_app$bn comp$b ?v0py276) ?v1py231) ?v2py93)) )) :named A282))
(assert (! (forall ((?v0py277 A_a_fun_a_a_fun_fun$)(?v1py232 A_b_a_fun_fun_a_a_fun_fun$)(?v2py94 A_b_a_fun_fun$)) (! (= (fun_app$g (fun_app$bi (fun_app$bj comp$a ?v0py277) ?v1py232) ?v2py94) (fun_app$i ?v0py277 (fun_app$g ?v1py232 ?v2py94))) :pattern ((fun_app$g (fun_app$bi (fun_app$bj comp$a ?v0py277) ?v1py232) ?v2py94)) )) :named A283))
(assert (! (forall ((?v0py278 B_a_fun_a_fun$)(?v1py233 A_b_a_fun_fun$)(?v2py95 A$)) (! (= (fun_app$m (fun_app$g (fun_app$bf comp$ ?v0py278) ?v1py233) ?v2py95) (fun_app$n ?v0py278 (fun_app$k ?v1py233 ?v2py95))) :pattern ((fun_app$m (fun_app$g (fun_app$bf comp$ ?v0py278) ?v1py233) ?v2py95)) )) :named A284))
(assert (! (= (fun_app$bh comp$d id$e) id$f) :named A285))
(assert (! (= (fun_app$bj comp$a id$d) id$e) :named A286))
(assert (! (forall ((?v0py279 A_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun$)(?v1py234 A_b_a_fun_a_fun_fun_a_b_a_fun_a_fun_fun_fun$)(?v2py96 A_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun$)(?v3py35 A_b_a_fun_a_fun_fun$)) (! (or (not (= (fun_app$bk (fun_app$bl comp$c ?v0py279) ?v1py234) (fun_app$bg (fun_app$bh comp$d id$e) ?v2py96))) (= (fun_app$a ?v0py279 (fun_app$c ?v1py234 ?v3py35)) (fun_app$a ?v2py96 ?v3py35))) :pattern ((fun_app$a ?v0py279 (fun_app$c ?v1py234 ?v3py35)) (fun_app$a ?v2py96 ?v3py35)) )) :named A287))
(assert (! (forall ((?v0py280 A_b_a_fun_fun_a_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun$)(?v1py235 A_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun$)(?v2py97 A_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun$)(?v3py36 A_b_a_fun_a_fun_fun$)) (! (or (not (= (fun_app$bg (fun_app$bh comp$d ?v0py280) ?v1py235) (fun_app$bg (fun_app$bh comp$d id$e) ?v2py97))) (= (fun_app$bi ?v0py280 (fun_app$a ?v1py235 ?v3py36)) (fun_app$a ?v2py97 ?v3py36))) :pattern ((fun_app$bi ?v0py280 (fun_app$a ?v1py235 ?v3py36)) (fun_app$a ?v2py97 ?v3py36)) )) :named A288))
(assert (! (forall ((?v0py281 A_b_a_fun_fun_a_a_fun_fun$)(?v1py236 A_b_a_fun_fun_a_b_a_fun_fun_fun$)(?v2py98 A_b_a_fun_fun_a_a_fun_fun$)(?v3py37 A_b_a_fun_fun$)) (! (or (not (= (fun_app$bm (fun_app$bn comp$b ?v0py281) ?v1py236) (fun_app$bi (fun_app$bj comp$a id$d) ?v2py98))) (= (fun_app$g ?v0py281 (fun_app$e ?v1py236 ?v3py37)) (fun_app$g ?v2py98 ?v3py37))) :pattern ((fun_app$g ?v0py281 (fun_app$e ?v1py236 ?v3py37)) (fun_app$g ?v2py98 ?v3py37)) )) :named A289))
(assert (! (forall ((?v0py282 A_a_fun_a_a_fun_fun$)(?v1py237 A_b_a_fun_fun_a_a_fun_fun$)(?v2py99 A_b_a_fun_fun_a_a_fun_fun$)(?v3py38 A_b_a_fun_fun$)) (! (or (not (= (fun_app$bi (fun_app$bj comp$a ?v0py282) ?v1py237) (fun_app$bi (fun_app$bj comp$a id$d) ?v2py99))) (= (fun_app$i ?v0py282 (fun_app$g ?v1py237 ?v3py38)) (fun_app$g ?v2py99 ?v3py38))) :pattern ((fun_app$i ?v0py282 (fun_app$g ?v1py237 ?v3py38)) (fun_app$g ?v2py99 ?v3py38)) )) :named A290))
(assert (! (forall ((?v0py283 B_a_fun_a_fun$)(?v1py238 A_b_a_fun_fun$)(?v2py100 A_a_fun$)(?v3py39 A$)) (! (or (not (= (fun_app$g (fun_app$bf comp$ ?v0py283) ?v1py238) (fun_app$i (fun_app$by comp$e id$) ?v2py100))) (= (fun_app$n ?v0py283 (fun_app$k ?v1py238 ?v3py39)) (fun_app$m ?v2py100 ?v3py39))) :pattern ((fun_app$n ?v0py283 (fun_app$k ?v1py238 ?v3py39)) (fun_app$m ?v2py100 ?v3py39)) )) :named A291))
(assert (! (forall ((?v0py284 B_a_fun_a_fun$)(?v1py239 A_b_a_fun_fun$)(?v2py101 A$)) (! (or (not (= (fun_app$g (fun_app$bf comp$ ?v0py284) ?v1py239) id$)) (= (fun_app$n ?v0py284 (fun_app$k ?v1py239 ?v2py101)) ?v2py101)) :pattern ((fun_app$n ?v0py284 (fun_app$k ?v1py239 ?v2py101))) )) :named A292))
(assert (! (forall ((?v0py285 A_b_a_fun_fun_a_a_fun_fun_tree$)) (! (= (right$b ?v0py285) (case_tree$ uuj$ ?v0py285)) :pattern ((right$b ?v0py285)) :pattern ((case_tree$ uuj$ ?v0py285)) )) :named A293))
(assert (! (forall ((?v0py286 A_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_tree$)) (! (= (right$d ?v0py286) (case_tree$a uuk$ ?v0py286)) :pattern ((right$d ?v0py286)) :pattern ((case_tree$a uuk$ ?v0py286)) )) :named A294))
(assert (! (forall ((?v0py287 A_b_a_fun_a_fun_fun_tree$)) (! (= (right$e ?v0py287) (case_tree$b uul$ ?v0py287)) :pattern ((right$e ?v0py287)) :pattern ((case_tree$b uul$ ?v0py287)) )) :named A295))
(assert (! (forall ((?v0py288 A_a_fun_tree$)) (! (= (right$a ?v0py288) (case_tree$c uum$ ?v0py288)) :pattern ((right$a ?v0py288)) :pattern ((case_tree$c uum$ ?v0py288)) )) :named A296))
(assert (! (forall ((?v0py289 A_b_a_fun_fun_tree$)) (! (= (right$c ?v0py289) (case_tree$d uun$ ?v0py289)) :pattern ((right$c ?v0py289)) :pattern ((case_tree$d uun$ ?v0py289)) )) :named A297))
(assert (! (forall ((?v0py290 A_b_a_fun_fun_a_a_fun_fun_tree$)) (! (= (left$b ?v0py290) (case_tree$ uuo$ ?v0py290)) :pattern ((left$b ?v0py290)) :pattern ((case_tree$ uuo$ ?v0py290)) )) :named A298))
(assert (! (forall ((?v0py291 A_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_tree$)) (! (= (left$d ?v0py291) (case_tree$a uup$ ?v0py291)) :pattern ((left$d ?v0py291)) :pattern ((case_tree$a uup$ ?v0py291)) )) :named A299))
(assert (! (forall ((?v0py292 A_b_a_fun_a_fun_fun_tree$)) (! (= (left$e ?v0py292) (case_tree$b uuq$ ?v0py292)) :pattern ((left$e ?v0py292)) :pattern ((case_tree$b uuq$ ?v0py292)) )) :named A300))
(assert (! (forall ((?v0py293 A_a_fun_tree$)) (! (= (left$a ?v0py293) (case_tree$c uur$ ?v0py293)) :pattern ((left$a ?v0py293)) :pattern ((case_tree$c uur$ ?v0py293)) )) :named A301))
(assert (! (forall ((?v0py294 A_b_a_fun_fun_tree$)) (! (= (left$c ?v0py294) (case_tree$d uus$ ?v0py294)) :pattern ((left$c ?v0py294)) :pattern ((case_tree$d uus$ ?v0py294)) )) :named A302))
(assert (! (forall ((?v0py295 A_b_a_fun_fun_a_a_fun_fun_tree$)) (! (= (root$b ?v0py295) (fun_app$s (case_tree$e uut$) ?v0py295)) :pattern ((root$b ?v0py295)) :pattern ((fun_app$s (case_tree$e uut$) ?v0py295)) )) :named A303))
(assert (! (forall ((?v0py296 A_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun_tree$)) (! (= (root$d ?v0py296) (fun_app$p (case_tree$f uuu$) ?v0py296)) :pattern ((root$d ?v0py296)) :pattern ((fun_app$p (case_tree$f uuu$) ?v0py296)) )) :named A304))
(assert (! (forall ((?v0py297 A_b_a_fun_a_fun_fun_tree$)) (! (= (root$e ?v0py297) (fun_app$v (case_tree$g uuv$) ?v0py297)) :pattern ((root$e ?v0py297)) :pattern ((fun_app$v (case_tree$g uuv$) ?v0py297)) )) :named A305))
(assert (! (forall ((?v0py298 A_a_fun_tree$)) (! (= (root$a ?v0py298) (fun_app$ab (case_tree$h uuw$) ?v0py298)) :pattern ((root$a ?v0py298)) :pattern ((fun_app$ab (case_tree$h uuw$) ?v0py298)) )) :named A306))
(assert (! (forall ((?v0py299 A_b_a_fun_fun_tree$)) (! (= (root$c ?v0py299) (fun_app$y (case_tree$i uux$) ?v0py299)) :pattern ((root$c ?v0py299)) :pattern ((fun_app$y (case_tree$i uux$) ?v0py299)) )) :named A307))
(assert (! (forall ((?v0py300 A_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun$)(?v1py240 A_b_a_fun_a_fun_fun_a_b_a_fun_a_fun_fun_fun$)(?v2py102 A_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun$)(?v3py40 A_b_a_fun_a_fun_fun$)) (! (or (not (= (fun_app$bk (fun_app$bl comp$c ?v0py300) ?v1py240) ?v2py102)) (= (fun_app$a ?v0py300 (fun_app$c ?v1py240 ?v3py40)) (fun_app$a ?v2py102 ?v3py40))) :pattern ((fun_app$a ?v0py300 (fun_app$c ?v1py240 ?v3py40)) (fun_app$a ?v2py102 ?v3py40)) )) :named A308))
(assert (! (forall ((?v0py301 A_b_a_fun_fun_a_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun$)(?v1py241 A_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun$)(?v2py103 A_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun$)(?v3py41 A_b_a_fun_a_fun_fun$)) (! (or (not (= (fun_app$bg (fun_app$bh comp$d ?v0py301) ?v1py241) ?v2py103)) (= (fun_app$bi ?v0py301 (fun_app$a ?v1py241 ?v3py41)) (fun_app$a ?v2py103 ?v3py41))) :pattern ((fun_app$bi ?v0py301 (fun_app$a ?v1py241 ?v3py41)) (fun_app$a ?v2py103 ?v3py41)) )) :named A309))
(assert (! (forall ((?v0py302 A_b_a_fun_fun_a_a_fun_fun$)(?v1py242 A_b_a_fun_fun_a_b_a_fun_fun_fun$)(?v2py104 A_b_a_fun_fun_a_a_fun_fun$)(?v3py42 A_b_a_fun_fun$)) (! (or (not (= (fun_app$bm (fun_app$bn comp$b ?v0py302) ?v1py242) ?v2py104)) (= (fun_app$g ?v0py302 (fun_app$e ?v1py242 ?v3py42)) (fun_app$g ?v2py104 ?v3py42))) :pattern ((fun_app$g ?v0py302 (fun_app$e ?v1py242 ?v3py42)) (fun_app$g ?v2py104 ?v3py42)) )) :named A310))
(assert (! (forall ((?v0py303 A_a_fun_a_a_fun_fun$)(?v1py243 A_b_a_fun_fun_a_a_fun_fun$)(?v2py105 A_b_a_fun_fun_a_a_fun_fun$)(?v3py43 A_b_a_fun_fun$)) (! (or (not (= (fun_app$bi (fun_app$bj comp$a ?v0py303) ?v1py243) ?v2py105)) (= (fun_app$i ?v0py303 (fun_app$g ?v1py243 ?v3py43)) (fun_app$g ?v2py105 ?v3py43))) :pattern ((fun_app$i ?v0py303 (fun_app$g ?v1py243 ?v3py43)) (fun_app$g ?v2py105 ?v3py43)) )) :named A311))
(assert (! (forall ((?v0py304 B_a_fun_a_fun$)(?v1py244 A_b_a_fun_fun$)(?v2py106 A_a_fun$)(?v3py44 A$)) (! (or (not (= (fun_app$g (fun_app$bf comp$ ?v0py304) ?v1py244) ?v2py106)) (= (fun_app$n ?v0py304 (fun_app$k ?v1py244 ?v3py44)) (fun_app$m ?v2py106 ?v3py44))) :pattern ((fun_app$n ?v0py304 (fun_app$k ?v1py244 ?v3py44)) (fun_app$m ?v2py106 ?v3py44)) )) :named A312))
(assert (! (forall ((?v0py305 A_a_fun$)(?v1py245 B_a_fun_a_fun$)(?v2py107 B_a_fun_a_fun$)(?v3py45 A_b_a_fun_fun$)) (! (or (not (= (fun_app$bz (comp$o ?v0py305) ?v1py245) ?v2py107)) (= (fun_app$i (fun_app$by comp$e ?v0py305) (fun_app$g (fun_app$bf comp$ ?v1py245) ?v3py45)) (fun_app$g (fun_app$bf comp$ ?v2py107) ?v3py45))) :pattern ((fun_app$i (fun_app$by comp$e ?v0py305) (fun_app$g (fun_app$bf comp$ ?v1py245) ?v3py45)) (fun_app$g (fun_app$bf comp$ ?v2py107) ?v3py45)) )) :named A313))
(assert (! (forall ((?v0py306 B_a_fun_a_fun$)(?v1py246 A_b_a_fun_fun$)(?v2py108 A_a_fun$)(?v3py46 A_a_fun$)) (! (or (not (= (fun_app$g (fun_app$bf comp$ ?v0py306) ?v1py246) ?v2py108)) (= (fun_app$g (fun_app$bf comp$ ?v0py306) (fun_app$au (fun_app$ca comp$f ?v1py246) ?v3py46)) (fun_app$i (fun_app$by comp$e ?v2py108) ?v3py46))) :pattern ((fun_app$g (fun_app$bf comp$ ?v0py306) (fun_app$au (fun_app$ca comp$f ?v1py246) ?v3py46)) (fun_app$i (fun_app$by comp$e ?v2py108) ?v3py46)) )) :named A314))
(assert (! (forall ((?v0py307 B_a_fun_a_fun$)(?v1py247 B_a_fun_b_a_fun_fun$)(?v2py109 B_a_fun_a_fun$)(?v3py47 A_b_a_fun_fun$)) (! (or (not (= (fun_app$cb (comp$p ?v0py307) ?v1py247) ?v2py109)) (= (fun_app$g (fun_app$bf comp$ ?v0py307) (fun_app$e (fun_app$cc comp$g ?v1py247) ?v3py47)) (fun_app$g (fun_app$bf comp$ ?v2py109) ?v3py47))) :pattern ((fun_app$g (fun_app$bf comp$ ?v0py307) (fun_app$e (fun_app$cc comp$g ?v1py247) ?v3py47)) (fun_app$g (fun_app$bf comp$ ?v2py109) ?v3py47)) )) :named A315))
(assert (! (forall ((?v0py308 A_a_fun_a_a_fun_fun$)(?v1py248 A_a_fun_a_a_fun_fun$)(?v2py110 A_a_fun_a_a_fun_fun$)(?v3py48 A_b_a_fun_fun_a_a_fun_fun$)) (! (or (not (= (fun_app$cd (fun_app$ce comp$h ?v0py308) ?v1py248) ?v2py110)) (= (fun_app$bi (fun_app$bj comp$a ?v0py308) (fun_app$bi (fun_app$bj comp$a ?v1py248) ?v3py48)) (fun_app$bi (fun_app$bj comp$a ?v2py110) ?v3py48))) :pattern ((fun_app$bi (fun_app$bj comp$a ?v0py308) (fun_app$bi (fun_app$bj comp$a ?v1py248) ?v3py48)) (fun_app$bi (fun_app$bj comp$a ?v2py110) ?v3py48)) )) :named A316))
(assert (! (forall ((?v0py309 A_b_a_fun_fun_a_a_fun_fun$)(?v1py249 A_a_fun_a_b_a_fun_fun_fun$)(?v2py111 A_a_fun_a_a_fun_fun$)(?v3py49 A_b_a_fun_fun_a_a_fun_fun$)) (! (or (not (= (fun_app$cf (comp$q ?v0py309) ?v1py249) ?v2py111)) (= (fun_app$bm (fun_app$bn comp$b ?v0py309) (fun_app$cg (comp$r ?v1py249) ?v3py49)) (fun_app$bi (fun_app$bj comp$a ?v2py111) ?v3py49))) :pattern ((fun_app$bm (fun_app$bn comp$b ?v0py309) (fun_app$cg (comp$r ?v1py249) ?v3py49)) (fun_app$bi (fun_app$bj comp$a ?v2py111) ?v3py49)) )) :named A317))
(assert (! (forall ((?v0py310 A_a_fun_a_a_fun_fun$)(?v1py250 A_b_a_fun_fun_a_a_fun_fun$)(?v2py112 A_b_a_fun_fun_a_a_fun_fun$)(?v3py50 A_b_a_fun_fun_a_b_a_fun_fun_fun$)) (! (or (not (= (fun_app$bi (fun_app$bj comp$a ?v0py310) ?v1py250) ?v2py112)) (= (fun_app$bi (fun_app$bj comp$a ?v0py310) (fun_app$bm (fun_app$bn comp$b ?v1py250) ?v3py50)) (fun_app$bm (fun_app$bn comp$b ?v2py112) ?v3py50))) :pattern ((fun_app$bi (fun_app$bj comp$a ?v0py310) (fun_app$bm (fun_app$bn comp$b ?v1py250) ?v3py50)) (fun_app$bm (fun_app$bn comp$b ?v2py112) ?v3py50)) )) :named A318))
(assert (! (forall ((?v0py311 A_b_a_fun_fun_a_a_fun_fun$)(?v1py251 A_b_a_fun_fun_a_b_a_fun_fun_fun$)(?v2py113 A_b_a_fun_fun_a_a_fun_fun$)(?v3py51 A_b_a_fun_fun_a_b_a_fun_fun_fun$)) (! (or (not (= (fun_app$bm (fun_app$bn comp$b ?v0py311) ?v1py251) ?v2py113)) (= (fun_app$bm (fun_app$bn comp$b ?v0py311) (fun_app$ch (comp$s ?v1py251) ?v3py51)) (fun_app$bm (fun_app$bn comp$b ?v2py113) ?v3py51))) :pattern ((fun_app$bm (fun_app$bn comp$b ?v0py311) (fun_app$ch (comp$s ?v1py251) ?v3py51)) (fun_app$bm (fun_app$bn comp$b ?v2py113) ?v3py51)) )) :named A319))
(assert (! (forall ((?v0py312 A_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun$)(?v1py252 A_b_a_fun_a_fun_fun_a_b_a_fun_a_fun_fun_fun$)(?v2py114 A_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun$)(?v3py52 A_b_a_fun_a_fun_fun_a_b_a_fun_a_fun_fun_fun$)) (! (or (not (= (fun_app$bk (fun_app$bl comp$c ?v0py312) ?v1py252) ?v2py114)) (= (fun_app$bk (fun_app$bl comp$c ?v0py312) (fun_app$ci (comp$t ?v1py252) ?v3py52)) (fun_app$bk (fun_app$bl comp$c ?v2py114) ?v3py52))) :pattern ((fun_app$bk (fun_app$bl comp$c ?v0py312) (fun_app$ci (comp$t ?v1py252) ?v3py52)) (fun_app$bk (fun_app$bl comp$c ?v2py114) ?v3py52)) )) :named A320))
(assert (! (forall ((?v0py313 A_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun$)(?v1py253 A_b_a_fun_fun_a_a_fun_fun_a_b_a_fun_a_fun_fun_fun$)(?v2py115 A_b_a_fun_fun_a_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun$)(?v3py53 A_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun$)) (! (or (not (= (fun_app$cj (comp$u ?v0py313) ?v1py253) ?v2py115)) (= (fun_app$bk (fun_app$bl comp$c ?v0py313) (fun_app$ck (comp$v ?v1py253) ?v3py53)) (fun_app$bg (fun_app$bh comp$d ?v2py115) ?v3py53))) :pattern ((fun_app$bk (fun_app$bl comp$c ?v0py313) (fun_app$ck (comp$v ?v1py253) ?v3py53)) (fun_app$bg (fun_app$bh comp$d ?v2py115) ?v3py53)) )) :named A321))
(assert (! (forall ((?v0py314 A_b_a_fun_fun_a_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun$)(?v1py254 A_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun$)(?v2py116 A_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun$)(?v3py54 A_b_a_fun_a_fun_fun_a_b_a_fun_a_fun_fun_fun$)) (! (or (not (= (fun_app$bg (fun_app$bh comp$d ?v0py314) ?v1py254) ?v2py116)) (= (fun_app$bg (fun_app$bh comp$d ?v0py314) (fun_app$bk (fun_app$bl comp$c ?v1py254) ?v3py54)) (fun_app$bk (fun_app$bl comp$c ?v2py116) ?v3py54))) :pattern ((fun_app$bg (fun_app$bh comp$d ?v0py314) (fun_app$bk (fun_app$bl comp$c ?v1py254) ?v3py54)) (fun_app$bk (fun_app$bl comp$c ?v2py116) ?v3py54)) )) :named A322))
(assert (! (forall ((?v0py315 A_b_a_fun_fun$)(?v1py255 A_a_fun$)(?v2py117 A_b_a_fun_fun$)(?v3py55 B_a_fun_a_fun$)) (! (or (not (= (fun_app$au (fun_app$ca comp$f ?v0py315) ?v1py255) ?v2py117)) (= (fun_app$i (fun_app$by comp$e (fun_app$g (fun_app$bf comp$ ?v3py55) ?v0py315)) ?v1py255) (fun_app$g (fun_app$bf comp$ ?v3py55) ?v2py117))) :pattern ((fun_app$i (fun_app$by comp$e (fun_app$g (fun_app$bf comp$ ?v3py55) ?v0py315)) ?v1py255) (fun_app$g (fun_app$bf comp$ ?v3py55) ?v2py117)) )) :named A323))
(assert (! (forall ((?v0py316 B_a_fun_a_fun$)(?v1py256 A_b_a_fun_fun$)(?v2py118 A_a_fun$)(?v3py56 A_a_fun$)) (! (or (not (= (fun_app$g (fun_app$bf comp$ ?v0py316) ?v1py256) ?v2py118)) (= (fun_app$g (fun_app$bf comp$ (fun_app$bz (comp$o ?v3py56) ?v0py316)) ?v1py256) (fun_app$i (fun_app$by comp$e ?v3py56) ?v2py118))) :pattern ((fun_app$g (fun_app$bf comp$ (fun_app$bz (comp$o ?v3py56) ?v0py316)) ?v1py256) (fun_app$i (fun_app$by comp$e ?v3py56) ?v2py118)) )) :named A324))
(assert (! (forall ((?v0py317 B_a_fun_b_a_fun_fun$)(?v1py257 A_b_a_fun_fun$)(?v2py119 A_b_a_fun_fun$)(?v3py57 B_a_fun_a_fun$)) (! (or (not (= (fun_app$e (fun_app$cc comp$g ?v0py317) ?v1py257) ?v2py119)) (= (fun_app$g (fun_app$bf comp$ (fun_app$cb (comp$p ?v3py57) ?v0py317)) ?v1py257) (fun_app$g (fun_app$bf comp$ ?v3py57) ?v2py119))) :pattern ((fun_app$g (fun_app$bf comp$ (fun_app$cb (comp$p ?v3py57) ?v0py317)) ?v1py257) (fun_app$g (fun_app$bf comp$ ?v3py57) ?v2py119)) )) :named A325))
(assert (! (forall ((?v0py318 A_a_fun_a_a_fun_fun$)(?v1py258 A_b_a_fun_fun_a_a_fun_fun$)(?v2py120 A_b_a_fun_fun_a_a_fun_fun$)(?v3py58 A_a_fun_a_a_fun_fun$)) (! (or (not (= (fun_app$bi (fun_app$bj comp$a ?v0py318) ?v1py258) ?v2py120)) (= (fun_app$bi (fun_app$bj comp$a (fun_app$cd (fun_app$ce comp$h ?v3py58) ?v0py318)) ?v1py258) (fun_app$bi (fun_app$bj comp$a ?v3py58) ?v2py120))) :pattern ((fun_app$bi (fun_app$bj comp$a (fun_app$cd (fun_app$ce comp$h ?v3py58) ?v0py318)) ?v1py258) (fun_app$bi (fun_app$bj comp$a ?v3py58) ?v2py120)) )) :named A326))
(assert (! (forall ((?v0py319 A_a_fun_a_b_a_fun_fun_fun$)(?v1py259 A_b_a_fun_fun_a_a_fun_fun$)(?v2py121 A_b_a_fun_fun_a_b_a_fun_fun_fun$)(?v3py59 A_b_a_fun_fun_a_a_fun_fun$)) (! (or (not (= (fun_app$cg (comp$r ?v0py319) ?v1py259) ?v2py121)) (= (fun_app$bi (fun_app$bj comp$a (fun_app$cf (comp$q ?v3py59) ?v0py319)) ?v1py259) (fun_app$bm (fun_app$bn comp$b ?v3py59) ?v2py121))) :pattern ((fun_app$bi (fun_app$bj comp$a (fun_app$cf (comp$q ?v3py59) ?v0py319)) ?v1py259) (fun_app$bm (fun_app$bn comp$b ?v3py59) ?v2py121)) )) :named A327))
(assert (! (forall ((?v0py320 A_b_a_fun_fun_a_a_fun_fun$)(?v1py260 A_b_a_fun_fun_a_b_a_fun_fun_fun$)(?v2py122 A_b_a_fun_fun_a_a_fun_fun$)(?v3py60 A_a_fun_a_a_fun_fun$)) (! (or (not (= (fun_app$bm (fun_app$bn comp$b ?v0py320) ?v1py260) ?v2py122)) (= (fun_app$bm (fun_app$bn comp$b (fun_app$bi (fun_app$bj comp$a ?v3py60) ?v0py320)) ?v1py260) (fun_app$bi (fun_app$bj comp$a ?v3py60) ?v2py122))) :pattern ((fun_app$bm (fun_app$bn comp$b (fun_app$bi (fun_app$bj comp$a ?v3py60) ?v0py320)) ?v1py260) (fun_app$bi (fun_app$bj comp$a ?v3py60) ?v2py122)) )) :named A328))
(assert (! (forall ((?v0py321 A_b_a_fun_fun_a_b_a_fun_fun_fun$)(?v1py261 A_b_a_fun_fun_a_b_a_fun_fun_fun$)(?v2py123 A_b_a_fun_fun_a_b_a_fun_fun_fun$)(?v3py61 A_b_a_fun_fun_a_a_fun_fun$)) (! (or (not (= (fun_app$ch (comp$s ?v0py321) ?v1py261) ?v2py123)) (= (fun_app$bm (fun_app$bn comp$b (fun_app$bm (fun_app$bn comp$b ?v3py61) ?v0py321)) ?v1py261) (fun_app$bm (fun_app$bn comp$b ?v3py61) ?v2py123))) :pattern ((fun_app$bm (fun_app$bn comp$b (fun_app$bm (fun_app$bn comp$b ?v3py61) ?v0py321)) ?v1py261) (fun_app$bm (fun_app$bn comp$b ?v3py61) ?v2py123)) )) :named A329))
(assert (! (forall ((?v0py322 A_b_a_fun_a_fun_fun_a_b_a_fun_a_fun_fun_fun$)(?v1py262 A_b_a_fun_a_fun_fun_a_b_a_fun_a_fun_fun_fun$)(?v2py124 A_b_a_fun_a_fun_fun_a_b_a_fun_a_fun_fun_fun$)(?v3py62 A_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun$)) (! (or (not (= (fun_app$ci (comp$t ?v0py322) ?v1py262) ?v2py124)) (= (fun_app$bk (fun_app$bl comp$c (fun_app$bk (fun_app$bl comp$c ?v3py62) ?v0py322)) ?v1py262) (fun_app$bk (fun_app$bl comp$c ?v3py62) ?v2py124))) :pattern ((fun_app$bk (fun_app$bl comp$c (fun_app$bk (fun_app$bl comp$c ?v3py62) ?v0py322)) ?v1py262) (fun_app$bk (fun_app$bl comp$c ?v3py62) ?v2py124)) )) :named A330))
(assert (! (forall ((?v0py323 A_b_a_fun_fun_a_a_fun_fun_a_b_a_fun_a_fun_fun_fun$)(?v1py263 A_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun$)(?v2py125 A_b_a_fun_a_fun_fun_a_b_a_fun_a_fun_fun_fun$)(?v3py63 A_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun$)) (! (or (not (= (fun_app$ck (comp$v ?v0py323) ?v1py263) ?v2py125)) (= (fun_app$bg (fun_app$bh comp$d (fun_app$cj (comp$u ?v3py63) ?v0py323)) ?v1py263) (fun_app$bk (fun_app$bl comp$c ?v3py63) ?v2py125))) :pattern ((fun_app$bg (fun_app$bh comp$d (fun_app$cj (comp$u ?v3py63) ?v0py323)) ?v1py263) (fun_app$bk (fun_app$bl comp$c ?v3py63) ?v2py125)) )) :named A331))
(assert (! (forall ((?v0py324 A_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun$)(?v1py264 A_b_a_fun_a_fun_fun_a_b_a_fun_a_fun_fun_fun$)(?v2py126 A_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun$)(?v3py64 A_b_a_fun_fun_a_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun$)) (! (or (not (= (fun_app$bk (fun_app$bl comp$c ?v0py324) ?v1py264) ?v2py126)) (= (fun_app$bk (fun_app$bl comp$c (fun_app$bg (fun_app$bh comp$d ?v3py64) ?v0py324)) ?v1py264) (fun_app$bg (fun_app$bh comp$d ?v3py64) ?v2py126))) :pattern ((fun_app$bk (fun_app$bl comp$c (fun_app$bg (fun_app$bh comp$d ?v3py64) ?v0py324)) ?v1py264) (fun_app$bg (fun_app$bh comp$d ?v3py64) ?v2py126)) )) :named A332))
(assert (! (forall ((?v0py325 A_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun$)(?v1py265 A_b_a_fun_a_fun_fun_a_b_a_fun_a_fun_fun_fun$)(?v2py127 A_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun$)(?v3py65 A_b_a_fun_a_fun_fun_a_b_a_fun_a_fun_fun_fun$)(?v4py15 A_b_a_fun_a_fun_fun$)) (! (or (not (= (fun_app$bk (fun_app$bl comp$c ?v0py325) ?v1py265) (fun_app$bk (fun_app$bl comp$c ?v2py127) ?v3py65))) (= (fun_app$a ?v0py325 (fun_app$c ?v1py265 ?v4py15)) (fun_app$a ?v2py127 (fun_app$c ?v3py65 ?v4py15)))) :pattern ((fun_app$a ?v0py325 (fun_app$c ?v1py265 ?v4py15)) (fun_app$a ?v2py127 (fun_app$c ?v3py65 ?v4py15))) )) :named A333))
(assert (! (forall ((?v0py326 A_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun$)(?v1py266 A_b_a_fun_a_fun_fun_a_b_a_fun_a_fun_fun_fun$)(?v2py128 A_b_a_fun_fun_a_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun$)(?v3py66 A_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun$)(?v4py16 A_b_a_fun_a_fun_fun$)) (! (or (not (= (fun_app$bk (fun_app$bl comp$c ?v0py326) ?v1py266) (fun_app$bg (fun_app$bh comp$d ?v2py128) ?v3py66))) (= (fun_app$a ?v0py326 (fun_app$c ?v1py266 ?v4py16)) (fun_app$bi ?v2py128 (fun_app$a ?v3py66 ?v4py16)))) :pattern ((fun_app$a ?v0py326 (fun_app$c ?v1py266 ?v4py16)) (fun_app$bi ?v2py128 (fun_app$a ?v3py66 ?v4py16))) )) :named A334))
(assert (! (forall ((?v0py327 A_b_a_fun_fun_a_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun$)(?v1py267 A_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun$)(?v2py129 A_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun$)(?v3py67 A_b_a_fun_a_fun_fun_a_b_a_fun_a_fun_fun_fun$)(?v4py17 A_b_a_fun_a_fun_fun$)) (! (or (not (= (fun_app$bg (fun_app$bh comp$d ?v0py327) ?v1py267) (fun_app$bk (fun_app$bl comp$c ?v2py129) ?v3py67))) (= (fun_app$bi ?v0py327 (fun_app$a ?v1py267 ?v4py17)) (fun_app$a ?v2py129 (fun_app$c ?v3py67 ?v4py17)))) :pattern ((fun_app$bi ?v0py327 (fun_app$a ?v1py267 ?v4py17)) (fun_app$a ?v2py129 (fun_app$c ?v3py67 ?v4py17))) )) :named A335))
(assert (! (forall ((?v0py328 A_b_a_fun_fun_a_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun$)(?v1py268 A_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun$)(?v2py130 A_b_a_fun_fun_a_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun$)(?v3py68 A_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun$)(?v4py18 A_b_a_fun_a_fun_fun$)) (! (or (not (= (fun_app$bg (fun_app$bh comp$d ?v0py328) ?v1py268) (fun_app$bg (fun_app$bh comp$d ?v2py130) ?v3py68))) (= (fun_app$bi ?v0py328 (fun_app$a ?v1py268 ?v4py18)) (fun_app$bi ?v2py130 (fun_app$a ?v3py68 ?v4py18)))) :pattern ((fun_app$bi ?v0py328 (fun_app$a ?v1py268 ?v4py18)) (fun_app$bi ?v2py130 (fun_app$a ?v3py68 ?v4py18))) )) :named A336))
(assert (! (forall ((?v0py329 A_b_a_fun_fun_a_a_fun_fun$)(?v1py269 A_b_a_fun_fun_a_b_a_fun_fun_fun$)(?v2py131 A_b_a_fun_fun_a_a_fun_fun$)(?v3py69 A_b_a_fun_fun_a_b_a_fun_fun_fun$)(?v4py19 A_b_a_fun_fun$)) (! (or (not (= (fun_app$bm (fun_app$bn comp$b ?v0py329) ?v1py269) (fun_app$bm (fun_app$bn comp$b ?v2py131) ?v3py69))) (= (fun_app$g ?v0py329 (fun_app$e ?v1py269 ?v4py19)) (fun_app$g ?v2py131 (fun_app$e ?v3py69 ?v4py19)))) :pattern ((fun_app$g ?v0py329 (fun_app$e ?v1py269 ?v4py19)) (fun_app$g ?v2py131 (fun_app$e ?v3py69 ?v4py19))) )) :named A337))
(assert (! (forall ((?v0py330 A_b_a_fun_fun_a_a_fun_fun$)(?v1py270 A_b_a_fun_fun_a_b_a_fun_fun_fun$)(?v2py132 A_a_fun_a_a_fun_fun$)(?v3py70 A_b_a_fun_fun_a_a_fun_fun$)(?v4py20 A_b_a_fun_fun$)) (! (or (not (= (fun_app$bm (fun_app$bn comp$b ?v0py330) ?v1py270) (fun_app$bi (fun_app$bj comp$a ?v2py132) ?v3py70))) (= (fun_app$g ?v0py330 (fun_app$e ?v1py270 ?v4py20)) (fun_app$i ?v2py132 (fun_app$g ?v3py70 ?v4py20)))) :pattern ((fun_app$g ?v0py330 (fun_app$e ?v1py270 ?v4py20)) (fun_app$i ?v2py132 (fun_app$g ?v3py70 ?v4py20))) )) :named A338))
(assert (! (forall ((?v0py331 A_a_fun_a_a_fun_fun$)(?v1py271 A_b_a_fun_fun_a_a_fun_fun$)(?v2py133 A_b_a_fun_fun_a_a_fun_fun$)(?v3py71 A_b_a_fun_fun_a_b_a_fun_fun_fun$)(?v4py21 A_b_a_fun_fun$)) (! (or (not (= (fun_app$bi (fun_app$bj comp$a ?v0py331) ?v1py271) (fun_app$bm (fun_app$bn comp$b ?v2py133) ?v3py71))) (= (fun_app$i ?v0py331 (fun_app$g ?v1py271 ?v4py21)) (fun_app$g ?v2py133 (fun_app$e ?v3py71 ?v4py21)))) :pattern ((fun_app$i ?v0py331 (fun_app$g ?v1py271 ?v4py21)) (fun_app$g ?v2py133 (fun_app$e ?v3py71 ?v4py21))) )) :named A339))
(assert (! (forall ((?v0py332 A_a_fun_a_a_fun_fun$)(?v1py272 A_b_a_fun_fun_a_a_fun_fun$)(?v2py134 A_a_fun_a_a_fun_fun$)(?v3py72 A_b_a_fun_fun_a_a_fun_fun$)(?v4py22 A_b_a_fun_fun$)) (! (or (not (= (fun_app$bi (fun_app$bj comp$a ?v0py332) ?v1py272) (fun_app$bi (fun_app$bj comp$a ?v2py134) ?v3py72))) (= (fun_app$i ?v0py332 (fun_app$g ?v1py272 ?v4py22)) (fun_app$i ?v2py134 (fun_app$g ?v3py72 ?v4py22)))) :pattern ((fun_app$i ?v0py332 (fun_app$g ?v1py272 ?v4py22)) (fun_app$i ?v2py134 (fun_app$g ?v3py72 ?v4py22))) )) :named A340))
(assert (! (forall ((?v0py333 B_a_fun_a_fun$)(?v1py273 A_b_a_fun_fun$)(?v2py135 B_a_fun_a_fun$)(?v3py73 A_b_a_fun_fun$)(?v4py23 A$)) (! (or (not (= (fun_app$g (fun_app$bf comp$ ?v0py333) ?v1py273) (fun_app$g (fun_app$bf comp$ ?v2py135) ?v3py73))) (= (fun_app$n ?v0py333 (fun_app$k ?v1py273 ?v4py23)) (fun_app$n ?v2py135 (fun_app$k ?v3py73 ?v4py23)))) :pattern ((fun_app$n ?v0py333 (fun_app$k ?v1py273 ?v4py23)) (fun_app$n ?v2py135 (fun_app$k ?v3py73 ?v4py23))) )) :named A341))
(assert (! (forall ((?v0py334 A_a_fun$)(?v1py274 B_a_fun_a_fun$)(?v2py136 B_a_fun_a_fun$)(?v3py74 B_a_fun_b_a_fun_fun$)(?v4py24 A_b_a_fun_fun$)(?v5py15 A_b_a_fun_fun$)) (! (or (= (fun_app$i (fun_app$by comp$e ?v0py334) (fun_app$g (fun_app$bf comp$ ?v1py274) ?v4py24)) (fun_app$g (fun_app$bf comp$ ?v2py136) ?v5py15)) (not (= (fun_app$bz (comp$o ?v0py334) ?v1py274) (fun_app$cb (comp$p ?v2py136) ?v3py74))) (not (= (fun_app$e (fun_app$cc comp$g ?v3py74) ?v4py24) ?v5py15))) :pattern ((fun_app$i (fun_app$by comp$e ?v0py334) (fun_app$g (fun_app$bf comp$ ?v1py274) ?v4py24)) (fun_app$cb (comp$p ?v2py136) ?v3py74) (fun_app$g (fun_app$bf comp$ ?v2py136) ?v5py15)) )) :named A342))
(assert (! (forall ((?v0py335 B_a_fun_a_fun$)(?v1py275 B_a_fun_b_a_fun_fun$)(?v2py137 A_a_fun$)(?v3py75 B_a_fun_a_fun$)(?v4py25 A_b_a_fun_fun$)(?v5py16 A_a_fun$)) (! (or (= (fun_app$g (fun_app$bf comp$ ?v0py335) (fun_app$e (fun_app$cc comp$g ?v1py275) ?v4py25)) (fun_app$i (fun_app$by comp$e ?v2py137) ?v5py16)) (not (= (fun_app$cb (comp$p ?v0py335) ?v1py275) (fun_app$bz (comp$o ?v2py137) ?v3py75))) (not (= (fun_app$g (fun_app$bf comp$ ?v3py75) ?v4py25) ?v5py16))) :pattern ((fun_app$g (fun_app$bf comp$ ?v0py335) (fun_app$e (fun_app$cc comp$g ?v1py275) ?v4py25)) (fun_app$bz (comp$o ?v2py137) ?v3py75) (fun_app$i (fun_app$by comp$e ?v2py137) ?v5py16)) )) :named A343))
(assert (! (forall ((?v0py336 B_a_fun_a_fun$)(?v1py276 A_b_a_fun_fun$)(?v2py138 B_a_fun_a_fun$)(?v3py76 A_b_a_fun_fun$)(?v4py26 A_a_fun$)(?v5py17 A_b_a_fun_fun$)) (! (or (not (= (fun_app$g (fun_app$bf comp$ ?v0py336) ?v1py276) (fun_app$g (fun_app$bf comp$ ?v2py138) ?v3py76))) (not (= (fun_app$au (fun_app$ca comp$f ?v3py76) ?v4py26) ?v5py17)) (= (fun_app$g (fun_app$bf comp$ ?v0py336) (fun_app$au (fun_app$ca comp$f ?v1py276) ?v4py26)) (fun_app$g (fun_app$bf comp$ ?v2py138) ?v5py17))) :pattern ((fun_app$g (fun_app$bf comp$ ?v0py336) (fun_app$au (fun_app$ca comp$f ?v1py276) ?v4py26)) (fun_app$g (fun_app$bf comp$ ?v2py138) ?v3py76) (fun_app$g (fun_app$bf comp$ ?v2py138) ?v5py17)) )) :named A344))
(assert (! (forall ((?v0py337 A_a_fun_a_a_fun_fun$)(?v1py277 A_a_fun_a_a_fun_fun$)(?v2py139 A_a_fun_a_a_fun_fun$)(?v3py77 A_a_fun_a_a_fun_fun$)(?v4py27 A_b_a_fun_fun_a_a_fun_fun$)(?v5py18 A_b_a_fun_fun_a_a_fun_fun$)) (! (or (not (= (fun_app$cd (fun_app$ce comp$h ?v0py337) ?v1py277) (fun_app$cd (fun_app$ce comp$h ?v2py139) ?v3py77))) (not (= (fun_app$bi (fun_app$bj comp$a ?v3py77) ?v4py27) ?v5py18)) (= (fun_app$bi (fun_app$bj comp$a ?v0py337) (fun_app$bi (fun_app$bj comp$a ?v1py277) ?v4py27)) (fun_app$bi (fun_app$bj comp$a ?v2py139) ?v5py18))) :pattern ((fun_app$bi (fun_app$bj comp$a ?v0py337) (fun_app$bi (fun_app$bj comp$a ?v1py277) ?v4py27)) (fun_app$cd (fun_app$ce comp$h ?v2py139) ?v3py77) (fun_app$bi (fun_app$bj comp$a ?v2py139) ?v5py18)) )) :named A345))
(assert (! (forall ((?v0py338 A_a_fun_a_a_fun_fun$)(?v1py278 A_a_fun_a_a_fun_fun$)(?v2py140 A_b_a_fun_fun_a_a_fun_fun$)(?v3py78 A_a_fun_a_b_a_fun_fun_fun$)(?v4py28 A_b_a_fun_fun_a_a_fun_fun$)(?v5py19 A_b_a_fun_fun_a_b_a_fun_fun_fun$)) (! (or (not (= (fun_app$cd (fun_app$ce comp$h ?v0py338) ?v1py278) (fun_app$cf (comp$q ?v2py140) ?v3py78))) (not (= (fun_app$cg (comp$r ?v3py78) ?v4py28) ?v5py19)) (= (fun_app$bi (fun_app$bj comp$a ?v0py338) (fun_app$bi (fun_app$bj comp$a ?v1py278) ?v4py28)) (fun_app$bm (fun_app$bn comp$b ?v2py140) ?v5py19))) :pattern ((fun_app$bi (fun_app$bj comp$a ?v0py338) (fun_app$bi (fun_app$bj comp$a ?v1py278) ?v4py28)) (fun_app$cf (comp$q ?v2py140) ?v3py78) (fun_app$bm (fun_app$bn comp$b ?v2py140) ?v5py19)) )) :named A346))
(assert (! (forall ((?v0py339 A_b_a_fun_fun_a_a_fun_fun$)(?v1py279 A_a_fun_a_b_a_fun_fun_fun$)(?v2py141 A_a_fun_a_a_fun_fun$)(?v3py79 A_a_fun_a_a_fun_fun$)(?v4py29 A_b_a_fun_fun_a_a_fun_fun$)(?v5py20 A_b_a_fun_fun_a_a_fun_fun$)) (! (or (not (= (fun_app$cf (comp$q ?v0py339) ?v1py279) (fun_app$cd (fun_app$ce comp$h ?v2py141) ?v3py79))) (not (= (fun_app$bi (fun_app$bj comp$a ?v3py79) ?v4py29) ?v5py20)) (= (fun_app$bm (fun_app$bn comp$b ?v0py339) (fun_app$cg (comp$r ?v1py279) ?v4py29)) (fun_app$bi (fun_app$bj comp$a ?v2py141) ?v5py20))) :pattern ((fun_app$bm (fun_app$bn comp$b ?v0py339) (fun_app$cg (comp$r ?v1py279) ?v4py29)) (fun_app$cd (fun_app$ce comp$h ?v2py141) ?v3py79) (fun_app$bi (fun_app$bj comp$a ?v2py141) ?v5py20)) )) :named A347))
(assert (! (forall ((?v0py340 A_a_fun_a_a_fun_fun$)(?v1py280 A_b_a_fun_fun_a_a_fun_fun$)(?v2py142 A_a_fun_a_a_fun_fun$)(?v3py80 A_b_a_fun_fun_a_a_fun_fun$)(?v4py30 A_b_a_fun_fun_a_b_a_fun_fun_fun$)(?v5py21 A_b_a_fun_fun_a_a_fun_fun$)) (! (or (not (= (fun_app$bi (fun_app$bj comp$a ?v0py340) ?v1py280) (fun_app$bi (fun_app$bj comp$a ?v2py142) ?v3py80))) (not (= (fun_app$bm (fun_app$bn comp$b ?v3py80) ?v4py30) ?v5py21)) (= (fun_app$bi (fun_app$bj comp$a ?v0py340) (fun_app$bm (fun_app$bn comp$b ?v1py280) ?v4py30)) (fun_app$bi (fun_app$bj comp$a ?v2py142) ?v5py21))) :pattern ((fun_app$bi (fun_app$bj comp$a ?v0py340) (fun_app$bm (fun_app$bn comp$b ?v1py280) ?v4py30)) (fun_app$bi (fun_app$bj comp$a ?v2py142) ?v3py80) (fun_app$bi (fun_app$bj comp$a ?v2py142) ?v5py21)) )) :named A348))
(assert (! (forall ((?v0py341 A_b_a_fun_fun_a_a_fun_fun$)(?v1py281 A_b_a_fun_fun_a_b_a_fun_fun_fun$)(?v2py143 A_a_fun_a_a_fun_fun$)(?v3py81 A_b_a_fun_fun_a_a_fun_fun$)(?v4py31 A_b_a_fun_fun_a_b_a_fun_fun_fun$)(?v5py22 A_b_a_fun_fun_a_a_fun_fun$)) (! (or (= (fun_app$bm (fun_app$bn comp$b ?v0py341) (fun_app$ch (comp$s ?v1py281) ?v4py31)) (fun_app$bi (fun_app$bj comp$a ?v2py143) ?v5py22)) (not (= (fun_app$bm (fun_app$bn comp$b ?v0py341) ?v1py281) (fun_app$bi (fun_app$bj comp$a ?v2py143) ?v3py81))) (not (= (fun_app$bm (fun_app$bn comp$b ?v3py81) ?v4py31) ?v5py22))) :pattern ((fun_app$bm (fun_app$bn comp$b ?v0py341) (fun_app$ch (comp$s ?v1py281) ?v4py31)) (fun_app$bi (fun_app$bj comp$a ?v2py143) ?v5py22) (fun_app$bi (fun_app$bj comp$a ?v2py143) ?v3py81)) )) :named A349))
(assert (! (forall ((?v0py342 A_a_fun_a_a_fun_fun$)(?v1py282 A_b_a_fun_fun_a_a_fun_fun$)(?v2py144 A_b_a_fun_fun_a_a_fun_fun$)(?v3py82 A_b_a_fun_fun_a_b_a_fun_fun_fun$)(?v4py32 A_b_a_fun_fun_a_b_a_fun_fun_fun$)(?v5py23 A_b_a_fun_fun_a_b_a_fun_fun_fun$)) (! (or (not (= (fun_app$bi (fun_app$bj comp$a ?v0py342) ?v1py282) (fun_app$bm (fun_app$bn comp$b ?v2py144) ?v3py82))) (not (= (fun_app$ch (comp$s ?v3py82) ?v4py32) ?v5py23)) (= (fun_app$bi (fun_app$bj comp$a ?v0py342) (fun_app$bm (fun_app$bn comp$b ?v1py282) ?v4py32)) (fun_app$bm (fun_app$bn comp$b ?v2py144) ?v5py23))) :pattern ((fun_app$bi (fun_app$bj comp$a ?v0py342) (fun_app$bm (fun_app$bn comp$b ?v1py282) ?v4py32)) (fun_app$ch (comp$s ?v3py82) ?v4py32) (fun_app$bm (fun_app$bn comp$b ?v2py144) ?v3py82) (fun_app$bm (fun_app$bn comp$b ?v2py144) ?v5py23)) )) :named A350))
(assert (! (forall ((?v0py343 A_b_a_fun_fun_a_a_fun_fun$)(?v1py283 A_b_a_fun_fun_a_b_a_fun_fun_fun$)(?v2py145 A_b_a_fun_fun_a_a_fun_fun$)(?v3py83 A_b_a_fun_fun_a_b_a_fun_fun_fun$)(?v4py33 A_b_a_fun_fun_a_b_a_fun_fun_fun$)(?v5py24 A_b_a_fun_fun_a_b_a_fun_fun_fun$)) (! (or (not (= (fun_app$bm (fun_app$bn comp$b ?v0py343) ?v1py283) (fun_app$bm (fun_app$bn comp$b ?v2py145) ?v3py83))) (not (= (fun_app$ch (comp$s ?v3py83) ?v4py33) ?v5py24)) (= (fun_app$bm (fun_app$bn comp$b ?v0py343) (fun_app$ch (comp$s ?v1py283) ?v4py33)) (fun_app$bm (fun_app$bn comp$b ?v2py145) ?v5py24))) :pattern ((fun_app$bm (fun_app$bn comp$b ?v0py343) (fun_app$ch (comp$s ?v1py283) ?v4py33)) (fun_app$ch (comp$s ?v3py83) ?v4py33) (fun_app$bm (fun_app$bn comp$b ?v2py145) ?v3py83) (fun_app$bm (fun_app$bn comp$b ?v2py145) ?v5py24)) )) :named A351))
(assert (! (forall ((?v0py344 A_b_a_fun_fun$)(?v1py284 A_a_fun$)(?v2py146 B_a_fun_b_a_fun_fun$)(?v3py84 A_b_a_fun_fun$)(?v4py34 B_a_fun_a_fun$)(?v5py25 B_a_fun_a_fun$)) (! (or (not (= (fun_app$au (fun_app$ca comp$f ?v0py344) ?v1py284) (fun_app$e (fun_app$cc comp$g ?v2py146) ?v3py84))) (not (= (fun_app$cb (comp$p ?v4py34) ?v2py146) ?v5py25)) (= (fun_app$i (fun_app$by comp$e (fun_app$g (fun_app$bf comp$ ?v4py34) ?v0py344)) ?v1py284) (fun_app$g (fun_app$bf comp$ ?v5py25) ?v3py84))) :pattern ((fun_app$i (fun_app$by comp$e (fun_app$g (fun_app$bf comp$ ?v4py34) ?v0py344)) ?v1py284) (fun_app$cb (comp$p ?v4py34) ?v2py146) (fun_app$e (fun_app$cc comp$g ?v2py146) ?v3py84) (fun_app$g (fun_app$bf comp$ ?v5py25) ?v3py84)) )) :named A352))
(assert (! (forall ((?v0py345 B_a_fun_b_a_fun_fun$)(?v1py285 A_b_a_fun_fun$)(?v2py147 A_b_a_fun_fun$)(?v3py85 A_a_fun$)(?v4py35 B_a_fun_a_fun$)(?v5py26 A_a_fun$)) (! (or (= (fun_app$g (fun_app$bf comp$ (fun_app$cb (comp$p ?v4py35) ?v0py345)) ?v1py285) (fun_app$i (fun_app$by comp$e ?v5py26) ?v3py85)) (not (= (fun_app$e (fun_app$cc comp$g ?v0py345) ?v1py285) (fun_app$au (fun_app$ca comp$f ?v2py147) ?v3py85))) (not (= (fun_app$g (fun_app$bf comp$ ?v4py35) ?v2py147) ?v5py26))) :pattern ((fun_app$g (fun_app$bf comp$ (fun_app$cb (comp$p ?v4py35) ?v0py345)) ?v1py285) (fun_app$i (fun_app$by comp$e ?v5py26) ?v3py85) (fun_app$au (fun_app$ca comp$f ?v2py147) ?v3py85)) )) :named A353))
(assert (! (forall ((?v0py346 B_a_fun_a_fun$)(?v1py286 A_b_a_fun_fun$)(?v2py148 B_a_fun_a_fun$)(?v3py86 A_b_a_fun_fun$)(?v4py36 A_a_fun$)(?v5py27 B_a_fun_a_fun$)) (! (or (not (= (fun_app$g (fun_app$bf comp$ ?v0py346) ?v1py286) (fun_app$g (fun_app$bf comp$ ?v2py148) ?v3py86))) (not (= (fun_app$bz (comp$o ?v4py36) ?v2py148) ?v5py27)) (= (fun_app$g (fun_app$bf comp$ (fun_app$bz (comp$o ?v4py36) ?v0py346)) ?v1py286) (fun_app$g (fun_app$bf comp$ ?v5py27) ?v3py86))) :pattern ((fun_app$g (fun_app$bf comp$ (fun_app$bz (comp$o ?v4py36) ?v0py346)) ?v1py286) (fun_app$bz (comp$o ?v4py36) ?v2py148) (fun_app$g (fun_app$bf comp$ ?v2py148) ?v3py86) (fun_app$g (fun_app$bf comp$ ?v5py27) ?v3py86)) )) :named A354))
(assert (! (forall ((?v0py347 A_a_fun_a_a_fun_fun$)(?v1py287 A_b_a_fun_fun_a_a_fun_fun$)(?v2py149 A_a_fun_a_a_fun_fun$)(?v3py87 A_b_a_fun_fun_a_a_fun_fun$)(?v4py37 A_a_fun_a_a_fun_fun$)(?v5py28 A_a_fun_a_a_fun_fun$)) (! (or (= (fun_app$bi (fun_app$bj comp$a (fun_app$cd (fun_app$ce comp$h ?v4py37) ?v0py347)) ?v1py287) (fun_app$bi (fun_app$bj comp$a ?v5py28) ?v3py87)) (not (= (fun_app$bi (fun_app$bj comp$a ?v0py347) ?v1py287) (fun_app$bi (fun_app$bj comp$a ?v2py149) ?v3py87))) (not (= (fun_app$cd (fun_app$ce comp$h ?v4py37) ?v2py149) ?v5py28))) :pattern ((fun_app$bi (fun_app$bj comp$a (fun_app$cd (fun_app$ce comp$h ?v4py37) ?v0py347)) ?v1py287) (fun_app$bi (fun_app$bj comp$a ?v5py28) ?v3py87) (fun_app$bi (fun_app$bj comp$a ?v2py149) ?v3py87)) )) :named A355))
(assert (! (forall ((?v0py348 A_b_a_fun_fun_a_a_fun_fun$)(?v1py288 A_b_a_fun_fun_a_b_a_fun_fun_fun$)(?v2py150 A_a_fun_a_a_fun_fun$)(?v3py88 A_b_a_fun_fun_a_a_fun_fun$)(?v4py38 A_a_fun_a_a_fun_fun$)(?v5py29 A_a_fun_a_a_fun_fun$)) (! (or (= (fun_app$bm (fun_app$bn comp$b (fun_app$bi (fun_app$bj comp$a ?v4py38) ?v0py348)) ?v1py288) (fun_app$bi (fun_app$bj comp$a ?v5py29) ?v3py88)) (not (= (fun_app$bm (fun_app$bn comp$b ?v0py348) ?v1py288) (fun_app$bi (fun_app$bj comp$a ?v2py150) ?v3py88))) (not (= (fun_app$cd (fun_app$ce comp$h ?v4py38) ?v2py150) ?v5py29))) :pattern ((fun_app$bm (fun_app$bn comp$b (fun_app$bi (fun_app$bj comp$a ?v4py38) ?v0py348)) ?v1py288) (fun_app$bi (fun_app$bj comp$a ?v5py29) ?v3py88) (fun_app$bi (fun_app$bj comp$a ?v2py150) ?v3py88)) )) :named A356))
(assert (! (forall ((?v0py349 A_a_fun_a_a_fun_fun$)(?v1py289 A_b_a_fun_fun_a_a_fun_fun$)(?v2py151 A_b_a_fun_fun_a_a_fun_fun$)(?v3py89 A_b_a_fun_fun_a_b_a_fun_fun_fun$)(?v4py39 A_a_fun_a_a_fun_fun$)(?v5py30 A_b_a_fun_fun_a_a_fun_fun$)) (! (or (= (fun_app$bi (fun_app$bj comp$a (fun_app$cd (fun_app$ce comp$h ?v4py39) ?v0py349)) ?v1py289) (fun_app$bm (fun_app$bn comp$b ?v5py30) ?v3py89)) (not (= (fun_app$bi (fun_app$bj comp$a ?v0py349) ?v1py289) (fun_app$bm (fun_app$bn comp$b ?v2py151) ?v3py89))) (not (= (fun_app$bi (fun_app$bj comp$a ?v4py39) ?v2py151) ?v5py30))) :pattern ((fun_app$bi (fun_app$bj comp$a (fun_app$cd (fun_app$ce comp$h ?v4py39) ?v0py349)) ?v1py289) (fun_app$bm (fun_app$bn comp$b ?v5py30) ?v3py89) (fun_app$bi (fun_app$bj comp$a ?v4py39) ?v2py151)) )) :named A357))
(assert (! (forall ((?v0py350 A_b_a_fun_fun_a_b_a_fun_fun_fun$)(?v1py290 A_b_a_fun_fun_a_b_a_fun_fun_fun$)(?v2py152 A_a_fun_a_b_a_fun_fun_fun$)(?v3py90 A_b_a_fun_fun_a_a_fun_fun$)(?v4py40 A_b_a_fun_fun_a_a_fun_fun$)(?v5py31 A_a_fun_a_a_fun_fun$)) (! (or (= (fun_app$bm (fun_app$bn comp$b (fun_app$bm (fun_app$bn comp$b ?v4py40) ?v0py350)) ?v1py290) (fun_app$bi (fun_app$bj comp$a ?v5py31) ?v3py90)) (not (= (fun_app$ch (comp$s ?v0py350) ?v1py290) (fun_app$cg (comp$r ?v2py152) ?v3py90))) (not (= (fun_app$cf (comp$q ?v4py40) ?v2py152) ?v5py31))) :pattern ((fun_app$bm (fun_app$bn comp$b (fun_app$bm (fun_app$bn comp$b ?v4py40) ?v0py350)) ?v1py290) (fun_app$cg (comp$r ?v2py152) ?v3py90) (fun_app$bi (fun_app$bj comp$a ?v5py31) ?v3py90)) )) :named A358))
(assert (! (forall ((?v0py351 A_a_fun_a_b_a_fun_fun_fun$)(?v1py291 A_b_a_fun_fun_a_a_fun_fun$)(?v2py153 A_b_a_fun_fun_a_b_a_fun_fun_fun$)(?v3py91 A_b_a_fun_fun_a_b_a_fun_fun_fun$)(?v4py41 A_b_a_fun_fun_a_a_fun_fun$)(?v5py32 A_b_a_fun_fun_a_a_fun_fun$)) (! (or (= (fun_app$bi (fun_app$bj comp$a (fun_app$cf (comp$q ?v4py41) ?v0py351)) ?v1py291) (fun_app$bm (fun_app$bn comp$b ?v5py32) ?v3py91)) (not (= (fun_app$cg (comp$r ?v0py351) ?v1py291) (fun_app$ch (comp$s ?v2py153) ?v3py91))) (not (= (fun_app$bm (fun_app$bn comp$b ?v4py41) ?v2py153) ?v5py32))) :pattern ((fun_app$bi (fun_app$bj comp$a (fun_app$cf (comp$q ?v4py41) ?v0py351)) ?v1py291) (fun_app$ch (comp$s ?v2py153) ?v3py91) (fun_app$bm (fun_app$bn comp$b ?v5py32) ?v3py91)) )) :named A359))
(assert (! (forall ((?v0py352 A_b_a_fun_fun_a_a_fun_fun$)(?v1py292 A_b_a_fun_fun_a_b_a_fun_fun_fun$)(?v2py154 A_b_a_fun_fun_a_a_fun_fun$)(?v3py92 A_b_a_fun_fun_a_b_a_fun_fun_fun$)(?v4py42 A_a_fun_a_a_fun_fun$)(?v5py33 A_b_a_fun_fun_a_a_fun_fun$)) (! (or (= (fun_app$bm (fun_app$bn comp$b (fun_app$bi (fun_app$bj comp$a ?v4py42) ?v0py352)) ?v1py292) (fun_app$bm (fun_app$bn comp$b ?v5py33) ?v3py92)) (not (= (fun_app$bm (fun_app$bn comp$b ?v0py352) ?v1py292) (fun_app$bm (fun_app$bn comp$b ?v2py154) ?v3py92))) (not (= (fun_app$bi (fun_app$bj comp$a ?v4py42) ?v2py154) ?v5py33))) :pattern ((fun_app$bm (fun_app$bn comp$b (fun_app$bi (fun_app$bj comp$a ?v4py42) ?v0py352)) ?v1py292) (fun_app$bm (fun_app$bn comp$b ?v5py33) ?v3py92) (fun_app$bm (fun_app$bn comp$b ?v2py154) ?v3py92)) )) :named A360))
(assert (! (forall ((?v0py353 A_b_a_fun_fun_a_b_a_fun_fun_fun$)(?v1py293 A_b_a_fun_fun_a_b_a_fun_fun_fun$)(?v2py155 A_b_a_fun_fun_a_b_a_fun_fun_fun$)(?v3py93 A_b_a_fun_fun_a_b_a_fun_fun_fun$)(?v4py43 A_b_a_fun_fun_a_a_fun_fun$)(?v5py34 A_b_a_fun_fun_a_a_fun_fun$)) (! (or (= (fun_app$bm (fun_app$bn comp$b (fun_app$bm (fun_app$bn comp$b ?v4py43) ?v0py353)) ?v1py293) (fun_app$bm (fun_app$bn comp$b ?v5py34) ?v3py93)) (not (= (fun_app$ch (comp$s ?v0py353) ?v1py293) (fun_app$ch (comp$s ?v2py155) ?v3py93))) (not (= (fun_app$bm (fun_app$bn comp$b ?v4py43) ?v2py155) ?v5py34))) :pattern ((fun_app$bm (fun_app$bn comp$b (fun_app$bm (fun_app$bn comp$b ?v4py43) ?v0py353)) ?v1py293) (fun_app$ch (comp$s ?v2py155) ?v3py93) (fun_app$bm (fun_app$bn comp$b ?v5py34) ?v3py93)) )) :named A361))
(assert (! (forall ((?v0py354 A_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun$)(?v1py294 A_b_a_fun_a_fun_fun_a_b_a_fun_a_fun_fun_fun$)(?v2py156 A_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun$)(?v3py94 A_b_a_fun_a_fun_fun_a_b_a_fun_a_fun_fun_fun$)) (! (or (forall ((?v4py44 A_b_a_fun_a_fun_fun$)) (! (= (fun_app$a ?v0py354 (fun_app$c ?v1py294 ?v4py44)) (fun_app$a ?v2py156 (fun_app$c ?v3py94 ?v4py44))) :pattern ((fun_app$c ?v1py294 ?v4py44)) :pattern ((fun_app$c ?v3py94 ?v4py44)) )) (not (= (fun_app$bk (fun_app$bl comp$c ?v0py354) ?v1py294) (fun_app$bk (fun_app$bl comp$c ?v2py156) ?v3py94)))) :pattern ((fun_app$bk (fun_app$bl comp$c ?v0py354) ?v1py294) (fun_app$bk (fun_app$bl comp$c ?v2py156) ?v3py94)) )) :named A362))
(assert (! (forall ((?v0py355 A_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun$)(?v1py295 A_b_a_fun_a_fun_fun_a_b_a_fun_a_fun_fun_fun$)(?v2py157 A_b_a_fun_fun_a_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun$)(?v3py95 A_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun$)) (! (or (forall ((?v4py45 A_b_a_fun_a_fun_fun$)) (! (= (fun_app$a ?v0py355 (fun_app$c ?v1py295 ?v4py45)) (fun_app$bi ?v2py157 (fun_app$a ?v3py95 ?v4py45))) :pattern ((fun_app$c ?v1py295 ?v4py45)) :pattern ((fun_app$a ?v3py95 ?v4py45)) )) (not (= (fun_app$bk (fun_app$bl comp$c ?v0py355) ?v1py295) (fun_app$bg (fun_app$bh comp$d ?v2py157) ?v3py95)))) :pattern ((fun_app$bk (fun_app$bl comp$c ?v0py355) ?v1py295) (fun_app$bg (fun_app$bh comp$d ?v2py157) ?v3py95)) )) :named A363))
(assert (! (forall ((?v0py356 A_b_a_fun_fun_a_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun$)(?v1py296 A_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun$)(?v2py158 A_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun$)(?v3py96 A_b_a_fun_a_fun_fun_a_b_a_fun_a_fun_fun_fun$)) (! (or (forall ((?v4py46 A_b_a_fun_a_fun_fun$)) (! (= (fun_app$bi ?v0py356 (fun_app$a ?v1py296 ?v4py46)) (fun_app$a ?v2py158 (fun_app$c ?v3py96 ?v4py46))) :pattern ((fun_app$a ?v1py296 ?v4py46)) :pattern ((fun_app$c ?v3py96 ?v4py46)) )) (not (= (fun_app$bg (fun_app$bh comp$d ?v0py356) ?v1py296) (fun_app$bk (fun_app$bl comp$c ?v2py158) ?v3py96)))) :pattern ((fun_app$bg (fun_app$bh comp$d ?v0py356) ?v1py296) (fun_app$bk (fun_app$bl comp$c ?v2py158) ?v3py96)) )) :named A364))
(assert (! (forall ((?v0py357 A_b_a_fun_fun_a_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun$)(?v1py297 A_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun$)(?v2py159 A_b_a_fun_fun_a_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun$)(?v3py97 A_b_a_fun_a_fun_fun_a_b_a_fun_fun_a_a_fun_fun_fun$)) (! (or (forall ((?v4py47 A_b_a_fun_a_fun_fun$)) (! (= (fun_app$bi ?v0py357 (fun_app$a ?v1py297 ?v4py47)) (fun_app$bi ?v2py159 (fun_app$a ?v3py97 ?v4py47))) :pattern ((fun_app$a ?v1py297 ?v4py47)) :pattern ((fun_app$a ?v3py97 ?v4py47)) )) (not (= (fun_app$bg (fun_app$bh comp$d ?v0py357) ?v1py297) (fun_app$bg (fun_app$bh comp$d ?v2py159) ?v3py97)))) :pattern ((fun_app$bg (fun_app$bh comp$d ?v0py357) ?v1py297) (fun_app$bg (fun_app$bh comp$d ?v2py159) ?v3py97)) )) :named A365))
(assert (! (forall ((?v0py358 A_b_a_fun_fun_a_a_fun_fun$)(?v1py298 A_b_a_fun_fun_a_b_a_fun_fun_fun$)(?v2py160 A_b_a_fun_fun_a_a_fun_fun$)(?v3py98 A_b_a_fun_fun_a_b_a_fun_fun_fun$)) (! (or (forall ((?v4py48 A_b_a_fun_fun$)) (! (= (fun_app$g ?v0py358 (fun_app$e ?v1py298 ?v4py48)) (fun_app$g ?v2py160 (fun_app$e ?v3py98 ?v4py48))) :pattern ((fun_app$e ?v1py298 ?v4py48)) :pattern ((fun_app$e ?v3py98 ?v4py48)) )) (not (= (fun_app$bm (fun_app$bn comp$b ?v0py358) ?v1py298) (fun_app$bm (fun_app$bn comp$b ?v2py160) ?v3py98)))) :pattern ((fun_app$bm (fun_app$bn comp$b ?v0py358) ?v1py298) (fun_app$bm (fun_app$bn comp$b ?v2py160) ?v3py98)) )) :named A366))
(assert (! (forall ((?v0py359 A_b_a_fun_fun_a_a_fun_fun$)(?v1py299 A_b_a_fun_fun_a_b_a_fun_fun_fun$)(?v2py161 A_a_fun_a_a_fun_fun$)(?v3py99 A_b_a_fun_fun_a_a_fun_fun$)) (! (or (forall ((?v4py49 A_b_a_fun_fun$)) (! (= (fun_app$g ?v0py359 (fun_app$e ?v1py299 ?v4py49)) (fun_app$i ?v2py161 (fun_app$g ?v3py99 ?v4py49))) :pattern ((fun_app$e ?v1py299 ?v4py49)) :pattern ((fun_app$g ?v3py99 ?v4py49)) )) (not (= (fun_app$bm (fun_app$bn comp$b ?v0py359) ?v1py299) (fun_app$bi (fun_app$bj comp$a ?v2py161) ?v3py99)))) :pattern ((fun_app$bm (fun_app$bn comp$b ?v0py359) ?v1py299) (fun_app$bi (fun_app$bj comp$a ?v2py161) ?v3py99)) )) :named A367))
(assert (! (forall ((?v0py360 A_a_fun_a_a_fun_fun$)(?v1py300 A_b_a_fun_fun_a_a_fun_fun$)(?v2py162 A_b_a_fun_fun_a_a_fun_fun$)(?v3py100 A_b_a_fun_fun_a_b_a_fun_fun_fun$)) (! (or (forall ((?v4py50 A_b_a_fun_fun$)) (! (= (fun_app$i ?v0py360 (fun_app$g ?v1py300 ?v4py50)) (fun_app$g ?v2py162 (fun_app$e ?v3py100 ?v4py50))) :pattern ((fun_app$g ?v1py300 ?v4py50)) :pattern ((fun_app$e ?v3py100 ?v4py50)) )) (not (= (fun_app$bi (fun_app$bj comp$a ?v0py360) ?v1py300) (fun_app$bm (fun_app$bn comp$b ?v2py162) ?v3py100)))) :pattern ((fun_app$bi (fun_app$bj comp$a ?v0py360) ?v1py300) (fun_app$bm (fun_app$bn comp$b ?v2py162) ?v3py100)) )) :named A368))
(assert (! (forall ((?v0py361 A_a_fun_a_a_fun_fun$)(?v1py301 A_b_a_fun_fun_a_a_fun_fun$)(?v2py163 A_a_fun_a_a_fun_fun$)(?v3py101 A_b_a_fun_fun_a_a_fun_fun$)) (! (or (forall ((?v4py51 A_b_a_fun_fun$)) (! (= (fun_app$i ?v0py361 (fun_app$g ?v1py301 ?v4py51)) (fun_app$i ?v2py163 (fun_app$g ?v3py101 ?v4py51))) :pattern ((fun_app$g ?v1py301 ?v4py51)) :pattern ((fun_app$g ?v3py101 ?v4py51)) )) (not (= (fun_app$bi (fun_app$bj comp$a ?v0py361) ?v1py301) (fun_app$bi (fun_app$bj comp$a ?v2py163) ?v3py101)))) :pattern ((fun_app$bi (fun_app$bj comp$a ?v0py361) ?v1py301) (fun_app$bi (fun_app$bj comp$a ?v2py163) ?v3py101)) )) :named A369))
(assert (! (forall ((?v0py362 B_a_fun_a_fun$)(?v1py302 A_b_a_fun_fun$)(?v2py164 B_a_fun_a_fun$)(?v3py102 A_b_a_fun_fun$)) (! (or (forall ((?v4py52 A$)) (! (= (fun_app$n ?v0py362 (fun_app$k ?v1py302 ?v4py52)) (fun_app$n ?v2py164 (fun_app$k ?v3py102 ?v4py52))) :pattern ((fun_app$k ?v1py302 ?v4py52)) :pattern ((fun_app$k ?v3py102 ?v4py52)) )) (not (= (fun_app$g (fun_app$bf comp$ ?v0py362) ?v1py302) (fun_app$g (fun_app$bf comp$ ?v2py164) ?v3py102)))) :pattern ((fun_app$g (fun_app$bf comp$ ?v0py362) ?v1py302) (fun_app$g (fun_app$bf comp$ ?v2py164) ?v3py102)) )) :named A370))
(assert (! (forall ((?v0py363 B_a_fun_a_fun$)(?v1py303 B_a_fun_b_a_fun_fun$)(?v2py165 A_b_a_fun_fun$)) (! (= (fun_app$g (fun_app$bf comp$ (fun_app$cb (comp$p ?v0py363) ?v1py303)) ?v2py165) (fun_app$g (fun_app$bf comp$ ?v0py363) (fun_app$e (fun_app$cc comp$g ?v1py303) ?v2py165))) :pattern ((fun_app$g (fun_app$bf comp$ (fun_app$cb (comp$p ?v0py363) ?v1py303)) ?v2py165)) :pattern ((fun_app$g (fun_app$bf comp$ ?v0py363) (fun_app$e (fun_app$cc comp$g ?v1py303) ?v2py165))) )) :named A371))
(check-sat)
(get-info :reason-unknown)
;z3 -T:600 group_026/ematching/tmp/x2015_09_10_16_49_54_469_1011706.smt_in_std_unique_aug-gt_unsat-full.smt2
;unknown
;((:reason-unknown "smt tactic failed to show goal to be sat/unsat (incomplete quantifiers)"))
