(set-info :smt-lib-version 2.6)
(set-info :source | Generated by: Andrew Reynolds Generated on: 2017-04-28 Generator: Sledgehammer, converted to v2.6 by CVC4 Application: Verfication goals in Isabelle Target solver: CVC4, Z3 Publications: "A Decision Procedure for (Co)Datatypes" by Andrew Reynolds and Jasmin Blanchette, CADE 2015. |)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unsat)
(set-logic UF)
(set-option :smt.auto-config false)
(set-option :smt.mbqi false)
(set-option :sat.random_seed 488)
(set-option :smt.random_seed 599)
(set-option :nlsat.seed 611)
(set-option :memory_max_size 6000)
(declare-sort A$ 0)
(declare-sort RegExStr 0)
(declare-sort RMode 0)
(declare-sort A_set$ 0)
(declare-sort A_a_fun$ 0)
(declare-sort Bool_set$ 0)
(declare-sort Bool_tree$ 0)
(declare-sort A_bool_fun$ 0)
(declare-sort Bool_a_fun$ 0)
(declare-sort A_a_a_fun_fun$ 0)
(declare-sort A_a_fun_a_fun$ 0)
(declare-sort Bool_bool_fun$ 0)
(declare-sort A_bool_fun_set$ 0)
(declare-sort A_tree_bool_fun$ 0)
(declare-sort A_a_bool_fun_fun$ 0)
(declare-sort A_a_fun_bool_fun$ 0)
(declare-sort A_bool_a_fun_fun$ 0)
(declare-sort A_bool_fun_a_fun$ 0)
(declare-sort A_tree_a_tree_fun$ 0)
(declare-sort Bool_tree_bool_fun$ 0)
(declare-sort A_a_fun_a_a_fun_fun$ 0)
(declare-sort A_bool_bool_fun_fun$ 0)
(declare-sort A_bool_fun_bool_fun$ 0)
(declare-sort Bool_a_bool_fun_fun$ 0)
(declare-sort A_tree_bool_tree_fun$ 0)
(declare-sort Bool_tree_a_tree_fun$ 0)
(declare-sort A_a_tree_bool_fun_fun$ 0)
(declare-sort A_a_a_bool_fun_fun_fun$ 0)
(declare-sort A_a_a_fun_bool_fun_fun$ 0)
(declare-sort A_a_bool_fun_fun_a_fun$ 0)
(declare-sort A_a_fun_a_bool_fun_fun$ 0)
(declare-sort A_bool_fun_a_a_fun_fun$ 0)
(declare-sort Bool_bool_bool_fun_fun$ 0)
(declare-sort Bool_bool_fun_bool_fun$ 0)
(declare-sort Bool_tree_bool_tree_fun$ 0)
(declare-sort A_bool_fun_tree_bool_fun$ 0)
(declare-sort A_a_a_fun_fun_a_a_fun_fun$ 0)
(declare-sort A_a_bool_bool_fun_fun_fun$ 0)
(declare-sort A_a_bool_fun_bool_fun_fun$ 0)
(declare-sort A_a_bool_fun_fun_bool_fun$ 0)
(declare-sort A_bool_a_bool_fun_fun_fun$ 0)
(declare-sort A_bool_fun_a_bool_fun_fun$ 0)
(declare-sort A_bool_fun_tree_a_tree_fun$ 0)
(declare-sort A_tree_a_bool_fun_tree_fun$ 0)
(declare-sort Bool_bool_tree_bool_fun_fun$ 0)
(declare-sort A_a_a_fun_a_bool_fun_fun_fun$ 0)
(declare-sort A_a_fun_a_a_bool_fun_fun_fun$ 0)
(declare-sort A_bool_bool_bool_fun_fun_fun$ 0)
(declare-sort A_bool_bool_fun_bool_fun_fun$ 0)
(declare-sort A_bool_fun_bool_bool_fun_fun$ 0)
(declare-sort Bool_a_bool_bool_fun_fun_fun$ 0)
(declare-sort Bool_a_bool_fun_bool_fun_fun$ 0)
(declare-sort Bool_a_fun_bool_bool_fun_fun$ 0)
(declare-sort A_bool_fun_tree_bool_tree_fun$ 0)
(declare-sort Bool_tree_a_bool_fun_tree_fun$ 0)
(declare-sort A_a_a_fun_fun_a_a_a_fun_fun_fun$ 0)
(declare-sort A_a_bool_fun_fun_a_bool_fun_fun$ 0)
(declare-sort A_a_fun_a_a_fun_a_a_fun_fun_fun$ 0)
(declare-sort A_a_fun_a_bool_bool_fun_fun_fun$ 0)
(declare-sort A_bool_fun_a_a_bool_fun_fun_fun$ 0)
(declare-sort Bool_bool_fun_bool_bool_fun_fun$ 0)
(declare-sort A_a_bool_fun_bool_bool_fun_fun_fun$ 0)
(declare-sort A_a_fun_a_a_fun_a_bool_fun_fun_fun$ 0)
(declare-sort A_a_fun_a_fun_a_a_fun_bool_fun_fun$ 0)
(declare-sort A_bool_bool_fun_fun_a_bool_fun_fun$ 0)
(declare-sort A_bool_fun_a_bool_bool_fun_fun_fun$ 0)
(declare-sort A_bool_fun_tree_a_bool_fun_tree_fun$ 0)
(declare-sort A_a_a_fun_fun_a_a_fun_a_a_fun_fun_fun$ 0)
(declare-sort A_a_bool_fun_fun_a_a_bool_fun_fun_fun$ 0)
(declare-sort A_a_fun_a_bool_fun_fun_a_bool_fun_fun$ 0)
(declare-sort A_bool_bool_fun_bool_bool_fun_fun_fun$ 0)
(declare-sort A_bool_bool_fun_fun_bool_bool_fun_fun$ 0)
(declare-sort A_bool_fun_a_a_fun_a_bool_fun_fun_fun$ 0)
(declare-sort Bool_a_bool_fun_fun_bool_bool_fun_fun$ 0)
(declare-sort Bool_a_fun_a_bool_fun_a_a_fun_fun_fun$ 0)
(declare-sort Bool_bool_fun_a_bool_bool_fun_fun_fun$ 0)
(declare-sort Bool_bool_fun_bool_a_bool_fun_fun_fun$ 0)
(declare-sort A_bool_fun_a_bool_fun_tree_bool_fun_fun$ 0)
(declare-sort A_a_bool_fun_fun_a_bool_bool_fun_fun_fun$ 0)
(declare-sort A_bool_fun_a_bool_fun_a_bool_fun_fun_fun$ 0)
(declare-sort A_bool_fun_a_fun_a_bool_fun_bool_fun_fun$ 0)
(declare-sort Bool_bool_fun_tree_bool_bool_fun_tree_fun$ 0)
(declare-sort A_a_a_bool_fun_fun_fun_a_a_bool_fun_fun_fun$ 0)
(declare-sort A_a_bool_fun_fun_a_a_fun_a_bool_fun_fun_fun$ 0)
(declare-sort A_bool_a_fun_fun_a_bool_fun_a_a_fun_fun_fun$ 0)
(declare-sort A_bool_bool_fun_fun_a_bool_bool_fun_fun_fun$ 0)
(declare-sort A_bool_bool_fun_fun_bool_a_bool_fun_fun_fun$ 0)
(declare-sort A_bool_fun_bool_fun_a_bool_fun_bool_fun_fun$ 0)
(declare-sort Bool_a_bool_fun_fun_a_bool_bool_fun_fun_fun$ 0)
(declare-sort Bool_a_bool_fun_fun_bool_a_bool_fun_fun_fun$ 0)
(declare-sort Bool_bool_fun_a_bool_fun_a_bool_fun_fun_fun$ 0)
(declare-sort A_bool_fun_a_a_bool_fun_fun_a_bool_fun_fun_fun$ 0)
(declare-sort A_a_a_bool_fun_fun_fun_a_a_a_bool_fun_fun_fun_fun$ 0)
(declare-sort A_a_a_fun_bool_fun_fun_a_a_fun_a_bool_fun_fun_fun$ 0)
(declare-sort A_a_bool_bool_fun_fun_fun_a_bool_bool_fun_fun_fun$ 0)
(declare-sort A_a_fun_a_bool_fun_fun_a_a_a_fun_bool_fun_fun_fun$ 0)
(declare-sort A_bool_bool_fun_fun_a_bool_fun_a_bool_fun_fun_fun$ 0)
(declare-sort A_bool_fun_a_bool_fun_fun_a_bool_fun_bool_fun_fun$ 0)
(declare-sort Bool_bool_fun_bool_bool_fun_bool_bool_fun_fun_fun$ 0)
(declare-sort A_a_bool_fun_fun_a_fun_a_a_bool_fun_fun_bool_fun_fun$ 0)
(declare-sort A_a_bool_bool_fun_fun_fun_a_a_bool_bool_fun_fun_fun_fun$ 0)
(declare-sort A_bool_bool_fun_fun_a_a_fun_a_bool_bool_fun_fun_fun_fun$ 0)
(declare-sort A_bool_fun_a_bool_fun_fun_a_bool_fun_a_bool_fun_fun_fun$ 0)
(declare-sort A_bool_fun_bool_fun_a_a_bool_fun_fun_a_bool_fun_fun_fun$ 0)
(declare-sort Bool_a_bool_fun_fun_a_bool_fun_a_a_bool_fun_fun_fun_fun$ 0)
(declare-sort A_a_bool_fun_fun_a_a_bool_fun_fun_a_a_bool_fun_fun_fun_fun$ 0)
(declare-sort A_a_bool_fun_fun_a_a_bool_fun_fun_fun_a_a_bool_fun_fun_fun$ 0)
(declare-sort A_a_a_fun_a_bool_fun_fun_fun_a_a_fun_a_a_bool_fun_fun_fun_fun$ 0)
(declare-sort A_a_bool_bool_fun_fun_fun_a_a_fun_a_bool_bool_fun_fun_fun_fun$ 0)
(declare-sort A_a_bool_fun_bool_fun_fun_a_a_bool_fun_fun_a_bool_fun_fun_fun$ 0)
(declare-sort A_a_fun_a_a_bool_fun_fun_fun_a_a_a_fun_a_bool_fun_fun_fun_fun$ 0)
(declare-sort A_a_fun_a_a_fun_a_bool_fun_fun_fun_a_a_fun_a_bool_fun_fun_fun$ 0)
(declare-sort A_a_fun_a_bool_fun_fun_a_a_fun_a_fun_a_a_fun_bool_fun_fun_fun$ 0)
(declare-sort A_bool_a_bool_fun_fun_fun_a_bool_fun_a_a_bool_fun_fun_fun_fun$ 0)
(declare-sort Bool_bool_bool_fun_fun_a_bool_fun_a_bool_bool_fun_fun_fun_fun$ 0)
(declare-sort Bool_bool_fun_bool_fun_a_bool_bool_fun_fun_a_bool_fun_fun_fun$ 0)
(declare-sort A_bool_fun_a_bool_fun_fun_tree_a_bool_fun_a_bool_fun_fun_tree_fun$ 0)
(declare-sort A_bool_bool_bool_fun_fun_fun_a_bool_fun_a_bool_bool_fun_fun_fun_fun$ 0)
(declare-sort A_bool_bool_fun_bool_fun_fun_a_bool_bool_fun_fun_a_bool_fun_fun_fun$ 0)
(declare-sort A_bool_fun_a_bool_fun_fun_a_bool_fun_a_fun_a_bool_fun_bool_fun_fun_fun$ 0)
(declare-sort Bool_a_bool_fun_bool_fun_fun_bool_a_bool_fun_fun_bool_bool_fun_fun_fun$ 0)
(declare-sort A_a_bool_fun_bool_bool_fun_fun_fun_a_a_bool_fun_fun_a_bool_bool_fun_fun_fun_fun$ 0)
(declare-sort A_bool_bool_fun_bool_bool_fun_fun_fun_a_bool_bool_fun_fun_a_bool_bool_fun_fun_fun_fun$ 0)
(declare-sort A_a_bool_fun_fun_a_bool_fun_fun_a_a_bool_fun_fun_a_fun_a_a_bool_fun_fun_bool_fun_fun_fun$ 0)
(declare-sort A_a_bool_fun_fun_a_a_bool_fun_fun_a_a_bool_fun_fun_fun_fun_a_a_bool_fun_fun_a_a_bool_fun_fun_fun_fun$ 0)
(declare-sort A_bool_fun_tree$ 0)
(declare-sort A_tree$ 0)
(declare-sort Bool_bool_fun_tree$ 0)
(declare-sort A_bool_fun_bool_fun_tree$ 0)
(declare-sort Bool_a_bool_fun_fun_tree$ 0)
(declare-sort A_bool_fun_a_bool_fun_fun_tree$ 0)
(declare-sort Bool_a_fun_tree$ 0)
(declare-sort A_a_fun_tree$ 0)
(declare-sort A_bool_fun_a_fun_tree$ 0)
(declare-sort A_bool_bool_fun_fun_tree$ 0)
(declare-sort A_a_bool_fun_fun_tree$ 0)
(declare-sort A_a_fun_a_bool_fun_fun_tree$ 0)
(declare-sort A_a_bool_fun_fun_a_a_bool_fun_fun_fun_tree$ 0)
(declare-sort A_a_bool_fun_fun_a_bool_fun_fun_tree$ 0)
(declare-sort Bool_a_bool_fun_fun_a_bool_bool_fun_fun_fun_tree$ 0)
(declare-sort A_bool_bool_fun_fun_bool_a_bool_fun_fun_fun_tree$ 0)
(declare-sort A_a_a_fun_fun_tree$ 0)
(declare-sort A_a_a_fun_fun_a_a_a_fun_fun_fun_tree$ 0)
(declare-sort A_a_fun_bool_fun_tree$ 0)
(declare-sort A_a_a_fun_bool_fun_fun_tree$ 0)
(declare-sort A_a_fun_a_bool_fun_fun_a_a_a_fun_bool_fun_fun_fun_tree$ 0)
(declare-sort A_a_a_fun_bool_fun_fun_a_a_fun_a_bool_fun_fun_fun_tree$ 0)
(declare-sort A_a_bool_bool_fun_fun_fun_tree$ 0)
(declare-sort A_a_bool_bool_fun_fun_fun_a_a_bool_bool_fun_fun_fun_fun_tree$ 0)
(declare-sort A_a_a_bool_fun_fun_fun_tree$ 0)
(declare-sort A_a_a_bool_fun_fun_fun_a_a_a_bool_fun_fun_fun_fun_tree$ 0)
(declare-sort A_a_fun_a_a_bool_fun_fun_fun_tree$ 0)
(declare-sort A_a_a_fun_a_bool_fun_fun_fun_tree$ 0)
(declare-sort A_a_fun_a_a_bool_fun_fun_fun_a_a_a_fun_a_bool_fun_fun_fun_fun_tree$ 0)
(declare-sort A_a_a_fun_a_bool_fun_fun_fun_a_a_fun_a_a_bool_fun_fun_fun_fun_tree$ 0)
(declare-sort A_bool_bool_fun_fun_a_bool_fun_a_bool_fun_fun_fun_tree$ 0)
(declare-sort A_a_bool_fun_fun_a_a_fun_a_bool_fun_fun_fun_tree$ 0)
(declare-sort A_bool_a_fun_fun_tree$ 0)
(declare-sort A_bool_fun_a_a_fun_fun_tree$ 0)
(declare-sort A_bool_a_fun_fun_a_bool_fun_a_a_fun_fun_fun_tree$ 0)
(declare-sort A_a_fun_a_a_fun_fun_tree$ 0)
(declare-sort A_a_a_fun_fun_a_a_fun_a_a_fun_fun_fun_tree$ 0)
(declare-sort A_a_fun_a_fun_tree$ 0)
(declare-sort A_a_fun_a_fun_a_a_fun_bool_fun_fun_tree$ 0)
(declare-sort A_a_fun_a_bool_fun_fun_a_a_fun_a_fun_a_a_fun_bool_fun_fun_fun_tree$ 0)
(declare-sort A_bool_bool_fun_bool_fun_fun_tree$ 0)
(declare-sort A_bool_bool_fun_fun_a_bool_fun_fun_tree$ 0)
(declare-sort A_bool_bool_fun_bool_fun_fun_a_bool_bool_fun_fun_a_bool_fun_fun_fun_tree$ 0)
(declare-sort Bool_bool_fun_bool_fun_tree$ 0)
(declare-sort A_a_bool_fun_bool_fun_fun_tree$ 0)
(declare-sort A_a_bool_fun_bool_fun_fun_a_a_bool_fun_fun_a_bool_fun_fun_fun_tree$ 0)
(declare-sort A_bool_bool_bool_fun_fun_fun_tree$ 0)
(declare-sort A_bool_fun_a_bool_bool_fun_fun_fun_tree$ 0)
(declare-sort A_bool_bool_bool_fun_fun_fun_a_bool_fun_a_bool_bool_fun_fun_fun_fun_tree$ 0)
(declare-sort Bool_bool_bool_fun_fun_tree$ 0)
(declare-sort A_a_fun_a_bool_bool_fun_fun_fun_tree$ 0)
(declare-sort A_a_bool_bool_fun_fun_fun_a_a_fun_a_bool_bool_fun_fun_fun_fun_tree$ 0)
(declare-sort A_bool_a_bool_fun_fun_fun_tree$ 0)
(declare-sort A_bool_fun_a_a_bool_fun_fun_fun_tree$ 0)
(declare-sort A_bool_a_bool_fun_fun_fun_a_bool_fun_a_a_bool_fun_fun_fun_fun_tree$ 0)
(declare-sort Bool_bool_fun_bool_bool_fun_fun_tree$ 0)
(declare-sort A_bool_fun_a_bool_fun_fun_a_bool_fun_a_bool_fun_fun_fun_tree$ 0)
(declare-sort A_a_bool_fun_fun_a_a_bool_fun_fun_a_a_bool_fun_fun_fun_fun_tree$ 0)
(declare-sort A_bool_fun_a_a_fun_a_bool_fun_fun_fun_tree$ 0)
(declare-sort Bool_bool_fun_a_bool_bool_fun_fun_fun_tree$ 0)
(declare-sort Bool_bool_fun_a_bool_fun_a_bool_fun_fun_fun_tree$ 0)
(declare-sort Bool_bool_fun_bool_bool_fun_bool_bool_fun_fun_fun_tree$ 0)
(declare-sort Bool_a_fun_a_bool_fun_a_a_fun_fun_fun_tree$ 0)
(declare-sort A_a_fun_a_a_fun_a_a_fun_fun_fun_tree$ 0)
(declare-sort Bool_bool_fun_bool_fun_a_bool_bool_fun_fun_a_bool_fun_fun_fun_tree$ 0)
(declare-sort A_bool_fun_bool_fun_a_a_bool_fun_fun_a_bool_fun_fun_fun_tree$ 0)
(declare-sort Bool_bool_bool_fun_fun_a_bool_fun_a_bool_bool_fun_fun_fun_fun_tree$ 0)
(declare-sort A_bool_bool_fun_fun_a_a_fun_a_bool_bool_fun_fun_fun_fun_tree$ 0)
(declare-sort Bool_a_bool_fun_fun_a_bool_fun_a_a_bool_fun_fun_fun_fun_tree$ 0)
(declare-sort A_bool_fun_a_fun_a_bool_fun_bool_fun_fun_tree$ 0)
(declare-sort A_bool_fun_a_bool_fun_fun_a_bool_fun_a_fun_a_bool_fun_bool_fun_fun_fun_tree$ 0)
(declare-sort A_a_bool_fun_fun_bool_fun_tree$ 0)
(declare-sort A_a_bool_fun_fun_a_fun_a_a_bool_fun_fun_bool_fun_fun_tree$ 0)
(declare-sort A_a_bool_fun_fun_a_fun_tree$ 0)
(declare-sort A_a_bool_fun_fun_a_bool_fun_fun_a_a_bool_fun_fun_a_fun_a_a_bool_fun_fun_bool_fun_fun_fun_tree$ 0)
(declare-sort A_bool_bool_fun_fun_a_bool_bool_fun_fun_fun_tree$ 0)
(declare-sort A_bool_bool_fun_bool_bool_fun_fun_fun_a_bool_bool_fun_fun_a_bool_bool_fun_fun_fun_fun_tree$ 0)
(declare-sort A_bool_bool_fun_bool_bool_fun_fun_fun_tree$ 0)
(declare-sort A_a_bool_fun_fun_a_bool_bool_fun_fun_fun_tree$ 0)
(declare-sort A_a_bool_fun_bool_bool_fun_fun_fun_a_a_bool_fun_fun_a_bool_bool_fun_fun_fun_fun_tree$ 0)
(declare-sort A_a_bool_fun_bool_bool_fun_fun_fun_tree$ 0)
(declare-fun select$ (A_bool_fun_tree$) A_bool_fun$)
(declare-fun selecta$ (A_bool_fun_tree$) A_bool_fun_tree$)
(declare-fun selectb$ (A_bool_fun_tree$) A_bool_fun_tree$)
(declare-fun node$ (A_bool_fun$ A_bool_fun_tree$ A_bool_fun_tree$) A_bool_fun_tree$)
(declare-fun root$ (A_tree$) A$)
(declare-fun left$ (A_tree$) A_tree$)
(declare-fun right$ (A_tree$) A_tree$)
(declare-fun node$a (A$ A_tree$ A_tree$) A_tree$)
(declare-fun selectc$ (Bool_bool_fun_tree$) Bool_bool_fun$)
(declare-fun selectd$ (Bool_bool_fun_tree$) Bool_bool_fun_tree$)
(declare-fun selecte$ (Bool_bool_fun_tree$) Bool_bool_fun_tree$)
(declare-fun node$b (Bool_bool_fun$ Bool_bool_fun_tree$ Bool_bool_fun_tree$) Bool_bool_fun_tree$)
(declare-fun selectf$ (A_bool_fun_bool_fun_tree$) A_bool_fun_bool_fun$)
(declare-fun selectg$ (A_bool_fun_bool_fun_tree$) A_bool_fun_bool_fun_tree$)
(declare-fun selecth$ (A_bool_fun_bool_fun_tree$) A_bool_fun_bool_fun_tree$)
(declare-fun node$c (A_bool_fun_bool_fun$ A_bool_fun_bool_fun_tree$ A_bool_fun_bool_fun_tree$) A_bool_fun_bool_fun_tree$)
(declare-fun selecti$ (Bool_a_bool_fun_fun_tree$) Bool_a_bool_fun_fun$)
(declare-fun selectj$ (Bool_a_bool_fun_fun_tree$) Bool_a_bool_fun_fun_tree$)
(declare-fun selectk$ (Bool_a_bool_fun_fun_tree$) Bool_a_bool_fun_fun_tree$)
(declare-fun node$d (Bool_a_bool_fun_fun$ Bool_a_bool_fun_fun_tree$ Bool_a_bool_fun_fun_tree$) Bool_a_bool_fun_fun_tree$)
(declare-fun selectl$ (A_bool_fun_a_bool_fun_fun_tree$) A_bool_fun_a_bool_fun_fun$)
(declare-fun selectm$ (A_bool_fun_a_bool_fun_fun_tree$) A_bool_fun_a_bool_fun_fun_tree$)
(declare-fun selectn$ (A_bool_fun_a_bool_fun_fun_tree$) A_bool_fun_a_bool_fun_fun_tree$)
(declare-fun node$e (A_bool_fun_a_bool_fun_fun$ A_bool_fun_a_bool_fun_fun_tree$ A_bool_fun_a_bool_fun_fun_tree$) A_bool_fun_a_bool_fun_fun_tree$)
(declare-fun selecto$ (Bool_a_fun_tree$) Bool_a_fun$)
(declare-fun selectp$ (Bool_a_fun_tree$) Bool_a_fun_tree$)
(declare-fun selectq$ (Bool_a_fun_tree$) Bool_a_fun_tree$)
(declare-fun node$f (Bool_a_fun$ Bool_a_fun_tree$ Bool_a_fun_tree$) Bool_a_fun_tree$)
(declare-fun selectr$ (A_a_fun_tree$) A_a_fun$)
(declare-fun selects$ (A_a_fun_tree$) A_a_fun_tree$)
(declare-fun selectt$ (A_a_fun_tree$) A_a_fun_tree$)
(declare-fun node$g (A_a_fun$ A_a_fun_tree$ A_a_fun_tree$) A_a_fun_tree$)
(declare-fun selectu$ (A_bool_fun_a_fun_tree$) A_bool_fun_a_fun$)
(declare-fun selectv$ (A_bool_fun_a_fun_tree$) A_bool_fun_a_fun_tree$)
(declare-fun selectw$ (A_bool_fun_a_fun_tree$) A_bool_fun_a_fun_tree$)
(declare-fun node$h (A_bool_fun_a_fun$ A_bool_fun_a_fun_tree$ A_bool_fun_a_fun_tree$) A_bool_fun_a_fun_tree$)
(declare-fun selectx$ (A_bool_bool_fun_fun_tree$) A_bool_bool_fun_fun$)
(declare-fun selecty$ (A_bool_bool_fun_fun_tree$) A_bool_bool_fun_fun_tree$)
(declare-fun selectz$ (A_bool_bool_fun_fun_tree$) A_bool_bool_fun_fun_tree$)
(declare-fun node$i (A_bool_bool_fun_fun$ A_bool_bool_fun_fun_tree$ A_bool_bool_fun_fun_tree$) A_bool_bool_fun_fun_tree$)
(declare-fun selecua$ (A_a_bool_fun_fun_tree$) A_a_bool_fun_fun$)
(declare-fun selecub$ (A_a_bool_fun_fun_tree$) A_a_bool_fun_fun_tree$)
(declare-fun selecuc$ (A_a_bool_fun_fun_tree$) A_a_bool_fun_fun_tree$)
(declare-fun node$j (A_a_bool_fun_fun$ A_a_bool_fun_fun_tree$ A_a_bool_fun_fun_tree$) A_a_bool_fun_fun_tree$)
(declare-fun selecud$ (A_a_fun_a_bool_fun_fun_tree$) A_a_fun_a_bool_fun_fun$)
(declare-fun selecue$ (A_a_fun_a_bool_fun_fun_tree$) A_a_fun_a_bool_fun_fun_tree$)
(declare-fun selecuf$ (A_a_fun_a_bool_fun_fun_tree$) A_a_fun_a_bool_fun_fun_tree$)
(declare-fun node$k (A_a_fun_a_bool_fun_fun$ A_a_fun_a_bool_fun_fun_tree$ A_a_fun_a_bool_fun_fun_tree$) A_a_fun_a_bool_fun_fun_tree$)
(declare-fun selecug$ (A_a_bool_fun_fun_a_a_bool_fun_fun_fun_tree$) A_a_bool_fun_fun_a_a_bool_fun_fun_fun$)
(declare-fun selecuh$ (A_a_bool_fun_fun_a_a_bool_fun_fun_fun_tree$) A_a_bool_fun_fun_a_a_bool_fun_fun_fun_tree$)
(declare-fun selecui$ (A_a_bool_fun_fun_a_a_bool_fun_fun_fun_tree$) A_a_bool_fun_fun_a_a_bool_fun_fun_fun_tree$)
(declare-fun node$l (A_a_bool_fun_fun_a_a_bool_fun_fun_fun$ A_a_bool_fun_fun_a_a_bool_fun_fun_fun_tree$ A_a_bool_fun_fun_a_a_bool_fun_fun_fun_tree$) A_a_bool_fun_fun_a_a_bool_fun_fun_fun_tree$)
(declare-fun selecuj$ (A_a_bool_fun_fun_a_bool_fun_fun_tree$) A_a_bool_fun_fun_a_bool_fun_fun$)
(declare-fun selecuk$ (A_a_bool_fun_fun_a_bool_fun_fun_tree$) A_a_bool_fun_fun_a_bool_fun_fun_tree$)
(declare-fun selecul$ (A_a_bool_fun_fun_a_bool_fun_fun_tree$) A_a_bool_fun_fun_a_bool_fun_fun_tree$)
(declare-fun node$m (A_a_bool_fun_fun_a_bool_fun_fun$ A_a_bool_fun_fun_a_bool_fun_fun_tree$ A_a_bool_fun_fun_a_bool_fun_fun_tree$) A_a_bool_fun_fun_a_bool_fun_fun_tree$)
(declare-fun selecum$ (Bool_a_bool_fun_fun_a_bool_bool_fun_fun_fun_tree$) Bool_a_bool_fun_fun_a_bool_bool_fun_fun_fun$)
(declare-fun selecun$ (Bool_a_bool_fun_fun_a_bool_bool_fun_fun_fun_tree$) Bool_a_bool_fun_fun_a_bool_bool_fun_fun_fun_tree$)
(declare-fun selecuo$ (Bool_a_bool_fun_fun_a_bool_bool_fun_fun_fun_tree$) Bool_a_bool_fun_fun_a_bool_bool_fun_fun_fun_tree$)
(declare-fun node$n (Bool_a_bool_fun_fun_a_bool_bool_fun_fun_fun$ Bool_a_bool_fun_fun_a_bool_bool_fun_fun_fun_tree$ Bool_a_bool_fun_fun_a_bool_bool_fun_fun_fun_tree$) Bool_a_bool_fun_fun_a_bool_bool_fun_fun_fun_tree$)
(declare-fun selecup$ (A_bool_bool_fun_fun_bool_a_bool_fun_fun_fun_tree$) A_bool_bool_fun_fun_bool_a_bool_fun_fun_fun$)
(declare-fun selecuq$ (A_bool_bool_fun_fun_bool_a_bool_fun_fun_fun_tree$) A_bool_bool_fun_fun_bool_a_bool_fun_fun_fun_tree$)
(declare-fun selecur$ (A_bool_bool_fun_fun_bool_a_bool_fun_fun_fun_tree$) A_bool_bool_fun_fun_bool_a_bool_fun_fun_fun_tree$)
(declare-fun node$o (A_bool_bool_fun_fun_bool_a_bool_fun_fun_fun$ A_bool_bool_fun_fun_bool_a_bool_fun_fun_fun_tree$ A_bool_bool_fun_fun_bool_a_bool_fun_fun_fun_tree$) A_bool_bool_fun_fun_bool_a_bool_fun_fun_fun_tree$)
(declare-fun selecus$ (A_a_a_fun_fun_tree$) A_a_a_fun_fun$)
(declare-fun selecut$ (A_a_a_fun_fun_tree$) A_a_a_fun_fun_tree$)
(declare-fun selecuu$ (A_a_a_fun_fun_tree$) A_a_a_fun_fun_tree$)
(declare-fun node$p (A_a_a_fun_fun$ A_a_a_fun_fun_tree$ A_a_a_fun_fun_tree$) A_a_a_fun_fun_tree$)
(declare-fun selecuv$ (A_a_a_fun_fun_a_a_a_fun_fun_fun_tree$) A_a_a_fun_fun_a_a_a_fun_fun_fun$)
(declare-fun selecuw$ (A_a_a_fun_fun_a_a_a_fun_fun_fun_tree$) A_a_a_fun_fun_a_a_a_fun_fun_fun_tree$)
(declare-fun selecux$ (A_a_a_fun_fun_a_a_a_fun_fun_fun_tree$) A_a_a_fun_fun_a_a_a_fun_fun_fun_tree$)
(declare-fun node$q (A_a_a_fun_fun_a_a_a_fun_fun_fun$ A_a_a_fun_fun_a_a_a_fun_fun_fun_tree$ A_a_a_fun_fun_a_a_a_fun_fun_fun_tree$) A_a_a_fun_fun_a_a_a_fun_fun_fun_tree$)
(declare-fun selecuy$ (A_a_fun_bool_fun_tree$) A_a_fun_bool_fun$)
(declare-fun selecuz$ (A_a_fun_bool_fun_tree$) A_a_fun_bool_fun_tree$)
(declare-fun selecva$ (A_a_fun_bool_fun_tree$) A_a_fun_bool_fun_tree$)
(declare-fun node$r (A_a_fun_bool_fun$ A_a_fun_bool_fun_tree$ A_a_fun_bool_fun_tree$) A_a_fun_bool_fun_tree$)
(declare-fun selecvb$ (A_a_a_fun_bool_fun_fun_tree$) A_a_a_fun_bool_fun_fun$)
(declare-fun selecvc$ (A_a_a_fun_bool_fun_fun_tree$) A_a_a_fun_bool_fun_fun_tree$)
(declare-fun selecvd$ (A_a_a_fun_bool_fun_fun_tree$) A_a_a_fun_bool_fun_fun_tree$)
(declare-fun node$s (A_a_a_fun_bool_fun_fun$ A_a_a_fun_bool_fun_fun_tree$ A_a_a_fun_bool_fun_fun_tree$) A_a_a_fun_bool_fun_fun_tree$)
(declare-fun selecve$ (A_a_fun_a_bool_fun_fun_a_a_a_fun_bool_fun_fun_fun_tree$) A_a_fun_a_bool_fun_fun_a_a_a_fun_bool_fun_fun_fun$)
(declare-fun selecvf$ (A_a_fun_a_bool_fun_fun_a_a_a_fun_bool_fun_fun_fun_tree$) A_a_fun_a_bool_fun_fun_a_a_a_fun_bool_fun_fun_fun_tree$)
(declare-fun selecvg$ (A_a_fun_a_bool_fun_fun_a_a_a_fun_bool_fun_fun_fun_tree$) A_a_fun_a_bool_fun_fun_a_a_a_fun_bool_fun_fun_fun_tree$)
(declare-fun node$t (A_a_fun_a_bool_fun_fun_a_a_a_fun_bool_fun_fun_fun$ A_a_fun_a_bool_fun_fun_a_a_a_fun_bool_fun_fun_fun_tree$ A_a_fun_a_bool_fun_fun_a_a_a_fun_bool_fun_fun_fun_tree$) A_a_fun_a_bool_fun_fun_a_a_a_fun_bool_fun_fun_fun_tree$)
(declare-fun selecvh$ (A_a_a_fun_bool_fun_fun_a_a_fun_a_bool_fun_fun_fun_tree$) A_a_a_fun_bool_fun_fun_a_a_fun_a_bool_fun_fun_fun$)
(declare-fun selecvi$ (A_a_a_fun_bool_fun_fun_a_a_fun_a_bool_fun_fun_fun_tree$) A_a_a_fun_bool_fun_fun_a_a_fun_a_bool_fun_fun_fun_tree$)
(declare-fun selecvj$ (A_a_a_fun_bool_fun_fun_a_a_fun_a_bool_fun_fun_fun_tree$) A_a_a_fun_bool_fun_fun_a_a_fun_a_bool_fun_fun_fun_tree$)
(declare-fun node$u (A_a_a_fun_bool_fun_fun_a_a_fun_a_bool_fun_fun_fun$ A_a_a_fun_bool_fun_fun_a_a_fun_a_bool_fun_fun_fun_tree$ A_a_a_fun_bool_fun_fun_a_a_fun_a_bool_fun_fun_fun_tree$) A_a_a_fun_bool_fun_fun_a_a_fun_a_bool_fun_fun_fun_tree$)
(declare-fun selecvk$ (A_a_bool_bool_fun_fun_fun_tree$) A_a_bool_bool_fun_fun_fun$)
(declare-fun selecvl$ (A_a_bool_bool_fun_fun_fun_tree$) A_a_bool_bool_fun_fun_fun_tree$)
(declare-fun selecvm$ (A_a_bool_bool_fun_fun_fun_tree$) A_a_bool_bool_fun_fun_fun_tree$)
(declare-fun node$v (A_a_bool_bool_fun_fun_fun$ A_a_bool_bool_fun_fun_fun_tree$ A_a_bool_bool_fun_fun_fun_tree$) A_a_bool_bool_fun_fun_fun_tree$)
(declare-fun selecvn$ (A_a_bool_bool_fun_fun_fun_a_a_bool_bool_fun_fun_fun_fun_tree$) A_a_bool_bool_fun_fun_fun_a_a_bool_bool_fun_fun_fun_fun$)
(declare-fun selecvo$ (A_a_bool_bool_fun_fun_fun_a_a_bool_bool_fun_fun_fun_fun_tree$) A_a_bool_bool_fun_fun_fun_a_a_bool_bool_fun_fun_fun_fun_tree$)
(declare-fun selecvp$ (A_a_bool_bool_fun_fun_fun_a_a_bool_bool_fun_fun_fun_fun_tree$) A_a_bool_bool_fun_fun_fun_a_a_bool_bool_fun_fun_fun_fun_tree$)
(declare-fun node$w (A_a_bool_bool_fun_fun_fun_a_a_bool_bool_fun_fun_fun_fun$ A_a_bool_bool_fun_fun_fun_a_a_bool_bool_fun_fun_fun_fun_tree$ A_a_bool_bool_fun_fun_fun_a_a_bool_bool_fun_fun_fun_fun_tree$) A_a_bool_bool_fun_fun_fun_a_a_bool_bool_fun_fun_fun_fun_tree$)
(declare-fun selecvq$ (A_a_a_bool_fun_fun_fun_tree$) A_a_a_bool_fun_fun_fun$)
(declare-fun selecvr$ (A_a_a_bool_fun_fun_fun_tree$) A_a_a_bool_fun_fun_fun_tree$)
(declare-fun selecvs$ (A_a_a_bool_fun_fun_fun_tree$) A_a_a_bool_fun_fun_fun_tree$)
(declare-fun node$x (A_a_a_bool_fun_fun_fun$ A_a_a_bool_fun_fun_fun_tree$ A_a_a_bool_fun_fun_fun_tree$) A_a_a_bool_fun_fun_fun_tree$)
(declare-fun selecvt$ (A_a_a_bool_fun_fun_fun_a_a_a_bool_fun_fun_fun_fun_tree$) A_a_a_bool_fun_fun_fun_a_a_a_bool_fun_fun_fun_fun$)
(declare-fun selecvu$ (A_a_a_bool_fun_fun_fun_a_a_a_bool_fun_fun_fun_fun_tree$) A_a_a_bool_fun_fun_fun_a_a_a_bool_fun_fun_fun_fun_tree$)
(declare-fun selecvv$ (A_a_a_bool_fun_fun_fun_a_a_a_bool_fun_fun_fun_fun_tree$) A_a_a_bool_fun_fun_fun_a_a_a_bool_fun_fun_fun_fun_tree$)
(declare-fun node$y (A_a_a_bool_fun_fun_fun_a_a_a_bool_fun_fun_fun_fun$ A_a_a_bool_fun_fun_fun_a_a_a_bool_fun_fun_fun_fun_tree$ A_a_a_bool_fun_fun_fun_a_a_a_bool_fun_fun_fun_fun_tree$) A_a_a_bool_fun_fun_fun_a_a_a_bool_fun_fun_fun_fun_tree$)
(declare-fun selecvw$ (A_a_fun_a_a_bool_fun_fun_fun_tree$) A_a_fun_a_a_bool_fun_fun_fun$)
(declare-fun selecvx$ (A_a_fun_a_a_bool_fun_fun_fun_tree$) A_a_fun_a_a_bool_fun_fun_fun_tree$)
(declare-fun selecvy$ (A_a_fun_a_a_bool_fun_fun_fun_tree$) A_a_fun_a_a_bool_fun_fun_fun_tree$)
(declare-fun node$z (A_a_fun_a_a_bool_fun_fun_fun$ A_a_fun_a_a_bool_fun_fun_fun_tree$ A_a_fun_a_a_bool_fun_fun_fun_tree$) A_a_fun_a_a_bool_fun_fun_fun_tree$)
(declare-fun selecvz$ (A_a_a_fun_a_bool_fun_fun_fun_tree$) A_a_a_fun_a_bool_fun_fun_fun$)
(declare-fun selecwa$ (A_a_a_fun_a_bool_fun_fun_fun_tree$) A_a_a_fun_a_bool_fun_fun_fun_tree$)
(declare-fun selecwb$ (A_a_a_fun_a_bool_fun_fun_fun_tree$) A_a_a_fun_a_bool_fun_fun_fun_tree$)
(declare-fun node$aa (A_a_a_fun_a_bool_fun_fun_fun$ A_a_a_fun_a_bool_fun_fun_fun_tree$ A_a_a_fun_a_bool_fun_fun_fun_tree$) A_a_a_fun_a_bool_fun_fun_fun_tree$)
(declare-fun selecwc$ (A_a_fun_a_a_bool_fun_fun_fun_a_a_a_fun_a_bool_fun_fun_fun_fun_tree$) A_a_fun_a_a_bool_fun_fun_fun_a_a_a_fun_a_bool_fun_fun_fun_fun$)
(declare-fun selecwd$ (A_a_fun_a_a_bool_fun_fun_fun_a_a_a_fun_a_bool_fun_fun_fun_fun_tree$) A_a_fun_a_a_bool_fun_fun_fun_a_a_a_fun_a_bool_fun_fun_fun_fun_tree$)
(declare-fun selecwe$ (A_a_fun_a_a_bool_fun_fun_fun_a_a_a_fun_a_bool_fun_fun_fun_fun_tree$) A_a_fun_a_a_bool_fun_fun_fun_a_a_a_fun_a_bool_fun_fun_fun_fun_tree$)
(declare-fun node$ab (A_a_fun_a_a_bool_fun_fun_fun_a_a_a_fun_a_bool_fun_fun_fun_fun$ A_a_fun_a_a_bool_fun_fun_fun_a_a_a_fun_a_bool_fun_fun_fun_fun_tree$ A_a_fun_a_a_bool_fun_fun_fun_a_a_a_fun_a_bool_fun_fun_fun_fun_tree$) A_a_fun_a_a_bool_fun_fun_fun_a_a_a_fun_a_bool_fun_fun_fun_fun_tree$)
(declare-fun selecwf$ (A_a_a_fun_a_bool_fun_fun_fun_a_a_fun_a_a_bool_fun_fun_fun_fun_tree$) A_a_a_fun_a_bool_fun_fun_fun_a_a_fun_a_a_bool_fun_fun_fun_fun$)
(declare-fun selecwg$ (A_a_a_fun_a_bool_fun_fun_fun_a_a_fun_a_a_bool_fun_fun_fun_fun_tree$) A_a_a_fun_a_bool_fun_fun_fun_a_a_fun_a_a_bool_fun_fun_fun_fun_tree$)
(declare-fun selecwh$ (A_a_a_fun_a_bool_fun_fun_fun_a_a_fun_a_a_bool_fun_fun_fun_fun_tree$) A_a_a_fun_a_bool_fun_fun_fun_a_a_fun_a_a_bool_fun_fun_fun_fun_tree$)
(declare-fun node$ac (A_a_a_fun_a_bool_fun_fun_fun_a_a_fun_a_a_bool_fun_fun_fun_fun$ A_a_a_fun_a_bool_fun_fun_fun_a_a_fun_a_a_bool_fun_fun_fun_fun_tree$ A_a_a_fun_a_bool_fun_fun_fun_a_a_fun_a_a_bool_fun_fun_fun_fun_tree$) A_a_a_fun_a_bool_fun_fun_fun_a_a_fun_a_a_bool_fun_fun_fun_fun_tree$)
(declare-fun selecwi$ (A_bool_bool_fun_fun_a_bool_fun_a_bool_fun_fun_fun_tree$) A_bool_bool_fun_fun_a_bool_fun_a_bool_fun_fun_fun$)
(declare-fun selecwj$ (A_bool_bool_fun_fun_a_bool_fun_a_bool_fun_fun_fun_tree$) A_bool_bool_fun_fun_a_bool_fun_a_bool_fun_fun_fun_tree$)
(declare-fun selecwk$ (A_bool_bool_fun_fun_a_bool_fun_a_bool_fun_fun_fun_tree$) A_bool_bool_fun_fun_a_bool_fun_a_bool_fun_fun_fun_tree$)
(declare-fun node$ad (A_bool_bool_fun_fun_a_bool_fun_a_bool_fun_fun_fun$ A_bool_bool_fun_fun_a_bool_fun_a_bool_fun_fun_fun_tree$ A_bool_bool_fun_fun_a_bool_fun_a_bool_fun_fun_fun_tree$) A_bool_bool_fun_fun_a_bool_fun_a_bool_fun_fun_fun_tree$)
(declare-fun selecwl$ (A_a_bool_fun_fun_a_a_fun_a_bool_fun_fun_fun_tree$) A_a_bool_fun_fun_a_a_fun_a_bool_fun_fun_fun$)
(declare-fun selecwm$ (A_a_bool_fun_fun_a_a_fun_a_bool_fun_fun_fun_tree$) A_a_bool_fun_fun_a_a_fun_a_bool_fun_fun_fun_tree$)
(declare-fun selecwn$ (A_a_bool_fun_fun_a_a_fun_a_bool_fun_fun_fun_tree$) A_a_bool_fun_fun_a_a_fun_a_bool_fun_fun_fun_tree$)
(declare-fun node$ae (A_a_bool_fun_fun_a_a_fun_a_bool_fun_fun_fun$ A_a_bool_fun_fun_a_a_fun_a_bool_fun_fun_fun_tree$ A_a_bool_fun_fun_a_a_fun_a_bool_fun_fun_fun_tree$) A_a_bool_fun_fun_a_a_fun_a_bool_fun_fun_fun_tree$)
(declare-fun selecwo$ (A_bool_a_fun_fun_tree$) A_bool_a_fun_fun$)
(declare-fun selecwp$ (A_bool_a_fun_fun_tree$) A_bool_a_fun_fun_tree$)
(declare-fun selecwq$ (A_bool_a_fun_fun_tree$) A_bool_a_fun_fun_tree$)
(declare-fun node$af (A_bool_a_fun_fun$ A_bool_a_fun_fun_tree$ A_bool_a_fun_fun_tree$) A_bool_a_fun_fun_tree$)
(declare-fun selecwr$ (A_bool_fun_a_a_fun_fun_tree$) A_bool_fun_a_a_fun_fun$)
(declare-fun selecws$ (A_bool_fun_a_a_fun_fun_tree$) A_bool_fun_a_a_fun_fun_tree$)
(declare-fun selecwt$ (A_bool_fun_a_a_fun_fun_tree$) A_bool_fun_a_a_fun_fun_tree$)
(declare-fun node$ag (A_bool_fun_a_a_fun_fun$ A_bool_fun_a_a_fun_fun_tree$ A_bool_fun_a_a_fun_fun_tree$) A_bool_fun_a_a_fun_fun_tree$)
(declare-fun selecwu$ (A_bool_a_fun_fun_a_bool_fun_a_a_fun_fun_fun_tree$) A_bool_a_fun_fun_a_bool_fun_a_a_fun_fun_fun$)
(declare-fun selecwv$ (A_bool_a_fun_fun_a_bool_fun_a_a_fun_fun_fun_tree$) A_bool_a_fun_fun_a_bool_fun_a_a_fun_fun_fun_tree$)
(declare-fun selecww$ (A_bool_a_fun_fun_a_bool_fun_a_a_fun_fun_fun_tree$) A_bool_a_fun_fun_a_bool_fun_a_a_fun_fun_fun_tree$)
(declare-fun node$ah (A_bool_a_fun_fun_a_bool_fun_a_a_fun_fun_fun$ A_bool_a_fun_fun_a_bool_fun_a_a_fun_fun_fun_tree$ A_bool_a_fun_fun_a_bool_fun_a_a_fun_fun_fun_tree$) A_bool_a_fun_fun_a_bool_fun_a_a_fun_fun_fun_tree$)
(declare-fun selecwx$ (A_a_fun_a_a_fun_fun_tree$) A_a_fun_a_a_fun_fun$)
(declare-fun selecwy$ (A_a_fun_a_a_fun_fun_tree$) A_a_fun_a_a_fun_fun_tree$)
(declare-fun selecwz$ (A_a_fun_a_a_fun_fun_tree$) A_a_fun_a_a_fun_fun_tree$)
(declare-fun node$ai (A_a_fun_a_a_fun_fun$ A_a_fun_a_a_fun_fun_tree$ A_a_fun_a_a_fun_fun_tree$) A_a_fun_a_a_fun_fun_tree$)
(declare-fun selecxa$ (A_a_a_fun_fun_a_a_fun_a_a_fun_fun_fun_tree$) A_a_a_fun_fun_a_a_fun_a_a_fun_fun_fun$)
(declare-fun selecxb$ (A_a_a_fun_fun_a_a_fun_a_a_fun_fun_fun_tree$) A_a_a_fun_fun_a_a_fun_a_a_fun_fun_fun_tree$)
(declare-fun selecxc$ (A_a_a_fun_fun_a_a_fun_a_a_fun_fun_fun_tree$) A_a_a_fun_fun_a_a_fun_a_a_fun_fun_fun_tree$)
(declare-fun node$aj (A_a_a_fun_fun_a_a_fun_a_a_fun_fun_fun$ A_a_a_fun_fun_a_a_fun_a_a_fun_fun_fun_tree$ A_a_a_fun_fun_a_a_fun_a_a_fun_fun_fun_tree$) A_a_a_fun_fun_a_a_fun_a_a_fun_fun_fun_tree$)
(declare-fun selecxd$ (A_a_fun_a_fun_tree$) A_a_fun_a_fun$)
(declare-fun selecxe$ (A_a_fun_a_fun_tree$) A_a_fun_a_fun_tree$)
(declare-fun selecxf$ (A_a_fun_a_fun_tree$) A_a_fun_a_fun_tree$)
(declare-fun node$ak (A_a_fun_a_fun$ A_a_fun_a_fun_tree$ A_a_fun_a_fun_tree$) A_a_fun_a_fun_tree$)
(declare-fun selecxg$ (A_a_fun_a_fun_a_a_fun_bool_fun_fun_tree$) A_a_fun_a_fun_a_a_fun_bool_fun_fun$)
(declare-fun selecxh$ (A_a_fun_a_fun_a_a_fun_bool_fun_fun_tree$) A_a_fun_a_fun_a_a_fun_bool_fun_fun_tree$)
(declare-fun selecxi$ (A_a_fun_a_fun_a_a_fun_bool_fun_fun_tree$) A_a_fun_a_fun_a_a_fun_bool_fun_fun_tree$)
(declare-fun node$al (A_a_fun_a_fun_a_a_fun_bool_fun_fun$ A_a_fun_a_fun_a_a_fun_bool_fun_fun_tree$ A_a_fun_a_fun_a_a_fun_bool_fun_fun_tree$) A_a_fun_a_fun_a_a_fun_bool_fun_fun_tree$)
(declare-fun selecxj$ (A_a_fun_a_bool_fun_fun_a_a_fun_a_fun_a_a_fun_bool_fun_fun_fun_tree$) A_a_fun_a_bool_fun_fun_a_a_fun_a_fun_a_a_fun_bool_fun_fun_fun$)
(declare-fun selecxk$ (A_a_fun_a_bool_fun_fun_a_a_fun_a_fun_a_a_fun_bool_fun_fun_fun_tree$) A_a_fun_a_bool_fun_fun_a_a_fun_a_fun_a_a_fun_bool_fun_fun_fun_tree$)
(declare-fun selecxl$ (A_a_fun_a_bool_fun_fun_a_a_fun_a_fun_a_a_fun_bool_fun_fun_fun_tree$) A_a_fun_a_bool_fun_fun_a_a_fun_a_fun_a_a_fun_bool_fun_fun_fun_tree$)
(declare-fun node$am (A_a_fun_a_bool_fun_fun_a_a_fun_a_fun_a_a_fun_bool_fun_fun_fun$ A_a_fun_a_bool_fun_fun_a_a_fun_a_fun_a_a_fun_bool_fun_fun_fun_tree$ A_a_fun_a_bool_fun_fun_a_a_fun_a_fun_a_a_fun_bool_fun_fun_fun_tree$) A_a_fun_a_bool_fun_fun_a_a_fun_a_fun_a_a_fun_bool_fun_fun_fun_tree$)
(declare-fun selecxm$ (A_bool_bool_fun_bool_fun_fun_tree$) A_bool_bool_fun_bool_fun_fun$)
(declare-fun selecxn$ (A_bool_bool_fun_bool_fun_fun_tree$) A_bool_bool_fun_bool_fun_fun_tree$)
(declare-fun selecxo$ (A_bool_bool_fun_bool_fun_fun_tree$) A_bool_bool_fun_bool_fun_fun_tree$)
(declare-fun node$an (A_bool_bool_fun_bool_fun_fun$ A_bool_bool_fun_bool_fun_fun_tree$ A_bool_bool_fun_bool_fun_fun_tree$) A_bool_bool_fun_bool_fun_fun_tree$)
(declare-fun selecxp$ (A_bool_bool_fun_fun_a_bool_fun_fun_tree$) A_bool_bool_fun_fun_a_bool_fun_fun$)
(declare-fun selecxq$ (A_bool_bool_fun_fun_a_bool_fun_fun_tree$) A_bool_bool_fun_fun_a_bool_fun_fun_tree$)
(declare-fun selecxr$ (A_bool_bool_fun_fun_a_bool_fun_fun_tree$) A_bool_bool_fun_fun_a_bool_fun_fun_tree$)
(declare-fun node$ao (A_bool_bool_fun_fun_a_bool_fun_fun$ A_bool_bool_fun_fun_a_bool_fun_fun_tree$ A_bool_bool_fun_fun_a_bool_fun_fun_tree$) A_bool_bool_fun_fun_a_bool_fun_fun_tree$)
(declare-fun selecxs$ (A_bool_bool_fun_bool_fun_fun_a_bool_bool_fun_fun_a_bool_fun_fun_fun_tree$) A_bool_bool_fun_bool_fun_fun_a_bool_bool_fun_fun_a_bool_fun_fun_fun$)
(declare-fun selecxt$ (A_bool_bool_fun_bool_fun_fun_a_bool_bool_fun_fun_a_bool_fun_fun_fun_tree$) A_bool_bool_fun_bool_fun_fun_a_bool_bool_fun_fun_a_bool_fun_fun_fun_tree$)
(declare-fun selecxu$ (A_bool_bool_fun_bool_fun_fun_a_bool_bool_fun_fun_a_bool_fun_fun_fun_tree$) A_bool_bool_fun_bool_fun_fun_a_bool_bool_fun_fun_a_bool_fun_fun_fun_tree$)
(declare-fun node$ap (A_bool_bool_fun_bool_fun_fun_a_bool_bool_fun_fun_a_bool_fun_fun_fun$ A_bool_bool_fun_bool_fun_fun_a_bool_bool_fun_fun_a_bool_fun_fun_fun_tree$ A_bool_bool_fun_bool_fun_fun_a_bool_bool_fun_fun_a_bool_fun_fun_fun_tree$) A_bool_bool_fun_bool_fun_fun_a_bool_bool_fun_fun_a_bool_fun_fun_fun_tree$)
(declare-fun selecxv$ (Bool_bool_fun_bool_fun_tree$) Bool_bool_fun_bool_fun$)
(declare-fun selecxw$ (Bool_bool_fun_bool_fun_tree$) Bool_bool_fun_bool_fun_tree$)
(declare-fun selecxx$ (Bool_bool_fun_bool_fun_tree$) Bool_bool_fun_bool_fun_tree$)
(declare-fun node$aq (Bool_bool_fun_bool_fun$ Bool_bool_fun_bool_fun_tree$ Bool_bool_fun_bool_fun_tree$) Bool_bool_fun_bool_fun_tree$)
(declare-fun selecxy$ (A_a_bool_fun_bool_fun_fun_tree$) A_a_bool_fun_bool_fun_fun$)
(declare-fun selecxz$ (A_a_bool_fun_bool_fun_fun_tree$) A_a_bool_fun_bool_fun_fun_tree$)
(declare-fun selecya$ (A_a_bool_fun_bool_fun_fun_tree$) A_a_bool_fun_bool_fun_fun_tree$)
(declare-fun node$ar (A_a_bool_fun_bool_fun_fun$ A_a_bool_fun_bool_fun_fun_tree$ A_a_bool_fun_bool_fun_fun_tree$) A_a_bool_fun_bool_fun_fun_tree$)
(declare-fun selecyb$ (A_a_bool_fun_bool_fun_fun_a_a_bool_fun_fun_a_bool_fun_fun_fun_tree$) A_a_bool_fun_bool_fun_fun_a_a_bool_fun_fun_a_bool_fun_fun_fun$)
(declare-fun selecyc$ (A_a_bool_fun_bool_fun_fun_a_a_bool_fun_fun_a_bool_fun_fun_fun_tree$) A_a_bool_fun_bool_fun_fun_a_a_bool_fun_fun_a_bool_fun_fun_fun_tree$)
(declare-fun selecyd$ (A_a_bool_fun_bool_fun_fun_a_a_bool_fun_fun_a_bool_fun_fun_fun_tree$) A_a_bool_fun_bool_fun_fun_a_a_bool_fun_fun_a_bool_fun_fun_fun_tree$)
(declare-fun node$as (A_a_bool_fun_bool_fun_fun_a_a_bool_fun_fun_a_bool_fun_fun_fun$ A_a_bool_fun_bool_fun_fun_a_a_bool_fun_fun_a_bool_fun_fun_fun_tree$ A_a_bool_fun_bool_fun_fun_a_a_bool_fun_fun_a_bool_fun_fun_fun_tree$) A_a_bool_fun_bool_fun_fun_a_a_bool_fun_fun_a_bool_fun_fun_fun_tree$)
(declare-fun selecye$ (A_bool_bool_bool_fun_fun_fun_tree$) A_bool_bool_bool_fun_fun_fun$)
(declare-fun selecyf$ (A_bool_bool_bool_fun_fun_fun_tree$) A_bool_bool_bool_fun_fun_fun_tree$)
(declare-fun selecyg$ (A_bool_bool_bool_fun_fun_fun_tree$) A_bool_bool_bool_fun_fun_fun_tree$)
(declare-fun node$at (A_bool_bool_bool_fun_fun_fun$ A_bool_bool_bool_fun_fun_fun_tree$ A_bool_bool_bool_fun_fun_fun_tree$) A_bool_bool_bool_fun_fun_fun_tree$)
(declare-fun selecyh$ (A_bool_fun_a_bool_bool_fun_fun_fun_tree$) A_bool_fun_a_bool_bool_fun_fun_fun$)
(declare-fun selecyi$ (A_bool_fun_a_bool_bool_fun_fun_fun_tree$) A_bool_fun_a_bool_bool_fun_fun_fun_tree$)
(declare-fun selecyj$ (A_bool_fun_a_bool_bool_fun_fun_fun_tree$) A_bool_fun_a_bool_bool_fun_fun_fun_tree$)
(declare-fun node$au (A_bool_fun_a_bool_bool_fun_fun_fun$ A_bool_fun_a_bool_bool_fun_fun_fun_tree$ A_bool_fun_a_bool_bool_fun_fun_fun_tree$) A_bool_fun_a_bool_bool_fun_fun_fun_tree$)
(declare-fun selecyk$ (A_bool_bool_bool_fun_fun_fun_a_bool_fun_a_bool_bool_fun_fun_fun_fun_tree$) A_bool_bool_bool_fun_fun_fun_a_bool_fun_a_bool_bool_fun_fun_fun_fun$)
(declare-fun selecyl$ (A_bool_bool_bool_fun_fun_fun_a_bool_fun_a_bool_bool_fun_fun_fun_fun_tree$) A_bool_bool_bool_fun_fun_fun_a_bool_fun_a_bool_bool_fun_fun_fun_fun_tree$)
(declare-fun selecym$ (A_bool_bool_bool_fun_fun_fun_a_bool_fun_a_bool_bool_fun_fun_fun_fun_tree$) A_bool_bool_bool_fun_fun_fun_a_bool_fun_a_bool_bool_fun_fun_fun_fun_tree$)
(declare-fun node$av (A_bool_bool_bool_fun_fun_fun_a_bool_fun_a_bool_bool_fun_fun_fun_fun$ A_bool_bool_bool_fun_fun_fun_a_bool_fun_a_bool_bool_fun_fun_fun_fun_tree$ A_bool_bool_bool_fun_fun_fun_a_bool_fun_a_bool_bool_fun_fun_fun_fun_tree$) A_bool_bool_bool_fun_fun_fun_a_bool_fun_a_bool_bool_fun_fun_fun_fun_tree$)
(declare-fun selecyn$ (Bool_bool_bool_fun_fun_tree$) Bool_bool_bool_fun_fun$)
(declare-fun selecyo$ (Bool_bool_bool_fun_fun_tree$) Bool_bool_bool_fun_fun_tree$)
(declare-fun selecyp$ (Bool_bool_bool_fun_fun_tree$) Bool_bool_bool_fun_fun_tree$)
(declare-fun node$aw (Bool_bool_bool_fun_fun$ Bool_bool_bool_fun_fun_tree$ Bool_bool_bool_fun_fun_tree$) Bool_bool_bool_fun_fun_tree$)
(declare-fun selecyq$ (A_a_fun_a_bool_bool_fun_fun_fun_tree$) A_a_fun_a_bool_bool_fun_fun_fun$)
(declare-fun selecyr$ (A_a_fun_a_bool_bool_fun_fun_fun_tree$) A_a_fun_a_bool_bool_fun_fun_fun_tree$)
(declare-fun selecys$ (A_a_fun_a_bool_bool_fun_fun_fun_tree$) A_a_fun_a_bool_bool_fun_fun_fun_tree$)
(declare-fun node$ax (A_a_fun_a_bool_bool_fun_fun_fun$ A_a_fun_a_bool_bool_fun_fun_fun_tree$ A_a_fun_a_bool_bool_fun_fun_fun_tree$) A_a_fun_a_bool_bool_fun_fun_fun_tree$)
(declare-fun selecyt$ (A_a_bool_bool_fun_fun_fun_a_a_fun_a_bool_bool_fun_fun_fun_fun_tree$) A_a_bool_bool_fun_fun_fun_a_a_fun_a_bool_bool_fun_fun_fun_fun$)
(declare-fun selecyu$ (A_a_bool_bool_fun_fun_fun_a_a_fun_a_bool_bool_fun_fun_fun_fun_tree$) A_a_bool_bool_fun_fun_fun_a_a_fun_a_bool_bool_fun_fun_fun_fun_tree$)
(declare-fun selecyv$ (A_a_bool_bool_fun_fun_fun_a_a_fun_a_bool_bool_fun_fun_fun_fun_tree$) A_a_bool_bool_fun_fun_fun_a_a_fun_a_bool_bool_fun_fun_fun_fun_tree$)
(declare-fun node$ay (A_a_bool_bool_fun_fun_fun_a_a_fun_a_bool_bool_fun_fun_fun_fun$ A_a_bool_bool_fun_fun_fun_a_a_fun_a_bool_bool_fun_fun_fun_fun_tree$ A_a_bool_bool_fun_fun_fun_a_a_fun_a_bool_bool_fun_fun_fun_fun_tree$) A_a_bool_bool_fun_fun_fun_a_a_fun_a_bool_bool_fun_fun_fun_fun_tree$)
(declare-fun selecyw$ (A_bool_a_bool_fun_fun_fun_tree$) A_bool_a_bool_fun_fun_fun$)
(declare-fun selecyx$ (A_bool_a_bool_fun_fun_fun_tree$) A_bool_a_bool_fun_fun_fun_tree$)
(declare-fun selecyy$ (A_bool_a_bool_fun_fun_fun_tree$) A_bool_a_bool_fun_fun_fun_tree$)
(declare-fun node$az (A_bool_a_bool_fun_fun_fun$ A_bool_a_bool_fun_fun_fun_tree$ A_bool_a_bool_fun_fun_fun_tree$) A_bool_a_bool_fun_fun_fun_tree$)
(declare-fun selecyz$ (A_bool_fun_a_a_bool_fun_fun_fun_tree$) A_bool_fun_a_a_bool_fun_fun_fun$)
(declare-fun selecza$ (A_bool_fun_a_a_bool_fun_fun_fun_tree$) A_bool_fun_a_a_bool_fun_fun_fun_tree$)
(declare-fun seleczb$ (A_bool_fun_a_a_bool_fun_fun_fun_tree$) A_bool_fun_a_a_bool_fun_fun_fun_tree$)
(declare-fun node$ba (A_bool_fun_a_a_bool_fun_fun_fun$ A_bool_fun_a_a_bool_fun_fun_fun_tree$ A_bool_fun_a_a_bool_fun_fun_fun_tree$) A_bool_fun_a_a_bool_fun_fun_fun_tree$)
(declare-fun seleczc$ (A_bool_a_bool_fun_fun_fun_a_bool_fun_a_a_bool_fun_fun_fun_fun_tree$) A_bool_a_bool_fun_fun_fun_a_bool_fun_a_a_bool_fun_fun_fun_fun$)
(declare-fun seleczd$ (A_bool_a_bool_fun_fun_fun_a_bool_fun_a_a_bool_fun_fun_fun_fun_tree$) A_bool_a_bool_fun_fun_fun_a_bool_fun_a_a_bool_fun_fun_fun_fun_tree$)
(declare-fun selecze$ (A_bool_a_bool_fun_fun_fun_a_bool_fun_a_a_bool_fun_fun_fun_fun_tree$) A_bool_a_bool_fun_fun_fun_a_bool_fun_a_a_bool_fun_fun_fun_fun_tree$)
(declare-fun node$bb (A_bool_a_bool_fun_fun_fun_a_bool_fun_a_a_bool_fun_fun_fun_fun$ A_bool_a_bool_fun_fun_fun_a_bool_fun_a_a_bool_fun_fun_fun_fun_tree$ A_bool_a_bool_fun_fun_fun_a_bool_fun_a_a_bool_fun_fun_fun_fun_tree$) A_bool_a_bool_fun_fun_fun_a_bool_fun_a_a_bool_fun_fun_fun_fun_tree$)
(declare-fun seleczf$ (Bool_bool_fun_bool_bool_fun_fun_tree$) Bool_bool_fun_bool_bool_fun_fun$)
(declare-fun seleczg$ (Bool_bool_fun_bool_bool_fun_fun_tree$) Bool_bool_fun_bool_bool_fun_fun_tree$)
(declare-fun seleczh$ (Bool_bool_fun_bool_bool_fun_fun_tree$) Bool_bool_fun_bool_bool_fun_fun_tree$)
(declare-fun node$bc (Bool_bool_fun_bool_bool_fun_fun$ Bool_bool_fun_bool_bool_fun_fun_tree$ Bool_bool_fun_bool_bool_fun_fun_tree$) Bool_bool_fun_bool_bool_fun_fun_tree$)
(declare-fun seleczi$ (A_bool_fun_a_bool_fun_fun_a_bool_fun_a_bool_fun_fun_fun_tree$) A_bool_fun_a_bool_fun_fun_a_bool_fun_a_bool_fun_fun_fun$)
(declare-fun seleczj$ (A_bool_fun_a_bool_fun_fun_a_bool_fun_a_bool_fun_fun_fun_tree$) A_bool_fun_a_bool_fun_fun_a_bool_fun_a_bool_fun_fun_fun_tree$)
(declare-fun seleczk$ (A_bool_fun_a_bool_fun_fun_a_bool_fun_a_bool_fun_fun_fun_tree$) A_bool_fun_a_bool_fun_fun_a_bool_fun_a_bool_fun_fun_fun_tree$)
(declare-fun node$bd (A_bool_fun_a_bool_fun_fun_a_bool_fun_a_bool_fun_fun_fun$ A_bool_fun_a_bool_fun_fun_a_bool_fun_a_bool_fun_fun_fun_tree$ A_bool_fun_a_bool_fun_fun_a_bool_fun_a_bool_fun_fun_fun_tree$) A_bool_fun_a_bool_fun_fun_a_bool_fun_a_bool_fun_fun_fun_tree$)
(declare-fun seleczl$ (A_a_bool_fun_fun_a_a_bool_fun_fun_a_a_bool_fun_fun_fun_fun_tree$) A_a_bool_fun_fun_a_a_bool_fun_fun_a_a_bool_fun_fun_fun_fun$)
(declare-fun seleczm$ (A_a_bool_fun_fun_a_a_bool_fun_fun_a_a_bool_fun_fun_fun_fun_tree$) A_a_bool_fun_fun_a_a_bool_fun_fun_a_a_bool_fun_fun_fun_fun_tree$)
(declare-fun seleczn$ (A_a_bool_fun_fun_a_a_bool_fun_fun_a_a_bool_fun_fun_fun_fun_tree$) A_a_bool_fun_fun_a_a_bool_fun_fun_a_a_bool_fun_fun_fun_fun_tree$)
(declare-fun node$be (A_a_bool_fun_fun_a_a_bool_fun_fun_a_a_bool_fun_fun_fun_fun$ A_a_bool_fun_fun_a_a_bool_fun_fun_a_a_bool_fun_fun_fun_fun_tree$ A_a_bool_fun_fun_a_a_bool_fun_fun_a_a_bool_fun_fun_fun_fun_tree$) A_a_bool_fun_fun_a_a_bool_fun_fun_a_a_bool_fun_fun_fun_fun_tree$)
(declare-fun seleczo$ (A_bool_fun_a_a_fun_a_bool_fun_fun_fun_tree$) A_bool_fun_a_a_fun_a_bool_fun_fun_fun$)
(declare-fun seleczp$ (A_bool_fun_a_a_fun_a_bool_fun_fun_fun_tree$) A_bool_fun_a_a_fun_a_bool_fun_fun_fun_tree$)
(declare-fun seleczq$ (A_bool_fun_a_a_fun_a_bool_fun_fun_fun_tree$) A_bool_fun_a_a_fun_a_bool_fun_fun_fun_tree$)
(declare-fun node$bf (A_bool_fun_a_a_fun_a_bool_fun_fun_fun$ A_bool_fun_a_a_fun_a_bool_fun_fun_fun_tree$ A_bool_fun_a_a_fun_a_bool_fun_fun_fun_tree$) A_bool_fun_a_a_fun_a_bool_fun_fun_fun_tree$)
(declare-fun seleczr$ (Bool_bool_fun_a_bool_bool_fun_fun_fun_tree$) Bool_bool_fun_a_bool_bool_fun_fun_fun$)
(declare-fun seleczs$ (Bool_bool_fun_a_bool_bool_fun_fun_fun_tree$) Bool_bool_fun_a_bool_bool_fun_fun_fun_tree$)
(declare-fun seleczt$ (Bool_bool_fun_a_bool_bool_fun_fun_fun_tree$) Bool_bool_fun_a_bool_bool_fun_fun_fun_tree$)
(declare-fun node$bg (Bool_bool_fun_a_bool_bool_fun_fun_fun$ Bool_bool_fun_a_bool_bool_fun_fun_fun_tree$ Bool_bool_fun_a_bool_bool_fun_fun_fun_tree$) Bool_bool_fun_a_bool_bool_fun_fun_fun_tree$)
(declare-fun seleczu$ (Bool_bool_fun_a_bool_fun_a_bool_fun_fun_fun_tree$) Bool_bool_fun_a_bool_fun_a_bool_fun_fun_fun$)
(declare-fun seleczv$ (Bool_bool_fun_a_bool_fun_a_bool_fun_fun_fun_tree$) Bool_bool_fun_a_bool_fun_a_bool_fun_fun_fun_tree$)
(declare-fun seleczw$ (Bool_bool_fun_a_bool_fun_a_bool_fun_fun_fun_tree$) Bool_bool_fun_a_bool_fun_a_bool_fun_fun_fun_tree$)
(declare-fun node$bh (Bool_bool_fun_a_bool_fun_a_bool_fun_fun_fun$ Bool_bool_fun_a_bool_fun_a_bool_fun_fun_fun_tree$ Bool_bool_fun_a_bool_fun_a_bool_fun_fun_fun_tree$) Bool_bool_fun_a_bool_fun_a_bool_fun_fun_fun_tree$)
(declare-fun seleczx$ (Bool_bool_fun_bool_bool_fun_bool_bool_fun_fun_fun_tree$) Bool_bool_fun_bool_bool_fun_bool_bool_fun_fun_fun$)
(declare-fun seleczy$ (Bool_bool_fun_bool_bool_fun_bool_bool_fun_fun_fun_tree$) Bool_bool_fun_bool_bool_fun_bool_bool_fun_fun_fun_tree$)
(declare-fun seleczz$ (Bool_bool_fun_bool_bool_fun_bool_bool_fun_fun_fun_tree$) Bool_bool_fun_bool_bool_fun_bool_bool_fun_fun_fun_tree$)
(declare-fun node$bi (Bool_bool_fun_bool_bool_fun_bool_bool_fun_fun_fun$ Bool_bool_fun_bool_bool_fun_bool_bool_fun_fun_fun_tree$ Bool_bool_fun_bool_bool_fun_bool_bool_fun_fun_fun_tree$) Bool_bool_fun_bool_bool_fun_bool_bool_fun_fun_fun_tree$)
(declare-fun seledaa$ (Bool_a_fun_a_bool_fun_a_a_fun_fun_fun_tree$) Bool_a_fun_a_bool_fun_a_a_fun_fun_fun$)
(declare-fun seledab$ (Bool_a_fun_a_bool_fun_a_a_fun_fun_fun_tree$) Bool_a_fun_a_bool_fun_a_a_fun_fun_fun_tree$)
(declare-fun seledac$ (Bool_a_fun_a_bool_fun_a_a_fun_fun_fun_tree$) Bool_a_fun_a_bool_fun_a_a_fun_fun_fun_tree$)
(declare-fun node$bj (Bool_a_fun_a_bool_fun_a_a_fun_fun_fun$ Bool_a_fun_a_bool_fun_a_a_fun_fun_fun_tree$ Bool_a_fun_a_bool_fun_a_a_fun_fun_fun_tree$) Bool_a_fun_a_bool_fun_a_a_fun_fun_fun_tree$)
(declare-fun seledad$ (A_a_fun_a_a_fun_a_a_fun_fun_fun_tree$) A_a_fun_a_a_fun_a_a_fun_fun_fun$)
(declare-fun seledae$ (A_a_fun_a_a_fun_a_a_fun_fun_fun_tree$) A_a_fun_a_a_fun_a_a_fun_fun_fun_tree$)
(declare-fun seledaf$ (A_a_fun_a_a_fun_a_a_fun_fun_fun_tree$) A_a_fun_a_a_fun_a_a_fun_fun_fun_tree$)
(declare-fun node$bk (A_a_fun_a_a_fun_a_a_fun_fun_fun$ A_a_fun_a_a_fun_a_a_fun_fun_fun_tree$ A_a_fun_a_a_fun_a_a_fun_fun_fun_tree$) A_a_fun_a_a_fun_a_a_fun_fun_fun_tree$)
(declare-fun seledag$ (Bool_bool_fun_bool_fun_a_bool_bool_fun_fun_a_bool_fun_fun_fun_tree$) Bool_bool_fun_bool_fun_a_bool_bool_fun_fun_a_bool_fun_fun_fun$)
(declare-fun seledah$ (Bool_bool_fun_bool_fun_a_bool_bool_fun_fun_a_bool_fun_fun_fun_tree$) Bool_bool_fun_bool_fun_a_bool_bool_fun_fun_a_bool_fun_fun_fun_tree$)
(declare-fun seledai$ (Bool_bool_fun_bool_fun_a_bool_bool_fun_fun_a_bool_fun_fun_fun_tree$) Bool_bool_fun_bool_fun_a_bool_bool_fun_fun_a_bool_fun_fun_fun_tree$)
(declare-fun node$bl (Bool_bool_fun_bool_fun_a_bool_bool_fun_fun_a_bool_fun_fun_fun$ Bool_bool_fun_bool_fun_a_bool_bool_fun_fun_a_bool_fun_fun_fun_tree$ Bool_bool_fun_bool_fun_a_bool_bool_fun_fun_a_bool_fun_fun_fun_tree$) Bool_bool_fun_bool_fun_a_bool_bool_fun_fun_a_bool_fun_fun_fun_tree$)
(declare-fun seledaj$ (A_bool_fun_bool_fun_a_a_bool_fun_fun_a_bool_fun_fun_fun_tree$) A_bool_fun_bool_fun_a_a_bool_fun_fun_a_bool_fun_fun_fun$)
(declare-fun seledak$ (A_bool_fun_bool_fun_a_a_bool_fun_fun_a_bool_fun_fun_fun_tree$) A_bool_fun_bool_fun_a_a_bool_fun_fun_a_bool_fun_fun_fun_tree$)
(declare-fun seledal$ (A_bool_fun_bool_fun_a_a_bool_fun_fun_a_bool_fun_fun_fun_tree$) A_bool_fun_bool_fun_a_a_bool_fun_fun_a_bool_fun_fun_fun_tree$)
(declare-fun node$bm (A_bool_fun_bool_fun_a_a_bool_fun_fun_a_bool_fun_fun_fun$ A_bool_fun_bool_fun_a_a_bool_fun_fun_a_bool_fun_fun_fun_tree$ A_bool_fun_bool_fun_a_a_bool_fun_fun_a_bool_fun_fun_fun_tree$) A_bool_fun_bool_fun_a_a_bool_fun_fun_a_bool_fun_fun_fun_tree$)
(declare-fun seledam$ (Bool_bool_bool_fun_fun_a_bool_fun_a_bool_bool_fun_fun_fun_fun_tree$) Bool_bool_bool_fun_fun_a_bool_fun_a_bool_bool_fun_fun_fun_fun$)
(declare-fun seledan$ (Bool_bool_bool_fun_fun_a_bool_fun_a_bool_bool_fun_fun_fun_fun_tree$) Bool_bool_bool_fun_fun_a_bool_fun_a_bool_bool_fun_fun_fun_fun_tree$)
(declare-fun seledao$ (Bool_bool_bool_fun_fun_a_bool_fun_a_bool_bool_fun_fun_fun_fun_tree$) Bool_bool_bool_fun_fun_a_bool_fun_a_bool_bool_fun_fun_fun_fun_tree$)
(declare-fun node$bn (Bool_bool_bool_fun_fun_a_bool_fun_a_bool_bool_fun_fun_fun_fun$ Bool_bool_bool_fun_fun_a_bool_fun_a_bool_bool_fun_fun_fun_fun_tree$ Bool_bool_bool_fun_fun_a_bool_fun_a_bool_bool_fun_fun_fun_fun_tree$) Bool_bool_bool_fun_fun_a_bool_fun_a_bool_bool_fun_fun_fun_fun_tree$)
(declare-fun seledap$ (A_bool_bool_fun_fun_a_a_fun_a_bool_bool_fun_fun_fun_fun_tree$) A_bool_bool_fun_fun_a_a_fun_a_bool_bool_fun_fun_fun_fun$)
(declare-fun seledaq$ (A_bool_bool_fun_fun_a_a_fun_a_bool_bool_fun_fun_fun_fun_tree$) A_bool_bool_fun_fun_a_a_fun_a_bool_bool_fun_fun_fun_fun_tree$)
(declare-fun seledar$ (A_bool_bool_fun_fun_a_a_fun_a_bool_bool_fun_fun_fun_fun_tree$) A_bool_bool_fun_fun_a_a_fun_a_bool_bool_fun_fun_fun_fun_tree$)
(declare-fun node$bo (A_bool_bool_fun_fun_a_a_fun_a_bool_bool_fun_fun_fun_fun$ A_bool_bool_fun_fun_a_a_fun_a_bool_bool_fun_fun_fun_fun_tree$ A_bool_bool_fun_fun_a_a_fun_a_bool_bool_fun_fun_fun_fun_tree$) A_bool_bool_fun_fun_a_a_fun_a_bool_bool_fun_fun_fun_fun_tree$)
(declare-fun seledas$ (Bool_a_bool_fun_fun_a_bool_fun_a_a_bool_fun_fun_fun_fun_tree$) Bool_a_bool_fun_fun_a_bool_fun_a_a_bool_fun_fun_fun_fun$)
(declare-fun seledat$ (Bool_a_bool_fun_fun_a_bool_fun_a_a_bool_fun_fun_fun_fun_tree$) Bool_a_bool_fun_fun_a_bool_fun_a_a_bool_fun_fun_fun_fun_tree$)
(declare-fun seledau$ (Bool_a_bool_fun_fun_a_bool_fun_a_a_bool_fun_fun_fun_fun_tree$) Bool_a_bool_fun_fun_a_bool_fun_a_a_bool_fun_fun_fun_fun_tree$)
(declare-fun node$bp (Bool_a_bool_fun_fun_a_bool_fun_a_a_bool_fun_fun_fun_fun$ Bool_a_bool_fun_fun_a_bool_fun_a_a_bool_fun_fun_fun_fun_tree$ Bool_a_bool_fun_fun_a_bool_fun_a_a_bool_fun_fun_fun_fun_tree$) Bool_a_bool_fun_fun_a_bool_fun_a_a_bool_fun_fun_fun_fun_tree$)
(declare-fun seledav$ (A_bool_fun_a_fun_a_bool_fun_bool_fun_fun_tree$) A_bool_fun_a_fun_a_bool_fun_bool_fun_fun$)
(declare-fun seledaw$ (A_bool_fun_a_fun_a_bool_fun_bool_fun_fun_tree$) A_bool_fun_a_fun_a_bool_fun_bool_fun_fun_tree$)
(declare-fun seledax$ (A_bool_fun_a_fun_a_bool_fun_bool_fun_fun_tree$) A_bool_fun_a_fun_a_bool_fun_bool_fun_fun_tree$)
(declare-fun node$bq (A_bool_fun_a_fun_a_bool_fun_bool_fun_fun$ A_bool_fun_a_fun_a_bool_fun_bool_fun_fun_tree$ A_bool_fun_a_fun_a_bool_fun_bool_fun_fun_tree$) A_bool_fun_a_fun_a_bool_fun_bool_fun_fun_tree$)
(declare-fun seleday$ (A_bool_fun_a_bool_fun_fun_a_bool_fun_a_fun_a_bool_fun_bool_fun_fun_fun_tree$) A_bool_fun_a_bool_fun_fun_a_bool_fun_a_fun_a_bool_fun_bool_fun_fun_fun$)
(declare-fun seledaz$ (A_bool_fun_a_bool_fun_fun_a_bool_fun_a_fun_a_bool_fun_bool_fun_fun_fun_tree$) A_bool_fun_a_bool_fun_fun_a_bool_fun_a_fun_a_bool_fun_bool_fun_fun_fun_tree$)
(declare-fun seledba$ (A_bool_fun_a_bool_fun_fun_a_bool_fun_a_fun_a_bool_fun_bool_fun_fun_fun_tree$) A_bool_fun_a_bool_fun_fun_a_bool_fun_a_fun_a_bool_fun_bool_fun_fun_fun_tree$)
(declare-fun node$br (A_bool_fun_a_bool_fun_fun_a_bool_fun_a_fun_a_bool_fun_bool_fun_fun_fun$ A_bool_fun_a_bool_fun_fun_a_bool_fun_a_fun_a_bool_fun_bool_fun_fun_fun_tree$ A_bool_fun_a_bool_fun_fun_a_bool_fun_a_fun_a_bool_fun_bool_fun_fun_fun_tree$) A_bool_fun_a_bool_fun_fun_a_bool_fun_a_fun_a_bool_fun_bool_fun_fun_fun_tree$)
(declare-fun seledbb$ (A_a_bool_fun_fun_bool_fun_tree$) A_a_bool_fun_fun_bool_fun$)
(declare-fun seledbc$ (A_a_bool_fun_fun_bool_fun_tree$) A_a_bool_fun_fun_bool_fun_tree$)
(declare-fun seledbd$ (A_a_bool_fun_fun_bool_fun_tree$) A_a_bool_fun_fun_bool_fun_tree$)
(declare-fun node$bs (A_a_bool_fun_fun_bool_fun$ A_a_bool_fun_fun_bool_fun_tree$ A_a_bool_fun_fun_bool_fun_tree$) A_a_bool_fun_fun_bool_fun_tree$)
(declare-fun seledbe$ (A_a_bool_fun_fun_a_fun_a_a_bool_fun_fun_bool_fun_fun_tree$) A_a_bool_fun_fun_a_fun_a_a_bool_fun_fun_bool_fun_fun$)
(declare-fun seledbf$ (A_a_bool_fun_fun_a_fun_a_a_bool_fun_fun_bool_fun_fun_tree$) A_a_bool_fun_fun_a_fun_a_a_bool_fun_fun_bool_fun_fun_tree$)
(declare-fun seledbg$ (A_a_bool_fun_fun_a_fun_a_a_bool_fun_fun_bool_fun_fun_tree$) A_a_bool_fun_fun_a_fun_a_a_bool_fun_fun_bool_fun_fun_tree$)
(declare-fun node$bt (A_a_bool_fun_fun_a_fun_a_a_bool_fun_fun_bool_fun_fun$ A_a_bool_fun_fun_a_fun_a_a_bool_fun_fun_bool_fun_fun_tree$ A_a_bool_fun_fun_a_fun_a_a_bool_fun_fun_bool_fun_fun_tree$) A_a_bool_fun_fun_a_fun_a_a_bool_fun_fun_bool_fun_fun_tree$)
(declare-fun seledbh$ (A_a_bool_fun_fun_a_fun_tree$) A_a_bool_fun_fun_a_fun$)
(declare-fun seledbi$ (A_a_bool_fun_fun_a_fun_tree$) A_a_bool_fun_fun_a_fun_tree$)
(declare-fun seledbj$ (A_a_bool_fun_fun_a_fun_tree$) A_a_bool_fun_fun_a_fun_tree$)
(declare-fun node$bu (A_a_bool_fun_fun_a_fun$ A_a_bool_fun_fun_a_fun_tree$ A_a_bool_fun_fun_a_fun_tree$) A_a_bool_fun_fun_a_fun_tree$)
(declare-fun seledbk$ (A_a_bool_fun_fun_a_bool_fun_fun_a_a_bool_fun_fun_a_fun_a_a_bool_fun_fun_bool_fun_fun_fun_tree$) A_a_bool_fun_fun_a_bool_fun_fun_a_a_bool_fun_fun_a_fun_a_a_bool_fun_fun_bool_fun_fun_fun$)
(declare-fun seledbl$ (A_a_bool_fun_fun_a_bool_fun_fun_a_a_bool_fun_fun_a_fun_a_a_bool_fun_fun_bool_fun_fun_fun_tree$) A_a_bool_fun_fun_a_bool_fun_fun_a_a_bool_fun_fun_a_fun_a_a_bool_fun_fun_bool_fun_fun_fun_tree$)
(declare-fun seledbm$ (A_a_bool_fun_fun_a_bool_fun_fun_a_a_bool_fun_fun_a_fun_a_a_bool_fun_fun_bool_fun_fun_fun_tree$) A_a_bool_fun_fun_a_bool_fun_fun_a_a_bool_fun_fun_a_fun_a_a_bool_fun_fun_bool_fun_fun_fun_tree$)
(declare-fun node$bv (A_a_bool_fun_fun_a_bool_fun_fun_a_a_bool_fun_fun_a_fun_a_a_bool_fun_fun_bool_fun_fun_fun$ A_a_bool_fun_fun_a_bool_fun_fun_a_a_bool_fun_fun_a_fun_a_a_bool_fun_fun_bool_fun_fun_fun_tree$ A_a_bool_fun_fun_a_bool_fun_fun_a_a_bool_fun_fun_a_fun_a_a_bool_fun_fun_bool_fun_fun_fun_tree$) A_a_bool_fun_fun_a_bool_fun_fun_a_a_bool_fun_fun_a_fun_a_a_bool_fun_fun_bool_fun_fun_fun_tree$)
(declare-fun seledbn$ (A_bool_bool_fun_fun_a_bool_bool_fun_fun_fun_tree$) A_bool_bool_fun_fun_a_bool_bool_fun_fun_fun$)
(declare-fun seledbo$ (A_bool_bool_fun_fun_a_bool_bool_fun_fun_fun_tree$) A_bool_bool_fun_fun_a_bool_bool_fun_fun_fun_tree$)
(declare-fun seledbp$ (A_bool_bool_fun_fun_a_bool_bool_fun_fun_fun_tree$) A_bool_bool_fun_fun_a_bool_bool_fun_fun_fun_tree$)
(declare-fun node$bw (A_bool_bool_fun_fun_a_bool_bool_fun_fun_fun$ A_bool_bool_fun_fun_a_bool_bool_fun_fun_fun_tree$ A_bool_bool_fun_fun_a_bool_bool_fun_fun_fun_tree$) A_bool_bool_fun_fun_a_bool_bool_fun_fun_fun_tree$)
(declare-fun seledbq$ (A_bool_bool_fun_bool_bool_fun_fun_fun_a_bool_bool_fun_fun_a_bool_bool_fun_fun_fun_fun_tree$) A_bool_bool_fun_bool_bool_fun_fun_fun_a_bool_bool_fun_fun_a_bool_bool_fun_fun_fun_fun$)
(declare-fun seledbr$ (A_bool_bool_fun_bool_bool_fun_fun_fun_a_bool_bool_fun_fun_a_bool_bool_fun_fun_fun_fun_tree$) A_bool_bool_fun_bool_bool_fun_fun_fun_a_bool_bool_fun_fun_a_bool_bool_fun_fun_fun_fun_tree$)
(declare-fun seledbs$ (A_bool_bool_fun_bool_bool_fun_fun_fun_a_bool_bool_fun_fun_a_bool_bool_fun_fun_fun_fun_tree$) A_bool_bool_fun_bool_bool_fun_fun_fun_a_bool_bool_fun_fun_a_bool_bool_fun_fun_fun_fun_tree$)
(declare-fun node$bx (A_bool_bool_fun_bool_bool_fun_fun_fun_a_bool_bool_fun_fun_a_bool_bool_fun_fun_fun_fun$ A_bool_bool_fun_bool_bool_fun_fun_fun_a_bool_bool_fun_fun_a_bool_bool_fun_fun_fun_fun_tree$ A_bool_bool_fun_bool_bool_fun_fun_fun_a_bool_bool_fun_fun_a_bool_bool_fun_fun_fun_fun_tree$) A_bool_bool_fun_bool_bool_fun_fun_fun_a_bool_bool_fun_fun_a_bool_bool_fun_fun_fun_fun_tree$)
(declare-fun seledbt$ (A_bool_bool_fun_bool_bool_fun_fun_fun_tree$) A_bool_bool_fun_bool_bool_fun_fun_fun$)
(declare-fun seledbu$ (A_bool_bool_fun_bool_bool_fun_fun_fun_tree$) A_bool_bool_fun_bool_bool_fun_fun_fun_tree$)
(declare-fun seledbv$ (A_bool_bool_fun_bool_bool_fun_fun_fun_tree$) A_bool_bool_fun_bool_bool_fun_fun_fun_tree$)
(declare-fun node$by (A_bool_bool_fun_bool_bool_fun_fun_fun$ A_bool_bool_fun_bool_bool_fun_fun_fun_tree$ A_bool_bool_fun_bool_bool_fun_fun_fun_tree$) A_bool_bool_fun_bool_bool_fun_fun_fun_tree$)
(declare-fun seledbw$ (A_a_bool_fun_fun_a_bool_bool_fun_fun_fun_tree$) A_a_bool_fun_fun_a_bool_bool_fun_fun_fun$)
(declare-fun seledbx$ (A_a_bool_fun_fun_a_bool_bool_fun_fun_fun_tree$) A_a_bool_fun_fun_a_bool_bool_fun_fun_fun_tree$)
(declare-fun seledby$ (A_a_bool_fun_fun_a_bool_bool_fun_fun_fun_tree$) A_a_bool_fun_fun_a_bool_bool_fun_fun_fun_tree$)
(declare-fun node$bz (A_a_bool_fun_fun_a_bool_bool_fun_fun_fun$ A_a_bool_fun_fun_a_bool_bool_fun_fun_fun_tree$ A_a_bool_fun_fun_a_bool_bool_fun_fun_fun_tree$) A_a_bool_fun_fun_a_bool_bool_fun_fun_fun_tree$)
(declare-fun seledbz$ (A_a_bool_fun_bool_bool_fun_fun_fun_a_a_bool_fun_fun_a_bool_bool_fun_fun_fun_fun_tree$) A_a_bool_fun_bool_bool_fun_fun_fun_a_a_bool_fun_fun_a_bool_bool_fun_fun_fun_fun$)
(declare-fun seledca$ (A_a_bool_fun_bool_bool_fun_fun_fun_a_a_bool_fun_fun_a_bool_bool_fun_fun_fun_fun_tree$) A_a_bool_fun_bool_bool_fun_fun_fun_a_a_bool_fun_fun_a_bool_bool_fun_fun_fun_fun_tree$)
(declare-fun seledcb$ (A_a_bool_fun_bool_bool_fun_fun_fun_a_a_bool_fun_fun_a_bool_bool_fun_fun_fun_fun_tree$) A_a_bool_fun_bool_bool_fun_fun_fun_a_a_bool_fun_fun_a_bool_bool_fun_fun_fun_fun_tree$)
(declare-fun node$ca (A_a_bool_fun_bool_bool_fun_fun_fun_a_a_bool_fun_fun_a_bool_bool_fun_fun_fun_fun$ A_a_bool_fun_bool_bool_fun_fun_fun_a_a_bool_fun_fun_a_bool_bool_fun_fun_fun_fun_tree$ A_a_bool_fun_bool_bool_fun_fun_fun_a_a_bool_fun_fun_a_bool_bool_fun_fun_fun_fun_tree$) A_a_bool_fun_bool_bool_fun_fun_fun_a_a_bool_fun_fun_a_bool_bool_fun_fun_fun_fun_tree$)
(declare-fun seledcc$ (A_a_bool_fun_bool_bool_fun_fun_fun_tree$) A_a_bool_fun_bool_bool_fun_fun_fun$)
(declare-fun seledcd$ (A_a_bool_fun_bool_bool_fun_fun_fun_tree$) A_a_bool_fun_bool_bool_fun_fun_fun_tree$)
(declare-fun seledce$ (A_a_bool_fun_bool_bool_fun_fun_fun_tree$) A_a_bool_fun_bool_bool_fun_fun_fun_tree$)
(declare-fun node$cb (A_a_bool_fun_bool_bool_fun_fun_fun$ A_a_bool_fun_bool_bool_fun_fun_fun_tree$ A_a_bool_fun_bool_bool_fun_fun_fun_tree$) A_a_bool_fun_bool_bool_fun_fun_fun_tree$)
(declare-sort Dir$ 0)
(declare-sort Dir_list$ 0)
(declare-fun l$ () Dir$)
(declare-fun r$ () Dir$)
(declare-fun nil$ () Dir_list$)
(declare-fun hd$ (Dir_list$) Dir$)
(declare-fun tl$ (Dir_list$) Dir_list$)
(declare-fun cons$ (Dir$ Dir_list$) Dir_list$)
(declare-sort A_a_bool_fun_fun_a_a_bool_fun_fun_a_a_bool_fun_fun_fun_fun_a_a_bool_fun_fun_a_a_bool_fun_fun_fun_fun_tree$ 0)
(declare-sort A_a_fun_a_a_fun_a_bool_fun_fun_fun_tree$ 0)
(declare-sort A_a_fun_a_a_fun_a_bool_fun_fun_fun_a_a_fun_a_bool_fun_fun_fun_tree$ 0)
(declare-sort A_a_bool_bool_fun_fun_fun_a_bool_bool_fun_fun_fun_tree$ 0)
(declare-sort A_a_a_bool_fun_fun_fun_a_a_bool_fun_fun_fun_tree$ 0)
(declare-sort A_a_a_fun_fun_a_a_fun_fun_tree$ 0)
(declare-sort A_bool_fun_a_bool_fun_a_bool_fun_fun_fun_tree$ 0)
(declare-sort A_bool_fun_a_a_bool_fun_fun_a_bool_fun_fun_fun_tree$ 0)
(declare-sort Bool_a_bool_fun_fun_bool_bool_fun_fun_tree$ 0)
(declare-sort Bool_a_bool_fun_bool_fun_fun_bool_a_bool_fun_fun_bool_bool_fun_fun_fun_tree$ 0)
(declare-sort Bool_a_bool_fun_bool_fun_fun_tree$ 0)
(declare-sort A_a_fun_a_bool_fun_fun_a_bool_fun_fun_tree$ 0)
(declare-sort A_a_bool_fun_fun_a_a_bool_fun_fun_fun_a_a_bool_fun_fun_fun_tree$ 0)
(declare-sort A_bool_bool_fun_fun_bool_bool_fun_fun_tree$ 0)
(declare-fun seledcf$ (A_a_bool_fun_fun_a_a_bool_fun_fun_a_a_bool_fun_fun_fun_fun_a_a_bool_fun_fun_a_a_bool_fun_fun_fun_fun_tree$) A_a_bool_fun_fun_a_a_bool_fun_fun_a_a_bool_fun_fun_fun_fun_a_a_bool_fun_fun_a_a_bool_fun_fun_fun_fun$)
(declare-fun seledcg$ (A_a_bool_fun_fun_a_a_bool_fun_fun_a_a_bool_fun_fun_fun_fun_a_a_bool_fun_fun_a_a_bool_fun_fun_fun_fun_tree$) A_a_bool_fun_fun_a_a_bool_fun_fun_a_a_bool_fun_fun_fun_fun_a_a_bool_fun_fun_a_a_bool_fun_fun_fun_fun_tree$)
(declare-fun seledch$ (A_a_bool_fun_fun_a_a_bool_fun_fun_a_a_bool_fun_fun_fun_fun_a_a_bool_fun_fun_a_a_bool_fun_fun_fun_fun_tree$) A_a_bool_fun_fun_a_a_bool_fun_fun_a_a_bool_fun_fun_fun_fun_a_a_bool_fun_fun_a_a_bool_fun_fun_fun_fun_tree$)
(declare-fun node$cc (A_a_bool_fun_fun_a_a_bool_fun_fun_a_a_bool_fun_fun_fun_fun_a_a_bool_fun_fun_a_a_bool_fun_fun_fun_fun$ A_a_bool_fun_fun_a_a_bool_fun_fun_a_a_bool_fun_fun_fun_fun_a_a_bool_fun_fun_a_a_bool_fun_fun_fun_fun_tree$ A_a_bool_fun_fun_a_a_bool_fun_fun_a_a_bool_fun_fun_fun_fun_a_a_bool_fun_fun_a_a_bool_fun_fun_fun_fun_tree$) A_a_bool_fun_fun_a_a_bool_fun_fun_a_a_bool_fun_fun_fun_fun_a_a_bool_fun_fun_a_a_bool_fun_fun_fun_fun_tree$)
(declare-fun seledci$ (A_a_fun_a_a_fun_a_bool_fun_fun_fun_tree$) A_a_fun_a_a_fun_a_bool_fun_fun_fun$)
(declare-fun seledcj$ (A_a_fun_a_a_fun_a_bool_fun_fun_fun_tree$) A_a_fun_a_a_fun_a_bool_fun_fun_fun_tree$)
(declare-fun seledck$ (A_a_fun_a_a_fun_a_bool_fun_fun_fun_tree$) A_a_fun_a_a_fun_a_bool_fun_fun_fun_tree$)
(declare-fun node$cd (A_a_fun_a_a_fun_a_bool_fun_fun_fun$ A_a_fun_a_a_fun_a_bool_fun_fun_fun_tree$ A_a_fun_a_a_fun_a_bool_fun_fun_fun_tree$) A_a_fun_a_a_fun_a_bool_fun_fun_fun_tree$)
(declare-fun seledcl$ (A_a_fun_a_a_fun_a_bool_fun_fun_fun_a_a_fun_a_bool_fun_fun_fun_tree$) A_a_fun_a_a_fun_a_bool_fun_fun_fun_a_a_fun_a_bool_fun_fun_fun$)
(declare-fun seledcm$ (A_a_fun_a_a_fun_a_bool_fun_fun_fun_a_a_fun_a_bool_fun_fun_fun_tree$) A_a_fun_a_a_fun_a_bool_fun_fun_fun_a_a_fun_a_bool_fun_fun_fun_tree$)
(declare-fun seledcn$ (A_a_fun_a_a_fun_a_bool_fun_fun_fun_a_a_fun_a_bool_fun_fun_fun_tree$) A_a_fun_a_a_fun_a_bool_fun_fun_fun_a_a_fun_a_bool_fun_fun_fun_tree$)
(declare-fun node$ce (A_a_fun_a_a_fun_a_bool_fun_fun_fun_a_a_fun_a_bool_fun_fun_fun$ A_a_fun_a_a_fun_a_bool_fun_fun_fun_a_a_fun_a_bool_fun_fun_fun_tree$ A_a_fun_a_a_fun_a_bool_fun_fun_fun_a_a_fun_a_bool_fun_fun_fun_tree$) A_a_fun_a_a_fun_a_bool_fun_fun_fun_a_a_fun_a_bool_fun_fun_fun_tree$)
(declare-fun seledco$ (A_a_bool_bool_fun_fun_fun_a_bool_bool_fun_fun_fun_tree$) A_a_bool_bool_fun_fun_fun_a_bool_bool_fun_fun_fun$)
(declare-fun seledcp$ (A_a_bool_bool_fun_fun_fun_a_bool_bool_fun_fun_fun_tree$) A_a_bool_bool_fun_fun_fun_a_bool_bool_fun_fun_fun_tree$)
(declare-fun seledcq$ (A_a_bool_bool_fun_fun_fun_a_bool_bool_fun_fun_fun_tree$) A_a_bool_bool_fun_fun_fun_a_bool_bool_fun_fun_fun_tree$)
(declare-fun node$cf (A_a_bool_bool_fun_fun_fun_a_bool_bool_fun_fun_fun$ A_a_bool_bool_fun_fun_fun_a_bool_bool_fun_fun_fun_tree$ A_a_bool_bool_fun_fun_fun_a_bool_bool_fun_fun_fun_tree$) A_a_bool_bool_fun_fun_fun_a_bool_bool_fun_fun_fun_tree$)
(declare-fun seledcr$ (A_a_a_bool_fun_fun_fun_a_a_bool_fun_fun_fun_tree$) A_a_a_bool_fun_fun_fun_a_a_bool_fun_fun_fun$)
(declare-fun seledcs$ (A_a_a_bool_fun_fun_fun_a_a_bool_fun_fun_fun_tree$) A_a_a_bool_fun_fun_fun_a_a_bool_fun_fun_fun_tree$)
(declare-fun seledct$ (A_a_a_bool_fun_fun_fun_a_a_bool_fun_fun_fun_tree$) A_a_a_bool_fun_fun_fun_a_a_bool_fun_fun_fun_tree$)
(declare-fun node$cg (A_a_a_bool_fun_fun_fun_a_a_bool_fun_fun_fun$ A_a_a_bool_fun_fun_fun_a_a_bool_fun_fun_fun_tree$ A_a_a_bool_fun_fun_fun_a_a_bool_fun_fun_fun_tree$) A_a_a_bool_fun_fun_fun_a_a_bool_fun_fun_fun_tree$)
(declare-fun seledcu$ (A_a_a_fun_fun_a_a_fun_fun_tree$) A_a_a_fun_fun_a_a_fun_fun$)
(declare-fun seledcv$ (A_a_a_fun_fun_a_a_fun_fun_tree$) A_a_a_fun_fun_a_a_fun_fun_tree$)
(declare-fun seledcw$ (A_a_a_fun_fun_a_a_fun_fun_tree$) A_a_a_fun_fun_a_a_fun_fun_tree$)
(declare-fun node$ch (A_a_a_fun_fun_a_a_fun_fun$ A_a_a_fun_fun_a_a_fun_fun_tree$ A_a_a_fun_fun_a_a_fun_fun_tree$) A_a_a_fun_fun_a_a_fun_fun_tree$)
(declare-fun seledcx$ (A_bool_fun_a_bool_fun_a_bool_fun_fun_fun_tree$) A_bool_fun_a_bool_fun_a_bool_fun_fun_fun$)
(declare-fun seledcy$ (A_bool_fun_a_bool_fun_a_bool_fun_fun_fun_tree$) A_bool_fun_a_bool_fun_a_bool_fun_fun_fun_tree$)
(declare-fun seledcz$ (A_bool_fun_a_bool_fun_a_bool_fun_fun_fun_tree$) A_bool_fun_a_bool_fun_a_bool_fun_fun_fun_tree$)
(declare-fun node$ci (A_bool_fun_a_bool_fun_a_bool_fun_fun_fun$ A_bool_fun_a_bool_fun_a_bool_fun_fun_fun_tree$ A_bool_fun_a_bool_fun_a_bool_fun_fun_fun_tree$) A_bool_fun_a_bool_fun_a_bool_fun_fun_fun_tree$)
(declare-fun seledda$ (A_bool_fun_a_a_bool_fun_fun_a_bool_fun_fun_fun_tree$) A_bool_fun_a_a_bool_fun_fun_a_bool_fun_fun_fun$)
(declare-fun seleddb$ (A_bool_fun_a_a_bool_fun_fun_a_bool_fun_fun_fun_tree$) A_bool_fun_a_a_bool_fun_fun_a_bool_fun_fun_fun_tree$)
(declare-fun seleddc$ (A_bool_fun_a_a_bool_fun_fun_a_bool_fun_fun_fun_tree$) A_bool_fun_a_a_bool_fun_fun_a_bool_fun_fun_fun_tree$)
(declare-fun node$cj (A_bool_fun_a_a_bool_fun_fun_a_bool_fun_fun_fun$ A_bool_fun_a_a_bool_fun_fun_a_bool_fun_fun_fun_tree$ A_bool_fun_a_a_bool_fun_fun_a_bool_fun_fun_fun_tree$) A_bool_fun_a_a_bool_fun_fun_a_bool_fun_fun_fun_tree$)
(declare-fun seleddd$ (Bool_a_bool_fun_fun_bool_bool_fun_fun_tree$) Bool_a_bool_fun_fun_bool_bool_fun_fun$)
(declare-fun seledde$ (Bool_a_bool_fun_fun_bool_bool_fun_fun_tree$) Bool_a_bool_fun_fun_bool_bool_fun_fun_tree$)
(declare-fun seleddf$ (Bool_a_bool_fun_fun_bool_bool_fun_fun_tree$) Bool_a_bool_fun_fun_bool_bool_fun_fun_tree$)
(declare-fun node$ck (Bool_a_bool_fun_fun_bool_bool_fun_fun$ Bool_a_bool_fun_fun_bool_bool_fun_fun_tree$ Bool_a_bool_fun_fun_bool_bool_fun_fun_tree$) Bool_a_bool_fun_fun_bool_bool_fun_fun_tree$)
(declare-fun seleddg$ (Bool_a_bool_fun_bool_fun_fun_bool_a_bool_fun_fun_bool_bool_fun_fun_fun_tree$) Bool_a_bool_fun_bool_fun_fun_bool_a_bool_fun_fun_bool_bool_fun_fun_fun$)
(declare-fun seleddh$ (Bool_a_bool_fun_bool_fun_fun_bool_a_bool_fun_fun_bool_bool_fun_fun_fun_tree$) Bool_a_bool_fun_bool_fun_fun_bool_a_bool_fun_fun_bool_bool_fun_fun_fun_tree$)
(declare-fun seleddi$ (Bool_a_bool_fun_bool_fun_fun_bool_a_bool_fun_fun_bool_bool_fun_fun_fun_tree$) Bool_a_bool_fun_bool_fun_fun_bool_a_bool_fun_fun_bool_bool_fun_fun_fun_tree$)
(declare-fun node$cl (Bool_a_bool_fun_bool_fun_fun_bool_a_bool_fun_fun_bool_bool_fun_fun_fun$ Bool_a_bool_fun_bool_fun_fun_bool_a_bool_fun_fun_bool_bool_fun_fun_fun_tree$ Bool_a_bool_fun_bool_fun_fun_bool_a_bool_fun_fun_bool_bool_fun_fun_fun_tree$) Bool_a_bool_fun_bool_fun_fun_bool_a_bool_fun_fun_bool_bool_fun_fun_fun_tree$)
(declare-fun seleddj$ (Bool_a_bool_fun_bool_fun_fun_tree$) Bool_a_bool_fun_bool_fun_fun$)
(declare-fun seleddk$ (Bool_a_bool_fun_bool_fun_fun_tree$) Bool_a_bool_fun_bool_fun_fun_tree$)
(declare-fun seleddl$ (Bool_a_bool_fun_bool_fun_fun_tree$) Bool_a_bool_fun_bool_fun_fun_tree$)
(declare-fun node$cm (Bool_a_bool_fun_bool_fun_fun$ Bool_a_bool_fun_bool_fun_fun_tree$ Bool_a_bool_fun_bool_fun_fun_tree$) Bool_a_bool_fun_bool_fun_fun_tree$)
(declare-fun seleddm$ (A_a_fun_a_bool_fun_fun_a_bool_fun_fun_tree$) A_a_fun_a_bool_fun_fun_a_bool_fun_fun$)
(declare-fun seleddn$ (A_a_fun_a_bool_fun_fun_a_bool_fun_fun_tree$) A_a_fun_a_bool_fun_fun_a_bool_fun_fun_tree$)
(declare-fun seleddo$ (A_a_fun_a_bool_fun_fun_a_bool_fun_fun_tree$) A_a_fun_a_bool_fun_fun_a_bool_fun_fun_tree$)
(declare-fun node$cn (A_a_fun_a_bool_fun_fun_a_bool_fun_fun$ A_a_fun_a_bool_fun_fun_a_bool_fun_fun_tree$ A_a_fun_a_bool_fun_fun_a_bool_fun_fun_tree$) A_a_fun_a_bool_fun_fun_a_bool_fun_fun_tree$)
(declare-fun seleddp$ (A_a_bool_fun_fun_a_a_bool_fun_fun_fun_a_a_bool_fun_fun_fun_tree$) A_a_bool_fun_fun_a_a_bool_fun_fun_fun_a_a_bool_fun_fun_fun$)
(declare-fun seleddq$ (A_a_bool_fun_fun_a_a_bool_fun_fun_fun_a_a_bool_fun_fun_fun_tree$) A_a_bool_fun_fun_a_a_bool_fun_fun_fun_a_a_bool_fun_fun_fun_tree$)
(declare-fun seleddr$ (A_a_bool_fun_fun_a_a_bool_fun_fun_fun_a_a_bool_fun_fun_fun_tree$) A_a_bool_fun_fun_a_a_bool_fun_fun_fun_a_a_bool_fun_fun_fun_tree$)
(declare-fun node$co (A_a_bool_fun_fun_a_a_bool_fun_fun_fun_a_a_bool_fun_fun_fun$ A_a_bool_fun_fun_a_a_bool_fun_fun_fun_a_a_bool_fun_fun_fun_tree$ A_a_bool_fun_fun_a_a_bool_fun_fun_fun_a_a_bool_fun_fun_fun_tree$) A_a_bool_fun_fun_a_a_bool_fun_fun_fun_a_a_bool_fun_fun_fun_tree$)
(declare-fun seledds$ (A_bool_bool_fun_fun_bool_bool_fun_fun_tree$) A_bool_bool_fun_fun_bool_bool_fun_fun$)
(declare-fun seleddt$ (A_bool_bool_fun_fun_bool_bool_fun_fun_tree$) A_bool_bool_fun_fun_bool_bool_fun_fun_tree$)
(declare-fun seleddu$ (A_bool_bool_fun_fun_bool_bool_fun_fun_tree$) A_bool_bool_fun_fun_bool_bool_fun_fun_tree$)
(declare-fun node$cp (A_bool_bool_fun_fun_bool_bool_fun_fun$ A_bool_bool_fun_fun_bool_bool_fun_fun_tree$ A_bool_bool_fun_fun_bool_bool_fun_fun_tree$) A_bool_bool_fun_fun_bool_bool_fun_fun_tree$)
(declare-fun p$ () A_bool_fun$)
(declare-fun t$ () A_tree$)
(declare-fun id$ () Bool_bool_fun_bool_bool_fun_fun$)
(declare-fun uu$ () A_a_bool_fun_fun$)
(declare-fun id$a () Bool_bool_fun$)
(declare-fun id$b () A_bool_fun_a_bool_fun_fun_a_bool_fun_a_bool_fun_fun_fun$)
(declare-fun id$c () A_a_bool_fun_fun_a_a_bool_fun_fun_fun$)
(declare-fun id$d () A_a_fun$)
(declare-fun id$e () A_bool_fun_a_bool_fun_fun$)
(declare-fun id$f () Bool_bool_fun_tree_bool_bool_fun_tree_fun$)
(declare-fun id$g () A_bool_fun_a_bool_fun_fun_tree_a_bool_fun_a_bool_fun_fun_tree_fun$)
(declare-fun id$h () Bool_tree_bool_tree_fun$)
(declare-fun id$i () A_bool_fun_tree_a_bool_fun_tree_fun$)
(declare-fun uua$ () A_bool_bool_fun_fun_a_bool_fun_a_bool_fun_fun_fun$)
(declare-fun uub$ () A_a_bool_fun_fun_a_a_fun_a_bool_fun_fun_fun$)
(declare-fun uuc$ (A_bool_fun_a_bool_fun_fun$) A_bool_fun_a_fun_a_bool_fun_bool_fun_fun$)
(declare-fun uud$ (A_bool_bool_fun_bool_fun_fun$) A_bool_bool_fun_fun_a_bool_fun_fun$)
(declare-fun uue$ (A_a_bool_fun_bool_fun_fun$) A_a_bool_fun_fun_a_bool_fun_fun$)
(declare-fun uuf$ (A_bool_bool_bool_fun_fun_fun$) A_bool_fun_a_bool_bool_fun_fun_fun$)
(declare-fun uug$ (A_bool_a_bool_fun_fun_fun$) A_bool_fun_a_a_bool_fun_fun_fun$)
(declare-fun uuh$ (A_a_bool_fun_fun_a_bool_fun_fun$ A_a_bool_fun_fun_a_fun$) A_a_bool_fun_fun_bool_fun$)
(declare-fun uui$ (A_bool_bool_fun_bool_bool_fun_fun_fun$) A_bool_bool_fun_fun_a_bool_bool_fun_fun_fun$)
(declare-fun uuj$ (A_a_bool_fun_bool_bool_fun_fun_fun$) A_a_bool_fun_fun_a_bool_bool_fun_fun_fun$)
(declare-fun uuk$ (A_set$) A_bool_fun$)
(declare-fun uul$ () A_a_bool_fun_fun_a_a_bool_fun_fun_fun$)
(declare-fun uum$ () A_bool_fun_a_bool_fun_fun$)
(declare-fun uun$ () Bool_a_bool_fun_fun$)
(declare-fun uuo$ () Bool_bool_fun$)
(declare-fun uup$ () A_a_bool_fun_fun_a_a_bool_fun_fun_a_a_bool_fun_fun_fun_fun_a_a_bool_fun_fun_a_a_bool_fun_fun_fun_fun$)
(declare-fun uuq$ () A_a_fun_a_a_fun_a_bool_fun_fun_fun_a_a_fun_a_bool_fun_fun_fun$)
(declare-fun uur$ () A_a_bool_bool_fun_fun_fun_a_bool_bool_fun_fun_fun$)
(declare-fun uus$ () A_a_a_bool_fun_fun_fun_a_a_bool_fun_fun_fun$)
(declare-fun uut$ () A_a_a_fun_fun_a_a_fun_fun$)
(declare-fun uuu$ () A_a_bool_fun_fun_a_bool_fun_fun$)
(declare-fun uuv$ (A_bool_fun$) A_bool_fun_a_bool_fun_fun$)
(declare-fun uuw$ (A_bool_fun$) A_a_bool_fun_fun_a_bool_fun_fun$)
(declare-fun uux$ (Bool_bool_fun$) A_bool_bool_fun_fun$)
(declare-fun uuy$ (A_bool_fun$) A_a_bool_fun_fun$)
(declare-fun uuz$ (A_bool_fun$) A_a_fun_a_bool_fun_fun$)
(declare-fun uva$ (A_a_bool_fun_fun$) A_a_bool_fun_fun_a_a_bool_fun_fun_fun$)
(declare-fun uvb$ (A$) A_a_fun$)
(declare-fun uvc$ (A_a_fun$) A_a_fun_a_bool_fun_fun_a_bool_fun_fun$)
(declare-fun uvd$ (A_a_bool_fun_fun$) A_a_bool_fun_fun_a_a_bool_fun_fun_fun_a_a_bool_fun_fun_fun$)
(declare-fun uve$ (A$) A_bool_bool_fun_fun_bool_bool_fun_fun$)
(declare-fun uvf$ (A$) A_a_fun_a_fun$)
(declare-fun uvg$ (A$) A_a_bool_fun_fun_a_bool_fun_fun$)
(declare-fun uvh$ (A$) A_bool_fun_bool_fun$)
(declare-fun uvi$ (A_bool_fun_a_bool_fun_fun$) A_bool_fun_a_bool_fun_fun_a_bool_fun_a_bool_fun_fun_fun$)
(declare-fun uvj$ (Bool_bool_fun$) Bool_bool_fun_bool_bool_fun_fun$)
(declare-fun comp$ () Bool_bool_fun_bool_bool_fun_bool_bool_fun_fun_fun$)
(declare-fun comp$a (A_bool_fun_a_bool_fun_fun$) A_bool_fun_a_bool_fun_fun_a_bool_fun_a_bool_fun_fun_fun$)
(declare-fun comp$b () Bool_bool_fun_a_bool_fun_a_bool_fun_fun_fun$)
(declare-fun comp$c () A_bool_fun_a_a_fun_a_bool_fun_fun_fun$)
(declare-fun comp$d () Bool_a_fun_a_bool_fun_a_a_fun_fun_fun$)
(declare-fun comp$e () A_a_fun_a_a_fun_a_a_fun_fun_fun$)
(declare-fun comp$f () Bool_bool_fun_bool_fun_a_bool_bool_fun_fun_a_bool_fun_fun_fun$)
(declare-fun comp$g () A_bool_fun_bool_fun_a_a_bool_fun_fun_a_bool_fun_fun_fun$)
(declare-fun comp$h () Bool_bool_bool_fun_fun_a_bool_fun_a_bool_bool_fun_fun_fun_fun$)
(declare-fun comp$i () A_bool_bool_fun_fun_a_a_fun_a_bool_bool_fun_fun_fun_fun$)
(declare-fun comp$j () Bool_a_bool_fun_fun_a_bool_fun_a_a_bool_fun_fun_fun_fun$)
(declare-fun comp$k (A_bool_fun$) Bool_a_fun_bool_bool_fun_fun$)
(declare-fun comp$l (A_tree_bool_tree_fun$ A_tree_a_tree_fun$) A_tree_bool_tree_fun$)
(declare-fun comp$m (Bool_tree_bool_tree_fun$ A_tree_bool_tree_fun$) A_tree_bool_tree_fun$)
(declare-fun comp$n (A_tree_bool_tree_fun$ Bool_tree_a_tree_fun$) Bool_tree_bool_tree_fun$)
(declare-fun comp$o (Bool_tree_bool_tree_fun$ Bool_tree_bool_tree_fun$) Bool_tree_bool_tree_fun$)
(declare-fun comp$p (Bool_tree_a_bool_fun_tree_fun$ A_tree_bool_tree_fun$) A_tree_a_bool_fun_tree_fun$)
(declare-fun comp$q (A_bool_fun_tree_bool_tree_fun$ A_tree_a_bool_fun_tree_fun$) A_tree_bool_tree_fun$)
(declare-fun comp$r (A_bool_fun_bool_fun$) Bool_a_bool_fun_fun_bool_bool_fun_fun$)
(declare-fun comp$s (A_bool_fun_tree_bool_tree_fun$ Bool_tree_a_bool_fun_tree_fun$) Bool_tree_bool_tree_fun$)
(declare-fun comp$t (Bool_a_bool_fun_fun$) Bool_bool_fun_bool_a_bool_fun_fun_fun$)
(declare-fun comp$u (Bool_tree_a_bool_fun_tree_fun$ Bool_tree_bool_tree_fun$) Bool_tree_a_bool_fun_tree_fun$)
(declare-fun comp$v (A_bool_fun$) A_bool_fun_a_fun_a_bool_fun_bool_fun_fun$)
(declare-fun comp$w (A_tree_bool_tree_fun$ A_bool_fun_tree_a_tree_fun$) A_bool_fun_tree_bool_tree_fun$)
(declare-fun comp$x (Bool_bool_fun$) A_bool_fun_bool_fun_a_bool_fun_bool_fun_fun$)
(declare-fun comp$y (Bool_tree_bool_tree_fun$ A_bool_fun_tree_bool_tree_fun$) A_bool_fun_tree_bool_tree_fun$)
(declare-fun comp$z (A_bool_fun_a_bool_fun_fun$) Bool_a_bool_fun_fun_bool_a_bool_fun_fun_fun$)
(declare-fun c_tree$ () A_a_bool_fun_fun_a_a_bool_fun_fun_fun_tree$)
(declare-fun comp$aa (A_bool_fun_bool_fun$) A_bool_fun_a_bool_fun_fun_a_bool_fun_bool_fun_fun$)
(declare-fun i_tree$ () Bool_bool_fun_bool_bool_fun_fun_tree$)
(declare-fun k_tree$ () A_a_bool_fun_fun_a_a_bool_fun_fun_a_a_bool_fun_fun_fun_fun_tree$)
(declare-fun member$ (A$ A_set$) Bool)
(declare-fun node$cq (Bool Bool_tree$ Bool_tree$) Bool_tree$)
(declare-fun s_tree$ () A_bool_bool_fun_fun_a_bool_fun_a_bool_fun_fun_fun_tree$)
(declare-fun ap_tree$ (A_bool_fun_tree$ A_tree$) Bool_tree$)
(declare-fun c_tree$a () Bool_a_bool_fun_fun_a_bool_bool_fun_fun_fun_tree$)
(declare-fun c_tree$b () A_bool_bool_fun_fun_bool_a_bool_fun_fun_fun_tree$)
(declare-fun c_tree$c () A_a_a_fun_fun_a_a_a_fun_fun_fun_tree$)
(declare-fun c_tree$d () A_a_fun_a_bool_fun_fun_a_a_a_fun_bool_fun_fun_fun_tree$)
(declare-fun c_tree$e () A_a_a_fun_bool_fun_fun_a_a_fun_a_bool_fun_fun_fun_tree$)
(declare-fun c_tree$f () A_a_bool_bool_fun_fun_fun_a_a_bool_bool_fun_fun_fun_fun_tree$)
(declare-fun c_tree$g () A_a_a_bool_fun_fun_fun_a_a_a_bool_fun_fun_fun_fun_tree$)
(declare-fun c_tree$h () A_a_fun_a_a_bool_fun_fun_fun_a_a_a_fun_a_bool_fun_fun_fun_fun_tree$)
(declare-fun c_tree$i () A_a_a_fun_a_bool_fun_fun_fun_a_a_fun_a_a_bool_fun_fun_fun_fun_tree$)
(declare-fun collect$ (A_bool_fun$) A_set$)
(declare-fun fun_app$ (A_a_bool_fun_fun_a_a_bool_fun_fun_fun$ A_a_bool_fun_fun$) A_a_bool_fun_fun$)
(declare-fun i_tree$a () Bool_bool_fun_tree$)
(declare-fun i_tree$b () A_bool_fun_a_bool_fun_fun_a_bool_fun_a_bool_fun_fun_fun_tree$)
(declare-fun i_tree$c () A_bool_fun_a_bool_fun_fun_tree$)
(declare-fun i_tree$d () A_a_bool_fun_fun_a_a_bool_fun_fun_fun_tree$)
(declare-fun i_tree$e () A_a_fun_tree$)
(declare-fun k_tree$a () A_bool_fun_a_a_fun_a_bool_fun_fun_fun_tree$)
(declare-fun k_tree$b () Bool_bool_fun_a_bool_bool_fun_fun_fun_tree$)
(declare-fun k_tree$c () A_bool_fun_a_a_bool_fun_fun_fun_tree$)
(declare-fun k_tree$d () A_a_a_fun_fun_tree$)
(declare-fun k_tree$e () Bool_a_bool_fun_fun_tree$)
(declare-fun k_tree$f () A_bool_fun_a_bool_fun_a_bool_fun_fun_fun_tree$)
(declare-fun k_tree$g () A_bool_fun_a_a_bool_fun_fun_a_bool_fun_fun_fun_tree$)
(declare-fun k_tree$h () Bool_a_bool_fun_bool_fun_fun_tree$)
(declare-fun member$a (Bool Bool_set$) Bool)
(declare-fun member$b (A_bool_fun$ A_bool_fun_set$) Bool)
(declare-fun s_tree$a () A_a_bool_fun_fun_a_a_fun_a_bool_fun_fun_fun_tree$)
(declare-fun s_tree$b () A_bool_a_fun_fun_a_bool_fun_a_a_fun_fun_fun_tree$)
(declare-fun s_tree$c () A_a_a_fun_fun_a_a_fun_a_a_fun_fun_fun_tree$)
(declare-fun s_tree$d () A_a_fun_a_bool_fun_fun_a_a_fun_a_fun_a_a_fun_bool_fun_fun_fun_tree$)
(declare-fun s_tree$e () A_bool_bool_fun_bool_fun_fun_a_bool_bool_fun_fun_a_bool_fun_fun_fun_tree$)
(declare-fun s_tree$f () A_a_bool_fun_bool_fun_fun_a_a_bool_fun_fun_a_bool_fun_fun_fun_tree$)
(declare-fun s_tree$g () A_bool_bool_bool_fun_fun_fun_a_bool_fun_a_bool_bool_fun_fun_fun_fun_tree$)
(declare-fun s_tree$h () A_a_bool_bool_fun_fun_fun_a_a_fun_a_bool_bool_fun_fun_fun_fun_tree$)
(declare-fun s_tree$i () A_bool_a_bool_fun_fun_fun_a_bool_fun_a_a_bool_fun_fun_fun_fun_tree$)
(declare-fun s_tree$j () A_bool_fun_a_bool_fun_fun_a_bool_fun_a_fun_a_bool_fun_bool_fun_fun_fun_tree$)
(declare-fun s_tree$k () A_a_bool_fun_fun_a_bool_fun_fun_a_a_bool_fun_fun_a_fun_a_a_bool_fun_fun_bool_fun_fun_fun_tree$)
(declare-fun s_tree$l () A_bool_bool_fun_bool_bool_fun_fun_fun_a_bool_bool_fun_fun_a_bool_bool_fun_fun_fun_fun_tree$)
(declare-fun s_tree$m () A_a_bool_fun_bool_bool_fun_fun_fun_a_a_bool_fun_fun_a_bool_bool_fun_fun_fun_fun_tree$)
(declare-fun s_tree$n () Bool_a_bool_fun_bool_fun_fun_bool_a_bool_fun_fun_bool_bool_fun_fun_fun_tree$)
(declare-fun ap_tree$a (Bool_bool_fun_tree$ Bool_tree$) Bool_tree$)
(declare-fun ap_tree$b (A_bool_fun_bool_fun_tree$ A_bool_fun_tree$) Bool_tree$)
(declare-fun ap_tree$c (Bool_a_bool_fun_fun_tree$ Bool_tree$) A_bool_fun_tree$)
(declare-fun ap_tree$d (A_bool_fun_a_bool_fun_fun_tree$ A_bool_fun_tree$) A_bool_fun_tree$)
(declare-fun ap_tree$e (Bool_a_fun_tree$ Bool_tree$) A_tree$)
(declare-fun ap_tree$f (A_a_fun_tree$ A_tree$) A_tree$)
(declare-fun ap_tree$g (A_bool_fun_a_fun_tree$ A_bool_fun_tree$) A_tree$)
(declare-fun ap_tree$h (A_bool_bool_fun_fun_tree$ A_tree$) Bool_bool_fun_tree$)
(declare-fun ap_tree$i (A_a_bool_fun_fun_tree$ A_tree$) A_bool_fun_tree$)
(declare-fun ap_tree$j (A_a_fun_a_bool_fun_fun_tree$ A_a_fun_tree$) A_bool_fun_tree$)
(declare-fun ap_tree$k (A_a_bool_fun_fun_a_a_bool_fun_fun_fun_tree$ A_a_bool_fun_fun_tree$) A_a_bool_fun_fun_tree$)
(declare-fun ap_tree$l (Bool_a_bool_fun_fun_a_bool_bool_fun_fun_fun_tree$ Bool_a_bool_fun_fun_tree$) A_bool_bool_fun_fun_tree$)
(declare-fun ap_tree$m (A_bool_bool_fun_fun_bool_a_bool_fun_fun_fun_tree$ A_bool_bool_fun_fun_tree$) Bool_a_bool_fun_fun_tree$)
(declare-fun ap_tree$n (A_a_a_fun_fun_tree$ A_tree$) A_a_fun_tree$)
(declare-fun ap_tree$o (A_a_a_fun_fun_a_a_a_fun_fun_fun_tree$ A_a_a_fun_fun_tree$) A_a_a_fun_fun_tree$)
(declare-fun ap_tree$p (A_a_fun_bool_fun_tree$ A_a_fun_tree$) Bool_tree$)
(declare-fun ap_tree$q (A_a_a_fun_bool_fun_fun_tree$ A_tree$) A_a_fun_bool_fun_tree$)
(declare-fun ap_tree$r (A_a_fun_a_bool_fun_fun_a_a_a_fun_bool_fun_fun_fun_tree$ A_a_fun_a_bool_fun_fun_tree$) A_a_a_fun_bool_fun_fun_tree$)
(declare-fun ap_tree$s (A_a_a_fun_bool_fun_fun_a_a_fun_a_bool_fun_fun_fun_tree$ A_a_a_fun_bool_fun_fun_tree$) A_a_fun_a_bool_fun_fun_tree$)
(declare-fun ap_tree$t (A_a_bool_bool_fun_fun_fun_tree$ A_tree$) A_bool_bool_fun_fun_tree$)
(declare-fun ap_tree$u (A_a_bool_bool_fun_fun_fun_a_a_bool_bool_fun_fun_fun_fun_tree$ A_a_bool_bool_fun_fun_fun_tree$) A_a_bool_bool_fun_fun_fun_tree$)
(declare-fun ap_tree$v (A_a_a_bool_fun_fun_fun_tree$ A_tree$) A_a_bool_fun_fun_tree$)
(declare-fun ap_tree$w (A_a_a_bool_fun_fun_fun_a_a_a_bool_fun_fun_fun_fun_tree$ A_a_a_bool_fun_fun_fun_tree$) A_a_a_bool_fun_fun_fun_tree$)
(declare-fun ap_tree$x (A_a_a_fun_a_bool_fun_fun_fun_tree$ A_tree$) A_a_fun_a_bool_fun_fun_tree$)
(declare-fun ap_tree$y (A_a_fun_a_a_bool_fun_fun_fun_a_a_a_fun_a_bool_fun_fun_fun_fun_tree$ A_a_fun_a_a_bool_fun_fun_fun_tree$) A_a_a_fun_a_bool_fun_fun_fun_tree$)
(declare-fun ap_tree$z (A_a_fun_a_a_bool_fun_fun_fun_tree$ A_a_fun_tree$) A_a_bool_fun_fun_tree$)
(declare-fun fun_app$a (A_a_bool_fun_fun_a_a_bool_fun_fun_a_a_bool_fun_fun_fun_fun_a_a_bool_fun_fun_a_a_bool_fun_fun_fun_fun$ A_a_bool_fun_fun_a_a_bool_fun_fun_a_a_bool_fun_fun_fun_fun$) A_a_bool_fun_fun_a_a_bool_fun_fun_fun$)
(declare-fun fun_app$b (A_a_bool_fun_fun_a_a_bool_fun_fun_a_a_bool_fun_fun_fun_fun$ A_a_bool_fun_fun$) A_a_bool_fun_fun_a_a_bool_fun_fun_fun$)
(declare-fun fun_app$c (A_a_fun_a_bool_fun_fun$ A_a_fun$) A_bool_fun$)
(declare-fun fun_app$d (A_a_fun_a_a_fun_a_bool_fun_fun_fun_a_a_fun_a_bool_fun_fun_fun$ A_a_fun_a_a_fun_a_bool_fun_fun_fun$) A_a_fun_a_bool_fun_fun$)
(declare-fun fun_app$e (A_a_fun_a_a_fun_a_bool_fun_fun_fun$ A_a_fun$) A_a_fun_a_bool_fun_fun$)
(declare-fun fun_app$f (A_bool_fun$ A$) Bool)
(declare-fun fun_app$g (A_a_bool_fun_fun_a_bool_fun_fun$ A_a_bool_fun_fun$) A_bool_fun$)
(declare-fun fun_app$h (A_a_bool_fun_fun$ A$) A_bool_fun$)
(declare-fun fun_app$i (A_bool_bool_fun_fun$ A$) Bool_bool_fun$)
(declare-fun fun_app$j (A_a_bool_bool_fun_fun_fun_a_bool_bool_fun_fun_fun$ A_a_bool_bool_fun_fun_fun$) A_bool_bool_fun_fun$)
(declare-fun fun_app$k (A_a_bool_bool_fun_fun_fun$ A$) A_bool_bool_fun_fun$)
(declare-fun fun_app$l (A_a_a_bool_fun_fun_fun_a_a_bool_fun_fun_fun$ A_a_a_bool_fun_fun_fun$) A_a_bool_fun_fun$)
(declare-fun fun_app$m (A_a_a_bool_fun_fun_fun$ A$) A_a_bool_fun_fun$)
(declare-fun fun_app$n (A_a_fun$ A$) A$)
(declare-fun fun_app$o (A_a_a_fun_fun_a_a_fun_fun$ A_a_a_fun_fun$) A_a_fun$)
(declare-fun fun_app$p (A_a_a_fun_fun$ A$) A_a_fun$)
(declare-fun fun_app$q (Bool_bool_fun_bool_bool_fun_fun$ Bool_bool_fun$) Bool_bool_fun$)
(declare-fun fun_app$r (Bool_bool_fun_bool_bool_fun_bool_bool_fun_fun_fun$ Bool_bool_fun$) Bool_bool_fun_bool_bool_fun_fun$)
(declare-fun fun_app$s (A_bool_fun_a_bool_fun_fun_a_bool_fun_a_bool_fun_fun_fun$ A_bool_fun_a_bool_fun_fun$) A_bool_fun_a_bool_fun_fun$)
(declare-fun fun_app$t (A_a_bool_fun_fun_a_a_bool_fun_fun_fun_a_a_bool_fun_fun_fun$ A_a_bool_fun_fun_a_a_bool_fun_fun_fun$) A_a_bool_fun_fun$)
(declare-fun fun_app$u (A_a_fun_a_bool_fun_fun_a_bool_fun_fun$ A_a_fun_a_bool_fun_fun$) A_bool_fun$)
(declare-fun fun_app$v (A_bool_fun_bool_fun$ A_bool_fun$) Bool)
(declare-fun fun_app$w (A_bool_bool_fun_fun_bool_bool_fun_fun$ A_bool_bool_fun_fun$) Bool_bool_fun$)
(declare-fun fun_app$x (A_a_fun_a_fun$ A_a_fun$) A$)
(declare-fun fun_app$y (A_bool_fun_a_fun_a_bool_fun_bool_fun_fun$ A_bool_fun_a_fun$) A_bool_fun_bool_fun$)
(declare-fun fun_app$z (A_bool_fun_a_bool_fun_fun$ A_bool_fun$) A_bool_fun$)
(declare-fun map_tree$ (A_bool_fun$) A_tree_bool_tree_fun$)
(declare-fun set_tree$ (A_tree$) A_set$)
(declare-fun wit_tree$ (A$) A_tree$)
(declare-fun ap_tree$aa (A_a_a_fun_a_bool_fun_fun_fun_a_a_fun_a_a_bool_fun_fun_fun_fun_tree$ A_a_a_fun_a_bool_fun_fun_fun_tree$) A_a_fun_a_a_bool_fun_fun_fun_tree$)
(declare-fun ap_tree$ab (A_bool_bool_fun_fun_a_bool_fun_a_bool_fun_fun_fun_tree$ A_bool_bool_fun_fun_tree$) A_bool_fun_a_bool_fun_fun_tree$)
(declare-fun ap_tree$ac (A_a_bool_fun_fun_a_a_fun_a_bool_fun_fun_fun_tree$ A_a_bool_fun_fun_tree$) A_a_fun_a_bool_fun_fun_tree$)
(declare-fun ap_tree$ad (A_bool_fun_a_a_fun_fun_tree$ A_bool_fun_tree$) A_a_fun_tree$)
(declare-fun ap_tree$ae (A_bool_a_fun_fun_a_bool_fun_a_a_fun_fun_fun_tree$ A_bool_a_fun_fun_tree$) A_bool_fun_a_a_fun_fun_tree$)
(declare-fun ap_tree$af (A_bool_a_fun_fun_tree$ A_tree$) Bool_a_fun_tree$)
(declare-fun ap_tree$ag (A_a_fun_a_a_fun_fun_tree$ A_a_fun_tree$) A_a_fun_tree$)
(declare-fun ap_tree$ah (A_a_a_fun_fun_a_a_fun_a_a_fun_fun_fun_tree$ A_a_a_fun_fun_tree$) A_a_fun_a_a_fun_fun_tree$)
(declare-fun ap_tree$ai (A_a_fun_a_fun_a_a_fun_bool_fun_fun_tree$ A_a_fun_a_fun_tree$) A_a_fun_bool_fun_tree$)
(declare-fun ap_tree$aj (A_a_fun_a_bool_fun_fun_a_a_fun_a_fun_a_a_fun_bool_fun_fun_fun_tree$ A_a_fun_a_bool_fun_fun_tree$) A_a_fun_a_fun_a_a_fun_bool_fun_fun_tree$)
(declare-fun ap_tree$ak (A_a_fun_a_fun_tree$ A_a_fun_tree$) A_tree$)
(declare-fun ap_tree$al (A_bool_bool_fun_fun_a_bool_fun_fun_tree$ A_bool_bool_fun_fun_tree$) A_bool_fun_tree$)
(declare-fun ap_tree$am (A_bool_bool_fun_bool_fun_fun_a_bool_bool_fun_fun_a_bool_fun_fun_fun_tree$ A_bool_bool_fun_bool_fun_fun_tree$) A_bool_bool_fun_fun_a_bool_fun_fun_tree$)
(declare-fun ap_tree$an (Bool_bool_fun_bool_fun_tree$ Bool_bool_fun_tree$) Bool_tree$)
(declare-fun ap_tree$ao (A_bool_bool_fun_bool_fun_fun_tree$ A_tree$) Bool_bool_fun_bool_fun_tree$)
(declare-fun ap_tree$ap (A_a_bool_fun_fun_a_bool_fun_fun_tree$ A_a_bool_fun_fun_tree$) A_bool_fun_tree$)
(declare-fun ap_tree$aq (A_a_bool_fun_bool_fun_fun_a_a_bool_fun_fun_a_bool_fun_fun_fun_tree$ A_a_bool_fun_bool_fun_fun_tree$) A_a_bool_fun_fun_a_bool_fun_fun_tree$)
(declare-fun ap_tree$ar (A_a_bool_fun_bool_fun_fun_tree$ A_tree$) A_bool_fun_bool_fun_tree$)
(declare-fun ap_tree$as (A_bool_fun_a_bool_bool_fun_fun_fun_tree$ A_bool_fun_tree$) A_bool_bool_fun_fun_tree$)
(declare-fun ap_tree$at (A_bool_bool_bool_fun_fun_fun_a_bool_fun_a_bool_bool_fun_fun_fun_fun_tree$ A_bool_bool_bool_fun_fun_fun_tree$) A_bool_fun_a_bool_bool_fun_fun_fun_tree$)
(declare-fun ap_tree$au (Bool_bool_bool_fun_fun_tree$ Bool_tree$) Bool_bool_fun_tree$)
(declare-fun ap_tree$av (A_bool_bool_bool_fun_fun_fun_tree$ A_tree$) Bool_bool_bool_fun_fun_tree$)
(declare-fun ap_tree$aw (A_a_fun_a_bool_bool_fun_fun_fun_tree$ A_a_fun_tree$) A_bool_bool_fun_fun_tree$)
(declare-fun ap_tree$ax (A_a_bool_bool_fun_fun_fun_a_a_fun_a_bool_bool_fun_fun_fun_fun_tree$ A_a_bool_bool_fun_fun_fun_tree$) A_a_fun_a_bool_bool_fun_fun_fun_tree$)
(declare-fun ap_tree$ay (A_bool_fun_a_a_bool_fun_fun_fun_tree$ A_bool_fun_tree$) A_a_bool_fun_fun_tree$)
(declare-fun ap_tree$az (A_bool_a_bool_fun_fun_fun_a_bool_fun_a_a_bool_fun_fun_fun_fun_tree$ A_bool_a_bool_fun_fun_fun_tree$) A_bool_fun_a_a_bool_fun_fun_fun_tree$)
(declare-fun ap_tree$ba (A_bool_a_bool_fun_fun_fun_tree$ A_tree$) Bool_a_bool_fun_fun_tree$)
(declare-fun ap_tree$bb (Bool_bool_fun_bool_bool_fun_fun_tree$ Bool_bool_fun_tree$) Bool_bool_fun_tree$)
(declare-fun ap_tree$bc (A_bool_fun_a_bool_fun_fun_a_bool_fun_a_bool_fun_fun_fun_tree$ A_bool_fun_a_bool_fun_fun_tree$) A_bool_fun_a_bool_fun_fun_tree$)
(declare-fun ap_tree$bd (A_a_bool_fun_fun_a_a_bool_fun_fun_a_a_bool_fun_fun_fun_fun_tree$ A_a_bool_fun_fun_tree$) A_a_bool_fun_fun_a_a_bool_fun_fun_fun_tree$)
(declare-fun ap_tree$be (A_bool_fun_a_a_fun_a_bool_fun_fun_fun_tree$ A_bool_fun_tree$) A_a_fun_a_bool_fun_fun_tree$)
(declare-fun ap_tree$bf (Bool_bool_fun_a_bool_bool_fun_fun_fun_tree$ Bool_bool_fun_tree$) A_bool_bool_fun_fun_tree$)
(declare-fun ap_tree$bg (Bool_bool_fun_a_bool_fun_a_bool_fun_fun_fun_tree$ Bool_bool_fun_tree$) A_bool_fun_a_bool_fun_fun_tree$)
(declare-fun ap_tree$bh (Bool_bool_fun_bool_bool_fun_bool_bool_fun_fun_fun_tree$ Bool_bool_fun_tree$) Bool_bool_fun_bool_bool_fun_fun_tree$)
(declare-fun ap_tree$bi (Bool_a_fun_a_bool_fun_a_a_fun_fun_fun_tree$ Bool_a_fun_tree$) A_bool_fun_a_a_fun_fun_tree$)
(declare-fun ap_tree$bj (A_a_fun_a_a_fun_a_a_fun_fun_fun_tree$ A_a_fun_tree$) A_a_fun_a_a_fun_fun_tree$)
(declare-fun ap_tree$bk (Bool_bool_fun_bool_fun_a_bool_bool_fun_fun_a_bool_fun_fun_fun_tree$ Bool_bool_fun_bool_fun_tree$) A_bool_bool_fun_fun_a_bool_fun_fun_tree$)
(declare-fun ap_tree$bl (A_bool_fun_bool_fun_a_a_bool_fun_fun_a_bool_fun_fun_fun_tree$ A_bool_fun_bool_fun_tree$) A_a_bool_fun_fun_a_bool_fun_fun_tree$)
(declare-fun ap_tree$bm (Bool_bool_bool_fun_fun_a_bool_fun_a_bool_bool_fun_fun_fun_fun_tree$ Bool_bool_bool_fun_fun_tree$) A_bool_fun_a_bool_bool_fun_fun_fun_tree$)
(declare-fun ap_tree$bn (A_bool_bool_fun_fun_a_a_fun_a_bool_bool_fun_fun_fun_fun_tree$ A_bool_bool_fun_fun_tree$) A_a_fun_a_bool_bool_fun_fun_fun_tree$)
(declare-fun ap_tree$bo (Bool_a_bool_fun_fun_a_bool_fun_a_a_bool_fun_fun_fun_fun_tree$ Bool_a_bool_fun_fun_tree$) A_bool_fun_a_a_bool_fun_fun_fun_tree$)
(declare-fun ap_tree$bp (A_bool_fun_a_fun_a_bool_fun_bool_fun_fun_tree$ A_bool_fun_a_fun_tree$) A_bool_fun_bool_fun_tree$)
(declare-fun ap_tree$bq (A_bool_fun_a_bool_fun_fun_a_bool_fun_a_fun_a_bool_fun_bool_fun_fun_fun_tree$ A_bool_fun_a_bool_fun_fun_tree$) A_bool_fun_a_fun_a_bool_fun_bool_fun_fun_tree$)
(declare-fun ap_tree$br (A_a_bool_fun_fun_a_fun_a_a_bool_fun_fun_bool_fun_fun_tree$ A_a_bool_fun_fun_a_fun_tree$) A_a_bool_fun_fun_bool_fun_tree$)
(declare-fun ap_tree$bs (A_a_bool_fun_fun_a_bool_fun_fun_a_a_bool_fun_fun_a_fun_a_a_bool_fun_fun_bool_fun_fun_fun_tree$ A_a_bool_fun_fun_a_bool_fun_fun_tree$) A_a_bool_fun_fun_a_fun_a_a_bool_fun_fun_bool_fun_fun_tree$)
(declare-fun ap_tree$bt (A_bool_bool_fun_fun_a_bool_bool_fun_fun_fun_tree$ A_bool_bool_fun_fun_tree$) A_bool_bool_fun_fun_tree$)
(declare-fun ap_tree$bu (A_bool_bool_fun_bool_bool_fun_fun_fun_a_bool_bool_fun_fun_a_bool_bool_fun_fun_fun_fun_tree$ A_bool_bool_fun_bool_bool_fun_fun_fun_tree$) A_bool_bool_fun_fun_a_bool_bool_fun_fun_fun_tree$)
(declare-fun ap_tree$bv (A_a_bool_fun_fun_a_bool_bool_fun_fun_fun_tree$ A_a_bool_fun_fun_tree$) A_bool_bool_fun_fun_tree$)
(declare-fun ap_tree$bw (A_a_bool_fun_bool_bool_fun_fun_fun_a_a_bool_fun_fun_a_bool_bool_fun_fun_fun_fun_tree$ A_a_bool_fun_bool_bool_fun_fun_fun_tree$) A_a_bool_fun_fun_a_bool_bool_fun_fun_fun_tree$)
(declare-fun ap_tree$bx (A_a_bool_fun_fun_a_a_bool_fun_fun_a_a_bool_fun_fun_fun_fun_a_a_bool_fun_fun_a_a_bool_fun_fun_fun_fun_tree$ A_a_bool_fun_fun_a_a_bool_fun_fun_a_a_bool_fun_fun_fun_fun_tree$) A_a_bool_fun_fun_a_a_bool_fun_fun_fun_tree$)
(declare-fun ap_tree$by (A_a_fun_a_a_fun_a_bool_fun_fun_fun_tree$ A_a_fun_tree$) A_a_fun_a_bool_fun_fun_tree$)
(declare-fun ap_tree$bz (A_a_fun_a_a_fun_a_bool_fun_fun_fun_a_a_fun_a_bool_fun_fun_fun_tree$ A_a_fun_a_a_fun_a_bool_fun_fun_fun_tree$) A_a_fun_a_bool_fun_fun_tree$)
(declare-fun ap_tree$ca (A_a_bool_bool_fun_fun_fun_a_bool_bool_fun_fun_fun_tree$ A_a_bool_bool_fun_fun_fun_tree$) A_bool_bool_fun_fun_tree$)
(declare-fun ap_tree$cb (A_a_a_bool_fun_fun_fun_a_a_bool_fun_fun_fun_tree$ A_a_a_bool_fun_fun_fun_tree$) A_a_bool_fun_fun_tree$)
(declare-fun ap_tree$cc (A_a_a_fun_fun_a_a_fun_fun_tree$ A_a_a_fun_fun_tree$) A_a_fun_tree$)
(declare-fun ap_tree$cd (A_bool_fun_a_bool_fun_a_bool_fun_fun_fun_tree$ A_bool_fun_tree$) A_bool_fun_a_bool_fun_fun_tree$)
(declare-fun ap_tree$ce (A_bool_fun_a_a_bool_fun_fun_a_bool_fun_fun_fun_tree$ A_bool_fun_tree$) A_a_bool_fun_fun_a_bool_fun_fun_tree$)
(declare-fun ap_tree$cf (Bool_a_bool_fun_fun_bool_bool_fun_fun_tree$ Bool_a_bool_fun_fun_tree$) Bool_bool_fun_tree$)
(declare-fun ap_tree$cg (Bool_a_bool_fun_bool_fun_fun_bool_a_bool_fun_fun_bool_bool_fun_fun_fun_tree$ Bool_a_bool_fun_bool_fun_fun_tree$) Bool_a_bool_fun_fun_bool_bool_fun_fun_tree$)
(declare-fun ap_tree$ch (A_a_fun_a_bool_fun_fun_a_bool_fun_fun_tree$ A_a_fun_a_bool_fun_fun_tree$) A_bool_fun_tree$)
(declare-fun ap_tree$ci (A_a_bool_fun_fun_a_a_bool_fun_fun_fun_a_a_bool_fun_fun_fun_tree$ A_a_bool_fun_fun_a_a_bool_fun_fun_fun_tree$) A_a_bool_fun_fun_tree$)
(declare-fun ap_tree$cj (A_bool_bool_fun_fun_bool_bool_fun_fun_tree$ A_bool_bool_fun_fun_tree$) Bool_bool_fun_tree$)
(declare-fun fun_app$aa (A_bool_fun_a_fun$ A_bool_fun$) A$)
(declare-fun fun_app$ab (A_a_bool_fun_fun_bool_fun$ A_a_bool_fun_fun$) Bool)
(declare-fun fun_app$ac (A_a_bool_fun_fun_a_fun$ A_a_bool_fun_fun$) A$)
(declare-fun fun_app$ad (A_bool_bool_fun_fun_a_bool_fun_a_bool_fun_fun_fun$ A_bool_bool_fun_fun$) A_bool_fun_a_bool_fun_fun$)
(declare-fun fun_app$ae (Bool_bool_fun$ Bool) Bool)
(declare-fun fun_app$af (A_bool_fun_a_bool_bool_fun_fun_fun$ A_bool_fun$) A_bool_bool_fun_fun$)
(declare-fun fun_app$ag (Bool_bool_bool_fun_fun$ Bool) Bool_bool_fun$)
(declare-fun fun_app$ah (A_bool_bool_bool_fun_fun_fun$ A$) Bool_bool_bool_fun_fun$)
(declare-fun fun_app$ai (A_bool_fun_a_a_bool_fun_fun_fun$ A_bool_fun$) A_a_bool_fun_fun$)
(declare-fun fun_app$aj (Bool_a_bool_fun_fun$ Bool) A_bool_fun$)
(declare-fun fun_app$ak (A_bool_a_bool_fun_fun_fun$ A$) Bool_a_bool_fun_fun$)
(declare-fun fun_app$al (A_bool_bool_fun_fun_a_bool_fun_fun$ A_bool_bool_fun_fun$) A_bool_fun$)
(declare-fun fun_app$am (Bool_bool_fun_bool_fun$ Bool_bool_fun$) Bool)
(declare-fun fun_app$an (A_bool_bool_fun_bool_fun_fun$ A$) Bool_bool_fun_bool_fun$)
(declare-fun fun_app$ao (A_bool_bool_fun_fun_a_bool_bool_fun_fun_fun$ A_bool_bool_fun_fun$) A_bool_bool_fun_fun$)
(declare-fun fun_app$ap (A_bool_bool_fun_bool_bool_fun_fun_fun$ A$) Bool_bool_fun_bool_bool_fun_fun$)
(declare-fun fun_app$aq (A_a_bool_fun_bool_fun_fun$ A$) A_bool_fun_bool_fun$)
(declare-fun fun_app$ar (A_a_bool_fun_fun_a_bool_bool_fun_fun_fun$ A_a_bool_fun_fun$) A_bool_bool_fun_fun$)
(declare-fun fun_app$as (A_bool_fun_bool_bool_fun_fun$ A_bool_fun$) Bool_bool_fun$)
(declare-fun fun_app$at (A_a_bool_fun_bool_bool_fun_fun_fun$ A$) A_bool_fun_bool_bool_fun_fun$)
(declare-fun fun_app$au (A_a_bool_fun_fun_a_a_fun_a_bool_fun_fun_fun$ A_a_bool_fun_fun$) A_a_fun_a_bool_fun_fun$)
(declare-fun fun_app$av (Bool_a_fun$ Bool) A$)
(declare-fun fun_app$aw (A_tree_bool_tree_fun$ A_tree$) Bool_tree$)
(declare-fun fun_app$ax (A_tree_a_tree_fun$ A_tree$) A_tree$)
(declare-fun fun_app$ay (Bool_tree_bool_tree_fun$ Bool_tree$) Bool_tree$)
(declare-fun fun_app$az (A_tree_a_bool_fun_tree_fun$ A_tree$) A_bool_fun_tree$)
(declare-fun fun_app$ba (Bool_tree_a_bool_fun_tree_fun$ Bool_tree$) A_bool_fun_tree$)
(declare-fun fun_app$bb (A_bool_fun_tree_bool_tree_fun$ A_bool_fun_tree$) Bool_tree$)
(declare-fun fun_app$bc (A_bool_fun_tree_a_bool_fun_tree_fun$ A_bool_fun_tree$) A_bool_fun_tree$)
(declare-fun fun_app$bd (Bool_tree_a_tree_fun$ Bool_tree$) A_tree$)
(declare-fun fun_app$be (A_bool_fun_tree_a_tree_fun$ A_bool_fun_tree$) A_tree$)
(declare-fun fun_app$bf (Bool_a_bool_bool_fun_fun_fun$ Bool) A_bool_bool_fun_fun$)
(declare-fun fun_app$bg (Bool_bool_fun_tree_bool_bool_fun_tree_fun$ Bool_bool_fun_tree$) Bool_bool_fun_tree$)
(declare-fun fun_app$bh (A_bool_fun_a_bool_fun_fun_tree_a_bool_fun_a_bool_fun_fun_tree_fun$ A_bool_fun_a_bool_fun_fun_tree$) A_bool_fun_a_bool_fun_fun_tree$)
(declare-fun fun_app$bi (Bool_tree_bool_fun$ Bool_tree$) Bool)
(declare-fun fun_app$bj (Bool_bool_tree_bool_fun_fun$ Bool) Bool_tree_bool_fun$)
(declare-fun fun_app$bk (A_bool_fun_tree_bool_fun$ A_bool_fun_tree$) Bool)
(declare-fun fun_app$bl (A_bool_fun_a_bool_fun_tree_bool_fun_fun$ A_bool_fun$) A_bool_fun_tree_bool_fun$)
(declare-fun fun_app$bm (A_tree_bool_fun$ A_tree$) Bool)
(declare-fun fun_app$bn (A_a_tree_bool_fun_fun$ A$) A_tree_bool_fun$)
(declare-fun fun_app$bo (A_bool_fun_a_a_fun_a_bool_fun_fun_fun$ A_bool_fun$) A_a_fun_a_bool_fun_fun$)
(declare-fun fun_app$bp (Bool_bool_fun_a_bool_fun_a_bool_fun_fun_fun$ Bool_bool_fun$) A_bool_fun_a_bool_fun_fun$)
(declare-fun fun_app$bq (Bool_a_fun_bool_bool_fun_fun$ Bool_a_fun$) Bool_bool_fun$)
(declare-fun fun_app$br (A_a_fun_a_a_fun_fun$ A_a_fun$) A_a_fun$)
(declare-fun fun_app$bs (A_a_fun_a_a_fun_a_a_fun_fun_fun$ A_a_fun$) A_a_fun_a_a_fun_fun$)
(declare-fun fun_app$bt (A_bool_fun_a_a_fun_fun$ A_bool_fun$) A_a_fun$)
(declare-fun fun_app$bu (Bool_a_fun_a_bool_fun_a_a_fun_fun_fun$ Bool_a_fun$) A_bool_fun_a_a_fun_fun$)
(declare-fun fun_app$bv (Bool_a_bool_fun_fun_a_bool_fun_a_a_bool_fun_fun_fun_fun$ Bool_a_bool_fun_fun$) A_bool_fun_a_a_bool_fun_fun_fun$)
(declare-fun fun_app$bw (A_bool_fun_bool_fun_a_a_bool_fun_fun_a_bool_fun_fun_fun$ A_bool_fun_bool_fun$) A_a_bool_fun_fun_a_bool_fun_fun$)
(declare-fun fun_app$bx (Bool_a_bool_fun_fun_bool_bool_fun_fun$ Bool_a_bool_fun_fun$) Bool_bool_fun$)
(declare-fun fun_app$by (Bool_bool_fun_bool_a_bool_fun_fun_fun$ Bool_bool_fun$) Bool_a_bool_fun_fun$)
(declare-fun fun_app$bz (A_bool_fun_bool_fun_a_bool_fun_bool_fun_fun$ A_bool_fun_bool_fun$) A_bool_fun_bool_fun$)
(declare-fun fun_app$ca (Bool_a_bool_fun_fun_bool_a_bool_fun_fun_fun$ Bool_a_bool_fun_fun$) Bool_a_bool_fun_fun$)
(declare-fun fun_app$cb (A_bool_fun_a_bool_fun_fun_a_bool_fun_bool_fun_fun$ A_bool_fun_a_bool_fun_fun$) A_bool_fun_bool_fun$)
(declare-fun map_tree$a (A_a_fun$) A_tree_a_tree_fun$)
(declare-fun map_tree$b (Bool_bool_fun$) Bool_tree_bool_tree_fun$)
(declare-fun map_tree$c (A_bool_bool_fun_fun$ A_tree$) Bool_bool_fun_tree$)
(declare-fun map_tree$d (A_a_bool_fun_fun$) A_tree_a_bool_fun_tree_fun$)
(declare-fun map_tree$e (Bool_a_bool_fun_fun$) Bool_tree_a_bool_fun_tree_fun$)
(declare-fun map_tree$f (A_bool_fun_bool_fun$) A_bool_fun_tree_bool_tree_fun$)
(declare-fun map_tree$g (A_a_fun_a_bool_fun_fun$ A_a_fun_tree$) A_bool_fun_tree$)
(declare-fun map_tree$h (A_bool_fun_a_bool_fun_fun$) A_bool_fun_tree_a_bool_fun_tree_fun$)
(declare-fun map_tree$i (A_a_bool_fun_fun_a_bool_fun_fun$ A_a_bool_fun_fun_tree$) A_bool_fun_tree$)
(declare-fun map_tree$j (Bool_a_fun$) Bool_tree_a_tree_fun$)
(declare-fun map_tree$k (A_bool_fun_a_fun$) A_bool_fun_tree_a_tree_fun$)
(declare-fun map_tree$l (Bool_a_bool_bool_fun_fun_fun$ Bool_tree$) A_bool_bool_fun_fun_tree$)
(declare-fun map_tree$m (Bool_bool_fun_bool_bool_fun_fun$) Bool_bool_fun_tree_bool_bool_fun_tree_fun$)
(declare-fun map_tree$n (A_bool_fun_a_bool_fun_fun_a_bool_fun_a_bool_fun_fun_fun$) A_bool_fun_a_bool_fun_fun_tree_a_bool_fun_a_bool_fun_fun_tree_fun$)
(declare-fun pred_tree$ (A_bool_fun$ A_tree$) Bool)
(declare-fun pure_tree$ (A_bool_fun$) A_bool_fun_tree$)
(declare-fun set_tree$a (Bool_tree$) Bool_set$)
(declare-fun set_tree$b (A_bool_fun_tree$) A_bool_fun_set$)
(declare-fun tree_chop$ (A_bool_fun_a_bool_fun_fun_tree$) A_bool_fun_a_bool_fun_fun_tree$)
(declare-fun pred_tree$a (Bool_bool_fun$ Bool_tree$) Bool)
(declare-fun pred_tree$b (A_bool_fun_bool_fun$ A_bool_fun_tree$) Bool)
(declare-fun pure_tree$a (Bool) Bool_tree$)
(declare-fun pure_tree$b (Bool_bool_fun$) Bool_bool_fun_tree$)
(declare-fun pure_tree$c (A$) A_tree$)
(declare-fun pure_tree$d (A_bool_fun_bool_fun$) A_bool_fun_bool_fun_tree$)
(declare-fun pure_tree$e (Bool_a_bool_fun_fun$) Bool_a_bool_fun_fun_tree$)
(declare-fun pure_tree$f (A_bool_fun_a_bool_fun_fun$) A_bool_fun_a_bool_fun_fun_tree$)
(declare-fun pure_tree$g (Bool_a_fun$) Bool_a_fun_tree$)
(declare-fun pure_tree$h (A_a_fun$) A_a_fun_tree$)
(declare-fun pure_tree$i (A_bool_fun_a_fun$) A_bool_fun_a_fun_tree$)
(declare-fun pure_tree$j (A_bool_bool_fun_fun$) A_bool_bool_fun_fun_tree$)
(declare-fun pure_tree$k (A_a_bool_fun_fun$) A_a_bool_fun_fun_tree$)
(declare-fun pure_tree$l (A_a_bool_fun_fun_a_bool_fun_fun$) A_a_bool_fun_fun_a_bool_fun_fun_tree$)
(declare-fun pure_tree$m (A_a_fun_a_bool_fun_fun$) A_a_fun_a_bool_fun_fun_tree$)
(declare-fun pure_tree$n (Bool_bool_fun_bool_bool_fun_fun$) Bool_bool_fun_bool_bool_fun_fun_tree$)
(declare-fun pure_tree$o (A_bool_fun_a_bool_fun_fun_a_bool_fun_a_bool_fun_fun_fun$) A_bool_fun_a_bool_fun_fun_a_bool_fun_a_bool_fun_fun_fun_tree$)
(declare-fun pure_tree$p (A_a_bool_fun_fun_a_a_bool_fun_fun_fun$) A_a_bool_fun_fun_a_a_bool_fun_fun_fun_tree$)
(declare-fun pure_tree$q (Bool_bool_fun_a_bool_fun_a_bool_fun_fun_fun$) Bool_bool_fun_a_bool_fun_a_bool_fun_fun_fun_tree$)
(declare-fun pure_tree$r (A_bool_fun_a_a_fun_a_bool_fun_fun_fun$) A_bool_fun_a_a_fun_a_bool_fun_fun_fun_tree$)
(declare-fun pure_tree$s (Bool_bool_fun_bool_bool_fun_bool_bool_fun_fun_fun$) Bool_bool_fun_bool_bool_fun_bool_bool_fun_fun_fun_tree$)
(declare-fun pure_tree$t (Bool_a_fun_a_bool_fun_a_a_fun_fun_fun$) Bool_a_fun_a_bool_fun_a_a_fun_fun_fun_tree$)
(declare-fun pure_tree$u (A_a_fun_a_a_fun_a_a_fun_fun_fun$) A_a_fun_a_a_fun_a_a_fun_fun_fun_tree$)
(declare-fun pure_tree$v (Bool_bool_fun_bool_fun_a_bool_bool_fun_fun_a_bool_fun_fun_fun$) Bool_bool_fun_bool_fun_a_bool_bool_fun_fun_a_bool_fun_fun_fun_tree$)
(declare-fun pure_tree$w (A_bool_fun_bool_fun_a_a_bool_fun_fun_a_bool_fun_fun_fun$) A_bool_fun_bool_fun_a_a_bool_fun_fun_a_bool_fun_fun_fun_tree$)
(declare-fun pure_tree$x (Bool_bool_bool_fun_fun_a_bool_fun_a_bool_bool_fun_fun_fun_fun$) Bool_bool_bool_fun_fun_a_bool_fun_a_bool_bool_fun_fun_fun_fun_tree$)
(declare-fun pure_tree$y (A_bool_bool_fun_fun_a_a_fun_a_bool_bool_fun_fun_fun_fun$) A_bool_bool_fun_fun_a_a_fun_a_bool_bool_fun_fun_fun_fun_tree$)
(declare-fun pure_tree$z (Bool_a_bool_fun_fun_a_bool_fun_a_a_bool_fun_fun_fun_fun$) Bool_a_bool_fun_fun_a_bool_fun_a_a_bool_fun_fun_fun_fun_tree$)
(declare-fun tree_chop$a (A_a_bool_fun_fun_a_bool_fun_fun_tree$) A_a_bool_fun_fun_a_bool_fun_fun_tree$)
(declare-fun tree_chop$b (A_bool_bool_fun_fun_tree$) A_bool_bool_fun_fun_tree$)
(declare-fun tree_chop$c (A_a_bool_fun_fun_tree$) A_a_bool_fun_fun_tree$)
(declare-fun tree_chop$d (A_tree$) A_tree$)
(declare-fun tree_chop$e (A_bool_fun_tree$) A_bool_fun_tree$)
(declare-fun tree_chop$f (Bool_tree$) Bool_tree$)
(declare-fun tree_chop$g (Bool_bool_fun_tree$) Bool_bool_fun_tree$)
(declare-fun tree_chop$h (Bool_a_fun_tree$) Bool_a_fun_tree$)
(declare-fun tree_chop$i (A_a_fun_tree$) A_a_fun_tree$)
(declare-fun tree_chop$j (A_bool_fun_bool_fun_tree$) A_bool_fun_bool_fun_tree$)
(declare-fun tree_chop$k (Bool_a_bool_fun_fun_tree$) Bool_a_bool_fun_fun_tree$)
(declare-fun tree_chop$l (A_bool_fun_a_fun_tree$) A_bool_fun_a_fun_tree$)
(declare-fun tree_chop$m (A_a_fun_a_bool_fun_fun_tree$) A_a_fun_a_bool_fun_fun_tree$)
(declare-fun pure_tree$aa (A_bool_bool_fun_bool_fun_fun$) A_bool_bool_fun_bool_fun_fun_tree$)
(declare-fun pure_tree$ab (A_a_bool_fun_bool_fun_fun$) A_a_bool_fun_bool_fun_fun_tree$)
(declare-fun pure_tree$ac (A_bool_bool_bool_fun_fun_fun$) A_bool_bool_bool_fun_fun_fun_tree$)
(declare-fun pure_tree$ad (A_bool_a_bool_fun_fun_fun$) A_bool_a_bool_fun_fun_fun_tree$)
(declare-fun pure_tree$ae (A_a_bool_fun_fun_bool_fun$) A_a_bool_fun_fun_bool_fun_tree$)
(declare-fun pure_tree$af (A_a_bool_fun_fun_a_fun$) A_a_bool_fun_fun_a_fun_tree$)
(declare-fun pure_tree$ag (A_bool_bool_fun_bool_bool_fun_fun_fun$) A_bool_bool_fun_bool_bool_fun_fun_fun_tree$)
(declare-fun pure_tree$ah (A_a_bool_fun_bool_bool_fun_fun_fun$) A_a_bool_fun_bool_bool_fun_fun_fun_tree$)
(declare-fun pure_tree$ai (A_a_bool_fun_fun_a_a_fun_a_bool_fun_fun_fun$) A_a_bool_fun_fun_a_a_fun_a_bool_fun_fun_fun_tree$)
(declare-fun pure_tree$aj (A_bool_bool_fun_fun_a_bool_fun_a_bool_fun_fun_fun$) A_bool_bool_fun_fun_a_bool_fun_a_bool_fun_fun_fun_tree$)
(declare-fun pure_tree$ak (A_a_bool_fun_fun_a_a_bool_fun_fun_a_a_bool_fun_fun_fun_fun_a_a_bool_fun_fun_a_a_bool_fun_fun_fun_fun$) A_a_bool_fun_fun_a_a_bool_fun_fun_a_a_bool_fun_fun_fun_fun_a_a_bool_fun_fun_a_a_bool_fun_fun_fun_fun_tree$)
(declare-fun pure_tree$al (A_a_fun_a_a_fun_a_bool_fun_fun_fun_a_a_fun_a_bool_fun_fun_fun$) A_a_fun_a_a_fun_a_bool_fun_fun_fun_a_a_fun_a_bool_fun_fun_fun_tree$)
(declare-fun pure_tree$am (A_a_bool_bool_fun_fun_fun_a_bool_bool_fun_fun_fun$) A_a_bool_bool_fun_fun_fun_a_bool_bool_fun_fun_fun_tree$)
(declare-fun pure_tree$an (A_a_a_bool_fun_fun_fun_a_a_bool_fun_fun_fun$) A_a_a_bool_fun_fun_fun_a_a_bool_fun_fun_fun_tree$)
(declare-fun pure_tree$ao (A_a_a_fun_fun_a_a_fun_fun$) A_a_a_fun_fun_a_a_fun_fun_tree$)
(declare-fun pure_tree$ap (A_a_fun_a_bool_fun_fun_a_bool_fun_fun$) A_a_fun_a_bool_fun_fun_a_bool_fun_fun_tree$)
(declare-fun pure_tree$aq (A_a_bool_fun_fun_a_a_bool_fun_fun_fun_a_a_bool_fun_fun_fun$) A_a_bool_fun_fun_a_a_bool_fun_fun_fun_a_a_bool_fun_fun_fun_tree$)
(declare-fun pure_tree$ar (A_bool_bool_fun_fun_bool_bool_fun_fun$) A_bool_bool_fun_fun_bool_bool_fun_fun_tree$)
(declare-fun pure_tree$as (A_a_fun_a_fun$) A_a_fun_a_fun_tree$)
(declare-fun unfold_tree$ (A_bool_fun_a_bool_fun_fun_a_bool_fun_a_bool_fun_fun_fun$ A_bool_fun_a_bool_fun_fun_a_bool_fun_a_bool_fun_fun_fun$ A_bool_fun_a_bool_fun_fun_a_bool_fun_a_bool_fun_fun_fun$ A_bool_fun_a_bool_fun_fun$) A_bool_fun_a_bool_fun_fun_tree$)
(declare-fun tree_recurse$ (A_a_fun$ A_a_fun$ A$) A_tree$)
(declare-fun unfold_tree$a (Bool_bool_fun_bool_bool_fun_fun$ Bool_bool_fun_bool_bool_fun_fun$ Bool_bool_fun_bool_bool_fun_fun$ Bool_bool_fun$) Bool_bool_fun_tree$)
(declare-fun traverse_tree$ (Dir_list$ A_bool_fun_tree$) A_bool_fun_tree$)
(declare-fun tree_recurse$a (Bool_bool_fun$ Bool_bool_fun$ Bool) Bool_tree$)
(declare-fun tree_recurse$b (A_bool_fun_a_bool_fun_fun$ A_bool_fun_a_bool_fun_fun$ A_bool_fun$) A_bool_fun_tree$)
(declare-fun traverse_tree$a (Dir_list$ A_tree$) A_tree$)
(declare-fun traverse_tree$b (Dir_list$ Bool_tree$) Bool_tree$)
(declare-fun traverse_tree$c (Dir_list$ Bool_bool_fun_tree$) Bool_bool_fun_tree$)
(declare-fun traverse_tree$d (Dir_list$ Bool_a_fun_tree$) Bool_a_fun_tree$)
(declare-fun traverse_tree$e (Dir_list$ A_a_fun_tree$) A_a_fun_tree$)
(declare-fun traverse_tree$f (Dir_list$ A_bool_bool_fun_fun_tree$) A_bool_bool_fun_fun_tree$)
(declare-fun traverse_tree$g (Dir_list$ A_bool_fun_bool_fun_tree$) A_bool_fun_bool_fun_tree$)
(declare-fun traverse_tree$h (Dir_list$ Bool_a_bool_fun_fun_tree$) Bool_a_bool_fun_fun_tree$)
(declare-fun traverse_tree$i (Dir_list$ A_a_bool_fun_fun_tree$) A_a_bool_fun_fun_tree$)
(declare-fun traverse_tree$j (Dir_list$ A_bool_fun_a_fun_tree$) A_bool_fun_a_fun_tree$)
(declare-fun traverse_tree$k (Dir_list$ A_a_fun_a_bool_fun_fun_tree$) A_a_fun_a_bool_fun_fun_tree$)
(declare-fun traverse_tree$l (Dir_list$ A_bool_fun_a_bool_fun_fun_tree$) A_bool_fun_a_bool_fun_fun_tree$)
(declare-fun traverse_tree$m (Dir_list$ A_a_bool_fun_fun_a_bool_fun_fun_tree$) A_a_bool_fun_fun_a_bool_fun_fun_tree$)
(declare-fun ?v2!0 (A_a_fun_a_bool_fun_fun_tree$ A_a_fun_a_bool_fun_fun_tree$) A_a_fun$)
(declare-fun ?v2!1 (A_a_bool_fun_fun_a_a_bool_fun_fun_fun_tree$ A_a_bool_fun_fun_a_a_bool_fun_fun_fun_tree$) A_a_bool_fun_fun$)
(declare-fun ?v2!2 (A_bool_bool_fun_fun_tree$ A_bool_bool_fun_fun_tree$) A$)
(declare-fun ?v2!3 (A_a_bool_fun_fun_tree$ A_a_bool_fun_fun_tree$) A$)
(declare-fun ?v2!4 (A_a_fun_tree$ A_a_fun_tree$) A$)
(declare-fun ?v2!5 (A_bool_fun_tree$ A_bool_fun_tree$) A$)
(declare-fun ?v2!6 (A_a_bool_fun_fun_a_a_bool_fun_fun_fun_tree$ A_a_bool_fun_fun_a_a_bool_fun_fun_fun_tree$) A_a_bool_fun_fun_tree$)
(declare-fun ?v2!7 (A_a_fun_a_bool_fun_fun_tree$ A_a_fun_a_bool_fun_fun_tree$) A_a_fun_tree$)
(declare-fun ?v2!8 (A_bool_bool_fun_fun_tree$ A_bool_bool_fun_fun_tree$) A_tree$)
(declare-fun ?v2!9 (A_a_bool_fun_fun_tree$ A_a_bool_fun_fun_tree$) A_tree$)
(declare-fun ?v2!10 (A_a_fun_tree$ A_a_fun_tree$) A_tree$)
(declare-fun ?v2!11 (A_bool_fun_tree$ A_bool_fun_tree$) A_tree$)
(declare-fun ?v1!14 (A_tree$) A$)
(declare-fun ?v2!13 (A_tree$) A_tree$)
(declare-fun ?v3!12 (A_tree$) A_tree$)
(declare-fun ?v3!15 (Bool_tree$) Bool_tree$)
(declare-fun ?v1!17 (Bool_tree$) Bool)
(declare-fun ?v2!16 (Bool_tree$) Bool_tree$)
(declare-fun ?v1!20 (A_bool_fun_tree$) A_bool_fun$)
(declare-fun ?v3!18 (A_bool_fun_tree$) A_bool_fun_tree$)
(declare-fun ?v2!19 (A_bool_fun_tree$) A_bool_fun_tree$)
(declare-fun ?v4!21 (Bool_bool_fun$ Bool_bool_fun$ Bool_tree$) Bool)
(declare-fun ?v4!22 (Bool_a_bool_fun_fun$ Bool_a_bool_fun_fun$ Bool_tree$) Bool)
(declare-fun ?v4!23 (A_bool_fun_bool_fun$ A_bool_fun_bool_fun$ A_bool_fun_tree$) A_bool_fun$)
(declare-fun ?v4!24 (A_bool_fun_a_bool_fun_fun$ A_bool_fun_a_bool_fun_fun$ A_bool_fun_tree$) A_bool_fun$)
(declare-fun ?v4!25 (A_bool_fun$ A_bool_fun$ A_tree$) A$)
(declare-fun ?v3!26 (Bool_bool_fun$ Bool_bool_fun$ Bool_tree$) Bool)
(declare-fun ?v3!27 (Bool_a_bool_fun_fun$ Bool_a_bool_fun_fun$ Bool_tree$) Bool)
(declare-fun ?v3!28 (A_bool_fun_bool_fun$ A_bool_fun_bool_fun$ A_bool_fun_tree$) A_bool_fun$)
(declare-fun ?v3!29 (A_bool_fun_a_bool_fun_fun$ A_bool_fun_a_bool_fun_fun$ A_bool_fun_tree$) A_bool_fun$)
(declare-fun ?v3!30 (A_bool_fun$ A_bool_fun$ A_tree$) A$)
(declare-fun ?v4!32 (Bool_bool_fun$ Bool_bool_fun$ Bool_tree$ Bool_tree$) Bool)
(declare-fun ?v5!31 (Bool_bool_fun$ Bool_bool_fun$ Bool_tree$ Bool_tree$) Bool)
(declare-fun ?v5!33 (Bool_a_bool_fun_fun$ Bool_a_bool_fun_fun$ Bool_tree$ Bool_tree$) Bool)
(declare-fun ?v4!34 (Bool_a_bool_fun_fun$ Bool_a_bool_fun_fun$ Bool_tree$ Bool_tree$) Bool)
(declare-fun ?v5!35 (A_bool_fun_bool_fun$ A_bool_fun_bool_fun$ A_bool_fun_tree$ A_bool_fun_tree$) A_bool_fun$)
(declare-fun ?v4!36 (A_bool_fun_bool_fun$ A_bool_fun_bool_fun$ A_bool_fun_tree$ A_bool_fun_tree$) A_bool_fun$)
(declare-fun ?v5!37 (A_bool_fun_a_bool_fun_fun$ A_bool_fun_a_bool_fun_fun$ A_bool_fun_tree$ A_bool_fun_tree$) A_bool_fun$)
(declare-fun ?v4!38 (A_bool_fun_a_bool_fun_fun$ A_bool_fun_a_bool_fun_fun$ A_bool_fun_tree$ A_bool_fun_tree$) A_bool_fun$)
(declare-fun ?v5!39 (A_bool_fun$ A_bool_fun$ A_tree$ A_tree$) A$)
(declare-fun ?v4!40 (A_bool_fun$ A_bool_fun$ A_tree$ A_tree$) A$)
(declare-fun ?v4!46 (Bool_tree$ Bool) Bool_tree$)
(declare-fun ?v3!41 (Bool_tree$ Bool) Bool_tree$)
(declare-fun ?v2!48 (Bool_tree$ Bool) Bool)
(declare-fun ?v3!44 (Bool_tree$ Bool) Bool_tree$)
(declare-fun ?v4!43 (Bool_tree$ Bool) Bool_tree$)
(declare-fun ?v3!47 (Bool_tree$ Bool) Bool_tree$)
(declare-fun ?v2!45 (Bool_tree$ Bool) Bool)
(declare-fun ?v2!42 (Bool_tree$ Bool) Bool_tree$)
(declare-fun ?v2!53 (A_bool_fun_tree$ A_bool_fun$) A_bool_fun$)
(declare-fun ?v2!50 (A_bool_fun_tree$ A_bool_fun$) A_bool_fun_tree$)
(declare-fun ?v3!55 (A_bool_fun_tree$ A_bool_fun$) A_bool_fun_tree$)
(declare-fun ?v3!49 (A_bool_fun_tree$ A_bool_fun$) A_bool_fun_tree$)
(declare-fun ?v2!56 (A_bool_fun_tree$ A_bool_fun$) A_bool_fun$)
(declare-fun ?v4!51 (A_bool_fun_tree$ A_bool_fun$) A_bool_fun_tree$)
(declare-fun ?v3!52 (A_bool_fun_tree$ A_bool_fun$) A_bool_fun_tree$)
(declare-fun ?v4!54 (A_bool_fun_tree$ A_bool_fun$) A_bool_fun_tree$)
(declare-fun ?v2!58 (A_tree$ A$) A_tree$)
(declare-fun ?v4!62 (A_tree$ A$) A_tree$)
(declare-fun ?v2!61 (A_tree$ A$) A$)
(declare-fun ?v3!63 (A_tree$ A$) A_tree$)
(declare-fun ?v4!59 (A_tree$ A$) A_tree$)
(declare-fun ?v3!57 (A_tree$ A$) A_tree$)
(declare-fun ?v3!60 (A_tree$ A$) A_tree$)
(declare-fun ?v2!64 (A_tree$ A$) A$)
(declare-fun ?v4!70 (Bool_bool_tree_bool_fun_fun$) Bool_tree$)
(declare-fun ?v6!68 (Bool_bool_tree_bool_fun_fun$) Bool)
(declare-fun ?v3!75 (Bool_bool_tree_bool_fun_fun$) Bool)
(declare-fun ?v6!72 (Bool_bool_tree_bool_fun_fun$) Bool)
(declare-fun ?v5!69 (Bool_bool_tree_bool_fun_fun$) Bool_tree$)
(declare-fun ?v3!67 (Bool_bool_tree_bool_fun_fun$) Bool)
(declare-fun ?v4!74 (Bool_bool_tree_bool_fun_fun$) Bool_tree$)
(declare-fun ?v3!71 (Bool_bool_tree_bool_fun_fun$) Bool)
(declare-fun ?v4!66 (Bool_bool_tree_bool_fun_fun$) Bool_tree$)
(declare-fun ?v5!65 (Bool_bool_tree_bool_fun_fun$) Bool_tree$)
(declare-fun ?v5!73 (Bool_bool_tree_bool_fun_fun$) Bool_tree$)
(declare-fun ?v3!82 (A_bool_fun_a_bool_fun_tree_bool_fun_fun$) A_bool_fun$)
(declare-fun ?v4!77 (A_bool_fun_a_bool_fun_tree_bool_fun_fun$) A_bool_fun_tree$)
(declare-fun ?v4!81 (A_bool_fun_a_bool_fun_tree_bool_fun_fun$) A_bool_fun_tree$)
(declare-fun ?v5!84 (A_bool_fun_a_bool_fun_tree_bool_fun_fun$) A_bool_fun_tree$)
(declare-fun ?v6!83 (A_bool_fun_a_bool_fun_tree_bool_fun_fun$) A_bool_fun$)
(declare-fun ?v3!78 (A_bool_fun_a_bool_fun_tree_bool_fun_fun$) A_bool_fun$)
(declare-fun ?v3!86 (A_bool_fun_a_bool_fun_tree_bool_fun_fun$) A_bool_fun$)
(declare-fun ?v6!79 (A_bool_fun_a_bool_fun_tree_bool_fun_fun$) A_bool_fun$)
(declare-fun ?v5!80 (A_bool_fun_a_bool_fun_tree_bool_fun_fun$) A_bool_fun_tree$)
(declare-fun ?v5!76 (A_bool_fun_a_bool_fun_tree_bool_fun_fun$) A_bool_fun_tree$)
(declare-fun ?v4!85 (A_bool_fun_a_bool_fun_tree_bool_fun_fun$) A_bool_fun_tree$)
(declare-fun ?v4!92 (A_a_tree_bool_fun_fun$) A_tree$)
(declare-fun ?v4!88 (A_a_tree_bool_fun_fun$) A_tree$)
(declare-fun ?v6!90 (A_a_tree_bool_fun_fun$) A$)
(declare-fun ?v3!97 (A_a_tree_bool_fun_fun$) A$)
(declare-fun ?v4!96 (A_a_tree_bool_fun_fun$) A_tree$)
(declare-fun ?v5!95 (A_a_tree_bool_fun_fun$) A_tree$)
(declare-fun ?v6!94 (A_a_tree_bool_fun_fun$) A$)
(declare-fun ?v3!93 (A_a_tree_bool_fun_fun$) A$)
(declare-fun ?v3!89 (A_a_tree_bool_fun_fun$) A$)
(declare-fun ?v5!87 (A_a_tree_bool_fun_fun$) A_tree$)
(declare-fun ?v5!91 (A_a_tree_bool_fun_fun$) A_tree$)
(declare-fun ?v2!98 (A_bool_fun$ A_bool_fun$) A$)
(assert (! (forall ((?v0py0 A_a_bool_fun_fun_a_a_bool_fun_fun_a_a_bool_fun_fun_fun_fun$)(?v1py0 A_a_bool_fun_fun$)) (! (= (fun_app$ (fun_app$a uup$ ?v0py0) ?v1py0) (fun_app$ (fun_app$b ?v0py0 ?v1py0) ?v1py0)) :pattern ((fun_app$ (fun_app$a uup$ ?v0py0) ?v1py0)) )) :named A0))
(assert (! (forall ((?v0py1 A_a_fun_a_a_fun_a_bool_fun_fun_fun$)(?v1py1 A_a_fun$)) (! (= (fun_app$c (fun_app$d uuq$ ?v0py1) ?v1py1) (fun_app$c (fun_app$e ?v0py1 ?v1py1) ?v1py1)) :pattern ((fun_app$c (fun_app$d uuq$ ?v0py1) ?v1py1)) )) :named A1))
(assert (! (forall ((?v0py2 A_a_bool_fun_fun$)(?v1py2 A$)) (! (and (or (not (fun_app$f (fun_app$g uuu$ ?v0py2) ?v1py2)) (fun_app$f (fun_app$h ?v0py2 ?v1py2) ?v1py2)) (or (fun_app$f (fun_app$g uuu$ ?v0py2) ?v1py2) (not (fun_app$f (fun_app$h ?v0py2 ?v1py2) ?v1py2)))) :pattern ((fun_app$f (fun_app$g uuu$ ?v0py2) ?v1py2)) )) :named A2))
(assert (! (forall ((?v0py3 A_a_bool_bool_fun_fun_fun$)(?v1py3 A$)) (! (= (fun_app$i (fun_app$j uur$ ?v0py3) ?v1py3) (fun_app$i (fun_app$k ?v0py3 ?v1py3) ?v1py3)) :pattern ((fun_app$i (fun_app$j uur$ ?v0py3) ?v1py3)) )) :named A3))
(assert (! (forall ((?v0py4 A_a_a_bool_fun_fun_fun$)(?v1py4 A$)) (! (= (fun_app$h (fun_app$l uus$ ?v0py4) ?v1py4) (fun_app$h (fun_app$m ?v0py4 ?v1py4) ?v1py4)) :pattern ((fun_app$h (fun_app$l uus$ ?v0py4) ?v1py4)) )) :named A4))
(assert (! (forall ((?v0py5 A_a_a_fun_fun$)(?v1py5 A$)) (! (= (fun_app$n (fun_app$o uut$ ?v0py5) ?v1py5) (fun_app$n (fun_app$p ?v0py5 ?v1py5) ?v1py5)) :pattern ((fun_app$n (fun_app$o uut$ ?v0py5) ?v1py5)) )) :named A5))
(assert (! (forall ((?v0py6 A_set$)(?v1py6 A$)) (! (and (or (not (fun_app$f (uuk$ ?v0py6) ?v1py6)) (member$ ?v1py6 ?v0py6)) (or (fun_app$f (uuk$ ?v0py6) ?v1py6) (not (member$ ?v1py6 ?v0py6)))) :pattern ((fun_app$f (uuk$ ?v0py6) ?v1py6)) )) :named A6))
(assert (! (forall ((?v0py7 Bool_bool_fun$)(?v1py7 Bool_bool_fun$)) (! (= (fun_app$q (uvj$ ?v0py7) ?v1py7) (fun_app$q (fun_app$r comp$ ?v1py7) ?v0py7)) :pattern ((fun_app$q (uvj$ ?v0py7) ?v1py7)) )) :named A7))
(assert (! (forall ((?v0py8 A_bool_fun_a_bool_fun_fun$)(?v1py8 A_bool_fun_a_bool_fun_fun$)) (! (= (fun_app$s (uvi$ ?v0py8) ?v1py8) (fun_app$s (comp$a ?v1py8) ?v0py8)) :pattern ((fun_app$s (uvi$ ?v0py8) ?v1py8)) )) :named A8))
(assert (! (forall ((?v0py9 A$)(?v1py9 A$)) (! (and (or (not (fun_app$f (fun_app$h uu$ ?v0py9) ?v1py9)) (= ?v0py9 ?v1py9)) (or (fun_app$f (fun_app$h uu$ ?v0py9) ?v1py9) (not (= ?v0py9 ?v1py9)))) :pattern ((fun_app$f (fun_app$h uu$ ?v0py9) ?v1py9)) )) :named A9))
(assert (! (forall ((?v0py10 A_a_bool_fun_fun$)(?v1py10 A_a_bool_fun_fun_a_a_bool_fun_fun_fun$)) (! (= (fun_app$t (uvd$ ?v0py10) ?v1py10) (fun_app$ ?v1py10 ?v0py10)) :pattern ((fun_app$t (uvd$ ?v0py10) ?v1py10)) )) :named A10))
(assert (! (forall ((?v0py11 A_a_fun$)(?v1py11 A_a_fun_a_bool_fun_fun$)) (! (= (fun_app$u (uvc$ ?v0py11) ?v1py11) (fun_app$c ?v1py11 ?v0py11)) :pattern ((fun_app$u (uvc$ ?v0py11) ?v1py11)) )) :named A11))
(assert (! (forall ((?v0py12 A$)(?v1py12 A_bool_fun$)) (! (and (or (not (fun_app$v (uvh$ ?v0py12) ?v1py12)) (fun_app$f ?v1py12 ?v0py12)) (or (fun_app$v (uvh$ ?v0py12) ?v1py12) (not (fun_app$f ?v1py12 ?v0py12)))) :pattern ((fun_app$v (uvh$ ?v0py12) ?v1py12)) )) :named A12))
(assert (! (forall ((?v0py13 A$)(?v1py13 A_bool_bool_fun_fun$)) (! (= (fun_app$w (uve$ ?v0py13) ?v1py13) (fun_app$i ?v1py13 ?v0py13)) :pattern ((fun_app$w (uve$ ?v0py13) ?v1py13)) )) :named A13))
(assert (! (forall ((?v0py14 A$)(?v1py14 A_a_bool_fun_fun$)) (! (= (fun_app$g (uvg$ ?v0py14) ?v1py14) (fun_app$h ?v1py14 ?v0py14)) :pattern ((fun_app$g (uvg$ ?v0py14) ?v1py14)) )) :named A14))
(assert (! (forall ((?v0py15 A$)(?v1py15 A_a_fun$)) (! (= (fun_app$x (uvf$ ?v0py15) ?v1py15) (fun_app$n ?v1py15 ?v0py15)) :pattern ((fun_app$x (uvf$ ?v0py15) ?v1py15)) )) :named A15))
(assert (! (forall ((?v0py16 A_bool_fun_a_bool_fun_fun$)(?v1py16 A_bool_fun_a_fun$)(?v2py0 A_bool_fun$)) (! (and (or (not (fun_app$v (fun_app$y (uuc$ ?v0py16) ?v1py16) ?v2py0)) (fun_app$f (fun_app$z ?v0py16 ?v2py0) (fun_app$aa ?v1py16 ?v2py0))) (or (fun_app$v (fun_app$y (uuc$ ?v0py16) ?v1py16) ?v2py0) (not (fun_app$f (fun_app$z ?v0py16 ?v2py0) (fun_app$aa ?v1py16 ?v2py0))))) :pattern ((fun_app$v (fun_app$y (uuc$ ?v0py16) ?v1py16) ?v2py0)) )) :named A16))
(assert (! (forall ((?v0py17 A_a_bool_fun_fun_a_bool_fun_fun$)(?v1py17 A_a_bool_fun_fun_a_fun$)(?v2py1 A_a_bool_fun_fun$)) (! (and (or (not (fun_app$ab (uuh$ ?v0py17 ?v1py17) ?v2py1)) (fun_app$f (fun_app$g ?v0py17 ?v2py1) (fun_app$ac ?v1py17 ?v2py1))) (or (fun_app$ab (uuh$ ?v0py17 ?v1py17) ?v2py1) (not (fun_app$f (fun_app$g ?v0py17 ?v2py1) (fun_app$ac ?v1py17 ?v2py1))))) :pattern ((fun_app$ab (uuh$ ?v0py17 ?v1py17) ?v2py1)) )) :named A17))
(assert (! (forall ((?v0py18 A_bool_bool_fun_fun$)(?v1py18 A_bool_fun$)(?v2py2 A$)) (! (and (or (not (fun_app$f (fun_app$z (fun_app$ad uua$ ?v0py18) ?v1py18) ?v2py2)) (fun_app$ae (fun_app$i ?v0py18 ?v2py2) (fun_app$f ?v1py18 ?v2py2))) (or (fun_app$f (fun_app$z (fun_app$ad uua$ ?v0py18) ?v1py18) ?v2py2) (not (fun_app$ae (fun_app$i ?v0py18 ?v2py2) (fun_app$f ?v1py18 ?v2py2))))) :pattern ((fun_app$f (fun_app$z (fun_app$ad uua$ ?v0py18) ?v1py18) ?v2py2)) )) :named A18))
(assert (! (forall ((?v0py19 A_bool_bool_bool_fun_fun_fun$)(?v1py19 A_bool_fun$)(?v2py3 A$)) (! (= (fun_app$i (fun_app$af (uuf$ ?v0py19) ?v1py19) ?v2py3) (fun_app$ag (fun_app$ah ?v0py19 ?v2py3) (fun_app$f ?v1py19 ?v2py3))) :pattern ((fun_app$i (fun_app$af (uuf$ ?v0py19) ?v1py19) ?v2py3)) )) :named A19))
(assert (! (forall ((?v0py20 A_bool_a_bool_fun_fun_fun$)(?v1py20 A_bool_fun$)(?v2py4 A$)) (! (= (fun_app$h (fun_app$ai (uug$ ?v0py20) ?v1py20) ?v2py4) (fun_app$aj (fun_app$ak ?v0py20 ?v2py4) (fun_app$f ?v1py20 ?v2py4))) :pattern ((fun_app$h (fun_app$ai (uug$ ?v0py20) ?v1py20) ?v2py4)) )) :named A20))
(assert (! (forall ((?v0py21 A_bool_bool_fun_bool_fun_fun$)(?v1py21 A_bool_bool_fun_fun$)(?v2py5 A$)) (! (and (or (not (fun_app$f (fun_app$al (uud$ ?v0py21) ?v1py21) ?v2py5)) (fun_app$am (fun_app$an ?v0py21 ?v2py5) (fun_app$i ?v1py21 ?v2py5))) (or (fun_app$f (fun_app$al (uud$ ?v0py21) ?v1py21) ?v2py5) (not (fun_app$am (fun_app$an ?v0py21 ?v2py5) (fun_app$i ?v1py21 ?v2py5))))) :pattern ((fun_app$f (fun_app$al (uud$ ?v0py21) ?v1py21) ?v2py5)) )) :named A21))
(assert (! (forall ((?v0py22 A_bool_bool_fun_bool_bool_fun_fun_fun$)(?v1py22 A_bool_bool_fun_fun$)(?v2py6 A$)) (! (= (fun_app$i (fun_app$ao (uui$ ?v0py22) ?v1py22) ?v2py6) (fun_app$q (fun_app$ap ?v0py22 ?v2py6) (fun_app$i ?v1py22 ?v2py6))) :pattern ((fun_app$i (fun_app$ao (uui$ ?v0py22) ?v1py22) ?v2py6)) )) :named A22))
(assert (! (forall ((?v0py23 A_a_bool_fun_bool_fun_fun$)(?v1py23 A_a_bool_fun_fun$)(?v2py7 A$)) (! (and (or (not (fun_app$f (fun_app$g (uue$ ?v0py23) ?v1py23) ?v2py7)) (fun_app$v (fun_app$aq ?v0py23 ?v2py7) (fun_app$h ?v1py23 ?v2py7))) (or (fun_app$f (fun_app$g (uue$ ?v0py23) ?v1py23) ?v2py7) (not (fun_app$v (fun_app$aq ?v0py23 ?v2py7) (fun_app$h ?v1py23 ?v2py7))))) :pattern ((fun_app$f (fun_app$g (uue$ ?v0py23) ?v1py23) ?v2py7)) )) :named A23))
(assert (! (forall ((?v0py24 A_a_bool_fun_bool_bool_fun_fun_fun$)(?v1py24 A_a_bool_fun_fun$)(?v2py8 A$)) (! (= (fun_app$i (fun_app$ar (uuj$ ?v0py24) ?v1py24) ?v2py8) (fun_app$as (fun_app$at ?v0py24 ?v2py8) (fun_app$h ?v1py24 ?v2py8))) :pattern ((fun_app$i (fun_app$ar (uuj$ ?v0py24) ?v1py24) ?v2py8)) )) :named A24))
(assert (! (forall ((?v0py25 A_a_bool_fun_fun$)(?v1py25 A_a_fun$)(?v2py9 A$)) (! (and (or (not (fun_app$f (fun_app$c (fun_app$au uub$ ?v0py25) ?v1py25) ?v2py9)) (fun_app$f (fun_app$h ?v0py25 ?v2py9) (fun_app$n ?v1py25 ?v2py9))) (or (fun_app$f (fun_app$c (fun_app$au uub$ ?v0py25) ?v1py25) ?v2py9) (not (fun_app$f (fun_app$h ?v0py25 ?v2py9) (fun_app$n ?v1py25 ?v2py9))))) :pattern ((fun_app$f (fun_app$c (fun_app$au uub$ ?v0py25) ?v1py25) ?v2py9)) )) :named A25))
(assert (! (forall ((?v0py26 A_a_bool_fun_fun$)(?v1py26 A$)(?v2py10 A$)) (! (and (or (not (fun_app$f (fun_app$h (fun_app$ uul$ ?v0py26) ?v1py26) ?v2py10)) (fun_app$f (fun_app$h ?v0py26 ?v2py10) ?v1py26)) (or (fun_app$f (fun_app$h (fun_app$ uul$ ?v0py26) ?v1py26) ?v2py10) (not (fun_app$f (fun_app$h ?v0py26 ?v2py10) ?v1py26)))) :pattern ((fun_app$f (fun_app$h (fun_app$ uul$ ?v0py26) ?v1py26) ?v2py10)) )) :named A26))
(assert (! (forall ((?v0py27 Bool)(?v1py27 A$)) (! (and (or (not (fun_app$f (fun_app$aj uun$ ?v0py27) ?v1py27)) ?v0py27) (or (fun_app$f (fun_app$aj uun$ ?v0py27) ?v1py27) (not ?v0py27))) :pattern ((fun_app$f (fun_app$aj uun$ ?v0py27) ?v1py27)) )) :named A27))
(assert (! (forall ((?v0py28 Bool_bool_fun$)(?v1py28 A$)) (! (= (fun_app$i (uux$ ?v0py28) ?v1py28) ?v0py28) :pattern ((fun_app$i (uux$ ?v0py28) ?v1py28)) )) :named A28))
(assert (! (forall ((?v0py29 A_bool_fun$)(?v1py29 A_bool_fun$)) (! (= (fun_app$z (uuv$ ?v0py29) ?v1py29) ?v0py29) :pattern ((fun_app$z (uuv$ ?v0py29) ?v1py29)) )) :named A29))
(assert (! (forall ((?v0py30 A_bool_fun$)(?v1py30 A_a_bool_fun_fun$)) (! (= (fun_app$g (uuw$ ?v0py30) ?v1py30) ?v0py30) :pattern ((fun_app$g (uuw$ ?v0py30) ?v1py30)) )) :named A30))
(assert (! (forall ((?v0py31 A_bool_fun$)(?v1py31 A_a_fun$)) (! (= (fun_app$c (uuz$ ?v0py31) ?v1py31) ?v0py31) :pattern ((fun_app$c (uuz$ ?v0py31) ?v1py31)) )) :named A31))
(assert (! (forall ((?v0py32 A_bool_fun$)(?v1py32 A$)) (! (= (fun_app$h (uuy$ ?v0py32) ?v1py32) ?v0py32) :pattern ((fun_app$h (uuy$ ?v0py32) ?v1py32)) )) :named A32))
(assert (! (forall ((?v0py33 A_a_bool_fun_fun$)(?v1py33 A_a_bool_fun_fun$)) (! (= (fun_app$ (uva$ ?v0py33) ?v1py33) ?v0py33) :pattern ((fun_app$ (uva$ ?v0py33) ?v1py33)) )) :named A33))
(assert (! (forall ((?v0py34 A$)(?v1py34 A$)) (! (= (fun_app$n (uvb$ ?v0py34) ?v1py34) ?v0py34) :pattern ((fun_app$n (uvb$ ?v0py34) ?v1py34)) )) :named A34))
(assert (! (forall ((?v0py35 Bool)) (! (and (or (not (fun_app$ae uuo$ ?v0py35)) ?v0py35) (or (fun_app$ae uuo$ ?v0py35) (not ?v0py35))) :pattern ((fun_app$ae uuo$ ?v0py35)) )) :named A35))
(assert (! (forall ((?v0py36 A_bool_fun$)) (! (= (fun_app$z uum$ ?v0py36) ?v0py36) :pattern ((fun_app$z uum$ ?v0py36)) )) :named A36))
(assert (! (not (= (ap_tree$ (pure_tree$ p$) t$) (pure_tree$a true))) :named A37))
(assert (! (forall ((?v0py37 A$)) (! (or (not (member$ ?v0py37 (set_tree$ t$))) (fun_app$f p$ ?v0py37)) :pattern ((member$ ?v0py37 (set_tree$ t$))) :pattern ((fun_app$f p$ ?v0py37)) )) :named A38))
(assert (! (forall ((?v0py38 Bool_bool_fun$)(?v1py35 Bool)) (! (= (ap_tree$a (pure_tree$b ?v0py38) (pure_tree$a ?v1py35)) (pure_tree$a (fun_app$ae ?v0py38 ?v1py35))) :pattern ((ap_tree$a (pure_tree$b ?v0py38) (pure_tree$a ?v1py35))) :pattern ((fun_app$ae ?v0py38 ?v1py35)) )) :named A39))
(assert (! (forall ((?v0py39 A_bool_fun$)(?v1py36 A$)) (! (= (ap_tree$ (pure_tree$ ?v0py39) (pure_tree$c ?v1py36)) (pure_tree$a (fun_app$f ?v0py39 ?v1py36))) :pattern ((ap_tree$ (pure_tree$ ?v0py39) (pure_tree$c ?v1py36))) :pattern ((fun_app$f ?v0py39 ?v1py36)) )) :named A40))
(assert (! (forall ((?v0py40 A_bool_fun_bool_fun$)(?v1py37 A_bool_fun$)) (! (= (ap_tree$b (pure_tree$d ?v0py40) (pure_tree$ ?v1py37)) (pure_tree$a (fun_app$v ?v0py40 ?v1py37))) :pattern ((ap_tree$b (pure_tree$d ?v0py40) (pure_tree$ ?v1py37))) :pattern ((fun_app$v ?v0py40 ?v1py37)) )) :named A41))
(assert (! (forall ((?v0py41 Bool_a_bool_fun_fun$)(?v1py38 Bool)) (! (= (ap_tree$c (pure_tree$e ?v0py41) (pure_tree$a ?v1py38)) (pure_tree$ (fun_app$aj ?v0py41 ?v1py38))) :pattern ((ap_tree$c (pure_tree$e ?v0py41) (pure_tree$a ?v1py38))) :pattern ((fun_app$aj ?v0py41 ?v1py38)) )) :named A42))
(assert (! (forall ((?v0py42 A_bool_fun_a_bool_fun_fun$)(?v1py39 A_bool_fun$)) (! (= (ap_tree$d (pure_tree$f ?v0py42) (pure_tree$ ?v1py39)) (pure_tree$ (fun_app$z ?v0py42 ?v1py39))) :pattern ((ap_tree$d (pure_tree$f ?v0py42) (pure_tree$ ?v1py39))) :pattern ((fun_app$z ?v0py42 ?v1py39)) )) :named A43))
(assert (! (forall ((?v0py43 Bool_a_fun$)(?v1py40 Bool)) (! (= (ap_tree$e (pure_tree$g ?v0py43) (pure_tree$a ?v1py40)) (pure_tree$c (fun_app$av ?v0py43 ?v1py40))) :pattern ((ap_tree$e (pure_tree$g ?v0py43) (pure_tree$a ?v1py40))) :pattern ((fun_app$av ?v0py43 ?v1py40)) )) :named A44))
(assert (! (forall ((?v0py44 A_a_fun$)(?v1py41 A$)) (! (= (ap_tree$f (pure_tree$h ?v0py44) (pure_tree$c ?v1py41)) (pure_tree$c (fun_app$n ?v0py44 ?v1py41))) :pattern ((ap_tree$f (pure_tree$h ?v0py44) (pure_tree$c ?v1py41))) :pattern ((fun_app$n ?v0py44 ?v1py41)) )) :named A45))
(assert (! (forall ((?v0py45 A_bool_fun_a_fun$)(?v1py42 A_bool_fun$)) (! (= (ap_tree$g (pure_tree$i ?v0py45) (pure_tree$ ?v1py42)) (pure_tree$c (fun_app$aa ?v0py45 ?v1py42))) :pattern ((ap_tree$g (pure_tree$i ?v0py45) (pure_tree$ ?v1py42))) :pattern ((fun_app$aa ?v0py45 ?v1py42)) )) :named A46))
(assert (! (forall ((?v0py46 A_bool_bool_fun_fun$)(?v1py43 A$)) (! (= (ap_tree$h (pure_tree$j ?v0py46) (pure_tree$c ?v1py43)) (pure_tree$b (fun_app$i ?v0py46 ?v1py43))) :pattern ((ap_tree$h (pure_tree$j ?v0py46) (pure_tree$c ?v1py43))) :pattern ((fun_app$i ?v0py46 ?v1py43)) )) :named A47))
(assert (! (forall ((?v0py47 A_a_bool_fun_fun$)(?v1py44 A$)) (! (= (ap_tree$i (pure_tree$k ?v0py47) (pure_tree$c ?v1py44)) (pure_tree$ (fun_app$h ?v0py47 ?v1py44))) :pattern ((ap_tree$i (pure_tree$k ?v0py47) (pure_tree$c ?v1py44))) :pattern ((fun_app$h ?v0py47 ?v1py44)) )) :named A48))
(assert (! (forall ((?v0py48 A_a_fun_a_bool_fun_fun_tree$)(?v1py45 A_a_fun_a_bool_fun_fun_tree$)) (! (or (not (= (ap_tree$j ?v0py48 (pure_tree$h (?v2!0 ?v1py45 ?v0py48))) (ap_tree$j ?v1py45 (pure_tree$h (?v2!0 ?v1py45 ?v0py48))))) (= ?v0py48 ?v1py45)) :pattern ((?v2!0 ?v1py45 ?v0py48)) )) :named A49))
(assert (! (forall ((?v0py49 A_a_bool_fun_fun_a_a_bool_fun_fun_fun_tree$)(?v1py46 A_a_bool_fun_fun_a_a_bool_fun_fun_fun_tree$)) (! (or (not (= (ap_tree$k ?v0py49 (pure_tree$k (?v2!1 ?v1py46 ?v0py49))) (ap_tree$k ?v1py46 (pure_tree$k (?v2!1 ?v1py46 ?v0py49))))) (= ?v0py49 ?v1py46)) :pattern ((?v2!1 ?v1py46 ?v0py49)) )) :named A50))
(assert (! (forall ((?v0py50 A_bool_bool_fun_fun_tree$)(?v1py47 A_bool_bool_fun_fun_tree$)) (! (or (not (= (ap_tree$h ?v0py50 (pure_tree$c (?v2!2 ?v1py47 ?v0py50))) (ap_tree$h ?v1py47 (pure_tree$c (?v2!2 ?v1py47 ?v0py50))))) (= ?v0py50 ?v1py47)) :pattern ((?v2!2 ?v1py47 ?v0py50)) )) :named A51))
(assert (! (forall ((?v0py51 A_a_bool_fun_fun_tree$)(?v1py48 A_a_bool_fun_fun_tree$)) (! (or (not (= (ap_tree$i ?v0py51 (pure_tree$c (?v2!3 ?v1py48 ?v0py51))) (ap_tree$i ?v1py48 (pure_tree$c (?v2!3 ?v1py48 ?v0py51))))) (= ?v0py51 ?v1py48)) :pattern ((?v2!3 ?v1py48 ?v0py51)) )) :named A52))
(assert (! (forall ((?v0py52 A_a_fun_tree$)(?v1py49 A_a_fun_tree$)) (! (or (not (= (ap_tree$f ?v0py52 (pure_tree$c (?v2!4 ?v1py49 ?v0py52))) (ap_tree$f ?v1py49 (pure_tree$c (?v2!4 ?v1py49 ?v0py52))))) (= ?v0py52 ?v1py49)) :pattern ((?v2!4 ?v1py49 ?v0py52)) )) :named A53))
(assert (! (forall ((?v0py53 A_bool_fun_tree$)(?v1py50 A_bool_fun_tree$)) (! (or (not (= (ap_tree$ ?v0py53 (pure_tree$c (?v2!5 ?v1py50 ?v0py53))) (ap_tree$ ?v1py50 (pure_tree$c (?v2!5 ?v1py50 ?v0py53))))) (= ?v0py53 ?v1py50)) :pattern ((?v2!5 ?v1py50 ?v0py53)) )) :named A54))
(assert (! (forall ((?v0py54 A_bool_fun_a_bool_fun_fun$)(?v1py51 A_bool_fun_a_bool_fun_fun$)) (! (and (or (not (= (pure_tree$f ?v0py54) (pure_tree$f ?v1py51))) (= ?v0py54 ?v1py51)) (or (= (pure_tree$f ?v0py54) (pure_tree$f ?v1py51)) (not (= ?v0py54 ?v1py51)))) :pattern ((pure_tree$f ?v0py54) (pure_tree$f ?v1py51)) )) :named A55))
(assert (! (forall ((?v0py55 A_a_bool_fun_fun_a_bool_fun_fun$)(?v1py52 A_a_bool_fun_fun_a_bool_fun_fun$)) (! (and (or (not (= (pure_tree$l ?v0py55) (pure_tree$l ?v1py52))) (= ?v0py55 ?v1py52)) (or (= (pure_tree$l ?v0py55) (pure_tree$l ?v1py52)) (not (= ?v0py55 ?v1py52)))) :pattern ((pure_tree$l ?v0py55) (pure_tree$l ?v1py52)) )) :named A56))
(assert (! (forall ((?v0py56 A_bool_bool_fun_fun$)(?v1py53 A_bool_bool_fun_fun$)) (! (and (or (not (= (pure_tree$j ?v0py56) (pure_tree$j ?v1py53))) (= ?v0py56 ?v1py53)) (or (= (pure_tree$j ?v0py56) (pure_tree$j ?v1py53)) (not (= ?v0py56 ?v1py53)))) :pattern ((pure_tree$j ?v0py56) (pure_tree$j ?v1py53)) )) :named A57))
(assert (! (forall ((?v0py57 A_a_bool_fun_fun$)(?v1py54 A_a_bool_fun_fun$)) (! (and (or (not (= (pure_tree$k ?v0py57) (pure_tree$k ?v1py54))) (= ?v0py57 ?v1py54)) (or (= (pure_tree$k ?v0py57) (pure_tree$k ?v1py54)) (not (= ?v0py57 ?v1py54)))) :pattern ((pure_tree$k ?v0py57) (pure_tree$k ?v1py54)) )) :named A58))
(assert (! (forall ((?v0py58 A$)(?v1py55 A$)) (! (and (or (not (= (pure_tree$c ?v0py58) (pure_tree$c ?v1py55))) (= ?v0py58 ?v1py55)) (or (= (pure_tree$c ?v0py58) (pure_tree$c ?v1py55)) (not (= ?v0py58 ?v1py55)))) :pattern ((pure_tree$c ?v0py58) (pure_tree$c ?v1py55)) )) :named A59))
(assert (! (forall ((?v0py59 A_bool_fun$)(?v1py56 A_bool_fun$)) (! (and (or (not (= (pure_tree$ ?v0py59) (pure_tree$ ?v1py56))) (= ?v0py59 ?v1py56)) (or (= (pure_tree$ ?v0py59) (pure_tree$ ?v1py56)) (not (= ?v0py59 ?v1py56)))) :pattern ((pure_tree$ ?v0py59) (pure_tree$ ?v1py56)) )) :named A60))
(assert (! (forall ((?v0py60 Bool)(?v1py57 Bool)) (! (and (or (not (= (pure_tree$a ?v0py60) (pure_tree$a ?v1py57))) (and (or (not ?v0py60) ?v1py57) (or ?v0py60 (not ?v1py57)))) (or (= (pure_tree$a ?v0py60) (pure_tree$a ?v1py57)) (and (or ?v0py60 ?v1py57) (or (not ?v0py60) (not ?v1py57))))) :pattern ((pure_tree$a ?v0py60) (pure_tree$a ?v1py57)) )) :named A61))
(assert (! (forall ((?v0py61 A_a_bool_fun_fun_a_a_bool_fun_fun_fun_tree$)(?v1py58 A_a_bool_fun_fun_a_a_bool_fun_fun_fun_tree$)) (! (or (not (= (ap_tree$k ?v0py61 (?v2!6 ?v1py58 ?v0py61)) (ap_tree$k ?v1py58 (?v2!6 ?v1py58 ?v0py61)))) (= ?v0py61 ?v1py58)) :pattern ((?v2!6 ?v1py58 ?v0py61)) )) :named A62))
(assert (! (forall ((?v0py62 A_a_fun_a_bool_fun_fun_tree$)(?v1py59 A_a_fun_a_bool_fun_fun_tree$)) (! (or (not (= (ap_tree$j ?v0py62 (?v2!7 ?v1py59 ?v0py62)) (ap_tree$j ?v1py59 (?v2!7 ?v1py59 ?v0py62)))) (= ?v0py62 ?v1py59)) :pattern ((?v2!7 ?v1py59 ?v0py62)) )) :named A63))
(assert (! (forall ((?v0py63 A_bool_bool_fun_fun_tree$)(?v1py60 A_bool_bool_fun_fun_tree$)) (! (or (not (= (ap_tree$h ?v0py63 (?v2!8 ?v1py60 ?v0py63)) (ap_tree$h ?v1py60 (?v2!8 ?v1py60 ?v0py63)))) (= ?v0py63 ?v1py60)) :pattern ((?v2!8 ?v1py60 ?v0py63)) )) :named A64))
(assert (! (forall ((?v0py64 A_a_bool_fun_fun_tree$)(?v1py61 A_a_bool_fun_fun_tree$)) (! (or (not (= (ap_tree$i ?v0py64 (?v2!9 ?v1py61 ?v0py64)) (ap_tree$i ?v1py61 (?v2!9 ?v1py61 ?v0py64)))) (= ?v0py64 ?v1py61)) :pattern ((?v2!9 ?v1py61 ?v0py64)) )) :named A65))
(assert (! (forall ((?v0py65 A_a_fun_tree$)(?v1py62 A_a_fun_tree$)) (! (or (not (= (ap_tree$f ?v0py65 (?v2!10 ?v1py62 ?v0py65)) (ap_tree$f ?v1py62 (?v2!10 ?v1py62 ?v0py65)))) (= ?v0py65 ?v1py62)) :pattern ((?v2!10 ?v1py62 ?v0py65)) )) :named A66))
(assert (! (forall ((?v0py66 A_bool_fun_tree$)(?v1py63 A_bool_fun_tree$)) (! (or (not (= (ap_tree$ ?v0py66 (?v2!11 ?v1py63 ?v0py66)) (ap_tree$ ?v1py63 (?v2!11 ?v1py63 ?v0py66)))) (= ?v0py66 ?v1py63)) :pattern ((?v2!11 ?v1py63 ?v0py66)) )) :named A67))
(assert (! (forall ((?v0py67 A_bool_fun_a_bool_fun_fun$)) (! (= (tree_chop$ (pure_tree$f ?v0py67)) (pure_tree$f ?v0py67)) :pattern ((pure_tree$f ?v0py67)) )) :named A68))
(assert (! (forall ((?v0py68 A_a_bool_fun_fun_a_bool_fun_fun$)) (! (= (tree_chop$a (pure_tree$l ?v0py68)) (pure_tree$l ?v0py68)) :pattern ((pure_tree$l ?v0py68)) )) :named A69))
(assert (! (forall ((?v0py69 A_bool_bool_fun_fun$)) (! (= (tree_chop$b (pure_tree$j ?v0py69)) (pure_tree$j ?v0py69)) :pattern ((pure_tree$j ?v0py69)) )) :named A70))
(assert (! (forall ((?v0py70 A_a_bool_fun_fun$)) (! (= (tree_chop$c (pure_tree$k ?v0py70)) (pure_tree$k ?v0py70)) :pattern ((pure_tree$k ?v0py70)) )) :named A71))
(assert (! (forall ((?v0py71 A$)) (! (= (tree_chop$d (pure_tree$c ?v0py71)) (pure_tree$c ?v0py71)) :pattern ((pure_tree$c ?v0py71)) )) :named A72))
(assert (! (forall ((?v0py72 A_bool_fun$)) (! (= (tree_chop$e (pure_tree$ ?v0py72)) (pure_tree$ ?v0py72)) :pattern ((pure_tree$ ?v0py72)) )) :named A73))
(assert (! (forall ((?v0py73 Bool)) (! (= (tree_chop$f (pure_tree$a ?v0py73)) (pure_tree$a ?v0py73)) :pattern ((pure_tree$a ?v0py73)) )) :named A74))
(assert (! (forall ((?v0py74 A$)(?v1py64 A$)) (! (or (not (member$ ?v0py74 (set_tree$ (wit_tree$ ?v1py64)))) (= ?v0py74 ?v1py64)) :pattern ((member$ ?v0py74 (set_tree$ (wit_tree$ ?v1py64)))) )) :named A75))
(assert (! (forall ((?v0py75 A_bool_fun$)(?v1py65 A$)(?v2py11 A_tree$)(?v3py0 A_tree$)) (! (= (ap_tree$ (pure_tree$ ?v0py75) (node$a ?v1py65 ?v2py11 ?v3py0)) (node$cq (fun_app$f ?v0py75 ?v1py65) (ap_tree$ (pure_tree$ ?v0py75) ?v2py11) (ap_tree$ (pure_tree$ ?v0py75) ?v3py0))) :pattern ((ap_tree$ (pure_tree$ ?v0py75) (node$a ?v1py65 ?v2py11 ?v3py0))) :pattern ((node$cq (fun_app$f ?v0py75 ?v1py65) (ap_tree$ (pure_tree$ ?v0py75) ?v2py11) (ap_tree$ (pure_tree$ ?v0py75) ?v3py0))) )) :named A76))
(assert (! (forall ((?v0py76 A_a_fun$)(?v1py66 A$)(?v2py12 A_tree$)(?v3py1 A_tree$)) (! (= (ap_tree$f (pure_tree$h ?v0py76) (node$a ?v1py66 ?v2py12 ?v3py1)) (node$a (fun_app$n ?v0py76 ?v1py66) (ap_tree$f (pure_tree$h ?v0py76) ?v2py12) (ap_tree$f (pure_tree$h ?v0py76) ?v3py1))) :pattern ((ap_tree$f (pure_tree$h ?v0py76) (node$a ?v1py66 ?v2py12 ?v3py1))) :pattern ((node$a (fun_app$n ?v0py76 ?v1py66) (ap_tree$f (pure_tree$h ?v0py76) ?v2py12) (ap_tree$f (pure_tree$h ?v0py76) ?v3py1))) )) :named A77))
(assert (! (forall ((?v0py77 Bool_a_fun$)(?v1py67 Bool)(?v2py13 Bool_tree$)(?v3py2 Bool_tree$)) (! (= (ap_tree$e (pure_tree$g ?v0py77) (node$cq ?v1py67 ?v2py13 ?v3py2)) (node$a (fun_app$av ?v0py77 ?v1py67) (ap_tree$e (pure_tree$g ?v0py77) ?v2py13) (ap_tree$e (pure_tree$g ?v0py77) ?v3py2))) :pattern ((ap_tree$e (pure_tree$g ?v0py77) (node$cq ?v1py67 ?v2py13 ?v3py2))) :pattern ((node$a (fun_app$av ?v0py77 ?v1py67) (ap_tree$e (pure_tree$g ?v0py77) ?v2py13) (ap_tree$e (pure_tree$g ?v0py77) ?v3py2))) )) :named A78))
(assert (! (forall ((?v0py78 Bool_bool_fun$)(?v1py68 Bool)(?v2py14 Bool_tree$)(?v3py3 Bool_tree$)) (! (= (ap_tree$a (pure_tree$b ?v0py78) (node$cq ?v1py68 ?v2py14 ?v3py3)) (node$cq (fun_app$ae ?v0py78 ?v1py68) (ap_tree$a (pure_tree$b ?v0py78) ?v2py14) (ap_tree$a (pure_tree$b ?v0py78) ?v3py3))) :pattern ((ap_tree$a (pure_tree$b ?v0py78) (node$cq ?v1py68 ?v2py14 ?v3py3))) :pattern ((node$cq (fun_app$ae ?v0py78 ?v1py68) (ap_tree$a (pure_tree$b ?v0py78) ?v2py14) (ap_tree$a (pure_tree$b ?v0py78) ?v3py3))) )) :named A79))
(assert (! (forall ((?v0py79 A_bool_bool_fun_fun$)(?v1py69 A$)(?v2py15 A_tree$)(?v3py4 A_tree$)) (! (= (ap_tree$h (pure_tree$j ?v0py79) (node$a ?v1py69 ?v2py15 ?v3py4)) (node$b (fun_app$i ?v0py79 ?v1py69) (ap_tree$h (pure_tree$j ?v0py79) ?v2py15) (ap_tree$h (pure_tree$j ?v0py79) ?v3py4))) :pattern ((ap_tree$h (pure_tree$j ?v0py79) (node$a ?v1py69 ?v2py15 ?v3py4))) :pattern ((node$b (fun_app$i ?v0py79 ?v1py69) (ap_tree$h (pure_tree$j ?v0py79) ?v2py15) (ap_tree$h (pure_tree$j ?v0py79) ?v3py4))) )) :named A80))
(assert (! (forall ((?v0py80 A_a_bool_fun_fun$)(?v1py70 A$)(?v2py16 A_tree$)(?v3py5 A_tree$)) (! (= (ap_tree$i (pure_tree$k ?v0py80) (node$a ?v1py70 ?v2py16 ?v3py5)) (node$ (fun_app$h ?v0py80 ?v1py70) (ap_tree$i (pure_tree$k ?v0py80) ?v2py16) (ap_tree$i (pure_tree$k ?v0py80) ?v3py5))) :pattern ((ap_tree$i (pure_tree$k ?v0py80) (node$a ?v1py70 ?v2py16 ?v3py5))) :pattern ((node$ (fun_app$h ?v0py80 ?v1py70) (ap_tree$i (pure_tree$k ?v0py80) ?v2py16) (ap_tree$i (pure_tree$k ?v0py80) ?v3py5))) )) :named A81))
(assert (! (forall ((?v0py81 Bool_a_bool_fun_fun$)(?v1py71 Bool)(?v2py17 Bool_tree$)(?v3py6 Bool_tree$)) (! (= (ap_tree$c (pure_tree$e ?v0py81) (node$cq ?v1py71 ?v2py17 ?v3py6)) (node$ (fun_app$aj ?v0py81 ?v1py71) (ap_tree$c (pure_tree$e ?v0py81) ?v2py17) (ap_tree$c (pure_tree$e ?v0py81) ?v3py6))) :pattern ((ap_tree$c (pure_tree$e ?v0py81) (node$cq ?v1py71 ?v2py17 ?v3py6))) :pattern ((node$ (fun_app$aj ?v0py81 ?v1py71) (ap_tree$c (pure_tree$e ?v0py81) ?v2py17) (ap_tree$c (pure_tree$e ?v0py81) ?v3py6))) )) :named A82))
(assert (! (forall ((?v0py82 A_bool_fun_a_fun$)(?v1py72 A_bool_fun$)(?v2py18 A_bool_fun_tree$)(?v3py7 A_bool_fun_tree$)) (! (= (ap_tree$g (pure_tree$i ?v0py82) (node$ ?v1py72 ?v2py18 ?v3py7)) (node$a (fun_app$aa ?v0py82 ?v1py72) (ap_tree$g (pure_tree$i ?v0py82) ?v2py18) (ap_tree$g (pure_tree$i ?v0py82) ?v3py7))) :pattern ((ap_tree$g (pure_tree$i ?v0py82) (node$ ?v1py72 ?v2py18 ?v3py7))) :pattern ((node$a (fun_app$aa ?v0py82 ?v1py72) (ap_tree$g (pure_tree$i ?v0py82) ?v2py18) (ap_tree$g (pure_tree$i ?v0py82) ?v3py7))) )) :named A83))
(assert (! (forall ((?v0py83 A_bool_fun_bool_fun$)(?v1py73 A_bool_fun$)(?v2py19 A_bool_fun_tree$)(?v3py8 A_bool_fun_tree$)) (! (= (ap_tree$b (pure_tree$d ?v0py83) (node$ ?v1py73 ?v2py19 ?v3py8)) (node$cq (fun_app$v ?v0py83 ?v1py73) (ap_tree$b (pure_tree$d ?v0py83) ?v2py19) (ap_tree$b (pure_tree$d ?v0py83) ?v3py8))) :pattern ((ap_tree$b (pure_tree$d ?v0py83) (node$ ?v1py73 ?v2py19 ?v3py8))) :pattern ((node$cq (fun_app$v ?v0py83 ?v1py73) (ap_tree$b (pure_tree$d ?v0py83) ?v2py19) (ap_tree$b (pure_tree$d ?v0py83) ?v3py8))) )) :named A84))
(assert (! (forall ((?v0py84 A_a_fun_a_bool_fun_fun$)(?v1py74 A_a_fun$)(?v2py20 A_a_fun_tree$)(?v3py9 A_a_fun_tree$)) (! (= (ap_tree$j (pure_tree$m ?v0py84) (node$g ?v1py74 ?v2py20 ?v3py9)) (node$ (fun_app$c ?v0py84 ?v1py74) (ap_tree$j (pure_tree$m ?v0py84) ?v2py20) (ap_tree$j (pure_tree$m ?v0py84) ?v3py9))) :pattern ((ap_tree$j (pure_tree$m ?v0py84) (node$g ?v1py74 ?v2py20 ?v3py9))) :pattern ((node$ (fun_app$c ?v0py84 ?v1py74) (ap_tree$j (pure_tree$m ?v0py84) ?v2py20) (ap_tree$j (pure_tree$m ?v0py84) ?v3py9))) )) :named A85))
(assert (! (forall ((?v0py85 A_a_bool_fun_fun_tree$)(?v1py75 A_tree$)(?v2py21 A_tree$)) (! (= (ap_tree$ (ap_tree$i (ap_tree$k c_tree$ ?v0py85) ?v1py75) ?v2py21) (ap_tree$ (ap_tree$i ?v0py85 ?v2py21) ?v1py75)) :pattern ((ap_tree$ (ap_tree$i (ap_tree$k c_tree$ ?v0py85) ?v1py75) ?v2py21)) )) :named A86))
(assert (! (forall ((?v0py86 Bool_a_bool_fun_fun_tree$)(?v1py76 A_tree$)(?v2py22 Bool_tree$)) (! (= (ap_tree$a (ap_tree$h (ap_tree$l c_tree$a ?v0py86) ?v1py76) ?v2py22) (ap_tree$ (ap_tree$c ?v0py86 ?v2py22) ?v1py76)) :pattern ((ap_tree$a (ap_tree$h (ap_tree$l c_tree$a ?v0py86) ?v1py76) ?v2py22)) :pattern ((ap_tree$ (ap_tree$c ?v0py86 ?v2py22) ?v1py76)) )) :named A87))
(assert (! (forall ((?v0py87 A_bool_bool_fun_fun_tree$)(?v1py77 Bool_tree$)(?v2py23 A_tree$)) (! (= (ap_tree$ (ap_tree$c (ap_tree$m c_tree$b ?v0py87) ?v1py77) ?v2py23) (ap_tree$a (ap_tree$h ?v0py87 ?v2py23) ?v1py77)) :pattern ((ap_tree$ (ap_tree$c (ap_tree$m c_tree$b ?v0py87) ?v1py77) ?v2py23)) :pattern ((ap_tree$a (ap_tree$h ?v0py87 ?v2py23) ?v1py77)) )) :named A88))
(assert (! (forall ((?v0py88 A_a_a_fun_fun_tree$)(?v1py78 A_tree$)(?v2py24 A_tree$)) (! (= (ap_tree$f (ap_tree$n (ap_tree$o c_tree$c ?v0py88) ?v1py78) ?v2py24) (ap_tree$f (ap_tree$n ?v0py88 ?v2py24) ?v1py78)) :pattern ((ap_tree$f (ap_tree$n (ap_tree$o c_tree$c ?v0py88) ?v1py78) ?v2py24)) )) :named A89))
(assert (! (forall ((?v0py89 A_a_fun_a_bool_fun_fun_tree$)(?v1py79 A_tree$)(?v2py25 A_a_fun_tree$)) (! (= (ap_tree$p (ap_tree$q (ap_tree$r c_tree$d ?v0py89) ?v1py79) ?v2py25) (ap_tree$ (ap_tree$j ?v0py89 ?v2py25) ?v1py79)) :pattern ((ap_tree$p (ap_tree$q (ap_tree$r c_tree$d ?v0py89) ?v1py79) ?v2py25)) :pattern ((ap_tree$ (ap_tree$j ?v0py89 ?v2py25) ?v1py79)) )) :named A90))
(assert (! (forall ((?v0py90 A_a_a_fun_bool_fun_fun_tree$)(?v1py80 A_a_fun_tree$)(?v2py26 A_tree$)) (! (= (ap_tree$ (ap_tree$j (ap_tree$s c_tree$e ?v0py90) ?v1py80) ?v2py26) (ap_tree$p (ap_tree$q ?v0py90 ?v2py26) ?v1py80)) :pattern ((ap_tree$ (ap_tree$j (ap_tree$s c_tree$e ?v0py90) ?v1py80) ?v2py26)) :pattern ((ap_tree$p (ap_tree$q ?v0py90 ?v2py26) ?v1py80)) )) :named A91))
(assert (! (forall ((?v0py91 A_a_bool_bool_fun_fun_fun_tree$)(?v1py81 A_tree$)(?v2py27 A_tree$)) (! (= (ap_tree$h (ap_tree$t (ap_tree$u c_tree$f ?v0py91) ?v1py81) ?v2py27) (ap_tree$h (ap_tree$t ?v0py91 ?v2py27) ?v1py81)) :pattern ((ap_tree$h (ap_tree$t (ap_tree$u c_tree$f ?v0py91) ?v1py81) ?v2py27)) )) :named A92))
(assert (! (forall ((?v0py92 A_a_a_bool_fun_fun_fun_tree$)(?v1py82 A_tree$)(?v2py28 A_tree$)) (! (= (ap_tree$i (ap_tree$v (ap_tree$w c_tree$g ?v0py92) ?v1py82) ?v2py28) (ap_tree$i (ap_tree$v ?v0py92 ?v2py28) ?v1py82)) :pattern ((ap_tree$i (ap_tree$v (ap_tree$w c_tree$g ?v0py92) ?v1py82) ?v2py28)) )) :named A93))
(assert (! (forall ((?v0py93 A_a_fun_a_a_bool_fun_fun_fun_tree$)(?v1py83 A_tree$)(?v2py29 A_a_fun_tree$)) (! (= (ap_tree$j (ap_tree$x (ap_tree$y c_tree$h ?v0py93) ?v1py83) ?v2py29) (ap_tree$i (ap_tree$z ?v0py93 ?v2py29) ?v1py83)) :pattern ((ap_tree$j (ap_tree$x (ap_tree$y c_tree$h ?v0py93) ?v1py83) ?v2py29)) :pattern ((ap_tree$i (ap_tree$z ?v0py93 ?v2py29) ?v1py83)) )) :named A94))
(assert (! (forall ((?v0py94 A_a_a_fun_a_bool_fun_fun_fun_tree$)(?v1py84 A_a_fun_tree$)(?v2py30 A_tree$)) (! (= (ap_tree$i (ap_tree$z (ap_tree$aa c_tree$i ?v0py94) ?v1py84) ?v2py30) (ap_tree$j (ap_tree$x ?v0py94 ?v2py30) ?v1py84)) :pattern ((ap_tree$i (ap_tree$z (ap_tree$aa c_tree$i ?v0py94) ?v1py84) ?v2py30)) :pattern ((ap_tree$j (ap_tree$x ?v0py94 ?v2py30) ?v1py84)) )) :named A95))
(assert (! (forall ((?v0py95 A_tree$)(?v1py85 A_tree$)) (! (and (or (not (= (ap_tree$ (ap_tree$i (pure_tree$k uu$) ?v0py95) ?v1py85) (pure_tree$a true))) (= ?v0py95 ?v1py85)) (or (= (ap_tree$ (ap_tree$i (pure_tree$k uu$) ?v0py95) ?v1py85) (pure_tree$a true)) (not (= ?v0py95 ?v1py85)))) :pattern ((ap_tree$ (ap_tree$i (pure_tree$k uu$) ?v0py95) ?v1py85)) )) :named A96))
(assert (! (forall ((?v0py96 A_bool_bool_fun_fun_tree$)(?v1py86 A_bool_fun_tree$)(?v2py31 A_tree$)) (! (= (ap_tree$ (ap_tree$d (ap_tree$ab s_tree$ ?v0py96) ?v1py86) ?v2py31) (ap_tree$a (ap_tree$h ?v0py96 ?v2py31) (ap_tree$ ?v1py86 ?v2py31))) :pattern ((ap_tree$ (ap_tree$d (ap_tree$ab s_tree$ ?v0py96) ?v1py86) ?v2py31)) :pattern ((ap_tree$a (ap_tree$h ?v0py96 ?v2py31) (ap_tree$ ?v1py86 ?v2py31))) )) :named A97))
(assert (! (forall ((?v0py97 A_a_bool_fun_fun_tree$)(?v1py87 A_a_fun_tree$)(?v2py32 A_tree$)) (! (= (ap_tree$ (ap_tree$j (ap_tree$ac s_tree$a ?v0py97) ?v1py87) ?v2py32) (ap_tree$ (ap_tree$i ?v0py97 ?v2py32) (ap_tree$f ?v1py87 ?v2py32))) :pattern ((ap_tree$ (ap_tree$j (ap_tree$ac s_tree$a ?v0py97) ?v1py87) ?v2py32)) :pattern ((ap_tree$ (ap_tree$i ?v0py97 ?v2py32) (ap_tree$f ?v1py87 ?v2py32))) )) :named A98))
(assert (! (forall ((?v0py98 A_bool_a_fun_fun_tree$)(?v1py88 A_bool_fun_tree$)(?v2py33 A_tree$)) (! (= (ap_tree$f (ap_tree$ad (ap_tree$ae s_tree$b ?v0py98) ?v1py88) ?v2py33) (ap_tree$e (ap_tree$af ?v0py98 ?v2py33) (ap_tree$ ?v1py88 ?v2py33))) :pattern ((ap_tree$f (ap_tree$ad (ap_tree$ae s_tree$b ?v0py98) ?v1py88) ?v2py33)) :pattern ((ap_tree$e (ap_tree$af ?v0py98 ?v2py33) (ap_tree$ ?v1py88 ?v2py33))) )) :named A99))
(assert (! (forall ((?v0py99 A_a_a_fun_fun_tree$)(?v1py89 A_a_fun_tree$)(?v2py34 A_tree$)) (! (= (ap_tree$f (ap_tree$ag (ap_tree$ah s_tree$c ?v0py99) ?v1py89) ?v2py34) (ap_tree$f (ap_tree$n ?v0py99 ?v2py34) (ap_tree$f ?v1py89 ?v2py34))) :pattern ((ap_tree$f (ap_tree$ag (ap_tree$ah s_tree$c ?v0py99) ?v1py89) ?v2py34)) :pattern ((ap_tree$f (ap_tree$n ?v0py99 ?v2py34) (ap_tree$f ?v1py89 ?v2py34))) )) :named A100))
(assert (! (forall ((?v0py100 A_a_fun_a_bool_fun_fun_tree$)(?v1py90 A_a_fun_a_fun_tree$)(?v2py35 A_a_fun_tree$)) (! (= (ap_tree$p (ap_tree$ai (ap_tree$aj s_tree$d ?v0py100) ?v1py90) ?v2py35) (ap_tree$ (ap_tree$j ?v0py100 ?v2py35) (ap_tree$ak ?v1py90 ?v2py35))) :pattern ((ap_tree$p (ap_tree$ai (ap_tree$aj s_tree$d ?v0py100) ?v1py90) ?v2py35)) :pattern ((ap_tree$ (ap_tree$j ?v0py100 ?v2py35) (ap_tree$ak ?v1py90 ?v2py35))) )) :named A101))
(assert (! (forall ((?v0py101 A_bool_bool_fun_bool_fun_fun_tree$)(?v1py91 A_bool_bool_fun_fun_tree$)(?v2py36 A_tree$)) (! (= (ap_tree$ (ap_tree$al (ap_tree$am s_tree$e ?v0py101) ?v1py91) ?v2py36) (ap_tree$an (ap_tree$ao ?v0py101 ?v2py36) (ap_tree$h ?v1py91 ?v2py36))) :pattern ((ap_tree$ (ap_tree$al (ap_tree$am s_tree$e ?v0py101) ?v1py91) ?v2py36)) :pattern ((ap_tree$an (ap_tree$ao ?v0py101 ?v2py36) (ap_tree$h ?v1py91 ?v2py36))) )) :named A102))
(assert (! (forall ((?v0py102 A_a_bool_fun_bool_fun_fun_tree$)(?v1py92 A_a_bool_fun_fun_tree$)(?v2py37 A_tree$)) (! (= (ap_tree$ (ap_tree$ap (ap_tree$aq s_tree$f ?v0py102) ?v1py92) ?v2py37) (ap_tree$b (ap_tree$ar ?v0py102 ?v2py37) (ap_tree$i ?v1py92 ?v2py37))) :pattern ((ap_tree$ (ap_tree$ap (ap_tree$aq s_tree$f ?v0py102) ?v1py92) ?v2py37)) :pattern ((ap_tree$b (ap_tree$ar ?v0py102 ?v2py37) (ap_tree$i ?v1py92 ?v2py37))) )) :named A103))
(assert (! (forall ((?v0py103 A_bool_bool_bool_fun_fun_fun_tree$)(?v1py93 A_bool_fun_tree$)(?v2py38 A_tree$)) (! (= (ap_tree$h (ap_tree$as (ap_tree$at s_tree$g ?v0py103) ?v1py93) ?v2py38) (ap_tree$au (ap_tree$av ?v0py103 ?v2py38) (ap_tree$ ?v1py93 ?v2py38))) :pattern ((ap_tree$h (ap_tree$as (ap_tree$at s_tree$g ?v0py103) ?v1py93) ?v2py38)) :pattern ((ap_tree$au (ap_tree$av ?v0py103 ?v2py38) (ap_tree$ ?v1py93 ?v2py38))) )) :named A104))
(assert (! (forall ((?v0py104 A_a_bool_bool_fun_fun_fun_tree$)(?v1py94 A_a_fun_tree$)(?v2py39 A_tree$)) (! (= (ap_tree$h (ap_tree$aw (ap_tree$ax s_tree$h ?v0py104) ?v1py94) ?v2py39) (ap_tree$h (ap_tree$t ?v0py104 ?v2py39) (ap_tree$f ?v1py94 ?v2py39))) :pattern ((ap_tree$h (ap_tree$aw (ap_tree$ax s_tree$h ?v0py104) ?v1py94) ?v2py39)) :pattern ((ap_tree$h (ap_tree$t ?v0py104 ?v2py39) (ap_tree$f ?v1py94 ?v2py39))) )) :named A105))
(assert (! (forall ((?v0py105 A_bool_a_bool_fun_fun_fun_tree$)(?v1py95 A_bool_fun_tree$)(?v2py40 A_tree$)) (! (= (ap_tree$i (ap_tree$ay (ap_tree$az s_tree$i ?v0py105) ?v1py95) ?v2py40) (ap_tree$c (ap_tree$ba ?v0py105 ?v2py40) (ap_tree$ ?v1py95 ?v2py40))) :pattern ((ap_tree$i (ap_tree$ay (ap_tree$az s_tree$i ?v0py105) ?v1py95) ?v2py40)) :pattern ((ap_tree$c (ap_tree$ba ?v0py105 ?v2py40) (ap_tree$ ?v1py95 ?v2py40))) )) :named A106))
(assert (! (forall ((?v0py106 A_bool_fun$)(?v1py96 A_tree$)) (! (= (ap_tree$ (pure_tree$ ?v0py106) ?v1py96) (fun_app$aw (map_tree$ ?v0py106) ?v1py96)) :pattern ((ap_tree$ (pure_tree$ ?v0py106) ?v1py96)) :pattern ((fun_app$aw (map_tree$ ?v0py106) ?v1py96)) )) :named A107))
(assert (! (forall ((?v0py107 A_a_fun$)(?v1py97 A_tree$)) (! (= (ap_tree$f (pure_tree$h ?v0py107) ?v1py97) (fun_app$ax (map_tree$a ?v0py107) ?v1py97)) :pattern ((ap_tree$f (pure_tree$h ?v0py107) ?v1py97)) :pattern ((fun_app$ax (map_tree$a ?v0py107) ?v1py97)) )) :named A108))
(assert (! (forall ((?v0py108 Bool_bool_fun$)(?v1py98 Bool_tree$)) (! (= (ap_tree$a (pure_tree$b ?v0py108) ?v1py98) (fun_app$ay (map_tree$b ?v0py108) ?v1py98)) :pattern ((ap_tree$a (pure_tree$b ?v0py108) ?v1py98)) :pattern ((fun_app$ay (map_tree$b ?v0py108) ?v1py98)) )) :named A109))
(assert (! (forall ((?v0py109 A_bool_bool_fun_fun$)(?v1py99 A_tree$)) (! (= (ap_tree$h (pure_tree$j ?v0py109) ?v1py99) (map_tree$c ?v0py109 ?v1py99)) :pattern ((ap_tree$h (pure_tree$j ?v0py109) ?v1py99)) :pattern ((map_tree$c ?v0py109 ?v1py99)) )) :named A110))
(assert (! (forall ((?v0py110 A_a_bool_fun_fun$)(?v1py100 A_tree$)) (! (= (ap_tree$i (pure_tree$k ?v0py110) ?v1py100) (fun_app$az (map_tree$d ?v0py110) ?v1py100)) :pattern ((ap_tree$i (pure_tree$k ?v0py110) ?v1py100)) :pattern ((fun_app$az (map_tree$d ?v0py110) ?v1py100)) )) :named A111))
(assert (! (forall ((?v0py111 Bool_a_bool_fun_fun$)(?v1py101 Bool_tree$)) (! (= (ap_tree$c (pure_tree$e ?v0py111) ?v1py101) (fun_app$ba (map_tree$e ?v0py111) ?v1py101)) :pattern ((ap_tree$c (pure_tree$e ?v0py111) ?v1py101)) :pattern ((fun_app$ba (map_tree$e ?v0py111) ?v1py101)) )) :named A112))
(assert (! (forall ((?v0py112 A_bool_fun_bool_fun$)(?v1py102 A_bool_fun_tree$)) (! (= (ap_tree$b (pure_tree$d ?v0py112) ?v1py102) (fun_app$bb (map_tree$f ?v0py112) ?v1py102)) :pattern ((ap_tree$b (pure_tree$d ?v0py112) ?v1py102)) :pattern ((fun_app$bb (map_tree$f ?v0py112) ?v1py102)) )) :named A113))
(assert (! (forall ((?v0py113 A_a_fun_a_bool_fun_fun$)(?v1py103 A_a_fun_tree$)) (! (= (ap_tree$j (pure_tree$m ?v0py113) ?v1py103) (map_tree$g ?v0py113 ?v1py103)) :pattern ((ap_tree$j (pure_tree$m ?v0py113) ?v1py103)) :pattern ((map_tree$g ?v0py113 ?v1py103)) )) :named A114))
(assert (! (forall ((?v0py114 A_bool_fun_a_bool_fun_fun$)(?v1py104 A_bool_fun_tree$)) (! (= (ap_tree$d (pure_tree$f ?v0py114) ?v1py104) (fun_app$bc (map_tree$h ?v0py114) ?v1py104)) :pattern ((ap_tree$d (pure_tree$f ?v0py114) ?v1py104)) :pattern ((fun_app$bc (map_tree$h ?v0py114) ?v1py104)) )) :named A115))
(assert (! (forall ((?v0py115 A_a_bool_fun_fun_a_bool_fun_fun$)(?v1py105 A_a_bool_fun_fun_tree$)) (! (= (ap_tree$ap (pure_tree$l ?v0py115) ?v1py105) (map_tree$i ?v0py115 ?v1py105)) :pattern ((ap_tree$ap (pure_tree$l ?v0py115) ?v1py105)) :pattern ((map_tree$i ?v0py115 ?v1py105)) )) :named A116))
(assert (! (forall ((?v0py116 Bool_bool_fun_tree$)) (! (= (ap_tree$bb (pure_tree$n id$) ?v0py116) ?v0py116) :pattern ((ap_tree$bb (pure_tree$n id$) ?v0py116)) )) :named A117))
(assert (! (forall ((?v0py117 Bool_tree$)) (! (= (ap_tree$a (pure_tree$b id$a) ?v0py117) ?v0py117) :pattern ((ap_tree$a (pure_tree$b id$a) ?v0py117)) )) :named A118))
(assert (! (forall ((?v0py118 A_bool_fun_a_bool_fun_fun_tree$)) (! (= (ap_tree$bc (pure_tree$o id$b) ?v0py118) ?v0py118) :pattern ((ap_tree$bc (pure_tree$o id$b) ?v0py118)) )) :named A119))
(assert (! (forall ((?v0py119 A_a_bool_fun_fun_tree$)) (! (= (ap_tree$k (pure_tree$p id$c) ?v0py119) ?v0py119) :pattern ((ap_tree$k (pure_tree$p id$c) ?v0py119)) )) :named A120))
(assert (! (forall ((?v0py120 A_tree$)) (! (= (ap_tree$f (pure_tree$h id$d) ?v0py120) ?v0py120) :pattern ((ap_tree$f (pure_tree$h id$d) ?v0py120)) )) :named A121))
(assert (! (forall ((?v0py121 A_bool_fun_tree$)) (! (= (ap_tree$d (pure_tree$f id$e) ?v0py121) ?v0py121) :pattern ((ap_tree$d (pure_tree$f id$e) ?v0py121)) )) :named A122))
(assert (! (forall ((?v0py122 A$)(?v1py106 A_tree$)(?v2py41 A_tree$)(?v3py10 A$)(?v4py0 A_tree$)(?v5py0 A_tree$)) (! (and (or (not (= (node$a ?v0py122 ?v1py106 ?v2py41) (node$a ?v3py10 ?v4py0 ?v5py0))) (and (= ?v0py122 ?v3py10) (= ?v1py106 ?v4py0) (= ?v2py41 ?v5py0))) (or (= (node$a ?v0py122 ?v1py106 ?v2py41) (node$a ?v3py10 ?v4py0 ?v5py0)) (not (= ?v0py122 ?v3py10)) (not (= ?v1py106 ?v4py0)) (not (= ?v2py41 ?v5py0)))) :pattern ((node$a ?v0py122 ?v1py106 ?v2py41) (node$a ?v3py10 ?v4py0 ?v5py0)) )) :named A123))
(assert (! (forall ((?v0py123 Bool)(?v1py107 Bool_tree$)(?v2py42 Bool_tree$)(?v3py11 Bool)(?v4py1 Bool_tree$)(?v5py1 Bool_tree$)) (! (and (or (not (= (node$cq ?v0py123 ?v1py107 ?v2py42) (node$cq ?v3py11 ?v4py1 ?v5py1))) (and (or (not ?v0py123) ?v3py11) (or ?v0py123 (not ?v3py11)) (= ?v1py107 ?v4py1) (= ?v2py42 ?v5py1))) (or (= (node$cq ?v0py123 ?v1py107 ?v2py42) (node$cq ?v3py11 ?v4py1 ?v5py1)) (not (= ?v1py107 ?v4py1)) (not (= ?v2py42 ?v5py1)) (and (or ?v3py11 ?v0py123) (or (not ?v0py123) (not ?v3py11))))) :pattern ((node$cq ?v0py123 ?v1py107 ?v2py42) (node$cq ?v3py11 ?v4py1 ?v5py1)) )) :named A124))
(assert (! (forall ((?v0py124 A_bool_fun$)(?v1py108 A_bool_fun_tree$)(?v2py43 A_bool_fun_tree$)(?v3py12 A_bool_fun$)(?v4py2 A_bool_fun_tree$)(?v5py2 A_bool_fun_tree$)) (! (and (or (not (= (node$ ?v0py124 ?v1py108 ?v2py43) (node$ ?v3py12 ?v4py2 ?v5py2))) (and (= ?v0py124 ?v3py12) (= ?v1py108 ?v4py2) (= ?v2py43 ?v5py2))) (or (= (node$ ?v0py124 ?v1py108 ?v2py43) (node$ ?v3py12 ?v4py2 ?v5py2)) (not (= ?v2py43 ?v5py2)) (not (= ?v0py124 ?v3py12)) (not (= ?v1py108 ?v4py2)))) :pattern ((node$ ?v0py124 ?v1py108 ?v2py43) (node$ ?v3py12 ?v4py2 ?v5py2)) )) :named A125))
(assert (! (forall ((?v0py125 Bool_bool_fun$)(?v1py109 Bool)) (! (= (fun_app$ay (map_tree$b ?v0py125) (pure_tree$a ?v1py109)) (pure_tree$a (fun_app$ae ?v0py125 ?v1py109))) :pattern ((fun_app$ay (map_tree$b ?v0py125) (pure_tree$a ?v1py109))) :pattern ((fun_app$ae ?v0py125 ?v1py109)) )) :named A126))
(assert (! (forall ((?v0py126 A_bool_fun_bool_fun$)(?v1py110 A_bool_fun$)) (! (= (fun_app$bb (map_tree$f ?v0py126) (pure_tree$ ?v1py110)) (pure_tree$a (fun_app$v ?v0py126 ?v1py110))) :pattern ((fun_app$bb (map_tree$f ?v0py126) (pure_tree$ ?v1py110))) :pattern ((fun_app$v ?v0py126 ?v1py110)) )) :named A127))
(assert (! (forall ((?v0py127 Bool_a_bool_fun_fun$)(?v1py111 Bool)) (! (= (fun_app$ba (map_tree$e ?v0py127) (pure_tree$a ?v1py111)) (pure_tree$ (fun_app$aj ?v0py127 ?v1py111))) :pattern ((fun_app$ba (map_tree$e ?v0py127) (pure_tree$a ?v1py111))) :pattern ((fun_app$aj ?v0py127 ?v1py111)) )) :named A128))
(assert (! (forall ((?v0py128 A_bool_fun_a_bool_fun_fun$)(?v1py112 A_bool_fun$)) (! (= (fun_app$bc (map_tree$h ?v0py128) (pure_tree$ ?v1py112)) (pure_tree$ (fun_app$z ?v0py128 ?v1py112))) :pattern ((fun_app$bc (map_tree$h ?v0py128) (pure_tree$ ?v1py112))) :pattern ((fun_app$z ?v0py128 ?v1py112)) )) :named A129))
(assert (! (forall ((?v0py129 Bool_a_fun$)(?v1py113 Bool)) (! (= (fun_app$bd (map_tree$j ?v0py129) (pure_tree$a ?v1py113)) (pure_tree$c (fun_app$av ?v0py129 ?v1py113))) :pattern ((fun_app$bd (map_tree$j ?v0py129) (pure_tree$a ?v1py113))) :pattern ((fun_app$av ?v0py129 ?v1py113)) )) :named A130))
(assert (! (forall ((?v0py130 A_a_fun$)(?v1py114 A$)) (! (= (fun_app$ax (map_tree$a ?v0py130) (pure_tree$c ?v1py114)) (pure_tree$c (fun_app$n ?v0py130 ?v1py114))) :pattern ((fun_app$ax (map_tree$a ?v0py130) (pure_tree$c ?v1py114))) :pattern ((fun_app$n ?v0py130 ?v1py114)) )) :named A131))
(assert (! (forall ((?v0py131 A_bool_fun$)(?v1py115 A$)) (! (= (fun_app$aw (map_tree$ ?v0py131) (pure_tree$c ?v1py115)) (pure_tree$a (fun_app$f ?v0py131 ?v1py115))) :pattern ((fun_app$aw (map_tree$ ?v0py131) (pure_tree$c ?v1py115))) :pattern ((fun_app$f ?v0py131 ?v1py115)) )) :named A132))
(assert (! (forall ((?v0py132 A_bool_fun_a_fun$)(?v1py116 A_bool_fun$)) (! (= (fun_app$be (map_tree$k ?v0py132) (pure_tree$ ?v1py116)) (pure_tree$c (fun_app$aa ?v0py132 ?v1py116))) :pattern ((fun_app$be (map_tree$k ?v0py132) (pure_tree$ ?v1py116))) :pattern ((fun_app$aa ?v0py132 ?v1py116)) )) :named A133))
(assert (! (forall ((?v0py133 A_a_bool_fun_fun$)(?v1py117 A$)) (! (= (fun_app$az (map_tree$d ?v0py133) (pure_tree$c ?v1py117)) (pure_tree$ (fun_app$h ?v0py133 ?v1py117))) :pattern ((fun_app$az (map_tree$d ?v0py133) (pure_tree$c ?v1py117))) :pattern ((fun_app$h ?v0py133 ?v1py117)) )) :named A134))
(assert (! (forall ((?v0py134 Bool_a_bool_bool_fun_fun_fun$)(?v1py118 Bool)) (! (= (map_tree$l ?v0py134 (pure_tree$a ?v1py118)) (pure_tree$j (fun_app$bf ?v0py134 ?v1py118))) :pattern ((map_tree$l ?v0py134 (pure_tree$a ?v1py118))) :pattern ((fun_app$bf ?v0py134 ?v1py118)) )) :named A135))
(assert (! (forall ((?v0py135 A_bool_fun$)(?v1py119 A_bool_fun_tree$)(?v2py44 A_bool_fun_tree$)(?v3py13 A$)(?v4py3 A_tree$)(?v5py3 A_tree$)) (! (= (ap_tree$ (node$ ?v0py135 ?v1py119 ?v2py44) (node$a ?v3py13 ?v4py3 ?v5py3)) (node$cq (fun_app$f ?v0py135 ?v3py13) (ap_tree$ ?v1py119 ?v4py3) (ap_tree$ ?v2py44 ?v5py3))) :pattern ((ap_tree$ (node$ ?v0py135 ?v1py119 ?v2py44) (node$a ?v3py13 ?v4py3 ?v5py3))) )) :named A136))
(assert (! (forall ((?v0py136 A_a_fun$)(?v1py120 A_a_fun_tree$)(?v2py45 A_a_fun_tree$)(?v3py14 A$)(?v4py4 A_tree$)(?v5py4 A_tree$)) (! (= (ap_tree$f (node$g ?v0py136 ?v1py120 ?v2py45) (node$a ?v3py14 ?v4py4 ?v5py4)) (node$a (fun_app$n ?v0py136 ?v3py14) (ap_tree$f ?v1py120 ?v4py4) (ap_tree$f ?v2py45 ?v5py4))) :pattern ((ap_tree$f (node$g ?v0py136 ?v1py120 ?v2py45) (node$a ?v3py14 ?v4py4 ?v5py4))) )) :named A137))
(assert (! (forall ((?v0py137 Bool_a_fun$)(?v1py121 Bool_a_fun_tree$)(?v2py46 Bool_a_fun_tree$)(?v3py15 Bool)(?v4py5 Bool_tree$)(?v5py5 Bool_tree$)) (! (= (ap_tree$e (node$f ?v0py137 ?v1py121 ?v2py46) (node$cq ?v3py15 ?v4py5 ?v5py5)) (node$a (fun_app$av ?v0py137 ?v3py15) (ap_tree$e ?v1py121 ?v4py5) (ap_tree$e ?v2py46 ?v5py5))) :pattern ((ap_tree$e (node$f ?v0py137 ?v1py121 ?v2py46) (node$cq ?v3py15 ?v4py5 ?v5py5))) )) :named A138))
(assert (! (forall ((?v0py138 Bool_bool_fun$)(?v1py122 Bool_bool_fun_tree$)(?v2py47 Bool_bool_fun_tree$)(?v3py16 Bool)(?v4py6 Bool_tree$)(?v5py6 Bool_tree$)) (! (= (ap_tree$a (node$b ?v0py138 ?v1py122 ?v2py47) (node$cq ?v3py16 ?v4py6 ?v5py6)) (node$cq (fun_app$ae ?v0py138 ?v3py16) (ap_tree$a ?v1py122 ?v4py6) (ap_tree$a ?v2py47 ?v5py6))) :pattern ((ap_tree$a (node$b ?v0py138 ?v1py122 ?v2py47) (node$cq ?v3py16 ?v4py6 ?v5py6))) )) :named A139))
(assert (! (forall ((?v0py139 A_bool_bool_fun_fun$)(?v1py123 A_bool_bool_fun_fun_tree$)(?v2py48 A_bool_bool_fun_fun_tree$)(?v3py17 A$)(?v4py7 A_tree$)(?v5py7 A_tree$)) (! (= (ap_tree$h (node$i ?v0py139 ?v1py123 ?v2py48) (node$a ?v3py17 ?v4py7 ?v5py7)) (node$b (fun_app$i ?v0py139 ?v3py17) (ap_tree$h ?v1py123 ?v4py7) (ap_tree$h ?v2py48 ?v5py7))) :pattern ((ap_tree$h (node$i ?v0py139 ?v1py123 ?v2py48) (node$a ?v3py17 ?v4py7 ?v5py7))) )) :named A140))
(assert (! (forall ((?v0py140 A_a_bool_fun_fun$)(?v1py124 A_a_bool_fun_fun_tree$)(?v2py49 A_a_bool_fun_fun_tree$)(?v3py18 A$)(?v4py8 A_tree$)(?v5py8 A_tree$)) (! (= (ap_tree$i (node$j ?v0py140 ?v1py124 ?v2py49) (node$a ?v3py18 ?v4py8 ?v5py8)) (node$ (fun_app$h ?v0py140 ?v3py18) (ap_tree$i ?v1py124 ?v4py8) (ap_tree$i ?v2py49 ?v5py8))) :pattern ((ap_tree$i (node$j ?v0py140 ?v1py124 ?v2py49) (node$a ?v3py18 ?v4py8 ?v5py8))) )) :named A141))
(assert (! (forall ((?v0py141 Bool_a_bool_fun_fun$)(?v1py125 Bool_a_bool_fun_fun_tree$)(?v2py50 Bool_a_bool_fun_fun_tree$)(?v3py19 Bool)(?v4py9 Bool_tree$)(?v5py9 Bool_tree$)) (! (= (ap_tree$c (node$d ?v0py141 ?v1py125 ?v2py50) (node$cq ?v3py19 ?v4py9 ?v5py9)) (node$ (fun_app$aj ?v0py141 ?v3py19) (ap_tree$c ?v1py125 ?v4py9) (ap_tree$c ?v2py50 ?v5py9))) :pattern ((ap_tree$c (node$d ?v0py141 ?v1py125 ?v2py50) (node$cq ?v3py19 ?v4py9 ?v5py9))) )) :named A142))
(assert (! (forall ((?v0py142 A_bool_fun_a_fun$)(?v1py126 A_bool_fun_a_fun_tree$)(?v2py51 A_bool_fun_a_fun_tree$)(?v3py20 A_bool_fun$)(?v4py10 A_bool_fun_tree$)(?v5py10 A_bool_fun_tree$)) (! (= (ap_tree$g (node$h ?v0py142 ?v1py126 ?v2py51) (node$ ?v3py20 ?v4py10 ?v5py10)) (node$a (fun_app$aa ?v0py142 ?v3py20) (ap_tree$g ?v1py126 ?v4py10) (ap_tree$g ?v2py51 ?v5py10))) :pattern ((ap_tree$g (node$h ?v0py142 ?v1py126 ?v2py51) (node$ ?v3py20 ?v4py10 ?v5py10))) )) :named A143))
(assert (! (forall ((?v0py143 A_bool_fun_bool_fun$)(?v1py127 A_bool_fun_bool_fun_tree$)(?v2py52 A_bool_fun_bool_fun_tree$)(?v3py21 A_bool_fun$)(?v4py11 A_bool_fun_tree$)(?v5py11 A_bool_fun_tree$)) (! (= (ap_tree$b (node$c ?v0py143 ?v1py127 ?v2py52) (node$ ?v3py21 ?v4py11 ?v5py11)) (node$cq (fun_app$v ?v0py143 ?v3py21) (ap_tree$b ?v1py127 ?v4py11) (ap_tree$b ?v2py52 ?v5py11))) :pattern ((ap_tree$b (node$c ?v0py143 ?v1py127 ?v2py52) (node$ ?v3py21 ?v4py11 ?v5py11))) )) :named A144))
(assert (! (forall ((?v0py144 A_a_fun_a_bool_fun_fun$)(?v1py128 A_a_fun_a_bool_fun_fun_tree$)(?v2py53 A_a_fun_a_bool_fun_fun_tree$)(?v3py22 A_a_fun$)(?v4py12 A_a_fun_tree$)(?v5py12 A_a_fun_tree$)) (! (= (ap_tree$j (node$k ?v0py144 ?v1py128 ?v2py53) (node$g ?v3py22 ?v4py12 ?v5py12)) (node$ (fun_app$c ?v0py144 ?v3py22) (ap_tree$j ?v1py128 ?v4py12) (ap_tree$j ?v2py53 ?v5py12))) :pattern ((ap_tree$j (node$k ?v0py144 ?v1py128 ?v2py53) (node$g ?v3py22 ?v4py12 ?v5py12))) )) :named A145))
(assert (! (forall ((?v0py145 A_bool_fun_tree$)(?v1py129 A_tree$)) (! (= (tree_chop$f (ap_tree$ ?v0py145 ?v1py129)) (ap_tree$ (tree_chop$e ?v0py145) (tree_chop$d ?v1py129))) :pattern ((tree_chop$f (ap_tree$ ?v0py145 ?v1py129))) :pattern ((ap_tree$ (tree_chop$e ?v0py145) (tree_chop$d ?v1py129))) )) :named A146))
(assert (! (forall ((?v0py146 Bool_bool_fun_tree$)(?v1py130 Bool_tree$)) (! (= (tree_chop$f (ap_tree$a ?v0py146 ?v1py130)) (ap_tree$a (tree_chop$g ?v0py146) (tree_chop$f ?v1py130))) :pattern ((tree_chop$f (ap_tree$a ?v0py146 ?v1py130))) :pattern ((ap_tree$a (tree_chop$g ?v0py146) (tree_chop$f ?v1py130))) )) :named A147))
(assert (! (forall ((?v0py147 Bool_a_fun_tree$)(?v1py131 Bool_tree$)) (! (= (tree_chop$d (ap_tree$e ?v0py147 ?v1py131)) (ap_tree$e (tree_chop$h ?v0py147) (tree_chop$f ?v1py131))) :pattern ((tree_chop$d (ap_tree$e ?v0py147 ?v1py131))) :pattern ((ap_tree$e (tree_chop$h ?v0py147) (tree_chop$f ?v1py131))) )) :named A148))
(assert (! (forall ((?v0py148 A_a_fun_tree$)(?v1py132 A_tree$)) (! (= (tree_chop$d (ap_tree$f ?v0py148 ?v1py132)) (ap_tree$f (tree_chop$i ?v0py148) (tree_chop$d ?v1py132))) :pattern ((tree_chop$d (ap_tree$f ?v0py148 ?v1py132))) :pattern ((ap_tree$f (tree_chop$i ?v0py148) (tree_chop$d ?v1py132))) )) :named A149))
(assert (! (forall ((?v0py149 A_bool_bool_fun_fun_tree$)(?v1py133 A_tree$)) (! (= (tree_chop$g (ap_tree$h ?v0py149 ?v1py133)) (ap_tree$h (tree_chop$b ?v0py149) (tree_chop$d ?v1py133))) :pattern ((tree_chop$g (ap_tree$h ?v0py149 ?v1py133))) :pattern ((ap_tree$h (tree_chop$b ?v0py149) (tree_chop$d ?v1py133))) )) :named A150))
(assert (! (forall ((?v0py150 A_bool_fun_bool_fun_tree$)(?v1py134 A_bool_fun_tree$)) (! (= (tree_chop$f (ap_tree$b ?v0py150 ?v1py134)) (ap_tree$b (tree_chop$j ?v0py150) (tree_chop$e ?v1py134))) :pattern ((tree_chop$f (ap_tree$b ?v0py150 ?v1py134))) :pattern ((ap_tree$b (tree_chop$j ?v0py150) (tree_chop$e ?v1py134))) )) :named A151))
(assert (! (forall ((?v0py151 Bool_a_bool_fun_fun_tree$)(?v1py135 Bool_tree$)) (! (= (tree_chop$e (ap_tree$c ?v0py151 ?v1py135)) (ap_tree$c (tree_chop$k ?v0py151) (tree_chop$f ?v1py135))) :pattern ((tree_chop$e (ap_tree$c ?v0py151 ?v1py135))) :pattern ((ap_tree$c (tree_chop$k ?v0py151) (tree_chop$f ?v1py135))) )) :named A152))
(assert (! (forall ((?v0py152 A_a_bool_fun_fun_tree$)(?v1py136 A_tree$)) (! (= (tree_chop$e (ap_tree$i ?v0py152 ?v1py136)) (ap_tree$i (tree_chop$c ?v0py152) (tree_chop$d ?v1py136))) :pattern ((tree_chop$e (ap_tree$i ?v0py152 ?v1py136))) :pattern ((ap_tree$i (tree_chop$c ?v0py152) (tree_chop$d ?v1py136))) )) :named A153))
(assert (! (forall ((?v0py153 A_bool_fun_a_fun_tree$)(?v1py137 A_bool_fun_tree$)) (! (= (tree_chop$d (ap_tree$g ?v0py153 ?v1py137)) (ap_tree$g (tree_chop$l ?v0py153) (tree_chop$e ?v1py137))) :pattern ((tree_chop$d (ap_tree$g ?v0py153 ?v1py137))) :pattern ((ap_tree$g (tree_chop$l ?v0py153) (tree_chop$e ?v1py137))) )) :named A154))
(assert (! (forall ((?v0py154 A_a_fun_a_bool_fun_fun_tree$)(?v1py138 A_a_fun_tree$)) (! (= (tree_chop$e (ap_tree$j ?v0py154 ?v1py138)) (ap_tree$j (tree_chop$m ?v0py154) (tree_chop$i ?v1py138))) :pattern ((tree_chop$e (ap_tree$j ?v0py154 ?v1py138))) :pattern ((ap_tree$j (tree_chop$m ?v0py154) (tree_chop$i ?v1py138))) )) :named A155))
(assert (! (forall ((?v0py155 A_a_fun$)(?v1py139 A$)(?v2py54 A_tree$)(?v3py23 A_tree$)) (! (= (fun_app$ax (map_tree$a ?v0py155) (node$a ?v1py139 ?v2py54 ?v3py23)) (node$a (fun_app$n ?v0py155 ?v1py139) (fun_app$ax (map_tree$a ?v0py155) ?v2py54) (fun_app$ax (map_tree$a ?v0py155) ?v3py23))) :pattern ((fun_app$ax (map_tree$a ?v0py155) (node$a ?v1py139 ?v2py54 ?v3py23))) )) :named A156))
(assert (! (forall ((?v0py156 A_a_bool_fun_fun$)(?v1py140 A$)(?v2py55 A_tree$)(?v3py24 A_tree$)) (! (= (fun_app$az (map_tree$d ?v0py156) (node$a ?v1py140 ?v2py55 ?v3py24)) (node$ (fun_app$h ?v0py156 ?v1py140) (fun_app$az (map_tree$d ?v0py156) ?v2py55) (fun_app$az (map_tree$d ?v0py156) ?v3py24))) :pattern ((fun_app$az (map_tree$d ?v0py156) (node$a ?v1py140 ?v2py55 ?v3py24))) )) :named A157))
(assert (! (forall ((?v0py157 Bool_a_fun$)(?v1py141 Bool)(?v2py56 Bool_tree$)(?v3py25 Bool_tree$)) (! (= (fun_app$bd (map_tree$j ?v0py157) (node$cq ?v1py141 ?v2py56 ?v3py25)) (node$a (fun_app$av ?v0py157 ?v1py141) (fun_app$bd (map_tree$j ?v0py157) ?v2py56) (fun_app$bd (map_tree$j ?v0py157) ?v3py25))) :pattern ((fun_app$bd (map_tree$j ?v0py157) (node$cq ?v1py141 ?v2py56 ?v3py25))) )) :named A158))
(assert (! (forall ((?v0py158 A_bool_fun_a_fun$)(?v1py142 A_bool_fun$)(?v2py57 A_bool_fun_tree$)(?v3py26 A_bool_fun_tree$)) (! (= (fun_app$be (map_tree$k ?v0py158) (node$ ?v1py142 ?v2py57 ?v3py26)) (node$a (fun_app$aa ?v0py158 ?v1py142) (fun_app$be (map_tree$k ?v0py158) ?v2py57) (fun_app$be (map_tree$k ?v0py158) ?v3py26))) :pattern ((fun_app$be (map_tree$k ?v0py158) (node$ ?v1py142 ?v2py57 ?v3py26))) )) :named A159))
(assert (! (forall ((?v0py159 A_bool_fun$)(?v1py143 A$)(?v2py58 A_tree$)(?v3py27 A_tree$)) (! (= (fun_app$aw (map_tree$ ?v0py159) (node$a ?v1py143 ?v2py58 ?v3py27)) (node$cq (fun_app$f ?v0py159 ?v1py143) (fun_app$aw (map_tree$ ?v0py159) ?v2py58) (fun_app$aw (map_tree$ ?v0py159) ?v3py27))) :pattern ((fun_app$aw (map_tree$ ?v0py159) (node$a ?v1py143 ?v2py58 ?v3py27))) )) :named A160))
(assert (! (forall ((?v0py160 Bool_bool_fun$)(?v1py144 Bool)(?v2py59 Bool_tree$)(?v3py28 Bool_tree$)) (! (= (fun_app$ay (map_tree$b ?v0py160) (node$cq ?v1py144 ?v2py59 ?v3py28)) (node$cq (fun_app$ae ?v0py160 ?v1py144) (fun_app$ay (map_tree$b ?v0py160) ?v2py59) (fun_app$ay (map_tree$b ?v0py160) ?v3py28))) :pattern ((fun_app$ay (map_tree$b ?v0py160) (node$cq ?v1py144 ?v2py59 ?v3py28))) )) :named A161))
(assert (! (forall ((?v0py161 Bool_a_bool_fun_fun$)(?v1py145 Bool)(?v2py60 Bool_tree$)(?v3py29 Bool_tree$)) (! (= (fun_app$ba (map_tree$e ?v0py161) (node$cq ?v1py145 ?v2py60 ?v3py29)) (node$ (fun_app$aj ?v0py161 ?v1py145) (fun_app$ba (map_tree$e ?v0py161) ?v2py60) (fun_app$ba (map_tree$e ?v0py161) ?v3py29))) :pattern ((fun_app$ba (map_tree$e ?v0py161) (node$cq ?v1py145 ?v2py60 ?v3py29))) )) :named A162))
(assert (! (forall ((?v0py162 A_bool_fun_bool_fun$)(?v1py146 A_bool_fun$)(?v2py61 A_bool_fun_tree$)(?v3py30 A_bool_fun_tree$)) (! (= (fun_app$bb (map_tree$f ?v0py162) (node$ ?v1py146 ?v2py61 ?v3py30)) (node$cq (fun_app$v ?v0py162 ?v1py146) (fun_app$bb (map_tree$f ?v0py162) ?v2py61) (fun_app$bb (map_tree$f ?v0py162) ?v3py30))) :pattern ((fun_app$bb (map_tree$f ?v0py162) (node$ ?v1py146 ?v2py61 ?v3py30))) )) :named A163))
(assert (! (forall ((?v0py163 A_bool_fun_a_bool_fun_fun$)(?v1py147 A_bool_fun$)(?v2py62 A_bool_fun_tree$)(?v3py31 A_bool_fun_tree$)) (! (= (fun_app$bc (map_tree$h ?v0py163) (node$ ?v1py147 ?v2py62 ?v3py31)) (node$ (fun_app$z ?v0py163 ?v1py147) (fun_app$bc (map_tree$h ?v0py163) ?v2py62) (fun_app$bc (map_tree$h ?v0py163) ?v3py31))) :pattern ((fun_app$bc (map_tree$h ?v0py163) (node$ ?v1py147 ?v2py62 ?v3py31))) )) :named A164))
(assert (! (forall ((?v0py164 Bool_bool_fun_tree$)) (! (= (fun_app$bg (map_tree$m id$) ?v0py164) ?v0py164) :pattern ((fun_app$bg (map_tree$m id$) ?v0py164)) )) :named A165))
(assert (! (forall ((?v0py165 A_bool_fun_a_bool_fun_fun_tree$)) (! (= (fun_app$bh (map_tree$n id$b) ?v0py165) ?v0py165) :pattern ((fun_app$bh (map_tree$n id$b) ?v0py165)) )) :named A166))
(assert (! (forall ((?v0py166 Bool_tree$)) (! (= (fun_app$ay (map_tree$b id$a) ?v0py166) ?v0py166) :pattern ((fun_app$ay (map_tree$b id$a) ?v0py166)) )) :named A167))
(assert (! (forall ((?v0py167 A_bool_fun_tree$)) (! (= (fun_app$bc (map_tree$h id$e) ?v0py167) ?v0py167) :pattern ((fun_app$bc (map_tree$h id$e) ?v0py167)) )) :named A168))
(assert (! (= (map_tree$m id$) id$f) :named A169))
(assert (! (= (map_tree$n id$b) id$g) :named A170))
(assert (! (= (map_tree$b id$a) id$h) :named A171))
(assert (! (= (map_tree$h id$e) id$i) :named A172))
(assert (! (forall ((?v0py168 A_tree$)) (! (= ?v0py168 (node$a (?v1!14 ?v0py168) (?v2!13 ?v0py168) (?v3!12 ?v0py168))) :pattern ((?v1!14 ?v0py168)) :pattern ((?v2!13 ?v0py168)) :pattern ((?v3!12 ?v0py168)) )) :named A173))
(assert (! (forall ((?v0py169 Bool_tree$)) (! (= ?v0py169 (node$cq (?v1!17 ?v0py169) (?v2!16 ?v0py169) (?v3!15 ?v0py169))) :pattern ((?v1!17 ?v0py169)) :pattern ((?v2!16 ?v0py169)) :pattern ((?v3!15 ?v0py169)) )) :named A174))
(assert (! (forall ((?v0py170 A_bool_fun_tree$)) (! (= ?v0py170 (node$ (?v1!20 ?v0py170) (?v2!19 ?v0py170) (?v3!18 ?v0py170))) :pattern ((?v1!20 ?v0py170)) :pattern ((?v2!19 ?v0py170)) :pattern ((?v3!18 ?v0py170)) )) :named A175))
(assert (! (forall ((?v0py171 Bool_tree$)(?v1py148 Bool_tree$)(?v2py63 Bool_bool_fun$)(?v3py32 Bool_bool_fun$)) (! (or (= (fun_app$ay (map_tree$b ?v2py63) ?v0py171) (fun_app$ay (map_tree$b ?v3py32) ?v1py148)) (not (= ?v0py171 ?v1py148)) (and (member$a (?v4!21 ?v3py32 ?v2py63 ?v1py148) (set_tree$a ?v1py148)) (or (fun_app$ae ?v2py63 (?v4!21 ?v3py32 ?v2py63 ?v1py148)) (fun_app$ae ?v3py32 (?v4!21 ?v3py32 ?v2py63 ?v1py148))) (or (not (fun_app$ae ?v2py63 (?v4!21 ?v3py32 ?v2py63 ?v1py148))) (not (fun_app$ae ?v3py32 (?v4!21 ?v3py32 ?v2py63 ?v1py148)))))) :pattern ((?v4!21 ?v3py32 ?v2py63 ?v1py148) (fun_app$ay (map_tree$b ?v2py63) ?v0py171)) )) :named A176))
(assert (! (forall ((?v0py172 Bool_tree$)(?v1py149 Bool_tree$)(?v2py64 Bool_a_bool_fun_fun$)(?v3py33 Bool_a_bool_fun_fun$)) (! (or (= (fun_app$ba (map_tree$e ?v2py64) ?v0py172) (fun_app$ba (map_tree$e ?v3py33) ?v1py149)) (not (= ?v0py172 ?v1py149)) (and (member$a (?v4!22 ?v3py33 ?v2py64 ?v1py149) (set_tree$a ?v1py149)) (not (= (fun_app$aj ?v2py64 (?v4!22 ?v3py33 ?v2py64 ?v1py149)) (fun_app$aj ?v3py33 (?v4!22 ?v3py33 ?v2py64 ?v1py149)))))) :pattern ((?v4!22 ?v3py33 ?v2py64 ?v1py149) (fun_app$ba (map_tree$e ?v2py64) ?v0py172)) )) :named A177))
(assert (! (forall ((?v0py173 A_bool_fun_tree$)(?v1py150 A_bool_fun_tree$)(?v2py65 A_bool_fun_bool_fun$)(?v3py34 A_bool_fun_bool_fun$)) (! (or (= (fun_app$bb (map_tree$f ?v2py65) ?v0py173) (fun_app$bb (map_tree$f ?v3py34) ?v1py150)) (not (= ?v0py173 ?v1py150)) (and (member$b (?v4!23 ?v3py34 ?v2py65 ?v1py150) (set_tree$b ?v1py150)) (or (fun_app$v ?v2py65 (?v4!23 ?v3py34 ?v2py65 ?v1py150)) (fun_app$v ?v3py34 (?v4!23 ?v3py34 ?v2py65 ?v1py150))) (or (not (fun_app$v ?v2py65 (?v4!23 ?v3py34 ?v2py65 ?v1py150))) (not (fun_app$v ?v3py34 (?v4!23 ?v3py34 ?v2py65 ?v1py150)))))) :pattern ((?v4!23 ?v3py34 ?v2py65 ?v1py150) (fun_app$bb (map_tree$f ?v2py65) ?v0py173)) )) :named A178))
(assert (! (forall ((?v0py174 A_bool_fun_tree$)(?v1py151 A_bool_fun_tree$)(?v2py66 A_bool_fun_a_bool_fun_fun$)(?v3py35 A_bool_fun_a_bool_fun_fun$)) (! (or (= (fun_app$bc (map_tree$h ?v2py66) ?v0py174) (fun_app$bc (map_tree$h ?v3py35) ?v1py151)) (not (= ?v0py174 ?v1py151)) (and (member$b (?v4!24 ?v3py35 ?v2py66 ?v1py151) (set_tree$b ?v1py151)) (not (= (fun_app$z ?v2py66 (?v4!24 ?v3py35 ?v2py66 ?v1py151)) (fun_app$z ?v3py35 (?v4!24 ?v3py35 ?v2py66 ?v1py151)))))) :pattern ((?v4!24 ?v3py35 ?v2py66 ?v1py151) (fun_app$bc (map_tree$h ?v2py66) ?v0py174)) )) :named A179))
(assert (! (forall ((?v0py175 A_tree$)(?v1py152 A_tree$)(?v2py67 A_bool_fun$)(?v3py36 A_bool_fun$)) (! (or (= (fun_app$aw (map_tree$ ?v2py67) ?v0py175) (fun_app$aw (map_tree$ ?v3py36) ?v1py152)) (not (= ?v0py175 ?v1py152)) (and (member$ (?v4!25 ?v3py36 ?v2py67 ?v1py152) (set_tree$ ?v1py152)) (or (fun_app$f ?v2py67 (?v4!25 ?v3py36 ?v2py67 ?v1py152)) (fun_app$f ?v3py36 (?v4!25 ?v3py36 ?v2py67 ?v1py152))) (or (not (fun_app$f ?v2py67 (?v4!25 ?v3py36 ?v2py67 ?v1py152))) (not (fun_app$f ?v3py36 (?v4!25 ?v3py36 ?v2py67 ?v1py152)))))) :pattern ((?v4!25 ?v3py36 ?v2py67 ?v1py152) (fun_app$aw (map_tree$ ?v2py67) ?v0py175)) )) :named A180))
(assert (! (forall ((?v0py176 Bool_tree$)(?v1py153 Bool_bool_fun$)(?v2py68 Bool_bool_fun$)) (! (or (= (fun_app$ay (map_tree$b ?v1py153) ?v0py176) (fun_app$ay (map_tree$b ?v2py68) ?v0py176)) (and (member$a (?v3!26 ?v2py68 ?v1py153 ?v0py176) (set_tree$a ?v0py176)) (or (fun_app$ae ?v1py153 (?v3!26 ?v2py68 ?v1py153 ?v0py176)) (fun_app$ae ?v2py68 (?v3!26 ?v2py68 ?v1py153 ?v0py176))) (or (not (fun_app$ae ?v1py153 (?v3!26 ?v2py68 ?v1py153 ?v0py176))) (not (fun_app$ae ?v2py68 (?v3!26 ?v2py68 ?v1py153 ?v0py176)))))) :pattern ((?v3!26 ?v2py68 ?v1py153 ?v0py176)) )) :named A181))
(assert (! (forall ((?v0py177 Bool_tree$)(?v1py154 Bool_a_bool_fun_fun$)(?v2py69 Bool_a_bool_fun_fun$)) (! (or (= (fun_app$ba (map_tree$e ?v1py154) ?v0py177) (fun_app$ba (map_tree$e ?v2py69) ?v0py177)) (and (member$a (?v3!27 ?v2py69 ?v1py154 ?v0py177) (set_tree$a ?v0py177)) (not (= (fun_app$aj ?v1py154 (?v3!27 ?v2py69 ?v1py154 ?v0py177)) (fun_app$aj ?v2py69 (?v3!27 ?v2py69 ?v1py154 ?v0py177)))))) :pattern ((?v3!27 ?v2py69 ?v1py154 ?v0py177)) )) :named A182))
(assert (! (forall ((?v0py178 A_bool_fun_tree$)(?v1py155 A_bool_fun_bool_fun$)(?v2py70 A_bool_fun_bool_fun$)) (! (or (= (fun_app$bb (map_tree$f ?v1py155) ?v0py178) (fun_app$bb (map_tree$f ?v2py70) ?v0py178)) (and (member$b (?v3!28 ?v2py70 ?v1py155 ?v0py178) (set_tree$b ?v0py178)) (or (fun_app$v ?v1py155 (?v3!28 ?v2py70 ?v1py155 ?v0py178)) (fun_app$v ?v2py70 (?v3!28 ?v2py70 ?v1py155 ?v0py178))) (or (not (fun_app$v ?v1py155 (?v3!28 ?v2py70 ?v1py155 ?v0py178))) (not (fun_app$v ?v2py70 (?v3!28 ?v2py70 ?v1py155 ?v0py178)))))) :pattern ((?v3!28 ?v2py70 ?v1py155 ?v0py178)) )) :named A183))
(assert (! (forall ((?v0py179 A_bool_fun_tree$)(?v1py156 A_bool_fun_a_bool_fun_fun$)(?v2py71 A_bool_fun_a_bool_fun_fun$)) (! (or (= (fun_app$bc (map_tree$h ?v1py156) ?v0py179) (fun_app$bc (map_tree$h ?v2py71) ?v0py179)) (and (member$b (?v3!29 ?v2py71 ?v1py156 ?v0py179) (set_tree$b ?v0py179)) (not (= (fun_app$z ?v1py156 (?v3!29 ?v2py71 ?v1py156 ?v0py179)) (fun_app$z ?v2py71 (?v3!29 ?v2py71 ?v1py156 ?v0py179)))))) :pattern ((?v3!29 ?v2py71 ?v1py156 ?v0py179)) )) :named A184))
(assert (! (forall ((?v0py180 A_tree$)(?v1py157 A_bool_fun$)(?v2py72 A_bool_fun$)) (! (or (= (fun_app$aw (map_tree$ ?v1py157) ?v0py180) (fun_app$aw (map_tree$ ?v2py72) ?v0py180)) (and (member$ (?v3!30 ?v2py72 ?v1py157 ?v0py180) (set_tree$ ?v0py180)) (or (fun_app$f ?v1py157 (?v3!30 ?v2py72 ?v1py157 ?v0py180)) (fun_app$f ?v2py72 (?v3!30 ?v2py72 ?v1py157 ?v0py180))) (or (not (fun_app$f ?v1py157 (?v3!30 ?v2py72 ?v1py157 ?v0py180))) (not (fun_app$f ?v2py72 (?v3!30 ?v2py72 ?v1py157 ?v0py180)))))) :pattern ((?v3!30 ?v2py72 ?v1py157 ?v0py180)) )) :named A185))
(assert (! (forall ((?v0py181 Bool_tree$)(?v1py158 Bool_tree$)(?v2py73 Bool_bool_fun$)(?v3py37 Bool_bool_fun$)) (! (or (= ?v0py181 ?v1py158) (and (member$a (?v4!32 ?v3py37 ?v2py73 ?v1py158 ?v0py181) (set_tree$a ?v0py181)) (member$a (?v5!31 ?v3py37 ?v2py73 ?v1py158 ?v0py181) (set_tree$a ?v1py158)) (or (not (fun_app$ae ?v2py73 (?v4!32 ?v3py37 ?v2py73 ?v1py158 ?v0py181))) (fun_app$ae ?v3py37 (?v5!31 ?v3py37 ?v2py73 ?v1py158 ?v0py181))) (or (fun_app$ae ?v2py73 (?v4!32 ?v3py37 ?v2py73 ?v1py158 ?v0py181)) (not (fun_app$ae ?v3py37 (?v5!31 ?v3py37 ?v2py73 ?v1py158 ?v0py181)))) (or (?v4!32 ?v3py37 ?v2py73 ?v1py158 ?v0py181) (?v5!31 ?v3py37 ?v2py73 ?v1py158 ?v0py181)) (or (not (?v4!32 ?v3py37 ?v2py73 ?v1py158 ?v0py181)) (not (?v5!31 ?v3py37 ?v2py73 ?v1py158 ?v0py181)))) (not (= (fun_app$ay (map_tree$b ?v2py73) ?v0py181) (fun_app$ay (map_tree$b ?v3py37) ?v1py158)))) :pattern ((?v4!32 ?v3py37 ?v2py73 ?v1py158 ?v0py181)) :pattern ((?v5!31 ?v3py37 ?v2py73 ?v1py158 ?v0py181)) )) :named A186))
(assert (! (forall ((?v0py182 Bool_tree$)(?v1py159 Bool_tree$)(?v2py74 Bool_a_bool_fun_fun$)(?v3py38 Bool_a_bool_fun_fun$)) (! (or (= ?v0py182 ?v1py159) (not (= (fun_app$ba (map_tree$e ?v2py74) ?v0py182) (fun_app$ba (map_tree$e ?v3py38) ?v1py159))) (and (member$a (?v4!34 ?v3py38 ?v2py74 ?v1py159 ?v0py182) (set_tree$a ?v0py182)) (member$a (?v5!33 ?v3py38 ?v2py74 ?v1py159 ?v0py182) (set_tree$a ?v1py159)) (= (fun_app$aj ?v2py74 (?v4!34 ?v3py38 ?v2py74 ?v1py159 ?v0py182)) (fun_app$aj ?v3py38 (?v5!33 ?v3py38 ?v2py74 ?v1py159 ?v0py182))) (or (?v4!34 ?v3py38 ?v2py74 ?v1py159 ?v0py182) (?v5!33 ?v3py38 ?v2py74 ?v1py159 ?v0py182)) (or (not (?v4!34 ?v3py38 ?v2py74 ?v1py159 ?v0py182)) (not (?v5!33 ?v3py38 ?v2py74 ?v1py159 ?v0py182))))) :pattern ((?v4!34 ?v3py38 ?v2py74 ?v1py159 ?v0py182)) :pattern ((?v5!33 ?v3py38 ?v2py74 ?v1py159 ?v0py182)) )) :named A187))
(assert (! (forall ((?v0py183 A_bool_fun_tree$)(?v1py160 A_bool_fun_tree$)(?v2py75 A_bool_fun_bool_fun$)(?v3py39 A_bool_fun_bool_fun$)) (! (or (= ?v0py183 ?v1py160) (and (member$b (?v4!36 ?v3py39 ?v2py75 ?v1py160 ?v0py183) (set_tree$b ?v0py183)) (member$b (?v5!35 ?v3py39 ?v2py75 ?v1py160 ?v0py183) (set_tree$b ?v1py160)) (or (not (fun_app$v ?v2py75 (?v4!36 ?v3py39 ?v2py75 ?v1py160 ?v0py183))) (fun_app$v ?v3py39 (?v5!35 ?v3py39 ?v2py75 ?v1py160 ?v0py183))) (or (fun_app$v ?v2py75 (?v4!36 ?v3py39 ?v2py75 ?v1py160 ?v0py183)) (not (fun_app$v ?v3py39 (?v5!35 ?v3py39 ?v2py75 ?v1py160 ?v0py183)))) (not (= (?v4!36 ?v3py39 ?v2py75 ?v1py160 ?v0py183) (?v5!35 ?v3py39 ?v2py75 ?v1py160 ?v0py183)))) (not (= (fun_app$bb (map_tree$f ?v2py75) ?v0py183) (fun_app$bb (map_tree$f ?v3py39) ?v1py160)))) :pattern ((?v4!36 ?v3py39 ?v2py75 ?v1py160 ?v0py183)) :pattern ((?v5!35 ?v3py39 ?v2py75 ?v1py160 ?v0py183)) )) :named A188))
(assert (! (forall ((?v0py184 A_bool_fun_tree$)(?v1py161 A_bool_fun_tree$)(?v2py76 A_bool_fun_a_bool_fun_fun$)(?v3py40 A_bool_fun_a_bool_fun_fun$)) (! (or (= ?v0py184 ?v1py161) (and (member$b (?v4!38 ?v3py40 ?v2py76 ?v1py161 ?v0py184) (set_tree$b ?v0py184)) (member$b (?v5!37 ?v3py40 ?v2py76 ?v1py161 ?v0py184) (set_tree$b ?v1py161)) (= (fun_app$z ?v2py76 (?v4!38 ?v3py40 ?v2py76 ?v1py161 ?v0py184)) (fun_app$z ?v3py40 (?v5!37 ?v3py40 ?v2py76 ?v1py161 ?v0py184))) (not (= (?v4!38 ?v3py40 ?v2py76 ?v1py161 ?v0py184) (?v5!37 ?v3py40 ?v2py76 ?v1py161 ?v0py184)))) (not (= (fun_app$bc (map_tree$h ?v2py76) ?v0py184) (fun_app$bc (map_tree$h ?v3py40) ?v1py161)))) :pattern ((?v4!38 ?v3py40 ?v2py76 ?v1py161 ?v0py184)) :pattern ((?v5!37 ?v3py40 ?v2py76 ?v1py161 ?v0py184)) )) :named A189))
(assert (! (forall ((?v0py185 A_tree$)(?v1py162 A_tree$)(?v2py77 A_bool_fun$)(?v3py41 A_bool_fun$)) (! (or (= ?v0py185 ?v1py162) (and (member$ (?v4!40 ?v3py41 ?v2py77 ?v1py162 ?v0py185) (set_tree$ ?v0py185)) (member$ (?v5!39 ?v3py41 ?v2py77 ?v1py162 ?v0py185) (set_tree$ ?v1py162)) (or (not (fun_app$f ?v2py77 (?v4!40 ?v3py41 ?v2py77 ?v1py162 ?v0py185))) (fun_app$f ?v3py41 (?v5!39 ?v3py41 ?v2py77 ?v1py162 ?v0py185))) (or (fun_app$f ?v2py77 (?v4!40 ?v3py41 ?v2py77 ?v1py162 ?v0py185)) (not (fun_app$f ?v3py41 (?v5!39 ?v3py41 ?v2py77 ?v1py162 ?v0py185)))) (not (= (?v4!40 ?v3py41 ?v2py77 ?v1py162 ?v0py185) (?v5!39 ?v3py41 ?v2py77 ?v1py162 ?v0py185)))) (not (= (fun_app$aw (map_tree$ ?v2py77) ?v0py185) (fun_app$aw (map_tree$ ?v3py41) ?v1py162)))) :pattern ((?v4!40 ?v3py41 ?v2py77 ?v1py162 ?v0py185)) :pattern ((?v5!39 ?v3py41 ?v2py77 ?v1py162 ?v0py185)) )) :named A190))
(assert (! (forall ((?v0py186 A_bool_fun_a_bool_fun_fun$)) (! (= (pure_tree$f ?v0py186) (node$e ?v0py186 (pure_tree$f ?v0py186) (pure_tree$f ?v0py186))) :pattern ((pure_tree$f ?v0py186)) )) :named A191))
(assert (! (forall ((?v0py187 A_a_bool_fun_fun_a_bool_fun_fun$)) (! (= (pure_tree$l ?v0py187) (node$m ?v0py187 (pure_tree$l ?v0py187) (pure_tree$l ?v0py187))) :pattern ((pure_tree$l ?v0py187)) )) :named A192))
(assert (! (forall ((?v0py188 A_bool_bool_fun_fun$)) (! (= (pure_tree$j ?v0py188) (node$i ?v0py188 (pure_tree$j ?v0py188) (pure_tree$j ?v0py188))) :pattern ((pure_tree$j ?v0py188)) )) :named A193))
(assert (! (forall ((?v0py189 A_a_bool_fun_fun$)) (! (= (pure_tree$k ?v0py189) (node$j ?v0py189 (pure_tree$k ?v0py189) (pure_tree$k ?v0py189))) :pattern ((pure_tree$k ?v0py189)) )) :named A194))
(assert (! (forall ((?v0py190 A$)) (! (= (pure_tree$c ?v0py190) (node$a ?v0py190 (pure_tree$c ?v0py190) (pure_tree$c ?v0py190))) :pattern ((pure_tree$c ?v0py190)) )) :named A195))
(assert (! (forall ((?v0py191 A_bool_fun$)) (! (= (pure_tree$ ?v0py191) (node$ ?v0py191 (pure_tree$ ?v0py191) (pure_tree$ ?v0py191))) :pattern ((pure_tree$ ?v0py191)) )) :named A196))
(assert (! (forall ((?v0py192 Bool)) (! (= (pure_tree$a ?v0py192) (node$cq ?v0py192 (pure_tree$a ?v0py192) (pure_tree$a ?v0py192))) :pattern ((pure_tree$a ?v0py192)) )) :named A197))
(assert (! (forall ((?v0py193 Bool)(?v1py163 Bool_tree$)(?v2py78 Bool_tree$)) (! (member$a ?v0py193 (set_tree$a (node$cq ?v0py193 ?v1py163 ?v2py78))) :pattern ((node$cq ?v0py193 ?v1py163 ?v2py78)) )) :named A198))
(assert (! (forall ((?v0py194 A_bool_fun$)(?v1py164 A_bool_fun_tree$)(?v2py79 A_bool_fun_tree$)) (! (member$b ?v0py194 (set_tree$b (node$ ?v0py194 ?v1py164 ?v2py79))) :pattern ((node$ ?v0py194 ?v1py164 ?v2py79)) )) :named A199))
(assert (! (forall ((?v0py195 A$)(?v1py165 A_tree$)(?v2py80 A_tree$)) (! (member$ ?v0py195 (set_tree$ (node$a ?v0py195 ?v1py165 ?v2py80))) :pattern ((node$a ?v0py195 ?v1py165 ?v2py80)) )) :named A200))
(assert (! (forall ((?v0py196 Bool)(?v1py166 Bool_tree$)(?v2py81 Bool)(?v3py42 Bool_tree$)) (! (or (not (member$a ?v0py196 (set_tree$a ?v1py166))) (member$a ?v0py196 (set_tree$a (node$cq ?v2py81 ?v3py42 ?v1py166)))) :pattern ((member$a ?v0py196 (set_tree$a (node$cq ?v2py81 ?v3py42 ?v1py166)))) )) :named A201))
(assert (! (forall ((?v0py197 A_bool_fun$)(?v1py167 A_bool_fun_tree$)(?v2py82 A_bool_fun$)(?v3py43 A_bool_fun_tree$)) (! (or (not (member$b ?v0py197 (set_tree$b ?v1py167))) (member$b ?v0py197 (set_tree$b (node$ ?v2py82 ?v3py43 ?v1py167)))) :pattern ((member$b ?v0py197 (set_tree$b (node$ ?v2py82 ?v3py43 ?v1py167)))) )) :named A202))
(assert (! (forall ((?v0py198 A$)(?v1py168 A_tree$)(?v2py83 A$)(?v3py44 A_tree$)) (! (or (not (member$ ?v0py198 (set_tree$ ?v1py168))) (member$ ?v0py198 (set_tree$ (node$a ?v2py83 ?v3py44 ?v1py168)))) :pattern ((member$ ?v0py198 (set_tree$ (node$a ?v2py83 ?v3py44 ?v1py168)))) )) :named A203))
(assert (! (forall ((?v0py199 Bool)(?v1py169 Bool_tree$)(?v2py84 Bool)(?v3py45 Bool_tree$)) (! (or (not (member$a ?v0py199 (set_tree$a ?v1py169))) (member$a ?v0py199 (set_tree$a (node$cq ?v2py84 ?v1py169 ?v3py45)))) :pattern ((member$a ?v0py199 (set_tree$a (node$cq ?v2py84 ?v1py169 ?v3py45)))) )) :named A204))
(assert (! (forall ((?v0py200 A_bool_fun$)(?v1py170 A_bool_fun_tree$)(?v2py85 A_bool_fun$)(?v3py46 A_bool_fun_tree$)) (! (or (not (member$b ?v0py200 (set_tree$b ?v1py170))) (member$b ?v0py200 (set_tree$b (node$ ?v2py85 ?v1py170 ?v3py46)))) :pattern ((member$b ?v0py200 (set_tree$b (node$ ?v2py85 ?v1py170 ?v3py46)))) )) :named A205))
(assert (! (forall ((?v0py201 A$)(?v1py171 A_tree$)(?v2py86 A$)(?v3py47 A_tree$)) (! (or (not (member$ ?v0py201 (set_tree$ ?v1py171))) (member$ ?v0py201 (set_tree$ (node$a ?v2py86 ?v1py171 ?v3py47)))) :pattern ((member$ ?v0py201 (set_tree$ (node$a ?v2py86 ?v1py171 ?v3py47)))) )) :named A206))
(assert (! (forall ((?v0py202 Bool)(?v1py172 Bool_tree$)) (! (or (not (member$a ?v0py202 (set_tree$a ?v1py172))) (= ?v1py172 (node$cq ?v0py202 (?v2!42 ?v1py172 ?v0py202) (?v3!41 ?v1py172 ?v0py202))) (and (= ?v1py172 (node$cq (?v2!45 ?v1py172 ?v0py202) (?v3!44 ?v1py172 ?v0py202) (?v4!43 ?v1py172 ?v0py202))) (member$a ?v0py202 (set_tree$a (?v3!44 ?v1py172 ?v0py202)))) (and (= ?v1py172 (node$cq (?v2!48 ?v1py172 ?v0py202) (?v3!47 ?v1py172 ?v0py202) (?v4!46 ?v1py172 ?v0py202))) (member$a ?v0py202 (set_tree$a (?v4!46 ?v1py172 ?v0py202))))) :pattern ((?v2!42 ?v1py172 ?v0py202)) :pattern ((?v3!41 ?v1py172 ?v0py202)) :pattern ((?v2!45 ?v1py172 ?v0py202)) :pattern ((?v3!44 ?v1py172 ?v0py202)) :pattern ((?v4!43 ?v1py172 ?v0py202)) :pattern ((?v2!48 ?v1py172 ?v0py202)) :pattern ((?v3!47 ?v1py172 ?v0py202)) :pattern ((?v4!46 ?v1py172 ?v0py202)) )) :named A207))
(assert (! (forall ((?v0py203 A_bool_fun$)(?v1py173 A_bool_fun_tree$)) (! (or (not (member$b ?v0py203 (set_tree$b ?v1py173))) (= ?v1py173 (node$ ?v0py203 (?v2!50 ?v1py173 ?v0py203) (?v3!49 ?v1py173 ?v0py203))) (and (= ?v1py173 (node$ (?v2!53 ?v1py173 ?v0py203) (?v3!52 ?v1py173 ?v0py203) (?v4!51 ?v1py173 ?v0py203))) (member$b ?v0py203 (set_tree$b (?v3!52 ?v1py173 ?v0py203)))) (and (= ?v1py173 (node$ (?v2!56 ?v1py173 ?v0py203) (?v3!55 ?v1py173 ?v0py203) (?v4!54 ?v1py173 ?v0py203))) (member$b ?v0py203 (set_tree$b (?v4!54 ?v1py173 ?v0py203))))) :pattern ((?v2!50 ?v1py173 ?v0py203)) :pattern ((?v3!49 ?v1py173 ?v0py203)) :pattern ((?v2!53 ?v1py173 ?v0py203)) :pattern ((?v3!52 ?v1py173 ?v0py203)) :pattern ((?v4!51 ?v1py173 ?v0py203)) :pattern ((?v2!56 ?v1py173 ?v0py203)) :pattern ((?v3!55 ?v1py173 ?v0py203)) :pattern ((?v4!54 ?v1py173 ?v0py203)) )) :named A208))
(assert (! (forall ((?v0py204 A$)(?v1py174 A_tree$)) (! (or (not (member$ ?v0py204 (set_tree$ ?v1py174))) (= ?v1py174 (node$a ?v0py204 (?v2!58 ?v1py174 ?v0py204) (?v3!57 ?v1py174 ?v0py204))) (and (= ?v1py174 (node$a (?v2!61 ?v1py174 ?v0py204) (?v3!60 ?v1py174 ?v0py204) (?v4!59 ?v1py174 ?v0py204))) (member$ ?v0py204 (set_tree$ (?v3!60 ?v1py174 ?v0py204)))) (and (= ?v1py174 (node$a (?v2!64 ?v1py174 ?v0py204) (?v3!63 ?v1py174 ?v0py204) (?v4!62 ?v1py174 ?v0py204))) (member$ ?v0py204 (set_tree$ (?v4!62 ?v1py174 ?v0py204))))) :pattern ((?v2!58 ?v1py174 ?v0py204)) :pattern ((?v3!57 ?v1py174 ?v0py204)) :pattern ((?v2!61 ?v1py174 ?v0py204)) :pattern ((?v3!60 ?v1py174 ?v0py204)) :pattern ((?v4!59 ?v1py174 ?v0py204)) :pattern ((?v2!64 ?v1py174 ?v0py204)) :pattern ((?v3!63 ?v1py174 ?v0py204)) :pattern ((?v4!62 ?v1py174 ?v0py204)) )) :named A209))
(assert (! (forall ((?v0py205 Bool)(?v1py175 Bool_tree$)(?v2py87 Bool_bool_tree_bool_fun_fun$)) (! (or (fun_app$bi (fun_app$bj ?v2py87 ?v0py205) ?v1py175) (not (member$a ?v0py205 (set_tree$a ?v1py175))) (not (fun_app$bi (fun_app$bj ?v2py87 (?v3!67 ?v2py87)) (node$cq (?v3!67 ?v2py87) (?v4!66 ?v2py87) (?v5!65 ?v2py87)))) (and (member$a (?v6!72 ?v2py87) (set_tree$a (?v5!73 ?v2py87))) (fun_app$bi (fun_app$bj ?v2py87 (?v6!72 ?v2py87)) (?v5!73 ?v2py87)) (not (fun_app$bi (fun_app$bj ?v2py87 (?v6!72 ?v2py87)) (node$cq (?v3!75 ?v2py87) (?v4!74 ?v2py87) (?v5!73 ?v2py87))))) (and (member$a (?v6!68 ?v2py87) (set_tree$a (?v4!70 ?v2py87))) (fun_app$bi (fun_app$bj ?v2py87 (?v6!68 ?v2py87)) (?v4!70 ?v2py87)) (not (fun_app$bi (fun_app$bj ?v2py87 (?v6!68 ?v2py87)) (node$cq (?v3!71 ?v2py87) (?v4!70 ?v2py87) (?v5!69 ?v2py87)))))) :pattern ((fun_app$bi (fun_app$bj ?v2py87 ?v0py205) ?v1py175)) )) :named A210))
(assert (! (forall ((?v0py206 A_bool_fun$)(?v1py176 A_bool_fun_tree$)(?v2py88 A_bool_fun_a_bool_fun_tree_bool_fun_fun$)) (! (or (not (member$b ?v0py206 (set_tree$b ?v1py176))) (not (fun_app$bk (fun_app$bl ?v2py88 (?v3!78 ?v2py88)) (node$ (?v3!78 ?v2py88) (?v4!77 ?v2py88) (?v5!76 ?v2py88)))) (fun_app$bk (fun_app$bl ?v2py88 ?v0py206) ?v1py176) (and (member$b (?v6!83 ?v2py88) (set_tree$b (?v5!84 ?v2py88))) (fun_app$bk (fun_app$bl ?v2py88 (?v6!83 ?v2py88)) (?v5!84 ?v2py88)) (not (fun_app$bk (fun_app$bl ?v2py88 (?v6!83 ?v2py88)) (node$ (?v3!86 ?v2py88) (?v4!85 ?v2py88) (?v5!84 ?v2py88))))) (and (member$b (?v6!79 ?v2py88) (set_tree$b (?v4!81 ?v2py88))) (fun_app$bk (fun_app$bl ?v2py88 (?v6!79 ?v2py88)) (?v4!81 ?v2py88)) (not (fun_app$bk (fun_app$bl ?v2py88 (?v6!79 ?v2py88)) (node$ (?v3!82 ?v2py88) (?v4!81 ?v2py88) (?v5!80 ?v2py88)))))) :pattern ((fun_app$bk (fun_app$bl ?v2py88 ?v0py206) ?v1py176)) )) :named A211))
(assert (! (forall ((?v0py207 A$)(?v1py177 A_tree$)(?v2py89 A_a_tree_bool_fun_fun$)) (! (or (not (member$ ?v0py207 (set_tree$ ?v1py177))) (not (fun_app$bm (fun_app$bn ?v2py89 (?v3!89 ?v2py89)) (node$a (?v3!89 ?v2py89) (?v4!88 ?v2py89) (?v5!87 ?v2py89)))) (fun_app$bm (fun_app$bn ?v2py89 ?v0py207) ?v1py177) (and (member$ (?v6!90 ?v2py89) (set_tree$ (?v4!92 ?v2py89))) (fun_app$bm (fun_app$bn ?v2py89 (?v6!90 ?v2py89)) (?v4!92 ?v2py89)) (not (fun_app$bm (fun_app$bn ?v2py89 (?v6!90 ?v2py89)) (node$a (?v3!93 ?v2py89) (?v4!92 ?v2py89) (?v5!91 ?v2py89))))) (and (member$ (?v6!94 ?v2py89) (set_tree$ (?v5!95 ?v2py89))) (fun_app$bm (fun_app$bn ?v2py89 (?v6!94 ?v2py89)) (?v5!95 ?v2py89)) (not (fun_app$bm (fun_app$bn ?v2py89 (?v6!94 ?v2py89)) (node$a (?v3!97 ?v2py89) (?v4!96 ?v2py89) (?v5!95 ?v2py89)))))) :pattern ((fun_app$bm (fun_app$bn ?v2py89 ?v0py207) ?v1py177)) )) :named A212))
(assert (! (forall ((?v0py208 Bool_bool_fun$)) (! (= (fun_app$q id$ ?v0py208) ?v0py208) :pattern ((fun_app$q id$ ?v0py208)) )) :named A213))
(assert (! (forall ((?v0py209 Bool)) (! (and (or (not (fun_app$ae id$a ?v0py209)) ?v0py209) (or (fun_app$ae id$a ?v0py209) (not ?v0py209))) :pattern ((fun_app$ae id$a ?v0py209)) )) :named A214))
(assert (! (forall ((?v0py210 A_bool_fun_a_bool_fun_fun$)) (! (= (fun_app$s id$b ?v0py210) ?v0py210) :pattern ((fun_app$s id$b ?v0py210)) )) :named A215))
(assert (! (forall ((?v0py211 A_bool_fun$)) (! (= (fun_app$z id$e ?v0py211) ?v0py211) :pattern ((fun_app$z id$e ?v0py211)) )) :named A216))
(assert (! (forall ((?v0py212 A_a_bool_fun_fun_tree$)(?v1py178 A_a_bool_fun_fun_tree$)) (! (= (ap_tree$k (ap_tree$bd k_tree$ ?v0py212) ?v1py178) ?v0py212) :pattern ((ap_tree$k (ap_tree$bd k_tree$ ?v0py212) ?v1py178)) )) :named A217))
(assert (! (forall ((?v0py213 A_bool_fun_tree$)(?v1py179 A_a_fun_tree$)) (! (= (ap_tree$j (ap_tree$be k_tree$a ?v0py213) ?v1py179) ?v0py213) :pattern ((ap_tree$j (ap_tree$be k_tree$a ?v0py213) ?v1py179)) )) :named A218))
(assert (! (forall ((?v0py214 Bool_bool_fun_tree$)(?v1py180 A_tree$)) (! (= (ap_tree$h (ap_tree$bf k_tree$b ?v0py214) ?v1py180) ?v0py214) :pattern ((ap_tree$h (ap_tree$bf k_tree$b ?v0py214) ?v1py180)) )) :named A219))
(assert (! (forall ((?v0py215 A_bool_fun_tree$)(?v1py181 A_tree$)) (! (= (ap_tree$i (ap_tree$ay k_tree$c ?v0py215) ?v1py181) ?v0py215) :pattern ((ap_tree$i (ap_tree$ay k_tree$c ?v0py215) ?v1py181)) )) :named A220))
(assert (! (forall ((?v0py216 A_tree$)(?v1py182 A_tree$)) (! (= (ap_tree$f (ap_tree$n k_tree$d ?v0py216) ?v1py182) ?v0py216) :pattern ((ap_tree$f (ap_tree$n k_tree$d ?v0py216) ?v1py182)) )) :named A221))
(assert (! (forall ((?v0py217 Bool_tree$)(?v1py183 A_tree$)) (! (= (ap_tree$ (ap_tree$c k_tree$e ?v0py217) ?v1py183) ?v0py217) :pattern ((ap_tree$ (ap_tree$c k_tree$e ?v0py217) ?v1py183)) )) :named A222))
(assert (! (= i_tree$ (pure_tree$n id$)) :named A223))
(assert (! (= i_tree$a (pure_tree$b id$a)) :named A224))
(assert (! (= i_tree$b (pure_tree$o id$b)) :named A225))
(assert (! (= i_tree$c (pure_tree$f id$e)) :named A226))
(assert (! (forall ((?v0py218 A_bool_fun$)(?v1py184 A$)(?v2py90 A_tree$)(?v3py48 A_tree$)) (! (and (or (not (pred_tree$ ?v0py218 (node$a ?v1py184 ?v2py90 ?v3py48))) (and (fun_app$f ?v0py218 ?v1py184) (pred_tree$ ?v0py218 ?v2py90) (pred_tree$ ?v0py218 ?v3py48))) (or (pred_tree$ ?v0py218 (node$a ?v1py184 ?v2py90 ?v3py48)) (not (fun_app$f ?v0py218 ?v1py184)) (not (pred_tree$ ?v0py218 ?v2py90)) (not (pred_tree$ ?v0py218 ?v3py48)))) :pattern ((pred_tree$ ?v0py218 (node$a ?v1py184 ?v2py90 ?v3py48))) )) :named A227))
(assert (! (forall ((?v0py219 Bool_bool_fun$)(?v1py185 Bool)(?v2py91 Bool_tree$)(?v3py49 Bool_tree$)) (! (and (or (not (pred_tree$a ?v0py219 (node$cq ?v1py185 ?v2py91 ?v3py49))) (and (fun_app$ae ?v0py219 ?v1py185) (pred_tree$a ?v0py219 ?v2py91) (pred_tree$a ?v0py219 ?v3py49))) (or (pred_tree$a ?v0py219 (node$cq ?v1py185 ?v2py91 ?v3py49)) (not (fun_app$ae ?v0py219 ?v1py185)) (not (pred_tree$a ?v0py219 ?v2py91)) (not (pred_tree$a ?v0py219 ?v3py49)))) :pattern ((pred_tree$a ?v0py219 (node$cq ?v1py185 ?v2py91 ?v3py49))) )) :named A228))
(assert (! (forall ((?v0py220 A_bool_fun_bool_fun$)(?v1py186 A_bool_fun$)(?v2py92 A_bool_fun_tree$)(?v3py50 A_bool_fun_tree$)) (! (and (or (not (pred_tree$b ?v0py220 (node$ ?v1py186 ?v2py92 ?v3py50))) (and (fun_app$v ?v0py220 ?v1py186) (pred_tree$b ?v0py220 ?v2py92) (pred_tree$b ?v0py220 ?v3py50))) (or (not (fun_app$v ?v0py220 ?v1py186)) (not (pred_tree$b ?v0py220 ?v2py92)) (pred_tree$b ?v0py220 (node$ ?v1py186 ?v2py92 ?v3py50)) (not (pred_tree$b ?v0py220 ?v3py50)))) :pattern ((pred_tree$b ?v0py220 (node$ ?v1py186 ?v2py92 ?v3py50))) )) :named A229))
(assert (! (forall ((?v0py221 Bool_bool_fun_tree$)(?v1py187 A_bool_fun_tree$)(?v2py93 A_tree$)) (! (= (ap_tree$ (ap_tree$d (ap_tree$bg (pure_tree$q comp$b) ?v0py221) ?v1py187) ?v2py93) (ap_tree$a ?v0py221 (ap_tree$ ?v1py187 ?v2py93))) :pattern ((ap_tree$ (ap_tree$d (ap_tree$bg (pure_tree$q comp$b) ?v0py221) ?v1py187) ?v2py93)) :pattern ((ap_tree$a ?v0py221 (ap_tree$ ?v1py187 ?v2py93))) )) :named A230))
(assert (! (forall ((?v0py222 A_bool_fun_tree$)(?v1py188 A_a_fun_tree$)(?v2py94 A_tree$)) (! (= (ap_tree$ (ap_tree$j (ap_tree$be (pure_tree$r comp$c) ?v0py222) ?v1py188) ?v2py94) (ap_tree$ ?v0py222 (ap_tree$f ?v1py188 ?v2py94))) :pattern ((ap_tree$ (ap_tree$j (ap_tree$be (pure_tree$r comp$c) ?v0py222) ?v1py188) ?v2py94)) :pattern ((ap_tree$ ?v0py222 (ap_tree$f ?v1py188 ?v2py94))) )) :named A231))
(assert (! (forall ((?v0py223 Bool_bool_fun_tree$)(?v1py189 Bool_bool_fun_tree$)(?v2py95 Bool_tree$)) (! (= (ap_tree$a (ap_tree$bb (ap_tree$bh (pure_tree$s comp$) ?v0py223) ?v1py189) ?v2py95) (ap_tree$a ?v0py223 (ap_tree$a ?v1py189 ?v2py95))) :pattern ((ap_tree$a (ap_tree$bb (ap_tree$bh (pure_tree$s comp$) ?v0py223) ?v1py189) ?v2py95)) :pattern ((ap_tree$a ?v0py223 (ap_tree$a ?v1py189 ?v2py95))) )) :named A232))
(assert (! (forall ((?v0py224 Bool_a_fun_tree$)(?v1py190 A_bool_fun_tree$)(?v2py96 A_tree$)) (! (= (ap_tree$f (ap_tree$ad (ap_tree$bi (pure_tree$t comp$d) ?v0py224) ?v1py190) ?v2py96) (ap_tree$e ?v0py224 (ap_tree$ ?v1py190 ?v2py96))) :pattern ((ap_tree$f (ap_tree$ad (ap_tree$bi (pure_tree$t comp$d) ?v0py224) ?v1py190) ?v2py96)) :pattern ((ap_tree$e ?v0py224 (ap_tree$ ?v1py190 ?v2py96))) )) :named A233))
(assert (! (forall ((?v0py225 A_a_fun_tree$)(?v1py191 A_a_fun_tree$)(?v2py97 A_tree$)) (! (= (ap_tree$f (ap_tree$ag (ap_tree$bj (pure_tree$u comp$e) ?v0py225) ?v1py191) ?v2py97) (ap_tree$f ?v0py225 (ap_tree$f ?v1py191 ?v2py97))) :pattern ((ap_tree$f (ap_tree$ag (ap_tree$bj (pure_tree$u comp$e) ?v0py225) ?v1py191) ?v2py97)) :pattern ((ap_tree$f ?v0py225 (ap_tree$f ?v1py191 ?v2py97))) )) :named A234))
(assert (! (forall ((?v0py226 Bool_bool_fun_bool_fun_tree$)(?v1py192 A_bool_bool_fun_fun_tree$)(?v2py98 A_tree$)) (! (= (ap_tree$ (ap_tree$al (ap_tree$bk (pure_tree$v comp$f) ?v0py226) ?v1py192) ?v2py98) (ap_tree$an ?v0py226 (ap_tree$h ?v1py192 ?v2py98))) :pattern ((ap_tree$ (ap_tree$al (ap_tree$bk (pure_tree$v comp$f) ?v0py226) ?v1py192) ?v2py98)) :pattern ((ap_tree$an ?v0py226 (ap_tree$h ?v1py192 ?v2py98))) )) :named A235))
(assert (! (forall ((?v0py227 A_bool_fun_bool_fun_tree$)(?v1py193 A_a_bool_fun_fun_tree$)(?v2py99 A_tree$)) (! (= (ap_tree$ (ap_tree$ap (ap_tree$bl (pure_tree$w comp$g) ?v0py227) ?v1py193) ?v2py99) (ap_tree$b ?v0py227 (ap_tree$i ?v1py193 ?v2py99))) :pattern ((ap_tree$ (ap_tree$ap (ap_tree$bl (pure_tree$w comp$g) ?v0py227) ?v1py193) ?v2py99)) :pattern ((ap_tree$b ?v0py227 (ap_tree$i ?v1py193 ?v2py99))) )) :named A236))
(assert (! (forall ((?v0py228 Bool_bool_bool_fun_fun_tree$)(?v1py194 A_bool_fun_tree$)(?v2py100 A_tree$)) (! (= (ap_tree$h (ap_tree$as (ap_tree$bm (pure_tree$x comp$h) ?v0py228) ?v1py194) ?v2py100) (ap_tree$au ?v0py228 (ap_tree$ ?v1py194 ?v2py100))) :pattern ((ap_tree$h (ap_tree$as (ap_tree$bm (pure_tree$x comp$h) ?v0py228) ?v1py194) ?v2py100)) :pattern ((ap_tree$au ?v0py228 (ap_tree$ ?v1py194 ?v2py100))) )) :named A237))
(assert (! (forall ((?v0py229 A_bool_bool_fun_fun_tree$)(?v1py195 A_a_fun_tree$)(?v2py101 A_tree$)) (! (= (ap_tree$h (ap_tree$aw (ap_tree$bn (pure_tree$y comp$i) ?v0py229) ?v1py195) ?v2py101) (ap_tree$h ?v0py229 (ap_tree$f ?v1py195 ?v2py101))) :pattern ((ap_tree$h (ap_tree$aw (ap_tree$bn (pure_tree$y comp$i) ?v0py229) ?v1py195) ?v2py101)) :pattern ((ap_tree$h ?v0py229 (ap_tree$f ?v1py195 ?v2py101))) )) :named A238))
(assert (! (forall ((?v0py230 Bool_a_bool_fun_fun_tree$)(?v1py196 A_bool_fun_tree$)(?v2py102 A_tree$)) (! (= (ap_tree$i (ap_tree$ay (ap_tree$bo (pure_tree$z comp$j) ?v0py230) ?v1py196) ?v2py102) (ap_tree$c ?v0py230 (ap_tree$ ?v1py196 ?v2py102))) :pattern ((ap_tree$i (ap_tree$ay (ap_tree$bo (pure_tree$z comp$j) ?v0py230) ?v1py196) ?v2py102)) :pattern ((ap_tree$c ?v0py230 (ap_tree$ ?v1py196 ?v2py102))) )) :named A239))
(assert (! (forall ((?v0py231 A_a_fun$)(?v1py197 A_a_fun$)(?v2py103 A$)) (! (= (tree_recurse$ ?v0py231 ?v1py197 ?v2py103) (node$a ?v2py103 (fun_app$ax (map_tree$a ?v0py231) (tree_recurse$ ?v0py231 ?v1py197 ?v2py103)) (fun_app$ax (map_tree$a ?v1py197) (tree_recurse$ ?v0py231 ?v1py197 ?v2py103)))) :pattern ((tree_recurse$ ?v0py231 ?v1py197 ?v2py103)) )) :named A240))
(assert (! (forall ((?v0py232 Bool_bool_fun$)(?v1py198 Bool_bool_fun$)(?v2py104 Bool)) (! (= (tree_recurse$a ?v0py232 ?v1py198 ?v2py104) (node$cq ?v2py104 (fun_app$ay (map_tree$b ?v0py232) (tree_recurse$a ?v0py232 ?v1py198 ?v2py104)) (fun_app$ay (map_tree$b ?v1py198) (tree_recurse$a ?v0py232 ?v1py198 ?v2py104)))) :pattern ((tree_recurse$a ?v0py232 ?v1py198 ?v2py104)) )) :named A241))
(assert (! (forall ((?v0py233 A_bool_fun_a_bool_fun_fun$)(?v1py199 A_bool_fun_a_bool_fun_fun$)(?v2py105 A_bool_fun$)) (! (= (tree_recurse$b ?v0py233 ?v1py199 ?v2py105) (node$ ?v2py105 (fun_app$bc (map_tree$h ?v0py233) (tree_recurse$b ?v0py233 ?v1py199 ?v2py105)) (fun_app$bc (map_tree$h ?v1py199) (tree_recurse$b ?v0py233 ?v1py199 ?v2py105)))) :pattern ((tree_recurse$b ?v0py233 ?v1py199 ?v2py105)) )) :named A242))
(assert (! (forall ((?v0py234 A_tree$)(?v1py200 A$)(?v2py106 A_a_fun$)(?v3py51 A_a_fun$)) (! (or (not (= ?v0py234 (node$a ?v1py200 (fun_app$ax (map_tree$a ?v2py106) ?v0py234) (fun_app$ax (map_tree$a ?v3py51) ?v0py234)))) (= ?v0py234 (tree_recurse$ ?v2py106 ?v3py51 ?v1py200))) :pattern ((node$a ?v1py200 (fun_app$ax (map_tree$a ?v2py106) ?v0py234) (fun_app$ax (map_tree$a ?v3py51) ?v0py234))) )) :named A243))
(assert (! (forall ((?v0py235 Bool_tree$)(?v1py201 Bool)(?v2py107 Bool_bool_fun$)(?v3py52 Bool_bool_fun$)) (! (or (not (= ?v0py235 (node$cq ?v1py201 (fun_app$ay (map_tree$b ?v2py107) ?v0py235) (fun_app$ay (map_tree$b ?v3py52) ?v0py235)))) (= ?v0py235 (tree_recurse$a ?v2py107 ?v3py52 ?v1py201))) :pattern ((node$cq ?v1py201 (fun_app$ay (map_tree$b ?v2py107) ?v0py235) (fun_app$ay (map_tree$b ?v3py52) ?v0py235))) )) :named A244))
(assert (! (forall ((?v0py236 A_bool_fun_tree$)(?v1py202 A_bool_fun$)(?v2py108 A_bool_fun_a_bool_fun_fun$)(?v3py53 A_bool_fun_a_bool_fun_fun$)) (! (or (not (= ?v0py236 (node$ ?v1py202 (fun_app$bc (map_tree$h ?v2py108) ?v0py236) (fun_app$bc (map_tree$h ?v3py53) ?v0py236)))) (= ?v0py236 (tree_recurse$b ?v2py108 ?v3py53 ?v1py202))) :pattern ((node$ ?v1py202 (fun_app$bc (map_tree$h ?v2py108) ?v0py236) (fun_app$bc (map_tree$h ?v3py53) ?v0py236))) )) :named A245))
(assert (! (forall ((?v0py237 A_a_bool_fun_fun_tree$)) (! (= (ap_tree$k i_tree$d ?v0py237) ?v0py237) :pattern ((ap_tree$k i_tree$d ?v0py237)) )) :named A246))
(assert (! (forall ((?v0py238 A_tree$)) (! (= (ap_tree$f i_tree$e ?v0py238) ?v0py238) :pattern ((ap_tree$f i_tree$e ?v0py238)) )) :named A247))
(assert (! (forall ((?v0py239 A_bool_bool_fun_fun$)(?v1py203 A_bool_fun$)) (! (= (pure_tree$ (fun_app$z (fun_app$ad uua$ ?v0py239) ?v1py203)) (ap_tree$d (ap_tree$ab s_tree$ (pure_tree$j ?v0py239)) (pure_tree$ ?v1py203))) :pattern ((fun_app$z (fun_app$ad uua$ ?v0py239) ?v1py203)) :pattern ((ap_tree$d (ap_tree$ab s_tree$ (pure_tree$j ?v0py239)) (pure_tree$ ?v1py203))) )) :named A248))
(assert (! (forall ((?v0py240 A_a_bool_fun_fun$)(?v1py204 A_a_fun$)) (! (= (pure_tree$ (fun_app$c (fun_app$au uub$ ?v0py240) ?v1py204)) (ap_tree$j (ap_tree$ac s_tree$a (pure_tree$k ?v0py240)) (pure_tree$h ?v1py204))) :pattern ((fun_app$c (fun_app$au uub$ ?v0py240) ?v1py204)) :pattern ((ap_tree$j (ap_tree$ac s_tree$a (pure_tree$k ?v0py240)) (pure_tree$h ?v1py204))) )) :named A249))
(assert (! (forall ((?v0py241 A_bool_fun_a_bool_fun_fun$)(?v1py205 A_bool_fun_a_fun$)) (! (= (pure_tree$d (fun_app$y (uuc$ ?v0py241) ?v1py205)) (ap_tree$bp (ap_tree$bq s_tree$j (pure_tree$f ?v0py241)) (pure_tree$i ?v1py205))) :pattern ((fun_app$y (uuc$ ?v0py241) ?v1py205)) :pattern ((ap_tree$bp (ap_tree$bq s_tree$j (pure_tree$f ?v0py241)) (pure_tree$i ?v1py205))) )) :named A250))
(assert (! (forall ((?v0py242 A_bool_bool_fun_bool_fun_fun$)(?v1py206 A_bool_bool_fun_fun$)) (! (= (pure_tree$ (fun_app$al (uud$ ?v0py242) ?v1py206)) (ap_tree$al (ap_tree$am s_tree$e (pure_tree$aa ?v0py242)) (pure_tree$j ?v1py206))) :pattern ((fun_app$al (uud$ ?v0py242) ?v1py206)) :pattern ((ap_tree$al (ap_tree$am s_tree$e (pure_tree$aa ?v0py242)) (pure_tree$j ?v1py206))) )) :named A251))
(assert (! (forall ((?v0py243 A_a_bool_fun_bool_fun_fun$)(?v1py207 A_a_bool_fun_fun$)) (! (= (pure_tree$ (fun_app$g (uue$ ?v0py243) ?v1py207)) (ap_tree$ap (ap_tree$aq s_tree$f (pure_tree$ab ?v0py243)) (pure_tree$k ?v1py207))) :pattern ((fun_app$g (uue$ ?v0py243) ?v1py207)) :pattern ((ap_tree$ap (ap_tree$aq s_tree$f (pure_tree$ab ?v0py243)) (pure_tree$k ?v1py207))) )) :named A252))
(assert (! (forall ((?v0py244 A_bool_bool_bool_fun_fun_fun$)(?v1py208 A_bool_fun$)) (! (= (pure_tree$j (fun_app$af (uuf$ ?v0py244) ?v1py208)) (ap_tree$as (ap_tree$at s_tree$g (pure_tree$ac ?v0py244)) (pure_tree$ ?v1py208))) :pattern ((fun_app$af (uuf$ ?v0py244) ?v1py208)) :pattern ((ap_tree$as (ap_tree$at s_tree$g (pure_tree$ac ?v0py244)) (pure_tree$ ?v1py208))) )) :named A253))
(assert (! (forall ((?v0py245 A_bool_a_bool_fun_fun_fun$)(?v1py209 A_bool_fun$)) (! (= (pure_tree$k (fun_app$ai (uug$ ?v0py245) ?v1py209)) (ap_tree$ay (ap_tree$az s_tree$i (pure_tree$ad ?v0py245)) (pure_tree$ ?v1py209))) :pattern ((fun_app$ai (uug$ ?v0py245) ?v1py209)) :pattern ((ap_tree$ay (ap_tree$az s_tree$i (pure_tree$ad ?v0py245)) (pure_tree$ ?v1py209))) )) :named A254))
(assert (! (forall ((?v0py246 A_a_bool_fun_fun_a_bool_fun_fun$)(?v1py210 A_a_bool_fun_fun_a_fun$)) (! (= (pure_tree$ae (uuh$ ?v0py246 ?v1py210)) (ap_tree$br (ap_tree$bs s_tree$k (pure_tree$l ?v0py246)) (pure_tree$af ?v1py210))) :pattern ((uuh$ ?v0py246 ?v1py210)) :pattern ((ap_tree$br (ap_tree$bs s_tree$k (pure_tree$l ?v0py246)) (pure_tree$af ?v1py210))) )) :named A255))
(assert (! (forall ((?v0py247 A_bool_bool_fun_bool_bool_fun_fun_fun$)(?v1py211 A_bool_bool_fun_fun$)) (! (= (pure_tree$j (fun_app$ao (uui$ ?v0py247) ?v1py211)) (ap_tree$bt (ap_tree$bu s_tree$l (pure_tree$ag ?v0py247)) (pure_tree$j ?v1py211))) :pattern ((fun_app$ao (uui$ ?v0py247) ?v1py211)) :pattern ((ap_tree$bt (ap_tree$bu s_tree$l (pure_tree$ag ?v0py247)) (pure_tree$j ?v1py211))) )) :named A256))
(assert (! (forall ((?v0py248 A_a_bool_fun_bool_bool_fun_fun_fun$)(?v1py212 A_a_bool_fun_fun$)) (! (= (pure_tree$j (fun_app$ar (uuj$ ?v0py248) ?v1py212)) (ap_tree$bv (ap_tree$bw s_tree$m (pure_tree$ah ?v0py248)) (pure_tree$k ?v1py212))) :pattern ((fun_app$ar (uuj$ ?v0py248) ?v1py212)) :pattern ((ap_tree$bv (ap_tree$bw s_tree$m (pure_tree$ah ?v0py248)) (pure_tree$k ?v1py212))) )) :named A257))
(assert (! (forall ((?v0py249 Dir_list$)(?v1py213 A_a_bool_fun_fun$)(?v2py109 A_tree$)) (! (= (traverse_tree$ ?v0py249 (fun_app$az (map_tree$d ?v1py213) ?v2py109)) (fun_app$az (map_tree$d ?v1py213) (traverse_tree$a ?v0py249 ?v2py109))) :pattern ((traverse_tree$ ?v0py249 (fun_app$az (map_tree$d ?v1py213) ?v2py109))) :pattern ((fun_app$az (map_tree$d ?v1py213) (traverse_tree$a ?v0py249 ?v2py109))) )) :named A258))
(assert (! (forall ((?v0py250 Dir_list$)(?v1py214 Bool_a_fun$)(?v2py110 Bool_tree$)) (! (= (traverse_tree$a ?v0py250 (fun_app$bd (map_tree$j ?v1py214) ?v2py110)) (fun_app$bd (map_tree$j ?v1py214) (traverse_tree$b ?v0py250 ?v2py110))) :pattern ((traverse_tree$a ?v0py250 (fun_app$bd (map_tree$j ?v1py214) ?v2py110))) :pattern ((fun_app$bd (map_tree$j ?v1py214) (traverse_tree$b ?v0py250 ?v2py110))) )) :named A259))
(assert (! (forall ((?v0py251 Dir_list$)(?v1py215 A_bool_fun_a_fun$)(?v2py111 A_bool_fun_tree$)) (! (= (traverse_tree$a ?v0py251 (fun_app$be (map_tree$k ?v1py215) ?v2py111)) (fun_app$be (map_tree$k ?v1py215) (traverse_tree$ ?v0py251 ?v2py111))) :pattern ((traverse_tree$a ?v0py251 (fun_app$be (map_tree$k ?v1py215) ?v2py111))) :pattern ((fun_app$be (map_tree$k ?v1py215) (traverse_tree$ ?v0py251 ?v2py111))) )) :named A260))
(assert (! (forall ((?v0py252 Dir_list$)(?v1py216 A_a_fun$)(?v2py112 A_tree$)) (! (= (traverse_tree$a ?v0py252 (fun_app$ax (map_tree$a ?v1py216) ?v2py112)) (fun_app$ax (map_tree$a ?v1py216) (traverse_tree$a ?v0py252 ?v2py112))) :pattern ((traverse_tree$a ?v0py252 (fun_app$ax (map_tree$a ?v1py216) ?v2py112))) :pattern ((fun_app$ax (map_tree$a ?v1py216) (traverse_tree$a ?v0py252 ?v2py112))) )) :named A261))
(assert (! (forall ((?v0py253 Dir_list$)(?v1py217 A_bool_fun$)(?v2py113 A_tree$)) (! (= (traverse_tree$b ?v0py253 (fun_app$aw (map_tree$ ?v1py217) ?v2py113)) (fun_app$aw (map_tree$ ?v1py217) (traverse_tree$a ?v0py253 ?v2py113))) :pattern ((traverse_tree$b ?v0py253 (fun_app$aw (map_tree$ ?v1py217) ?v2py113))) :pattern ((fun_app$aw (map_tree$ ?v1py217) (traverse_tree$a ?v0py253 ?v2py113))) )) :named A262))
(assert (! (forall ((?v0py254 Dir_list$)(?v1py218 Bool_bool_fun$)(?v2py114 Bool_tree$)) (! (= (traverse_tree$b ?v0py254 (fun_app$ay (map_tree$b ?v1py218) ?v2py114)) (fun_app$ay (map_tree$b ?v1py218) (traverse_tree$b ?v0py254 ?v2py114))) :pattern ((traverse_tree$b ?v0py254 (fun_app$ay (map_tree$b ?v1py218) ?v2py114))) :pattern ((fun_app$ay (map_tree$b ?v1py218) (traverse_tree$b ?v0py254 ?v2py114))) )) :named A263))
(assert (! (forall ((?v0py255 Dir_list$)(?v1py219 Bool_a_bool_fun_fun$)(?v2py115 Bool_tree$)) (! (= (traverse_tree$ ?v0py255 (fun_app$ba (map_tree$e ?v1py219) ?v2py115)) (fun_app$ba (map_tree$e ?v1py219) (traverse_tree$b ?v0py255 ?v2py115))) :pattern ((traverse_tree$ ?v0py255 (fun_app$ba (map_tree$e ?v1py219) ?v2py115))) :pattern ((fun_app$ba (map_tree$e ?v1py219) (traverse_tree$b ?v0py255 ?v2py115))) )) :named A264))
(assert (! (forall ((?v0py256 Dir_list$)(?v1py220 A_bool_fun_bool_fun$)(?v2py116 A_bool_fun_tree$)) (! (= (traverse_tree$b ?v0py256 (fun_app$bb (map_tree$f ?v1py220) ?v2py116)) (fun_app$bb (map_tree$f ?v1py220) (traverse_tree$ ?v0py256 ?v2py116))) :pattern ((traverse_tree$b ?v0py256 (fun_app$bb (map_tree$f ?v1py220) ?v2py116))) :pattern ((fun_app$bb (map_tree$f ?v1py220) (traverse_tree$ ?v0py256 ?v2py116))) )) :named A265))
(assert (! (forall ((?v0py257 Dir_list$)(?v1py221 A_bool_fun_a_bool_fun_fun$)(?v2py117 A_bool_fun_tree$)) (! (= (traverse_tree$ ?v0py257 (fun_app$bc (map_tree$h ?v1py221) ?v2py117)) (fun_app$bc (map_tree$h ?v1py221) (traverse_tree$ ?v0py257 ?v2py117))) :pattern ((traverse_tree$ ?v0py257 (fun_app$bc (map_tree$h ?v1py221) ?v2py117))) :pattern ((fun_app$bc (map_tree$h ?v1py221) (traverse_tree$ ?v0py257 ?v2py117))) )) :named A266))
(assert (! (forall ((?v0py258 A_bool_fun$)(?v1py222 A_a_fun$)(?v2py118 A$)) (! (and (or (not (fun_app$f (fun_app$c (fun_app$bo comp$c ?v0py258) ?v1py222) ?v2py118)) (fun_app$f ?v0py258 (fun_app$n ?v1py222 ?v2py118))) (or (fun_app$f (fun_app$c (fun_app$bo comp$c ?v0py258) ?v1py222) ?v2py118) (not (fun_app$f ?v0py258 (fun_app$n ?v1py222 ?v2py118))))) :pattern ((fun_app$f (fun_app$c (fun_app$bo comp$c ?v0py258) ?v1py222) ?v2py118)) )) :named A267))
(assert (! (forall ((?v0py259 Bool_bool_fun$)(?v1py223 A_bool_fun$)(?v2py119 A$)) (! (and (or (not (fun_app$f (fun_app$z (fun_app$bp comp$b ?v0py259) ?v1py223) ?v2py119)) (fun_app$ae ?v0py259 (fun_app$f ?v1py223 ?v2py119))) (or (fun_app$f (fun_app$z (fun_app$bp comp$b ?v0py259) ?v1py223) ?v2py119) (not (fun_app$ae ?v0py259 (fun_app$f ?v1py223 ?v2py119))))) :pattern ((fun_app$f (fun_app$z (fun_app$bp comp$b ?v0py259) ?v1py223) ?v2py119)) )) :named A268))
(assert (! (forall ((?v0py260 Bool_bool_fun$)(?v1py224 Bool_bool_fun$)(?v2py120 Bool)) (! (and (or (not (fun_app$ae (fun_app$q (fun_app$r comp$ ?v0py260) ?v1py224) ?v2py120)) (fun_app$ae ?v0py260 (fun_app$ae ?v1py224 ?v2py120))) (or (fun_app$ae (fun_app$q (fun_app$r comp$ ?v0py260) ?v1py224) ?v2py120) (not (fun_app$ae ?v0py260 (fun_app$ae ?v1py224 ?v2py120))))) :pattern ((fun_app$ae (fun_app$q (fun_app$r comp$ ?v0py260) ?v1py224) ?v2py120)) )) :named A269))
(assert (! (forall ((?v0py261 A_bool_fun_a_bool_fun_fun$)(?v1py225 A_bool_fun_a_bool_fun_fun$)(?v2py121 A_bool_fun$)) (! (= (fun_app$z (fun_app$s (comp$a ?v0py261) ?v1py225) ?v2py121) (fun_app$z ?v0py261 (fun_app$z ?v1py225 ?v2py121))) :pattern ((fun_app$z (fun_app$s (comp$a ?v0py261) ?v1py225) ?v2py121)) )) :named A270))
(assert (! (forall ((?v0py262 A_bool_fun$)) (! (= (fun_app$z (fun_app$bp comp$b id$a) ?v0py262) ?v0py262) :pattern ((fun_app$z (fun_app$bp comp$b id$a) ?v0py262)) )) :named A271))
(assert (! (forall ((?v0py263 Bool_bool_fun$)) (! (= (fun_app$q (fun_app$r comp$ id$a) ?v0py263) ?v0py263) :pattern ((fun_app$q (fun_app$r comp$ id$a) ?v0py263)) )) :named A272))
(assert (! (forall ((?v0py264 A_bool_fun_a_bool_fun_fun$)) (! (= (fun_app$s (comp$a id$e) ?v0py264) ?v0py264) :pattern ((fun_app$s (comp$a id$e) ?v0py264)) )) :named A273))
(assert (! (forall ((?v0py265 A_bool_fun$)) (! (= (fun_app$c (fun_app$bo comp$c ?v0py265) id$d) ?v0py265) :pattern ((fun_app$bo comp$c ?v0py265)) )) :named A274))
(assert (! (forall ((?v0py266 Bool_bool_fun$)) (! (= (fun_app$q (fun_app$r comp$ ?v0py266) id$a) ?v0py266) :pattern ((fun_app$r comp$ ?v0py266)) )) :named A275))
(assert (! (forall ((?v0py267 A_bool_fun_a_bool_fun_fun$)) (! (= (fun_app$s (comp$a ?v0py267) id$e) ?v0py267) :pattern ((comp$a ?v0py267)) )) :named A276))
(assert (! (forall ((?v0py268 Dir_list$)(?v1py226 A_bool_fun_tree$)(?v2py122 A_tree$)) (! (= (traverse_tree$b ?v0py268 (ap_tree$ ?v1py226 ?v2py122)) (ap_tree$ (traverse_tree$ ?v0py268 ?v1py226) (traverse_tree$a ?v0py268 ?v2py122))) :pattern ((traverse_tree$b ?v0py268 (ap_tree$ ?v1py226 ?v2py122))) :pattern ((ap_tree$ (traverse_tree$ ?v0py268 ?v1py226) (traverse_tree$a ?v0py268 ?v2py122))) )) :named A277))
(assert (! (forall ((?v0py269 Dir_list$)(?v1py227 Bool_bool_fun_tree$)(?v2py123 Bool_tree$)) (! (= (traverse_tree$b ?v0py269 (ap_tree$a ?v1py227 ?v2py123)) (ap_tree$a (traverse_tree$c ?v0py269 ?v1py227) (traverse_tree$b ?v0py269 ?v2py123))) :pattern ((traverse_tree$b ?v0py269 (ap_tree$a ?v1py227 ?v2py123))) :pattern ((ap_tree$a (traverse_tree$c ?v0py269 ?v1py227) (traverse_tree$b ?v0py269 ?v2py123))) )) :named A278))
(assert (! (forall ((?v0py270 Dir_list$)(?v1py228 Bool_a_fun_tree$)(?v2py124 Bool_tree$)) (! (= (traverse_tree$a ?v0py270 (ap_tree$e ?v1py228 ?v2py124)) (ap_tree$e (traverse_tree$d ?v0py270 ?v1py228) (traverse_tree$b ?v0py270 ?v2py124))) :pattern ((traverse_tree$a ?v0py270 (ap_tree$e ?v1py228 ?v2py124))) :pattern ((ap_tree$e (traverse_tree$d ?v0py270 ?v1py228) (traverse_tree$b ?v0py270 ?v2py124))) )) :named A279))
(assert (! (forall ((?v0py271 Dir_list$)(?v1py229 A_a_fun_tree$)(?v2py125 A_tree$)) (! (= (traverse_tree$a ?v0py271 (ap_tree$f ?v1py229 ?v2py125)) (ap_tree$f (traverse_tree$e ?v0py271 ?v1py229) (traverse_tree$a ?v0py271 ?v2py125))) :pattern ((traverse_tree$a ?v0py271 (ap_tree$f ?v1py229 ?v2py125))) :pattern ((ap_tree$f (traverse_tree$e ?v0py271 ?v1py229) (traverse_tree$a ?v0py271 ?v2py125))) )) :named A280))
(assert (! (forall ((?v0py272 Dir_list$)(?v1py230 A_bool_bool_fun_fun_tree$)(?v2py126 A_tree$)) (! (= (traverse_tree$c ?v0py272 (ap_tree$h ?v1py230 ?v2py126)) (ap_tree$h (traverse_tree$f ?v0py272 ?v1py230) (traverse_tree$a ?v0py272 ?v2py126))) :pattern ((traverse_tree$c ?v0py272 (ap_tree$h ?v1py230 ?v2py126))) :pattern ((ap_tree$h (traverse_tree$f ?v0py272 ?v1py230) (traverse_tree$a ?v0py272 ?v2py126))) )) :named A281))
(assert (! (forall ((?v0py273 Dir_list$)(?v1py231 A_bool_fun_bool_fun_tree$)(?v2py127 A_bool_fun_tree$)) (! (= (traverse_tree$b ?v0py273 (ap_tree$b ?v1py231 ?v2py127)) (ap_tree$b (traverse_tree$g ?v0py273 ?v1py231) (traverse_tree$ ?v0py273 ?v2py127))) :pattern ((traverse_tree$b ?v0py273 (ap_tree$b ?v1py231 ?v2py127))) :pattern ((ap_tree$b (traverse_tree$g ?v0py273 ?v1py231) (traverse_tree$ ?v0py273 ?v2py127))) )) :named A282))
(assert (! (forall ((?v0py274 Dir_list$)(?v1py232 Bool_a_bool_fun_fun_tree$)(?v2py128 Bool_tree$)) (! (= (traverse_tree$ ?v0py274 (ap_tree$c ?v1py232 ?v2py128)) (ap_tree$c (traverse_tree$h ?v0py274 ?v1py232) (traverse_tree$b ?v0py274 ?v2py128))) :pattern ((traverse_tree$ ?v0py274 (ap_tree$c ?v1py232 ?v2py128))) :pattern ((ap_tree$c (traverse_tree$h ?v0py274 ?v1py232) (traverse_tree$b ?v0py274 ?v2py128))) )) :named A283))
(assert (! (forall ((?v0py275 Dir_list$)(?v1py233 A_a_bool_fun_fun_tree$)(?v2py129 A_tree$)) (! (= (traverse_tree$ ?v0py275 (ap_tree$i ?v1py233 ?v2py129)) (ap_tree$i (traverse_tree$i ?v0py275 ?v1py233) (traverse_tree$a ?v0py275 ?v2py129))) :pattern ((traverse_tree$ ?v0py275 (ap_tree$i ?v1py233 ?v2py129))) :pattern ((ap_tree$i (traverse_tree$i ?v0py275 ?v1py233) (traverse_tree$a ?v0py275 ?v2py129))) )) :named A284))
(assert (! (forall ((?v0py276 Dir_list$)(?v1py234 A_bool_fun_a_fun_tree$)(?v2py130 A_bool_fun_tree$)) (! (= (traverse_tree$a ?v0py276 (ap_tree$g ?v1py234 ?v2py130)) (ap_tree$g (traverse_tree$j ?v0py276 ?v1py234) (traverse_tree$ ?v0py276 ?v2py130))) :pattern ((traverse_tree$a ?v0py276 (ap_tree$g ?v1py234 ?v2py130))) :pattern ((ap_tree$g (traverse_tree$j ?v0py276 ?v1py234) (traverse_tree$ ?v0py276 ?v2py130))) )) :named A285))
(assert (! (forall ((?v0py277 Dir_list$)(?v1py235 A_a_fun_a_bool_fun_fun_tree$)(?v2py131 A_a_fun_tree$)) (! (= (traverse_tree$ ?v0py277 (ap_tree$j ?v1py235 ?v2py131)) (ap_tree$j (traverse_tree$k ?v0py277 ?v1py235) (traverse_tree$e ?v0py277 ?v2py131))) :pattern ((traverse_tree$ ?v0py277 (ap_tree$j ?v1py235 ?v2py131))) :pattern ((ap_tree$j (traverse_tree$k ?v0py277 ?v1py235) (traverse_tree$e ?v0py277 ?v2py131))) )) :named A286))
(assert (! (forall ((?v0py278 Dir_list$)(?v1py236 A_bool_fun_a_bool_fun_fun$)) (! (= (traverse_tree$l ?v0py278 (pure_tree$f ?v1py236)) (pure_tree$f ?v1py236)) :pattern ((traverse_tree$l ?v0py278 (pure_tree$f ?v1py236))) )) :named A287))
(assert (! (forall ((?v0py279 Dir_list$)(?v1py237 A_a_bool_fun_fun_a_bool_fun_fun$)) (! (= (traverse_tree$m ?v0py279 (pure_tree$l ?v1py237)) (pure_tree$l ?v1py237)) :pattern ((traverse_tree$m ?v0py279 (pure_tree$l ?v1py237))) )) :named A288))
(assert (! (forall ((?v0py280 Dir_list$)(?v1py238 A_bool_bool_fun_fun$)) (! (= (traverse_tree$f ?v0py280 (pure_tree$j ?v1py238)) (pure_tree$j ?v1py238)) :pattern ((traverse_tree$f ?v0py280 (pure_tree$j ?v1py238))) )) :named A289))
(assert (! (forall ((?v0py281 Dir_list$)(?v1py239 A_a_bool_fun_fun$)) (! (= (traverse_tree$i ?v0py281 (pure_tree$k ?v1py239)) (pure_tree$k ?v1py239)) :pattern ((traverse_tree$i ?v0py281 (pure_tree$k ?v1py239))) )) :named A290))
(assert (! (forall ((?v0py282 Dir_list$)(?v1py240 A$)) (! (= (traverse_tree$a ?v0py282 (pure_tree$c ?v1py240)) (pure_tree$c ?v1py240)) :pattern ((traverse_tree$a ?v0py282 (pure_tree$c ?v1py240))) )) :named A291))
(assert (! (forall ((?v0py283 Dir_list$)(?v1py241 A_bool_fun$)) (! (= (traverse_tree$ ?v0py283 (pure_tree$ ?v1py241)) (pure_tree$ ?v1py241)) :pattern ((traverse_tree$ ?v0py283 (pure_tree$ ?v1py241))) )) :named A292))
(assert (! (forall ((?v0py284 Dir_list$)(?v1py242 Bool)) (! (= (traverse_tree$b ?v0py284 (pure_tree$a ?v1py242)) (pure_tree$a ?v1py242)) :pattern ((traverse_tree$b ?v0py284 (pure_tree$a ?v1py242))) )) :named A293))
(assert (! (forall ((?v0py285 A_bool_fun$)(?v1py243 A_bool_fun$)) (! (or (= (collect$ ?v0py285) (collect$ ?v1py243)) (and (or (fun_app$f ?v0py285 (?v2!98 ?v1py243 ?v0py285)) (fun_app$f ?v1py243 (?v2!98 ?v1py243 ?v0py285))) (or (not (fun_app$f ?v0py285 (?v2!98 ?v1py243 ?v0py285))) (not (fun_app$f ?v1py243 (?v2!98 ?v1py243 ?v0py285)))))) :pattern ((?v2!98 ?v1py243 ?v0py285)) )) :named A294))
(assert (! (forall ((?v0py286 A_set$)) (! (= (collect$ (uuk$ ?v0py286)) ?v0py286) :pattern ((uuk$ ?v0py286)) )) :named A295))
(assert (! (forall ((?v0py287 A$)(?v1py244 A_bool_fun$)) (! (and (or (not (member$ ?v0py287 (collect$ ?v1py244))) (fun_app$f ?v1py244 ?v0py287)) (or (member$ ?v0py287 (collect$ ?v1py244)) (not (fun_app$f ?v1py244 ?v0py287)))) :pattern ((member$ ?v0py287 (collect$ ?v1py244))) :pattern ((fun_app$f ?v1py244 ?v0py287)) )) :named A296))
(assert (! (= c_tree$ (pure_tree$p uul$)) :named A297))
(assert (! (= (pure_tree$f uum$) i_tree$c) :named A298))
(assert (! (= s_tree$a (pure_tree$ai uub$)) :named A299))
(assert (! (= s_tree$ (pure_tree$aj uua$)) :named A300))
(assert (! (forall ((?v0py288 A_bool_fun$)(?v1py245 A_a_fun$)(?v2py132 A_bool_fun$)(?v3py54 A$)) (! (or (not (= (fun_app$c (fun_app$bo comp$c ?v0py288) ?v1py245) ?v2py132)) (and (or (not (fun_app$f ?v0py288 (fun_app$n ?v1py245 ?v3py54))) (fun_app$f ?v2py132 ?v3py54)) (or (fun_app$f ?v0py288 (fun_app$n ?v1py245 ?v3py54)) (not (fun_app$f ?v2py132 ?v3py54))))) :pattern ((fun_app$f ?v0py288 (fun_app$n ?v1py245 ?v3py54)) (fun_app$f ?v2py132 ?v3py54)) )) :named A301))
(assert (! (forall ((?v0py289 Bool_bool_fun$)(?v1py246 A_bool_fun$)(?v2py133 A_bool_fun$)(?v3py55 A$)) (! (or (not (= (fun_app$z (fun_app$bp comp$b ?v0py289) ?v1py246) ?v2py133)) (and (or (not (fun_app$ae ?v0py289 (fun_app$f ?v1py246 ?v3py55))) (fun_app$f ?v2py133 ?v3py55)) (or (fun_app$ae ?v0py289 (fun_app$f ?v1py246 ?v3py55)) (not (fun_app$f ?v2py133 ?v3py55))))) :pattern ((fun_app$ae ?v0py289 (fun_app$f ?v1py246 ?v3py55)) (fun_app$f ?v2py133 ?v3py55)) )) :named A302))
(assert (! (forall ((?v0py290 Bool_bool_fun$)(?v1py247 Bool_bool_fun$)(?v2py134 Bool_bool_fun$)(?v3py56 Bool)) (! (or (not (= (fun_app$q (fun_app$r comp$ ?v0py290) ?v1py247) ?v2py134)) (and (or (not (fun_app$ae ?v0py290 (fun_app$ae ?v1py247 ?v3py56))) (fun_app$ae ?v2py134 ?v3py56)) (or (fun_app$ae ?v0py290 (fun_app$ae ?v1py247 ?v3py56)) (not (fun_app$ae ?v2py134 ?v3py56))))) :pattern ((fun_app$ae ?v0py290 (fun_app$ae ?v1py247 ?v3py56)) (fun_app$ae ?v2py134 ?v3py56)) )) :named A303))
(assert (! (forall ((?v0py291 A_bool_fun_a_bool_fun_fun$)(?v1py248 A_bool_fun_a_bool_fun_fun$)(?v2py135 A_bool_fun_a_bool_fun_fun$)(?v3py57 A_bool_fun$)) (! (or (not (= (fun_app$s (comp$a ?v0py291) ?v1py248) ?v2py135)) (= (fun_app$z ?v0py291 (fun_app$z ?v1py248 ?v3py57)) (fun_app$z ?v2py135 ?v3py57))) :pattern ((fun_app$z ?v0py291 (fun_app$z ?v1py248 ?v3py57)) (fun_app$z ?v2py135 ?v3py57)) )) :named A304))
(assert (! (forall ((?v0py292 A_bool_fun$)(?v1py249 A_a_fun$)(?v2py136 A_bool_fun$)(?v3py58 A_a_fun$)(?v4py13 A$)) (! (or (not (= (fun_app$c (fun_app$bo comp$c ?v0py292) ?v1py249) (fun_app$c (fun_app$bo comp$c ?v2py136) ?v3py58))) (and (or (not (fun_app$f ?v0py292 (fun_app$n ?v1py249 ?v4py13))) (fun_app$f ?v2py136 (fun_app$n ?v3py58 ?v4py13))) (or (fun_app$f ?v0py292 (fun_app$n ?v1py249 ?v4py13)) (not (fun_app$f ?v2py136 (fun_app$n ?v3py58 ?v4py13)))))) :pattern ((fun_app$f ?v0py292 (fun_app$n ?v1py249 ?v4py13)) (fun_app$f ?v2py136 (fun_app$n ?v3py58 ?v4py13))) )) :named A305))
(assert (! (forall ((?v0py293 A_bool_fun$)(?v1py250 A_a_fun$)(?v2py137 Bool_bool_fun$)(?v3py59 A_bool_fun$)(?v4py14 A$)) (! (or (not (= (fun_app$c (fun_app$bo comp$c ?v0py293) ?v1py250) (fun_app$z (fun_app$bp comp$b ?v2py137) ?v3py59))) (and (or (not (fun_app$f ?v0py293 (fun_app$n ?v1py250 ?v4py14))) (fun_app$ae ?v2py137 (fun_app$f ?v3py59 ?v4py14))) (or (fun_app$f ?v0py293 (fun_app$n ?v1py250 ?v4py14)) (not (fun_app$ae ?v2py137 (fun_app$f ?v3py59 ?v4py14)))))) :pattern ((fun_app$f ?v0py293 (fun_app$n ?v1py250 ?v4py14)) (fun_app$ae ?v2py137 (fun_app$f ?v3py59 ?v4py14))) )) :named A306))
(assert (! (forall ((?v0py294 Bool_bool_fun$)(?v1py251 A_bool_fun$)(?v2py138 A_bool_fun$)(?v3py60 A_a_fun$)(?v4py15 A$)) (! (or (not (= (fun_app$z (fun_app$bp comp$b ?v0py294) ?v1py251) (fun_app$c (fun_app$bo comp$c ?v2py138) ?v3py60))) (and (or (not (fun_app$ae ?v0py294 (fun_app$f ?v1py251 ?v4py15))) (fun_app$f ?v2py138 (fun_app$n ?v3py60 ?v4py15))) (or (fun_app$ae ?v0py294 (fun_app$f ?v1py251 ?v4py15)) (not (fun_app$f ?v2py138 (fun_app$n ?v3py60 ?v4py15)))))) :pattern ((fun_app$ae ?v0py294 (fun_app$f ?v1py251 ?v4py15)) (fun_app$f ?v2py138 (fun_app$n ?v3py60 ?v4py15))) )) :named A307))
(assert (! (forall ((?v0py295 Bool_bool_fun$)(?v1py252 A_bool_fun$)(?v2py139 Bool_bool_fun$)(?v3py61 A_bool_fun$)(?v4py16 A$)) (! (or (not (= (fun_app$z (fun_app$bp comp$b ?v0py295) ?v1py252) (fun_app$z (fun_app$bp comp$b ?v2py139) ?v3py61))) (and (or (not (fun_app$ae ?v0py295 (fun_app$f ?v1py252 ?v4py16))) (fun_app$ae ?v2py139 (fun_app$f ?v3py61 ?v4py16))) (or (fun_app$ae ?v0py295 (fun_app$f ?v1py252 ?v4py16)) (not (fun_app$ae ?v2py139 (fun_app$f ?v3py61 ?v4py16)))))) :pattern ((fun_app$ae ?v0py295 (fun_app$f ?v1py252 ?v4py16)) (fun_app$ae ?v2py139 (fun_app$f ?v3py61 ?v4py16))) )) :named A308))
(assert (! (forall ((?v0py296 Bool_bool_fun$)(?v1py253 Bool_bool_fun$)(?v2py140 Bool_bool_fun$)(?v3py62 Bool_bool_fun$)(?v4py17 Bool)) (! (or (not (= (fun_app$q (fun_app$r comp$ ?v0py296) ?v1py253) (fun_app$q (fun_app$r comp$ ?v2py140) ?v3py62))) (and (or (not (fun_app$ae ?v0py296 (fun_app$ae ?v1py253 ?v4py17))) (fun_app$ae ?v2py140 (fun_app$ae ?v3py62 ?v4py17))) (or (fun_app$ae ?v0py296 (fun_app$ae ?v1py253 ?v4py17)) (not (fun_app$ae ?v2py140 (fun_app$ae ?v3py62 ?v4py17)))))) :pattern ((fun_app$ae ?v0py296 (fun_app$ae ?v1py253 ?v4py17)) (fun_app$ae ?v2py140 (fun_app$ae ?v3py62 ?v4py17))) )) :named A309))
(assert (! (forall ((?v0py297 A_bool_fun_a_bool_fun_fun$)(?v1py254 A_bool_fun_a_bool_fun_fun$)(?v2py141 A_bool_fun_a_bool_fun_fun$)(?v3py63 A_bool_fun_a_bool_fun_fun$)(?v4py18 A_bool_fun$)) (! (or (not (= (fun_app$s (comp$a ?v0py297) ?v1py254) (fun_app$s (comp$a ?v2py141) ?v3py63))) (= (fun_app$z ?v0py297 (fun_app$z ?v1py254 ?v4py18)) (fun_app$z ?v2py141 (fun_app$z ?v3py63 ?v4py18)))) :pattern ((fun_app$z ?v0py297 (fun_app$z ?v1py254 ?v4py18)) (fun_app$z ?v2py141 (fun_app$z ?v3py63 ?v4py18))) )) :named A310))
(assert (! (forall ((?v0py298 A_bool_fun$)(?v1py255 A_a_fun$)(?v2py142 A_bool_fun$)(?v3py64 A_a_fun$)) (! (or (not (= (fun_app$c (fun_app$bo comp$c ?v0py298) ?v1py255) (fun_app$c (fun_app$bo comp$c ?v2py142) ?v3py64))) (forall ((?v4py19 A$)) (! (and (or (not (fun_app$f ?v0py298 (fun_app$n ?v1py255 ?v4py19))) (fun_app$f ?v2py142 (fun_app$n ?v3py64 ?v4py19))) (or (fun_app$f ?v0py298 (fun_app$n ?v1py255 ?v4py19)) (not (fun_app$f ?v2py142 (fun_app$n ?v3py64 ?v4py19))))) :pattern ((fun_app$n ?v1py255 ?v4py19)) :pattern ((fun_app$n ?v3py64 ?v4py19)) ))) :pattern ((fun_app$c (fun_app$bo comp$c ?v0py298) ?v1py255) (fun_app$c (fun_app$bo comp$c ?v2py142) ?v3py64)) )) :named A311))
(assert (! (forall ((?v0py299 A_bool_fun$)(?v1py256 A_a_fun$)(?v2py143 Bool_bool_fun$)(?v3py65 A_bool_fun$)) (! (or (not (= (fun_app$c (fun_app$bo comp$c ?v0py299) ?v1py256) (fun_app$z (fun_app$bp comp$b ?v2py143) ?v3py65))) (forall ((?v4py20 A$)) (! (and (or (not (fun_app$f ?v0py299 (fun_app$n ?v1py256 ?v4py20))) (fun_app$ae ?v2py143 (fun_app$f ?v3py65 ?v4py20))) (or (fun_app$f ?v0py299 (fun_app$n ?v1py256 ?v4py20)) (not (fun_app$ae ?v2py143 (fun_app$f ?v3py65 ?v4py20))))) :pattern ((fun_app$n ?v1py256 ?v4py20)) :pattern ((fun_app$f ?v3py65 ?v4py20)) ))) :pattern ((fun_app$c (fun_app$bo comp$c ?v0py299) ?v1py256) (fun_app$z (fun_app$bp comp$b ?v2py143) ?v3py65)) )) :named A312))
(assert (! (forall ((?v0py300 Bool_bool_fun$)(?v1py257 A_bool_fun$)(?v2py144 A_bool_fun$)(?v3py66 A_a_fun$)) (! (or (not (= (fun_app$z (fun_app$bp comp$b ?v0py300) ?v1py257) (fun_app$c (fun_app$bo comp$c ?v2py144) ?v3py66))) (forall ((?v4py21 A$)) (! (and (or (not (fun_app$ae ?v0py300 (fun_app$f ?v1py257 ?v4py21))) (fun_app$f ?v2py144 (fun_app$n ?v3py66 ?v4py21))) (or (fun_app$ae ?v0py300 (fun_app$f ?v1py257 ?v4py21)) (not (fun_app$f ?v2py144 (fun_app$n ?v3py66 ?v4py21))))) :pattern ((fun_app$f ?v1py257 ?v4py21)) :pattern ((fun_app$n ?v3py66 ?v4py21)) ))) :pattern ((fun_app$z (fun_app$bp comp$b ?v0py300) ?v1py257) (fun_app$c (fun_app$bo comp$c ?v2py144) ?v3py66)) )) :named A313))
(assert (! (forall ((?v0py301 Bool_bool_fun$)(?v1py258 A_bool_fun$)(?v2py145 Bool_bool_fun$)(?v3py67 A_bool_fun$)) (! (or (not (= (fun_app$z (fun_app$bp comp$b ?v0py301) ?v1py258) (fun_app$z (fun_app$bp comp$b ?v2py145) ?v3py67))) (forall ((?v4py22 A$)) (! (and (or (not (fun_app$ae ?v0py301 (fun_app$f ?v1py258 ?v4py22))) (fun_app$ae ?v2py145 (fun_app$f ?v3py67 ?v4py22))) (or (fun_app$ae ?v0py301 (fun_app$f ?v1py258 ?v4py22)) (not (fun_app$ae ?v2py145 (fun_app$f ?v3py67 ?v4py22))))) :pattern ((fun_app$f ?v1py258 ?v4py22)) :pattern ((fun_app$f ?v3py67 ?v4py22)) ))) :pattern ((fun_app$z (fun_app$bp comp$b ?v0py301) ?v1py258) (fun_app$z (fun_app$bp comp$b ?v2py145) ?v3py67)) )) :named A314))
(assert (! (forall ((?v0py302 Bool_bool_fun$)(?v1py259 Bool_bool_fun$)(?v2py146 Bool_bool_fun$)(?v3py68 Bool_bool_fun$)) (! (or (not (= (fun_app$q (fun_app$r comp$ ?v0py302) ?v1py259) (fun_app$q (fun_app$r comp$ ?v2py146) ?v3py68))) (forall ((?v4py23 Bool)) (! (and (or (not (fun_app$ae ?v0py302 (fun_app$ae ?v1py259 ?v4py23))) (fun_app$ae ?v2py146 (fun_app$ae ?v3py68 ?v4py23))) (or (fun_app$ae ?v0py302 (fun_app$ae ?v1py259 ?v4py23)) (not (fun_app$ae ?v2py146 (fun_app$ae ?v3py68 ?v4py23))))) :pattern ((fun_app$ae ?v1py259 ?v4py23)) :pattern ((fun_app$ae ?v3py68 ?v4py23)) ))) :pattern ((fun_app$q (fun_app$r comp$ ?v0py302) ?v1py259) (fun_app$q (fun_app$r comp$ ?v2py146) ?v3py68)) )) :named A315))
(assert (! (forall ((?v0py303 A_bool_fun_a_bool_fun_fun$)(?v1py260 A_bool_fun_a_bool_fun_fun$)(?v2py147 A_bool_fun_a_bool_fun_fun$)(?v3py69 A_bool_fun_a_bool_fun_fun$)) (! (or (forall ((?v4py24 A_bool_fun$)) (! (= (fun_app$z ?v0py303 (fun_app$z ?v1py260 ?v4py24)) (fun_app$z ?v2py147 (fun_app$z ?v3py69 ?v4py24))) :pattern ((fun_app$z ?v1py260 ?v4py24)) :pattern ((fun_app$z ?v3py69 ?v4py24)) )) (not (= (fun_app$s (comp$a ?v0py303) ?v1py260) (fun_app$s (comp$a ?v2py147) ?v3py69)))) :pattern ((fun_app$s (comp$a ?v0py303) ?v1py260) (fun_app$s (comp$a ?v2py147) ?v3py69)) )) :named A316))
(assert (! (forall ((?v0py304 Bool_bool_fun$)(?v1py261 A_bool_fun$)(?v2py148 Bool_a_fun$)) (! (= (fun_app$bq (comp$k (fun_app$z (fun_app$bp comp$b ?v0py304) ?v1py261)) ?v2py148) (fun_app$q (fun_app$r comp$ ?v0py304) (fun_app$bq (comp$k ?v1py261) ?v2py148))) :pattern ((fun_app$bq (comp$k (fun_app$z (fun_app$bp comp$b ?v0py304) ?v1py261)) ?v2py148)) :pattern ((fun_app$q (fun_app$r comp$ ?v0py304) (fun_app$bq (comp$k ?v1py261) ?v2py148))) )) :named A317))
(assert (! (forall ((?v0py305 A_bool_fun$)(?v1py262 A_a_fun$)(?v2py149 A_a_fun$)) (! (= (fun_app$c (fun_app$bo comp$c (fun_app$c (fun_app$bo comp$c ?v0py305) ?v1py262)) ?v2py149) (fun_app$c (fun_app$bo comp$c ?v0py305) (fun_app$br (fun_app$bs comp$e ?v1py262) ?v2py149))) :pattern ((fun_app$c (fun_app$bo comp$c (fun_app$c (fun_app$bo comp$c ?v0py305) ?v1py262)) ?v2py149)) :pattern ((fun_app$c (fun_app$bo comp$c ?v0py305) (fun_app$br (fun_app$bs comp$e ?v1py262) ?v2py149))) )) :named A318))
(assert (! (forall ((?v0py306 Bool_bool_fun$)(?v1py263 A_bool_fun$)(?v2py150 A_a_fun$)) (! (= (fun_app$c (fun_app$bo comp$c (fun_app$z (fun_app$bp comp$b ?v0py306) ?v1py263)) ?v2py150) (fun_app$z (fun_app$bp comp$b ?v0py306) (fun_app$c (fun_app$bo comp$c ?v1py263) ?v2py150))) :pattern ((fun_app$c (fun_app$bo comp$c (fun_app$z (fun_app$bp comp$b ?v0py306) ?v1py263)) ?v2py150)) :pattern ((fun_app$z (fun_app$bp comp$b ?v0py306) (fun_app$c (fun_app$bo comp$c ?v1py263) ?v2py150))) )) :named A319))
(assert (! (forall ((?v0py307 A_bool_fun$)(?v1py264 Bool_a_fun$)(?v2py151 A_bool_fun$)) (! (= (fun_app$z (fun_app$bp comp$b (fun_app$bq (comp$k ?v0py307) ?v1py264)) ?v2py151) (fun_app$c (fun_app$bo comp$c ?v0py307) (fun_app$bt (fun_app$bu comp$d ?v1py264) ?v2py151))) :pattern ((fun_app$z (fun_app$bp comp$b (fun_app$bq (comp$k ?v0py307) ?v1py264)) ?v2py151)) :pattern ((fun_app$c (fun_app$bo comp$c ?v0py307) (fun_app$bt (fun_app$bu comp$d ?v1py264) ?v2py151))) )) :named A320))
(assert (! (forall ((?v0py308 Bool_bool_fun$)(?v1py265 Bool_bool_fun$)(?v2py152 A_bool_fun$)) (! (= (fun_app$z (fun_app$bp comp$b (fun_app$q (fun_app$r comp$ ?v0py308) ?v1py265)) ?v2py152) (fun_app$z (fun_app$bp comp$b ?v0py308) (fun_app$z (fun_app$bp comp$b ?v1py265) ?v2py152))) :pattern ((fun_app$z (fun_app$bp comp$b (fun_app$q (fun_app$r comp$ ?v0py308) ?v1py265)) ?v2py152)) :pattern ((fun_app$z (fun_app$bp comp$b ?v0py308) (fun_app$z (fun_app$bp comp$b ?v1py265) ?v2py152))) )) :named A321))
(assert (! (forall ((?v0py309 Bool_bool_fun$)(?v1py266 Bool_bool_fun$)(?v2py153 Bool_bool_fun$)) (! (= (fun_app$q (fun_app$r comp$ (fun_app$q (fun_app$r comp$ ?v0py309) ?v1py266)) ?v2py153) (fun_app$q (fun_app$r comp$ ?v0py309) (fun_app$q (fun_app$r comp$ ?v1py266) ?v2py153))) :pattern ((fun_app$q (fun_app$r comp$ (fun_app$q (fun_app$r comp$ ?v0py309) ?v1py266)) ?v2py153)) :pattern ((fun_app$q (fun_app$r comp$ ?v0py309) (fun_app$q (fun_app$r comp$ ?v1py266) ?v2py153))) )) :named A322))
(assert (! (forall ((?v0py310 A_bool_fun_a_bool_fun_fun$)(?v1py267 A_bool_fun_a_bool_fun_fun$)(?v2py154 A_bool_fun_a_bool_fun_fun$)) (! (= (fun_app$s (comp$a (fun_app$s (comp$a ?v0py310) ?v1py267)) ?v2py154) (fun_app$s (comp$a ?v0py310) (fun_app$s (comp$a ?v1py267) ?v2py154))) :pattern ((fun_app$s (comp$a (fun_app$s (comp$a ?v0py310) ?v1py267)) ?v2py154)) :pattern ((fun_app$s (comp$a ?v0py310) (fun_app$s (comp$a ?v1py267) ?v2py154))) )) :named A323))
(assert (! (= k_tree$e (pure_tree$e uun$)) :named A324))
(assert (! (forall ((?v0py311 Bool_tree$)) (! (= (fun_app$ay (map_tree$b uuo$) ?v0py311) ?v0py311) :pattern ((fun_app$ay (map_tree$b uuo$) ?v0py311)) )) :named A325))
(assert (! (forall ((?v0py312 A_bool_fun_tree$)) (! (= (fun_app$bc (map_tree$h uum$) ?v0py312) ?v0py312) :pattern ((fun_app$bc (map_tree$h uum$) ?v0py312)) )) :named A326))
(assert (! (forall ((?v0py313 A_bool_fun$)(?v1py268 A_a_fun$)) (! (= (map_tree$ (fun_app$c (fun_app$bo comp$c ?v0py313) ?v1py268)) (comp$l (map_tree$ ?v0py313) (map_tree$a ?v1py268))) :pattern ((fun_app$c (fun_app$bo comp$c ?v0py313) ?v1py268)) :pattern ((comp$l (map_tree$ ?v0py313) (map_tree$a ?v1py268))) )) :named A327))
(assert (! (forall ((?v0py314 Bool_bool_fun$)(?v1py269 A_bool_fun$)) (! (= (map_tree$ (fun_app$z (fun_app$bp comp$b ?v0py314) ?v1py269)) (comp$m (map_tree$b ?v0py314) (map_tree$ ?v1py269))) :pattern ((fun_app$z (fun_app$bp comp$b ?v0py314) ?v1py269)) :pattern ((comp$m (map_tree$b ?v0py314) (map_tree$ ?v1py269))) )) :named A328))
(assert (! (forall ((?v0py315 A_bool_fun$)(?v1py270 Bool_a_fun$)) (! (= (map_tree$b (fun_app$bq (comp$k ?v0py315) ?v1py270)) (comp$n (map_tree$ ?v0py315) (map_tree$j ?v1py270))) :pattern ((fun_app$bq (comp$k ?v0py315) ?v1py270)) :pattern ((comp$n (map_tree$ ?v0py315) (map_tree$j ?v1py270))) )) :named A329))
(assert (! (forall ((?v0py316 Bool_bool_fun$)(?v1py271 Bool_bool_fun$)) (! (= (map_tree$b (fun_app$q (fun_app$r comp$ ?v0py316) ?v1py271)) (comp$o (map_tree$b ?v0py316) (map_tree$b ?v1py271))) :pattern ((fun_app$q (fun_app$r comp$ ?v0py316) ?v1py271)) :pattern ((comp$o (map_tree$b ?v0py316) (map_tree$b ?v1py271))) )) :named A330))
(assert (! (forall ((?v0py317 Bool_a_bool_fun_fun$)(?v1py272 A_bool_fun$)) (! (= (map_tree$d (fun_app$ai (fun_app$bv comp$j ?v0py317) ?v1py272)) (comp$p (map_tree$e ?v0py317) (map_tree$ ?v1py272))) :pattern ((fun_app$ai (fun_app$bv comp$j ?v0py317) ?v1py272)) :pattern ((comp$p (map_tree$e ?v0py317) (map_tree$ ?v1py272))) )) :named A331))
(assert (! (forall ((?v0py318 A_bool_fun_bool_fun$)(?v1py273 A_a_bool_fun_fun$)) (! (= (map_tree$ (fun_app$g (fun_app$bw comp$g ?v0py318) ?v1py273)) (comp$q (map_tree$f ?v0py318) (map_tree$d ?v1py273))) :pattern ((fun_app$g (fun_app$bw comp$g ?v0py318) ?v1py273)) :pattern ((comp$q (map_tree$f ?v0py318) (map_tree$d ?v1py273))) )) :named A332))
(assert (! (forall ((?v0py319 A_bool_fun_bool_fun$)(?v1py274 Bool_a_bool_fun_fun$)) (! (= (map_tree$b (fun_app$bx (comp$r ?v0py319) ?v1py274)) (comp$s (map_tree$f ?v0py319) (map_tree$e ?v1py274))) :pattern ((fun_app$bx (comp$r ?v0py319) ?v1py274)) :pattern ((comp$s (map_tree$f ?v0py319) (map_tree$e ?v1py274))) )) :named A333))
(assert (! (forall ((?v0py320 Bool_a_bool_fun_fun$)(?v1py275 Bool_bool_fun$)) (! (= (map_tree$e (fun_app$by (comp$t ?v0py320) ?v1py275)) (comp$u (map_tree$e ?v0py320) (map_tree$b ?v1py275))) :pattern ((fun_app$by (comp$t ?v0py320) ?v1py275)) :pattern ((comp$u (map_tree$e ?v0py320) (map_tree$b ?v1py275))) )) :named A334))
(assert (! (forall ((?v0py321 A_bool_fun$)(?v1py276 A_bool_fun_a_fun$)) (! (= (map_tree$f (fun_app$y (comp$v ?v0py321) ?v1py276)) (comp$w (map_tree$ ?v0py321) (map_tree$k ?v1py276))) :pattern ((fun_app$y (comp$v ?v0py321) ?v1py276)) :pattern ((comp$w (map_tree$ ?v0py321) (map_tree$k ?v1py276))) )) :named A335))
(assert (! (forall ((?v0py322 Bool_bool_fun$)(?v1py277 A_bool_fun_bool_fun$)) (! (= (map_tree$f (fun_app$bz (comp$x ?v0py322) ?v1py277)) (comp$y (map_tree$b ?v0py322) (map_tree$f ?v1py277))) :pattern ((fun_app$bz (comp$x ?v0py322) ?v1py277)) :pattern ((comp$y (map_tree$b ?v0py322) (map_tree$f ?v1py277))) )) :named A336))
(assert (! (forall ((?v0py323 A_bool_fun$)(?v1py278 A_a_fun$)(?v2py155 A_bool_fun$)(?v3py70 A$)) (! (or (not (= (fun_app$c (fun_app$bo comp$c ?v0py323) ?v1py278) (fun_app$z (fun_app$bp comp$b id$a) ?v2py155))) (and (or (not (fun_app$f ?v0py323 (fun_app$n ?v1py278 ?v3py70))) (fun_app$f ?v2py155 ?v3py70)) (or (fun_app$f ?v0py323 (fun_app$n ?v1py278 ?v3py70)) (not (fun_app$f ?v2py155 ?v3py70))))) :pattern ((fun_app$f ?v0py323 (fun_app$n ?v1py278 ?v3py70)) (fun_app$f ?v2py155 ?v3py70)) )) :named A337))
(assert (! (forall ((?v0py324 Bool_bool_fun$)(?v1py279 A_bool_fun$)(?v2py156 A_bool_fun$)(?v3py71 A$)) (! (or (not (= (fun_app$z (fun_app$bp comp$b ?v0py324) ?v1py279) (fun_app$z (fun_app$bp comp$b id$a) ?v2py156))) (and (or (not (fun_app$ae ?v0py324 (fun_app$f ?v1py279 ?v3py71))) (fun_app$f ?v2py156 ?v3py71)) (or (fun_app$ae ?v0py324 (fun_app$f ?v1py279 ?v3py71)) (not (fun_app$f ?v2py156 ?v3py71))))) :pattern ((fun_app$ae ?v0py324 (fun_app$f ?v1py279 ?v3py71)) (fun_app$f ?v2py156 ?v3py71)) )) :named A338))
(assert (! (forall ((?v0py325 Bool_bool_fun$)(?v1py280 Bool_bool_fun$)(?v2py157 Bool_bool_fun$)(?v3py72 Bool)) (! (or (not (= (fun_app$q (fun_app$r comp$ ?v0py325) ?v1py280) (fun_app$q (fun_app$r comp$ id$a) ?v2py157))) (and (or (not (fun_app$ae ?v0py325 (fun_app$ae ?v1py280 ?v3py72))) (fun_app$ae ?v2py157 ?v3py72)) (or (fun_app$ae ?v0py325 (fun_app$ae ?v1py280 ?v3py72)) (not (fun_app$ae ?v2py157 ?v3py72))))) :pattern ((fun_app$ae ?v0py325 (fun_app$ae ?v1py280 ?v3py72)) (fun_app$ae ?v2py157 ?v3py72)) )) :named A339))
(assert (! (forall ((?v0py326 A_bool_fun_a_bool_fun_fun$)(?v1py281 A_bool_fun_a_bool_fun_fun$)(?v2py158 A_bool_fun_a_bool_fun_fun$)(?v3py73 A_bool_fun$)) (! (or (not (= (fun_app$s (comp$a ?v0py326) ?v1py281) (fun_app$s (comp$a id$e) ?v2py158))) (= (fun_app$z ?v0py326 (fun_app$z ?v1py281 ?v3py73)) (fun_app$z ?v2py158 ?v3py73))) :pattern ((fun_app$z ?v0py326 (fun_app$z ?v1py281 ?v3py73)) (fun_app$z ?v2py158 ?v3py73)) )) :named A340))
(assert (! (forall ((?v0py327 A_bool_fun$)(?v1py282 A_a_fun$)(?v2py159 Bool_bool_fun$)(?v3py74 A_a_fun$)(?v4py25 Bool_bool_fun$)(?v5py13 A$)) (! (or (= (fun_app$aw (map_tree$ ?v0py327) (tree_recurse$ ?v1py282 ?v3py74 ?v5py13)) (tree_recurse$a ?v2py159 ?v4py25 (fun_app$f ?v0py327 ?v5py13))) (not (= (fun_app$c (fun_app$bo comp$c ?v0py327) ?v1py282) (fun_app$z (fun_app$bp comp$b ?v2py159) ?v0py327))) (not (= (fun_app$c (fun_app$bo comp$c ?v0py327) ?v3py74) (fun_app$z (fun_app$bp comp$b ?v4py25) ?v0py327)))) :pattern ((tree_recurse$a ?v2py159 ?v4py25 (fun_app$f ?v0py327 ?v5py13)) (fun_app$aw (map_tree$ ?v0py327) (tree_recurse$ ?v1py282 ?v3py74 ?v5py13))) )) :named A341))
(assert (! (forall ((?v0py328 Bool_bool_fun$)(?v1py283 Bool_bool_fun$)(?v2py160 Bool_bool_fun$)(?v3py75 Bool_bool_fun$)(?v4py26 Bool_bool_fun$)(?v5py14 Bool)) (! (or (= (fun_app$ay (map_tree$b ?v0py328) (tree_recurse$a ?v1py283 ?v3py75 ?v5py14)) (tree_recurse$a ?v2py160 ?v4py26 (fun_app$ae ?v0py328 ?v5py14))) (not (= (fun_app$q (fun_app$r comp$ ?v0py328) ?v1py283) (fun_app$q (fun_app$r comp$ ?v2py160) ?v0py328))) (not (= (fun_app$q (fun_app$r comp$ ?v0py328) ?v3py75) (fun_app$q (fun_app$r comp$ ?v4py26) ?v0py328)))) :pattern ((tree_recurse$a ?v2py160 ?v4py26 (fun_app$ae ?v0py328 ?v5py14)) (fun_app$ay (map_tree$b ?v0py328) (tree_recurse$a ?v1py283 ?v3py75 ?v5py14))) )) :named A342))
(assert (! (forall ((?v0py329 Bool_a_bool_fun_fun$)(?v1py284 Bool_bool_fun$)(?v2py161 A_bool_fun_a_bool_fun_fun$)(?v3py76 Bool_bool_fun$)(?v4py27 A_bool_fun_a_bool_fun_fun$)(?v5py15 Bool)) (! (or (= (fun_app$ba (map_tree$e ?v0py329) (tree_recurse$a ?v1py284 ?v3py76 ?v5py15)) (tree_recurse$b ?v2py161 ?v4py27 (fun_app$aj ?v0py329 ?v5py15))) (not (= (fun_app$by (comp$t ?v0py329) ?v1py284) (fun_app$ca (comp$z ?v2py161) ?v0py329))) (not (= (fun_app$by (comp$t ?v0py329) ?v3py76) (fun_app$ca (comp$z ?v4py27) ?v0py329)))) :pattern ((tree_recurse$b ?v2py161 ?v4py27 (fun_app$aj ?v0py329 ?v5py15)) (fun_app$ba (map_tree$e ?v0py329) (tree_recurse$a ?v1py284 ?v3py76 ?v5py15))) )) :named A343))
(assert (! (forall ((?v0py330 A_bool_fun_bool_fun$)(?v1py285 A_bool_fun_a_bool_fun_fun$)(?v2py162 Bool_bool_fun$)(?v3py77 A_bool_fun_a_bool_fun_fun$)(?v4py28 Bool_bool_fun$)(?v5py16 A_bool_fun$)) (! (or (= (fun_app$bb (map_tree$f ?v0py330) (tree_recurse$b ?v1py285 ?v3py77 ?v5py16)) (tree_recurse$a ?v2py162 ?v4py28 (fun_app$v ?v0py330 ?v5py16))) (not (= (fun_app$cb (comp$aa ?v0py330) ?v1py285) (fun_app$bz (comp$x ?v2py162) ?v0py330))) (not (= (fun_app$cb (comp$aa ?v0py330) ?v3py77) (fun_app$bz (comp$x ?v4py28) ?v0py330)))) :pattern ((tree_recurse$a ?v2py162 ?v4py28 (fun_app$v ?v0py330 ?v5py16)) (fun_app$bb (map_tree$f ?v0py330) (tree_recurse$b ?v1py285 ?v3py77 ?v5py16))) )) :named A344))
(assert (! (forall ((?v0py331 A_bool_fun_a_bool_fun_fun$)(?v1py286 A_bool_fun_a_bool_fun_fun$)(?v2py163 A_bool_fun_a_bool_fun_fun$)(?v3py78 A_bool_fun_a_bool_fun_fun$)(?v4py29 A_bool_fun_a_bool_fun_fun$)(?v5py17 A_bool_fun$)) (! (or (= (fun_app$bc (map_tree$h ?v0py331) (tree_recurse$b ?v1py286 ?v3py78 ?v5py17)) (tree_recurse$b ?v2py163 ?v4py29 (fun_app$z ?v0py331 ?v5py17))) (not (= (fun_app$s (comp$a ?v0py331) ?v1py286) (fun_app$s (comp$a ?v2py163) ?v0py331))) (not (= (fun_app$s (comp$a ?v0py331) ?v3py78) (fun_app$s (comp$a ?v4py29) ?v0py331)))) :pattern ((tree_recurse$b ?v2py163 ?v4py29 (fun_app$z ?v0py331 ?v5py17)) (fun_app$bc (map_tree$h ?v0py331) (tree_recurse$b ?v1py286 ?v3py78 ?v5py17))) )) :named A345))
(assert (! (forall ((?v0py332 A_a_bool_fun_fun_a_a_bool_fun_fun_a_a_bool_fun_fun_fun_fun_tree$)(?v1py287 A_a_bool_fun_fun_tree$)) (! (= (ap_tree$k (ap_tree$bd ?v0py332 ?v1py287) ?v1py287) (ap_tree$k (ap_tree$bx (pure_tree$ak uup$) ?v0py332) ?v1py287)) :pattern ((ap_tree$bd ?v0py332 ?v1py287)) :pattern ((ap_tree$k (ap_tree$bx (pure_tree$ak uup$) ?v0py332) ?v1py287)) )) :named A346))
(assert (! (forall ((?v0py333 A_a_fun_a_a_fun_a_bool_fun_fun_fun_tree$)(?v1py288 A_a_fun_tree$)) (! (= (ap_tree$j (ap_tree$by ?v0py333 ?v1py288) ?v1py288) (ap_tree$j (ap_tree$bz (pure_tree$al uuq$) ?v0py333) ?v1py288)) :pattern ((ap_tree$by ?v0py333 ?v1py288)) :pattern ((ap_tree$j (ap_tree$bz (pure_tree$al uuq$) ?v0py333) ?v1py288)) )) :named A347))
(assert (! (forall ((?v0py334 A_a_bool_bool_fun_fun_fun_tree$)(?v1py289 A_tree$)) (! (= (ap_tree$h (ap_tree$t ?v0py334 ?v1py289) ?v1py289) (ap_tree$h (ap_tree$ca (pure_tree$am uur$) ?v0py334) ?v1py289)) :pattern ((ap_tree$t ?v0py334 ?v1py289)) :pattern ((ap_tree$h (ap_tree$ca (pure_tree$am uur$) ?v0py334) ?v1py289)) )) :named A348))
(assert (! (forall ((?v0py335 A_a_a_bool_fun_fun_fun_tree$)(?v1py290 A_tree$)) (! (= (ap_tree$i (ap_tree$v ?v0py335 ?v1py290) ?v1py290) (ap_tree$i (ap_tree$cb (pure_tree$an uus$) ?v0py335) ?v1py290)) :pattern ((ap_tree$v ?v0py335 ?v1py290)) :pattern ((ap_tree$i (ap_tree$cb (pure_tree$an uus$) ?v0py335) ?v1py290)) )) :named A349))
(assert (! (forall ((?v0py336 A_a_a_fun_fun_tree$)(?v1py291 A_tree$)) (! (= (ap_tree$f (ap_tree$n ?v0py336 ?v1py291) ?v1py291) (ap_tree$f (ap_tree$cc (pure_tree$ao uut$) ?v0py336) ?v1py291)) :pattern ((ap_tree$n ?v0py336 ?v1py291)) :pattern ((ap_tree$f (ap_tree$cc (pure_tree$ao uut$) ?v0py336) ?v1py291)) )) :named A350))
(assert (! (forall ((?v0py337 A_a_bool_fun_fun_tree$)(?v1py292 A_tree$)) (! (= (ap_tree$ (ap_tree$i ?v0py337 ?v1py292) ?v1py292) (ap_tree$ (ap_tree$ap (pure_tree$l uuu$) ?v0py337) ?v1py292)) :pattern ((ap_tree$i ?v0py337 ?v1py292)) :pattern ((ap_tree$ (ap_tree$ap (pure_tree$l uuu$) ?v0py337) ?v1py292)) )) :named A351))
(assert (! (forall ((?v0py338 A_bool_fun$)(?v1py293 A_a_fun$)(?v2py164 A_tree$)) (! (= (fun_app$aw (map_tree$ ?v0py338) (fun_app$ax (map_tree$a ?v1py293) ?v2py164)) (fun_app$aw (map_tree$ (fun_app$c (fun_app$bo comp$c ?v0py338) ?v1py293)) ?v2py164)) :pattern ((fun_app$aw (map_tree$ ?v0py338) (fun_app$ax (map_tree$a ?v1py293) ?v2py164))) :pattern ((fun_app$aw (map_tree$ (fun_app$c (fun_app$bo comp$c ?v0py338) ?v1py293)) ?v2py164)) )) :named A352))
(assert (! (forall ((?v0py339 A_bool_fun$)(?v1py294 Bool_a_fun$)(?v2py165 Bool_tree$)) (! (= (fun_app$aw (map_tree$ ?v0py339) (fun_app$bd (map_tree$j ?v1py294) ?v2py165)) (fun_app$ay (map_tree$b (fun_app$bq (comp$k ?v0py339) ?v1py294)) ?v2py165)) :pattern ((fun_app$aw (map_tree$ ?v0py339) (fun_app$bd (map_tree$j ?v1py294) ?v2py165))) :pattern ((fun_app$ay (map_tree$b (fun_app$bq (comp$k ?v0py339) ?v1py294)) ?v2py165)) )) :named A353))
(assert (! (forall ((?v0py340 Bool_bool_fun$)(?v1py295 A_bool_fun$)(?v2py166 A_tree$)) (! (= (fun_app$ay (map_tree$b ?v0py340) (fun_app$aw (map_tree$ ?v1py295) ?v2py166)) (fun_app$aw (map_tree$ (fun_app$z (fun_app$bp comp$b ?v0py340) ?v1py295)) ?v2py166)) :pattern ((fun_app$ay (map_tree$b ?v0py340) (fun_app$aw (map_tree$ ?v1py295) ?v2py166))) :pattern ((fun_app$aw (map_tree$ (fun_app$z (fun_app$bp comp$b ?v0py340) ?v1py295)) ?v2py166)) )) :named A354))
(assert (! (forall ((?v0py341 Bool_bool_fun$)(?v1py296 Bool_bool_fun$)(?v2py167 Bool_tree$)) (! (= (fun_app$ay (map_tree$b ?v0py341) (fun_app$ay (map_tree$b ?v1py296) ?v2py167)) (fun_app$ay (map_tree$b (fun_app$q (fun_app$r comp$ ?v0py341) ?v1py296)) ?v2py167)) :pattern ((fun_app$ay (map_tree$b ?v0py341) (fun_app$ay (map_tree$b ?v1py296) ?v2py167))) :pattern ((fun_app$ay (map_tree$b (fun_app$q (fun_app$r comp$ ?v0py341) ?v1py296)) ?v2py167)) )) :named A355))
(assert (! (forall ((?v0py342 A_bool_fun$)(?v1py297 A_bool_fun_a_fun$)(?v2py168 A_bool_fun_tree$)) (! (= (fun_app$aw (map_tree$ ?v0py342) (fun_app$be (map_tree$k ?v1py297) ?v2py168)) (fun_app$bb (map_tree$f (fun_app$y (comp$v ?v0py342) ?v1py297)) ?v2py168)) :pattern ((fun_app$aw (map_tree$ ?v0py342) (fun_app$be (map_tree$k ?v1py297) ?v2py168))) :pattern ((fun_app$bb (map_tree$f (fun_app$y (comp$v ?v0py342) ?v1py297)) ?v2py168)) )) :named A356))
(assert (! (forall ((?v0py343 Bool_bool_fun$)(?v1py298 A_bool_fun_bool_fun$)(?v2py169 A_bool_fun_tree$)) (! (= (fun_app$ay (map_tree$b ?v0py343) (fun_app$bb (map_tree$f ?v1py298) ?v2py169)) (fun_app$bb (map_tree$f (fun_app$bz (comp$x ?v0py343) ?v1py298)) ?v2py169)) :pattern ((fun_app$ay (map_tree$b ?v0py343) (fun_app$bb (map_tree$f ?v1py298) ?v2py169))) :pattern ((fun_app$bb (map_tree$f (fun_app$bz (comp$x ?v0py343) ?v1py298)) ?v2py169)) )) :named A357))
(assert (! (forall ((?v0py344 Bool_a_bool_fun_fun$)(?v1py299 A_bool_fun$)(?v2py170 A_tree$)) (! (= (fun_app$ba (map_tree$e ?v0py344) (fun_app$aw (map_tree$ ?v1py299) ?v2py170)) (fun_app$az (map_tree$d (fun_app$ai (fun_app$bv comp$j ?v0py344) ?v1py299)) ?v2py170)) :pattern ((fun_app$ba (map_tree$e ?v0py344) (fun_app$aw (map_tree$ ?v1py299) ?v2py170))) :pattern ((fun_app$az (map_tree$d (fun_app$ai (fun_app$bv comp$j ?v0py344) ?v1py299)) ?v2py170)) )) :named A358))
(assert (! (forall ((?v0py345 Bool_a_bool_fun_fun$)(?v1py300 Bool_bool_fun$)(?v2py171 Bool_tree$)) (! (= (fun_app$ba (map_tree$e ?v0py345) (fun_app$ay (map_tree$b ?v1py300) ?v2py171)) (fun_app$ba (map_tree$e (fun_app$by (comp$t ?v0py345) ?v1py300)) ?v2py171)) :pattern ((fun_app$ba (map_tree$e ?v0py345) (fun_app$ay (map_tree$b ?v1py300) ?v2py171))) :pattern ((fun_app$ba (map_tree$e (fun_app$by (comp$t ?v0py345) ?v1py300)) ?v2py171)) )) :named A359))
(assert (! (forall ((?v0py346 A_bool_fun_bool_fun$)(?v1py301 A_a_bool_fun_fun$)(?v2py172 A_tree$)) (! (= (fun_app$bb (map_tree$f ?v0py346) (fun_app$az (map_tree$d ?v1py301) ?v2py172)) (fun_app$aw (map_tree$ (fun_app$g (fun_app$bw comp$g ?v0py346) ?v1py301)) ?v2py172)) :pattern ((fun_app$bb (map_tree$f ?v0py346) (fun_app$az (map_tree$d ?v1py301) ?v2py172))) :pattern ((fun_app$aw (map_tree$ (fun_app$g (fun_app$bw comp$g ?v0py346) ?v1py301)) ?v2py172)) )) :named A360))
(assert (! (forall ((?v0py347 A_bool_fun_bool_fun$)(?v1py302 Bool_a_bool_fun_fun$)(?v2py173 Bool_tree$)) (! (= (fun_app$bb (map_tree$f ?v0py347) (fun_app$ba (map_tree$e ?v1py302) ?v2py173)) (fun_app$ay (map_tree$b (fun_app$bx (comp$r ?v0py347) ?v1py302)) ?v2py173)) :pattern ((fun_app$bb (map_tree$f ?v0py347) (fun_app$ba (map_tree$e ?v1py302) ?v2py173))) :pattern ((fun_app$ay (map_tree$b (fun_app$bx (comp$r ?v0py347) ?v1py302)) ?v2py173)) )) :named A361))
(assert (! (forall ((?v0py348 A_bool_fun$)) (! (= (pure_tree$f (uuv$ ?v0py348)) (ap_tree$cd k_tree$f (pure_tree$ ?v0py348))) :pattern ((uuv$ ?v0py348)) :pattern ((pure_tree$ ?v0py348)) )) :named A362))
(assert (! (forall ((?v0py349 A_bool_fun$)) (! (= (pure_tree$l (uuw$ ?v0py349)) (ap_tree$ce k_tree$g (pure_tree$ ?v0py349))) :pattern ((uuw$ ?v0py349)) :pattern ((pure_tree$ ?v0py349)) )) :named A363))
(assert (! (forall ((?v0py350 Bool_bool_fun$)) (! (= (pure_tree$j (uux$ ?v0py350)) (ap_tree$bf k_tree$b (pure_tree$b ?v0py350))) :pattern ((uux$ ?v0py350)) :pattern ((pure_tree$b ?v0py350)) )) :named A364))
(assert (! (forall ((?v0py351 A_bool_fun$)) (! (= (pure_tree$k (uuy$ ?v0py351)) (ap_tree$ay k_tree$c (pure_tree$ ?v0py351))) :pattern ((uuy$ ?v0py351)) :pattern ((pure_tree$ ?v0py351)) )) :named A365))
(assert (! (forall ((?v0py352 Bool)) (! (= (pure_tree$ (fun_app$aj uun$ ?v0py352)) (ap_tree$c k_tree$e (pure_tree$a ?v0py352))) :pattern ((fun_app$aj uun$ ?v0py352)) :pattern ((pure_tree$a ?v0py352)) )) :named A366))
(assert (! (= i_tree$a (ap_tree$cf (ap_tree$cg s_tree$n k_tree$h) k_tree$e)) :named A367))
(assert (! (forall ((?v0py353 A_bool_fun$)(?v1py303 A_a_fun_tree$)) (! (= (ap_tree$j (pure_tree$m (uuz$ ?v0py353)) ?v1py303) (pure_tree$ ?v0py353)) :pattern ((ap_tree$j (pure_tree$m (uuz$ ?v0py353)) ?v1py303)) )) :named A368))
(assert (! (forall ((?v0py354 A_a_bool_fun_fun$)(?v1py304 A_a_bool_fun_fun_tree$)) (! (= (ap_tree$k (pure_tree$p (uva$ ?v0py354)) ?v1py304) (pure_tree$k ?v0py354)) :pattern ((ap_tree$k (pure_tree$p (uva$ ?v0py354)) ?v1py304)) )) :named A369))
(assert (! (forall ((?v0py355 A$)(?v1py305 A_tree$)) (! (= (ap_tree$f (pure_tree$h (uvb$ ?v0py355)) ?v1py305) (pure_tree$c ?v0py355)) :pattern ((ap_tree$f (pure_tree$h (uvb$ ?v0py355)) ?v1py305)) )) :named A370))
(assert (! (forall ((?v0py356 A_bool_fun$)(?v1py306 A_bool_fun_tree$)) (! (= (ap_tree$d (pure_tree$f (uuv$ ?v0py356)) ?v1py306) (pure_tree$ ?v0py356)) :pattern ((ap_tree$d (pure_tree$f (uuv$ ?v0py356)) ?v1py306)) )) :named A371))
(assert (! (forall ((?v0py357 A_bool_fun$)(?v1py307 A_a_bool_fun_fun_tree$)) (! (= (ap_tree$ap (pure_tree$l (uuw$ ?v0py357)) ?v1py307) (pure_tree$ ?v0py357)) :pattern ((ap_tree$ap (pure_tree$l (uuw$ ?v0py357)) ?v1py307)) )) :named A372))
(assert (! (forall ((?v0py358 Bool_bool_fun$)(?v1py308 A_tree$)) (! (= (ap_tree$h (pure_tree$j (uux$ ?v0py358)) ?v1py308) (pure_tree$b ?v0py358)) :pattern ((ap_tree$h (pure_tree$j (uux$ ?v0py358)) ?v1py308)) )) :named A373))
(assert (! (forall ((?v0py359 A_bool_fun$)(?v1py309 A_tree$)) (! (= (ap_tree$i (pure_tree$k (uuy$ ?v0py359)) ?v1py309) (pure_tree$ ?v0py359)) :pattern ((ap_tree$i (pure_tree$k (uuy$ ?v0py359)) ?v1py309)) )) :named A374))
(assert (! (forall ((?v0py360 Bool)(?v1py310 A_tree$)) (! (= (ap_tree$ (pure_tree$ (fun_app$aj uun$ ?v0py360)) ?v1py310) (pure_tree$a ?v0py360)) :pattern ((ap_tree$ (pure_tree$ (fun_app$aj uun$ ?v0py360)) ?v1py310)) )) :named A375))
(assert (! (forall ((?v0py361 A_a_fun_a_bool_fun_fun_tree$)(?v1py311 A_a_fun$)) (! (= (ap_tree$j ?v0py361 (pure_tree$h ?v1py311)) (ap_tree$ch (pure_tree$ap (uvc$ ?v1py311)) ?v0py361)) :pattern ((ap_tree$j ?v0py361 (pure_tree$h ?v1py311))) :pattern ((ap_tree$ch (pure_tree$ap (uvc$ ?v1py311)) ?v0py361)) )) :named A376))
(assert (! (forall ((?v0py362 A_a_bool_fun_fun_a_a_bool_fun_fun_fun_tree$)(?v1py312 A_a_bool_fun_fun$)) (! (= (ap_tree$k ?v0py362 (pure_tree$k ?v1py312)) (ap_tree$ci (pure_tree$aq (uvd$ ?v1py312)) ?v0py362)) :pattern ((ap_tree$k ?v0py362 (pure_tree$k ?v1py312))) :pattern ((ap_tree$ci (pure_tree$aq (uvd$ ?v1py312)) ?v0py362)) )) :named A377))
(assert (! (forall ((?v0py363 A_bool_bool_fun_fun_tree$)(?v1py313 A$)) (! (= (ap_tree$h ?v0py363 (pure_tree$c ?v1py313)) (ap_tree$cj (pure_tree$ar (uve$ ?v1py313)) ?v0py363)) :pattern ((ap_tree$h ?v0py363 (pure_tree$c ?v1py313))) :pattern ((ap_tree$cj (pure_tree$ar (uve$ ?v1py313)) ?v0py363)) )) :named A378))
(assert (! (forall ((?v0py364 A_a_fun_tree$)(?v1py314 A$)) (! (= (ap_tree$f ?v0py364 (pure_tree$c ?v1py314)) (ap_tree$ak (pure_tree$as (uvf$ ?v1py314)) ?v0py364)) :pattern ((ap_tree$f ?v0py364 (pure_tree$c ?v1py314))) :pattern ((ap_tree$ak (pure_tree$as (uvf$ ?v1py314)) ?v0py364)) )) :named A379))
(assert (! (forall ((?v0py365 A_a_bool_fun_fun_tree$)(?v1py315 A$)) (! (= (ap_tree$i ?v0py365 (pure_tree$c ?v1py315)) (ap_tree$ap (pure_tree$l (uvg$ ?v1py315)) ?v0py365)) :pattern ((ap_tree$i ?v0py365 (pure_tree$c ?v1py315))) :pattern ((ap_tree$ap (pure_tree$l (uvg$ ?v1py315)) ?v0py365)) )) :named A380))
(assert (! (forall ((?v0py366 A_bool_fun_tree$)(?v1py316 A$)) (! (= (ap_tree$ ?v0py366 (pure_tree$c ?v1py316)) (ap_tree$b (pure_tree$d (uvh$ ?v1py316)) ?v0py366)) :pattern ((ap_tree$ ?v0py366 (pure_tree$c ?v1py316))) :pattern ((ap_tree$b (pure_tree$d (uvh$ ?v1py316)) ?v0py366)) )) :named A381))
(assert (! (forall ((?v0py367 A_bool_fun_a_bool_fun_fun$)(?v1py317 A_bool_fun_a_bool_fun_fun$)(?v2py174 A_bool_fun$)) (! (= (tree_recurse$b ?v0py367 ?v1py317 ?v2py174) (ap_tree$d (unfold_tree$ id$b (uvi$ ?v0py367) (uvi$ ?v1py317) id$e) (pure_tree$ ?v2py174))) :pattern ((tree_recurse$b ?v0py367 ?v1py317 ?v2py174)) :pattern ((ap_tree$d (unfold_tree$ id$b (uvi$ ?v0py367) (uvi$ ?v1py317) id$e) (pure_tree$ ?v2py174))) )) :named A382))
(assert (! (forall ((?v0py368 Bool_bool_fun$)(?v1py318 Bool_bool_fun$)(?v2py175 Bool)) (! (= (tree_recurse$a ?v0py368 ?v1py318 ?v2py175) (ap_tree$a (unfold_tree$a id$ (uvj$ ?v0py368) (uvj$ ?v1py318) id$a) (pure_tree$a ?v2py175))) :pattern ((tree_recurse$a ?v0py368 ?v1py318 ?v2py175)) :pattern ((ap_tree$a (unfold_tree$a id$ (uvj$ ?v0py368) (uvj$ ?v1py318) id$a) (pure_tree$a ?v2py175))) )) :named A383))
(check-sat)
(get-info :reason-unknown)
;z3 -T:600 group_026/ematching/tmp/x2015_09_10_16_52_43_811_1130425.smt_in_std_unique_aug-gt_unsat-full.smt2
;unknown
;((:reason-unknown "smt tactic failed to show goal to be sat/unsat (incomplete quantifiers)"))
