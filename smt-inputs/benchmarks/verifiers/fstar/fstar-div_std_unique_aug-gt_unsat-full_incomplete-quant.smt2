(set-option :smt.auto-config false)
(set-option :smt.mbqi false)
(set-option :sat.random_seed 488)
(set-option :smt.random_seed 599)
(set-option :nlsat.seed 611)
(set-option :memory_max_size 6000)
(declare-sort FString 0)
(declare-sort RegExStr 0)
(declare-sort RMode 0)
(declare-sort Term 0)
(declare-sort Fuel 0)
(declare-fun mod (Int Int) Int)
(declare-fun SFuel (Fuel) Fuel)
(declare-fun ZFuel () Fuel)
(declare-fun _mul (Int Int) Int)
(declare-fun _div (Int Int) Int)
(declare-fun _mod (Int Int) Int)
(declare-fun label_15 () Bool)
(declare-fun label_14 () Bool)
(declare-fun label_13 () Bool)
(declare-fun FString_constr_id (FString) Int)
(declare-fun Term_constr_id (Term) Int)
(declare-fun MaxIFuel () Fuel)
(declare-fun MaxFuel () Fuel)
(declare-fun PreType (Term) Term)
(declare-fun Valid (Term) Bool)
(declare-fun HasTypeFuel (Fuel Term Term) Bool)
(declare-fun NoHoist (Term Bool) Bool)
(declare-fun ApplyTF (Term Fuel) Term)
(declare-fun ApplyTT (Term Term) Term)
(declare-fun Rank (Term) Int)
(declare-fun Prims.precedes (Term Term Term Term) Term)
(declare-fun Range_const (Int) Term)
(declare-fun __uu__PartialApp () Term)
(declare-fun FString_const (Int) FString)
(declare-fun FString_const_proj_0 (FString) Int)
(declare-fun Tm_type () Term)
(declare-fun Tm_arrow (Int) Term)
(declare-fun Tm_arrow_id (Term) Int)
(declare-fun Tm_unit () Term)
(declare-fun BoxInt (Int) Term)
(declare-fun BoxInt_proj_0 (Term) Int)
(declare-fun BoxBool (Bool) Term)
(declare-fun BoxBool_proj_0 (Term) Bool)
(declare-fun BoxString (FString) Term)
(declare-fun BoxString_proj_0 (Term) FString)
(declare-fun LexCons (Term Term Term) Term)
(declare-fun LexCons_0 (Term) Term)
(declare-fun LexCons_1 (Term) Term)
(declare-fun LexCons_2 (Term) Term)
(declare-fun Prims.lex_t () Term)
(declare-fun Prims.attribute () Term)
(declare-fun Prims.cps () Term)
(declare-fun Prims.hasEq (Term) Term)
(declare-fun Tm_arrow_257be5ee7da9f477702a7d2ee9bef0c9 () Term)
(declare-fun Prims.hasEq@tok () Term)
(declare-fun Prims.eqtype () Term)
(declare-fun Prims_Tm_refine_414d0a9f578ab0048252f8c8f552b99f () Term)
(declare-fun Prims.bool () Term)
(declare-fun Prims.c_False () Term)
(declare-fun Prims.c_True () Term)
(declare-fun Prims.T () Term)
(declare-fun Prims.T@tok () Term)
(declare-fun Prims.uu___is_T (Term) Term)
(declare-fun Tm_arrow_070c89d0419ca0b80e0da94940c40fa3 (Term) Term)
(declare-fun Prims.uu___is_T@tok () Term)
(declare-fun Prims.unit () Term)
(declare-fun Prims.squash (Term) Term)
(declare-fun Prims.squash@tok () Term)
(declare-fun Prims_Tm_refine_8d65e998a07dd53ec478e27017d9dba5 (Term Term) Term)
(declare-fun Prims.auto_squash (Term) Term)
(declare-fun Prims.auto_squash@tok () Term)
(declare-fun Prims.logical () Term)
(declare-fun Prims.l_True () Term)
(declare-fun Prims.l_False () Term)
(declare-fun Prims.equals (Term Term Term) Term)
(declare-fun Prims.equals@tok () Term)
(declare-fun Prims.Refl (Term Term) Term)
(declare-fun Prims.Refl_a (Term) Term)
(declare-fun Prims.Refl_x (Term) Term)
(declare-fun Tm_arrow_fb8e9788d8e1ad00d517d818391a5552 () Term)
(declare-fun Prims.Refl@tok () Term)
(declare-fun Prims.uu___is_Refl (Term Term Term Term) Term)
(declare-fun Tm_arrow_bc73fd7342ebe29d8df19539096373ef (Term) Term)
(declare-fun Prims.uu___is_Refl@tok () Term)
(declare-fun Prims.eq2 (Term Term Term) Term)
(declare-fun Tm_arrow_f33ea54607e6f443deeaa74ebd418449 (Term) Term)
(declare-fun Prims.eq2@tok () Term)
(declare-fun Prims.h_equals (Term Term Term Term) Term)
(declare-fun Prims.h_equals@tok () Term)
(declare-fun Prims.HRefl (Term Term) Term)
(declare-fun Prims.HRefl_a (Term) Term)
(declare-fun Prims.HRefl_x (Term) Term)
(declare-fun Tm_arrow_bdff7ac4f38fee2d6889d7b58ec10beb () Term)
(declare-fun Prims.HRefl@tok () Term)
(declare-fun Prims.uu___is_HRefl (Term Term Term Term Term) Term)
(declare-fun Tm_arrow_e55fd27cdca75961dfd00ca7901ce64a (Term) Term)
(declare-fun Prims.uu___is_HRefl@tok () Term)
(declare-fun Prims.eq3 (Term Term Term Term) Term)
(declare-fun Tm_arrow_537c5575a5fd1154f5e2f17311f50ca8 (Term) Term)
(declare-fun Prims.eq3@tok () Term)
(declare-fun Prims.b2t (Term) Term)
(declare-fun Prims.c_and (Term Term) Term)
(declare-fun Prims.c_and@tok () Term)
(declare-fun Prims.And (Term Term Term Term) Term)
(declare-fun Prims.And_p (Term) Term)
(declare-fun Prims.And_q (Term) Term)
(declare-fun Prims.And__0 (Term) Term)
(declare-fun Prims.And__1 (Term) Term)
(declare-fun Tm_arrow_c195f8405ecbc84a46f4e174b8827a84 () Term)
(declare-fun Prims.And@tok () Term)
(declare-fun Prims.uu___is_And (Term Term Term) Term)
(declare-fun Tm_arrow_a85c3802d57513fa8b84a44441b2fe6a (Term) Term)
(declare-fun Prims.uu___is_And@tok () Term)
(declare-fun Prims.__proj__And__item___0 (Term Term Term) Term)
(declare-fun Tm_arrow_301a720cbb1c5487adfd2a0b64c67b7e () Term)
(declare-fun Prims.__proj__And__item___0@tok () Term)
(declare-fun Prims.__proj__And__item___1 (Term Term Term) Term)
(declare-fun Tm_arrow_b6d5b453dd814b79a1d29a5f85b3161f () Term)
(declare-fun Prims.__proj__And__item___1@tok () Term)
(declare-fun Prims.l_and (Term Term) Term)
(declare-fun Tm_arrow_44faff5d8543c30ad9bf2eeaf1b3abcf (Term) Term)
(declare-fun Prims.l_and@tok () Term)
(declare-fun Prims.c_or (Term Term) Term)
(declare-fun Prims.c_or@tok () Term)
(declare-fun Prims.Left (Term Term Term) Term)
(declare-fun Prims.Left_p (Term) Term)
(declare-fun Prims.Left_q (Term) Term)
(declare-fun Prims.Left__0 (Term) Term)
(declare-fun Tm_arrow_b9e392cd340cf43078e3b599d9c5d1b3 () Term)
(declare-fun Prims.Left@tok () Term)
(declare-fun Prims.Right (Term Term Term) Term)
(declare-fun Prims.Right_p (Term) Term)
(declare-fun Prims.Right_q (Term) Term)
(declare-fun Prims.Right__0 (Term) Term)
(declare-fun Tm_arrow_ccf8afc309a68a850ac71365261b9fb7 () Term)
(declare-fun Prims.Right@tok () Term)
(declare-fun Prims.uu___is_Left (Term Term Term) Term)
(declare-fun Tm_arrow_581a99aa4b3c2c64b4b6501081582473 (Term) Term)
(declare-fun Prims.uu___is_Left@tok () Term)
(declare-fun Prims_Tm_refine_51387c0a7ef77e43ab89d4ae2b6b464d (Term Term) Term)
(declare-fun Prims.__proj__Left__item___0 (Term Term Term) Term)
(declare-fun Tm_arrow_7e78dbd6763d8fddb37f1e732bda927c () Term)
(declare-fun Prims.__proj__Left__item___0@tok () Term)
(declare-fun Prims.uu___is_Right (Term Term Term) Term)
(declare-fun Prims.uu___is_Right@tok () Term)
(declare-fun Prims_Tm_refine_95f078f2b9cfbd740f9afd162814a526 (Term Term) Term)
(declare-fun Prims.__proj__Right__item___0 (Term Term Term) Term)
(declare-fun Tm_arrow_c69c7e036a278fd3b0fe0b71a945feca () Term)
(declare-fun Prims.__proj__Right__item___0@tok () Term)
(declare-fun Prims.l_or (Term Term) Term)
(declare-fun Prims.l_or@tok () Term)
(declare-fun Prims.l_imp (Term Term) Term)
(declare-fun Prims.l_imp@tok () Term)
(declare-fun Tm_arrow_9cb3c953faf527c316d427b2ce8bd81b (Term Term) Term)
(declare-fun Prims.l_iff (Term Term) Term)
(declare-fun Prims.l_iff@tok () Term)
(declare-fun Prims.l_not (Term) Term)
(declare-fun Tm_arrow_f82c3fb9ac6610efb97620a59b378092 (Term) Term)
(declare-fun Prims.l_not@tok () Term)
(declare-fun Prims.has_type (Term Term Term) Term)
(declare-fun Tm_arrow_7c761265d6fe943628c96343fc66d1a0 () Term)
(declare-fun Prims.has_type@tok () Term)
(declare-fun Tm_arrow_e06752ba152f81447b312efcdf8f0e23 (Term) Term)
(declare-fun Prims.l_Forall (Term Term) Term)
(declare-fun Tm_arrow_79f007373109c2c6539212e679be2f2f (Term) Term)
(declare-fun Prims.l_Forall@tok () Term)
(declare-fun Tm_arrow_a26b6f0ab7c6505137c6de4ce0011041 (Term Term) Term)
(declare-fun Prims.prop () Term)
(declare-fun Prims_Tm_refine_8c9ebed3095a60bf2b256a37e40b13f4 () Term)
(declare-fun Prims.dtuple2 (Term Term) Term)
(declare-fun Prims.dtuple2@tok () Term)
(declare-fun Prims.Mkdtuple2 (Term Term Term Term) Term)
(declare-fun Prims.Mkdtuple2_a (Term) Term)
(declare-fun Prims.Mkdtuple2_b (Term) Term)
(declare-fun Prims.Mkdtuple2__1 (Term) Term)
(declare-fun Prims.Mkdtuple2__2 (Term) Term)
(declare-fun Tm_arrow_e23d661799b310305387f8ba2c10acb1 () Term)
(declare-fun Prims.Mkdtuple2@tok () Term)
(declare-fun Prims.uu___is_Mkdtuple2 (Term Term Term) Term)
(declare-fun Tm_arrow_21a7a3166e0683e2dfa5d2815e88da4a (Term) Term)
(declare-fun Prims.uu___is_Mkdtuple2@tok () Term)
(declare-fun Prims.__proj__Mkdtuple2__item___1 (Term Term Term) Term)
(declare-fun Tm_arrow_ec4aa512bc54da67a0356075af124e44 () Term)
(declare-fun Prims.__proj__Mkdtuple2__item___1@tok () Term)
(declare-fun Prims.__proj__Mkdtuple2__item___2 (Term Term Term) Term)
(declare-fun Tm_arrow_2e5fda2477c3f2ade2b68a9685bf6393 () Term)
(declare-fun Prims.__proj__Mkdtuple2__item___2@tok () Term)
(declare-fun Prims.l_Exists (Term Term) Term)
(declare-fun Prims.l_Exists@tok () Term)
(declare-fun Prims.range () Term)
(declare-fun Prims.string () Term)
(declare-fun Prims.pure_pre () Term)
(declare-fun Prims.pure_post_ (Term Term) Term)
(declare-fun Tm_arrow_30967c52768a603d18eb4835e5ba8f79 () Term)
(declare-fun Prims.pure_post_@tok () Term)
(declare-fun Tm_arrow_e9338c9e176627b4318e37ce7ca5332a (Term Term) Term)
(declare-fun Prims.pure_post (Term) Term)
(declare-fun Prims.pure_post@tok () Term)
(declare-fun Prims.pure_wp (Term) Term)
(declare-fun Prims.pure_wp@tok () Term)
(declare-fun Tm_arrow_efa04d9e9741fb25eada2b1d426efe29 (Term Term) Term)
(declare-fun Prims.guard_free (Term) Term)
(declare-fun Prims.guard_free@tok () Term)
(declare-fun Prims.int () Term)
(declare-fun Prims.range_0 () Term)
(declare-fun Prims.mk_range (Term Term Term Term Term) Term)
(declare-fun Tm_arrow_1a6b9de3491ece0b8961a8acbb38411b (Term Term Term) Term)
(declare-fun Prims.mk_range@tok () Term)
(declare-fun Prims.op_AmpAmp (Term Term) Term)
(declare-fun Prims.op_AmpAmp@tok () Term)
(declare-fun Prims.op_BarBar (Term Term) Term)
(declare-fun Prims.op_BarBar@tok () Term)
(declare-fun Prims.op_Negation (Term) Term)
(declare-fun Prims.op_Negation@tok () Term)
(declare-fun Prims.op_Multiply (Term Term) Term)
(declare-fun Prims.op_Multiply@tok () Term)
(declare-fun Prims.op_Subtraction (Term Term) Term)
(declare-fun Prims.op_Subtraction@tok () Term)
(declare-fun Prims.op_Addition (Term Term) Term)
(declare-fun Prims.op_Addition@tok () Term)
(declare-fun Prims.op_Minus (Term) Term)
(declare-fun Prims.op_Minus@tok () Term)
(declare-fun Prims.op_LessThanOrEqual (Term Term) Term)
(declare-fun Prims.op_LessThanOrEqual@tok () Term)
(declare-fun Prims.op_GreaterThan (Term Term) Term)
(declare-fun Prims.op_GreaterThan@tok () Term)
(declare-fun Prims.op_GreaterThanOrEqual (Term Term) Term)
(declare-fun Prims.op_GreaterThanOrEqual@tok () Term)
(declare-fun Prims.op_LessThan (Term Term) Term)
(declare-fun Prims.op_LessThan@tok () Term)
(declare-fun Prims.op_Equality (Term Term Term) Term)
(declare-fun Prims.op_Equality@tok () Term)
(declare-fun Prims.op_disEquality (Term Term Term) Term)
(declare-fun Prims.op_disEquality@tok () Term)
(declare-fun Prims.exn () Term)
(declare-fun Prims.array (Term) Term)
(declare-fun Prims.array@tok () Term)
(declare-fun Prims.strcat (Term Term) Term)
(declare-fun Prims.strcat@tok () Term)
(declare-fun Prims.list (Term) Term)
(declare-fun Prims.list@tok () Term)
(declare-fun Prims.Nil (Term) Term)
(declare-fun Prims.Nil_a (Term) Term)
(declare-fun Tm_arrow_9f8b5ab8f80ced9cdf6afea35d31efae () Term)
(declare-fun Prims.Nil@tok () Term)
(declare-fun Prims.Cons (Term Term Term) Term)
(declare-fun Prims.Cons_a (Term) Term)
(declare-fun Prims.Cons_hd (Term) Term)
(declare-fun Prims.Cons_tl (Term) Term)
(declare-fun Tm_arrow_e9f6c89da04213bf160cc257e258081c () Term)
(declare-fun Prims.Cons@tok () Term)
(declare-fun Prims.uu___is_Nil (Term Term) Term)
(declare-fun Tm_arrow_186fc0e29ebb27a200ef672a89551282 (Term) Term)
(declare-fun Prims.uu___is_Nil@tok () Term)
(declare-fun Prims.uu___is_Cons (Term Term) Term)
(declare-fun Prims.uu___is_Cons@tok () Term)
(declare-fun Prims_Tm_refine_7aac12c24449a22c34d98a0ea8ed4a32 (Term) Term)
(declare-fun Prims.__proj__Cons__item__hd (Term Term) Term)
(declare-fun Tm_arrow_3ca80ddba151a71b9c9aa6e8efea65cd () Term)
(declare-fun Prims.__proj__Cons__item__hd@tok () Term)
(declare-fun Prims.__proj__Cons__item__tl (Term Term) Term)
(declare-fun Tm_arrow_a704b31706c9f8227ffcec83d74a9b31 () Term)
(declare-fun Prims.__proj__Cons__item__tl@tok () Term)
(declare-fun Prims.pattern () Term)
(declare-fun Prims.smt_pat (Term Term) Term)
(declare-fun Tm_arrow_756e7b0ac20279dfcded24e5a99a27b8 (Term) Term)
(declare-fun Prims.smt_pat@tok () Term)
(declare-fun Prims.smt_pat_or (Term) Term)
(declare-fun Tm_arrow_7df6282d3b185c0f02eb10c3e19fe2e1 (Term) Term)
(declare-fun Prims.smt_pat_or@tok () Term)
(declare-fun Prims.decreases (Term Term) Term)
(declare-fun Tm_arrow_34d4137f6994a8c7bcc0b38f6ac7779f () Term)
(declare-fun Prims.decreases@tok () Term)
(declare-fun Prims.returnM (Term Term) Term)
(declare-fun Tm_arrow_fa4e3ee4a3dfa402363cd0693fcbfca4 () Term)
(declare-fun Prims.returnM@tok () Term)
(declare-fun Prims.LexTop () Term)
(declare-fun Prims.LexTop@tok () Term)
(declare-fun Prims.as_requires (Term Term) Term)
(declare-fun Tm_arrow_21504714b743c269357a5ba76f64b480 (Term) Term)
(declare-fun Prims.as_requires@tok () Term)
(declare-fun Prims_Tm_refine_c16bc1b61f58b349bf6fc1c94dcaf83b (Term) Term)
(declare-fun Tm_arrow_1c4871de840a52d38a5b65a5ad4e97ea (Term) Term)
(declare-fun Prims_Tm_abs_65a2e960d61ec783b59c1bd1dd30ed10 (Term Term) Term)
(declare-fun Prims.as_ensures (Term Term Term) Term)
(declare-fun Tm_arrow_03fd83481846190115df092b2a491354 (Term) Term)
(declare-fun Prims.as_ensures@tok () Term)
(declare-fun Prims_Tm_abs_cc0ce251c10a6cba9664080c8e806896 (Term Term) Term)
(declare-fun Prims._assume (Term) Term)
(declare-fun Non_total_Tm_arrow_634 () Term)
(declare-fun Prims._assume@tok () Term)
(declare-fun Prims.magic (Term Term) Term)
(declare-fun Tm_arrow_244b5b2a1fc882c67ebcb032ace08d85 (Term) Term)
(declare-fun Prims.magic@tok () Term)
(declare-fun Prims.unsafe_coerce (Term Term Term) Term)
(declare-fun Tm_arrow_205942e024d5471c930d18c2ca3ae24b () Term)
(declare-fun Prims.unsafe_coerce@tok () Term)
(declare-fun Prims.admitP (Term) Term)
(declare-fun Non_total_Tm_arrow_640 () Term)
(declare-fun Prims.admitP@tok () Term)
(declare-fun Prims._assert (Term) Term)
(declare-fun Non_total_Tm_arrow_642 () Term)
(declare-fun Prims._assert@tok () Term)
(declare-fun Prims.spinoff (Term) Term)
(declare-fun Prims.spinoff@tok () Term)
(declare-fun Prims.assert_spinoff (Term) Term)
(declare-fun Non_total_Tm_arrow_645 () Term)
(declare-fun Prims.assert_spinoff@tok () Term)
(declare-fun Prims.cut (Term) Term)
(declare-fun Non_total_Tm_arrow_647 () Term)
(declare-fun Prims.cut@tok () Term)
(declare-fun Prims.nat () Term)
(declare-fun Prims_Tm_refine_ba523126f67e00e7cd55f0b92f16681d (Term) Term)
(declare-fun Prims.pos () Term)
(declare-fun Prims_Tm_refine_f048236b5f8051f83b495ea5eaa6127b (Term) Term)
(declare-fun Prims.nonzero () Term)
(declare-fun Prims_Tm_refine_7075614a0e8c0bdbec6de0d0ef7f1280 (Term) Term)
(declare-fun Prims.op_Modulus (Term Term) Term)
(declare-fun Prims.op_Modulus@tok () Term)
(declare-fun Prims.op_Division (Term Term) Term)
(declare-fun Prims.op_Division@tok () Term)
(declare-fun Prims.pow2.fuel_instrumented (Fuel Term) Term)
(declare-fun Prims.pow2.fuel_instrumented_token () Term)
(declare-fun Prims.pow2 (Term) Term)
(declare-fun Prims.pow2@tok () Term)
(declare-fun Prims.min (Term Term) Term)
(declare-fun Prims.min@tok () Term)
(declare-fun Prims.abs (Term) Term)
(declare-fun Prims.abs@tok () Term)
(declare-fun Prims.string_of_bool (Term) Term)
(declare-fun Prims.string_of_bool@tok () Term)
(declare-fun Prims.string_of_int (Term) Term)
(declare-fun Prims.string_of_int@tok () Term)
(declare-fun Prims.labeled (Term Term Term) Term)
(declare-fun Tm_arrow_57c992be3fa76720bf1a10ffa047db3d (Term Term) Term)
(declare-fun Prims.labeled@tok () Term)
(declare-fun FStar.Pervasives.Native.option (Term) Term)
(declare-fun FStar.Pervasives.Native.option@tok () Term)
(declare-fun FStar.Pervasives.Native.None (Term) Term)
(declare-fun FStar.Pervasives.Native.None_a (Term) Term)
(declare-fun Tm_arrow_61613ad0fe4e0bf49515f58291a6d65c () Term)
(declare-fun FStar.Pervasives.Native.None@tok () Term)
(declare-fun FStar.Pervasives.Native.Some (Term Term) Term)
(declare-fun FStar.Pervasives.Native.Some_a (Term) Term)
(declare-fun FStar.Pervasives.Native.Some_v (Term) Term)
(declare-fun Tm_arrow_df8cdbdef952cf059d2e5d9fe5b8bf02 () Term)
(declare-fun FStar.Pervasives.Native.Some@tok () Term)
(declare-fun FStar.Pervasives.Native.uu___is_None (Term Term) Term)
(declare-fun Tm_arrow_6d32d43d8787bb16acca18c75ecbe1b1 (Term) Term)
(declare-fun FStar.Pervasives.Native.uu___is_None@tok () Term)
(declare-fun FStar.Pervasives.Native.uu___is_Some (Term Term) Term)
(declare-fun FStar.Pervasives.Native.uu___is_Some@tok () Term)
(declare-fun FStar.Pervasives.Native_Tm_refine_4d5241eb6fe198666a8101195bbd4a2a (Term) Term)
(declare-fun FStar.Pervasives.Native.__proj__Some__item__v (Term Term) Term)
(declare-fun Tm_arrow_4f040c69fbe8d7b2e50ca31bd5455a8e () Term)
(declare-fun FStar.Pervasives.Native.__proj__Some__item__v@tok () Term)
(declare-fun FStar.Pervasives.Native.tuple2 (Term Term) Term)
(declare-fun FStar.Pervasives.Native.tuple2@tok () Term)
(declare-fun FStar.Pervasives.Native.Mktuple2 (Term Term Term Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple2__a (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple2__b (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple2__1 (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple2__2 (Term) Term)
(declare-fun Tm_arrow_ea874dc954d16eee0f41a749d898407d () Term)
(declare-fun FStar.Pervasives.Native.Mktuple2@tok () Term)
(declare-fun FStar.Pervasives.Native.uu___is_Mktuple2 (Term Term Term) Term)
(declare-fun Tm_arrow_0e873ada4642b527a7ed8ad8c9a23c0c (Term) Term)
(declare-fun FStar.Pervasives.Native.uu___is_Mktuple2@tok () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple2__item___1 (Term Term Term) Term)
(declare-fun Tm_arrow_7fe3e7847982dd1674bac902db1b25d6 () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple2__item___1@tok () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple2__item___2 (Term Term Term) Term)
(declare-fun Tm_arrow_caf985f824d0c8c31cc1333a92d97b40 () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple2__item___2@tok () Term)
(declare-fun FStar.Pervasives.Native.fst (Term Term Term) Term)
(declare-fun FStar.Pervasives.Native.fst@tok () Term)
(declare-fun FStar.Pervasives.Native.snd (Term Term Term) Term)
(declare-fun FStar.Pervasives.Native.snd@tok () Term)
(declare-fun FStar.Pervasives.Native.tuple3 (Term Term Term) Term)
(declare-fun FStar.Pervasives.Native.tuple3@tok () Term)
(declare-fun FStar.Pervasives.Native.Mktuple3 (Term Term Term Term Term Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple3__a (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple3__b (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple3__c (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple3__1 (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple3__2 (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple3__3 (Term) Term)
(declare-fun Tm_arrow_aa2ac0c2eefec3ef36a52a5c1e92dd6b () Term)
(declare-fun FStar.Pervasives.Native.Mktuple3@tok () Term)
(declare-fun FStar.Pervasives.Native.uu___is_Mktuple3 (Term Term Term Term) Term)
(declare-fun Tm_arrow_81b181f0a50be9c359f1e3afcab46996 (Term) Term)
(declare-fun FStar.Pervasives.Native.uu___is_Mktuple3@tok () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple3__item___1 (Term Term Term Term) Term)
(declare-fun Tm_arrow_530e081bbbd964966a402b7e14fb9d69 () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple3__item___1@tok () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple3__item___2 (Term Term Term Term) Term)
(declare-fun Tm_arrow_cdcc1b95ab3319da21eacff69bb46ef7 () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple3__item___2@tok () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple3__item___3 (Term Term Term Term) Term)
(declare-fun Tm_arrow_ea1d9eb08a7fc2511c09cc8007396ae9 () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple3__item___3@tok () Term)
(declare-fun FStar.Pervasives.Native.tuple4 (Term Term Term Term) Term)
(declare-fun FStar.Pervasives.Native.tuple4@tok () Term)
(declare-fun FStar.Pervasives.Native.Mktuple4 (Term Term Term Term Term Term Term Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple4__a (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple4__b (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple4__c (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple4__d (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple4__1 (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple4__2 (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple4__3 (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple4__4 (Term) Term)
(declare-fun Tm_arrow_57fa2a22c6acb92aec36a98d388a288a () Term)
(declare-fun FStar.Pervasives.Native.Mktuple4@tok () Term)
(declare-fun FStar.Pervasives.Native.uu___is_Mktuple4 (Term Term Term Term Term) Term)
(declare-fun Tm_arrow_471e47868c0f16aa720099399b21873e (Term) Term)
(declare-fun FStar.Pervasives.Native.uu___is_Mktuple4@tok () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple4__item___1 (Term Term Term Term Term) Term)
(declare-fun Tm_arrow_21647838ffa803cb1cbaf82c99e03f01 () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple4__item___1@tok () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple4__item___2 (Term Term Term Term Term) Term)
(declare-fun Tm_arrow_4a0e4247f19d3748beed54010175e86f () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple4__item___2@tok () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple4__item___3 (Term Term Term Term Term) Term)
(declare-fun Tm_arrow_879fb9ac6887317b2253fa415d6e297f () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple4__item___3@tok () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple4__item___4 (Term Term Term Term Term) Term)
(declare-fun Tm_arrow_094933c54ea2002054dad555e01358ba () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple4__item___4@tok () Term)
(declare-fun FStar.Pervasives.Native.tuple5 (Term Term Term Term Term) Term)
(declare-fun FStar.Pervasives.Native.tuple5@tok () Term)
(declare-fun FStar.Pervasives.Native.Mktuple5 (Term Term Term Term Term Term Term Term Term Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple5__a (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple5__b (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple5__c (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple5__d (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple5__e (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple5__1 (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple5__2 (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple5__3 (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple5__4 (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple5__5 (Term) Term)
(declare-fun Tm_arrow_a25fd62df6305ca0d5e962cb259a6497 () Term)
(declare-fun FStar.Pervasives.Native.Mktuple5@tok () Term)
(declare-fun FStar.Pervasives.Native.uu___is_Mktuple5 (Term Term Term Term Term Term) Term)
(declare-fun Tm_arrow_071cdac364befd9b3a1ef15c982380ca (Term) Term)
(declare-fun FStar.Pervasives.Native.uu___is_Mktuple5@tok () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple5__item___1 (Term Term Term Term Term Term) Term)
(declare-fun Tm_arrow_6426d9c2c96ff0881bdcece54fff4277 () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple5__item___1@tok () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple5__item___2 (Term Term Term Term Term Term) Term)
(declare-fun Tm_arrow_0dad7bc7f64c4faac713e4788a31a16e () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple5__item___2@tok () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple5__item___3 (Term Term Term Term Term Term) Term)
(declare-fun Tm_arrow_efdf2741fc5d2cd7ffdf01b992c9e8a9 () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple5__item___3@tok () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple5__item___4 (Term Term Term Term Term Term) Term)
(declare-fun Tm_arrow_08953d1bb2ff5a2bd59d780036c9167c () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple5__item___4@tok () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple5__item___5 (Term Term Term Term Term Term) Term)
(declare-fun Tm_arrow_c4e77c85318828d15167451b16a74f86 () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple5__item___5@tok () Term)
(declare-fun FStar.Pervasives.Native.tuple6 (Term Term Term Term Term Term) Term)
(declare-fun FStar.Pervasives.Native.tuple6@tok () Term)
(declare-fun FStar.Pervasives.Native.Mktuple6 (Term Term Term Term Term Term Term Term Term Term Term Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple6__a (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple6__b (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple6__c (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple6__d (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple6__e (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple6__f (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple6__1 (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple6__2 (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple6__3 (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple6__4 (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple6__5 (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple6__6 (Term) Term)
(declare-fun Tm_arrow_6e23aa00e38a92d031af78d42cdf6218 () Term)
(declare-fun FStar.Pervasives.Native.Mktuple6@tok () Term)
(declare-fun FStar.Pervasives.Native.uu___is_Mktuple6 (Term Term Term Term Term Term Term) Term)
(declare-fun Tm_arrow_b4cc8204c08bed808cee22615b49bc5f (Term) Term)
(declare-fun FStar.Pervasives.Native.uu___is_Mktuple6@tok () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple6__item___1 (Term Term Term Term Term Term Term) Term)
(declare-fun Tm_arrow_3209a7a409ec605c6410051291219438 () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple6__item___1@tok () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple6__item___2 (Term Term Term Term Term Term Term) Term)
(declare-fun Tm_arrow_15e10e26df1554e12524dd8fbe3e2f20 () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple6__item___2@tok () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple6__item___3 (Term Term Term Term Term Term Term) Term)
(declare-fun Tm_arrow_7d790bb96aadc2828cd88ef5143114e0 () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple6__item___3@tok () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple6__item___4 (Term Term Term Term Term Term Term) Term)
(declare-fun Tm_arrow_9ac1fc4819cbc364e77988b8605dfbd2 () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple6__item___4@tok () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple6__item___5 (Term Term Term Term Term Term Term) Term)
(declare-fun Tm_arrow_4902efa5488190c456656843f7646562 () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple6__item___5@tok () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple6__item___6 (Term Term Term Term Term Term Term) Term)
(declare-fun Tm_arrow_45ca9c2b9710ead839b1f3bf7ef7a305 () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple6__item___6@tok () Term)
(declare-fun FStar.Pervasives.Native.tuple7 (Term Term Term Term Term Term Term) Term)
(declare-fun FStar.Pervasives.Native.tuple7@tok () Term)
(declare-fun FStar.Pervasives.Native.Mktuple7 (Term Term Term Term Term Term Term Term Term Term Term Term Term Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple7__a (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple7__b (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple7__c (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple7__d (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple7__e (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple7__f (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple7__g (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple7__1 (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple7__2 (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple7__3 (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple7__4 (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple7__5 (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple7__6 (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple7__7 (Term) Term)
(declare-fun Tm_arrow_4be4d0827cb852d3f57a920e42b0e232 () Term)
(declare-fun FStar.Pervasives.Native.Mktuple7@tok () Term)
(declare-fun FStar.Pervasives.Native.uu___is_Mktuple7 (Term Term Term Term Term Term Term Term) Term)
(declare-fun Tm_arrow_bc1e750d04f01d381d7c63e81b8697d1 (Term) Term)
(declare-fun FStar.Pervasives.Native.uu___is_Mktuple7@tok () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple7__item___1 (Term Term Term Term Term Term Term Term) Term)
(declare-fun Tm_arrow_cfdfdc24b7e1267c05bed07df6aea066 () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple7__item___1@tok () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple7__item___2 (Term Term Term Term Term Term Term Term) Term)
(declare-fun Tm_arrow_88772e9c1eff3cee09de1db3fc8087ca () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple7__item___2@tok () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple7__item___3 (Term Term Term Term Term Term Term Term) Term)
(declare-fun Tm_arrow_051405f28864bdc9643ed01eb3b92100 () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple7__item___3@tok () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple7__item___4 (Term Term Term Term Term Term Term Term) Term)
(declare-fun Tm_arrow_9a2d52aef28944ddfbe3d4af8c624d0b () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple7__item___4@tok () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple7__item___5 (Term Term Term Term Term Term Term Term) Term)
(declare-fun Tm_arrow_959ecc63baf89362269f0a0ccd5668b0 () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple7__item___5@tok () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple7__item___6 (Term Term Term Term Term Term Term Term) Term)
(declare-fun Tm_arrow_dcdffe9de61b4fc93e96c6fef1350cf2 () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple7__item___6@tok () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple7__item___7 (Term Term Term Term Term Term Term Term) Term)
(declare-fun Tm_arrow_85e89735c9356e795787b0e5b5a2f363 () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple7__item___7@tok () Term)
(declare-fun FStar.Pervasives.Native.tuple8 (Term Term Term Term Term Term Term Term) Term)
(declare-fun FStar.Pervasives.Native.tuple8@tok () Term)
(declare-fun FStar.Pervasives.Native.Mktuple8 (Term Term Term Term Term Term Term Term Term Term Term Term Term Term Term Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple8__a (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple8__b (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple8__c (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple8__d (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple8__e (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple8__f (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple8__g (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple8__h (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple8__1 (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple8__2 (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple8__3 (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple8__4 (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple8__5 (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple8__6 (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple8__7 (Term) Term)
(declare-fun FStar.Pervasives.Native.Mktuple8__8 (Term) Term)
(declare-fun Tm_arrow_7493b9132d0860b9d4513189a97e9cc2 () Term)
(declare-fun FStar.Pervasives.Native.Mktuple8@tok () Term)
(declare-fun FStar.Pervasives.Native.uu___is_Mktuple8 (Term Term Term Term Term Term Term Term Term) Term)
(declare-fun Tm_arrow_302ec1d59a0c160d8b944503f142e361 (Term) Term)
(declare-fun FStar.Pervasives.Native.uu___is_Mktuple8@tok () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple8__item___1 (Term Term Term Term Term Term Term Term Term) Term)
(declare-fun Tm_arrow_300677279975362e42b142f0238e1ce1 () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple8__item___1@tok () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple8__item___2 (Term Term Term Term Term Term Term Term Term) Term)
(declare-fun Tm_arrow_d24e3d13d5f3ba68fc4414c96e3c8794 () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple8__item___2@tok () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple8__item___3 (Term Term Term Term Term Term Term Term Term) Term)
(declare-fun Tm_arrow_d3ed25c81ffc65c9f57b03935726ef00 () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple8__item___3@tok () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple8__item___4 (Term Term Term Term Term Term Term Term Term) Term)
(declare-fun Tm_arrow_fb2b0d135fd95ad5a0c9931d87ebd9cf () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple8__item___4@tok () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple8__item___5 (Term Term Term Term Term Term Term Term Term) Term)
(declare-fun Tm_arrow_02d3b5b79bf8b1df357192967171c4e9 () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple8__item___5@tok () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple8__item___6 (Term Term Term Term Term Term Term Term Term) Term)
(declare-fun Tm_arrow_59613b37f4c818dae9a7b082d5155f29 () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple8__item___6@tok () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple8__item___7 (Term Term Term Term Term Term Term Term Term) Term)
(declare-fun Tm_arrow_642316967e62d4894b4c5052196039ab () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple8__item___7@tok () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple8__item___8 (Term Term Term Term Term Term Term Term Term) Term)
(declare-fun Tm_arrow_a984cc683b69e3e0d41bb0853d6a1664 () Term)
(declare-fun FStar.Pervasives.Native.__proj__Mktuple8__item___8@tok () Term)
(declare-fun FStar.Pervasives.Native.normalize_term (Term Term) Term)
(declare-fun FStar.Pervasives.Native.normalize_term@tok () Term)
(declare-fun FStar.Pervasives.Native.normalize (Term) Term)
(declare-fun FStar.Pervasives.Native.normalize@tok () Term)
(declare-fun FStar.Pervasives.Native.norm_step () Term)
(declare-fun FStar.Pervasives.Native.Simpl () Term)
(declare-fun FStar.Pervasives.Native.Weak () Term)
(declare-fun FStar.Pervasives.Native.HNF () Term)
(declare-fun FStar.Pervasives.Native.Primops () Term)
(declare-fun FStar.Pervasives.Native.Delta () Term)
(declare-fun FStar.Pervasives.Native.Zeta () Term)
(declare-fun FStar.Pervasives.Native.Iota () Term)
(declare-fun FStar.Pervasives.Native.UnfoldOnly (Term) Term)
(declare-fun Tm_arrow_52c7e04c1aef70d52ef99d2cc9753aed (Term Term) Term)
(declare-fun FStar.Pervasives.Native.UnfoldOnly@tok () Term)
(declare-fun FStar.Pervasives.Native.UnfoldFully (Term) Term)
(declare-fun FStar.Pervasives.Native.UnfoldFully@tok () Term)
(declare-fun FStar.Pervasives.Native.UnfoldAttr (Term Term) Term)
(declare-fun FStar.Pervasives.Native.UnfoldAttr@tok () Term)
(declare-fun FStar.Pervasives.Native.uu___is_Simpl (Term) Term)
(declare-fun FStar.Pervasives.Native.uu___is_Simpl@tok () Term)
(declare-fun FStar.Pervasives.Native.uu___is_Weak (Term) Term)
(declare-fun FStar.Pervasives.Native.uu___is_Weak@tok () Term)
(declare-fun FStar.Pervasives.Native.uu___is_HNF (Term) Term)
(declare-fun FStar.Pervasives.Native.uu___is_HNF@tok () Term)
(declare-fun FStar.Pervasives.Native.uu___is_Primops (Term) Term)
(declare-fun FStar.Pervasives.Native.uu___is_Primops@tok () Term)
(declare-fun FStar.Pervasives.Native.uu___is_Delta (Term) Term)
(declare-fun FStar.Pervasives.Native.uu___is_Delta@tok () Term)
(declare-fun FStar.Pervasives.Native.uu___is_Zeta (Term) Term)
(declare-fun FStar.Pervasives.Native.uu___is_Zeta@tok () Term)
(declare-fun FStar.Pervasives.Native.uu___is_Iota (Term) Term)
(declare-fun FStar.Pervasives.Native.uu___is_Iota@tok () Term)
(declare-fun FStar.Pervasives.Native.uu___is_UnfoldOnly (Term) Term)
(declare-fun FStar.Pervasives.Native.uu___is_UnfoldOnly@tok () Term)
(declare-fun FStar.Pervasives.Native_Tm_refine_f81289758692e8d7ff38327f5b71be85 (Term) Term)
(declare-fun FStar.Pervasives.Native.__proj__UnfoldOnly__item___0 (Term) Term)
(declare-fun Tm_arrow_d73f8dacefc5e4cdc8cdd18970a5ae80 (Term Term) Term)
(declare-fun FStar.Pervasives.Native.__proj__UnfoldOnly__item___0@tok () Term)
(declare-fun FStar.Pervasives.Native.uu___is_UnfoldFully (Term) Term)
(declare-fun FStar.Pervasives.Native.uu___is_UnfoldFully@tok () Term)
(declare-fun FStar.Pervasives.Native_Tm_refine_40cfb467dd44d40edcf16599ec909847 (Term) Term)
(declare-fun FStar.Pervasives.Native.__proj__UnfoldFully__item___0 (Term) Term)
(declare-fun Tm_arrow_52d29796e7fa32d5b27962b2b725e507 (Term Term) Term)
(declare-fun FStar.Pervasives.Native.__proj__UnfoldFully__item___0@tok () Term)
(declare-fun FStar.Pervasives.Native.uu___is_UnfoldAttr (Term) Term)
(declare-fun FStar.Pervasives.Native.uu___is_UnfoldAttr@tok () Term)
(declare-fun FStar.Pervasives.Native_Tm_refine_735fdbeb3c591d804f924767d4322a6a (Term) Term)
(declare-fun FStar.Pervasives.Native.__proj__UnfoldAttr__item__t (Term) Term)
(declare-fun Tm_arrow_eaecbfb0f0c1d2e86edbe9df7d9fa3a5 (Term) Term)
(declare-fun FStar.Pervasives.Native.__proj__UnfoldAttr__item__t@tok () Term)
(declare-fun FStar.Pervasives.Native.__proj__UnfoldAttr__item__a (Term) Term)
(declare-fun Tm_arrow_3e3f6c09cac83bd2c87427772baf967c (Term) Term)
(declare-fun FStar.Pervasives.Native.__proj__UnfoldAttr__item__a@tok () Term)
(declare-fun FStar.Pervasives.Native.simplify () Term)
(declare-fun FStar.Pervasives.Native.weak () Term)
(declare-fun FStar.Pervasives.Native.hnf () Term)
(declare-fun FStar.Pervasives.Native.primops () Term)
(declare-fun FStar.Pervasives.Native.delta () Term)
(declare-fun FStar.Pervasives.Native.zeta () Term)
(declare-fun FStar.Pervasives.Native.iota () Term)
(declare-fun FStar.Pervasives.Native.delta_only (Term) Term)
(declare-fun FStar.Pervasives.Native.delta_only@tok () Term)
(declare-fun FStar.Pervasives.Native.delta_fully (Term) Term)
(declare-fun FStar.Pervasives.Native.delta_fully@tok () Term)
(declare-fun FStar.Pervasives.Native.delta_attr (Term Term) Term)
(declare-fun FStar.Pervasives.Native.delta_attr@tok () Term)
(declare-fun FStar.Pervasives.Native.norm (Term Term Term) Term)
(declare-fun Tm_arrow_cff63087848ae2e59f28234902699c0f (Term) Term)
(declare-fun FStar.Pervasives.Native.norm@tok () Term)
(declare-fun FStar.Pervasives.Native.assert_norm (Term) Term)
(declare-fun Tm_arrow_37a65a1a1bca77204cc44fddae45a654 (Term) Term)
(declare-fun FStar.Pervasives.Native.assert_norm@tok () Term)
(declare-fun FStar.Pervasives.Native.singleton (Term Term) Term)
(declare-fun Tm_arrow_9c915ca115c32a0e42eafce253bfd2cd () Term)
(declare-fun FStar.Pervasives.Native_Tm_refine_2fbd657fe85bcb2423f9c7e5f9b3bcb5 (Term Term) Term)
(declare-fun FStar.Pervasives.Native.singleton@tok () Term)
(declare-fun FStar.Pervasives.Native.with_type (Term Term) Term)
(declare-fun FStar.Pervasives.Native.with_type@tok () Term)
(declare-fun FStar.Pervasives.id (Term Term) Term)
(declare-fun FStar.Pervasives.id@tok () Term)
(declare-fun FStar.Pervasives.st_pre_h (Term) Term)
(declare-fun FStar.Pervasives.st_pre_h@tok () Term)
(declare-fun FStar.Pervasives.st_post_h_ (Term Term Term) Term)
(declare-fun Tm_arrow_2b9e6d83dc78155badfb9f85c9c4c887 () Term)
(declare-fun FStar.Pervasives.st_post_h_@tok () Term)
(declare-fun Tm_arrow_24dbc58008173456430189ae3ecf9a5f (Term Term Term) Term)
(declare-fun FStar.Pervasives.st_post_h (Term Term) Term)
(declare-fun FStar.Pervasives.st_post_h@tok () Term)
(declare-fun FStar.Pervasives.st_wp_h (Term Term) Term)
(declare-fun FStar.Pervasives.st_wp_h@tok () Term)
(declare-fun Tm_arrow_1114487a196323b3ca7d5d0b38969957 (Term Term) Term)
(declare-fun FStar.Pervasives.st_return (Term Term Term Term) Term)
(declare-fun Tm_arrow_13dd269756cb773b57b515955a3c167c () Term)
(declare-fun FStar.Pervasives.st_return@tok () Term)
(declare-fun Tm_arrow_d9eac583d9f115ef0dc2cf4de1079b38 (Term Term Term) Term)
(declare-fun FStar.Pervasives.st_bind_wp (Term Term Term Term Term Term Term Term) Term)
(declare-fun Tm_arrow_c89a507d37bce525c784ce4c49ca4e78 (Term) Term)
(declare-fun FStar.Pervasives.st_bind_wp@tok () Term)
(declare-fun Tm_arrow_39ad8232ffc69b341ef9ad0212b74d41 (Term Term) Term)
(declare-fun FStar.Pervasives_Tm_abs_a31992f5c5dabbfdc6da62a16cd60a28 (Term Term Term Term) Term)
(declare-fun FStar.Pervasives.st_if_then_else (Term Term Term Term Term Term Term) Term)
(declare-fun Tm_arrow_a8bd5744f1e631257a4264db50bf5a7c (Term) Term)
(declare-fun FStar.Pervasives.st_if_then_else@tok () Term)
(declare-fun FStar.Pervasives.st_ite_wp (Term Term Term Term Term) Term)
(declare-fun Tm_arrow_1eae0eaa54a90d4d45405fc37f59299f (Term) Term)
(declare-fun FStar.Pervasives.st_ite_wp@tok () Term)
(declare-fun FStar.Pervasives.st_stronger (Term Term Term Term) Term)
(declare-fun Tm_arrow_17a09828089dfad9c34f612c63238178 (Term) Term)
(declare-fun FStar.Pervasives.st_stronger@tok () Term)
(declare-fun FStar.Pervasives.st_close_wp (Term Term Term Term Term Term) Term)
(declare-fun Tm_arrow_49e61e769c9e3a0a679cbd25d6e21a53 (Term) Term)
(declare-fun FStar.Pervasives.st_close_wp@tok () Term)
(declare-fun FStar.Pervasives.st_assert_p (Term Term Term Term Term Term) Term)
(declare-fun Tm_arrow_433e42e3116eeb237f1030231a24382d (Term) Term)
(declare-fun FStar.Pervasives.st_assert_p@tok () Term)
(declare-fun FStar.Pervasives.st_assume_p (Term Term Term Term Term Term) Term)
(declare-fun FStar.Pervasives.st_assume_p@tok () Term)
(declare-fun FStar.Pervasives.st_null_wp (Term Term Term Term) Term)
(declare-fun Tm_arrow_2e05015ec978795a21c10130eebfeae9 (Term) Term)
(declare-fun FStar.Pervasives.st_null_wp@tok () Term)
(declare-fun FStar.Pervasives.st_trivial (Term Term Term) Term)
(declare-fun Tm_arrow_d1e52eaae1c31c37e88414cfa45e35d7 (Term) Term)
(declare-fun FStar.Pervasives.st_trivial@tok () Term)
(declare-fun FStar.Pervasives_Tm_abs_fcd1fe475df8761bb0be4af6b43db341 (Term Term Term) Term)
(declare-fun FStar.Pervasives.result (Term) Term)
(declare-fun FStar.Pervasives.result@tok () Term)
(declare-fun FStar.Pervasives.V (Term Term) Term)
(declare-fun FStar.Pervasives.V_a (Term) Term)
(declare-fun FStar.Pervasives.V_v (Term) Term)
(declare-fun Tm_arrow_e797b13f3527682c5e8e530b8c8c696d () Term)
(declare-fun FStar.Pervasives.V@tok () Term)
(declare-fun FStar.Pervasives.E (Term Term) Term)
(declare-fun FStar.Pervasives.E_a (Term) Term)
(declare-fun FStar.Pervasives.E_e (Term) Term)
(declare-fun Tm_arrow_739df426cfefbd9297407e8f408e091d (Term) Term)
(declare-fun FStar.Pervasives.E@tok () Term)
(declare-fun FStar.Pervasives.Err (Term Term) Term)
(declare-fun FStar.Pervasives.Err_a (Term) Term)
(declare-fun FStar.Pervasives.Err_msg (Term) Term)
(declare-fun FStar.Pervasives.Err@tok () Term)
(declare-fun FStar.Pervasives.uu___is_V (Term Term) Term)
(declare-fun Tm_arrow_e62fd03c6d75c90fe0c21b54135b4ded (Term) Term)
(declare-fun FStar.Pervasives.uu___is_V@tok () Term)
(declare-fun FStar.Pervasives_Tm_refine_9db520b26a7f39c5a01493a3f375290d (Term) Term)
(declare-fun FStar.Pervasives.__proj__V__item__v (Term Term) Term)
(declare-fun Tm_arrow_bf84b86e4714dba88d5fa227c56fabbb () Term)
(declare-fun FStar.Pervasives.__proj__V__item__v@tok () Term)
(declare-fun FStar.Pervasives.uu___is_E (Term Term) Term)
(declare-fun FStar.Pervasives.uu___is_E@tok () Term)
(declare-fun FStar.Pervasives_Tm_refine_95e1e2ee29104754cc3740f5575fc6e5 (Term) Term)
(declare-fun FStar.Pervasives.__proj__E__item__e (Term Term) Term)
(declare-fun Tm_arrow_28bfbd2790e868cd7c317313e9ee5c1a (Term) Term)
(declare-fun FStar.Pervasives.__proj__E__item__e@tok () Term)
(declare-fun FStar.Pervasives.uu___is_Err (Term Term) Term)
(declare-fun FStar.Pervasives.uu___is_Err@tok () Term)
(declare-fun FStar.Pervasives_Tm_refine_22fb403854eba07427f92e79848f9d9f (Term) Term)
(declare-fun FStar.Pervasives.__proj__Err__item__msg (Term Term) Term)
(declare-fun Tm_arrow_8024419d86cafa6a8f5a740b84a7c291 (Term) Term)
(declare-fun FStar.Pervasives.__proj__Err__item__msg@tok () Term)
(declare-fun FStar.Pervasives.ex_pre () Term)
(declare-fun FStar.Pervasives.ex_post_ (Term Term) Term)
(declare-fun FStar.Pervasives.ex_post_@tok () Term)
(declare-fun Tm_arrow_4c49ce37319be38829a6032b2247a659 (Term Term) Term)
(declare-fun FStar.Pervasives_Tm_refine_a4dcdeeacbcb04d05a6720f786918fd6 (Term Term) Term)
(declare-fun FStar.Pervasives.ex_post (Term) Term)
(declare-fun FStar.Pervasives.ex_post@tok () Term)
(declare-fun FStar.Pervasives.ex_wp (Term) Term)
(declare-fun FStar.Pervasives.ex_wp@tok () Term)
(declare-fun Tm_arrow_87ef52d5a8e7306848436909b0c69460 (Term Term) Term)
(declare-fun FStar.Pervasives.ex_return (Term Term Term) Term)
(declare-fun Tm_arrow_4eb2e0118149efb6019111cf994e0f6b () Term)
(declare-fun FStar.Pervasives.ex_return@tok () Term)
(declare-fun Tm_arrow_d794a58e52e51e13e3b9afe660625c54 (Term Term) Term)
(declare-fun FStar.Pervasives.ex_bind_wp (Term Term Term Term Term Term) Term)
(declare-fun Tm_arrow_dd2de7e516014096b8b41947307b7781 (Term) Term)
(declare-fun FStar.Pervasives.ex_bind_wp@tok () Term)
(declare-fun FStar.Pervasives_Tm_refine_a2260b9f44d24a9a5b9e80956138e9d0 (Term) Term)
(declare-fun Tm_arrow_aa928d5fea25781a172e9e551de2bee3 (Term) Term)
(declare-fun FStar.Pervasives_Tm_abs_e8350ed3e632db104170fa7e8c0e0fef (Term Term Term Term) Term)
(declare-fun FStar.Pervasives.ex_ite_wp (Term Term Term) Term)
(declare-fun Tm_arrow_641a228fe9177bb850d1efb25c4ca0d9 (Term) Term)
(declare-fun FStar.Pervasives.ex_ite_wp@tok () Term)
(declare-fun FStar.Pervasives.ex_if_then_else (Term Term Term Term Term) Term)
(declare-fun Tm_arrow_425389aaf0306ac889308852f2d13f76 (Term) Term)
(declare-fun FStar.Pervasives.ex_if_then_else@tok () Term)
(declare-fun FStar.Pervasives.ex_stronger (Term Term Term) Term)
(declare-fun Tm_arrow_ad2a5a45548b5666753ded1bcb23ab10 (Term) Term)
(declare-fun FStar.Pervasives.ex_stronger@tok () Term)
(declare-fun FStar.Pervasives.ex_close_wp (Term Term Term Term) Term)
(declare-fun Tm_arrow_eff36c64f2c347faf7149c68721d618a (Term) Term)
(declare-fun FStar.Pervasives.ex_close_wp@tok () Term)
(declare-fun FStar.Pervasives.ex_assert_p (Term Term Term Term) Term)
(declare-fun Tm_arrow_4e8df289938ae02937cd1c94aba2cf20 (Term) Term)
(declare-fun FStar.Pervasives.ex_assert_p@tok () Term)
(declare-fun FStar.Pervasives.ex_assume_p (Term Term Term Term) Term)
(declare-fun FStar.Pervasives.ex_assume_p@tok () Term)
(declare-fun FStar.Pervasives.ex_null_wp (Term Term) Term)
(declare-fun Tm_arrow_63177eca1c58ba394d666028d123748d (Term) Term)
(declare-fun FStar.Pervasives.ex_null_wp@tok () Term)
(declare-fun FStar.Pervasives.ex_trivial (Term Term) Term)
(declare-fun Tm_arrow_5221ddbf8295a5d706d58e293ca3b4fe (Term) Term)
(declare-fun FStar.Pervasives.ex_trivial@tok () Term)
(declare-fun FStar.Pervasives_Tm_abs_e607bfcb7d8c23b51c0ff04d27046641 (Term Term) Term)
(declare-fun FStar.Pervasives.lift_div_exn (Term Term Term) Term)
(declare-fun Tm_arrow_9d7b0e2d115bb41f98da64d5384f7531 (Term) Term)
(declare-fun FStar.Pervasives.lift_div_exn@tok () Term)
(declare-fun FStar.Pervasives_Tm_abs_08b6cbf5c721293cb051b1b5a6efcdf3 (Term Term) Term)
(declare-fun FStar.Pervasives.all_pre_h (Term) Term)
(declare-fun FStar.Pervasives.all_pre_h@tok () Term)
(declare-fun FStar.Pervasives.all_post_h_ (Term Term Term) Term)
(declare-fun FStar.Pervasives.all_post_h_@tok () Term)
(declare-fun Tm_arrow_5db9487ea079f4bbc6de2da583d038f7 (Term Term Term) Term)
(declare-fun FStar.Pervasives.all_post_h (Term Term) Term)
(declare-fun FStar.Pervasives.all_post_h@tok () Term)
(declare-fun FStar.Pervasives.all_wp_h (Term Term) Term)
(declare-fun FStar.Pervasives.all_wp_h@tok () Term)
(declare-fun Tm_arrow_95c0b403ba19b1a7c1f8c73440744c07 (Term Term) Term)
(declare-fun FStar.Pervasives.all_ite_wp (Term Term Term Term Term) Term)
(declare-fun Tm_arrow_db526519745d691ef343e32a1084673b (Term) Term)
(declare-fun FStar.Pervasives.all_ite_wp@tok () Term)
(declare-fun FStar.Pervasives.all_return (Term Term Term Term) Term)
(declare-fun Tm_arrow_c550a8e282abd0593a028dd71c851c33 () Term)
(declare-fun FStar.Pervasives.all_return@tok () Term)
(declare-fun Tm_arrow_12929d79484018a159cc54c10d62f794 (Term Term Term) Term)
(declare-fun FStar.Pervasives.all_bind_wp (Term Term Term Term Term Term Term Term) Term)
(declare-fun Tm_arrow_646607d9b79b27cb700948778ab8dc33 (Term) Term)
(declare-fun FStar.Pervasives.all_bind_wp@tok () Term)
(declare-fun Tm_arrow_37267229c41a09d7df20584f1caf324f (Term Term) Term)
(declare-fun FStar.Pervasives_Tm_abs_e071eb1ddae878d42677e33386379719 (Term Term Term Term Term) Term)
(declare-fun FStar.Pervasives.all_if_then_else (Term Term Term Term Term Term Term) Term)
(declare-fun Tm_arrow_f2144e812b1bb22d3fc2a233dbf4e7ad (Term) Term)
(declare-fun FStar.Pervasives.all_if_then_else@tok () Term)
(declare-fun FStar.Pervasives.all_stronger (Term Term Term Term) Term)
(declare-fun Tm_arrow_059768e110c940ea8bff9492771ddcc8 (Term) Term)
(declare-fun FStar.Pervasives.all_stronger@tok () Term)
(declare-fun FStar.Pervasives.all_close_wp (Term Term Term Term Term Term) Term)
(declare-fun Tm_arrow_82af1f1c7453b4c313f49c7e70e41650 (Term) Term)
(declare-fun FStar.Pervasives.all_close_wp@tok () Term)
(declare-fun FStar.Pervasives.all_assert_p (Term Term Term Term Term Term) Term)
(declare-fun Tm_arrow_1e34c94069c60657ba290f517d081e8f (Term) Term)
(declare-fun FStar.Pervasives.all_assert_p@tok () Term)
(declare-fun FStar.Pervasives.all_assume_p (Term Term Term Term Term Term) Term)
(declare-fun FStar.Pervasives.all_assume_p@tok () Term)
(declare-fun FStar.Pervasives.all_null_wp (Term Term Term Term) Term)
(declare-fun Tm_arrow_5caeced02ae19cd28fdaa3e41ea7d339 (Term) Term)
(declare-fun FStar.Pervasives.all_null_wp@tok () Term)
(declare-fun FStar.Pervasives.all_trivial (Term Term Term) Term)
(declare-fun Tm_arrow_5f168af91094f21c4a68cd41bed2b946 (Term) Term)
(declare-fun FStar.Pervasives.all_trivial@tok () Term)
(declare-fun FStar.Pervasives_Tm_abs_fcfd87b8060d768ae62f6917d2355825 (Term Term Term) Term)
(declare-fun FStar.Pervasives.inversion (Term) Term)
(declare-fun Tm_arrow_5002e807b09214fd2f4ddb0ecd7cc6a9 (Term) Term)
(declare-fun FStar.Pervasives.inversion@tok () Term)
(declare-fun FStar.Pervasives.allow_inversion (Term) Term)
(declare-fun Tm_arrow_c7a05ebcf00d9d5ea2ad28cd2649cf23 (Term) Term)
(declare-fun FStar.Pervasives_Tm_refine_7026ef6906ebd21e19dc2cc0639312d3 (Term Term) Term)
(declare-fun FStar.Pervasives.allow_inversion@tok () Term)
(declare-fun FStar.Pervasives.either (Term Term) Term)
(declare-fun FStar.Pervasives.either@tok () Term)
(declare-fun FStar.Pervasives.Inl (Term Term Term) Term)
(declare-fun FStar.Pervasives.Inl__a (Term) Term)
(declare-fun FStar.Pervasives.Inl__b (Term) Term)
(declare-fun FStar.Pervasives.Inl_v (Term) Term)
(declare-fun Tm_arrow_66a0d53ccf00bc028aa22d526865c801 () Term)
(declare-fun FStar.Pervasives.Inl@tok () Term)
(declare-fun FStar.Pervasives.Inr (Term Term Term) Term)
(declare-fun FStar.Pervasives.Inr__a (Term) Term)
(declare-fun FStar.Pervasives.Inr__b (Term) Term)
(declare-fun FStar.Pervasives.Inr_v (Term) Term)
(declare-fun Tm_arrow_a1a8754ef05983b108c166cca1c4e63a () Term)
(declare-fun FStar.Pervasives.Inr@tok () Term)
(declare-fun FStar.Pervasives.uu___is_Inl (Term Term Term) Term)
(declare-fun Tm_arrow_59435ca7efae8c5a13162daf50ca7594 (Term) Term)
(declare-fun FStar.Pervasives.uu___is_Inl@tok () Term)
(declare-fun FStar.Pervasives_Tm_refine_85e0cc884f8457202f90cd77f23733ba (Term Term) Term)
(declare-fun FStar.Pervasives.__proj__Inl__item__v (Term Term Term) Term)
(declare-fun Tm_arrow_33c5389e8c042e819d87a774e0987a42 () Term)
(declare-fun FStar.Pervasives.__proj__Inl__item__v@tok () Term)
(declare-fun FStar.Pervasives.uu___is_Inr (Term Term Term) Term)
(declare-fun FStar.Pervasives.uu___is_Inr@tok () Term)
(declare-fun FStar.Pervasives_Tm_refine_8f1f5f564dae90240db429de2eb41517 (Term Term) Term)
(declare-fun FStar.Pervasives.__proj__Inr__item__v (Term Term Term) Term)
(declare-fun Tm_arrow_c3d46b8ae03d5e5761b37a519c1896ea () Term)
(declare-fun FStar.Pervasives.__proj__Inr__item__v@tok () Term)
(declare-fun FStar.Pervasives.dfst (Term Term Term) Term)
(declare-fun FStar.Pervasives.dfst@tok () Term)
(declare-fun FStar.Pervasives.dsnd (Term Term Term) Term)
(declare-fun FStar.Pervasives.dsnd@tok () Term)
(declare-fun FStar.Pervasives.dtuple3 (Term Term Term) Term)
(declare-fun FStar.Pervasives.dtuple3@tok () Term)
(declare-fun Tm_arrow_614c7b5886a6e5b119a37c35c7e4bd59 (Term Term) Term)
(declare-fun FStar.Pervasives.Mkdtuple3 (Term Term Term Term Term Term) Term)
(declare-fun FStar.Pervasives.Mkdtuple3_a (Term) Term)
(declare-fun FStar.Pervasives.Mkdtuple3_b (Term) Term)
(declare-fun FStar.Pervasives.Mkdtuple3_c (Term) Term)
(declare-fun FStar.Pervasives.Mkdtuple3__1 (Term) Term)
(declare-fun FStar.Pervasives.Mkdtuple3__2 (Term) Term)
(declare-fun FStar.Pervasives.Mkdtuple3__3 (Term) Term)
(declare-fun Tm_arrow_51228bc6fe187c605830950e4b63d461 () Term)
(declare-fun FStar.Pervasives.Mkdtuple3@tok () Term)
(declare-fun FStar.Pervasives.uu___is_Mkdtuple3 (Term Term Term Term) Term)
(declare-fun Tm_arrow_25c72f362ef3d8a23658a89597e3665d (Term) Term)
(declare-fun FStar.Pervasives.uu___is_Mkdtuple3@tok () Term)
(declare-fun FStar.Pervasives.__proj__Mkdtuple3__item___1 (Term Term Term Term) Term)
(declare-fun Tm_arrow_370eef0be624c130308f9f3e7fdda8fb () Term)
(declare-fun FStar.Pervasives.__proj__Mkdtuple3__item___1@tok () Term)
(declare-fun FStar.Pervasives.__proj__Mkdtuple3__item___2 (Term Term Term Term) Term)
(declare-fun Tm_arrow_c314ab62524b1a2d1997954ac4c1ae99 () Term)
(declare-fun FStar.Pervasives.__proj__Mkdtuple3__item___2@tok () Term)
(declare-fun FStar.Pervasives.__proj__Mkdtuple3__item___3 (Term Term Term Term) Term)
(declare-fun Tm_arrow_bec8a4f6afbb1e18e2d9aca8cce42b29 () Term)
(declare-fun FStar.Pervasives.__proj__Mkdtuple3__item___3@tok () Term)
(declare-fun FStar.Pervasives.dtuple4 (Term Term Term Term) Term)
(declare-fun FStar.Pervasives.dtuple4@tok () Term)
(declare-fun Tm_arrow_dbf39bf049d72c3088e1ed84d246952d (Term Term Term) Term)
(declare-fun FStar.Pervasives.Mkdtuple4 (Term Term Term Term Term Term Term Term) Term)
(declare-fun FStar.Pervasives.Mkdtuple4_a (Term) Term)
(declare-fun FStar.Pervasives.Mkdtuple4_b (Term) Term)
(declare-fun FStar.Pervasives.Mkdtuple4_c (Term) Term)
(declare-fun FStar.Pervasives.Mkdtuple4_d (Term) Term)
(declare-fun FStar.Pervasives.Mkdtuple4__1 (Term) Term)
(declare-fun FStar.Pervasives.Mkdtuple4__2 (Term) Term)
(declare-fun FStar.Pervasives.Mkdtuple4__3 (Term) Term)
(declare-fun FStar.Pervasives.Mkdtuple4__4 (Term) Term)
(declare-fun Tm_arrow_bc432a638e8ded95e6543c5ef7d6cefa () Term)
(declare-fun FStar.Pervasives.Mkdtuple4@tok () Term)
(declare-fun FStar.Pervasives.uu___is_Mkdtuple4 (Term Term Term Term Term) Term)
(declare-fun Tm_arrow_08bfe555982713e1ba6b9cc3db1f9942 (Term) Term)
(declare-fun FStar.Pervasives.uu___is_Mkdtuple4@tok () Term)
(declare-fun FStar.Pervasives.__proj__Mkdtuple4__item___1 (Term Term Term Term Term) Term)
(declare-fun Tm_arrow_627359304a35057805507fd05f62a750 () Term)
(declare-fun FStar.Pervasives.__proj__Mkdtuple4__item___1@tok () Term)
(declare-fun FStar.Pervasives.__proj__Mkdtuple4__item___2 (Term Term Term Term Term) Term)
(declare-fun Tm_arrow_894aed5f2f01f9fc4bb62bf7e2d70f35 () Term)
(declare-fun FStar.Pervasives.__proj__Mkdtuple4__item___2@tok () Term)
(declare-fun FStar.Pervasives.__proj__Mkdtuple4__item___3 (Term Term Term Term Term) Term)
(declare-fun Tm_arrow_1dac41f442c1cc7b5405768e36ae98f9 () Term)
(declare-fun FStar.Pervasives.__proj__Mkdtuple4__item___3@tok () Term)
(declare-fun FStar.Pervasives.__proj__Mkdtuple4__item___4 (Term Term Term Term Term) Term)
(declare-fun Tm_arrow_f17dd97b1f287869d6a3add69232601b () Term)
(declare-fun FStar.Pervasives.__proj__Mkdtuple4__item___4@tok () Term)
(declare-fun FStar.Pervasives.ignore (Term Term) Term)
(declare-fun FStar.Pervasives.ignore@tok () Term)
(declare-fun FStar.Pervasives_Tm_refine_16d7dda25a162db0722685f27f707102 (Term) Term)
(declare-fun FStar.Pervasives.false_elim (Term Term) Term)
(declare-fun Tm_arrow_a3b523cfd66a616c0e641efdb75e9e3e (Term) Term)
(declare-fun FStar.Pervasives.false_elim@tok () Term)
(declare-fun FStar.Pervasives.__internal_ocaml_attributes () Term)
(declare-fun FStar.Pervasives.PpxDerivingShow () Term)
(declare-fun FStar.Pervasives.PpxDerivingShow@tok () Term)
(declare-fun FStar.Pervasives.PpxDerivingShowConstant (Term) Term)
(declare-fun FStar.Pervasives.PpxDerivingShowConstant__0 (Term) Term)
(declare-fun Tm_arrow_53506eda6d12f67a8e4b3ea75d309e23 (Term) Term)
(declare-fun FStar.Pervasives.PpxDerivingShowConstant@tok () Term)
(declare-fun FStar.Pervasives.PpxDerivingYoJson () Term)
(declare-fun FStar.Pervasives.PpxDerivingYoJson@tok () Term)
(declare-fun FStar.Pervasives.CInline () Term)
(declare-fun FStar.Pervasives.CInline@tok () Term)
(declare-fun FStar.Pervasives.Substitute () Term)
(declare-fun FStar.Pervasives.Substitute@tok () Term)
(declare-fun FStar.Pervasives.Gc () Term)
(declare-fun FStar.Pervasives.Gc@tok () Term)
(declare-fun FStar.Pervasives.Comment (Term) Term)
(declare-fun FStar.Pervasives.Comment__0 (Term) Term)
(declare-fun FStar.Pervasives.Comment@tok () Term)
(declare-fun FStar.Pervasives.CPrologue (Term) Term)
(declare-fun FStar.Pervasives.CPrologue__0 (Term) Term)
(declare-fun FStar.Pervasives.CPrologue@tok () Term)
(declare-fun FStar.Pervasives.CEpilogue (Term) Term)
(declare-fun FStar.Pervasives.CEpilogue__0 (Term) Term)
(declare-fun FStar.Pervasives.CEpilogue@tok () Term)
(declare-fun FStar.Pervasives.CConst (Term) Term)
(declare-fun FStar.Pervasives.CConst__0 (Term) Term)
(declare-fun FStar.Pervasives.CConst@tok () Term)
(declare-fun FStar.Pervasives.uu___is_PpxDerivingShow (Term) Term)
(declare-fun Tm_arrow_2c5c4d02fbece15e63160b3c87c78b01 (Term) Term)
(declare-fun FStar.Pervasives.uu___is_PpxDerivingShow@tok () Term)
(declare-fun FStar.Pervasives.uu___is_PpxDerivingShowConstant (Term) Term)
(declare-fun FStar.Pervasives.uu___is_PpxDerivingShowConstant@tok () Term)
(declare-fun FStar.Pervasives_Tm_refine_564db2f0aa0878b4d96c60508be3dd36 () Term)
(declare-fun FStar.Pervasives.__proj__PpxDerivingShowConstant__item___0 (Term) Term)
(declare-fun Tm_arrow_a7b615889edcbdfadf24ad49f4c2628e (Term) Term)
(declare-fun FStar.Pervasives.__proj__PpxDerivingShowConstant__item___0@tok () Term)
(declare-fun FStar.Pervasives.uu___is_PpxDerivingYoJson (Term) Term)
(declare-fun FStar.Pervasives.uu___is_PpxDerivingYoJson@tok () Term)
(declare-fun FStar.Pervasives.uu___is_CInline (Term) Term)
(declare-fun FStar.Pervasives.uu___is_CInline@tok () Term)
(declare-fun FStar.Pervasives.uu___is_Substitute (Term) Term)
(declare-fun FStar.Pervasives.uu___is_Substitute@tok () Term)
(declare-fun FStar.Pervasives.uu___is_Gc (Term) Term)
(declare-fun FStar.Pervasives.uu___is_Gc@tok () Term)
(declare-fun FStar.Pervasives.uu___is_Comment (Term) Term)
(declare-fun FStar.Pervasives.uu___is_Comment@tok () Term)
(declare-fun FStar.Pervasives_Tm_refine_c53089e2d20d1b0f5a267296ac8e45f0 () Term)
(declare-fun FStar.Pervasives.__proj__Comment__item___0 (Term) Term)
(declare-fun Tm_arrow_51b345975888169ae4f69613c826965e (Term) Term)
(declare-fun FStar.Pervasives.__proj__Comment__item___0@tok () Term)
(declare-fun FStar.Pervasives.uu___is_CPrologue (Term) Term)
(declare-fun FStar.Pervasives.uu___is_CPrologue@tok () Term)
(declare-fun FStar.Pervasives_Tm_refine_ac46c1a2a06ce46a180e0eda48004c47 () Term)
(declare-fun FStar.Pervasives.__proj__CPrologue__item___0 (Term) Term)
(declare-fun Tm_arrow_414ca6c3d38bb3e0864e4a9d0cd19766 (Term) Term)
(declare-fun FStar.Pervasives.__proj__CPrologue__item___0@tok () Term)
(declare-fun FStar.Pervasives.uu___is_CEpilogue (Term) Term)
(declare-fun FStar.Pervasives.uu___is_CEpilogue@tok () Term)
(declare-fun FStar.Pervasives_Tm_refine_47384bef739d1f0729fd782d351dc9a5 () Term)
(declare-fun FStar.Pervasives.__proj__CEpilogue__item___0 (Term) Term)
(declare-fun Tm_arrow_1dca680c8d3cb58c552551782d77cbad (Term) Term)
(declare-fun FStar.Pervasives.__proj__CEpilogue__item___0@tok () Term)
(declare-fun FStar.Pervasives.uu___is_CConst (Term) Term)
(declare-fun FStar.Pervasives.uu___is_CConst@tok () Term)
(declare-fun FStar.Pervasives_Tm_refine_5036c6b2983454bc3afeffcba3f00f50 () Term)
(declare-fun FStar.Pervasives.__proj__CConst__item___0 (Term) Term)
(declare-fun Tm_arrow_50d480c53f6a4b67c098ecbee395c271 (Term) Term)
(declare-fun FStar.Pervasives.__proj__CConst__item___0@tok () Term)
(declare-fun FStar.Pervasives.deprecated (Term) Term)
(declare-fun FStar.Pervasives.deprecated@tok () Term)
(declare-fun FStar.Pervasives.inline_let () Term)
(declare-fun FStar.Pervasives.plugin () Term)
(declare-fun FStar.Pervasives.must_erase_for_extraction () Term)
(declare-fun FStar.Pervasives.dm4f_bind_range () Term)
(declare-fun FStar.Pervasives.fail (Term) Term)
(declare-fun FStar.Pervasives.fail@tok () Term)
(declare-fun FStar.Pervasives.fail_lax () Term)
(declare-fun FStar.Pervasives.assume_strictly_positive () Term)
(declare-fun False.relation (Term) Term)
(declare-fun False.relation@tok () Term)
(declare-fun Tm_arrow_76a60dab4e3b3182a3b4dae5a57cfb2d (Term) Term)
(declare-fun False.preorder (Term) Term)
(declare-fun False.preorder@tok () Term)
(declare-fun False_Tm_refine_74ff667701f75cfbefa2fd1da9dbdc13 (Term) Term)
(declare-fun False.calc_proof (Term Term Term Term) Term)
(declare-fun False.calc_proof@tok () Term)
(declare-fun False.CalcRefl (Term Term) Term)
(declare-fun False.CalcRefl_t (Term) Term)
(declare-fun False.CalcRefl_x (Term) Term)
(declare-fun Tm_arrow_01af5ab61334f3cf5e140ba023176d9a () Term)
(declare-fun False.CalcRefl@tok () Term)
(declare-fun False.CalcStep (Term Term Term Term Term Term Term Term) Term)
(declare-fun False.CalcStep_t (Term) Term)
(declare-fun False.CalcStep_rs (Term) Term)
(declare-fun False.CalcStep_p (Term) Term)
(declare-fun False.CalcStep_x (Term) Term)
(declare-fun False.CalcStep_y (Term) Term)
(declare-fun False.CalcStep_z (Term) Term)
(declare-fun False.CalcStep__5 (Term) Term)
(declare-fun False.CalcStep__6 (Term) Term)
(declare-fun Tm_arrow_b0a698cf4739f4ff0d04a8f64ce9f32f () Term)
(declare-fun False.CalcStep@tok () Term)
(declare-fun False.uu___is_CalcRefl (Term Term Term Term Term) Term)
(declare-fun Tm_arrow_9eaf2ac78d771b56d59474a450ebd43c (Term) Term)
(declare-fun False.uu___is_CalcRefl@tok () Term)
(declare-fun False_Tm_refine_253153fea998a3a502df455711574c4d (Term Term Term Term) Term)
(declare-fun False.__proj__CalcRefl__item__x (Term Term Term Term Term) Term)
(declare-fun Tm_arrow_14bcecce05a6e15aa540694546ee26ed () Term)
(declare-fun False.__proj__CalcRefl__item__x@tok () Term)
(declare-fun False.uu___is_CalcStep (Term Term Term Term Term) Term)
(declare-fun False.uu___is_CalcStep@tok () Term)
(declare-fun False_Tm_refine_c7c1219b2b697290706c3cb902d0c0fb (Term Term Term Term) Term)
(declare-fun False.__proj__CalcStep__item__rs (Term Term Term Term Term) Term)
(declare-fun Tm_arrow_88445f768cf4024bacb21baa68bdff2b () Term)
(declare-fun False.__proj__CalcStep__item__rs@tok () Term)
(declare-fun False.__proj__CalcStep__item__p (Term Term Term Term Term) Term)
(declare-fun Tm_arrow_e4d7b27ac8277ab0ab77e116a8906fa4 () Term)
(declare-fun False.__proj__CalcStep__item__p@tok () Term)
(declare-fun False.__proj__CalcStep__item__x (Term Term Term Term Term) Term)
(declare-fun Tm_arrow_feb6e9b0823403b824ec87356300d43e () Term)
(declare-fun False.__proj__CalcStep__item__x@tok () Term)
(declare-fun False.__proj__CalcStep__item__y (Term Term Term Term Term) Term)
(declare-fun False.__proj__CalcStep__item__y@tok () Term)
(declare-fun False.__proj__CalcStep__item__z (Term Term Term Term Term) Term)
(declare-fun False.__proj__CalcStep__item__z@tok () Term)
(declare-fun False.__proj__CalcStep__item___5 (Term Term Term Term Term) Term)
(declare-fun Tm_arrow_3892eda38ed5a9b6d9aa7ad2635088fc () Term)
(declare-fun False.__proj__CalcStep__item___5@tok () Term)
(declare-fun False.__proj__CalcStep__item___6 (Term Term Term Term Term) Term)
(declare-fun Tm_arrow_f3a6f55103b1d9f09f2c9d33389125e1 () Term)
(declare-fun False.__proj__CalcStep__item___6@tok () Term)
(declare-fun False.init (Term Term) Term)
(declare-fun False.init@tok () Term)
(declare-fun Tm_arrow_b876badf58234251d7cd1ca0d2659f12 (Term Term Term Term Term) Term)
(declare-fun Tm_arrow_6cdb49601bd9255655221b5bfb8efb6f (Term Term Term Term) Term)
(declare-fun False.step (Term Term Term Term Term Term Term Term) Term)
(declare-fun Tm_arrow_2d7f2b032d9f59f51dc6a0b9dd727adc (Term) Term)
(declare-fun False.step@tok () Term)
(declare-fun False.r1 () Term)
(declare-fun False.r2 () Term)
(declare-fun Tm_arrow_637c9767c7a2c264e0a7f2bd68427abf (Term Term Term) Term)
(declare-fun Tm_arrow_14950698eb45c81a0e8055b3844caf01 (Term Term) Term)
(declare-fun Tm_arrow_6c8a344d1f126f59d9c6304a0bfbc84a (Term Term) Term)
(declare-fun False_Tm_abs_9ac3dd8deb7277a6b94e52d999a4b8c7 (Term Term) Term)
(declare-fun Tm_arrow_fc31a65eb1baad4caf91e28652535209 (Term Term) Term)
(declare-fun False_Tm_abs_2be0aece0b6cba4fbd785a965d99ed1c (Term Term) Term)
(declare-fun False_Tm_abs_88557b3f5b7ee160d0bedb3d1195c252 (Term Term Term) Term)
(declare-fun HasTypeZ (Term Term) Bool)
(declare-fun HasType (Term Term) Bool)
(declare-fun is-Tm_arrow (Term) Bool)
(declare-fun is-BoxInt (Term) Bool)
(declare-fun is-BoxBool (Term) Bool)
(declare-fun is-BoxString (Term) Bool)
(declare-fun is-LexCons (Term) Bool)
(declare-fun is-Prims.T (Term) Bool)
(declare-fun is-Prims.Refl (Term) Bool)
(declare-fun is-Prims.HRefl (Term) Bool)
(declare-fun is-Prims.And (Term) Bool)
(declare-fun is-Prims.Left (Term) Bool)
(declare-fun is-Prims.Right (Term) Bool)
(declare-fun is-Prims.Mkdtuple2 (Term) Bool)
(declare-fun is-Prims.Nil (Term) Bool)
(declare-fun is-Prims.Cons (Term) Bool)
(declare-fun is-Prims.LexTop (Term) Bool)
(declare-fun is-FStar.Pervasives.Native.None (Term) Bool)
(declare-fun is-FStar.Pervasives.Native.Some (Term) Bool)
(declare-fun is-FStar.Pervasives.Native.Mktuple2 (Term) Bool)
(declare-fun is-FStar.Pervasives.Native.Mktuple3 (Term) Bool)
(declare-fun is-FStar.Pervasives.Native.Mktuple4 (Term) Bool)
(declare-fun is-FStar.Pervasives.Native.Mktuple5 (Term) Bool)
(declare-fun is-FStar.Pervasives.Native.Mktuple6 (Term) Bool)
(declare-fun is-FStar.Pervasives.Native.Mktuple7 (Term) Bool)
(declare-fun is-FStar.Pervasives.Native.Mktuple8 (Term) Bool)
(declare-fun is-FStar.Pervasives.V (Term) Bool)
(declare-fun is-FStar.Pervasives.E (Term) Bool)
(declare-fun is-FStar.Pervasives.Err (Term) Bool)
(declare-fun is-FStar.Pervasives.Inl (Term) Bool)
(declare-fun is-FStar.Pervasives.Inr (Term) Bool)
(declare-fun is-FStar.Pervasives.Mkdtuple3 (Term) Bool)
(declare-fun is-FStar.Pervasives.Mkdtuple4 (Term) Bool)
(declare-fun is-FStar.Pervasives.PpxDerivingShow (Term) Bool)
(declare-fun is-FStar.Pervasives.PpxDerivingShowConstant (Term) Bool)
(declare-fun is-FStar.Pervasives.PpxDerivingYoJson (Term) Bool)
(declare-fun is-FStar.Pervasives.CInline (Term) Bool)
(declare-fun is-FStar.Pervasives.Substitute (Term) Bool)
(declare-fun is-FStar.Pervasives.Gc (Term) Bool)
(declare-fun is-FStar.Pervasives.Comment (Term) Bool)
(declare-fun is-FStar.Pervasives.CPrologue (Term) Bool)
(declare-fun is-FStar.Pervasives.CEpilogue (Term) Bool)
(declare-fun is-FStar.Pervasives.CConst (Term) Bool)
(declare-fun is-False.CalcRefl (Term) Bool)
(declare-fun is-False.CalcStep (Term) Bool)
(declare-fun is-Prims.LexCons (Term) Bool)
(declare-fun e!0 (Term) Term)
(declare-fun @x5!1 (Term Term Term) Term)
(declare-fun @x4!2 (Term Term Term) Term)
(declare-fun @x3!3 (Term Term Term) Term)
(declare-fun @x6!5 (Term Term Term Term) Term)
(declare-fun @x7!4 (Term Term Term Term) Term)
(declare-fun @x5!6 (Term Term Term Term) Term)
(declare-fun @x4!7 (Term Term Term Term) Term)
(declare-fun @x3!8 (Term Term) Term)
(declare-fun @x2!9 (Term Term) Term)
(declare-fun @x6!10 (Term Term Term Term) Term)
(declare-fun @x6!12 (Term Term) Term)
(declare-fun @x5!13 (Term Term Term Term Term) Term)
(declare-fun @x7!11 (Term Term) Term)
(declare-fun @x5!14 (Term Term Term) Term)
(declare-fun @x4!15 (Term Term Term) Term)
(declare-fun @x4!17 (Term Term Term Term) Term)
(declare-fun @x5!16 (Term Term Term Term) Term)
(declare-fun @x3!18 (Term Term Term) Term)
(declare-fun @x7!19 (Term Term) Term)
(declare-fun @x6!20 (Term Term Term Term Term) Term)
(declare-fun @x4!21 (Term Term Term) Term)
(declare-fun @x3!23 (Term Term Term) Term)
(declare-fun @x4!22 (Term Term) Term)
(declare-fun @x2!24 (Term Term) Term)
(declare-fun @x3!25 (Term Term Term) Term)
(declare-fun @x6!26 (Term Term Term Term) Term)
(declare-fun @x6!28 (Term Term) Term)
(declare-fun @x7!27 (Term Term) Term)
(declare-fun @x5!29 (Term Term Term Term Term) Term)
(declare-fun @x4!31 (Term Term Term) Term)
(declare-fun @x5!30 (Term Term Term) Term)
(declare-fun @x5!32 (Term Term Term Term) Term)
(declare-fun @x4!33 (Term Term Term Term) Term)
(declare-fun @x3!34 (Term Term Term) Term)
(declare-fun z3name!35 (Term) Term)
(declare-fun z3name!36 (Term Term) Term)
(declare-fun z3name!37 (Term Fuel) Term)
(declare-fun @x1!39 (Term) Term)
(declare-fun @x2!38 (Term) Term)
(declare-fun @x2!47 (Term Term) Term)
(declare-fun @x5!44 (Term Term) Term)
(declare-fun @x8!41 (Term Term) Term)
(declare-fun @x6!43 (Term Term) Term)
(declare-fun @x4!45 (Term Term) Term)
(declare-fun @x3!46 (Term Term) Term)
(declare-fun @x9!40 (Term Term) Term)
(declare-fun @x7!42 (Term Term) Term)
(declare-fun @x3!48 (Term Term Term) Term)
(declare-fun @x5!49 (Term Term Term Term Term) Term)
(declare-fun @x3!53 (Term Term) Term)
(declare-fun @x5!51 (Term Term) Term)
(declare-fun @x6!50 (Term Term) Term)
(declare-fun @x2!54 (Term Term) Term)
(declare-fun @x4!52 (Term Term) Term)
(declare-fun @x5!55 (Term) Term)
(declare-fun @x3!57 (Term) Term)
(declare-fun @x4!56 (Term) Term)
(declare-fun @x1!59 (Term) Term)
(declare-fun @x2!58 (Term) Term)
(declare-fun @x2!61 (Term Term) Term)
(declare-fun @x3!60 (Term Term) Term)
(declare-fun @x4!62 (Term Term Term Term) Term)
(declare-fun @x3!65 (Term) Term)
(declare-fun @x2!66 (Term) Term)
(declare-fun @x4!64 (Term) Term)
(declare-fun @x5!63 (Term) Term)
(declare-fun @x1!67 (Term) Term)
(declare-fun @x4!69 (Term) Term)
(declare-fun @x5!68 (Term) Term)
(declare-fun @x1!72 (Term) Term)
(declare-fun @x3!70 (Term) Term)
(declare-fun @x2!71 (Term) Term)
(declare-fun @x3!73 (Term Term Term) Term)
(declare-fun @x8!74 (Term) Term)
(declare-fun @x6!76 (Term) Term)
(declare-fun @x3!79 (Term) Term)
(declare-fun @x7!75 (Term) Term)
(declare-fun @x1!81 (Term) Term)
(declare-fun @x4!78 (Term) Term)
(declare-fun @x5!77 (Term) Term)
(declare-fun @x2!80 (Term) Term)
(declare-fun @x6!82 (Term Term Term Term Term Term) Term)
(declare-fun @x5!83 (Term) Term)
(declare-fun @x4!84 (Term) Term)
(declare-fun @x1!87 (Term) Term)
(declare-fun @x2!86 (Term) Term)
(declare-fun @x3!85 (Term) Term)
(declare-fun @x1!92 (Term) Term)
(declare-fun @x4!89 (Term) Term)
(declare-fun @x5!88 (Term) Term)
(declare-fun @x2!91 (Term) Term)
(declare-fun @x3!90 (Term) Term)
(declare-fun @x3!93 (Term Term Term) Term)
(declare-fun @x5!94 (Term) Term)
(declare-fun @x3!96 (Term) Term)
(declare-fun @x2!97 (Term) Term)
(declare-fun @x4!95 (Term) Term)
(declare-fun @x1!98 (Term) Term)
(declare-fun @x2!103 (Term) Term)
(declare-fun @x3!102 (Term) Term)
(declare-fun @x4!101 (Term) Term)
(declare-fun @x1!104 (Term) Term)
(declare-fun @x5!100 (Term) Term)
(declare-fun @x6!99 (Term) Term)
(declare-fun @x2!107 (Term Term) Term)
(declare-fun @x3!106 (Term Term) Term)
(declare-fun @x4!105 (Term Term) Term)
(declare-fun @x9!108 (Term) Term)
(declare-fun @x5!112 (Term) Term)
(declare-fun @x4!113 (Term) Term)
(declare-fun @x2!115 (Term) Term)
(declare-fun @x7!110 (Term) Term)
(declare-fun @x6!111 (Term) Term)
(declare-fun @x1!116 (Term) Term)
(declare-fun @x3!114 (Term) Term)
(declare-fun @x8!109 (Term) Term)
(declare-fun @x2!117 (Term Term) Term)
(declare-fun @x5!118 (Term) Term)
(declare-fun @x3!120 (Term) Term)
(declare-fun @x4!119 (Term) Term)
(declare-fun @x2!121 (Term) Term)
(declare-fun @x1!122 (Term) Term)
(declare-fun @x14!123 (Term) Term)
(declare-fun @x12!125 (Term) Term)
(declare-fun @x1!136 (Term) Term)
(declare-fun @x13!124 (Term) Term)
(declare-fun @x8!129 (Term) Term)
(declare-fun @x2!135 (Term) Term)
(declare-fun @x10!127 (Term) Term)
(declare-fun @x4!133 (Term) Term)
(declare-fun @x11!126 (Term) Term)
(declare-fun @x9!128 (Term) Term)
(declare-fun @x5!132 (Term) Term)
(declare-fun @x7!130 (Term) Term)
(declare-fun @x3!134 (Term) Term)
(declare-fun @x6!131 (Term) Term)
(declare-fun @x2!137 (Term) Term)
(declare-fun @x1!138 (Term) Term)
(declare-fun @x2!140 (Term Term) Term)
(declare-fun @x3!139 (Term Term) Term)
(declare-fun @x1!152 (Term) Term)
(declare-fun @x10!143 (Term) Term)
(declare-fun @x11!142 (Term) Term)
(declare-fun @x5!148 (Term) Term)
(declare-fun @x3!150 (Term) Term)
(declare-fun @x9!144 (Term) Term)
(declare-fun @x8!145 (Term) Term)
(declare-fun @x7!146 (Term) Term)
(declare-fun @x12!141 (Term) Term)
(declare-fun @x6!147 (Term) Term)
(declare-fun @x4!149 (Term) Term)
(declare-fun @x2!151 (Term) Term)
(declare-fun @x1!159 (Term) Term)
(declare-fun @x3!157 (Term) Term)
(declare-fun @x2!158 (Term) Term)
(declare-fun @x7!153 (Term) Term)
(declare-fun @x6!154 (Term) Term)
(declare-fun @x5!155 (Term) Term)
(declare-fun @x4!156 (Term) Term)
(declare-fun @x2!161 (Term) Term)
(declare-fun @x3!160 (Term) Term)
(declare-fun @x1!162 (Term) Term)
(declare-fun @x6!165 (Term) Term)
(declare-fun @x4!167 (Term) Term)
(declare-fun @x7!164 (Term) Term)
(declare-fun @x5!166 (Term) Term)
(declare-fun @x1!170 (Term) Term)
(declare-fun @x8!163 (Term) Term)
(declare-fun @x2!169 (Term) Term)
(declare-fun @x3!168 (Term) Term)
(declare-fun @x5!173 (Term) Term)
(declare-fun @x2!176 (Term) Term)
(declare-fun @x3!175 (Term) Term)
(declare-fun @x1!177 (Term) Term)
(declare-fun @x4!174 (Term) Term)
(declare-fun @x6!172 (Term) Term)
(declare-fun @x7!171 (Term) Term)
(declare-fun @x2!178 (Term) Term)
(declare-fun @x1!179 (Term) Term)
(declare-fun @x4!183 (Term) Term)
(declare-fun @x5!182 (Term) Term)
(declare-fun @x7!180 (Term) Term)
(declare-fun @x2!185 (Term) Term)
(declare-fun @x6!181 (Term) Term)
(declare-fun @x1!186 (Term) Term)
(declare-fun @x3!184 (Term) Term)
(declare-fun @x2!187 (Term Term) Term)
(declare-fun @x7!188 (Term) Term)
(declare-fun @x5!190 (Term) Term)
(declare-fun @x1!194 (Term) Term)
(declare-fun @x2!193 (Term) Term)
(declare-fun @x3!192 (Term) Term)
(declare-fun @x6!189 (Term) Term)
(declare-fun @x4!191 (Term) Term)
(declare-fun @x3!195 (Term Term Term) Term)
(declare-fun @x3!196 (Term Term Term) Term)
(declare-fun @x8!197 (Term) Term)
(declare-fun @x7!198 (Term) Term)
(declare-fun @x3!202 (Term) Term)
(declare-fun @x1!204 (Term) Term)
(declare-fun @x4!201 (Term) Term)
(declare-fun @x2!203 (Term) Term)
(declare-fun @x6!199 (Term) Term)
(declare-fun @x5!200 (Term) Term)
(declare-fun @x4!208 (Term Term) Term)
(declare-fun @x3!209 (Term Term) Term)
(declare-fun @x6!206 (Term Term) Term)
(declare-fun @x7!205 (Term Term) Term)
(declare-fun @x5!207 (Term Term) Term)
(declare-fun @x2!210 (Term Term) Term)
(declare-fun @x4!212 (Term Term) Term)
(declare-fun @x3!213 (Term Term) Term)
(declare-fun @x2!214 (Term Term) Term)
(declare-fun @x5!211 (Term Term) Term)
(declare-fun @x4!219 (Term) Term)
(declare-fun @x7!216 (Term) Term)
(declare-fun @x5!218 (Term) Term)
(declare-fun @x3!220 (Term) Term)
(declare-fun @x6!217 (Term) Term)
(declare-fun @x8!215 (Term) Term)
(declare-fun @x1!222 (Term) Term)
(declare-fun @x2!221 (Term) Term)
(declare-fun @x4!229 (Term Term) Term)
(declare-fun @x9!224 (Term Term) Term)
(declare-fun @x7!226 (Term Term) Term)
(declare-fun @x2!231 (Term Term) Term)
(declare-fun @x5!228 (Term Term) Term)
(declare-fun @x6!227 (Term Term) Term)
(declare-fun @x8!225 (Term Term) Term)
(declare-fun @x3!230 (Term Term) Term)
(declare-fun @x10!223 (Term Term) Term)
(declare-fun @x5!233 (Term Term) Term)
(declare-fun @x2!236 (Term Term) Term)
(declare-fun @x3!235 (Term Term) Term)
(declare-fun @x4!234 (Term Term) Term)
(declare-fun @x6!232 (Term Term) Term)
(declare-fun @x4!237 (Term) Term)
(declare-fun @x2!239 (Term) Term)
(declare-fun @x3!238 (Term) Term)
(declare-fun @x1!240 (Term) Term)
(declare-fun @x5!241 (Term) Term)
(declare-fun @x4!242 (Term) Term)
(declare-fun @x1!245 (Term) Term)
(declare-fun @x2!244 (Term) Term)
(declare-fun @x3!243 (Term) Term)
(declare-fun @x1!253 (Term) Term)
(declare-fun @x3!251 (Term) Term)
(declare-fun @x6!248 (Term) Term)
(declare-fun @x8!246 (Term) Term)
(declare-fun @x4!250 (Term) Term)
(declare-fun @x2!252 (Term) Term)
(declare-fun @x7!247 (Term) Term)
(declare-fun @x5!249 (Term) Term)
(declare-fun @x4!257 (Term) Term)
(declare-fun @x6!255 (Term) Term)
(declare-fun @x3!258 (Term) Term)
(declare-fun @x5!256 (Term) Term)
(declare-fun @x7!254 (Term) Term)
(declare-fun @x2!259 (Term) Term)
(declare-fun @x1!260 (Term) Term)
(declare-fun @x4!264 (Term) Term)
(declare-fun @x7!261 (Term) Term)
(declare-fun @x6!262 (Term) Term)
(declare-fun @x1!267 (Term) Term)
(declare-fun @x3!265 (Term) Term)
(declare-fun @x5!263 (Term) Term)
(declare-fun @x2!266 (Term) Term)
(declare-fun @x3!271 (Term) Term)
(declare-fun @x5!269 (Term) Term)
(declare-fun @x6!268 (Term) Term)
(declare-fun @x2!272 (Term) Term)
(declare-fun @x4!270 (Term) Term)
(declare-fun @x1!273 (Term) Term)
(declare-fun @x14!276 (Term) Term)
(declare-fun @x6!284 (Term) Term)
(declare-fun @x9!281 (Term) Term)
(declare-fun @x12!278 (Term) Term)
(declare-fun @x1!289 (Term) Term)
(declare-fun @x11!279 (Term) Term)
(declare-fun @x8!282 (Term) Term)
(declare-fun @x16!274 (Term) Term)
(declare-fun @x13!277 (Term) Term)
(declare-fun @x10!280 (Term) Term)
(declare-fun @x3!287 (Term) Term)
(declare-fun @x5!285 (Term) Term)
(declare-fun @x7!283 (Term) Term)
(declare-fun @x4!286 (Term) Term)
(declare-fun @x15!275 (Term) Term)
(declare-fun @x2!288 (Term) Term)
(declare-fun @x6!290 (Term) Term)
(declare-fun @x4!292 (Term) Term)
(declare-fun @x2!294 (Term) Term)
(declare-fun @x3!293 (Term) Term)
(declare-fun @x1!295 (Term) Term)
(declare-fun @x5!291 (Term) Term)
(declare-fun @x8!296 (Term) Term)
(declare-fun @x6!298 (Term) Term)
(declare-fun @x4!300 (Term) Term)
(declare-fun @x7!297 (Term) Term)
(declare-fun @x1!303 (Term) Term)
(declare-fun @x3!301 (Term) Term)
(declare-fun @x2!302 (Term) Term)
(declare-fun @x5!299 (Term) Term)
(declare-fun @x7!306 (Term) Term)
(declare-fun @x1!312 (Term) Term)
(declare-fun @x2!311 (Term) Term)
(declare-fun @x8!305 (Term) Term)
(declare-fun @x4!309 (Term) Term)
(declare-fun @x3!310 (Term) Term)
(declare-fun @x6!307 (Term) Term)
(declare-fun @x9!304 (Term) Term)
(declare-fun @x5!308 (Term) Term)
(declare-fun @x1!313 (Term) Term)
(declare-fun @x1!321 (Term) Term)
(declare-fun @x7!315 (Term) Term)
(declare-fun @x4!318 (Term) Term)
(declare-fun @x3!319 (Term) Term)
(declare-fun @x2!320 (Term) Term)
(declare-fun @x6!316 (Term) Term)
(declare-fun @x8!314 (Term) Term)
(declare-fun @x5!317 (Term) Term)
(declare-fun @x5!322 (Term) Term)
(declare-fun @x1!326 (Term) Term)
(declare-fun @x3!324 (Term) Term)
(declare-fun @x4!323 (Term) Term)
(declare-fun @x2!325 (Term) Term)
(declare-fun @x5!327 (Term) Term)
(declare-fun @x4!328 (Term) Term)
(declare-fun @x2!330 (Term) Term)
(declare-fun @x1!331 (Term) Term)
(declare-fun @x3!329 (Term) Term)
(declare-fun @x3!338 (Term) Term)
(declare-fun @x4!337 (Term) Term)
(declare-fun @x2!339 (Term) Term)
(declare-fun @x5!336 (Term) Term)
(declare-fun @x1!340 (Term) Term)
(declare-fun @x6!335 (Term) Term)
(declare-fun @x7!334 (Term) Term)
(declare-fun @x8!333 (Term) Term)
(declare-fun @x9!332 (Term) Term)
(declare-fun @x3!347 (Term) Term)
(declare-fun @x2!348 (Term) Term)
(declare-fun @x1!349 (Term) Term)
(declare-fun @x4!346 (Term) Term)
(declare-fun @x8!342 (Term) Term)
(declare-fun @x6!344 (Term) Term)
(declare-fun @x7!343 (Term) Term)
(declare-fun @x9!341 (Term) Term)
(declare-fun @x5!345 (Term) Term)
(declare-fun @x4!356 (Term) Term)
(declare-fun @x1!359 (Term) Term)
(declare-fun @x8!352 (Term) Term)
(declare-fun @x3!357 (Term) Term)
(declare-fun @x10!350 (Term) Term)
(declare-fun @x7!353 (Term) Term)
(declare-fun @x2!358 (Term) Term)
(declare-fun @x6!354 (Term) Term)
(declare-fun @x9!351 (Term) Term)
(declare-fun @x5!355 (Term) Term)
(declare-fun @x8!361 (Term) Term)
(declare-fun @x3!366 (Term) Term)
(declare-fun @x6!363 (Term) Term)
(declare-fun @x2!367 (Term) Term)
(declare-fun @x5!364 (Term) Term)
(declare-fun @x4!365 (Term) Term)
(declare-fun @x9!360 (Term) Term)
(declare-fun @x7!362 (Term) Term)
(declare-fun @x1!368 (Term) Term)
(declare-fun @x2!373 (Term) Term)
(declare-fun @x1!374 (Term) Term)
(declare-fun @x6!369 (Term) Term)
(declare-fun @x4!371 (Term) Term)
(declare-fun @x3!372 (Term) Term)
(declare-fun @x5!370 (Term) Term)
(declare-fun @x2!381 (Term Term) Term)
(declare-fun @x7!376 (Term Term) Term)
(declare-fun @x8!375 (Term Term) Term)
(declare-fun @x3!380 (Term Term) Term)
(declare-fun @x5!378 (Term Term) Term)
(declare-fun @x6!377 (Term Term) Term)
(declare-fun @x4!379 (Term Term) Term)
(declare-fun @x9!382 (Term Term) Term)
(declare-fun @x5!386 (Term Term) Term)
(declare-fun @x4!387 (Term Term) Term)
(declare-fun @x7!384 (Term Term) Term)
(declare-fun @x3!388 (Term Term) Term)
(declare-fun @x6!385 (Term Term) Term)
(declare-fun @x2!389 (Term Term) Term)
(declare-fun @x8!383 (Term Term) Term)
(declare-fun @x4!392 (Term) Term)
(declare-fun @x5!391 (Term) Term)
(declare-fun @x1!395 (Term) Term)
(declare-fun @x2!394 (Term) Term)
(declare-fun @x6!390 (Term) Term)
(declare-fun @x3!393 (Term) Term)
(declare-fun @x3!396 (Term) Term)
(declare-fun @x2!397 (Term) Term)
(declare-fun @x1!398 (Term) Term)
(declare-fun @x4!399 (Term) Term)
(declare-fun @x2!401 (Term) Term)
(declare-fun @x3!400 (Term) Term)
(declare-fun @x1!402 (Term) Term)
(declare-fun @x2!409 (Term) Term)
(declare-fun @x5!406 (Term) Term)
(declare-fun @x7!404 (Term) Term)
(declare-fun @x3!408 (Term) Term)
(declare-fun @x8!403 (Term) Term)
(declare-fun @x6!405 (Term) Term)
(declare-fun @x1!410 (Term) Term)
(declare-fun @x4!407 (Term) Term)
(declare-fun @x2!413 (Term Term) Term)
(declare-fun @x3!412 (Term Term) Term)
(declare-fun @x4!411 (Term Term) Term)
(declare-fun @x8!415 (Term) Term)
(declare-fun @x1!422 (Term) Term)
(declare-fun @x6!417 (Term) Term)
(declare-fun @x9!414 (Term) Term)
(declare-fun @x5!418 (Term) Term)
(declare-fun @x3!420 (Term) Term)
(declare-fun @x2!421 (Term) Term)
(declare-fun @x4!419 (Term) Term)
(declare-fun @x7!416 (Term) Term)
(declare-fun @x7!425 (Term) Term)
(declare-fun @x5!427 (Term) Term)
(declare-fun @x1!431 (Term) Term)
(declare-fun @x2!430 (Term) Term)
(declare-fun @x6!426 (Term) Term)
(declare-fun @x8!424 (Term) Term)
(declare-fun @x9!423 (Term) Term)
(declare-fun @x3!429 (Term) Term)
(declare-fun @x4!428 (Term) Term)
(declare-fun @x3!432 (Term Term Term) Term)
(declare-fun @x7!434 (Term) Term)
(declare-fun @x2!439 (Term) Term)
(declare-fun @x4!437 (Term) Term)
(declare-fun @x8!433 (Term) Term)
(declare-fun @x6!435 (Term) Term)
(declare-fun @x1!440 (Term) Term)
(declare-fun @x3!438 (Term) Term)
(declare-fun @x5!436 (Term) Term)
(declare-fun @x1!442 (Term) Term)
(declare-fun @x2!441 (Term) Term)
(declare-fun @x1!446 (Term) Term)
(declare-fun @x2!445 (Term) Term)
(declare-fun @x4!443 (Term) Term)
(declare-fun @x3!444 (Term) Term)
(declare-fun @x1!450 (Term) Term)
(declare-fun @x3!448 (Term) Term)
(declare-fun @x2!449 (Term) Term)
(declare-fun @x4!447 (Term) Term)
(declare-fun @x2!451 (Term Term) Term)
(declare-fun @x2!456 (Term) Term)
(declare-fun @x5!453 (Term) Term)
(declare-fun @x3!455 (Term) Term)
(declare-fun @x6!452 (Term) Term)
(declare-fun @x4!454 (Term) Term)
(declare-fun @x1!457 (Term) Term)
(declare-fun @x5!462 (Term) Term)
(declare-fun @x2!465 (Term) Term)
(declare-fun @x3!464 (Term) Term)
(declare-fun @x6!461 (Term) Term)
(declare-fun @x1!466 (Term) Term)
(declare-fun @x4!463 (Term) Term)
(declare-fun @x8!459 (Term) Term)
(declare-fun @x7!460 (Term) Term)
(declare-fun @x9!458 (Term) Term)
(declare-fun @x3!469 (Term) Term)
(declare-fun @x4!468 (Term) Term)
(declare-fun @x2!470 (Term) Term)
(declare-fun @x5!467 (Term) Term)
(declare-fun @x1!471 (Term) Term)
(declare-fun @x2!472 (Term Term) Term)
(declare-fun @x5!475 (Term Term) Term)
(declare-fun @x7!473 (Term Term) Term)
(declare-fun @x4!476 (Term Term) Term)
(declare-fun @x3!477 (Term Term) Term)
(declare-fun @x6!474 (Term Term) Term)
(declare-fun @x2!478 (Term Term) Term)
(declare-fun @x2!483 (Term Term) Term)
(declare-fun @x3!482 (Term Term) Term)
(declare-fun @x6!479 (Term Term) Term)
(declare-fun @x4!481 (Term Term) Term)
(declare-fun @x5!480 (Term Term) Term)
(declare-fun @x2!485 (Term) Term)
(declare-fun @x1!486 (Term) Term)
(declare-fun @x3!484 (Term) Term)
(declare-fun @x2!487 (Term Term) Term)
(declare-fun @x5!488 (Term Term) Term)
(declare-fun @x3!490 (Term Term) Term)
(declare-fun @x2!491 (Term Term) Term)
(declare-fun @x4!489 (Term Term) Term)
(declare-fun @x3!492 (Term Term Term) Term)
(declare-fun @x5!493 (Term Term) Term)
(declare-fun @x4!494 (Term Term) Term)
(declare-fun @x3!495 (Term Term) Term)
(declare-fun @x2!496 (Term Term) Term)
(declare-fun @x1!499 (Term) Term)
(declare-fun @x2!498 (Term) Term)
(declare-fun @x3!497 (Term) Term)
(declare-fun @x5!500 (Term Term) Term)
(declare-fun @x4!501 (Term Term) Term)
(declare-fun @x2!503 (Term Term) Term)
(declare-fun @x3!502 (Term Term) Term)
(declare-fun @x5!504 (Term Term Term Term) Term)
(declare-fun @x4!505 (Term Term Term Term) Term)
(declare-fun @x3!507 (Term Term) Term)
(declare-fun @x2!508 (Term Term) Term)
(declare-fun @x4!506 (Term Term) Term)
(declare-fun @x6!509 (Term Term) Term)
(declare-fun @x2!513 (Term Term) Term)
(declare-fun @x5!510 (Term Term) Term)
(declare-fun @x3!512 (Term Term) Term)
(declare-fun @x4!511 (Term Term) Term)
(declare-fun @x4!514 (Term Term) Term)
(declare-fun @x2!516 (Term Term) Term)
(declare-fun @x3!515 (Term Term) Term)
(declare-fun @x1!520 (Term) Term)
(declare-fun @x3!518 (Term) Term)
(declare-fun @x4!517 (Term) Term)
(declare-fun @x2!519 (Term) Term)
(declare-fun @x2!524 (Term Term) Term)
(declare-fun @x3!523 (Term Term) Term)
(declare-fun @x5!521 (Term Term) Term)
(declare-fun @x4!522 (Term Term) Term)
(declare-fun @x4!526 (Term Term Term Term) Term)
(declare-fun @x5!525 (Term Term Term Term) Term)
(declare-fun @x4!528 (Term Term) Term)
(declare-fun @x2!530 (Term Term) Term)
(declare-fun @x3!529 (Term Term) Term)
(declare-fun @x5!527 (Term Term) Term)
(declare-fun @x2!532 (Term Term) Term)
(declare-fun @x3!531 (Term Term) Term)
(declare-fun @x1!535 (Term) Term)
(declare-fun @x2!534 (Term) Term)
(declare-fun @x3!533 (Term) Term)
(declare-fun @x4!536 (Term Term Term) Term)
(declare-fun @x3!537 (Term Term Term) Term)
(declare-fun @x5!540 (Term Term) Term)
(declare-fun @x7!538 (Term Term) Term)
(declare-fun @x2!543 (Term Term) Term)
(declare-fun @x6!539 (Term Term) Term)
(declare-fun @x3!542 (Term Term) Term)
(declare-fun @x4!541 (Term Term) Term)
(declare-fun @x2!544 (Term Term) Term)
(declare-fun @x2!545 (Term Term) Term)
(declare-fun @x1!548 (Term) Term)
(declare-fun @x2!547 (Term) Term)
(declare-fun @x3!546 (Term) Term)
(declare-fun @x3!553 (Term Term) Term)
(declare-fun @x6!550 (Term Term) Term)
(declare-fun @x7!549 (Term Term) Term)
(declare-fun @x5!551 (Term Term) Term)
(declare-fun @x4!552 (Term Term) Term)
(declare-fun @x2!554 (Term Term) Term)
(declare-fun @x3!555 (Term Term Term) Term)
(declare-fun @x3!556 (Term Term Term) Term)
(declare-fun @x4!557 (Term) Term)
(declare-fun @x2!559 (Term) Term)
(declare-fun @x1!560 (Term) Term)
(declare-fun @x3!558 (Term) Term)
(declare-fun @x2!561 (Term Term) Term)
(declare-fun @x5!564 (Term Term) Term)
(declare-fun @x3!566 (Term Term) Term)
(declare-fun @x2!567 (Term Term) Term)
(declare-fun @x7!562 (Term Term) Term)
(declare-fun @x4!565 (Term Term) Term)
(declare-fun @x6!563 (Term Term) Term)
(declare-fun @x4!568 (Term Term Term) Term)
(declare-fun @x3!569 (Term Term Term) Term)
(declare-fun @x3!571 (Term Term) Term)
(declare-fun @x4!570 (Term Term) Term)
(declare-fun @x2!572 (Term Term) Term)
(declare-fun @x3!573 (Term Term) Term)
(declare-fun @x2!574 (Term Term) Term)
(declare-fun @x3!577 (Term) Term)
(declare-fun @x2!578 (Term) Term)
(declare-fun @x1!579 (Term) Term)
(declare-fun @x5!575 (Term) Term)
(declare-fun @x4!576 (Term) Term)
(declare-fun @x2!580 (Term Term) Term)
(declare-fun @x3!581 (Term Term) Term)
(declare-fun @x2!582 (Term Term) Term)
(declare-fun @x4!583 (Term Term Term Term) Term)
(declare-fun @x6!584 (Term) Term)
(declare-fun @x3!587 (Term) Term)
(declare-fun @x4!586 (Term) Term)
(declare-fun @x1!589 (Term) Term)
(declare-fun @x5!585 (Term) Term)
(declare-fun @x2!588 (Term) Term)
(declare-fun @x2!590 (Term Term) Term)
(declare-fun @x2!593 (Term Term) Term)
(declare-fun @x3!592 (Term Term) Term)
(declare-fun @x4!591 (Term Term) Term)
(declare-fun @x5!594 (Term Term) Term)
(declare-fun @x4!595 (Term Term) Term)
(declare-fun @x3!596 (Term Term) Term)
(declare-fun @x2!597 (Term Term) Term)
(declare-fun @x2!599 (Term Term) Term)
(declare-fun @x3!598 (Term Term) Term)
(declare-fun @x6!600 (Term Term) Term)
(declare-fun @x2!604 (Term Term) Term)
(declare-fun @x4!602 (Term Term) Term)
(declare-fun @x5!601 (Term Term) Term)
(declare-fun @x3!603 (Term Term) Term)
(declare-fun @x3!611 (Term Term) Term)
(declare-fun @x2!612 (Term Term) Term)
(declare-fun @x9!605 (Term Term) Term)
(declare-fun @x4!610 (Term Term) Term)
(declare-fun @x8!606 (Term Term) Term)
(declare-fun @x6!608 (Term Term) Term)
(declare-fun @x5!609 (Term Term) Term)
(declare-fun @x7!607 (Term Term) Term)
(declare-fun @x3!613 (Term Term Term) Term)
(declare-fun @x2!615 (Term Term) Term)
(declare-fun @x3!614 (Term Term) Term)
(declare-fun @x3!617 (Term Term Term) Term)
(declare-fun @x4!616 (Term Term Term) Term)
(declare-fun @x2!621 (Term) Term)
(declare-fun @x4!619 (Term) Term)
(declare-fun @x3!620 (Term) Term)
(declare-fun @x5!618 (Term) Term)
(declare-fun @x1!622 (Term) Term)
(declare-fun @x2!624 (Term) Term)
(declare-fun @x3!623 (Term) Term)
(declare-fun @x1!625 (Term) Term)
(declare-fun @x3!626 (Term Term) Term)
(declare-fun @x2!627 (Term Term) Term)
(declare-fun @x2!628 (Term Term) Term)
(declare-fun @x7!630 (Term Term) Term)
(declare-fun @x2!635 (Term Term) Term)
(declare-fun @x3!634 (Term Term) Term)
(declare-fun @x8!629 (Term Term) Term)
(declare-fun @x5!632 (Term Term) Term)
(declare-fun @x4!633 (Term Term) Term)
(declare-fun @x6!631 (Term Term) Term)
(declare-fun @x2!636 (Term Term) Term)
(declare-fun @x4!637 (Term Term) Term)
(declare-fun @x2!639 (Term Term) Term)
(declare-fun @x3!638 (Term Term) Term)
(declare-fun @x2!646 (Term) Term)
(declare-fun @x1!647 (Term) Term)
(declare-fun @x5!643 (Term) Term)
(declare-fun @x6!642 (Term) Term)
(declare-fun @x4!644 (Term) Term)
(declare-fun @x7!641 (Term) Term)
(declare-fun @x3!645 (Term) Term)
(declare-fun @x8!640 (Term) Term)
(declare-fun @x4!648 (Term) Term)
(declare-fun @x3!649 (Term) Term)
(declare-fun @x1!651 (Term) Term)
(declare-fun @x2!650 (Term) Term)
(declare-fun @x1!653 (Term) Term)
(declare-fun @x2!652 (Term) Term)
(declare-fun @x1!656 (Term) Term)
(declare-fun @x2!655 (Term) Term)
(declare-fun @x3!654 (Term) Term)
(declare-fun @x2!657 (Term Term) Term)
(declare-fun @x8!659 (Term Term) Term)
(declare-fun @x3!664 (Term Term) Term)
(declare-fun @x7!660 (Term Term) Term)
(declare-fun @x6!661 (Term Term) Term)
(declare-fun @x2!665 (Term Term) Term)
(declare-fun @x5!662 (Term Term) Term)
(declare-fun @x4!663 (Term Term) Term)
(declare-fun @x9!658 (Term Term) Term)
(declare-fun @x1!669 (Term) Term)
(declare-fun @x4!666 (Term) Term)
(declare-fun @x3!667 (Term) Term)
(declare-fun @x2!668 (Term) Term)
(declare-fun @x4!670 (Term) Term)
(declare-fun @x1!673 (Term) Term)
(declare-fun @x2!672 (Term) Term)
(declare-fun @x3!671 (Term) Term)
(declare-fun @x4!674 (Term Term) Term)
(declare-fun @x2!676 (Term Term) Term)
(declare-fun @x3!675 (Term Term) Term)
(declare-fun @x4!677 (Term Term Term Term) Term)
(declare-fun @x3!678 (Term Term Term) Term)
(declare-fun @x5!680 (Term Term) Term)
(declare-fun @x2!683 (Term Term) Term)
(declare-fun @x4!681 (Term Term) Term)
(declare-fun @x6!679 (Term Term) Term)
(declare-fun @x3!682 (Term Term) Term)
(declare-fun @x4!686 (Term Term Term Term) Term)
(declare-fun @x5!685 (Term Term Term Term) Term)
(declare-fun @x6!684 (Term Term Term Term) Term)
(declare-fun @x2!692 (Term Term) Term)
(declare-fun @x4!690 (Term Term) Term)
(declare-fun @x3!691 (Term Term) Term)
(declare-fun @x5!689 (Term Term) Term)
(declare-fun @x7!687 (Term Term) Term)
(declare-fun @x6!688 (Term Term) Term)
(declare-fun @x2!694 (Term Term) Term)
(declare-fun @x3!693 (Term Term) Term)
(declare-fun @x1!696 (Term) Term)
(declare-fun @x2!695 (Term) Term)
(declare-fun @x3!699 (Term Term) Term)
(declare-fun @x5!697 (Term Term) Term)
(declare-fun @x2!700 (Term Term) Term)
(declare-fun @x4!698 (Term Term) Term)
(declare-fun @x4!702 (Term) Term)
(declare-fun @x3!703 (Term) Term)
(declare-fun @x2!704 (Term) Term)
(declare-fun @x1!705 (Term) Term)
(declare-fun @x5!701 (Term) Term)
(declare-fun @x7!707 (Term Term) Term)
(declare-fun @x4!710 (Term Term) Term)
(declare-fun @x6!708 (Term Term) Term)
(declare-fun @x2!712 (Term Term) Term)
(declare-fun @x5!709 (Term Term) Term)
(declare-fun @x3!711 (Term Term) Term)
(declare-fun @x8!706 (Term Term) Term)
(declare-fun z3name!715 (Term Term Term Term) Term)
(declare-fun z3name!714 (Term Term Term Term) Term)
(declare-fun z3name!713 (Term Term Term Term Term) Term)
(declare-fun z3name!717 (Term Term Term) Term)
(declare-fun z3name!716 (Term Term Term Term) Term)
(declare-fun z3name!718 (Term Term Term) Term)
(declare-fun z3name!719 (Term Term) Bool)
(declare-fun z3name!720 (Term Term) Bool)
(declare-fun z3name!721 (Term Term) Bool)
(declare-fun z3name!722 (Term Term) Bool)
(declare-fun z3name!723 (Term) Bool)
(declare-fun @x7!725 (Term Term Term Term) Term)
(declare-fun @x5!727 (Term Term Term Term) Term)
(declare-fun @x6!726 (Term Term Term Term) Term)
(declare-fun @x8!724 (Term Term Term Term) Term)
(declare-fun @x4!728 (Term Term Term Term) Term)
(declare-fun @x2!729 (Term Term) Term)
(declare-fun @x3!730 (Term) Term)
(declare-fun @x1!732 (Term) Term)
(declare-fun @x2!731 (Term) Term)
(declare-fun @x2!733 (Term) Term)
(declare-fun @x1!734 (Term) Term)
(declare-fun @x3!736 (Term Term) Term)
(declare-fun @x2!737 (Term Term) Term)
(declare-fun @x4!735 (Term Term) Term)
(declare-fun @x3!738 (Term) Term)
(declare-fun @x1!740 (Term) Term)
(declare-fun @x2!739 (Term) Term)
(declare-fun @x2!741 (Term Term) Term)
(declare-fun @x2!743 (Term) Term)
(declare-fun @x3!742 (Term) Term)
(declare-fun @x1!744 (Term) Term)
(declare-fun @x3!745 (Term Term Term) Term)
(declare-fun @x1!746 (Term) Term)
(declare-fun @x2!749 (Term Term) Term)
(declare-fun @x3!748 (Term Term) Term)
(declare-fun @x4!747 (Term Term) Term)
(declare-fun @x2!750 (Term) Term)
(declare-fun @x1!751 (Term) Term)
(declare-fun @x2!753 (Term Term) Term)
(declare-fun @x3!752 (Term Term) Term)
(declare-fun @x4!755 (Term Term Term) Term)
(declare-fun @x3!756 (Term Term Term) Term)
(declare-fun @x5!754 (Term Term Term) Term)
(declare-fun @x2!757 (Term Term) Term)
(declare-fun @x3!758 (Term Term) Term)
(declare-fun @x2!759 (Term Term) Term)
(declare-fun @x3!760 (Term Term) Term)
(declare-fun @x2!761 (Term Term) Term)
(declare-fun @x2!763 (Term Term) Term)
(declare-fun @x3!762 (Term Term) Term)
(declare-fun @x1!764 (Term) Term)
(declare-fun @x3!765 (Term) Term)
(declare-fun @x2!766 (Term) Term)
(declare-fun @x1!767 (Term) Term)
(declare-fun @x5!768 (Term Term) Term)
(declare-fun @x2!771 (Term Term) Term)
(declare-fun @x3!770 (Term Term) Term)
(declare-fun @x4!769 (Term Term) Term)
(declare-fun @x2!774 (Term Term) Term)
(declare-fun @x3!773 (Term Term) Term)
(declare-fun @x4!772 (Term Term) Term)
(declare-fun @x3!775 (Term Term) Term)
(declare-fun @x2!776 (Term Term) Term)
(declare-fun @x1!778 (Term) Term)
(declare-fun @x2!777 (Term) Term)
(declare-fun @x3!779 (Term) Term)
(declare-fun @x1!781 (Term) Term)
(declare-fun @x2!780 (Term) Term)
(declare-fun @x3!782 (Term Term) Term)
(declare-fun @x2!783 (Term Term) Term)
(declare-fun @x3!784 (Term Term Term) Term)
(declare-fun @x2!787 (Term Term) Term)
(declare-fun @x4!785 (Term Term) Term)
(declare-fun @x3!786 (Term Term) Term)
(declare-fun @x1!789 (Term) Term)
(declare-fun @x2!788 (Term) Term)
(declare-fun @x3!790 (Term) Term)
(declare-fun @x1!792 (Term) Term)
(declare-fun @x2!791 (Term) Term)
(declare-fun @x2!794 (Term) Term)
(declare-fun @x3!793 (Term) Term)
(declare-fun @x1!795 (Term) Term)
(declare-fun @x2!799 (Term Term) Term)
(declare-fun @x3!798 (Term Term) Term)
(declare-fun @x4!797 (Term Term) Term)
(declare-fun @x5!796 (Term Term) Term)
(declare-fun @x2!800 (Term) Term)
(declare-fun @x1!801 (Term) Term)
(declare-fun @x1!804 (Term) Term)
(declare-fun @x3!802 (Term) Term)
(declare-fun @x2!803 (Term) Term)
(declare-fun @x4!805 (Term) Term)
(declare-fun @x1!808 (Term) Term)
(declare-fun @x3!806 (Term) Term)
(declare-fun @x2!807 (Term) Term)
(declare-fun @x1!811 (Term) Term)
(declare-fun @x3!809 (Term) Term)
(declare-fun @x2!810 (Term) Term)
(declare-fun @x2!813 (Term) Term)
(declare-fun @x3!812 (Term) Term)
(declare-fun @x1!814 (Term) Term)
(declare-fun @x2!817 (Term) Term)
(declare-fun @x3!816 (Term) Term)
(declare-fun @x4!815 (Term) Term)
(declare-fun @x1!818 (Term) Term)
(declare-fun @x5!820 (Term Term) Term)
(declare-fun @x2!823 (Term Term) Term)
(declare-fun @x3!822 (Term Term) Term)
(declare-fun @x6!819 (Term Term) Term)
(declare-fun @x4!821 (Term Term) Term)
(declare-fun @x2!824 (Term Term) Term)
(declare-fun @x3!825 (Term Term Term) Term)
(declare-fun @x3!826 (Term) Term)
(declare-fun @x2!827 (Term) Term)
(declare-fun @x1!828 (Term) Term)
(declare-fun @x3!829 (Term Term Term) Term)
(declare-fun @x2!832 (Term Term) Term)
(declare-fun @x3!831 (Term Term) Term)
(declare-fun @x4!830 (Term Term) Term)
(declare-fun @x2!833 (Term Term) Term)
(declare-fun @x2!834 (Term) Term)
(declare-fun @x1!835 (Term) Term)
(declare-fun @x2!836 (Term) Term)
(declare-fun @x1!837 (Term) Term)
(declare-fun @x2!838 (Term) Term)
(assert (! (forall ((xpy0 Term)(tpy0 Term)) (! (and (or (not (HasTypeZ xpy0 tpy0)) (HasTypeFuel ZFuel xpy0 tpy0)) (or (HasTypeZ xpy0 tpy0) (not (HasTypeFuel ZFuel xpy0 tpy0)))) :pattern ((HasTypeZ xpy0 tpy0)) )) :named HasTypeZ-Rewrite-Definition))
(assert (! (forall ((xpy1 Term)(tpy1 Term)) (! (and (or (not (HasType xpy1 tpy1)) (HasTypeFuel MaxIFuel xpy1 tpy1)) (or (HasType xpy1 tpy1) (not (HasTypeFuel MaxIFuel xpy1 tpy1)))) :pattern ((HasType xpy1 tpy1)) )) :named HasType-Rewrite-Definition))
(assert (! (forall ((__@x0py0 Term)) (! (and (or (not (is-Tm_arrow __@x0py0)) (and (= (Term_constr_id __@x0py0) 3) (= __@x0py0 (Tm_arrow (Tm_arrow_id __@x0py0))))) (or (is-Tm_arrow __@x0py0) (not (= (Term_constr_id __@x0py0) 3)) (not (= __@x0py0 (Tm_arrow (Tm_arrow_id __@x0py0)))))) :pattern ((is-Tm_arrow __@x0py0)) )) :named is-Tm_arrow-Rewrite-Definition))
(assert (! (forall ((__@x0py1 Term)) (! (and (or (not (is-BoxInt __@x0py1)) (and (= (Term_constr_id __@x0py1) 7) (= __@x0py1 (BoxInt (BoxInt_proj_0 __@x0py1))))) (or (is-BoxInt __@x0py1) (not (= (Term_constr_id __@x0py1) 7)) (not (= __@x0py1 (BoxInt (BoxInt_proj_0 __@x0py1)))))) :pattern ((is-BoxInt __@x0py1)) )) :named is-BoxInt-Rewrite-Definition))
(assert (! (forall ((__@x0py2 Term)) (! (and (or (not (is-BoxBool __@x0py2)) (and (= (Term_constr_id __@x0py2) 8) (= __@x0py2 (BoxBool (BoxBool_proj_0 __@x0py2))))) (or (is-BoxBool __@x0py2) (not (= (Term_constr_id __@x0py2) 8)) (not (= __@x0py2 (BoxBool (BoxBool_proj_0 __@x0py2)))))) :pattern ((is-BoxBool __@x0py2)) )) :named is-BoxBool-Rewrite-Definition))
(assert (! (forall ((__@x0py3 Term)) (! (and (or (not (is-BoxString __@x0py3)) (and (= (Term_constr_id __@x0py3) 9) (= __@x0py3 (BoxString (BoxString_proj_0 __@x0py3))))) (or (is-BoxString __@x0py3) (not (= (Term_constr_id __@x0py3) 9)) (not (= __@x0py3 (BoxString (BoxString_proj_0 __@x0py3)))))) :pattern ((is-BoxString __@x0py3)) )) :named is-BoxString-Rewrite-Definition))
(assert (! (forall ((__@x0py4 Term)) (! (and (or (not (is-LexCons __@x0py4)) (and (= (Term_constr_id __@x0py4) 11) (= __@x0py4 (LexCons (LexCons_0 __@x0py4) (LexCons_1 __@x0py4) (LexCons_2 __@x0py4))))) (or (is-LexCons __@x0py4) (not (= (Term_constr_id __@x0py4) 11)) (not (= __@x0py4 (LexCons (LexCons_0 __@x0py4) (LexCons_1 __@x0py4) (LexCons_2 __@x0py4)))))) :pattern ((is-LexCons __@x0py4)) )) :named is-LexCons-Rewrite-Definition))
(assert (! (forall ((__@x0py5 Term)) (! (and (or (not (is-Prims.T __@x0py5)) (and (= (Term_constr_id __@x0py5) 411) (= __@x0py5 Prims.T))) (or (is-Prims.T __@x0py5) (not (= (Term_constr_id __@x0py5) 411)) (not (= __@x0py5 Prims.T)))) :pattern ((is-Prims.T __@x0py5)) )) :named is-Prims.T-Rewrite-Definition))
(assert (! (forall ((__@x0py6 Term)) (! (and (or (not (is-Prims.Refl __@x0py6)) (and (= (Term_constr_id __@x0py6) 428) (= __@x0py6 (Prims.Refl (Prims.Refl_a __@x0py6) (Prims.Refl_x __@x0py6))))) (or (is-Prims.Refl __@x0py6) (not (= (Term_constr_id __@x0py6) 428)) (not (= __@x0py6 (Prims.Refl (Prims.Refl_a __@x0py6) (Prims.Refl_x __@x0py6)))))) :pattern ((is-Prims.Refl __@x0py6)) )) :named is-Prims.Refl-Rewrite-Definition))
(assert (! (forall ((__@x0py7 Term)) (! (and (or (not (is-Prims.HRefl __@x0py7)) (and (= (Term_constr_id __@x0py7) 443) (= __@x0py7 (Prims.HRefl (Prims.HRefl_a __@x0py7) (Prims.HRefl_x __@x0py7))))) (or (is-Prims.HRefl __@x0py7) (not (= (Term_constr_id __@x0py7) 443)) (not (= __@x0py7 (Prims.HRefl (Prims.HRefl_a __@x0py7) (Prims.HRefl_x __@x0py7)))))) :pattern ((is-Prims.HRefl __@x0py7)) )) :named is-Prims.HRefl-Rewrite-Definition))
(assert (! (forall ((__@x0py8 Term)) (! (and (or (not (is-Prims.And __@x0py8)) (and (= (Term_constr_id __@x0py8) 458) (= __@x0py8 (Prims.And (Prims.And_p __@x0py8) (Prims.And_q __@x0py8) (Prims.And__0 __@x0py8) (Prims.And__1 __@x0py8))))) (or (is-Prims.And __@x0py8) (not (= (Term_constr_id __@x0py8) 458)) (not (= __@x0py8 (Prims.And (Prims.And_p __@x0py8) (Prims.And_q __@x0py8) (Prims.And__0 __@x0py8) (Prims.And__1 __@x0py8)))))) :pattern ((is-Prims.And __@x0py8)) )) :named is-Prims.And-Rewrite-Definition))
(assert (! (forall ((__@x0py9 Term)) (! (and (or (not (is-Prims.Left __@x0py9)) (and (= (Term_constr_id __@x0py9) 477) (= __@x0py9 (Prims.Left (Prims.Left_p __@x0py9) (Prims.Left_q __@x0py9) (Prims.Left__0 __@x0py9))))) (or (is-Prims.Left __@x0py9) (not (= (Term_constr_id __@x0py9) 477)) (not (= __@x0py9 (Prims.Left (Prims.Left_p __@x0py9) (Prims.Left_q __@x0py9) (Prims.Left__0 __@x0py9)))))) :pattern ((is-Prims.Left __@x0py9)) )) :named is-Prims.Left-Rewrite-Definition))
(assert (! (forall ((__@x0py10 Term)) (! (and (or (not (is-Prims.Right __@x0py10)) (and (= (Term_constr_id __@x0py10) 482) (= __@x0py10 (Prims.Right (Prims.Right_p __@x0py10) (Prims.Right_q __@x0py10) (Prims.Right__0 __@x0py10))))) (or (is-Prims.Right __@x0py10) (not (= (Term_constr_id __@x0py10) 482)) (not (= __@x0py10 (Prims.Right (Prims.Right_p __@x0py10) (Prims.Right_q __@x0py10) (Prims.Right__0 __@x0py10)))))) :pattern ((is-Prims.Right __@x0py10)) )) :named is-Prims.Right-Rewrite-Definition))
(assert (! (forall ((__@x0py11 Term)) (! (and (or (not (is-Prims.Mkdtuple2 __@x0py11)) (and (= (Term_constr_id __@x0py11) 524) (= __@x0py11 (Prims.Mkdtuple2 (Prims.Mkdtuple2_a __@x0py11) (Prims.Mkdtuple2_b __@x0py11) (Prims.Mkdtuple2__1 __@x0py11) (Prims.Mkdtuple2__2 __@x0py11))))) (or (is-Prims.Mkdtuple2 __@x0py11) (not (= (Term_constr_id __@x0py11) 524)) (not (= __@x0py11 (Prims.Mkdtuple2 (Prims.Mkdtuple2_a __@x0py11) (Prims.Mkdtuple2_b __@x0py11) (Prims.Mkdtuple2__1 __@x0py11) (Prims.Mkdtuple2__2 __@x0py11)))))) :pattern ((is-Prims.Mkdtuple2 __@x0py11)) )) :named is-Prims.Mkdtuple2-Rewrite-Definition))
(assert (! (forall ((__@x0py12 Term)) (! (and (or (not (is-Prims.Nil __@x0py12)) (and (= (Term_constr_id __@x0py12) 587) (= __@x0py12 (Prims.Nil (Prims.Nil_a __@x0py12))))) (or (is-Prims.Nil __@x0py12) (not (= (Term_constr_id __@x0py12) 587)) (not (= __@x0py12 (Prims.Nil (Prims.Nil_a __@x0py12)))))) :pattern ((is-Prims.Nil __@x0py12)) )) :named is-Prims.Nil-Rewrite-Definition))
(assert (! (forall ((__@x0py13 Term)) (! (and (or (not (is-Prims.Cons __@x0py13)) (and (= (Term_constr_id __@x0py13) 592) (= __@x0py13 (Prims.Cons (Prims.Cons_a __@x0py13) (Prims.Cons_hd __@x0py13) (Prims.Cons_tl __@x0py13))))) (or (is-Prims.Cons __@x0py13) (not (= (Term_constr_id __@x0py13) 592)) (not (= __@x0py13 (Prims.Cons (Prims.Cons_a __@x0py13) (Prims.Cons_hd __@x0py13) (Prims.Cons_tl __@x0py13)))))) :pattern ((is-Prims.Cons __@x0py13)) )) :named is-Prims.Cons-Rewrite-Definition))
(assert (! (forall ((__@x0py14 Term)) (! (and (or (not (is-Prims.LexTop __@x0py14)) (and (= (Term_constr_id __@x0py14) 621) (= __@x0py14 Prims.LexTop))) (or (is-Prims.LexTop __@x0py14) (not (= (Term_constr_id __@x0py14) 621)) (not (= __@x0py14 Prims.LexTop)))) :pattern ((is-Prims.LexTop __@x0py14)) )) :named is-Prims.LexTop-Rewrite-Definition))
(assert (! (forall ((__@x0py15 Term)) (! (and (or (not (is-FStar.Pervasives.Native.None __@x0py15)) (and (= (Term_constr_id __@x0py15) 1022) (= __@x0py15 (FStar.Pervasives.Native.None (FStar.Pervasives.Native.None_a __@x0py15))))) (or (is-FStar.Pervasives.Native.None __@x0py15) (not (= (Term_constr_id __@x0py15) 1022)) (not (= __@x0py15 (FStar.Pervasives.Native.None (FStar.Pervasives.Native.None_a __@x0py15)))))) :pattern ((is-FStar.Pervasives.Native.None __@x0py15)) )) :named is-FStar.Pervasives.Native.None-Rewrite-Definition))
(assert (! (forall ((__@x0py16 Term)) (! (and (or (not (is-FStar.Pervasives.Native.Some __@x0py16)) (and (= (Term_constr_id __@x0py16) 1027) (= __@x0py16 (FStar.Pervasives.Native.Some (FStar.Pervasives.Native.Some_a __@x0py16) (FStar.Pervasives.Native.Some_v __@x0py16))))) (or (is-FStar.Pervasives.Native.Some __@x0py16) (not (= (Term_constr_id __@x0py16) 1027)) (not (= __@x0py16 (FStar.Pervasives.Native.Some (FStar.Pervasives.Native.Some_a __@x0py16) (FStar.Pervasives.Native.Some_v __@x0py16)))))) :pattern ((is-FStar.Pervasives.Native.Some __@x0py16)) )) :named is-FStar.Pervasives.Native.Some-Rewrite-Definition))
(assert (! (forall ((__@x0py17 Term)) (! (and (or (not (is-FStar.Pervasives.Native.Mktuple2 __@x0py17)) (and (= (Term_constr_id __@x0py17) 1045) (= __@x0py17 (FStar.Pervasives.Native.Mktuple2 (FStar.Pervasives.Native.Mktuple2__a __@x0py17) (FStar.Pervasives.Native.Mktuple2__b __@x0py17) (FStar.Pervasives.Native.Mktuple2__1 __@x0py17) (FStar.Pervasives.Native.Mktuple2__2 __@x0py17))))) (or (is-FStar.Pervasives.Native.Mktuple2 __@x0py17) (not (= (Term_constr_id __@x0py17) 1045)) (not (= __@x0py17 (FStar.Pervasives.Native.Mktuple2 (FStar.Pervasives.Native.Mktuple2__a __@x0py17) (FStar.Pervasives.Native.Mktuple2__b __@x0py17) (FStar.Pervasives.Native.Mktuple2__1 __@x0py17) (FStar.Pervasives.Native.Mktuple2__2 __@x0py17)))))) :pattern ((is-FStar.Pervasives.Native.Mktuple2 __@x0py17)) )) :named is-FStar.Pervasives.Native.Mktuple2-Rewrite-Definition))
(assert (! (forall ((__@x0py18 Term)) (! (and (or (not (is-FStar.Pervasives.Native.Mktuple3 __@x0py18)) (and (= (Term_constr_id __@x0py18) 1064) (= __@x0py18 (FStar.Pervasives.Native.Mktuple3 (FStar.Pervasives.Native.Mktuple3__a __@x0py18) (FStar.Pervasives.Native.Mktuple3__b __@x0py18) (FStar.Pervasives.Native.Mktuple3__c __@x0py18) (FStar.Pervasives.Native.Mktuple3__1 __@x0py18) (FStar.Pervasives.Native.Mktuple3__2 __@x0py18) (FStar.Pervasives.Native.Mktuple3__3 __@x0py18))))) (or (is-FStar.Pervasives.Native.Mktuple3 __@x0py18) (not (= (Term_constr_id __@x0py18) 1064)) (not (= __@x0py18 (FStar.Pervasives.Native.Mktuple3 (FStar.Pervasives.Native.Mktuple3__a __@x0py18) (FStar.Pervasives.Native.Mktuple3__b __@x0py18) (FStar.Pervasives.Native.Mktuple3__c __@x0py18) (FStar.Pervasives.Native.Mktuple3__1 __@x0py18) (FStar.Pervasives.Native.Mktuple3__2 __@x0py18) (FStar.Pervasives.Native.Mktuple3__3 __@x0py18)))))) :pattern ((is-FStar.Pervasives.Native.Mktuple3 __@x0py18)) )) :named is-FStar.Pervasives.Native.Mktuple3-Rewrite-Definition))
(assert (! (forall ((__@x0py19 Term)) (! (and (or (not (is-FStar.Pervasives.Native.Mktuple4 __@x0py19)) (and (= (Term_constr_id __@x0py19) 1083) (= __@x0py19 (FStar.Pervasives.Native.Mktuple4 (FStar.Pervasives.Native.Mktuple4__a __@x0py19) (FStar.Pervasives.Native.Mktuple4__b __@x0py19) (FStar.Pervasives.Native.Mktuple4__c __@x0py19) (FStar.Pervasives.Native.Mktuple4__d __@x0py19) (FStar.Pervasives.Native.Mktuple4__1 __@x0py19) (FStar.Pervasives.Native.Mktuple4__2 __@x0py19) (FStar.Pervasives.Native.Mktuple4__3 __@x0py19) (FStar.Pervasives.Native.Mktuple4__4 __@x0py19))))) (or (is-FStar.Pervasives.Native.Mktuple4 __@x0py19) (not (= (Term_constr_id __@x0py19) 1083)) (not (= __@x0py19 (FStar.Pervasives.Native.Mktuple4 (FStar.Pervasives.Native.Mktuple4__a __@x0py19) (FStar.Pervasives.Native.Mktuple4__b __@x0py19) (FStar.Pervasives.Native.Mktuple4__c __@x0py19) (FStar.Pervasives.Native.Mktuple4__d __@x0py19) (FStar.Pervasives.Native.Mktuple4__1 __@x0py19) (FStar.Pervasives.Native.Mktuple4__2 __@x0py19) (FStar.Pervasives.Native.Mktuple4__3 __@x0py19) (FStar.Pervasives.Native.Mktuple4__4 __@x0py19)))))) :pattern ((is-FStar.Pervasives.Native.Mktuple4 __@x0py19)) )) :named is-FStar.Pervasives.Native.Mktuple4-Rewrite-Definition))
(assert (! (forall ((__@x0py20 Term)) (! (and (or (not (is-FStar.Pervasives.Native.Mktuple5 __@x0py20)) (and (= (Term_constr_id __@x0py20) 1104) (= __@x0py20 (FStar.Pervasives.Native.Mktuple5 (FStar.Pervasives.Native.Mktuple5__a __@x0py20) (FStar.Pervasives.Native.Mktuple5__b __@x0py20) (FStar.Pervasives.Native.Mktuple5__c __@x0py20) (FStar.Pervasives.Native.Mktuple5__d __@x0py20) (FStar.Pervasives.Native.Mktuple5__e __@x0py20) (FStar.Pervasives.Native.Mktuple5__1 __@x0py20) (FStar.Pervasives.Native.Mktuple5__2 __@x0py20) (FStar.Pervasives.Native.Mktuple5__3 __@x0py20) (FStar.Pervasives.Native.Mktuple5__4 __@x0py20) (FStar.Pervasives.Native.Mktuple5__5 __@x0py20))))) (or (is-FStar.Pervasives.Native.Mktuple5 __@x0py20) (not (= (Term_constr_id __@x0py20) 1104)) (not (= __@x0py20 (FStar.Pervasives.Native.Mktuple5 (FStar.Pervasives.Native.Mktuple5__a __@x0py20) (FStar.Pervasives.Native.Mktuple5__b __@x0py20) (FStar.Pervasives.Native.Mktuple5__c __@x0py20) (FStar.Pervasives.Native.Mktuple5__d __@x0py20) (FStar.Pervasives.Native.Mktuple5__e __@x0py20) (FStar.Pervasives.Native.Mktuple5__1 __@x0py20) (FStar.Pervasives.Native.Mktuple5__2 __@x0py20) (FStar.Pervasives.Native.Mktuple5__3 __@x0py20) (FStar.Pervasives.Native.Mktuple5__4 __@x0py20) (FStar.Pervasives.Native.Mktuple5__5 __@x0py20)))))) :pattern ((is-FStar.Pervasives.Native.Mktuple5 __@x0py20)) )) :named is-FStar.Pervasives.Native.Mktuple5-Rewrite-Definition))
(assert (! (forall ((__@x0py21 Term)) (! (and (or (not (is-FStar.Pervasives.Native.Mktuple6 __@x0py21)) (and (= (Term_constr_id __@x0py21) 1127) (= __@x0py21 (FStar.Pervasives.Native.Mktuple6 (FStar.Pervasives.Native.Mktuple6__a __@x0py21) (FStar.Pervasives.Native.Mktuple6__b __@x0py21) (FStar.Pervasives.Native.Mktuple6__c __@x0py21) (FStar.Pervasives.Native.Mktuple6__d __@x0py21) (FStar.Pervasives.Native.Mktuple6__e __@x0py21) (FStar.Pervasives.Native.Mktuple6__f __@x0py21) (FStar.Pervasives.Native.Mktuple6__1 __@x0py21) (FStar.Pervasives.Native.Mktuple6__2 __@x0py21) (FStar.Pervasives.Native.Mktuple6__3 __@x0py21) (FStar.Pervasives.Native.Mktuple6__4 __@x0py21) (FStar.Pervasives.Native.Mktuple6__5 __@x0py21) (FStar.Pervasives.Native.Mktuple6__6 __@x0py21))))) (or (is-FStar.Pervasives.Native.Mktuple6 __@x0py21) (not (= (Term_constr_id __@x0py21) 1127)) (not (= __@x0py21 (FStar.Pervasives.Native.Mktuple6 (FStar.Pervasives.Native.Mktuple6__a __@x0py21) (FStar.Pervasives.Native.Mktuple6__b __@x0py21) (FStar.Pervasives.Native.Mktuple6__c __@x0py21) (FStar.Pervasives.Native.Mktuple6__d __@x0py21) (FStar.Pervasives.Native.Mktuple6__e __@x0py21) (FStar.Pervasives.Native.Mktuple6__f __@x0py21) (FStar.Pervasives.Native.Mktuple6__1 __@x0py21) (FStar.Pervasives.Native.Mktuple6__2 __@x0py21) (FStar.Pervasives.Native.Mktuple6__3 __@x0py21) (FStar.Pervasives.Native.Mktuple6__4 __@x0py21) (FStar.Pervasives.Native.Mktuple6__5 __@x0py21) (FStar.Pervasives.Native.Mktuple6__6 __@x0py21)))))) :pattern ((is-FStar.Pervasives.Native.Mktuple6 __@x0py21)) )) :named is-FStar.Pervasives.Native.Mktuple6-Rewrite-Definition))
(assert (! (forall ((__@x0py22 Term)) (! (and (or (not (is-FStar.Pervasives.Native.Mktuple7 __@x0py22)) (and (= (Term_constr_id __@x0py22) 1152) (= __@x0py22 (FStar.Pervasives.Native.Mktuple7 (FStar.Pervasives.Native.Mktuple7__a __@x0py22) (FStar.Pervasives.Native.Mktuple7__b __@x0py22) (FStar.Pervasives.Native.Mktuple7__c __@x0py22) (FStar.Pervasives.Native.Mktuple7__d __@x0py22) (FStar.Pervasives.Native.Mktuple7__e __@x0py22) (FStar.Pervasives.Native.Mktuple7__f __@x0py22) (FStar.Pervasives.Native.Mktuple7__g __@x0py22) (FStar.Pervasives.Native.Mktuple7__1 __@x0py22) (FStar.Pervasives.Native.Mktuple7__2 __@x0py22) (FStar.Pervasives.Native.Mktuple7__3 __@x0py22) (FStar.Pervasives.Native.Mktuple7__4 __@x0py22) (FStar.Pervasives.Native.Mktuple7__5 __@x0py22) (FStar.Pervasives.Native.Mktuple7__6 __@x0py22) (FStar.Pervasives.Native.Mktuple7__7 __@x0py22))))) (or (is-FStar.Pervasives.Native.Mktuple7 __@x0py22) (not (= (Term_constr_id __@x0py22) 1152)) (not (= __@x0py22 (FStar.Pervasives.Native.Mktuple7 (FStar.Pervasives.Native.Mktuple7__a __@x0py22) (FStar.Pervasives.Native.Mktuple7__b __@x0py22) (FStar.Pervasives.Native.Mktuple7__c __@x0py22) (FStar.Pervasives.Native.Mktuple7__d __@x0py22) (FStar.Pervasives.Native.Mktuple7__e __@x0py22) (FStar.Pervasives.Native.Mktuple7__f __@x0py22) (FStar.Pervasives.Native.Mktuple7__g __@x0py22) (FStar.Pervasives.Native.Mktuple7__1 __@x0py22) (FStar.Pervasives.Native.Mktuple7__2 __@x0py22) (FStar.Pervasives.Native.Mktuple7__3 __@x0py22) (FStar.Pervasives.Native.Mktuple7__4 __@x0py22) (FStar.Pervasives.Native.Mktuple7__5 __@x0py22) (FStar.Pervasives.Native.Mktuple7__6 __@x0py22) (FStar.Pervasives.Native.Mktuple7__7 __@x0py22)))))) :pattern ((is-FStar.Pervasives.Native.Mktuple7 __@x0py22)) )) :named is-FStar.Pervasives.Native.Mktuple7-Rewrite-Definition))
(assert (! (forall ((__@x0py23 Term)) (! (and (or (not (is-FStar.Pervasives.Native.Mktuple8 __@x0py23)) (and (= (Term_constr_id __@x0py23) 1179) (= __@x0py23 (FStar.Pervasives.Native.Mktuple8 (FStar.Pervasives.Native.Mktuple8__a __@x0py23) (FStar.Pervasives.Native.Mktuple8__b __@x0py23) (FStar.Pervasives.Native.Mktuple8__c __@x0py23) (FStar.Pervasives.Native.Mktuple8__d __@x0py23) (FStar.Pervasives.Native.Mktuple8__e __@x0py23) (FStar.Pervasives.Native.Mktuple8__f __@x0py23) (FStar.Pervasives.Native.Mktuple8__g __@x0py23) (FStar.Pervasives.Native.Mktuple8__h __@x0py23) (FStar.Pervasives.Native.Mktuple8__1 __@x0py23) (FStar.Pervasives.Native.Mktuple8__2 __@x0py23) (FStar.Pervasives.Native.Mktuple8__3 __@x0py23) (FStar.Pervasives.Native.Mktuple8__4 __@x0py23) (FStar.Pervasives.Native.Mktuple8__5 __@x0py23) (FStar.Pervasives.Native.Mktuple8__6 __@x0py23) (FStar.Pervasives.Native.Mktuple8__7 __@x0py23) (FStar.Pervasives.Native.Mktuple8__8 __@x0py23))))) (or (is-FStar.Pervasives.Native.Mktuple8 __@x0py23) (not (= (Term_constr_id __@x0py23) 1179)) (not (= __@x0py23 (FStar.Pervasives.Native.Mktuple8 (FStar.Pervasives.Native.Mktuple8__a __@x0py23) (FStar.Pervasives.Native.Mktuple8__b __@x0py23) (FStar.Pervasives.Native.Mktuple8__c __@x0py23) (FStar.Pervasives.Native.Mktuple8__d __@x0py23) (FStar.Pervasives.Native.Mktuple8__e __@x0py23) (FStar.Pervasives.Native.Mktuple8__f __@x0py23) (FStar.Pervasives.Native.Mktuple8__g __@x0py23) (FStar.Pervasives.Native.Mktuple8__h __@x0py23) (FStar.Pervasives.Native.Mktuple8__1 __@x0py23) (FStar.Pervasives.Native.Mktuple8__2 __@x0py23) (FStar.Pervasives.Native.Mktuple8__3 __@x0py23) (FStar.Pervasives.Native.Mktuple8__4 __@x0py23) (FStar.Pervasives.Native.Mktuple8__5 __@x0py23) (FStar.Pervasives.Native.Mktuple8__6 __@x0py23) (FStar.Pervasives.Native.Mktuple8__7 __@x0py23) (FStar.Pervasives.Native.Mktuple8__8 __@x0py23)))))) :pattern ((is-FStar.Pervasives.Native.Mktuple8 __@x0py23)) )) :named is-FStar.Pervasives.Native.Mktuple8-Rewrite-Definition))
(assert (! (forall ((__@x0py24 Term)) (! (and (or (not (is-FStar.Pervasives.V __@x0py24)) (and (= (Term_constr_id __@x0py24) 1764) (= __@x0py24 (FStar.Pervasives.V (FStar.Pervasives.V_a __@x0py24) (FStar.Pervasives.V_v __@x0py24))))) (or (is-FStar.Pervasives.V __@x0py24) (not (= (Term_constr_id __@x0py24) 1764)) (not (= __@x0py24 (FStar.Pervasives.V (FStar.Pervasives.V_a __@x0py24) (FStar.Pervasives.V_v __@x0py24)))))) :pattern ((is-FStar.Pervasives.V __@x0py24)) )) :named is-FStar.Pervasives.V-Rewrite-Definition))
(assert (! (forall ((__@x0py25 Term)) (! (and (or (not (is-FStar.Pervasives.E __@x0py25)) (and (= (Term_constr_id __@x0py25) 1769) (= __@x0py25 (FStar.Pervasives.E (FStar.Pervasives.E_a __@x0py25) (FStar.Pervasives.E_e __@x0py25))))) (or (is-FStar.Pervasives.E __@x0py25) (not (= (Term_constr_id __@x0py25) 1769)) (not (= __@x0py25 (FStar.Pervasives.E (FStar.Pervasives.E_a __@x0py25) (FStar.Pervasives.E_e __@x0py25)))))) :pattern ((is-FStar.Pervasives.E __@x0py25)) )) :named is-FStar.Pervasives.E-Rewrite-Definition))
(assert (! (forall ((__@x0py26 Term)) (! (and (or (not (is-FStar.Pervasives.Err __@x0py26)) (and (= (Term_constr_id __@x0py26) 1774) (= __@x0py26 (FStar.Pervasives.Err (FStar.Pervasives.Err_a __@x0py26) (FStar.Pervasives.Err_msg __@x0py26))))) (or (is-FStar.Pervasives.Err __@x0py26) (not (= (Term_constr_id __@x0py26) 1774)) (not (= __@x0py26 (FStar.Pervasives.Err (FStar.Pervasives.Err_a __@x0py26) (FStar.Pervasives.Err_msg __@x0py26)))))) :pattern ((is-FStar.Pervasives.Err __@x0py26)) )) :named is-FStar.Pervasives.Err-Rewrite-Definition))
(assert (! (forall ((__@x0py27 Term)) (! (and (or (not (is-FStar.Pervasives.Inl __@x0py27)) (and (= (Term_constr_id __@x0py27) 1899) (= __@x0py27 (FStar.Pervasives.Inl (FStar.Pervasives.Inl__a __@x0py27) (FStar.Pervasives.Inl__b __@x0py27) (FStar.Pervasives.Inl_v __@x0py27))))) (or (is-FStar.Pervasives.Inl __@x0py27) (not (= (Term_constr_id __@x0py27) 1899)) (not (= __@x0py27 (FStar.Pervasives.Inl (FStar.Pervasives.Inl__a __@x0py27) (FStar.Pervasives.Inl__b __@x0py27) (FStar.Pervasives.Inl_v __@x0py27)))))) :pattern ((is-FStar.Pervasives.Inl __@x0py27)) )) :named is-FStar.Pervasives.Inl-Rewrite-Definition))
(assert (! (forall ((__@x0py28 Term)) (! (and (or (not (is-FStar.Pervasives.Inr __@x0py28)) (and (= (Term_constr_id __@x0py28) 1904) (= __@x0py28 (FStar.Pervasives.Inr (FStar.Pervasives.Inr__a __@x0py28) (FStar.Pervasives.Inr__b __@x0py28) (FStar.Pervasives.Inr_v __@x0py28))))) (or (is-FStar.Pervasives.Inr __@x0py28) (not (= (Term_constr_id __@x0py28) 1904)) (not (= __@x0py28 (FStar.Pervasives.Inr (FStar.Pervasives.Inr__a __@x0py28) (FStar.Pervasives.Inr__b __@x0py28) (FStar.Pervasives.Inr_v __@x0py28)))))) :pattern ((is-FStar.Pervasives.Inr __@x0py28)) )) :named is-FStar.Pervasives.Inr-Rewrite-Definition))
(assert (! (forall ((__@x0py29 Term)) (! (and (or (not (is-FStar.Pervasives.Mkdtuple3 __@x0py29)) (and (= (Term_constr_id __@x0py29) 1939) (= __@x0py29 (FStar.Pervasives.Mkdtuple3 (FStar.Pervasives.Mkdtuple3_a __@x0py29) (FStar.Pervasives.Mkdtuple3_b __@x0py29) (FStar.Pervasives.Mkdtuple3_c __@x0py29) (FStar.Pervasives.Mkdtuple3__1 __@x0py29) (FStar.Pervasives.Mkdtuple3__2 __@x0py29) (FStar.Pervasives.Mkdtuple3__3 __@x0py29))))) (or (is-FStar.Pervasives.Mkdtuple3 __@x0py29) (not (= (Term_constr_id __@x0py29) 1939)) (not (= __@x0py29 (FStar.Pervasives.Mkdtuple3 (FStar.Pervasives.Mkdtuple3_a __@x0py29) (FStar.Pervasives.Mkdtuple3_b __@x0py29) (FStar.Pervasives.Mkdtuple3_c __@x0py29) (FStar.Pervasives.Mkdtuple3__1 __@x0py29) (FStar.Pervasives.Mkdtuple3__2 __@x0py29) (FStar.Pervasives.Mkdtuple3__3 __@x0py29)))))) :pattern ((is-FStar.Pervasives.Mkdtuple3 __@x0py29)) )) :named is-FStar.Pervasives.Mkdtuple3-Rewrite-Definition))
(assert (! (forall ((__@x0py30 Term)) (! (and (or (not (is-FStar.Pervasives.Mkdtuple4 __@x0py30)) (and (= (Term_constr_id __@x0py30) 1987) (= __@x0py30 (FStar.Pervasives.Mkdtuple4 (FStar.Pervasives.Mkdtuple4_a __@x0py30) (FStar.Pervasives.Mkdtuple4_b __@x0py30) (FStar.Pervasives.Mkdtuple4_c __@x0py30) (FStar.Pervasives.Mkdtuple4_d __@x0py30) (FStar.Pervasives.Mkdtuple4__1 __@x0py30) (FStar.Pervasives.Mkdtuple4__2 __@x0py30) (FStar.Pervasives.Mkdtuple4__3 __@x0py30) (FStar.Pervasives.Mkdtuple4__4 __@x0py30))))) (or (is-FStar.Pervasives.Mkdtuple4 __@x0py30) (not (= (Term_constr_id __@x0py30) 1987)) (not (= __@x0py30 (FStar.Pervasives.Mkdtuple4 (FStar.Pervasives.Mkdtuple4_a __@x0py30) (FStar.Pervasives.Mkdtuple4_b __@x0py30) (FStar.Pervasives.Mkdtuple4_c __@x0py30) (FStar.Pervasives.Mkdtuple4_d __@x0py30) (FStar.Pervasives.Mkdtuple4__1 __@x0py30) (FStar.Pervasives.Mkdtuple4__2 __@x0py30) (FStar.Pervasives.Mkdtuple4__3 __@x0py30) (FStar.Pervasives.Mkdtuple4__4 __@x0py30)))))) :pattern ((is-FStar.Pervasives.Mkdtuple4 __@x0py30)) )) :named is-FStar.Pervasives.Mkdtuple4-Rewrite-Definition))
(assert (! (forall ((__@x0py31 Term)) (! (and (or (not (is-FStar.Pervasives.PpxDerivingShow __@x0py31)) (and (= (Term_constr_id __@x0py31) 2051) (= __@x0py31 FStar.Pervasives.PpxDerivingShow))) (or (is-FStar.Pervasives.PpxDerivingShow __@x0py31) (not (= (Term_constr_id __@x0py31) 2051)) (not (= __@x0py31 FStar.Pervasives.PpxDerivingShow)))) :pattern ((is-FStar.Pervasives.PpxDerivingShow __@x0py31)) )) :named is-FStar.Pervasives.PpxDerivingShow-Rewrite-Definition))
(assert (! (forall ((__@x0py32 Term)) (! (and (or (not (is-FStar.Pervasives.PpxDerivingShowConstant __@x0py32)) (and (= (Term_constr_id __@x0py32) 2053) (= __@x0py32 (FStar.Pervasives.PpxDerivingShowConstant (FStar.Pervasives.PpxDerivingShowConstant__0 __@x0py32))))) (or (is-FStar.Pervasives.PpxDerivingShowConstant __@x0py32) (not (= (Term_constr_id __@x0py32) 2053)) (not (= __@x0py32 (FStar.Pervasives.PpxDerivingShowConstant (FStar.Pervasives.PpxDerivingShowConstant__0 __@x0py32)))))) :pattern ((is-FStar.Pervasives.PpxDerivingShowConstant __@x0py32)) )) :named is-FStar.Pervasives.PpxDerivingShowConstant-Rewrite-Definition))
(assert (! (forall ((__@x0py33 Term)) (! (and (or (not (is-FStar.Pervasives.PpxDerivingYoJson __@x0py33)) (and (= (Term_constr_id __@x0py33) 2058) (= __@x0py33 FStar.Pervasives.PpxDerivingYoJson))) (or (is-FStar.Pervasives.PpxDerivingYoJson __@x0py33) (not (= (Term_constr_id __@x0py33) 2058)) (not (= __@x0py33 FStar.Pervasives.PpxDerivingYoJson)))) :pattern ((is-FStar.Pervasives.PpxDerivingYoJson __@x0py33)) )) :named is-FStar.Pervasives.PpxDerivingYoJson-Rewrite-Definition))
(assert (! (forall ((__@x0py34 Term)) (! (and (or (not (is-FStar.Pervasives.CInline __@x0py34)) (and (= (Term_constr_id __@x0py34) 2060) (= __@x0py34 FStar.Pervasives.CInline))) (or (is-FStar.Pervasives.CInline __@x0py34) (not (= (Term_constr_id __@x0py34) 2060)) (not (= __@x0py34 FStar.Pervasives.CInline)))) :pattern ((is-FStar.Pervasives.CInline __@x0py34)) )) :named is-FStar.Pervasives.CInline-Rewrite-Definition))
(assert (! (forall ((__@x0py35 Term)) (! (and (or (not (is-FStar.Pervasives.Substitute __@x0py35)) (and (= (Term_constr_id __@x0py35) 2062) (= __@x0py35 FStar.Pervasives.Substitute))) (or (is-FStar.Pervasives.Substitute __@x0py35) (not (= (Term_constr_id __@x0py35) 2062)) (not (= __@x0py35 FStar.Pervasives.Substitute)))) :pattern ((is-FStar.Pervasives.Substitute __@x0py35)) )) :named is-FStar.Pervasives.Substitute-Rewrite-Definition))
(assert (! (forall ((__@x0py36 Term)) (! (and (or (not (is-FStar.Pervasives.Gc __@x0py36)) (and (= (Term_constr_id __@x0py36) 2064) (= __@x0py36 FStar.Pervasives.Gc))) (or (is-FStar.Pervasives.Gc __@x0py36) (not (= (Term_constr_id __@x0py36) 2064)) (not (= __@x0py36 FStar.Pervasives.Gc)))) :pattern ((is-FStar.Pervasives.Gc __@x0py36)) )) :named is-FStar.Pervasives.Gc-Rewrite-Definition))
(assert (! (forall ((__@x0py37 Term)) (! (and (or (not (is-FStar.Pervasives.Comment __@x0py37)) (and (= (Term_constr_id __@x0py37) 2066) (= __@x0py37 (FStar.Pervasives.Comment (FStar.Pervasives.Comment__0 __@x0py37))))) (or (is-FStar.Pervasives.Comment __@x0py37) (not (= (Term_constr_id __@x0py37) 2066)) (not (= __@x0py37 (FStar.Pervasives.Comment (FStar.Pervasives.Comment__0 __@x0py37)))))) :pattern ((is-FStar.Pervasives.Comment __@x0py37)) )) :named is-FStar.Pervasives.Comment-Rewrite-Definition))
(assert (! (forall ((__@x0py38 Term)) (! (and (or (not (is-FStar.Pervasives.CPrologue __@x0py38)) (and (= (Term_constr_id __@x0py38) 2070) (= __@x0py38 (FStar.Pervasives.CPrologue (FStar.Pervasives.CPrologue__0 __@x0py38))))) (or (is-FStar.Pervasives.CPrologue __@x0py38) (not (= (Term_constr_id __@x0py38) 2070)) (not (= __@x0py38 (FStar.Pervasives.CPrologue (FStar.Pervasives.CPrologue__0 __@x0py38)))))) :pattern ((is-FStar.Pervasives.CPrologue __@x0py38)) )) :named is-FStar.Pervasives.CPrologue-Rewrite-Definition))
(assert (! (forall ((__@x0py39 Term)) (! (and (or (not (is-FStar.Pervasives.CEpilogue __@x0py39)) (and (= (Term_constr_id __@x0py39) 2074) (= __@x0py39 (FStar.Pervasives.CEpilogue (FStar.Pervasives.CEpilogue__0 __@x0py39))))) (or (is-FStar.Pervasives.CEpilogue __@x0py39) (not (= (Term_constr_id __@x0py39) 2074)) (not (= __@x0py39 (FStar.Pervasives.CEpilogue (FStar.Pervasives.CEpilogue__0 __@x0py39)))))) :pattern ((is-FStar.Pervasives.CEpilogue __@x0py39)) )) :named is-FStar.Pervasives.CEpilogue-Rewrite-Definition))
(assert (! (forall ((__@x0py40 Term)) (! (and (or (not (is-FStar.Pervasives.CConst __@x0py40)) (and (= (Term_constr_id __@x0py40) 2078) (= __@x0py40 (FStar.Pervasives.CConst (FStar.Pervasives.CConst__0 __@x0py40))))) (or (is-FStar.Pervasives.CConst __@x0py40) (not (= (Term_constr_id __@x0py40) 2078)) (not (= __@x0py40 (FStar.Pervasives.CConst (FStar.Pervasives.CConst__0 __@x0py40)))))) :pattern ((is-FStar.Pervasives.CConst __@x0py40)) )) :named is-FStar.Pervasives.CConst-Rewrite-Definition))
(assert (! (forall ((__@x0py41 Term)) (! (and (or (not (is-False.CalcRefl __@x0py41)) (and (= (Term_constr_id __@x0py41) 2126) (= __@x0py41 (False.CalcRefl (False.CalcRefl_t __@x0py41) (False.CalcRefl_x __@x0py41))))) (or (is-False.CalcRefl __@x0py41) (not (= (Term_constr_id __@x0py41) 2126)) (not (= __@x0py41 (False.CalcRefl (False.CalcRefl_t __@x0py41) (False.CalcRefl_x __@x0py41)))))) :pattern ((is-False.CalcRefl __@x0py41)) )) :named is-False.CalcRefl-Rewrite-Definition))
(assert (! (forall ((__@x0py42 Term)) (! (and (or (not (is-False.CalcStep __@x0py42)) (and (= (Term_constr_id __@x0py42) 2131) (= __@x0py42 (False.CalcStep (False.CalcStep_t __@x0py42) (False.CalcStep_rs __@x0py42) (False.CalcStep_p __@x0py42) (False.CalcStep_x __@x0py42) (False.CalcStep_y __@x0py42) (False.CalcStep_z __@x0py42) (False.CalcStep__5 __@x0py42) (False.CalcStep__6 __@x0py42))))) (or (is-False.CalcStep __@x0py42) (not (= (Term_constr_id __@x0py42) 2131)) (not (= __@x0py42 (False.CalcStep (False.CalcStep_t __@x0py42) (False.CalcStep_rs __@x0py42) (False.CalcStep_p __@x0py42) (False.CalcStep_x __@x0py42) (False.CalcStep_y __@x0py42) (False.CalcStep_z __@x0py42) (False.CalcStep__5 __@x0py42) (False.CalcStep__6 __@x0py42)))))) :pattern ((is-False.CalcStep __@x0py42)) )) :named is-False.CalcStep-Rewrite-Definition))
(assert (! (forall ((tpy2 Term)) (! (and (or (is-LexCons tpy2) (not (is-Prims.LexCons tpy2))) (or (is-Prims.LexCons tpy2) (not (is-LexCons tpy2)))) :pattern ((is-Prims.LexCons tpy2)) )) :named is-Prims.LexCons-Rewrite-Definition))
(assert (! (forall ((@x0py0 Term)) (! (= (Prims.pow2 @x0py0) (Prims.pow2.fuel_instrumented MaxFuel @x0py0)) :pattern ((Prims.pow2 @x0py0)) )) :named @fuel_correspondence_Prims.pow2.fuel_instrumented))
(assert (! (forall ((@u0py0 Fuel)(@x1py0 Term)) (! (= (Prims.pow2.fuel_instrumented (SFuel @u0py0) @x1py0) (Prims.pow2.fuel_instrumented ZFuel @x1py0)) :pattern ((Prims.pow2.fuel_instrumented (SFuel @u0py0) @x1py0)) )) :named @fuel_irrelevance_Prims.pow2.fuel_instrumented))
(assert (! (Valid (ApplyTT __uu__PartialApp False.__proj__CalcStep__item__p@tok)) :named @kick_partial_app))
(assert (! (= MaxFuel (SFuel (SFuel ZFuel))) :named @MaxFuel_assumption))
(assert (! (= MaxIFuel (SFuel ZFuel)) :named @MaxIFuel_assumption))
(assert (! (forall ((@x0py1 Term)(@x1py1 Term)) (! (and (= (FStar.Pervasives.Native.with_type @x0py1 @x1py1) @x1py1) (HasType (FStar.Pervasives.Native.with_type @x0py1 @x1py1) @x0py1)) :pattern ((FStar.Pervasives.Native.with_type @x0py1 @x1py1)) )) :named @with_type_primitive_axiom))
(assert (! (forall ((fpy0 Fuel)(xpy2 Term)(tpy3 Term)) (! (and (or (not (HasTypeFuel (SFuel fpy0) xpy2 tpy3)) (HasTypeZ xpy2 tpy3)) (or (HasTypeFuel (SFuel fpy0) xpy2 tpy3) (not (HasTypeZ xpy2 tpy3)))) :pattern ((HasTypeFuel (SFuel fpy0) xpy2 tpy3)) )) :named A0))
(assert (! (forall ((dummypy0 Term)(bpy0 Bool)) (! (and (or (not (NoHoist dummypy0 bpy0)) bpy0) (or (NoHoist dummypy0 bpy0) (not bpy0))) :pattern ((NoHoist dummypy0 bpy0)) )) :named A1))
(assert (! (forall ((tpy4 Term)) (! (and (or (Valid tpy4) (forall ((epy0 Term)) (! (not (HasType epy0 tpy4)) :pattern ((HasType epy0 tpy4)) ))) (or (HasType (e!0 tpy4) tpy4) (not (Valid tpy4)))) :pattern ((Valid tpy4)) )) :named A2))
(assert (! (forall ((xpy3 Int)(ypy0 Int)) (! (= (_mul xpy3 ypy0) (* ypy0 xpy3)) :pattern ((_mul xpy3 ypy0)) )) :named A3))
(assert (! (forall ((xpy4 Int)(ypy1 Int)) (! (= (to_real (_div xpy4 ypy1)) (/ (to_real xpy4) (to_real ypy1))) :pattern ((_div xpy4 ypy1)) )) :named A4))
(assert (! (forall ((xpy5 Int)(ypy2 Int)) (! (= (_mod xpy5 ypy2) (mod xpy5 ypy2)) :pattern ((_mod xpy5 ypy2)) )) :named A5))
(assert (! (forall ((t1py0 Term)(t2py0 Term)(x1py0 Term)(x2py0 Term)(y1py0 Term)(y2py0 Term)) (! (and (or (Valid (Prims.precedes t1py0 t2py0 x1py0 y1py0)) (and (= x1py0 y1py0) (Valid (Prims.precedes Prims.lex_t Prims.lex_t x2py0 y2py0))) (not (Valid (Prims.precedes Prims.lex_t Prims.lex_t (LexCons t1py0 x1py0 x2py0) (LexCons t2py0 y1py0 y2py0))))) (or (Valid (Prims.precedes Prims.lex_t Prims.lex_t (LexCons t1py0 x1py0 x2py0) (LexCons t2py0 y1py0 y2py0))) (and (not (Valid (Prims.precedes t1py0 t2py0 x1py0 y1py0))) (or (not (= x1py0 y1py0)) (not (Valid (Prims.precedes Prims.lex_t Prims.lex_t x2py0 y2py0))))))) :pattern ((Prims.precedes Prims.lex_t Prims.lex_t (LexCons t1py0 x1py0 x2py0) (LexCons t2py0 y1py0 y2py0))) )) :named A6))
(assert (! (forall ((t1py1 Term)(t2py1 Term)(e1py0 Term)(e2py0 Term)) (! (and (or (Valid (Prims.precedes Prims.lex_t Prims.lex_t e1py0 e2py0)) (not (Valid (Prims.precedes t1py1 t2py1 e1py0 e2py0)))) (or (Valid (Prims.precedes t1py1 t2py1 e1py0 e2py0)) (not (Valid (Prims.precedes Prims.lex_t Prims.lex_t e1py0 e2py0))))) :pattern ((Prims.precedes t1py1 t2py1 e1py0 e2py0)) )) :named A7))
(assert (! (forall ((t1py2 Term)(t2py2 Term)) (! (and (or (not (Valid (Prims.precedes Prims.lex_t Prims.lex_t t1py2 t2py2))) (not (<= (Rank t2py2) (Rank t1py2)))) (or (Valid (Prims.precedes Prims.lex_t Prims.lex_t t1py2 t2py2)) (<= (Rank t2py2) (Rank t1py2)))) :pattern ((Prims.precedes Prims.lex_t Prims.lex_t t1py2 t2py2)) )) :named A8))
(assert (! (Valid (Prims.hasEq FStar.Pervasives.__internal_ocaml_attributes)) :named assumption_FStar.Pervasives.__internal_ocaml_attributes__uu___haseq))
(assert (! (forall ((@x0py2 Term)(@x1py2 Term)(@x2py0 Term)) (! (or (Valid (Prims.hasEq (FStar.Pervasives.dtuple3 @x0py2 @x1py2 @x2py0))) (not (HasType @x0py2 Tm_type)) (not (HasType @x1py2 (Tm_arrow_e06752ba152f81447b312efcdf8f0e23 @x0py2))) (not (HasType @x2py0 (Tm_arrow_614c7b5886a6e5b119a37c35c7e4bd59 @x1py2 @x0py2))) (and (HasType (@x3!3 @x2py0 @x1py2 @x0py2) @x0py2) (HasType (@x4!2 @x2py0 @x1py2 @x0py2) (ApplyTT @x1py2 (@x3!3 @x2py0 @x1py2 @x0py2))) (HasType (@x5!1 @x2py0 @x1py2 @x0py2) (ApplyTT (ApplyTT @x2py0 (@x3!3 @x2py0 @x1py2 @x0py2)) (@x4!2 @x2py0 @x1py2 @x0py2))) (or (not (Valid (Prims.hasEq @x0py2))) (not (Valid (Prims.hasEq (ApplyTT @x1py2 (@x3!3 @x2py0 @x1py2 @x0py2))))) (not (Valid (Prims.hasEq (ApplyTT (ApplyTT @x2py0 (@x3!3 @x2py0 @x1py2 @x0py2)) (@x4!2 @x2py0 @x1py2 @x0py2)))))))) :pattern ((Prims.hasEq (FStar.Pervasives.dtuple3 @x0py2 @x1py2 @x2py0))) )) :named assumption_FStar.Pervasives.dtuple3__uu___haseq))
(assert (! (forall ((@x0py3 Term)(@x1py3 Term)(@x2py1 Term)(@x3py0 Term)) (! (or (Valid (Prims.hasEq (FStar.Pervasives.dtuple4 @x0py3 @x1py3 @x2py1 @x3py0))) (not (HasType @x0py3 Tm_type)) (not (HasType @x1py3 (Tm_arrow_e06752ba152f81447b312efcdf8f0e23 @x0py3))) (not (HasType @x2py1 (Tm_arrow_614c7b5886a6e5b119a37c35c7e4bd59 @x1py3 @x0py3))) (not (HasType @x3py0 (Tm_arrow_dbf39bf049d72c3088e1ed84d246952d @x2py1 @x1py3 @x0py3))) (and (HasType (@x4!7 @x3py0 @x2py1 @x1py3 @x0py3) @x0py3) (HasType (@x5!6 @x3py0 @x2py1 @x1py3 @x0py3) (ApplyTT @x1py3 (@x4!7 @x3py0 @x2py1 @x1py3 @x0py3))) (HasType (@x6!5 @x3py0 @x2py1 @x1py3 @x0py3) (ApplyTT (ApplyTT @x2py1 (@x4!7 @x3py0 @x2py1 @x1py3 @x0py3)) (@x5!6 @x3py0 @x2py1 @x1py3 @x0py3))) (HasType (@x7!4 @x3py0 @x2py1 @x1py3 @x0py3) (ApplyTT (ApplyTT (ApplyTT @x3py0 (@x4!7 @x3py0 @x2py1 @x1py3 @x0py3)) (@x5!6 @x3py0 @x2py1 @x1py3 @x0py3)) (@x6!5 @x3py0 @x2py1 @x1py3 @x0py3))) (or (not (Valid (Prims.hasEq @x0py3))) (not (Valid (Prims.hasEq (ApplyTT @x1py3 (@x4!7 @x3py0 @x2py1 @x1py3 @x0py3))))) (not (Valid (Prims.hasEq (ApplyTT (ApplyTT @x2py1 (@x4!7 @x3py0 @x2py1 @x1py3 @x0py3)) (@x5!6 @x3py0 @x2py1 @x1py3 @x0py3))))) (not (Valid (Prims.hasEq (ApplyTT (ApplyTT (ApplyTT @x3py0 (@x4!7 @x3py0 @x2py1 @x1py3 @x0py3)) (@x5!6 @x3py0 @x2py1 @x1py3 @x0py3)) (@x6!5 @x3py0 @x2py1 @x1py3 @x0py3)))))))) :pattern ((Prims.hasEq (FStar.Pervasives.dtuple4 @x0py3 @x1py3 @x2py1 @x3py0))) )) :named assumption_FStar.Pervasives.dtuple4__uu___haseq))
(assert (! (forall ((@x0py4 Term)(@x1py4 Term)) (! (or (Valid (Prims.hasEq (FStar.Pervasives.either @x0py4 @x1py4))) (not (HasType @x0py4 Tm_type)) (not (HasType @x1py4 Tm_type)) (not (Valid (Prims.hasEq @x0py4))) (not (Valid (Prims.hasEq @x1py4)))) :pattern ((Prims.hasEq (FStar.Pervasives.either @x0py4 @x1py4))) )) :named assumption_FStar.Pervasives.either__uu___haseq))
(assert (! (forall ((@x0py5 Term)) (! (or (Valid (Prims.hasEq (FStar.Pervasives.Native.option @x0py5))) (not (HasType @x0py5 Tm_type)) (not (Valid (Prims.hasEq @x0py5)))) :pattern ((Prims.hasEq (FStar.Pervasives.Native.option @x0py5))) )) :named assumption_FStar.Pervasives.Native.option__uu___haseq))
(assert (! (forall ((@x0py6 Term)(@x1py5 Term)) (! (or (Valid (Prims.hasEq (FStar.Pervasives.Native.tuple2 @x0py6 @x1py5))) (not (Valid (Prims.hasEq @x0py6))) (not (Valid (Prims.hasEq @x1py5))) (not (HasType @x0py6 Tm_type)) (not (HasType @x1py5 Tm_type))) :pattern ((Prims.hasEq (FStar.Pervasives.Native.tuple2 @x0py6 @x1py5))) )) :named assumption_FStar.Pervasives.Native.tuple2__uu___haseq))
(assert (! (forall ((@x0py7 Term)(@x1py6 Term)(@x2py2 Term)) (! (or (not (Valid (Prims.hasEq @x0py7))) (not (HasType @x0py7 Tm_type)) (not (HasType @x1py6 Tm_type)) (Valid (Prims.hasEq (FStar.Pervasives.Native.tuple3 @x0py7 @x1py6 @x2py2))) (not (Valid (Prims.hasEq @x1py6))) (not (Valid (Prims.hasEq @x2py2))) (not (HasType @x2py2 Tm_type))) :pattern ((Prims.hasEq (FStar.Pervasives.Native.tuple3 @x0py7 @x1py6 @x2py2))) )) :named assumption_FStar.Pervasives.Native.tuple3__uu___haseq))
(assert (! (forall ((@x0py8 Term)(@x1py7 Term)(@x2py3 Term)(@x3py1 Term)) (! (or (Valid (Prims.hasEq (FStar.Pervasives.Native.tuple4 @x0py8 @x1py7 @x2py3 @x3py1))) (not (HasType @x0py8 Tm_type)) (not (HasType @x1py7 Tm_type)) (not (HasType @x2py3 Tm_type)) (not (HasType @x3py1 Tm_type)) (not (Valid (Prims.hasEq @x0py8))) (not (Valid (Prims.hasEq @x1py7))) (not (Valid (Prims.hasEq @x2py3))) (not (Valid (Prims.hasEq @x3py1)))) :pattern ((Prims.hasEq (FStar.Pervasives.Native.tuple4 @x0py8 @x1py7 @x2py3 @x3py1))) )) :named assumption_FStar.Pervasives.Native.tuple4__uu___haseq))
(assert (! (forall ((@x0py9 Term)(@x1py8 Term)(@x2py4 Term)(@x3py2 Term)(@x4py0 Term)) (! (or (Valid (Prims.hasEq (FStar.Pervasives.Native.tuple5 @x0py9 @x1py8 @x2py4 @x3py2 @x4py0))) (not (HasType @x0py9 Tm_type)) (not (HasType @x1py8 Tm_type)) (not (HasType @x2py4 Tm_type)) (not (HasType @x3py2 Tm_type)) (not (HasType @x4py0 Tm_type)) (not (Valid (Prims.hasEq @x0py9))) (not (Valid (Prims.hasEq @x1py8))) (not (Valid (Prims.hasEq @x2py4))) (not (Valid (Prims.hasEq @x3py2))) (not (Valid (Prims.hasEq @x4py0)))) :pattern ((Prims.hasEq (FStar.Pervasives.Native.tuple5 @x0py9 @x1py8 @x2py4 @x3py2 @x4py0))) )) :named assumption_FStar.Pervasives.Native.tuple5__uu___haseq))
(assert (! (forall ((@x0py10 Term)(@x1py9 Term)(@x2py5 Term)(@x3py3 Term)(@x4py1 Term)(@x5py0 Term)) (! (or (Valid (Prims.hasEq (FStar.Pervasives.Native.tuple6 @x0py10 @x1py9 @x2py5 @x3py3 @x4py1 @x5py0))) (not (HasType @x0py10 Tm_type)) (not (HasType @x1py9 Tm_type)) (not (HasType @x4py1 Tm_type)) (not (HasType @x5py0 Tm_type)) (not (Valid (Prims.hasEq @x0py10))) (not (HasType @x2py5 Tm_type)) (not (HasType @x3py3 Tm_type)) (not (Valid (Prims.hasEq @x1py9))) (not (Valid (Prims.hasEq @x2py5))) (not (Valid (Prims.hasEq @x3py3))) (not (Valid (Prims.hasEq @x4py1))) (not (Valid (Prims.hasEq @x5py0)))) :pattern ((Prims.hasEq (FStar.Pervasives.Native.tuple6 @x0py10 @x1py9 @x2py5 @x3py3 @x4py1 @x5py0))) )) :named assumption_FStar.Pervasives.Native.tuple6__uu___haseq))
(assert (! (forall ((@x0py11 Term)(@x1py10 Term)(@x2py6 Term)(@x3py4 Term)(@x4py2 Term)(@x5py1 Term)(@x6py0 Term)) (! (or (Valid (Prims.hasEq (FStar.Pervasives.Native.tuple7 @x0py11 @x1py10 @x2py6 @x3py4 @x4py2 @x5py1 @x6py0))) (not (HasType @x0py11 Tm_type)) (not (HasType @x1py10 Tm_type)) (not (HasType @x4py2 Tm_type)) (not (HasType @x5py1 Tm_type)) (not (HasType @x6py0 Tm_type)) (not (HasType @x2py6 Tm_type)) (not (HasType @x3py4 Tm_type)) (not (Valid (Prims.hasEq @x0py11))) (not (Valid (Prims.hasEq @x1py10))) (not (Valid (Prims.hasEq @x2py6))) (not (Valid (Prims.hasEq @x3py4))) (not (Valid (Prims.hasEq @x4py2))) (not (Valid (Prims.hasEq @x5py1))) (not (Valid (Prims.hasEq @x6py0)))) :pattern ((Prims.hasEq (FStar.Pervasives.Native.tuple7 @x0py11 @x1py10 @x2py6 @x3py4 @x4py2 @x5py1 @x6py0))) )) :named assumption_FStar.Pervasives.Native.tuple7__uu___haseq))
(assert (! (forall ((@x0py12 Term)(@x1py11 Term)(@x2py7 Term)(@x3py5 Term)(@x4py3 Term)(@x5py2 Term)(@x6py1 Term)(@x7py0 Term)) (! (or (Valid (Prims.hasEq (FStar.Pervasives.Native.tuple8 @x0py12 @x1py11 @x2py7 @x3py5 @x4py3 @x5py2 @x6py1 @x7py0))) (not (HasType @x0py12 Tm_type)) (not (HasType @x1py11 Tm_type)) (not (HasType @x2py7 Tm_type)) (not (HasType @x3py5 Tm_type)) (not (HasType @x4py3 Tm_type)) (not (HasType @x5py2 Tm_type)) (not (Valid (Prims.hasEq @x0py12))) (not (Valid (Prims.hasEq @x1py11))) (not (Valid (Prims.hasEq @x2py7))) (not (HasType @x6py1 Tm_type)) (not (HasType @x7py0 Tm_type)) (not (Valid (Prims.hasEq @x3py5))) (not (Valid (Prims.hasEq @x4py3))) (not (Valid (Prims.hasEq @x5py2))) (not (Valid (Prims.hasEq @x6py1))) (not (Valid (Prims.hasEq @x7py0)))) :pattern ((Prims.hasEq (FStar.Pervasives.Native.tuple8 @x0py12 @x1py11 @x2py7 @x3py5 @x4py3 @x5py2 @x6py1 @x7py0))) )) :named assumption_FStar.Pervasives.Native.tuple8__uu___haseq))
(assert (! (forall ((@x0py13 Term)(@x1py12 Term)) (! (or (Valid (Prims.hasEq (Prims.dtuple2 @x0py13 @x1py12))) (not (HasType @x0py13 Tm_type)) (not (HasType @x1py12 (Tm_arrow_e06752ba152f81447b312efcdf8f0e23 @x0py13))) (and (HasType (@x2!9 @x1py12 @x0py13) @x0py13) (HasType (@x3!8 @x1py12 @x0py13) (ApplyTT @x1py12 (@x2!9 @x1py12 @x0py13))) (or (not (Valid (Prims.hasEq @x0py13))) (not (Valid (Prims.hasEq (ApplyTT @x1py12 (@x2!9 @x1py12 @x0py13)))))))) :pattern ((Prims.hasEq (Prims.dtuple2 @x0py13 @x1py12))) )) :named assumption_Prims.dtuple2__uu___haseq))
(assert (! (Valid (Prims.hasEq Prims.bool)) :named assumption_Prims.HasEq_bool))
(assert (! (Valid (Prims.hasEq Prims.int)) :named assumption_Prims.HasEq_int))
(assert (! (Valid (Prims.hasEq Prims.string)) :named assumption_Prims.HasEq_string))
(assert (! (Valid (Prims.hasEq Prims.unit)) :named assumption_Prims.HasEq_unit))
(assert (! (forall ((@x0py14 Term)) (! (or (not (Valid (Prims.hasEq @x0py14))) (Valid (Prims.hasEq (Prims.list @x0py14))) (not (HasType @x0py14 Tm_type))) :pattern ((Prims.hasEq (Prims.list @x0py14))) )) :named assumption_Prims.list__uu___haseq))
(assert (! (forall ((@x0py15 Term)) (! (and (or (BoxBool_proj_0 @x0py15) (not (Valid (Prims.b2t @x0py15)))) (or (Valid (Prims.b2t @x0py15)) (not (BoxBool_proj_0 @x0py15)))) :pattern ((Prims.b2t @x0py15)) )) :named b2t_def))
(assert (! (forall ((@u0py1 Fuel)(@x1py13 Term)) (! (or (is-BoxBool @x1py13) (not (HasTypeFuel @u0py1 @x1py13 Prims.bool))) :pattern ((HasTypeFuel @u0py1 @x1py13 Prims.bool)) )) :named bool_inversion))
(assert (! (forall ((@u0py2 Bool)) (! (HasType (BoxBool @u0py2) Prims.bool) :pattern ((BoxBool @u0py2)) )) :named bool_typing))
(assert (! (forall ((@u0py3 Bool)) (! (= 8 (Term_constr_id (BoxBool @u0py3))) :pattern ((BoxBool @u0py3)) )) :named constructor_distinct_BoxBool))
(assert (! (forall ((@u0py4 Int)) (! (= 7 (Term_constr_id (BoxInt @u0py4))) :pattern ((BoxInt @u0py4)) )) :named constructor_distinct_BoxInt))
(assert (! (forall ((@u0py5 FString)) (! (= 9 (Term_constr_id (BoxString @u0py5))) :pattern ((BoxString @u0py5)) )) :named constructor_distinct_BoxString))
(assert (! (forall ((@x0py16 Term)(@x1py14 Term)(@x2py8 Term)(@x3py6 Term)) (! (= 2119 (Term_constr_id (False.calc_proof @x0py16 @x1py14 @x2py8 @x3py6))) :pattern ((False.calc_proof @x0py16 @x1py14 @x2py8 @x3py6)) )) :named constructor_distinct_False.calc_proof))
(assert (! (forall ((@x0py17 Term)(@x1py15 Term)) (! (= 2126 (Term_constr_id (False.CalcRefl @x0py17 @x1py15))) :pattern ((False.CalcRefl @x0py17 @x1py15)) )) :named constructor_distinct_False.CalcRefl))
(assert (! (forall ((@x0py18 Term)(@x1py16 Term)(@x2py9 Term)(@x3py7 Term)(@x4py4 Term)(@x5py3 Term)(@x6py2 Term)(@x7py1 Term)) (! (= 2131 (Term_constr_id (False.CalcStep @x0py18 @x1py16 @x2py9 @x3py7 @x4py4 @x5py3 @x6py2 @x7py1))) :pattern ((False.CalcStep @x0py18 @x1py16 @x2py9 @x3py7 @x4py4 @x5py3 @x6py2 @x7py1)) )) :named constructor_distinct_False.CalcStep))
(assert (! (= 2045 (Term_constr_id FStar.Pervasives.__internal_ocaml_attributes)) :named constructor_distinct_FStar.Pervasives.__internal_ocaml_attributes))
(assert (! (forall ((@x0py19 Term)) (! (= 2078 (Term_constr_id (FStar.Pervasives.CConst @x0py19))) :pattern ((FStar.Pervasives.CConst @x0py19)) )) :named constructor_distinct_FStar.Pervasives.CConst))
(assert (! (forall ((@x0py20 Term)) (! (= 2074 (Term_constr_id (FStar.Pervasives.CEpilogue @x0py20))) :pattern ((FStar.Pervasives.CEpilogue @x0py20)) )) :named constructor_distinct_FStar.Pervasives.CEpilogue))
(assert (! (= 2060 (Term_constr_id FStar.Pervasives.CInline)) :named constructor_distinct_FStar.Pervasives.CInline))
(assert (! (forall ((@x0py21 Term)) (! (= 2066 (Term_constr_id (FStar.Pervasives.Comment @x0py21))) :pattern ((FStar.Pervasives.Comment @x0py21)) )) :named constructor_distinct_FStar.Pervasives.Comment))
(assert (! (forall ((@x0py22 Term)) (! (= 2070 (Term_constr_id (FStar.Pervasives.CPrologue @x0py22))) :pattern ((FStar.Pervasives.CPrologue @x0py22)) )) :named constructor_distinct_FStar.Pervasives.CPrologue))
(assert (! (forall ((@x0py23 Term)(@x1py17 Term)(@x2py10 Term)) (! (= 1930 (Term_constr_id (FStar.Pervasives.dtuple3 @x0py23 @x1py17 @x2py10))) :pattern ((FStar.Pervasives.dtuple3 @x0py23 @x1py17 @x2py10)) )) :named constructor_distinct_FStar.Pervasives.dtuple3))
(assert (! (forall ((@x0py24 Term)(@x1py18 Term)(@x2py11 Term)(@x3py8 Term)) (! (= 1977 (Term_constr_id (FStar.Pervasives.dtuple4 @x0py24 @x1py18 @x2py11 @x3py8))) :pattern ((FStar.Pervasives.dtuple4 @x0py24 @x1py18 @x2py11 @x3py8)) )) :named constructor_distinct_FStar.Pervasives.dtuple4))
(assert (! (forall ((@x0py25 Term)(@x1py19 Term)) (! (= 1769 (Term_constr_id (FStar.Pervasives.E @x0py25 @x1py19))) :pattern ((FStar.Pervasives.E @x0py25 @x1py19)) )) :named constructor_distinct_FStar.Pervasives.E))
(assert (! (forall ((@x0py26 Term)(@x1py20 Term)) (! (= 1892 (Term_constr_id (FStar.Pervasives.either @x0py26 @x1py20))) :pattern ((FStar.Pervasives.either @x0py26 @x1py20)) )) :named constructor_distinct_FStar.Pervasives.either))
(assert (! (forall ((@x0py27 Term)(@x1py21 Term)) (! (= 1774 (Term_constr_id (FStar.Pervasives.Err @x0py27 @x1py21))) :pattern ((FStar.Pervasives.Err @x0py27 @x1py21)) )) :named constructor_distinct_FStar.Pervasives.Err))
(assert (! (= 2064 (Term_constr_id FStar.Pervasives.Gc)) :named constructor_distinct_FStar.Pervasives.Gc))
(assert (! (forall ((@x0py28 Term)(@x1py22 Term)(@x2py12 Term)) (! (= 1899 (Term_constr_id (FStar.Pervasives.Inl @x0py28 @x1py22 @x2py12))) :pattern ((FStar.Pervasives.Inl @x0py28 @x1py22 @x2py12)) )) :named constructor_distinct_FStar.Pervasives.Inl))
(assert (! (forall ((@x0py29 Term)(@x1py23 Term)(@x2py13 Term)) (! (= 1904 (Term_constr_id (FStar.Pervasives.Inr @x0py29 @x1py23 @x2py13))) :pattern ((FStar.Pervasives.Inr @x0py29 @x1py23 @x2py13)) )) :named constructor_distinct_FStar.Pervasives.Inr))
(assert (! (forall ((@x0py30 Term)(@x1py24 Term)(@x2py14 Term)(@x3py9 Term)(@x4py5 Term)(@x5py4 Term)) (! (= 1939 (Term_constr_id (FStar.Pervasives.Mkdtuple3 @x0py30 @x1py24 @x2py14 @x3py9 @x4py5 @x5py4))) :pattern ((FStar.Pervasives.Mkdtuple3 @x0py30 @x1py24 @x2py14 @x3py9 @x4py5 @x5py4)) )) :named constructor_distinct_FStar.Pervasives.Mkdtuple3))
(assert (! (forall ((@x0py31 Term)(@x1py25 Term)(@x2py15 Term)(@x3py10 Term)(@x4py6 Term)(@x5py5 Term)(@x6py3 Term)(@x7py2 Term)) (! (= 1987 (Term_constr_id (FStar.Pervasives.Mkdtuple4 @x0py31 @x1py25 @x2py15 @x3py10 @x4py6 @x5py5 @x6py3 @x7py2))) :pattern ((FStar.Pervasives.Mkdtuple4 @x0py31 @x1py25 @x2py15 @x3py10 @x4py6 @x5py5 @x6py3 @x7py2)) )) :named constructor_distinct_FStar.Pervasives.Mkdtuple4))
(assert (! (forall ((@x0py32 Term)(@x1py26 Term)(@x2py16 Term)(@x3py11 Term)) (! (= 1045 (Term_constr_id (FStar.Pervasives.Native.Mktuple2 @x0py32 @x1py26 @x2py16 @x3py11))) :pattern ((FStar.Pervasives.Native.Mktuple2 @x0py32 @x1py26 @x2py16 @x3py11)) )) :named constructor_distinct_FStar.Pervasives.Native.Mktuple2))
(assert (! (forall ((@x0py33 Term)(@x1py27 Term)(@x2py17 Term)(@x3py12 Term)(@x4py7 Term)(@x5py6 Term)) (! (= 1064 (Term_constr_id (FStar.Pervasives.Native.Mktuple3 @x0py33 @x1py27 @x2py17 @x3py12 @x4py7 @x5py6))) :pattern ((FStar.Pervasives.Native.Mktuple3 @x0py33 @x1py27 @x2py17 @x3py12 @x4py7 @x5py6)) )) :named constructor_distinct_FStar.Pervasives.Native.Mktuple3))
(assert (! (forall ((@x0py34 Term)(@x1py28 Term)(@x2py18 Term)(@x3py13 Term)(@x4py8 Term)(@x5py7 Term)(@x6py4 Term)(@x7py3 Term)) (! (= 1083 (Term_constr_id (FStar.Pervasives.Native.Mktuple4 @x0py34 @x1py28 @x2py18 @x3py13 @x4py8 @x5py7 @x6py4 @x7py3))) :pattern ((FStar.Pervasives.Native.Mktuple4 @x0py34 @x1py28 @x2py18 @x3py13 @x4py8 @x5py7 @x6py4 @x7py3)) )) :named constructor_distinct_FStar.Pervasives.Native.Mktuple4))
(assert (! (forall ((@x0py35 Term)(@x1py29 Term)(@x2py19 Term)(@x3py14 Term)(@x4py9 Term)(@x5py8 Term)(@x6py5 Term)(@x7py4 Term)(@x8py0 Term)(@x9py0 Term)) (! (= 1104 (Term_constr_id (FStar.Pervasives.Native.Mktuple5 @x0py35 @x1py29 @x2py19 @x3py14 @x4py9 @x5py8 @x6py5 @x7py4 @x8py0 @x9py0))) :pattern ((FStar.Pervasives.Native.Mktuple5 @x0py35 @x1py29 @x2py19 @x3py14 @x4py9 @x5py8 @x6py5 @x7py4 @x8py0 @x9py0)) )) :named constructor_distinct_FStar.Pervasives.Native.Mktuple5))
(assert (! (forall ((@x0py36 Term)(@x1py30 Term)(@x2py20 Term)(@x3py15 Term)(@x4py10 Term)(@x5py9 Term)(@x6py6 Term)(@x7py5 Term)(@x8py1 Term)(@x9py1 Term)(@x10py0 Term)(@x11py0 Term)) (! (= 1127 (Term_constr_id (FStar.Pervasives.Native.Mktuple6 @x0py36 @x1py30 @x2py20 @x3py15 @x4py10 @x5py9 @x6py6 @x7py5 @x8py1 @x9py1 @x10py0 @x11py0))) :pattern ((FStar.Pervasives.Native.Mktuple6 @x0py36 @x1py30 @x2py20 @x3py15 @x4py10 @x5py9 @x6py6 @x7py5 @x8py1 @x9py1 @x10py0 @x11py0)) )) :named constructor_distinct_FStar.Pervasives.Native.Mktuple6))
(assert (! (forall ((@x0py37 Term)(@x1py31 Term)(@x2py21 Term)(@x3py16 Term)(@x4py11 Term)(@x5py10 Term)(@x6py7 Term)(@x7py6 Term)(@x8py2 Term)(@x9py2 Term)(@x10py1 Term)(@x11py1 Term)(@x12py0 Term)(@x13py0 Term)) (! (= 1152 (Term_constr_id (FStar.Pervasives.Native.Mktuple7 @x0py37 @x1py31 @x2py21 @x3py16 @x4py11 @x5py10 @x6py7 @x7py6 @x8py2 @x9py2 @x10py1 @x11py1 @x12py0 @x13py0))) :pattern ((FStar.Pervasives.Native.Mktuple7 @x0py37 @x1py31 @x2py21 @x3py16 @x4py11 @x5py10 @x6py7 @x7py6 @x8py2 @x9py2 @x10py1 @x11py1 @x12py0 @x13py0)) )) :named constructor_distinct_FStar.Pervasives.Native.Mktuple7))
(assert (! (forall ((@x0py38 Term)(@x1py32 Term)(@x2py22 Term)(@x3py17 Term)(@x4py12 Term)(@x5py11 Term)(@x6py8 Term)(@x7py7 Term)(@x8py3 Term)(@x9py3 Term)(@x10py2 Term)(@x11py2 Term)(@x12py1 Term)(@x13py1 Term)(@x14py0 Term)(@x15py0 Term)) (! (= 1179 (Term_constr_id (FStar.Pervasives.Native.Mktuple8 @x0py38 @x1py32 @x2py22 @x3py17 @x4py12 @x5py11 @x6py8 @x7py7 @x8py3 @x9py3 @x10py2 @x11py2 @x12py1 @x13py1 @x14py0 @x15py0))) :pattern ((FStar.Pervasives.Native.Mktuple8 @x0py38 @x1py32 @x2py22 @x3py17 @x4py12 @x5py11 @x6py8 @x7py7 @x8py3 @x9py3 @x10py2 @x11py2 @x12py1 @x13py1 @x14py0 @x15py0)) )) :named constructor_distinct_FStar.Pervasives.Native.Mktuple8))
(assert (! (forall ((@x0py39 Term)) (! (= 1022 (Term_constr_id (FStar.Pervasives.Native.None @x0py39))) :pattern ((FStar.Pervasives.Native.None @x0py39)) )) :named constructor_distinct_FStar.Pervasives.Native.None))
(assert (! (= 1203 (Term_constr_id FStar.Pervasives.Native.norm_step)) :named constructor_distinct_FStar.Pervasives.Native.norm_step))
(assert (! (forall ((@x0py40 Term)) (! (= 1015 (Term_constr_id (FStar.Pervasives.Native.option @x0py40))) :pattern ((FStar.Pervasives.Native.option @x0py40)) )) :named constructor_distinct_FStar.Pervasives.Native.option))
(assert (! (forall ((@x0py41 Term)(@x1py33 Term)) (! (= 1027 (Term_constr_id (FStar.Pervasives.Native.Some @x0py41 @x1py33))) :pattern ((FStar.Pervasives.Native.Some @x0py41 @x1py33)) )) :named constructor_distinct_FStar.Pervasives.Native.Some))
(assert (! (forall ((@x0py42 Term)(@x1py34 Term)) (! (= 1038 (Term_constr_id (FStar.Pervasives.Native.tuple2 @x0py42 @x1py34))) :pattern ((FStar.Pervasives.Native.tuple2 @x0py42 @x1py34)) )) :named constructor_distinct_FStar.Pervasives.Native.tuple2))
(assert (! (forall ((@x0py43 Term)(@x1py35 Term)(@x2py23 Term)) (! (= 1057 (Term_constr_id (FStar.Pervasives.Native.tuple3 @x0py43 @x1py35 @x2py23))) :pattern ((FStar.Pervasives.Native.tuple3 @x0py43 @x1py35 @x2py23)) )) :named constructor_distinct_FStar.Pervasives.Native.tuple3))
(assert (! (forall ((@x0py44 Term)(@x1py36 Term)(@x2py24 Term)(@x3py18 Term)) (! (= 1076 (Term_constr_id (FStar.Pervasives.Native.tuple4 @x0py44 @x1py36 @x2py24 @x3py18))) :pattern ((FStar.Pervasives.Native.tuple4 @x0py44 @x1py36 @x2py24 @x3py18)) )) :named constructor_distinct_FStar.Pervasives.Native.tuple4))
(assert (! (forall ((@x0py45 Term)(@x1py37 Term)(@x2py25 Term)(@x3py19 Term)(@x4py13 Term)) (! (= 1097 (Term_constr_id (FStar.Pervasives.Native.tuple5 @x0py45 @x1py37 @x2py25 @x3py19 @x4py13))) :pattern ((FStar.Pervasives.Native.tuple5 @x0py45 @x1py37 @x2py25 @x3py19 @x4py13)) )) :named constructor_distinct_FStar.Pervasives.Native.tuple5))
(assert (! (forall ((@x0py46 Term)(@x1py38 Term)(@x2py26 Term)(@x3py20 Term)(@x4py14 Term)(@x5py12 Term)) (! (= 1120 (Term_constr_id (FStar.Pervasives.Native.tuple6 @x0py46 @x1py38 @x2py26 @x3py20 @x4py14 @x5py12))) :pattern ((FStar.Pervasives.Native.tuple6 @x0py46 @x1py38 @x2py26 @x3py20 @x4py14 @x5py12)) )) :named constructor_distinct_FStar.Pervasives.Native.tuple6))
(assert (! (forall ((@x0py47 Term)(@x1py39 Term)(@x2py27 Term)(@x3py21 Term)(@x4py15 Term)(@x5py13 Term)(@x6py9 Term)) (! (= 1145 (Term_constr_id (FStar.Pervasives.Native.tuple7 @x0py47 @x1py39 @x2py27 @x3py21 @x4py15 @x5py13 @x6py9))) :pattern ((FStar.Pervasives.Native.tuple7 @x0py47 @x1py39 @x2py27 @x3py21 @x4py15 @x5py13 @x6py9)) )) :named constructor_distinct_FStar.Pervasives.Native.tuple7))
(assert (! (forall ((@x0py48 Term)(@x1py40 Term)(@x2py28 Term)(@x3py22 Term)(@x4py16 Term)(@x5py14 Term)(@x6py10 Term)(@x7py8 Term)) (! (= 1172 (Term_constr_id (FStar.Pervasives.Native.tuple8 @x0py48 @x1py40 @x2py28 @x3py22 @x4py16 @x5py14 @x6py10 @x7py8))) :pattern ((FStar.Pervasives.Native.tuple8 @x0py48 @x1py40 @x2py28 @x3py22 @x4py16 @x5py14 @x6py10 @x7py8)) )) :named constructor_distinct_FStar.Pervasives.Native.tuple8))
(assert (! (= 2051 (Term_constr_id FStar.Pervasives.PpxDerivingShow)) :named constructor_distinct_FStar.Pervasives.PpxDerivingShow))
(assert (! (forall ((@x0py49 Term)) (! (= 2053 (Term_constr_id (FStar.Pervasives.PpxDerivingShowConstant @x0py49))) :pattern ((FStar.Pervasives.PpxDerivingShowConstant @x0py49)) )) :named constructor_distinct_FStar.Pervasives.PpxDerivingShowConstant))
(assert (! (= 2058 (Term_constr_id FStar.Pervasives.PpxDerivingYoJson)) :named constructor_distinct_FStar.Pervasives.PpxDerivingYoJson))
(assert (! (forall ((@x0py50 Term)) (! (= 1757 (Term_constr_id (FStar.Pervasives.result @x0py50))) :pattern ((FStar.Pervasives.result @x0py50)) )) :named constructor_distinct_FStar.Pervasives.result))
(assert (! (= 2062 (Term_constr_id FStar.Pervasives.Substitute)) :named constructor_distinct_FStar.Pervasives.Substitute))
(assert (! (forall ((@x0py51 Term)(@x1py41 Term)) (! (= 1764 (Term_constr_id (FStar.Pervasives.V @x0py51 @x1py41))) :pattern ((FStar.Pervasives.V @x0py51 @x1py41)) )) :named constructor_distinct_FStar.Pervasives.V))
(assert (! (forall ((@u0py6 Int)) (! (= 0 (FString_constr_id (FString_const @u0py6))) :pattern ((FString_const @u0py6)) )) :named constructor_distinct_FString_const))
(assert (! (forall ((@x0py52 Term)(@x1py42 Term)(@x2py29 Term)) (! (= 11 (Term_constr_id (LexCons @x0py52 @x1py42 @x2py29))) :pattern ((LexCons @x0py52 @x1py42 @x2py29)) )) :named constructor_distinct_LexCons))
(assert (! (forall ((@x0py53 Term)(@x1py43 Term)(@x2py30 Term)(@x3py23 Term)) (! (= 458 (Term_constr_id (Prims.And @x0py53 @x1py43 @x2py30 @x3py23))) :pattern ((Prims.And @x0py53 @x1py43 @x2py30 @x3py23)) )) :named constructor_distinct_Prims.And))
(assert (! (forall ((@x0py54 Term)) (! (= 576 (Term_constr_id (Prims.array @x0py54))) :pattern ((Prims.array @x0py54)) )) :named constructor_distinct_Prims.array))
(assert (! (= 390 (Term_constr_id Prims.attribute)) :named constructor_distinct_Prims.attribute))
(assert (! (= 396 (Term_constr_id Prims.bool)) :named constructor_distinct_Prims.bool))
(assert (! (forall ((@x0py55 Term)(@x1py44 Term)) (! (= 451 (Term_constr_id (Prims.c_and @x0py55 @x1py44))) :pattern ((Prims.c_and @x0py55 @x1py44)) )) :named constructor_distinct_Prims.c_and))
(assert (! (= 400 (Term_constr_id Prims.c_False)) :named constructor_distinct_Prims.c_False))
(assert (! (forall ((@x0py56 Term)(@x1py45 Term)) (! (= 470 (Term_constr_id (Prims.c_or @x0py56 @x1py45))) :pattern ((Prims.c_or @x0py56 @x1py45)) )) :named constructor_distinct_Prims.c_or))
(assert (! (= 405 (Term_constr_id Prims.c_True)) :named constructor_distinct_Prims.c_True))
(assert (! (forall ((@x0py57 Term)(@x1py46 Term)(@x2py31 Term)) (! (= 592 (Term_constr_id (Prims.Cons @x0py57 @x1py46 @x2py31))) :pattern ((Prims.Cons @x0py57 @x1py46 @x2py31)) )) :named constructor_distinct_Prims.Cons))
(assert (! (forall ((@x0py58 Term)(@x1py47 Term)) (! (= 516 (Term_constr_id (Prims.dtuple2 @x0py58 @x1py47))) :pattern ((Prims.dtuple2 @x0py58 @x1py47)) )) :named constructor_distinct_Prims.dtuple2))
(assert (! (forall ((@x0py59 Term)(@x1py48 Term)(@x2py32 Term)) (! (= 421 (Term_constr_id (Prims.equals @x0py59 @x1py48 @x2py32))) :pattern ((Prims.equals @x0py59 @x1py48 @x2py32)) )) :named constructor_distinct_Prims.equals))
(assert (! (= 572 (Term_constr_id Prims.exn)) :named constructor_distinct_Prims.exn))
(assert (! (forall ((@x0py60 Term)(@x1py49 Term)(@x2py33 Term)(@x3py24 Term)) (! (= 436 (Term_constr_id (Prims.h_equals @x0py60 @x1py49 @x2py33 @x3py24))) :pattern ((Prims.h_equals @x0py60 @x1py49 @x2py33 @x3py24)) )) :named constructor_distinct_Prims.h_equals))
(assert (! (forall ((@x0py61 Term)(@x1py50 Term)) (! (= 443 (Term_constr_id (Prims.HRefl @x0py61 @x1py50))) :pattern ((Prims.HRefl @x0py61 @x1py50)) )) :named constructor_distinct_Prims.HRefl))
(assert (! (= 565 (Term_constr_id Prims.int)) :named constructor_distinct_Prims.int))
(assert (! (forall ((@x0py62 Term)(@x1py51 Term)(@x2py34 Term)) (! (= 477 (Term_constr_id (Prims.Left @x0py62 @x1py51 @x2py34))) :pattern ((Prims.Left @x0py62 @x1py51 @x2py34)) )) :named constructor_distinct_Prims.Left))
(assert (! (= 621 (Term_constr_id Prims.LexTop)) :named constructor_distinct_Prims.LexTop))
(assert (! (forall ((@x0py63 Term)) (! (= 580 (Term_constr_id (Prims.list @x0py63))) :pattern ((Prims.list @x0py63)) )) :named constructor_distinct_Prims.list))
(assert (! (forall ((@x0py64 Term)(@x1py52 Term)(@x2py35 Term)(@x3py25 Term)) (! (= 524 (Term_constr_id (Prims.Mkdtuple2 @x0py64 @x1py52 @x2py35 @x3py25))) :pattern ((Prims.Mkdtuple2 @x0py64 @x1py52 @x2py35 @x3py25)) )) :named constructor_distinct_Prims.Mkdtuple2))
(assert (! (forall ((@x0py65 Term)) (! (= 587 (Term_constr_id (Prims.Nil @x0py65))) :pattern ((Prims.Nil @x0py65)) )) :named constructor_distinct_Prims.Nil))
(assert (! (= 548 (Term_constr_id Prims.range)) :named constructor_distinct_Prims.range))
(assert (! (forall ((@x0py66 Term)(@x1py53 Term)) (! (= 428 (Term_constr_id (Prims.Refl @x0py66 @x1py53))) :pattern ((Prims.Refl @x0py66 @x1py53)) )) :named constructor_distinct_Prims.Refl))
(assert (! (forall ((@x0py67 Term)(@x1py54 Term)(@x2py36 Term)) (! (= 482 (Term_constr_id (Prims.Right @x0py67 @x1py54 @x2py36))) :pattern ((Prims.Right @x0py67 @x1py54 @x2py36)) )) :named constructor_distinct_Prims.Right))
(assert (! (= 551 (Term_constr_id Prims.string)) :named constructor_distinct_Prims.string))
(assert (! (= 411 (Term_constr_id Prims.T)) :named constructor_distinct_Prims.T))
(assert (! (= 414 (Term_constr_id Prims.unit)) :named constructor_distinct_Prims.unit))
(assert (! (forall ((@u0py7 Int)) (! (= 3 (Term_constr_id (Tm_arrow @u0py7))) :pattern ((Tm_arrow @u0py7)) )) :named constructor_distinct_Tm_arrow))
(assert (! (= 2 (Term_constr_id Tm_type)) :named constructor_distinct_Tm_type))
(assert (! (= 6 (Term_constr_id Tm_unit)) :named constructor_distinct_Tm_unit))
(assert (! (forall ((@u0py8 Fuel)(@x1py55 Term)(@x2py37 Term)(@x3py26 Term)(@x4py17 Term)(@x5py15 Term)(@x6py11 Term)) (! (or (not (HasTypeFuel (SFuel @u0py8) (False.CalcRefl @x1py55 @x2py37) (False.calc_proof @x3py26 @x4py17 @x5py15 @x6py11))) (and (= @x2py37 @x6py11) (= @x2py37 @x5py15) (= (Prims.Nil (False.relation @x1py55)) @x4py17) (HasTypeFuel @u0py8 @x3py26 Tm_type) (HasTypeFuel @u0py8 @x2py37 @x3py26) (HasTypeFuel @u0py8 @x1py55 Tm_type) (HasTypeFuel @u0py8 @x2py37 @x1py55))) :pattern ((HasTypeFuel (SFuel @u0py8) (False.CalcRefl @x1py55 @x2py37) (False.calc_proof @x3py26 @x4py17 @x5py15 @x6py11))) )) :named data_elim_False.CalcRefl))
(assert (! (forall ((@u0py9 Fuel)(@x1py56 Term)(@x2py38 Term)(@x3py27 Term)(@x4py18 Term)(@x5py16 Term)(@x6py12 Term)(@x7py9 Term)(@x8py4 Term)(@x9py4 Term)(@x10py3 Term)(@x11py3 Term)(@x12py2 Term)) (! (or (not (HasTypeFuel (SFuel @u0py9) (False.CalcStep @x1py56 @x2py38 @x3py27 @x4py18 @x5py16 @x6py12 @x7py9 @x8py4) (False.calc_proof @x9py4 @x10py3 @x11py3 @x12py2))) (and (= @x6py12 @x12py2) (= @x4py18 @x11py3) (= (Prims.Cons (False.relation @x1py56) @x3py27 @x2py38) @x10py3) (HasTypeFuel @u0py9 @x9py4 Tm_type) (HasTypeFuel @u0py9 @x2py38 (Prims.list (False.relation @x9py4))) (HasTypeFuel @u0py9 @x3py27 (False.relation @x9py4)) (HasTypeFuel @u0py9 @x4py18 @x9py4) (HasTypeFuel @u0py9 @x5py16 @x9py4) (HasTypeFuel @u0py9 @x6py12 @x9py4) (HasTypeFuel @u0py9 @x7py9 (False.calc_proof @x9py4 @x2py38 @x4py18 @x5py16)) (HasTypeFuel @u0py9 @x1py56 Tm_type) (HasTypeFuel @u0py9 @x2py38 (Prims.list (False.relation @x1py56))) (HasTypeFuel @u0py9 @x3py27 (False.relation @x1py56)) (HasTypeFuel @u0py9 @x4py18 @x1py56) (HasTypeFuel @u0py9 @x5py16 @x1py56) (HasTypeFuel @u0py9 @x6py12 @x1py56) (HasTypeFuel @u0py9 @x7py9 (False.calc_proof @x1py56 @x2py38 @x4py18 @x5py16)) (HasTypeFuel @u0py9 @x8py4 (Prims.squash (ApplyTT (ApplyTT @x3py27 @x5py16) @x6py12))))) :pattern ((HasTypeFuel (SFuel @u0py9) (False.CalcStep @x1py56 @x2py38 @x3py27 @x4py18 @x5py16 @x6py12 @x7py9 @x8py4) (False.calc_proof @x9py4 @x10py3 @x11py3 @x12py2))) )) :named data_elim_False.CalcStep))
(assert (! (forall ((@u0py10 Fuel)(@x1py57 Term)) (! (or (not (HasTypeFuel (SFuel @u0py10) (FStar.Pervasives.CConst @x1py57) FStar.Pervasives.__internal_ocaml_attributes)) (HasTypeFuel @u0py10 @x1py57 Prims.string)) :pattern ((HasTypeFuel (SFuel @u0py10) (FStar.Pervasives.CConst @x1py57) FStar.Pervasives.__internal_ocaml_attributes)) )) :named data_elim_FStar.Pervasives.CConst))
(assert (! (forall ((@u0py11 Fuel)(@x1py58 Term)) (! (or (not (HasTypeFuel (SFuel @u0py11) (FStar.Pervasives.CEpilogue @x1py58) FStar.Pervasives.__internal_ocaml_attributes)) (HasTypeFuel @u0py11 @x1py58 Prims.string)) :pattern ((HasTypeFuel (SFuel @u0py11) (FStar.Pervasives.CEpilogue @x1py58) FStar.Pervasives.__internal_ocaml_attributes)) )) :named data_elim_FStar.Pervasives.CEpilogue))
(assert (! (forall ((@u0py12 Fuel)(@x1py59 Term)) (! (or (not (HasTypeFuel (SFuel @u0py12) (FStar.Pervasives.Comment @x1py59) FStar.Pervasives.__internal_ocaml_attributes)) (HasTypeFuel @u0py12 @x1py59 Prims.string)) :pattern ((HasTypeFuel (SFuel @u0py12) (FStar.Pervasives.Comment @x1py59) FStar.Pervasives.__internal_ocaml_attributes)) )) :named data_elim_FStar.Pervasives.Comment))
(assert (! (forall ((@u0py13 Fuel)(@x1py60 Term)) (! (or (not (HasTypeFuel (SFuel @u0py13) (FStar.Pervasives.CPrologue @x1py60) FStar.Pervasives.__internal_ocaml_attributes)) (HasTypeFuel @u0py13 @x1py60 Prims.string)) :pattern ((HasTypeFuel (SFuel @u0py13) (FStar.Pervasives.CPrologue @x1py60) FStar.Pervasives.__internal_ocaml_attributes)) )) :named data_elim_FStar.Pervasives.CPrologue))
(assert (! (forall ((@u0py14 Fuel)(@x1py61 Term)(@x2py39 Term)(@x3py28 Term)) (! (or (not (HasTypeFuel (SFuel @u0py14) (FStar.Pervasives.E @x1py61 @x2py39) (FStar.Pervasives.result @x3py28))) (and (HasTypeFuel @u0py14 @x3py28 Tm_type) (HasTypeFuel @u0py14 @x1py61 Tm_type) (HasTypeFuel @u0py14 @x2py39 Prims.exn))) :pattern ((HasTypeFuel (SFuel @u0py14) (FStar.Pervasives.E @x1py61 @x2py39) (FStar.Pervasives.result @x3py28))) )) :named data_elim_FStar.Pervasives.E))
(assert (! (forall ((@u0py15 Fuel)(@x1py62 Term)(@x2py40 Term)(@x3py29 Term)) (! (or (not (HasTypeFuel (SFuel @u0py15) (FStar.Pervasives.Err @x1py62 @x2py40) (FStar.Pervasives.result @x3py29))) (and (HasTypeFuel @u0py15 @x3py29 Tm_type) (HasTypeFuel @u0py15 @x1py62 Tm_type) (HasTypeFuel @u0py15 @x2py40 Prims.string))) :pattern ((HasTypeFuel (SFuel @u0py15) (FStar.Pervasives.Err @x1py62 @x2py40) (FStar.Pervasives.result @x3py29))) )) :named data_elim_FStar.Pervasives.Err))
(assert (! (forall ((@u0py16 Fuel)(@x1py63 Term)(@x2py41 Term)(@x3py30 Term)(@x4py19 Term)(@x5py17 Term)) (! (or (not (HasTypeFuel (SFuel @u0py16) (FStar.Pervasives.Inl @x1py63 @x2py41 @x3py30) (FStar.Pervasives.either @x4py19 @x5py17))) (and (HasTypeFuel @u0py16 @x5py17 Tm_type) (HasTypeFuel @u0py16 @x4py19 Tm_type) (HasTypeFuel @u0py16 @x3py30 @x4py19) (HasTypeFuel @u0py16 @x1py63 Tm_type) (HasTypeFuel @u0py16 @x2py41 Tm_type) (HasTypeFuel @u0py16 @x3py30 @x1py63))) :pattern ((HasTypeFuel (SFuel @u0py16) (FStar.Pervasives.Inl @x1py63 @x2py41 @x3py30) (FStar.Pervasives.either @x4py19 @x5py17))) )) :named data_elim_FStar.Pervasives.Inl))
(assert (! (forall ((@u0py17 Fuel)(@x1py64 Term)(@x2py42 Term)(@x3py31 Term)(@x4py20 Term)(@x5py18 Term)) (! (or (not (HasTypeFuel (SFuel @u0py17) (FStar.Pervasives.Inr @x1py64 @x2py42 @x3py31) (FStar.Pervasives.either @x4py20 @x5py18))) (and (HasTypeFuel @u0py17 @x5py18 Tm_type) (HasTypeFuel @u0py17 @x3py31 @x5py18) (HasTypeFuel @u0py17 @x4py20 Tm_type) (HasTypeFuel @u0py17 @x1py64 Tm_type) (HasTypeFuel @u0py17 @x2py42 Tm_type) (HasTypeFuel @u0py17 @x3py31 @x2py42))) :pattern ((HasTypeFuel (SFuel @u0py17) (FStar.Pervasives.Inr @x1py64 @x2py42 @x3py31) (FStar.Pervasives.either @x4py20 @x5py18))) )) :named data_elim_FStar.Pervasives.Inr))
(assert (! (forall ((@u0py18 Fuel)(@x1py65 Term)(@x2py43 Term)(@x3py32 Term)(@x4py21 Term)(@x5py19 Term)(@x6py13 Term)(@x7py10 Term)(@x8py5 Term)(@x9py5 Term)) (! (or (not (HasTypeFuel (SFuel @u0py18) (FStar.Pervasives.Mkdtuple3 @x1py65 @x2py43 @x3py32 @x4py21 @x5py19 @x6py13) (FStar.Pervasives.dtuple3 @x7py10 @x8py5 @x9py5))) (and (HasTypeFuel @u0py18 @x9py5 (Tm_arrow_614c7b5886a6e5b119a37c35c7e4bd59 @x2py43 @x1py65)) (HasTypeFuel @u0py18 @x6py13 (ApplyTT (ApplyTT @x9py5 @x4py21) @x5py19)) (HasTypeFuel @u0py18 @x8py5 (Tm_arrow_e06752ba152f81447b312efcdf8f0e23 @x1py65)) (HasTypeFuel @u0py18 @x3py32 (Tm_arrow_614c7b5886a6e5b119a37c35c7e4bd59 @x8py5 @x1py65)) (HasTypeFuel @u0py18 @x5py19 (ApplyTT @x8py5 @x4py21)) (HasTypeFuel @u0py18 @x7py10 Tm_type) (HasTypeFuel @u0py18 @x2py43 (Tm_arrow_e06752ba152f81447b312efcdf8f0e23 @x7py10)) (HasTypeFuel @u0py18 @x3py32 (Tm_arrow_614c7b5886a6e5b119a37c35c7e4bd59 @x2py43 @x7py10)) (HasTypeFuel @u0py18 @x4py21 @x7py10) (HasTypeFuel @u0py18 @x1py65 Tm_type) (HasTypeFuel @u0py18 @x2py43 (Tm_arrow_e06752ba152f81447b312efcdf8f0e23 @x1py65)) (HasTypeFuel @u0py18 @x3py32 (Tm_arrow_614c7b5886a6e5b119a37c35c7e4bd59 @x2py43 @x1py65)) (HasTypeFuel @u0py18 @x4py21 @x1py65) (HasTypeFuel @u0py18 @x5py19 (ApplyTT @x2py43 @x4py21)) (HasTypeFuel @u0py18 @x6py13 (ApplyTT (ApplyTT @x3py32 @x4py21) @x5py19)))) :pattern ((HasTypeFuel (SFuel @u0py18) (FStar.Pervasives.Mkdtuple3 @x1py65 @x2py43 @x3py32 @x4py21 @x5py19 @x6py13) (FStar.Pervasives.dtuple3 @x7py10 @x8py5 @x9py5))) )) :named data_elim_FStar.Pervasives.Mkdtuple3))
(assert (! (forall ((@u0py19 Fuel)(@x1py66 Term)(@x2py44 Term)(@x3py33 Term)(@x4py22 Term)(@x5py20 Term)(@x6py14 Term)(@x7py11 Term)(@x8py6 Term)(@x9py6 Term)(@x10py4 Term)(@x11py4 Term)(@x12py3 Term)) (! (or (not (HasTypeFuel (SFuel @u0py19) (FStar.Pervasives.Mkdtuple4 @x1py66 @x2py44 @x3py33 @x4py22 @x5py20 @x6py14 @x7py11 @x8py6) (FStar.Pervasives.dtuple4 @x9py6 @x10py4 @x11py4 @x12py3))) (and (HasTypeFuel @u0py19 @x12py3 (Tm_arrow_dbf39bf049d72c3088e1ed84d246952d @x3py33 @x2py44 @x1py66)) (HasTypeFuel @u0py19 @x8py6 (ApplyTT (ApplyTT (ApplyTT @x12py3 @x5py20) @x6py14) @x7py11)) (HasTypeFuel @u0py19 @x11py4 (Tm_arrow_614c7b5886a6e5b119a37c35c7e4bd59 @x2py44 @x1py66)) (HasTypeFuel @u0py19 @x4py22 (Tm_arrow_dbf39bf049d72c3088e1ed84d246952d @x11py4 @x2py44 @x1py66)) (HasTypeFuel @u0py19 @x7py11 (ApplyTT (ApplyTT @x11py4 @x5py20) @x6py14)) (HasTypeFuel @u0py19 @x10py4 (Tm_arrow_e06752ba152f81447b312efcdf8f0e23 @x1py66)) (HasTypeFuel @u0py19 @x3py33 (Tm_arrow_614c7b5886a6e5b119a37c35c7e4bd59 @x10py4 @x1py66)) (HasTypeFuel @u0py19 @x4py22 (Tm_arrow_dbf39bf049d72c3088e1ed84d246952d @x3py33 @x10py4 @x1py66)) (HasTypeFuel @u0py19 @x6py14 (ApplyTT @x10py4 @x5py20)) (HasTypeFuel @u0py19 @x9py6 Tm_type) (HasTypeFuel @u0py19 @x2py44 (Tm_arrow_e06752ba152f81447b312efcdf8f0e23 @x9py6)) (HasTypeFuel @u0py19 @x3py33 (Tm_arrow_614c7b5886a6e5b119a37c35c7e4bd59 @x2py44 @x9py6)) (HasTypeFuel @u0py19 @x4py22 (Tm_arrow_dbf39bf049d72c3088e1ed84d246952d @x3py33 @x2py44 @x9py6)) (HasTypeFuel @u0py19 @x5py20 @x9py6) (HasTypeFuel @u0py19 @x1py66 Tm_type) (HasTypeFuel @u0py19 @x2py44 (Tm_arrow_e06752ba152f81447b312efcdf8f0e23 @x1py66)) (HasTypeFuel @u0py19 @x3py33 (Tm_arrow_614c7b5886a6e5b119a37c35c7e4bd59 @x2py44 @x1py66)) (HasTypeFuel @u0py19 @x4py22 (Tm_arrow_dbf39bf049d72c3088e1ed84d246952d @x3py33 @x2py44 @x1py66)) (HasTypeFuel @u0py19 @x5py20 @x1py66) (HasTypeFuel @u0py19 @x6py14 (ApplyTT @x2py44 @x5py20)) (HasTypeFuel @u0py19 @x7py11 (ApplyTT (ApplyTT @x3py33 @x5py20) @x6py14)) (HasTypeFuel @u0py19 @x8py6 (ApplyTT (ApplyTT (ApplyTT @x4py22 @x5py20) @x6py14) @x7py11)))) :pattern ((HasTypeFuel (SFuel @u0py19) (FStar.Pervasives.Mkdtuple4 @x1py66 @x2py44 @x3py33 @x4py22 @x5py20 @x6py14 @x7py11 @x8py6) (FStar.Pervasives.dtuple4 @x9py6 @x10py4 @x11py4 @x12py3))) )) :named data_elim_FStar.Pervasives.Mkdtuple4))
(assert (! (forall ((@u0py20 Fuel)(@x1py67 Term)(@x2py45 Term)(@x3py34 Term)(@x4py23 Term)(@x5py21 Term)(@x6py15 Term)) (! (or (not (HasTypeFuel (SFuel @u0py20) (FStar.Pervasives.Native.Mktuple2 @x1py67 @x2py45 @x3py34 @x4py23) (FStar.Pervasives.Native.tuple2 @x5py21 @x6py15))) (and (HasTypeFuel @u0py20 @x6py15 Tm_type) (HasTypeFuel @u0py20 @x4py23 @x6py15) (HasTypeFuel @u0py20 @x5py21 Tm_type) (HasTypeFuel @u0py20 @x3py34 @x5py21) (HasTypeFuel @u0py20 @x1py67 Tm_type) (HasTypeFuel @u0py20 @x2py45 Tm_type) (HasTypeFuel @u0py20 @x3py34 @x1py67) (HasTypeFuel @u0py20 @x4py23 @x2py45))) :pattern ((HasTypeFuel (SFuel @u0py20) (FStar.Pervasives.Native.Mktuple2 @x1py67 @x2py45 @x3py34 @x4py23) (FStar.Pervasives.Native.tuple2 @x5py21 @x6py15))) )) :named data_elim_FStar.Pervasives.Native.Mktuple2))
(assert (! (forall ((@u0py21 Fuel)(@x1py68 Term)(@x2py46 Term)(@x3py35 Term)(@x4py24 Term)(@x5py22 Term)(@x6py16 Term)(@x7py12 Term)(@x8py7 Term)(@x9py7 Term)) (! (or (not (HasTypeFuel (SFuel @u0py21) (FStar.Pervasives.Native.Mktuple3 @x1py68 @x2py46 @x3py35 @x4py24 @x5py22 @x6py16) (FStar.Pervasives.Native.tuple3 @x7py12 @x8py7 @x9py7))) (and (HasTypeFuel @u0py21 @x9py7 Tm_type) (HasTypeFuel @u0py21 @x6py16 @x9py7) (HasTypeFuel @u0py21 @x8py7 Tm_type) (HasTypeFuel @u0py21 @x5py22 @x8py7) (HasTypeFuel @u0py21 @x7py12 Tm_type) (HasTypeFuel @u0py21 @x4py24 @x7py12) (HasTypeFuel @u0py21 @x1py68 Tm_type) (HasTypeFuel @u0py21 @x2py46 Tm_type) (HasTypeFuel @u0py21 @x3py35 Tm_type) (HasTypeFuel @u0py21 @x4py24 @x1py68) (HasTypeFuel @u0py21 @x5py22 @x2py46) (HasTypeFuel @u0py21 @x6py16 @x3py35))) :pattern ((HasTypeFuel (SFuel @u0py21) (FStar.Pervasives.Native.Mktuple3 @x1py68 @x2py46 @x3py35 @x4py24 @x5py22 @x6py16) (FStar.Pervasives.Native.tuple3 @x7py12 @x8py7 @x9py7))) )) :named data_elim_FStar.Pervasives.Native.Mktuple3))
(assert (! (forall ((@u0py22 Fuel)(@x1py69 Term)(@x2py47 Term)(@x3py36 Term)(@x4py25 Term)(@x5py23 Term)(@x6py17 Term)(@x7py13 Term)(@x8py8 Term)(@x9py8 Term)(@x10py5 Term)(@x11py5 Term)(@x12py4 Term)) (! (or (not (HasTypeFuel (SFuel @u0py22) (FStar.Pervasives.Native.Mktuple4 @x1py69 @x2py47 @x3py36 @x4py25 @x5py23 @x6py17 @x7py13 @x8py8) (FStar.Pervasives.Native.tuple4 @x9py8 @x10py5 @x11py5 @x12py4))) (and (HasTypeFuel @u0py22 @x12py4 Tm_type) (HasTypeFuel @u0py22 @x8py8 @x12py4) (HasTypeFuel @u0py22 @x11py5 Tm_type) (HasTypeFuel @u0py22 @x7py13 @x11py5) (HasTypeFuel @u0py22 @x10py5 Tm_type) (HasTypeFuel @u0py22 @x6py17 @x10py5) (HasTypeFuel @u0py22 @x9py8 Tm_type) (HasTypeFuel @u0py22 @x5py23 @x9py8) (HasTypeFuel @u0py22 @x1py69 Tm_type) (HasTypeFuel @u0py22 @x2py47 Tm_type) (HasTypeFuel @u0py22 @x3py36 Tm_type) (HasTypeFuel @u0py22 @x4py25 Tm_type) (HasTypeFuel @u0py22 @x5py23 @x1py69) (HasTypeFuel @u0py22 @x6py17 @x2py47) (HasTypeFuel @u0py22 @x7py13 @x3py36) (HasTypeFuel @u0py22 @x8py8 @x4py25))) :pattern ((HasTypeFuel (SFuel @u0py22) (FStar.Pervasives.Native.Mktuple4 @x1py69 @x2py47 @x3py36 @x4py25 @x5py23 @x6py17 @x7py13 @x8py8) (FStar.Pervasives.Native.tuple4 @x9py8 @x10py5 @x11py5 @x12py4))) )) :named data_elim_FStar.Pervasives.Native.Mktuple4))
(assert (! (forall ((@u0py23 Fuel)(@x1py70 Term)(@x2py48 Term)(@x3py37 Term)(@x4py26 Term)(@x5py24 Term)(@x6py18 Term)(@x7py14 Term)(@x8py9 Term)(@x9py9 Term)(@x10py6 Term)(@x11py6 Term)(@x12py5 Term)(@x13py2 Term)(@x14py1 Term)(@x15py1 Term)) (! (or (not (HasTypeFuel (SFuel @u0py23) (FStar.Pervasives.Native.Mktuple5 @x1py70 @x2py48 @x3py37 @x4py26 @x5py24 @x6py18 @x7py14 @x8py9 @x9py9 @x10py6) (FStar.Pervasives.Native.tuple5 @x11py6 @x12py5 @x13py2 @x14py1 @x15py1))) (and (HasTypeFuel @u0py23 @x15py1 Tm_type) (HasTypeFuel @u0py23 @x10py6 @x15py1) (HasTypeFuel @u0py23 @x14py1 Tm_type) (HasTypeFuel @u0py23 @x9py9 @x14py1) (HasTypeFuel @u0py23 @x13py2 Tm_type) (HasTypeFuel @u0py23 @x8py9 @x13py2) (HasTypeFuel @u0py23 @x12py5 Tm_type) (HasTypeFuel @u0py23 @x7py14 @x12py5) (HasTypeFuel @u0py23 @x11py6 Tm_type) (HasTypeFuel @u0py23 @x6py18 @x11py6) (HasTypeFuel @u0py23 @x1py70 Tm_type) (HasTypeFuel @u0py23 @x2py48 Tm_type) (HasTypeFuel @u0py23 @x3py37 Tm_type) (HasTypeFuel @u0py23 @x4py26 Tm_type) (HasTypeFuel @u0py23 @x5py24 Tm_type) (HasTypeFuel @u0py23 @x6py18 @x1py70) (HasTypeFuel @u0py23 @x7py14 @x2py48) (HasTypeFuel @u0py23 @x8py9 @x3py37) (HasTypeFuel @u0py23 @x9py9 @x4py26) (HasTypeFuel @u0py23 @x10py6 @x5py24))) :pattern ((HasTypeFuel (SFuel @u0py23) (FStar.Pervasives.Native.Mktuple5 @x1py70 @x2py48 @x3py37 @x4py26 @x5py24 @x6py18 @x7py14 @x8py9 @x9py9 @x10py6) (FStar.Pervasives.Native.tuple5 @x11py6 @x12py5 @x13py2 @x14py1 @x15py1))) )) :named data_elim_FStar.Pervasives.Native.Mktuple5))
(assert (! (forall ((@u0py24 Fuel)(@x1py71 Term)(@x2py49 Term)(@x3py38 Term)(@x4py27 Term)(@x5py25 Term)(@x6py19 Term)(@x7py15 Term)(@x8py10 Term)(@x9py10 Term)(@x10py7 Term)(@x11py7 Term)(@x12py6 Term)(@x13py3 Term)(@x14py2 Term)(@x15py2 Term)(@x16py0 Term)(@x17py0 Term)(@x18py0 Term)) (! (or (not (HasTypeFuel (SFuel @u0py24) (FStar.Pervasives.Native.Mktuple6 @x1py71 @x2py49 @x3py38 @x4py27 @x5py25 @x6py19 @x7py15 @x8py10 @x9py10 @x10py7 @x11py7 @x12py6) (FStar.Pervasives.Native.tuple6 @x13py3 @x14py2 @x15py2 @x16py0 @x17py0 @x18py0))) (and (HasTypeFuel @u0py24 @x18py0 Tm_type) (HasTypeFuel @u0py24 @x12py6 @x18py0) (HasTypeFuel @u0py24 @x17py0 Tm_type) (HasTypeFuel @u0py24 @x11py7 @x17py0) (HasTypeFuel @u0py24 @x16py0 Tm_type) (HasTypeFuel @u0py24 @x10py7 @x16py0) (HasTypeFuel @u0py24 @x15py2 Tm_type) (HasTypeFuel @u0py24 @x9py10 @x15py2) (HasTypeFuel @u0py24 @x14py2 Tm_type) (HasTypeFuel @u0py24 @x8py10 @x14py2) (HasTypeFuel @u0py24 @x13py3 Tm_type) (HasTypeFuel @u0py24 @x7py15 @x13py3) (HasTypeFuel @u0py24 @x1py71 Tm_type) (HasTypeFuel @u0py24 @x2py49 Tm_type) (HasTypeFuel @u0py24 @x3py38 Tm_type) (HasTypeFuel @u0py24 @x4py27 Tm_type) (HasTypeFuel @u0py24 @x5py25 Tm_type) (HasTypeFuel @u0py24 @x6py19 Tm_type) (HasTypeFuel @u0py24 @x7py15 @x1py71) (HasTypeFuel @u0py24 @x8py10 @x2py49) (HasTypeFuel @u0py24 @x9py10 @x3py38) (HasTypeFuel @u0py24 @x10py7 @x4py27) (HasTypeFuel @u0py24 @x11py7 @x5py25) (HasTypeFuel @u0py24 @x12py6 @x6py19))) :pattern ((HasTypeFuel (SFuel @u0py24) (FStar.Pervasives.Native.Mktuple6 @x1py71 @x2py49 @x3py38 @x4py27 @x5py25 @x6py19 @x7py15 @x8py10 @x9py10 @x10py7 @x11py7 @x12py6) (FStar.Pervasives.Native.tuple6 @x13py3 @x14py2 @x15py2 @x16py0 @x17py0 @x18py0))) )) :named data_elim_FStar.Pervasives.Native.Mktuple6))
(assert (! (forall ((@u0py25 Fuel)(@x1py72 Term)(@x2py50 Term)(@x3py39 Term)(@x4py28 Term)(@x5py26 Term)(@x6py20 Term)(@x7py16 Term)(@x8py11 Term)(@x9py11 Term)(@x10py8 Term)(@x11py8 Term)(@x12py7 Term)(@x13py4 Term)(@x14py3 Term)(@x15py3 Term)(@x16py1 Term)(@x17py1 Term)(@x18py1 Term)(@x19py0 Term)(@x20py0 Term)(@x21py0 Term)) (! (or (not (HasTypeFuel (SFuel @u0py25) (FStar.Pervasives.Native.Mktuple7 @x1py72 @x2py50 @x3py39 @x4py28 @x5py26 @x6py20 @x7py16 @x8py11 @x9py11 @x10py8 @x11py8 @x12py7 @x13py4 @x14py3) (FStar.Pervasives.Native.tuple7 @x15py3 @x16py1 @x17py1 @x18py1 @x19py0 @x20py0 @x21py0))) (and (HasTypeFuel @u0py25 @x21py0 Tm_type) (HasTypeFuel @u0py25 @x14py3 @x21py0) (HasTypeFuel @u0py25 @x20py0 Tm_type) (HasTypeFuel @u0py25 @x13py4 @x20py0) (HasTypeFuel @u0py25 @x19py0 Tm_type) (HasTypeFuel @u0py25 @x12py7 @x19py0) (HasTypeFuel @u0py25 @x18py1 Tm_type) (HasTypeFuel @u0py25 @x11py8 @x18py1) (HasTypeFuel @u0py25 @x17py1 Tm_type) (HasTypeFuel @u0py25 @x10py8 @x17py1) (HasTypeFuel @u0py25 @x16py1 Tm_type) (HasTypeFuel @u0py25 @x9py11 @x16py1) (HasTypeFuel @u0py25 @x15py3 Tm_type) (HasTypeFuel @u0py25 @x8py11 @x15py3) (HasTypeFuel @u0py25 @x1py72 Tm_type) (HasTypeFuel @u0py25 @x2py50 Tm_type) (HasTypeFuel @u0py25 @x3py39 Tm_type) (HasTypeFuel @u0py25 @x4py28 Tm_type) (HasTypeFuel @u0py25 @x5py26 Tm_type) (HasTypeFuel @u0py25 @x6py20 Tm_type) (HasTypeFuel @u0py25 @x7py16 Tm_type) (HasTypeFuel @u0py25 @x8py11 @x1py72) (HasTypeFuel @u0py25 @x9py11 @x2py50) (HasTypeFuel @u0py25 @x10py8 @x3py39) (HasTypeFuel @u0py25 @x11py8 @x4py28) (HasTypeFuel @u0py25 @x12py7 @x5py26) (HasTypeFuel @u0py25 @x13py4 @x6py20) (HasTypeFuel @u0py25 @x14py3 @x7py16))) :pattern ((HasTypeFuel (SFuel @u0py25) (FStar.Pervasives.Native.Mktuple7 @x1py72 @x2py50 @x3py39 @x4py28 @x5py26 @x6py20 @x7py16 @x8py11 @x9py11 @x10py8 @x11py8 @x12py7 @x13py4 @x14py3) (FStar.Pervasives.Native.tuple7 @x15py3 @x16py1 @x17py1 @x18py1 @x19py0 @x20py0 @x21py0))) )) :named data_elim_FStar.Pervasives.Native.Mktuple7))
(assert (! (forall ((@u0py26 Fuel)(@x1py73 Term)(@x2py51 Term)(@x3py40 Term)(@x4py29 Term)(@x5py27 Term)(@x6py21 Term)(@x7py17 Term)(@x8py12 Term)(@x9py12 Term)(@x10py9 Term)(@x11py9 Term)(@x12py8 Term)(@x13py5 Term)(@x14py4 Term)(@x15py4 Term)(@x16py2 Term)(@x17py2 Term)(@x18py2 Term)(@x19py1 Term)(@x20py1 Term)(@x21py1 Term)(@x22py0 Term)(@x23py0 Term)(@x24py0 Term)) (! (or (not (HasTypeFuel (SFuel @u0py26) (FStar.Pervasives.Native.Mktuple8 @x1py73 @x2py51 @x3py40 @x4py29 @x5py27 @x6py21 @x7py17 @x8py12 @x9py12 @x10py9 @x11py9 @x12py8 @x13py5 @x14py4 @x15py4 @x16py2) (FStar.Pervasives.Native.tuple8 @x17py2 @x18py2 @x19py1 @x20py1 @x21py1 @x22py0 @x23py0 @x24py0))) (and (HasTypeFuel @u0py26 @x24py0 Tm_type) (HasTypeFuel @u0py26 @x16py2 @x24py0) (HasTypeFuel @u0py26 @x23py0 Tm_type) (HasTypeFuel @u0py26 @x15py4 @x23py0) (HasTypeFuel @u0py26 @x22py0 Tm_type) (HasTypeFuel @u0py26 @x14py4 @x22py0) (HasTypeFuel @u0py26 @x21py1 Tm_type) (HasTypeFuel @u0py26 @x13py5 @x21py1) (HasTypeFuel @u0py26 @x20py1 Tm_type) (HasTypeFuel @u0py26 @x12py8 @x20py1) (HasTypeFuel @u0py26 @x19py1 Tm_type) (HasTypeFuel @u0py26 @x11py9 @x19py1) (HasTypeFuel @u0py26 @x18py2 Tm_type) (HasTypeFuel @u0py26 @x10py9 @x18py2) (HasTypeFuel @u0py26 @x17py2 Tm_type) (HasTypeFuel @u0py26 @x9py12 @x17py2) (HasTypeFuel @u0py26 @x1py73 Tm_type) (HasTypeFuel @u0py26 @x2py51 Tm_type) (HasTypeFuel @u0py26 @x3py40 Tm_type) (HasTypeFuel @u0py26 @x4py29 Tm_type) (HasTypeFuel @u0py26 @x5py27 Tm_type) (HasTypeFuel @u0py26 @x6py21 Tm_type) (HasTypeFuel @u0py26 @x7py17 Tm_type) (HasTypeFuel @u0py26 @x8py12 Tm_type) (HasTypeFuel @u0py26 @x9py12 @x1py73) (HasTypeFuel @u0py26 @x10py9 @x2py51) (HasTypeFuel @u0py26 @x11py9 @x3py40) (HasTypeFuel @u0py26 @x12py8 @x4py29) (HasTypeFuel @u0py26 @x13py5 @x5py27) (HasTypeFuel @u0py26 @x14py4 @x6py21) (HasTypeFuel @u0py26 @x15py4 @x7py17) (HasTypeFuel @u0py26 @x16py2 @x8py12))) :pattern ((HasTypeFuel (SFuel @u0py26) (FStar.Pervasives.Native.Mktuple8 @x1py73 @x2py51 @x3py40 @x4py29 @x5py27 @x6py21 @x7py17 @x8py12 @x9py12 @x10py9 @x11py9 @x12py8 @x13py5 @x14py4 @x15py4 @x16py2) (FStar.Pervasives.Native.tuple8 @x17py2 @x18py2 @x19py1 @x20py1 @x21py1 @x22py0 @x23py0 @x24py0))) )) :named data_elim_FStar.Pervasives.Native.Mktuple8))
(assert (! (forall ((@u0py27 Fuel)(@x1py74 Term)(@x2py52 Term)) (! (or (not (HasTypeFuel (SFuel @u0py27) (FStar.Pervasives.Native.None @x1py74) (FStar.Pervasives.Native.option @x2py52))) (and (HasTypeFuel @u0py27 @x2py52 Tm_type) (HasTypeFuel @u0py27 @x1py74 Tm_type))) :pattern ((HasTypeFuel (SFuel @u0py27) (FStar.Pervasives.Native.None @x1py74) (FStar.Pervasives.Native.option @x2py52))) )) :named data_elim_FStar.Pervasives.Native.None))
(assert (! (forall ((@u0py28 Fuel)(@x1py75 Term)(@x2py53 Term)(@x3py41 Term)) (! (or (not (HasTypeFuel (SFuel @u0py28) (FStar.Pervasives.Native.Some @x1py75 @x2py53) (FStar.Pervasives.Native.option @x3py41))) (and (HasTypeFuel @u0py28 @x3py41 Tm_type) (HasTypeFuel @u0py28 @x2py53 @x3py41) (HasTypeFuel @u0py28 @x1py75 Tm_type) (HasTypeFuel @u0py28 @x2py53 @x1py75))) :pattern ((HasTypeFuel (SFuel @u0py28) (FStar.Pervasives.Native.Some @x1py75 @x2py53) (FStar.Pervasives.Native.option @x3py41))) )) :named data_elim_FStar.Pervasives.Native.Some))
(assert (! (forall ((@u0py29 Fuel)(@x1py76 Term)) (! (or (not (HasTypeFuel (SFuel @u0py29) (FStar.Pervasives.PpxDerivingShowConstant @x1py76) FStar.Pervasives.__internal_ocaml_attributes)) (HasTypeFuel @u0py29 @x1py76 Prims.string)) :pattern ((HasTypeFuel (SFuel @u0py29) (FStar.Pervasives.PpxDerivingShowConstant @x1py76) FStar.Pervasives.__internal_ocaml_attributes)) )) :named data_elim_FStar.Pervasives.PpxDerivingShowConstant))
(assert (! (forall ((@u0py30 Fuel)(@x1py77 Term)(@x2py54 Term)(@x3py42 Term)) (! (or (not (HasTypeFuel (SFuel @u0py30) (FStar.Pervasives.V @x1py77 @x2py54) (FStar.Pervasives.result @x3py42))) (and (HasTypeFuel @u0py30 @x3py42 Tm_type) (HasTypeFuel @u0py30 @x2py54 @x3py42) (HasTypeFuel @u0py30 @x1py77 Tm_type) (HasTypeFuel @u0py30 @x2py54 @x1py77))) :pattern ((HasTypeFuel (SFuel @u0py30) (FStar.Pervasives.V @x1py77 @x2py54) (FStar.Pervasives.result @x3py42))) )) :named data_elim_FStar.Pervasives.V))
(assert (! (forall ((@u0py31 Fuel)(@x1py78 Term)(@x2py55 Term)(@x3py43 Term)(@x4py30 Term)(@x5py28 Term)(@x6py22 Term)) (! (or (not (HasTypeFuel (SFuel @u0py31) (Prims.And @x1py78 @x2py55 @x3py43 @x4py30) (Prims.c_and @x5py28 @x6py22))) (and (HasTypeFuel @u0py31 @x6py22 Tm_type) (HasTypeFuel @u0py31 @x4py30 @x6py22) (HasTypeFuel @u0py31 @x5py28 Tm_type) (HasTypeFuel @u0py31 @x3py43 @x5py28) (HasTypeFuel @u0py31 @x1py78 Tm_type) (HasTypeFuel @u0py31 @x2py55 Tm_type) (HasTypeFuel @u0py31 @x3py43 @x1py78) (HasTypeFuel @u0py31 @x4py30 @x2py55))) :pattern ((HasTypeFuel (SFuel @u0py31) (Prims.And @x1py78 @x2py55 @x3py43 @x4py30) (Prims.c_and @x5py28 @x6py22))) )) :named data_elim_Prims.And))
(assert (! (forall ((@u0py32 Fuel)(@x1py79 Term)(@x2py56 Term)(@x3py44 Term)(@x4py31 Term)) (! (or (not (HasTypeFuel (SFuel @u0py32) (Prims.Cons @x1py79 @x2py56 @x3py44) (Prims.list @x4py31))) (and (HasTypeFuel @u0py32 @x4py31 Tm_type) (HasTypeFuel @u0py32 @x2py56 @x4py31) (HasTypeFuel @u0py32 @x3py44 (Prims.list @x4py31)) (HasTypeFuel @u0py32 @x1py79 Tm_type) (HasTypeFuel @u0py32 @x2py56 @x1py79) (HasTypeFuel @u0py32 @x3py44 (Prims.list @x1py79)))) :pattern ((HasTypeFuel (SFuel @u0py32) (Prims.Cons @x1py79 @x2py56 @x3py44) (Prims.list @x4py31))) )) :named data_elim_Prims.Cons))
(assert (! (forall ((@u0py33 Fuel)(@x1py80 Term)(@x2py57 Term)(@x3py45 Term)(@x4py32 Term)(@x5py29 Term)(@x6py23 Term)) (! (or (not (HasTypeFuel (SFuel @u0py33) (Prims.HRefl @x1py80 @x2py57) (Prims.h_equals @x3py45 @x4py32 @x5py29 @x6py23))) (and (= @x2py57 @x6py23) (= @x1py80 @x5py29) (HasTypeFuel @u0py33 @x4py32 @x1py80) (HasTypeFuel @u0py33 @x3py45 Tm_type) (HasTypeFuel @u0py33 @x2py57 @x3py45) (HasTypeFuel @u0py33 @x1py80 Tm_type) (HasTypeFuel @u0py33 @x2py57 @x1py80))) :pattern ((HasTypeFuel (SFuel @u0py33) (Prims.HRefl @x1py80 @x2py57) (Prims.h_equals @x3py45 @x4py32 @x5py29 @x6py23))) )) :named data_elim_Prims.HRefl))
(assert (! (forall ((@u0py34 Fuel)(@x1py81 Term)(@x2py58 Term)(@x3py46 Term)(@x4py33 Term)(@x5py30 Term)) (! (or (not (HasTypeFuel (SFuel @u0py34) (Prims.Left @x1py81 @x2py58 @x3py46) (Prims.c_or @x4py33 @x5py30))) (and (HasTypeFuel @u0py34 @x5py30 Tm_type) (HasTypeFuel @u0py34 @x4py33 Tm_type) (HasTypeFuel @u0py34 @x3py46 @x4py33) (HasTypeFuel @u0py34 @x1py81 Tm_type) (HasTypeFuel @u0py34 @x2py58 Tm_type) (HasTypeFuel @u0py34 @x3py46 @x1py81))) :pattern ((HasTypeFuel (SFuel @u0py34) (Prims.Left @x1py81 @x2py58 @x3py46) (Prims.c_or @x4py33 @x5py30))) )) :named data_elim_Prims.Left))
(assert (! (forall ((@u0py35 Fuel)(@x1py82 Term)(@x2py59 Term)(@x3py47 Term)(@x4py34 Term)(@x5py31 Term)(@x6py24 Term)) (! (or (not (HasTypeFuel (SFuel @u0py35) (Prims.Mkdtuple2 @x1py82 @x2py59 @x3py47 @x4py34) (Prims.dtuple2 @x5py31 @x6py24))) (and (HasTypeFuel @u0py35 @x6py24 (Tm_arrow_e06752ba152f81447b312efcdf8f0e23 @x1py82)) (HasTypeFuel @u0py35 @x4py34 (ApplyTT @x6py24 @x3py47)) (HasTypeFuel @u0py35 @x5py31 Tm_type) (HasTypeFuel @u0py35 @x2py59 (Tm_arrow_e06752ba152f81447b312efcdf8f0e23 @x5py31)) (HasTypeFuel @u0py35 @x3py47 @x5py31) (HasTypeFuel @u0py35 @x1py82 Tm_type) (HasTypeFuel @u0py35 @x2py59 (Tm_arrow_e06752ba152f81447b312efcdf8f0e23 @x1py82)) (HasTypeFuel @u0py35 @x3py47 @x1py82) (HasTypeFuel @u0py35 @x4py34 (ApplyTT @x2py59 @x3py47)))) :pattern ((HasTypeFuel (SFuel @u0py35) (Prims.Mkdtuple2 @x1py82 @x2py59 @x3py47 @x4py34) (Prims.dtuple2 @x5py31 @x6py24))) )) :named data_elim_Prims.Mkdtuple2))
(assert (! (forall ((@u0py36 Fuel)(@x1py83 Term)(@x2py60 Term)) (! (or (not (HasTypeFuel (SFuel @u0py36) (Prims.Nil @x1py83) (Prims.list @x2py60))) (and (HasTypeFuel @u0py36 @x2py60 Tm_type) (HasTypeFuel @u0py36 @x1py83 Tm_type))) :pattern ((HasTypeFuel (SFuel @u0py36) (Prims.Nil @x1py83) (Prims.list @x2py60))) )) :named data_elim_Prims.Nil))
(assert (! (forall ((@u0py37 Fuel)(@x1py84 Term)(@x2py61 Term)(@x3py48 Term)(@x4py35 Term)(@x5py32 Term)) (! (or (not (HasTypeFuel (SFuel @u0py37) (Prims.Refl @x1py84 @x2py61) (Prims.equals @x3py48 @x4py35 @x5py32))) (and (= @x2py61 @x5py32) (HasTypeFuel @u0py37 @x4py35 @x1py84) (HasTypeFuel @u0py37 @x3py48 Tm_type) (HasTypeFuel @u0py37 @x2py61 @x3py48) (HasTypeFuel @u0py37 @x1py84 Tm_type) (HasTypeFuel @u0py37 @x2py61 @x1py84))) :pattern ((HasTypeFuel (SFuel @u0py37) (Prims.Refl @x1py84 @x2py61) (Prims.equals @x3py48 @x4py35 @x5py32))) )) :named data_elim_Prims.Refl))
(assert (! (forall ((@u0py38 Fuel)(@x1py85 Term)(@x2py62 Term)(@x3py49 Term)(@x4py36 Term)(@x5py33 Term)) (! (or (not (HasTypeFuel (SFuel @u0py38) (Prims.Right @x1py85 @x2py62 @x3py49) (Prims.c_or @x4py36 @x5py33))) (and (HasTypeFuel @u0py38 @x5py33 Tm_type) (HasTypeFuel @u0py38 @x3py49 @x5py33) (HasTypeFuel @u0py38 @x4py36 Tm_type) (HasTypeFuel @u0py38 @x1py85 Tm_type) (HasTypeFuel @u0py38 @x2py62 Tm_type) (HasTypeFuel @u0py38 @x3py49 @x2py62))) :pattern ((HasTypeFuel (SFuel @u0py38) (Prims.Right @x1py85 @x2py62 @x3py49) (Prims.c_or @x4py36 @x5py33))) )) :named data_elim_Prims.Right))
(assert (! (forall ((@u0py39 Fuel)(@x1py86 Term)(@x2py63 Term)) (! (or (HasTypeFuel @u0py39 (False.CalcRefl @x1py86 @x2py63) (False.calc_proof @x1py86 (Prims.Nil (False.relation @x1py86)) @x2py63 @x2py63)) (not (HasTypeFuel @u0py39 @x1py86 Tm_type)) (not (HasTypeFuel @u0py39 @x2py63 @x1py86))) :pattern ((HasTypeFuel @u0py39 (False.CalcRefl @x1py86 @x2py63) (False.calc_proof @x1py86 (Prims.Nil (False.relation @x1py86)) @x2py63 @x2py63))) )) :named data_typing_intro_False.CalcRefl@tok))
(assert (! (forall ((@u0py40 Fuel)(@x1py87 Term)(@x2py64 Term)(@x3py50 Term)(@x4py37 Term)(@x5py34 Term)(@x6py25 Term)(@x7py18 Term)(@x8py13 Term)) (! (or (HasTypeFuel @u0py40 (False.CalcStep @x1py87 @x2py64 @x3py50 @x4py37 @x5py34 @x6py25 @x7py18 @x8py13) (False.calc_proof @x1py87 (Prims.Cons (False.relation @x1py87) @x3py50 @x2py64) @x4py37 @x6py25)) (not (HasTypeFuel @u0py40 @x1py87 Tm_type)) (not (HasTypeFuel @u0py40 @x2py64 (Prims.list (False.relation @x1py87)))) (not (HasTypeFuel @u0py40 @x3py50 (False.relation @x1py87))) (not (HasTypeFuel @u0py40 @x4py37 @x1py87)) (not (HasTypeFuel @u0py40 @x5py34 @x1py87)) (not (HasTypeFuel @u0py40 @x6py25 @x1py87)) (not (HasTypeFuel @u0py40 @x7py18 (False.calc_proof @x1py87 @x2py64 @x4py37 @x5py34))) (not (HasTypeFuel @u0py40 @x8py13 (Prims.squash (ApplyTT (ApplyTT @x3py50 @x5py34) @x6py25))))) :pattern ((HasTypeFuel @u0py40 (False.CalcStep @x1py87 @x2py64 @x3py50 @x4py37 @x5py34 @x6py25 @x7py18 @x8py13) (False.calc_proof @x1py87 (Prims.Cons (False.relation @x1py87) @x3py50 @x2py64) @x4py37 @x6py25))) )) :named data_typing_intro_False.CalcStep@tok))
(assert (! (forall ((@u0py41 Fuel)(@x1py88 Term)) (! (or (not (HasTypeFuel @u0py41 @x1py88 Prims.string)) (HasTypeFuel @u0py41 (FStar.Pervasives.CConst @x1py88) FStar.Pervasives.__internal_ocaml_attributes)) :pattern ((HasTypeFuel @u0py41 (FStar.Pervasives.CConst @x1py88) FStar.Pervasives.__internal_ocaml_attributes)) )) :named data_typing_intro_FStar.Pervasives.CConst@tok))
(assert (! (forall ((@u0py42 Fuel)(@x1py89 Term)) (! (or (not (HasTypeFuel @u0py42 @x1py89 Prims.string)) (HasTypeFuel @u0py42 (FStar.Pervasives.CEpilogue @x1py89) FStar.Pervasives.__internal_ocaml_attributes)) :pattern ((HasTypeFuel @u0py42 (FStar.Pervasives.CEpilogue @x1py89) FStar.Pervasives.__internal_ocaml_attributes)) )) :named data_typing_intro_FStar.Pervasives.CEpilogue@tok))
(assert (! (forall ((@u0py43 Fuel)) (! (HasTypeFuel @u0py43 FStar.Pervasives.CInline FStar.Pervasives.__internal_ocaml_attributes) :pattern ((HasTypeFuel @u0py43 FStar.Pervasives.CInline FStar.Pervasives.__internal_ocaml_attributes)) )) :named data_typing_intro_FStar.Pervasives.CInline@tok))
(assert (! (forall ((@u0py44 Fuel)(@x1py90 Term)) (! (or (not (HasTypeFuel @u0py44 @x1py90 Prims.string)) (HasTypeFuel @u0py44 (FStar.Pervasives.Comment @x1py90) FStar.Pervasives.__internal_ocaml_attributes)) :pattern ((HasTypeFuel @u0py44 (FStar.Pervasives.Comment @x1py90) FStar.Pervasives.__internal_ocaml_attributes)) )) :named data_typing_intro_FStar.Pervasives.Comment@tok))
(assert (! (forall ((@u0py45 Fuel)(@x1py91 Term)) (! (or (not (HasTypeFuel @u0py45 @x1py91 Prims.string)) (HasTypeFuel @u0py45 (FStar.Pervasives.CPrologue @x1py91) FStar.Pervasives.__internal_ocaml_attributes)) :pattern ((HasTypeFuel @u0py45 (FStar.Pervasives.CPrologue @x1py91) FStar.Pervasives.__internal_ocaml_attributes)) )) :named data_typing_intro_FStar.Pervasives.CPrologue@tok))
(assert (! (forall ((@u0py46 Fuel)(@x1py92 Term)(@x2py65 Term)) (! (or (HasTypeFuel @u0py46 (FStar.Pervasives.E @x1py92 @x2py65) (FStar.Pervasives.result @x1py92)) (not (HasTypeFuel @u0py46 @x1py92 Tm_type)) (not (HasTypeFuel @u0py46 @x2py65 Prims.exn))) :pattern ((HasTypeFuel @u0py46 (FStar.Pervasives.E @x1py92 @x2py65) (FStar.Pervasives.result @x1py92))) )) :named data_typing_intro_FStar.Pervasives.E@tok))
(assert (! (forall ((@u0py47 Fuel)(@x1py93 Term)(@x2py66 Term)) (! (or (HasTypeFuel @u0py47 (FStar.Pervasives.Err @x1py93 @x2py66) (FStar.Pervasives.result @x1py93)) (not (HasTypeFuel @u0py47 @x1py93 Tm_type)) (not (HasTypeFuel @u0py47 @x2py66 Prims.string))) :pattern ((HasTypeFuel @u0py47 (FStar.Pervasives.Err @x1py93 @x2py66) (FStar.Pervasives.result @x1py93))) )) :named data_typing_intro_FStar.Pervasives.Err@tok))
(assert (! (forall ((@u0py48 Fuel)) (! (HasTypeFuel @u0py48 FStar.Pervasives.Gc FStar.Pervasives.__internal_ocaml_attributes) :pattern ((HasTypeFuel @u0py48 FStar.Pervasives.Gc FStar.Pervasives.__internal_ocaml_attributes)) )) :named data_typing_intro_FStar.Pervasives.Gc@tok))
(assert (! (forall ((@u0py49 Fuel)(@x1py94 Term)(@x2py67 Term)(@x3py51 Term)) (! (or (HasTypeFuel @u0py49 (FStar.Pervasives.Inl @x1py94 @x2py67 @x3py51) (FStar.Pervasives.either @x1py94 @x2py67)) (not (HasTypeFuel @u0py49 @x1py94 Tm_type)) (not (HasTypeFuel @u0py49 @x2py67 Tm_type)) (not (HasTypeFuel @u0py49 @x3py51 @x1py94))) :pattern ((HasTypeFuel @u0py49 (FStar.Pervasives.Inl @x1py94 @x2py67 @x3py51) (FStar.Pervasives.either @x1py94 @x2py67))) )) :named data_typing_intro_FStar.Pervasives.Inl@tok))
(assert (! (forall ((@u0py50 Fuel)(@x1py95 Term)(@x2py68 Term)(@x3py52 Term)) (! (or (HasTypeFuel @u0py50 (FStar.Pervasives.Inr @x1py95 @x2py68 @x3py52) (FStar.Pervasives.either @x1py95 @x2py68)) (not (HasTypeFuel @u0py50 @x1py95 Tm_type)) (not (HasTypeFuel @u0py50 @x2py68 Tm_type)) (not (HasTypeFuel @u0py50 @x3py52 @x2py68))) :pattern ((HasTypeFuel @u0py50 (FStar.Pervasives.Inr @x1py95 @x2py68 @x3py52) (FStar.Pervasives.either @x1py95 @x2py68))) )) :named data_typing_intro_FStar.Pervasives.Inr@tok))
(assert (! (forall ((@u0py51 Fuel)(@x1py96 Term)(@x2py69 Term)(@x3py53 Term)(@x4py38 Term)(@x5py35 Term)(@x6py26 Term)) (! (or (HasTypeFuel @u0py51 (FStar.Pervasives.Mkdtuple3 @x1py96 @x2py69 @x3py53 @x4py38 @x5py35 @x6py26) (FStar.Pervasives.dtuple3 @x1py96 @x2py69 @x3py53)) (not (HasTypeFuel @u0py51 @x1py96 Tm_type)) (not (HasTypeFuel @u0py51 @x2py69 (Tm_arrow_e06752ba152f81447b312efcdf8f0e23 @x1py96))) (not (HasTypeFuel @u0py51 @x3py53 (Tm_arrow_614c7b5886a6e5b119a37c35c7e4bd59 @x2py69 @x1py96))) (not (HasTypeFuel @u0py51 @x4py38 @x1py96)) (not (HasTypeFuel @u0py51 @x5py35 (ApplyTT @x2py69 @x4py38))) (not (HasTypeFuel @u0py51 @x6py26 (ApplyTT (ApplyTT @x3py53 @x4py38) @x5py35)))) :pattern ((HasTypeFuel @u0py51 (FStar.Pervasives.Mkdtuple3 @x1py96 @x2py69 @x3py53 @x4py38 @x5py35 @x6py26) (FStar.Pervasives.dtuple3 @x1py96 @x2py69 @x3py53))) )) :named data_typing_intro_FStar.Pervasives.Mkdtuple3@tok))
(assert (! (forall ((@u0py52 Fuel)(@x1py97 Term)(@x2py70 Term)(@x3py54 Term)(@x4py39 Term)(@x5py36 Term)(@x6py27 Term)(@x7py19 Term)(@x8py14 Term)) (! (or (HasTypeFuel @u0py52 (FStar.Pervasives.Mkdtuple4 @x1py97 @x2py70 @x3py54 @x4py39 @x5py36 @x6py27 @x7py19 @x8py14) (FStar.Pervasives.dtuple4 @x1py97 @x2py70 @x3py54 @x4py39)) (not (HasTypeFuel @u0py52 @x1py97 Tm_type)) (not (HasTypeFuel @u0py52 @x2py70 (Tm_arrow_e06752ba152f81447b312efcdf8f0e23 @x1py97))) (not (HasTypeFuel @u0py52 @x3py54 (Tm_arrow_614c7b5886a6e5b119a37c35c7e4bd59 @x2py70 @x1py97))) (not (HasTypeFuel @u0py52 @x4py39 (Tm_arrow_dbf39bf049d72c3088e1ed84d246952d @x3py54 @x2py70 @x1py97))) (not (HasTypeFuel @u0py52 @x5py36 @x1py97)) (not (HasTypeFuel @u0py52 @x6py27 (ApplyTT @x2py70 @x5py36))) (not (HasTypeFuel @u0py52 @x7py19 (ApplyTT (ApplyTT @x3py54 @x5py36) @x6py27))) (not (HasTypeFuel @u0py52 @x8py14 (ApplyTT (ApplyTT (ApplyTT @x4py39 @x5py36) @x6py27) @x7py19)))) :pattern ((HasTypeFuel @u0py52 (FStar.Pervasives.Mkdtuple4 @x1py97 @x2py70 @x3py54 @x4py39 @x5py36 @x6py27 @x7py19 @x8py14) (FStar.Pervasives.dtuple4 @x1py97 @x2py70 @x3py54 @x4py39))) )) :named data_typing_intro_FStar.Pervasives.Mkdtuple4@tok))
(assert (! (forall ((@u0py53 Fuel)(@x1py98 Term)(@x2py71 Term)(@x3py55 Term)(@x4py40 Term)) (! (or (HasTypeFuel @u0py53 (FStar.Pervasives.Native.Mktuple2 @x1py98 @x2py71 @x3py55 @x4py40) (FStar.Pervasives.Native.tuple2 @x1py98 @x2py71)) (not (HasTypeFuel @u0py53 @x2py71 Tm_type)) (not (HasTypeFuel @u0py53 @x3py55 @x1py98)) (not (HasTypeFuel @u0py53 @x4py40 @x2py71)) (not (HasTypeFuel @u0py53 @x1py98 Tm_type))) :pattern ((HasTypeFuel @u0py53 (FStar.Pervasives.Native.Mktuple2 @x1py98 @x2py71 @x3py55 @x4py40) (FStar.Pervasives.Native.tuple2 @x1py98 @x2py71))) )) :named data_typing_intro_FStar.Pervasives.Native.Mktuple2@tok))
(assert (! (forall ((@u0py54 Fuel)(@x1py99 Term)(@x2py72 Term)(@x3py56 Term)(@x4py41 Term)(@x5py37 Term)(@x6py28 Term)) (! (or (HasTypeFuel @u0py54 (FStar.Pervasives.Native.Mktuple3 @x1py99 @x2py72 @x3py56 @x4py41 @x5py37 @x6py28) (FStar.Pervasives.Native.tuple3 @x1py99 @x2py72 @x3py56)) (not (HasTypeFuel @u0py54 @x1py99 Tm_type)) (not (HasTypeFuel @u0py54 @x2py72 Tm_type)) (not (HasTypeFuel @u0py54 @x3py56 Tm_type)) (not (HasTypeFuel @u0py54 @x4py41 @x1py99)) (not (HasTypeFuel @u0py54 @x5py37 @x2py72)) (not (HasTypeFuel @u0py54 @x6py28 @x3py56))) :pattern ((HasTypeFuel @u0py54 (FStar.Pervasives.Native.Mktuple3 @x1py99 @x2py72 @x3py56 @x4py41 @x5py37 @x6py28) (FStar.Pervasives.Native.tuple3 @x1py99 @x2py72 @x3py56))) )) :named data_typing_intro_FStar.Pervasives.Native.Mktuple3@tok))
(assert (! (forall ((@u0py55 Fuel)(@x1py100 Term)(@x2py73 Term)(@x3py57 Term)(@x4py42 Term)(@x5py38 Term)(@x6py29 Term)(@x7py20 Term)(@x8py15 Term)) (! (or (HasTypeFuel @u0py55 (FStar.Pervasives.Native.Mktuple4 @x1py100 @x2py73 @x3py57 @x4py42 @x5py38 @x6py29 @x7py20 @x8py15) (FStar.Pervasives.Native.tuple4 @x1py100 @x2py73 @x3py57 @x4py42)) (not (HasTypeFuel @u0py55 @x1py100 Tm_type)) (not (HasTypeFuel @u0py55 @x2py73 Tm_type)) (not (HasTypeFuel @u0py55 @x3py57 Tm_type)) (not (HasTypeFuel @u0py55 @x4py42 Tm_type)) (not (HasTypeFuel @u0py55 @x5py38 @x1py100)) (not (HasTypeFuel @u0py55 @x6py29 @x2py73)) (not (HasTypeFuel @u0py55 @x7py20 @x3py57)) (not (HasTypeFuel @u0py55 @x8py15 @x4py42))) :pattern ((HasTypeFuel @u0py55 (FStar.Pervasives.Native.Mktuple4 @x1py100 @x2py73 @x3py57 @x4py42 @x5py38 @x6py29 @x7py20 @x8py15) (FStar.Pervasives.Native.tuple4 @x1py100 @x2py73 @x3py57 @x4py42))) )) :named data_typing_intro_FStar.Pervasives.Native.Mktuple4@tok))
(assert (! (forall ((@u0py56 Fuel)(@x1py101 Term)(@x2py74 Term)(@x3py58 Term)(@x4py43 Term)(@x5py39 Term)(@x6py30 Term)(@x7py21 Term)(@x8py16 Term)(@x9py13 Term)(@x10py10 Term)) (! (or (HasTypeFuel @u0py56 (FStar.Pervasives.Native.Mktuple5 @x1py101 @x2py74 @x3py58 @x4py43 @x5py39 @x6py30 @x7py21 @x8py16 @x9py13 @x10py10) (FStar.Pervasives.Native.tuple5 @x1py101 @x2py74 @x3py58 @x4py43 @x5py39)) (not (HasTypeFuel @u0py56 @x1py101 Tm_type)) (not (HasTypeFuel @u0py56 @x2py74 Tm_type)) (not (HasTypeFuel @u0py56 @x3py58 Tm_type)) (not (HasTypeFuel @u0py56 @x4py43 Tm_type)) (not (HasTypeFuel @u0py56 @x5py39 Tm_type)) (not (HasTypeFuel @u0py56 @x6py30 @x1py101)) (not (HasTypeFuel @u0py56 @x7py21 @x2py74)) (not (HasTypeFuel @u0py56 @x8py16 @x3py58)) (not (HasTypeFuel @u0py56 @x9py13 @x4py43)) (not (HasTypeFuel @u0py56 @x10py10 @x5py39))) :pattern ((HasTypeFuel @u0py56 (FStar.Pervasives.Native.Mktuple5 @x1py101 @x2py74 @x3py58 @x4py43 @x5py39 @x6py30 @x7py21 @x8py16 @x9py13 @x10py10) (FStar.Pervasives.Native.tuple5 @x1py101 @x2py74 @x3py58 @x4py43 @x5py39))) )) :named data_typing_intro_FStar.Pervasives.Native.Mktuple5@tok))
(assert (! (forall ((@u0py57 Fuel)(@x1py102 Term)(@x2py75 Term)(@x3py59 Term)(@x4py44 Term)(@x5py40 Term)(@x6py31 Term)(@x7py22 Term)(@x8py17 Term)(@x9py14 Term)(@x10py11 Term)(@x11py10 Term)(@x12py9 Term)) (! (or (HasTypeFuel @u0py57 (FStar.Pervasives.Native.Mktuple6 @x1py102 @x2py75 @x3py59 @x4py44 @x5py40 @x6py31 @x7py22 @x8py17 @x9py14 @x10py11 @x11py10 @x12py9) (FStar.Pervasives.Native.tuple6 @x1py102 @x2py75 @x3py59 @x4py44 @x5py40 @x6py31)) (not (HasTypeFuel @u0py57 @x1py102 Tm_type)) (not (HasTypeFuel @u0py57 @x2py75 Tm_type)) (not (HasTypeFuel @u0py57 @x3py59 Tm_type)) (not (HasTypeFuel @u0py57 @x4py44 Tm_type)) (not (HasTypeFuel @u0py57 @x5py40 Tm_type)) (not (HasTypeFuel @u0py57 @x6py31 Tm_type)) (not (HasTypeFuel @u0py57 @x7py22 @x1py102)) (not (HasTypeFuel @u0py57 @x8py17 @x2py75)) (not (HasTypeFuel @u0py57 @x9py14 @x3py59)) (not (HasTypeFuel @u0py57 @x10py11 @x4py44)) (not (HasTypeFuel @u0py57 @x11py10 @x5py40)) (not (HasTypeFuel @u0py57 @x12py9 @x6py31))) :pattern ((HasTypeFuel @u0py57 (FStar.Pervasives.Native.Mktuple6 @x1py102 @x2py75 @x3py59 @x4py44 @x5py40 @x6py31 @x7py22 @x8py17 @x9py14 @x10py11 @x11py10 @x12py9) (FStar.Pervasives.Native.tuple6 @x1py102 @x2py75 @x3py59 @x4py44 @x5py40 @x6py31))) )) :named data_typing_intro_FStar.Pervasives.Native.Mktuple6@tok))
(assert (! (forall ((@u0py58 Fuel)(@x1py103 Term)(@x2py76 Term)(@x3py60 Term)(@x4py45 Term)(@x5py41 Term)(@x6py32 Term)(@x7py23 Term)(@x8py18 Term)(@x9py15 Term)(@x10py12 Term)(@x11py11 Term)(@x12py10 Term)(@x13py6 Term)(@x14py5 Term)) (! (or (HasTypeFuel @u0py58 (FStar.Pervasives.Native.Mktuple7 @x1py103 @x2py76 @x3py60 @x4py45 @x5py41 @x6py32 @x7py23 @x8py18 @x9py15 @x10py12 @x11py11 @x12py10 @x13py6 @x14py5) (FStar.Pervasives.Native.tuple7 @x1py103 @x2py76 @x3py60 @x4py45 @x5py41 @x6py32 @x7py23)) (not (HasTypeFuel @u0py58 @x1py103 Tm_type)) (not (HasTypeFuel @u0py58 @x2py76 Tm_type)) (not (HasTypeFuel @u0py58 @x3py60 Tm_type)) (not (HasTypeFuel @u0py58 @x4py45 Tm_type)) (not (HasTypeFuel @u0py58 @x5py41 Tm_type)) (not (HasTypeFuel @u0py58 @x6py32 Tm_type)) (not (HasTypeFuel @u0py58 @x7py23 Tm_type)) (not (HasTypeFuel @u0py58 @x8py18 @x1py103)) (not (HasTypeFuel @u0py58 @x9py15 @x2py76)) (not (HasTypeFuel @u0py58 @x10py12 @x3py60)) (not (HasTypeFuel @u0py58 @x11py11 @x4py45)) (not (HasTypeFuel @u0py58 @x12py10 @x5py41)) (not (HasTypeFuel @u0py58 @x13py6 @x6py32)) (not (HasTypeFuel @u0py58 @x14py5 @x7py23))) :pattern ((HasTypeFuel @u0py58 (FStar.Pervasives.Native.Mktuple7 @x1py103 @x2py76 @x3py60 @x4py45 @x5py41 @x6py32 @x7py23 @x8py18 @x9py15 @x10py12 @x11py11 @x12py10 @x13py6 @x14py5) (FStar.Pervasives.Native.tuple7 @x1py103 @x2py76 @x3py60 @x4py45 @x5py41 @x6py32 @x7py23))) )) :named data_typing_intro_FStar.Pervasives.Native.Mktuple7@tok))
(assert (! (forall ((@u0py59 Fuel)(@x1py104 Term)(@x2py77 Term)(@x3py61 Term)(@x4py46 Term)(@x5py42 Term)(@x6py33 Term)(@x7py24 Term)(@x8py19 Term)(@x9py16 Term)(@x10py13 Term)(@x11py12 Term)(@x12py11 Term)(@x13py7 Term)(@x14py6 Term)(@x15py5 Term)(@x16py3 Term)) (! (or (HasTypeFuel @u0py59 (FStar.Pervasives.Native.Mktuple8 @x1py104 @x2py77 @x3py61 @x4py46 @x5py42 @x6py33 @x7py24 @x8py19 @x9py16 @x10py13 @x11py12 @x12py11 @x13py7 @x14py6 @x15py5 @x16py3) (FStar.Pervasives.Native.tuple8 @x1py104 @x2py77 @x3py61 @x4py46 @x5py42 @x6py33 @x7py24 @x8py19)) (not (HasTypeFuel @u0py59 @x1py104 Tm_type)) (not (HasTypeFuel @u0py59 @x2py77 Tm_type)) (not (HasTypeFuel @u0py59 @x3py61 Tm_type)) (not (HasTypeFuel @u0py59 @x4py46 Tm_type)) (not (HasTypeFuel @u0py59 @x5py42 Tm_type)) (not (HasTypeFuel @u0py59 @x6py33 Tm_type)) (not (HasTypeFuel @u0py59 @x7py24 Tm_type)) (not (HasTypeFuel @u0py59 @x8py19 Tm_type)) (not (HasTypeFuel @u0py59 @x9py16 @x1py104)) (not (HasTypeFuel @u0py59 @x10py13 @x2py77)) (not (HasTypeFuel @u0py59 @x11py12 @x3py61)) (not (HasTypeFuel @u0py59 @x12py11 @x4py46)) (not (HasTypeFuel @u0py59 @x13py7 @x5py42)) (not (HasTypeFuel @u0py59 @x14py6 @x6py33)) (not (HasTypeFuel @u0py59 @x15py5 @x7py24)) (not (HasTypeFuel @u0py59 @x16py3 @x8py19))) :pattern ((HasTypeFuel @u0py59 (FStar.Pervasives.Native.Mktuple8 @x1py104 @x2py77 @x3py61 @x4py46 @x5py42 @x6py33 @x7py24 @x8py19 @x9py16 @x10py13 @x11py12 @x12py11 @x13py7 @x14py6 @x15py5 @x16py3) (FStar.Pervasives.Native.tuple8 @x1py104 @x2py77 @x3py61 @x4py46 @x5py42 @x6py33 @x7py24 @x8py19))) )) :named data_typing_intro_FStar.Pervasives.Native.Mktuple8@tok))
(assert (! (forall ((@u0py60 Fuel)(@x1py105 Term)) (! (or (not (HasTypeFuel @u0py60 @x1py105 Tm_type)) (HasTypeFuel @u0py60 (FStar.Pervasives.Native.None @x1py105) (FStar.Pervasives.Native.option @x1py105))) :pattern ((HasTypeFuel @u0py60 (FStar.Pervasives.Native.None @x1py105) (FStar.Pervasives.Native.option @x1py105))) )) :named data_typing_intro_FStar.Pervasives.Native.None@tok))
(assert (! (forall ((@u0py61 Fuel)(@x1py106 Term)(@x2py78 Term)) (! (or (HasTypeFuel @u0py61 (FStar.Pervasives.Native.Some @x1py106 @x2py78) (FStar.Pervasives.Native.option @x1py106)) (not (HasTypeFuel @u0py61 @x1py106 Tm_type)) (not (HasTypeFuel @u0py61 @x2py78 @x1py106))) :pattern ((HasTypeFuel @u0py61 (FStar.Pervasives.Native.Some @x1py106 @x2py78) (FStar.Pervasives.Native.option @x1py106))) )) :named data_typing_intro_FStar.Pervasives.Native.Some@tok))
(assert (! (forall ((@u0py62 Fuel)) (! (HasTypeFuel @u0py62 FStar.Pervasives.PpxDerivingShow FStar.Pervasives.__internal_ocaml_attributes) :pattern ((HasTypeFuel @u0py62 FStar.Pervasives.PpxDerivingShow FStar.Pervasives.__internal_ocaml_attributes)) )) :named data_typing_intro_FStar.Pervasives.PpxDerivingShow@tok))
(assert (! (forall ((@u0py63 Fuel)(@x1py107 Term)) (! (or (not (HasTypeFuel @u0py63 @x1py107 Prims.string)) (HasTypeFuel @u0py63 (FStar.Pervasives.PpxDerivingShowConstant @x1py107) FStar.Pervasives.__internal_ocaml_attributes)) :pattern ((HasTypeFuel @u0py63 (FStar.Pervasives.PpxDerivingShowConstant @x1py107) FStar.Pervasives.__internal_ocaml_attributes)) )) :named data_typing_intro_FStar.Pervasives.PpxDerivingShowConstant@tok))
(assert (! (forall ((@u0py64 Fuel)) (! (HasTypeFuel @u0py64 FStar.Pervasives.PpxDerivingYoJson FStar.Pervasives.__internal_ocaml_attributes) :pattern ((HasTypeFuel @u0py64 FStar.Pervasives.PpxDerivingYoJson FStar.Pervasives.__internal_ocaml_attributes)) )) :named data_typing_intro_FStar.Pervasives.PpxDerivingYoJson@tok))
(assert (! (forall ((@u0py65 Fuel)) (! (HasTypeFuel @u0py65 FStar.Pervasives.Substitute FStar.Pervasives.__internal_ocaml_attributes) :pattern ((HasTypeFuel @u0py65 FStar.Pervasives.Substitute FStar.Pervasives.__internal_ocaml_attributes)) )) :named data_typing_intro_FStar.Pervasives.Substitute@tok))
(assert (! (forall ((@u0py66 Fuel)(@x1py108 Term)(@x2py79 Term)) (! (or (HasTypeFuel @u0py66 (FStar.Pervasives.V @x1py108 @x2py79) (FStar.Pervasives.result @x1py108)) (not (HasTypeFuel @u0py66 @x1py108 Tm_type)) (not (HasTypeFuel @u0py66 @x2py79 @x1py108))) :pattern ((HasTypeFuel @u0py66 (FStar.Pervasives.V @x1py108 @x2py79) (FStar.Pervasives.result @x1py108))) )) :named data_typing_intro_FStar.Pervasives.V@tok))
(assert (! (forall ((@u0py67 Fuel)(@x1py109 Term)(@x2py80 Term)(@x3py62 Term)(@x4py47 Term)) (! (or (HasTypeFuel @u0py67 (Prims.And @x1py109 @x2py80 @x3py62 @x4py47) (Prims.c_and @x1py109 @x2py80)) (not (HasTypeFuel @u0py67 @x1py109 Tm_type)) (not (HasTypeFuel @u0py67 @x2py80 Tm_type)) (not (HasTypeFuel @u0py67 @x3py62 @x1py109)) (not (HasTypeFuel @u0py67 @x4py47 @x2py80))) :pattern ((HasTypeFuel @u0py67 (Prims.And @x1py109 @x2py80 @x3py62 @x4py47) (Prims.c_and @x1py109 @x2py80))) )) :named data_typing_intro_Prims.And@tok))
(assert (! (forall ((@u0py68 Fuel)(@x1py110 Term)(@x2py81 Term)(@x3py63 Term)) (! (or (HasTypeFuel @u0py68 (Prims.Cons @x1py110 @x2py81 @x3py63) (Prims.list @x1py110)) (not (HasTypeFuel @u0py68 @x1py110 Tm_type)) (not (HasTypeFuel @u0py68 @x2py81 @x1py110)) (not (HasTypeFuel @u0py68 @x3py63 (Prims.list @x1py110)))) :pattern ((HasTypeFuel @u0py68 (Prims.Cons @x1py110 @x2py81 @x3py63) (Prims.list @x1py110))) )) :named data_typing_intro_Prims.Cons@tok))
(assert (! (forall ((@u0py69 Fuel)(@x1py111 Term)(@x2py82 Term)) (! (or (HasTypeFuel @u0py69 (Prims.HRefl @x1py111 @x2py82) (Prims.h_equals @x1py111 @x2py82 @x1py111 @x2py82)) (not (HasTypeFuel @u0py69 @x1py111 Tm_type)) (not (HasTypeFuel @u0py69 @x2py82 @x1py111))) :pattern ((HasTypeFuel @u0py69 (Prims.HRefl @x1py111 @x2py82) (Prims.h_equals @x1py111 @x2py82 @x1py111 @x2py82))) )) :named data_typing_intro_Prims.HRefl@tok))
(assert (! (forall ((@u0py70 Fuel)(@x1py112 Term)(@x2py83 Term)(@x3py64 Term)) (! (or (HasTypeFuel @u0py70 (Prims.Left @x1py112 @x2py83 @x3py64) (Prims.c_or @x1py112 @x2py83)) (not (HasTypeFuel @u0py70 @x1py112 Tm_type)) (not (HasTypeFuel @u0py70 @x2py83 Tm_type)) (not (HasTypeFuel @u0py70 @x3py64 @x1py112))) :pattern ((HasTypeFuel @u0py70 (Prims.Left @x1py112 @x2py83 @x3py64) (Prims.c_or @x1py112 @x2py83))) )) :named data_typing_intro_Prims.Left@tok))
(assert (! (forall ((@u0py71 Fuel)) (! (HasTypeFuel @u0py71 Prims.LexTop Prims.lex_t) :pattern ((HasTypeFuel @u0py71 Prims.LexTop Prims.lex_t)) )) :named data_typing_intro_Prims.LexTop@tok))
(assert (! (forall ((@u0py72 Fuel)(@x1py113 Term)(@x2py84 Term)(@x3py65 Term)(@x4py48 Term)) (! (or (HasTypeFuel @u0py72 (Prims.Mkdtuple2 @x1py113 @x2py84 @x3py65 @x4py48) (Prims.dtuple2 @x1py113 @x2py84)) (not (HasTypeFuel @u0py72 @x1py113 Tm_type)) (not (HasTypeFuel @u0py72 @x2py84 (Tm_arrow_e06752ba152f81447b312efcdf8f0e23 @x1py113))) (not (HasTypeFuel @u0py72 @x3py65 @x1py113)) (not (HasTypeFuel @u0py72 @x4py48 (ApplyTT @x2py84 @x3py65)))) :pattern ((HasTypeFuel @u0py72 (Prims.Mkdtuple2 @x1py113 @x2py84 @x3py65 @x4py48) (Prims.dtuple2 @x1py113 @x2py84))) )) :named data_typing_intro_Prims.Mkdtuple2@tok))
(assert (! (forall ((@u0py73 Fuel)(@x1py114 Term)) (! (or (not (HasTypeFuel @u0py73 @x1py114 Tm_type)) (HasTypeFuel @u0py73 (Prims.Nil @x1py114) (Prims.list @x1py114))) :pattern ((HasTypeFuel @u0py73 (Prims.Nil @x1py114) (Prims.list @x1py114))) )) :named data_typing_intro_Prims.Nil@tok))
(assert (! (forall ((@u0py74 Fuel)(@x1py115 Term)(@x2py85 Term)) (! (or (HasTypeFuel @u0py74 (Prims.Refl @x1py115 @x2py85) (Prims.equals @x1py115 @x2py85 @x2py85)) (not (HasTypeFuel @u0py74 @x1py115 Tm_type)) (not (HasTypeFuel @u0py74 @x2py85 @x1py115))) :pattern ((HasTypeFuel @u0py74 (Prims.Refl @x1py115 @x2py85) (Prims.equals @x1py115 @x2py85 @x2py85))) )) :named data_typing_intro_Prims.Refl@tok))
(assert (! (forall ((@u0py75 Fuel)(@x1py116 Term)(@x2py86 Term)(@x3py66 Term)) (! (or (HasTypeFuel @u0py75 (Prims.Right @x1py116 @x2py86 @x3py66) (Prims.c_or @x1py116 @x2py86)) (not (HasTypeFuel @u0py75 @x1py116 Tm_type)) (not (HasTypeFuel @u0py75 @x2py86 Tm_type)) (not (HasTypeFuel @u0py75 @x3py66 @x2py86))) :pattern ((HasTypeFuel @u0py75 (Prims.Right @x1py116 @x2py86 @x3py66) (Prims.c_or @x1py116 @x2py86))) )) :named data_typing_intro_Prims.Right@tok))
(assert (! (forall ((@u0py76 Fuel)) (! (HasTypeFuel @u0py76 Prims.T Prims.c_True) :pattern ((HasTypeFuel @u0py76 Prims.T Prims.c_True)) )) :named data_typing_intro_Prims.T@tok))
(assert (! (forall ((@x0py68 Term)(@x1py117 Term)(@x2py87 Term)(@x3py67 Term)(@x4py49 Term)) (! (= (False.uu___is_CalcRefl @x0py68 @x1py117 @x2py87 @x3py67 @x4py49) (BoxBool (is-False.CalcRefl @x4py49))) :pattern ((False.uu___is_CalcRefl @x0py68 @x1py117 @x2py87 @x3py67 @x4py49)) )) :named disc_equation_False.CalcRefl))
(assert (! (forall ((@x0py69 Term)(@x1py118 Term)(@x2py88 Term)(@x3py68 Term)(@x4py50 Term)) (! (= (False.uu___is_CalcStep @x0py69 @x1py118 @x2py88 @x3py68 @x4py50) (BoxBool (is-False.CalcStep @x4py50))) :pattern ((False.uu___is_CalcStep @x0py69 @x1py118 @x2py88 @x3py68 @x4py50)) )) :named disc_equation_False.CalcStep))
(assert (! (forall ((@x0py70 Term)) (! (= (FStar.Pervasives.uu___is_CConst @x0py70) (BoxBool (is-FStar.Pervasives.CConst @x0py70))) :pattern ((FStar.Pervasives.uu___is_CConst @x0py70)) )) :named disc_equation_FStar.Pervasives.CConst))
(assert (! (forall ((@x0py71 Term)) (! (= (FStar.Pervasives.uu___is_CEpilogue @x0py71) (BoxBool (is-FStar.Pervasives.CEpilogue @x0py71))) :pattern ((FStar.Pervasives.uu___is_CEpilogue @x0py71)) )) :named disc_equation_FStar.Pervasives.CEpilogue))
(assert (! (forall ((@x0py72 Term)) (! (= (FStar.Pervasives.uu___is_CInline @x0py72) (BoxBool (is-FStar.Pervasives.CInline @x0py72))) :pattern ((FStar.Pervasives.uu___is_CInline @x0py72)) )) :named disc_equation_FStar.Pervasives.CInline))
(assert (! (forall ((@x0py73 Term)) (! (= (FStar.Pervasives.uu___is_Comment @x0py73) (BoxBool (is-FStar.Pervasives.Comment @x0py73))) :pattern ((FStar.Pervasives.uu___is_Comment @x0py73)) )) :named disc_equation_FStar.Pervasives.Comment))
(assert (! (forall ((@x0py74 Term)) (! (= (FStar.Pervasives.uu___is_CPrologue @x0py74) (BoxBool (is-FStar.Pervasives.CPrologue @x0py74))) :pattern ((FStar.Pervasives.uu___is_CPrologue @x0py74)) )) :named disc_equation_FStar.Pervasives.CPrologue))
(assert (! (forall ((@x0py75 Term)(@x1py119 Term)) (! (= (FStar.Pervasives.uu___is_E @x0py75 @x1py119) (BoxBool (is-FStar.Pervasives.E @x1py119))) :pattern ((FStar.Pervasives.uu___is_E @x0py75 @x1py119)) )) :named disc_equation_FStar.Pervasives.E))
(assert (! (forall ((@x0py76 Term)(@x1py120 Term)) (! (= (FStar.Pervasives.uu___is_Err @x0py76 @x1py120) (BoxBool (is-FStar.Pervasives.Err @x1py120))) :pattern ((FStar.Pervasives.uu___is_Err @x0py76 @x1py120)) )) :named disc_equation_FStar.Pervasives.Err))
(assert (! (forall ((@x0py77 Term)) (! (= (FStar.Pervasives.uu___is_Gc @x0py77) (BoxBool (is-FStar.Pervasives.Gc @x0py77))) :pattern ((FStar.Pervasives.uu___is_Gc @x0py77)) )) :named disc_equation_FStar.Pervasives.Gc))
(assert (! (forall ((@x0py78 Term)(@x1py121 Term)(@x2py89 Term)) (! (= (FStar.Pervasives.uu___is_Inl @x0py78 @x1py121 @x2py89) (BoxBool (is-FStar.Pervasives.Inl @x2py89))) :pattern ((FStar.Pervasives.uu___is_Inl @x0py78 @x1py121 @x2py89)) )) :named disc_equation_FStar.Pervasives.Inl))
(assert (! (forall ((@x0py79 Term)(@x1py122 Term)(@x2py90 Term)) (! (= (FStar.Pervasives.uu___is_Inr @x0py79 @x1py122 @x2py90) (BoxBool (is-FStar.Pervasives.Inr @x2py90))) :pattern ((FStar.Pervasives.uu___is_Inr @x0py79 @x1py122 @x2py90)) )) :named disc_equation_FStar.Pervasives.Inr))
(assert (! (forall ((@x0py80 Term)(@x1py123 Term)(@x2py91 Term)(@x3py69 Term)) (! (= (FStar.Pervasives.uu___is_Mkdtuple3 @x0py80 @x1py123 @x2py91 @x3py69) (BoxBool (is-FStar.Pervasives.Mkdtuple3 @x3py69))) :pattern ((FStar.Pervasives.uu___is_Mkdtuple3 @x0py80 @x1py123 @x2py91 @x3py69)) )) :named disc_equation_FStar.Pervasives.Mkdtuple3))
(assert (! (forall ((@x0py81 Term)(@x1py124 Term)(@x2py92 Term)(@x3py70 Term)(@x4py51 Term)) (! (= (FStar.Pervasives.uu___is_Mkdtuple4 @x0py81 @x1py124 @x2py92 @x3py70 @x4py51) (BoxBool (is-FStar.Pervasives.Mkdtuple4 @x4py51))) :pattern ((FStar.Pervasives.uu___is_Mkdtuple4 @x0py81 @x1py124 @x2py92 @x3py70 @x4py51)) )) :named disc_equation_FStar.Pervasives.Mkdtuple4))
(assert (! (forall ((@x0py82 Term)(@x1py125 Term)(@x2py93 Term)) (! (= (FStar.Pervasives.Native.uu___is_Mktuple2 @x0py82 @x1py125 @x2py93) (BoxBool (is-FStar.Pervasives.Native.Mktuple2 @x2py93))) :pattern ((FStar.Pervasives.Native.uu___is_Mktuple2 @x0py82 @x1py125 @x2py93)) )) :named disc_equation_FStar.Pervasives.Native.Mktuple2))
(assert (! (forall ((@x0py83 Term)(@x1py126 Term)(@x2py94 Term)(@x3py71 Term)) (! (= (FStar.Pervasives.Native.uu___is_Mktuple3 @x0py83 @x1py126 @x2py94 @x3py71) (BoxBool (is-FStar.Pervasives.Native.Mktuple3 @x3py71))) :pattern ((FStar.Pervasives.Native.uu___is_Mktuple3 @x0py83 @x1py126 @x2py94 @x3py71)) )) :named disc_equation_FStar.Pervasives.Native.Mktuple3))
(assert (! (forall ((@x0py84 Term)(@x1py127 Term)(@x2py95 Term)(@x3py72 Term)(@x4py52 Term)) (! (= (FStar.Pervasives.Native.uu___is_Mktuple4 @x0py84 @x1py127 @x2py95 @x3py72 @x4py52) (BoxBool (is-FStar.Pervasives.Native.Mktuple4 @x4py52))) :pattern ((FStar.Pervasives.Native.uu___is_Mktuple4 @x0py84 @x1py127 @x2py95 @x3py72 @x4py52)) )) :named disc_equation_FStar.Pervasives.Native.Mktuple4))
(assert (! (forall ((@x0py85 Term)(@x1py128 Term)(@x2py96 Term)(@x3py73 Term)(@x4py53 Term)(@x5py43 Term)) (! (= (FStar.Pervasives.Native.uu___is_Mktuple5 @x0py85 @x1py128 @x2py96 @x3py73 @x4py53 @x5py43) (BoxBool (is-FStar.Pervasives.Native.Mktuple5 @x5py43))) :pattern ((FStar.Pervasives.Native.uu___is_Mktuple5 @x0py85 @x1py128 @x2py96 @x3py73 @x4py53 @x5py43)) )) :named disc_equation_FStar.Pervasives.Native.Mktuple5))
(assert (! (forall ((@x0py86 Term)(@x1py129 Term)(@x2py97 Term)(@x3py74 Term)(@x4py54 Term)(@x5py44 Term)(@x6py34 Term)) (! (= (FStar.Pervasives.Native.uu___is_Mktuple6 @x0py86 @x1py129 @x2py97 @x3py74 @x4py54 @x5py44 @x6py34) (BoxBool (is-FStar.Pervasives.Native.Mktuple6 @x6py34))) :pattern ((FStar.Pervasives.Native.uu___is_Mktuple6 @x0py86 @x1py129 @x2py97 @x3py74 @x4py54 @x5py44 @x6py34)) )) :named disc_equation_FStar.Pervasives.Native.Mktuple6))
(assert (! (forall ((@x0py87 Term)(@x1py130 Term)(@x2py98 Term)(@x3py75 Term)(@x4py55 Term)(@x5py45 Term)(@x6py35 Term)(@x7py25 Term)) (! (= (FStar.Pervasives.Native.uu___is_Mktuple7 @x0py87 @x1py130 @x2py98 @x3py75 @x4py55 @x5py45 @x6py35 @x7py25) (BoxBool (is-FStar.Pervasives.Native.Mktuple7 @x7py25))) :pattern ((FStar.Pervasives.Native.uu___is_Mktuple7 @x0py87 @x1py130 @x2py98 @x3py75 @x4py55 @x5py45 @x6py35 @x7py25)) )) :named disc_equation_FStar.Pervasives.Native.Mktuple7))
(assert (! (forall ((@x0py88 Term)(@x1py131 Term)(@x2py99 Term)(@x3py76 Term)(@x4py56 Term)(@x5py46 Term)(@x6py36 Term)(@x7py26 Term)(@x8py20 Term)) (! (= (FStar.Pervasives.Native.uu___is_Mktuple8 @x0py88 @x1py131 @x2py99 @x3py76 @x4py56 @x5py46 @x6py36 @x7py26 @x8py20) (BoxBool (is-FStar.Pervasives.Native.Mktuple8 @x8py20))) :pattern ((FStar.Pervasives.Native.uu___is_Mktuple8 @x0py88 @x1py131 @x2py99 @x3py76 @x4py56 @x5py46 @x6py36 @x7py26 @x8py20)) )) :named disc_equation_FStar.Pervasives.Native.Mktuple8))
(assert (! (forall ((@x0py89 Term)(@x1py132 Term)) (! (= (FStar.Pervasives.Native.uu___is_None @x0py89 @x1py132) (BoxBool (is-FStar.Pervasives.Native.None @x1py132))) :pattern ((FStar.Pervasives.Native.uu___is_None @x0py89 @x1py132)) )) :named disc_equation_FStar.Pervasives.Native.None))
(assert (! (forall ((@x0py90 Term)(@x1py133 Term)) (! (= (FStar.Pervasives.Native.uu___is_Some @x0py90 @x1py133) (BoxBool (is-FStar.Pervasives.Native.Some @x1py133))) :pattern ((FStar.Pervasives.Native.uu___is_Some @x0py90 @x1py133)) )) :named disc_equation_FStar.Pervasives.Native.Some))
(assert (! (forall ((@x0py91 Term)) (! (= (FStar.Pervasives.uu___is_PpxDerivingShow @x0py91) (BoxBool (is-FStar.Pervasives.PpxDerivingShow @x0py91))) :pattern ((FStar.Pervasives.uu___is_PpxDerivingShow @x0py91)) )) :named disc_equation_FStar.Pervasives.PpxDerivingShow))
(assert (! (forall ((@x0py92 Term)) (! (= (FStar.Pervasives.uu___is_PpxDerivingShowConstant @x0py92) (BoxBool (is-FStar.Pervasives.PpxDerivingShowConstant @x0py92))) :pattern ((FStar.Pervasives.uu___is_PpxDerivingShowConstant @x0py92)) )) :named disc_equation_FStar.Pervasives.PpxDerivingShowConstant))
(assert (! (forall ((@x0py93 Term)) (! (= (FStar.Pervasives.uu___is_PpxDerivingYoJson @x0py93) (BoxBool (is-FStar.Pervasives.PpxDerivingYoJson @x0py93))) :pattern ((FStar.Pervasives.uu___is_PpxDerivingYoJson @x0py93)) )) :named disc_equation_FStar.Pervasives.PpxDerivingYoJson))
(assert (! (forall ((@x0py94 Term)) (! (= (FStar.Pervasives.uu___is_Substitute @x0py94) (BoxBool (is-FStar.Pervasives.Substitute @x0py94))) :pattern ((FStar.Pervasives.uu___is_Substitute @x0py94)) )) :named disc_equation_FStar.Pervasives.Substitute))
(assert (! (forall ((@x0py95 Term)(@x1py134 Term)) (! (= (FStar.Pervasives.uu___is_V @x0py95 @x1py134) (BoxBool (is-FStar.Pervasives.V @x1py134))) :pattern ((FStar.Pervasives.uu___is_V @x0py95 @x1py134)) )) :named disc_equation_FStar.Pervasives.V))
(assert (! (forall ((@x0py96 Term)(@x1py135 Term)(@x2py100 Term)) (! (= (Prims.uu___is_And @x0py96 @x1py135 @x2py100) (BoxBool (is-Prims.And @x2py100))) :pattern ((Prims.uu___is_And @x0py96 @x1py135 @x2py100)) )) :named disc_equation_Prims.And))
(assert (! (forall ((@x0py97 Term)(@x1py136 Term)) (! (= (Prims.uu___is_Cons @x0py97 @x1py136) (BoxBool (is-Prims.Cons @x1py136))) :pattern ((Prims.uu___is_Cons @x0py97 @x1py136)) )) :named disc_equation_Prims.Cons))
(assert (! (forall ((@x0py98 Term)(@x1py137 Term)(@x2py101 Term)(@x3py77 Term)(@x4py57 Term)) (! (= (Prims.uu___is_HRefl @x0py98 @x1py137 @x2py101 @x3py77 @x4py57) (BoxBool (is-Prims.HRefl @x4py57))) :pattern ((Prims.uu___is_HRefl @x0py98 @x1py137 @x2py101 @x3py77 @x4py57)) )) :named disc_equation_Prims.HRefl))
(assert (! (forall ((@x0py99 Term)(@x1py138 Term)(@x2py102 Term)) (! (= (Prims.uu___is_Left @x0py99 @x1py138 @x2py102) (BoxBool (is-Prims.Left @x2py102))) :pattern ((Prims.uu___is_Left @x0py99 @x1py138 @x2py102)) )) :named disc_equation_Prims.Left))
(assert (! (forall ((@x0py100 Term)(@x1py139 Term)(@x2py103 Term)) (! (= (Prims.uu___is_Mkdtuple2 @x0py100 @x1py139 @x2py103) (BoxBool (is-Prims.Mkdtuple2 @x2py103))) :pattern ((Prims.uu___is_Mkdtuple2 @x0py100 @x1py139 @x2py103)) )) :named disc_equation_Prims.Mkdtuple2))
(assert (! (forall ((@x0py101 Term)(@x1py140 Term)) (! (= (Prims.uu___is_Nil @x0py101 @x1py140) (BoxBool (is-Prims.Nil @x1py140))) :pattern ((Prims.uu___is_Nil @x0py101 @x1py140)) )) :named disc_equation_Prims.Nil))
(assert (! (forall ((@x0py102 Term)(@x1py141 Term)(@x2py104 Term)(@x3py78 Term)) (! (= (Prims.uu___is_Refl @x0py102 @x1py141 @x2py104 @x3py78) (BoxBool (is-Prims.Refl @x3py78))) :pattern ((Prims.uu___is_Refl @x0py102 @x1py141 @x2py104 @x3py78)) )) :named disc_equation_Prims.Refl))
(assert (! (forall ((@x0py103 Term)(@x1py142 Term)(@x2py105 Term)) (! (= (Prims.uu___is_Right @x0py103 @x1py142 @x2py105) (BoxBool (is-Prims.Right @x2py105))) :pattern ((Prims.uu___is_Right @x0py103 @x1py142 @x2py105)) )) :named disc_equation_Prims.Right))
(assert (! (forall ((@x0py104 Term)) (! (= (Prims.uu___is_T @x0py104) (BoxBool (is-Prims.T @x0py104))) :pattern ((Prims.uu___is_T @x0py104)) )) :named disc_equation_Prims.T))
(assert (! (forall ((@x0py105 Term)(@x1py143 Term)(@x2py106 Term)) (! (and (or (Valid (Prims.eq2 @x0py105 @x1py143 @x2py106)) (not (= @x1py143 @x2py106))) (or (= @x1py143 @x2py106) (not (Valid (Prims.eq2 @x0py105 @x1py143 @x2py106))))) :pattern ((Prims.eq2 @x0py105 @x1py143 @x2py106)) )) :named eq2-interp))
(assert (! (forall ((@x0py106 Term)(@x1py144 Term)(@x2py107 Term)(@x3py79 Term)) (! (and (or (Valid (Prims.eq3 @x0py106 @x1py144 @x2py107 @x3py79)) (not (= @x2py107 @x3py79))) (or (= @x2py107 @x3py79) (not (Valid (Prims.eq3 @x0py106 @x1py144 @x2py107 @x3py79))))) :pattern ((Prims.eq3 @x0py106 @x1py144 @x2py107 @x3py79)) )) :named eq3-interp))
(assert (! (forall ((@x0py107 Term)(@x1py145 Term)) (! (= (ApplyTT (ApplyTT False.CalcRefl@tok @x0py107) @x1py145) (False.CalcRefl @x0py107 @x1py145)) :pattern ((ApplyTT (ApplyTT False.CalcRefl@tok @x0py107) @x1py145)) )) :named equality_tok_False.CalcRefl@tok))
(assert (! (forall ((@x0py108 Term)(@x1py146 Term)(@x2py108 Term)(@x3py80 Term)(@x4py58 Term)(@x5py47 Term)(@x6py37 Term)(@x7py27 Term)) (! (= (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT False.CalcStep@tok @x0py108) @x1py146) @x2py108) @x3py80) @x4py58) @x5py47) @x6py37) @x7py27) (False.CalcStep @x0py108 @x1py146 @x2py108 @x3py80 @x4py58 @x5py47 @x6py37 @x7py27)) :pattern ((ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT False.CalcStep@tok @x0py108) @x1py146) @x2py108) @x3py80) @x4py58) @x5py47) @x6py37) @x7py27)) )) :named equality_tok_False.CalcStep@tok))
(assert (! (forall ((@x0py109 Term)) (! (= (ApplyTT FStar.Pervasives.CConst@tok @x0py109) (FStar.Pervasives.CConst @x0py109)) :pattern ((ApplyTT FStar.Pervasives.CConst@tok @x0py109)) )) :named equality_tok_FStar.Pervasives.CConst@tok))
(assert (! (forall ((@x0py110 Term)) (! (= (ApplyTT FStar.Pervasives.CEpilogue@tok @x0py110) (FStar.Pervasives.CEpilogue @x0py110)) :pattern ((ApplyTT FStar.Pervasives.CEpilogue@tok @x0py110)) )) :named equality_tok_FStar.Pervasives.CEpilogue@tok))
(assert (! (= FStar.Pervasives.CInline@tok FStar.Pervasives.CInline) :named equality_tok_FStar.Pervasives.CInline@tok))
(assert (! (forall ((@x0py111 Term)) (! (= (ApplyTT FStar.Pervasives.Comment@tok @x0py111) (FStar.Pervasives.Comment @x0py111)) :pattern ((ApplyTT FStar.Pervasives.Comment@tok @x0py111)) )) :named equality_tok_FStar.Pervasives.Comment@tok))
(assert (! (forall ((@x0py112 Term)) (! (= (ApplyTT FStar.Pervasives.CPrologue@tok @x0py112) (FStar.Pervasives.CPrologue @x0py112)) :pattern ((ApplyTT FStar.Pervasives.CPrologue@tok @x0py112)) )) :named equality_tok_FStar.Pervasives.CPrologue@tok))
(assert (! (forall ((@x0py113 Term)(@x1py147 Term)) (! (= (ApplyTT (ApplyTT FStar.Pervasives.E@tok @x0py113) @x1py147) (FStar.Pervasives.E @x0py113 @x1py147)) :pattern ((ApplyTT (ApplyTT FStar.Pervasives.E@tok @x0py113) @x1py147)) )) :named equality_tok_FStar.Pervasives.E@tok))
(assert (! (forall ((@x0py114 Term)(@x1py148 Term)) (! (= (ApplyTT (ApplyTT FStar.Pervasives.Err@tok @x0py114) @x1py148) (FStar.Pervasives.Err @x0py114 @x1py148)) :pattern ((ApplyTT (ApplyTT FStar.Pervasives.Err@tok @x0py114) @x1py148)) )) :named equality_tok_FStar.Pervasives.Err@tok))
(assert (! (= FStar.Pervasives.Gc@tok FStar.Pervasives.Gc) :named equality_tok_FStar.Pervasives.Gc@tok))
(assert (! (forall ((@x0py115 Term)(@x1py149 Term)(@x2py109 Term)) (! (= (ApplyTT (ApplyTT (ApplyTT FStar.Pervasives.Inl@tok @x0py115) @x1py149) @x2py109) (FStar.Pervasives.Inl @x0py115 @x1py149 @x2py109)) :pattern ((ApplyTT (ApplyTT (ApplyTT FStar.Pervasives.Inl@tok @x0py115) @x1py149) @x2py109)) )) :named equality_tok_FStar.Pervasives.Inl@tok))
(assert (! (forall ((@x0py116 Term)(@x1py150 Term)(@x2py110 Term)) (! (= (ApplyTT (ApplyTT (ApplyTT FStar.Pervasives.Inr@tok @x0py116) @x1py150) @x2py110) (FStar.Pervasives.Inr @x0py116 @x1py150 @x2py110)) :pattern ((ApplyTT (ApplyTT (ApplyTT FStar.Pervasives.Inr@tok @x0py116) @x1py150) @x2py110)) )) :named equality_tok_FStar.Pervasives.Inr@tok))
(assert (! (forall ((@x0py117 Term)(@x1py151 Term)(@x2py111 Term)(@x3py81 Term)(@x4py59 Term)(@x5py48 Term)) (! (= (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT FStar.Pervasives.Mkdtuple3@tok @x0py117) @x1py151) @x2py111) @x3py81) @x4py59) @x5py48) (FStar.Pervasives.Mkdtuple3 @x0py117 @x1py151 @x2py111 @x3py81 @x4py59 @x5py48)) :pattern ((ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT FStar.Pervasives.Mkdtuple3@tok @x0py117) @x1py151) @x2py111) @x3py81) @x4py59) @x5py48)) )) :named equality_tok_FStar.Pervasives.Mkdtuple3@tok))
(assert (! (forall ((@x0py118 Term)(@x1py152 Term)(@x2py112 Term)(@x3py82 Term)(@x4py60 Term)(@x5py49 Term)(@x6py38 Term)(@x7py28 Term)) (! (= (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT FStar.Pervasives.Mkdtuple4@tok @x0py118) @x1py152) @x2py112) @x3py82) @x4py60) @x5py49) @x6py38) @x7py28) (FStar.Pervasives.Mkdtuple4 @x0py118 @x1py152 @x2py112 @x3py82 @x4py60 @x5py49 @x6py38 @x7py28)) :pattern ((ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT FStar.Pervasives.Mkdtuple4@tok @x0py118) @x1py152) @x2py112) @x3py82) @x4py60) @x5py49) @x6py38) @x7py28)) )) :named equality_tok_FStar.Pervasives.Mkdtuple4@tok))
(assert (! (forall ((@x0py119 Term)(@x1py153 Term)(@x2py113 Term)(@x3py83 Term)) (! (= (ApplyTT (ApplyTT (ApplyTT (ApplyTT FStar.Pervasives.Native.Mktuple2@tok @x0py119) @x1py153) @x2py113) @x3py83) (FStar.Pervasives.Native.Mktuple2 @x0py119 @x1py153 @x2py113 @x3py83)) :pattern ((ApplyTT (ApplyTT (ApplyTT (ApplyTT FStar.Pervasives.Native.Mktuple2@tok @x0py119) @x1py153) @x2py113) @x3py83)) )) :named equality_tok_FStar.Pervasives.Native.Mktuple2@tok))
(assert (! (forall ((@x0py120 Term)(@x1py154 Term)(@x2py114 Term)(@x3py84 Term)(@x4py61 Term)(@x5py50 Term)) (! (= (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT FStar.Pervasives.Native.Mktuple3@tok @x0py120) @x1py154) @x2py114) @x3py84) @x4py61) @x5py50) (FStar.Pervasives.Native.Mktuple3 @x0py120 @x1py154 @x2py114 @x3py84 @x4py61 @x5py50)) :pattern ((ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT FStar.Pervasives.Native.Mktuple3@tok @x0py120) @x1py154) @x2py114) @x3py84) @x4py61) @x5py50)) )) :named equality_tok_FStar.Pervasives.Native.Mktuple3@tok))
(assert (! (forall ((@x0py121 Term)(@x1py155 Term)(@x2py115 Term)(@x3py85 Term)(@x4py62 Term)(@x5py51 Term)(@x6py39 Term)(@x7py29 Term)) (! (= (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT FStar.Pervasives.Native.Mktuple4@tok @x0py121) @x1py155) @x2py115) @x3py85) @x4py62) @x5py51) @x6py39) @x7py29) (FStar.Pervasives.Native.Mktuple4 @x0py121 @x1py155 @x2py115 @x3py85 @x4py62 @x5py51 @x6py39 @x7py29)) :pattern ((ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT FStar.Pervasives.Native.Mktuple4@tok @x0py121) @x1py155) @x2py115) @x3py85) @x4py62) @x5py51) @x6py39) @x7py29)) )) :named equality_tok_FStar.Pervasives.Native.Mktuple4@tok))
(assert (! (forall ((@x0py122 Term)(@x1py156 Term)(@x2py116 Term)(@x3py86 Term)(@x4py63 Term)(@x5py52 Term)(@x6py40 Term)(@x7py30 Term)(@x8py21 Term)(@x9py17 Term)) (! (= (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT FStar.Pervasives.Native.Mktuple5@tok @x0py122) @x1py156) @x2py116) @x3py86) @x4py63) @x5py52) @x6py40) @x7py30) @x8py21) @x9py17) (FStar.Pervasives.Native.Mktuple5 @x0py122 @x1py156 @x2py116 @x3py86 @x4py63 @x5py52 @x6py40 @x7py30 @x8py21 @x9py17)) :pattern ((ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT FStar.Pervasives.Native.Mktuple5@tok @x0py122) @x1py156) @x2py116) @x3py86) @x4py63) @x5py52) @x6py40) @x7py30) @x8py21) @x9py17)) )) :named equality_tok_FStar.Pervasives.Native.Mktuple5@tok))
(assert (! (forall ((@x0py123 Term)(@x1py157 Term)(@x2py117 Term)(@x3py87 Term)(@x4py64 Term)(@x5py53 Term)(@x6py41 Term)(@x7py31 Term)(@x8py22 Term)(@x9py18 Term)(@x10py14 Term)(@x11py13 Term)) (! (= (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT FStar.Pervasives.Native.Mktuple6@tok @x0py123) @x1py157) @x2py117) @x3py87) @x4py64) @x5py53) @x6py41) @x7py31) @x8py22) @x9py18) @x10py14) @x11py13) (FStar.Pervasives.Native.Mktuple6 @x0py123 @x1py157 @x2py117 @x3py87 @x4py64 @x5py53 @x6py41 @x7py31 @x8py22 @x9py18 @x10py14 @x11py13)) :pattern ((ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT FStar.Pervasives.Native.Mktuple6@tok @x0py123) @x1py157) @x2py117) @x3py87) @x4py64) @x5py53) @x6py41) @x7py31) @x8py22) @x9py18) @x10py14) @x11py13)) )) :named equality_tok_FStar.Pervasives.Native.Mktuple6@tok))
(assert (! (forall ((@x0py124 Term)(@x1py158 Term)(@x2py118 Term)(@x3py88 Term)(@x4py65 Term)(@x5py54 Term)(@x6py42 Term)(@x7py32 Term)(@x8py23 Term)(@x9py19 Term)(@x10py15 Term)(@x11py14 Term)(@x12py12 Term)(@x13py8 Term)) (! (= (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT FStar.Pervasives.Native.Mktuple7@tok @x0py124) @x1py158) @x2py118) @x3py88) @x4py65) @x5py54) @x6py42) @x7py32) @x8py23) @x9py19) @x10py15) @x11py14) @x12py12) @x13py8) (FStar.Pervasives.Native.Mktuple7 @x0py124 @x1py158 @x2py118 @x3py88 @x4py65 @x5py54 @x6py42 @x7py32 @x8py23 @x9py19 @x10py15 @x11py14 @x12py12 @x13py8)) :pattern ((ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT FStar.Pervasives.Native.Mktuple7@tok @x0py124) @x1py158) @x2py118) @x3py88) @x4py65) @x5py54) @x6py42) @x7py32) @x8py23) @x9py19) @x10py15) @x11py14) @x12py12) @x13py8)) )) :named equality_tok_FStar.Pervasives.Native.Mktuple7@tok))
(assert (! (forall ((@x0py125 Term)(@x1py159 Term)(@x2py119 Term)(@x3py89 Term)(@x4py66 Term)(@x5py55 Term)(@x6py43 Term)(@x7py33 Term)(@x8py24 Term)(@x9py20 Term)(@x10py16 Term)(@x11py15 Term)(@x12py13 Term)(@x13py9 Term)(@x14py7 Term)(@x15py6 Term)) (! (= (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT FStar.Pervasives.Native.Mktuple8@tok @x0py125) @x1py159) @x2py119) @x3py89) @x4py66) @x5py55) @x6py43) @x7py33) @x8py24) @x9py20) @x10py16) @x11py15) @x12py13) @x13py9) @x14py7) @x15py6) (FStar.Pervasives.Native.Mktuple8 @x0py125 @x1py159 @x2py119 @x3py89 @x4py66 @x5py55 @x6py43 @x7py33 @x8py24 @x9py20 @x10py16 @x11py15 @x12py13 @x13py9 @x14py7 @x15py6)) :pattern ((ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT FStar.Pervasives.Native.Mktuple8@tok @x0py125) @x1py159) @x2py119) @x3py89) @x4py66) @x5py55) @x6py43) @x7py33) @x8py24) @x9py20) @x10py16) @x11py15) @x12py13) @x13py9) @x14py7) @x15py6)) )) :named equality_tok_FStar.Pervasives.Native.Mktuple8@tok))
(assert (! (forall ((@x0py126 Term)) (! (= (ApplyTT FStar.Pervasives.Native.None@tok @x0py126) (FStar.Pervasives.Native.None @x0py126)) :pattern ((ApplyTT FStar.Pervasives.Native.None@tok @x0py126)) )) :named equality_tok_FStar.Pervasives.Native.None@tok))
(assert (! (forall ((@x0py127 Term)(@x1py160 Term)) (! (= (ApplyTT (ApplyTT FStar.Pervasives.Native.Some@tok @x0py127) @x1py160) (FStar.Pervasives.Native.Some @x0py127 @x1py160)) :pattern ((ApplyTT (ApplyTT FStar.Pervasives.Native.Some@tok @x0py127) @x1py160)) )) :named equality_tok_FStar.Pervasives.Native.Some@tok))
(assert (! (= FStar.Pervasives.PpxDerivingShow@tok FStar.Pervasives.PpxDerivingShow) :named equality_tok_FStar.Pervasives.PpxDerivingShow@tok))
(assert (! (forall ((@x0py128 Term)) (! (= (ApplyTT FStar.Pervasives.PpxDerivingShowConstant@tok @x0py128) (FStar.Pervasives.PpxDerivingShowConstant @x0py128)) :pattern ((ApplyTT FStar.Pervasives.PpxDerivingShowConstant@tok @x0py128)) )) :named equality_tok_FStar.Pervasives.PpxDerivingShowConstant@tok))
(assert (! (= FStar.Pervasives.PpxDerivingYoJson@tok FStar.Pervasives.PpxDerivingYoJson) :named equality_tok_FStar.Pervasives.PpxDerivingYoJson@tok))
(assert (! (= FStar.Pervasives.Substitute@tok FStar.Pervasives.Substitute) :named equality_tok_FStar.Pervasives.Substitute@tok))
(assert (! (forall ((@x0py129 Term)(@x1py161 Term)) (! (= (ApplyTT (ApplyTT FStar.Pervasives.V@tok @x0py129) @x1py161) (FStar.Pervasives.V @x0py129 @x1py161)) :pattern ((ApplyTT (ApplyTT FStar.Pervasives.V@tok @x0py129) @x1py161)) )) :named equality_tok_FStar.Pervasives.V@tok))
(assert (! (forall ((@x0py130 Term)(@x1py162 Term)(@x2py120 Term)(@x3py90 Term)) (! (= (ApplyTT (ApplyTT (ApplyTT (ApplyTT Prims.And@tok @x0py130) @x1py162) @x2py120) @x3py90) (Prims.And @x0py130 @x1py162 @x2py120 @x3py90)) :pattern ((ApplyTT (ApplyTT (ApplyTT (ApplyTT Prims.And@tok @x0py130) @x1py162) @x2py120) @x3py90)) )) :named equality_tok_Prims.And@tok))
(assert (! (forall ((@x0py131 Term)(@x1py163 Term)(@x2py121 Term)) (! (= (ApplyTT (ApplyTT (ApplyTT Prims.Cons@tok @x0py131) @x1py163) @x2py121) (Prims.Cons @x0py131 @x1py163 @x2py121)) :pattern ((ApplyTT (ApplyTT (ApplyTT Prims.Cons@tok @x0py131) @x1py163) @x2py121)) )) :named equality_tok_Prims.Cons@tok))
(assert (! (forall ((@x0py132 Term)(@x1py164 Term)) (! (= (ApplyTT (ApplyTT Prims.HRefl@tok @x0py132) @x1py164) (Prims.HRefl @x0py132 @x1py164)) :pattern ((ApplyTT (ApplyTT Prims.HRefl@tok @x0py132) @x1py164)) )) :named equality_tok_Prims.HRefl@tok))
(assert (! (forall ((@x0py133 Term)(@x1py165 Term)(@x2py122 Term)) (! (= (ApplyTT (ApplyTT (ApplyTT Prims.Left@tok @x0py133) @x1py165) @x2py122) (Prims.Left @x0py133 @x1py165 @x2py122)) :pattern ((ApplyTT (ApplyTT (ApplyTT Prims.Left@tok @x0py133) @x1py165) @x2py122)) )) :named equality_tok_Prims.Left@tok))
(assert (! (= Prims.LexTop@tok Prims.LexTop) :named equality_tok_Prims.LexTop@tok))
(assert (! (forall ((@x0py134 Term)(@x1py166 Term)(@x2py123 Term)(@x3py91 Term)) (! (= (ApplyTT (ApplyTT (ApplyTT (ApplyTT Prims.Mkdtuple2@tok @x0py134) @x1py166) @x2py123) @x3py91) (Prims.Mkdtuple2 @x0py134 @x1py166 @x2py123 @x3py91)) :pattern ((ApplyTT (ApplyTT (ApplyTT (ApplyTT Prims.Mkdtuple2@tok @x0py134) @x1py166) @x2py123) @x3py91)) )) :named equality_tok_Prims.Mkdtuple2@tok))
(assert (! (forall ((@x0py135 Term)) (! (= (ApplyTT Prims.Nil@tok @x0py135) (Prims.Nil @x0py135)) :pattern ((ApplyTT Prims.Nil@tok @x0py135)) )) :named equality_tok_Prims.Nil@tok))
(assert (! (forall ((@x0py136 Term)(@x1py167 Term)) (! (= (ApplyTT (ApplyTT Prims.Refl@tok @x0py136) @x1py167) (Prims.Refl @x0py136 @x1py167)) :pattern ((ApplyTT (ApplyTT Prims.Refl@tok @x0py136) @x1py167)) )) :named equality_tok_Prims.Refl@tok))
(assert (! (forall ((@x0py137 Term)(@x1py168 Term)(@x2py124 Term)) (! (= (ApplyTT (ApplyTT (ApplyTT Prims.Right@tok @x0py137) @x1py168) @x2py124) (Prims.Right @x0py137 @x1py168 @x2py124)) :pattern ((ApplyTT (ApplyTT (ApplyTT Prims.Right@tok @x0py137) @x1py168) @x2py124)) )) :named equality_tok_Prims.Right@tok))
(assert (! (= Prims.T@tok Prims.T) :named equality_tok_Prims.T@tok))
(assert (! (forall ((@x0py138 Term)(@x1py169 Term)) (! (= (False.init @x0py138 @x1py169) (False.CalcRefl @x0py138 @x1py169)) :pattern ((False.init @x0py138 @x1py169)) )) :named equation_False.init))
(assert (! (forall ((@x0py139 Term)) (! (= (False.preorder @x0py139) (False_Tm_refine_74ff667701f75cfbefa2fd1da9dbdc13 @x0py139)) :pattern ((False.preorder @x0py139)) )) :named equation_False.preorder))
(assert (! (forall ((@x0py140 Term)(@x1py170 Term)) (! (= (ApplyTT (ApplyTT False.r1 @x0py140) @x1py170) (Prims.b2t (Prims.op_GreaterThanOrEqual @x0py140 @x1py170))) :pattern ((ApplyTT (ApplyTT False.r1 @x0py140) @x1py170)) )) :named equation_False.r1))
(assert (! (forall ((@x0py141 Term)(@x1py171 Term)) (! (= (ApplyTT (ApplyTT False.r2 @x0py141) @x1py171) (Prims.b2t (Prims.op_LessThanOrEqual @x0py141 @x1py171))) :pattern ((ApplyTT (ApplyTT False.r2 @x0py141) @x1py171)) )) :named equation_False.r2))
(assert (! (forall ((@x0py142 Term)) (! (= (False.relation @x0py142) (Tm_arrow_76a60dab4e3b3182a3b4dae5a57cfb2d @x0py142)) :pattern ((False.relation @x0py142)) )) :named equation_False.relation))
(assert (! (forall ((@x0py143 Term)(@x1py172 Term)(@x2py125 Term)(@x3py92 Term)(@x4py67 Term)(@x5py56 Term)(@x6py44 Term)(@x7py34 Term)) (! (= (False.step @x0py143 @x1py172 @x2py125 @x3py92 @x4py67 @x5py56 @x6py44 @x7py34) (False.CalcStep @x0py143 @x1py172 @x4py67 @x2py125 @x3py92 @x5py56 (ApplyTT @x6py44 Tm_unit) (ApplyTT @x7py34 Tm_unit))) :pattern ((False.step @x0py143 @x1py172 @x2py125 @x3py92 @x4py67 @x5py56 @x6py44 @x7py34)) )) :named equation_False.step))
(assert (! (forall ((@x0py144 Term)(@x1py173 Term)(@x2py126 Term)(@x3py93 Term)(@x4py68 Term)(@x5py57 Term)) (! (and (or (not (Valid (FStar.Pervasives.all_assert_p @x0py144 @x1py173 @x2py126 @x3py93 @x4py68 @x5py57))) (and (Valid @x2py126) (Valid (ApplyTT (ApplyTT @x3py93 @x4py68) @x5py57)))) (or (Valid (FStar.Pervasives.all_assert_p @x0py144 @x1py173 @x2py126 @x3py93 @x4py68 @x5py57)) (not (Valid @x2py126)) (not (Valid (ApplyTT (ApplyTT @x3py93 @x4py68) @x5py57))))) :pattern ((Valid (FStar.Pervasives.all_assert_p @x0py144 @x1py173 @x2py126 @x3py93 @x4py68 @x5py57))) )) :named equation_FStar.Pervasives.all_assert_p))
(assert (! (forall ((@x0py145 Term)(@x1py174 Term)(@x2py127 Term)(@x3py94 Term)(@x4py69 Term)(@x5py58 Term)) (! (and (or (Valid (ApplyTT (ApplyTT @x3py94 @x4py69) @x5py58)) (not (Valid (FStar.Pervasives.all_assume_p @x0py145 @x1py174 @x2py127 @x3py94 @x4py69 @x5py58))) (not (Valid @x2py127))) (or (Valid (FStar.Pervasives.all_assume_p @x0py145 @x1py174 @x2py127 @x3py94 @x4py69 @x5py58)) (and (Valid @x2py127) (not (Valid (ApplyTT (ApplyTT @x3py94 @x4py69) @x5py58)))))) :pattern ((Valid (FStar.Pervasives.all_assume_p @x0py145 @x1py174 @x2py127 @x3py94 @x4py69 @x5py58))) )) :named equation_FStar.Pervasives.all_assume_p))
(assert (! (forall ((@x0py146 Term)(@x1py175 Term)(@x2py128 Term)(@x3py95 Term)(@x4py70 Term)(@x5py59 Term)(@x6py45 Term)(@x7py35 Term)) (! (= (FStar.Pervasives.all_bind_wp @x0py146 @x1py175 @x2py128 @x3py95 @x4py70 @x5py59 @x6py45 @x7py35) (ApplyTT (ApplyTT @x4py70 (FStar.Pervasives_Tm_abs_e071eb1ddae878d42677e33386379719 @x5py59 @x6py45 @x3py95 @x0py146 @x2py128)) @x7py35)) :pattern ((FStar.Pervasives.all_bind_wp @x0py146 @x1py175 @x2py128 @x3py95 @x4py70 @x5py59 @x6py45 @x7py35)) )) :named equation_FStar.Pervasives.all_bind_wp))
(assert (! (forall ((@x0py147 Term)(@x1py176 Term)(@x2py129 Term)(@x3py96 Term)(@x4py71 Term)(@x5py60 Term)) (! (and (or (not (Valid (FStar.Pervasives.all_close_wp @x0py147 @x1py176 @x2py129 @x3py96 @x4py71 @x5py60))) (forall ((@x6py46 Term)) (! (or (not (HasType @x6py46 @x2py129)) (Valid (ApplyTT (ApplyTT (ApplyTT @x3py96 @x6py46) @x4py71) @x5py60))) :pattern ((HasType @x6py46 @x2py129)) :pattern ((ApplyTT @x3py96 @x6py46)) ))) (or (Valid (FStar.Pervasives.all_close_wp @x0py147 @x1py176 @x2py129 @x3py96 @x4py71 @x5py60)) (and (HasType (@x6!10 @x5py60 @x4py71 @x3py96 @x2py129) @x2py129) (not (Valid (ApplyTT (ApplyTT (ApplyTT @x3py96 (@x6!10 @x5py60 @x4py71 @x3py96 @x2py129)) @x4py71) @x5py60)))))) :pattern ((Valid (FStar.Pervasives.all_close_wp @x0py147 @x1py176 @x2py129 @x3py96 @x4py71 @x5py60))) )) :named equation_FStar.Pervasives.all_close_wp))
(assert (! (forall ((@x0py148 Term)(@x1py177 Term)(@x2py130 Term)(@x3py97 Term)(@x4py72 Term)(@x5py61 Term)(@x6py47 Term)) (! (and (or (not (Valid (FStar.Pervasives.all_if_then_else @x0py148 @x1py177 @x2py130 @x3py97 @x4py72 @x5py61 @x6py47))) (and (or (not (Valid @x2py130)) (Valid (ApplyTT (ApplyTT @x3py97 @x5py61) @x6py47))) (or (Valid @x2py130) (Valid (ApplyTT (ApplyTT @x4py72 @x5py61) @x6py47))))) (or (Valid (FStar.Pervasives.all_if_then_else @x0py148 @x1py177 @x2py130 @x3py97 @x4py72 @x5py61 @x6py47)) (and (or (not (Valid @x2py130)) (not (Valid (ApplyTT (ApplyTT @x3py97 @x5py61) @x6py47)))) (or (Valid @x2py130) (not (Valid (ApplyTT (ApplyTT @x4py72 @x5py61) @x6py47))))))) :pattern ((Valid (FStar.Pervasives.all_if_then_else @x0py148 @x1py177 @x2py130 @x3py97 @x4py72 @x5py61 @x6py47))) )) :named equation_FStar.Pervasives.all_if_then_else))
(assert (! (forall ((@x0py149 Term)(@x1py178 Term)(@x2py131 Term)(@x3py98 Term)(@x4py73 Term)) (! (and (or (not (Valid (FStar.Pervasives.all_ite_wp @x0py149 @x1py178 @x2py131 @x3py98 @x4py73))) (forall ((@x5py62 Term)) (! (or (Valid (ApplyTT (ApplyTT @x2py131 @x5py62) @x4py73)) (not (HasType @x5py62 (FStar.Pervasives.all_post_h @x0py149 @x1py178))) (and (Valid (ApplyTT (ApplyTT @x3py98 (@x6!12 @x5py62 @x3py98)) (@x7!11 @x5py62 @x3py98))) (not (Valid (ApplyTT (ApplyTT @x5py62 (@x6!12 @x5py62 @x3py98)) (@x7!11 @x5py62 @x3py98)))))) :pattern ((ApplyTT @x2py131 @x5py62)) :pattern ((HasType @x5py62 (FStar.Pervasives.all_post_h @x0py149 @x1py178))) :pattern ((@x6!12 @x5py62 @x3py98)) :pattern ((@x7!11 @x5py62 @x3py98)) ))) (or (Valid (FStar.Pervasives.all_ite_wp @x0py149 @x1py178 @x2py131 @x3py98 @x4py73)) (and (HasType (@x5!13 @x4py73 @x3py98 @x2py131 @x1py178 @x0py149) (FStar.Pervasives.all_post_h @x0py149 @x1py178)) (forall ((@x6py48 Term)(@x7py36 Term)) (! (or (Valid (ApplyTT (ApplyTT (@x5!13 @x4py73 @x3py98 @x2py131 @x1py178 @x0py149) @x6py48) @x7py36)) (not (Valid (ApplyTT (ApplyTT @x3py98 @x6py48) @x7py36)))) :pattern ((ApplyTT (ApplyTT (@x5!13 @x4py73 @x3py98 @x2py131 @x1py178 @x0py149) @x6py48) @x7py36)) )) (not (Valid (ApplyTT (ApplyTT @x2py131 (@x5!13 @x4py73 @x3py98 @x2py131 @x1py178 @x0py149)) @x4py73)))))) :pattern ((Valid (FStar.Pervasives.all_ite_wp @x0py149 @x1py178 @x2py131 @x3py98 @x4py73))) )) :named equation_FStar.Pervasives.all_ite_wp))
(assert (! (forall ((@x0py150 Term)(@x1py179 Term)(@x2py132 Term)(@x3py99 Term)) (! (and (or (not (Valid (FStar.Pervasives.all_null_wp @x0py150 @x1py179 @x2py132 @x3py99))) (forall ((@x4py74 Term)(@x5py63 Term)) (! (or (Valid (ApplyTT (ApplyTT @x2py132 @x4py74) @x5py63)) (not (HasType @x4py74 (FStar.Pervasives.result @x1py179))) (not (HasType @x5py63 @x0py150))) :pattern ((ApplyTT (ApplyTT @x2py132 @x4py74) @x5py63)) ))) (or (Valid (FStar.Pervasives.all_null_wp @x0py150 @x1py179 @x2py132 @x3py99)) (and (HasType (@x4!15 @x2py132 @x1py179 @x0py150) (FStar.Pervasives.result @x1py179)) (HasType (@x5!14 @x2py132 @x1py179 @x0py150) @x0py150) (not (Valid (ApplyTT (ApplyTT @x2py132 (@x4!15 @x2py132 @x1py179 @x0py150)) (@x5!14 @x2py132 @x1py179 @x0py150))))))) :pattern ((Valid (FStar.Pervasives.all_null_wp @x0py150 @x1py179 @x2py132 @x3py99))) )) :named equation_FStar.Pervasives.all_null_wp))
(assert (! (forall ((@x0py151 Term)(@x1py180 Term)) (! (= (FStar.Pervasives.all_post_h @x0py151 @x1py180) (FStar.Pervasives.all_post_h_ @x0py151 @x1py180 Prims.l_True)) :pattern ((FStar.Pervasives.all_post_h @x0py151 @x1py180)) )) :named equation_FStar.Pervasives.all_post_h))
(assert (! (forall ((@x0py152 Term)(@x1py181 Term)(@x2py133 Term)) (! (= (FStar.Pervasives.all_post_h_ @x0py152 @x1py181 @x2py133) (Tm_arrow_5db9487ea079f4bbc6de2da583d038f7 @x2py133 @x0py152 @x1py181)) :pattern ((FStar.Pervasives.all_post_h_ @x0py152 @x1py181 @x2py133)) )) :named equation_FStar.Pervasives.all_post_h_))
(assert (! (forall ((@x0py153 Term)) (! (= (FStar.Pervasives.all_pre_h @x0py153) (Tm_arrow_e06752ba152f81447b312efcdf8f0e23 @x0py153)) :pattern ((FStar.Pervasives.all_pre_h @x0py153)) )) :named equation_FStar.Pervasives.all_pre_h))
(assert (! (forall ((@x0py154 Term)(@x1py182 Term)(@x2py134 Term)(@x3py100 Term)) (! (= (FStar.Pervasives.all_return @x0py154 @x1py182 @x2py134 @x3py100) (ApplyTT @x3py100 (FStar.Pervasives.V @x1py182 @x2py134))) :pattern ((FStar.Pervasives.all_return @x0py154 @x1py182 @x2py134 @x3py100)) )) :named equation_FStar.Pervasives.all_return))
(assert (! (forall ((@x0py155 Term)(@x1py183 Term)(@x2py135 Term)(@x3py101 Term)) (! (and (or (not (Valid (FStar.Pervasives.all_stronger @x0py155 @x1py183 @x2py135 @x3py101))) (forall ((@x4py75 Term)(@x5py64 Term)) (! (or (Valid (ApplyTT (ApplyTT @x3py101 @x4py75) @x5py64)) (not (HasType @x4py75 (FStar.Pervasives.all_post_h @x0py155 @x1py183))) (not (HasType @x5py64 @x0py155)) (not (Valid (ApplyTT (ApplyTT @x2py135 @x4py75) @x5py64)))) :pattern ((ApplyTT (ApplyTT @x3py101 @x4py75) @x5py64)) :pattern ((ApplyTT (ApplyTT @x2py135 @x4py75) @x5py64)) ))) (or (Valid (FStar.Pervasives.all_stronger @x0py155 @x1py183 @x2py135 @x3py101)) (and (HasType (@x4!17 @x3py101 @x2py135 @x1py183 @x0py155) (FStar.Pervasives.all_post_h @x0py155 @x1py183)) (HasType (@x5!16 @x3py101 @x2py135 @x1py183 @x0py155) @x0py155) (Valid (ApplyTT (ApplyTT @x2py135 (@x4!17 @x3py101 @x2py135 @x1py183 @x0py155)) (@x5!16 @x3py101 @x2py135 @x1py183 @x0py155))) (not (Valid (ApplyTT (ApplyTT @x3py101 (@x4!17 @x3py101 @x2py135 @x1py183 @x0py155)) (@x5!16 @x3py101 @x2py135 @x1py183 @x0py155))))))) :pattern ((Valid (FStar.Pervasives.all_stronger @x0py155 @x1py183 @x2py135 @x3py101))) )) :named equation_FStar.Pervasives.all_stronger))
(assert (! (forall ((@x0py156 Term)(@x1py184 Term)(@x2py136 Term)) (! (and (or (not (Valid (FStar.Pervasives.all_trivial @x0py156 @x1py184 @x2py136))) (forall ((@x3py102 Term)) (! (or (not (HasType @x3py102 @x0py156)) (Valid (ApplyTT (ApplyTT @x2py136 (FStar.Pervasives_Tm_abs_fcfd87b8060d768ae62f6917d2355825 Prims.l_True @x0py156 @x1py184)) @x3py102))) :pattern ((HasType @x3py102 @x0py156)) :pattern ((ApplyTT (ApplyTT @x2py136 (FStar.Pervasives_Tm_abs_fcfd87b8060d768ae62f6917d2355825 Prims.l_True @x0py156 @x1py184)) @x3py102)) ))) (or (Valid (FStar.Pervasives.all_trivial @x0py156 @x1py184 @x2py136)) (and (HasType (@x3!18 @x2py136 @x1py184 @x0py156) @x0py156) (not (Valid (ApplyTT (ApplyTT @x2py136 (FStar.Pervasives_Tm_abs_fcfd87b8060d768ae62f6917d2355825 Prims.l_True @x0py156 @x1py184)) (@x3!18 @x2py136 @x1py184 @x0py156))))))) :pattern ((Valid (FStar.Pervasives.all_trivial @x0py156 @x1py184 @x2py136))) )) :named equation_FStar.Pervasives.all_trivial))
(assert (! (forall ((@x0py157 Term)(@x1py185 Term)) (! (= (FStar.Pervasives.all_wp_h @x0py157 @x1py185) (Tm_arrow_95c0b403ba19b1a7c1f8c73440744c07 @x1py185 @x0py157)) :pattern ((FStar.Pervasives.all_wp_h @x0py157 @x1py185)) )) :named equation_FStar.Pervasives.all_wp_h))
(assert (! (forall ((@x0py158 Term)) (! (= (FStar.Pervasives.allow_inversion @x0py158) Tm_unit) :pattern ((FStar.Pervasives.allow_inversion @x0py158)) )) :named equation_FStar.Pervasives.allow_inversion))
(assert (! (forall ((@x0py159 Term)(@x1py186 Term)(@x2py137 Term)) (! (= (FStar.Pervasives.dfst @x0py159 @x1py186 @x2py137) (Prims.__proj__Mkdtuple2__item___1 @x0py159 @x1py186 @x2py137)) :pattern ((FStar.Pervasives.dfst @x0py159 @x1py186 @x2py137)) )) :named equation_FStar.Pervasives.dfst))
(assert (! (= FStar.Pervasives.dm4f_bind_range Tm_unit) :named equation_FStar.Pervasives.dm4f_bind_range))
(assert (! (forall ((@x0py160 Term)(@x1py187 Term)(@x2py138 Term)) (! (= (FStar.Pervasives.dsnd @x0py160 @x1py187 @x2py138) (Prims.__proj__Mkdtuple2__item___2 @x0py160 @x1py187 @x2py138)) :pattern ((FStar.Pervasives.dsnd @x0py160 @x1py187 @x2py138)) )) :named equation_FStar.Pervasives.dsnd))
(assert (! (forall ((@x0py161 Term)(@x1py188 Term)(@x2py139 Term)(@x3py103 Term)) (! (and (or (not (Valid (FStar.Pervasives.ex_assert_p @x0py161 @x1py188 @x2py139 @x3py103))) (and (Valid @x1py188) (Valid (ApplyTT @x2py139 @x3py103)))) (or (Valid (FStar.Pervasives.ex_assert_p @x0py161 @x1py188 @x2py139 @x3py103)) (not (Valid @x1py188)) (not (Valid (ApplyTT @x2py139 @x3py103))))) :pattern ((Valid (FStar.Pervasives.ex_assert_p @x0py161 @x1py188 @x2py139 @x3py103))) )) :named equation_FStar.Pervasives.ex_assert_p))
(assert (! (forall ((@x0py162 Term)(@x1py189 Term)(@x2py140 Term)(@x3py104 Term)) (! (and (or (Valid (ApplyTT @x2py140 @x3py104)) (not (Valid (FStar.Pervasives.ex_assume_p @x0py162 @x1py189 @x2py140 @x3py104))) (not (Valid @x1py189))) (or (Valid (FStar.Pervasives.ex_assume_p @x0py162 @x1py189 @x2py140 @x3py104)) (and (Valid @x1py189) (not (Valid (ApplyTT @x2py140 @x3py104)))))) :pattern ((Valid (FStar.Pervasives.ex_assume_p @x0py162 @x1py189 @x2py140 @x3py104))) )) :named equation_FStar.Pervasives.ex_assume_p))
(assert (! (forall ((@x0py163 Term)(@x1py190 Term)(@x2py141 Term)(@x3py105 Term)(@x4py76 Term)(@x5py65 Term)) (! (and (or (not (Valid (FStar.Pervasives.ex_bind_wp @x0py163 @x1py190 @x2py141 @x3py105 @x4py76 @x5py65))) (forall ((@x6py49 Term)) (! (or (Valid (ApplyTT @x3py105 (FStar.Pervasives_Tm_abs_e8350ed3e632db104170fa7e8c0e0fef @x4py76 @x6py49 @x2py141 @x1py190))) (not (HasType @x6py49 (FStar.Pervasives.ex_post @x2py141))) (and (Valid (ApplyTT @x5py65 (@x7!19 @x6py49 @x5py65))) (not (Valid (ApplyTT @x6py49 (@x7!19 @x6py49 @x5py65)))))) :pattern ((FStar.Pervasives_Tm_abs_e8350ed3e632db104170fa7e8c0e0fef @x4py76 @x6py49 @x2py141 @x1py190)) :pattern ((HasType @x6py49 (FStar.Pervasives.ex_post @x2py141))) :pattern ((@x7!19 @x6py49 @x5py65)) ))) (or (Valid (FStar.Pervasives.ex_bind_wp @x0py163 @x1py190 @x2py141 @x3py105 @x4py76 @x5py65)) (and (HasType (@x6!20 @x5py65 @x4py76 @x3py105 @x2py141 @x1py190) (FStar.Pervasives.ex_post @x2py141)) (forall ((@x7py37 Term)) (! (or (Valid (ApplyTT (@x6!20 @x5py65 @x4py76 @x3py105 @x2py141 @x1py190) @x7py37)) (not (Valid (ApplyTT @x5py65 @x7py37)))) :pattern ((ApplyTT (@x6!20 @x5py65 @x4py76 @x3py105 @x2py141 @x1py190) @x7py37)) )) (not (Valid (ApplyTT @x3py105 (FStar.Pervasives_Tm_abs_e8350ed3e632db104170fa7e8c0e0fef @x4py76 (@x6!20 @x5py65 @x4py76 @x3py105 @x2py141 @x1py190) @x2py141 @x1py190))))))) :pattern ((Valid (FStar.Pervasives.ex_bind_wp @x0py163 @x1py190 @x2py141 @x3py105 @x4py76 @x5py65))) )) :named equation_FStar.Pervasives.ex_bind_wp))
(assert (! (forall ((@x0py164 Term)(@x1py191 Term)(@x2py142 Term)(@x3py106 Term)) (! (and (or (not (Valid (FStar.Pervasives.ex_close_wp @x0py164 @x1py191 @x2py142 @x3py106))) (forall ((@x4py77 Term)) (! (or (not (HasType @x4py77 @x1py191)) (Valid (ApplyTT (ApplyTT @x2py142 @x4py77) @x3py106))) :pattern ((HasType @x4py77 @x1py191)) :pattern ((ApplyTT @x2py142 @x4py77)) ))) (or (Valid (FStar.Pervasives.ex_close_wp @x0py164 @x1py191 @x2py142 @x3py106)) (and (HasType (@x4!21 @x3py106 @x2py142 @x1py191) @x1py191) (not (Valid (ApplyTT (ApplyTT @x2py142 (@x4!21 @x3py106 @x2py142 @x1py191)) @x3py106)))))) :pattern ((Valid (FStar.Pervasives.ex_close_wp @x0py164 @x1py191 @x2py142 @x3py106))) )) :named equation_FStar.Pervasives.ex_close_wp))
(assert (! (forall ((@x0py165 Term)(@x1py192 Term)(@x2py143 Term)(@x3py107 Term)(@x4py78 Term)) (! (and (or (not (Valid (FStar.Pervasives.ex_if_then_else @x0py165 @x1py192 @x2py143 @x3py107 @x4py78))) (and (or (Valid (ApplyTT @x2py143 @x4py78)) (not (Valid @x1py192))) (or (Valid @x1py192) (Valid (ApplyTT @x3py107 @x4py78))))) (or (Valid (FStar.Pervasives.ex_if_then_else @x0py165 @x1py192 @x2py143 @x3py107 @x4py78)) (and (or (not (Valid @x1py192)) (not (Valid (ApplyTT @x2py143 @x4py78)))) (or (Valid @x1py192) (not (Valid (ApplyTT @x3py107 @x4py78))))))) :pattern ((Valid (FStar.Pervasives.ex_if_then_else @x0py165 @x1py192 @x2py143 @x3py107 @x4py78))) )) :named equation_FStar.Pervasives.ex_if_then_else))
(assert (! (forall ((@x0py166 Term)(@x1py193 Term)(@x2py144 Term)) (! (and (or (not (Valid (FStar.Pervasives.ex_ite_wp @x0py166 @x1py193 @x2py144))) (forall ((@x3py108 Term)) (! (or (Valid (ApplyTT @x1py193 @x3py108)) (and (Valid (ApplyTT @x2py144 (@x4!22 @x3py108 @x2py144))) (not (Valid (ApplyTT @x3py108 (@x4!22 @x3py108 @x2py144))))) (not (HasType @x3py108 (FStar.Pervasives.ex_post @x0py166)))) :pattern ((ApplyTT @x1py193 @x3py108)) :pattern ((HasType @x3py108 (FStar.Pervasives.ex_post @x0py166))) :pattern ((@x4!22 @x3py108 @x2py144)) ))) (or (Valid (FStar.Pervasives.ex_ite_wp @x0py166 @x1py193 @x2py144)) (and (HasType (@x3!23 @x2py144 @x1py193 @x0py166) (FStar.Pervasives.ex_post @x0py166)) (forall ((@x4py79 Term)) (! (or (Valid (ApplyTT (@x3!23 @x2py144 @x1py193 @x0py166) @x4py79)) (not (Valid (ApplyTT @x2py144 @x4py79)))) :pattern ((ApplyTT (@x3!23 @x2py144 @x1py193 @x0py166) @x4py79)) )) (not (Valid (ApplyTT @x1py193 (@x3!23 @x2py144 @x1py193 @x0py166))))))) :pattern ((Valid (FStar.Pervasives.ex_ite_wp @x0py166 @x1py193 @x2py144))) )) :named equation_FStar.Pervasives.ex_ite_wp))
(assert (! (forall ((@x0py167 Term)(@x1py194 Term)) (! (and (or (not (Valid (FStar.Pervasives.ex_null_wp @x0py167 @x1py194))) (forall ((@x2py145 Term)) (! (or (Valid (ApplyTT @x1py194 @x2py145)) (not (HasType @x2py145 (FStar.Pervasives.result @x0py167)))) :pattern ((ApplyTT @x1py194 @x2py145)) :pattern ((HasType @x2py145 (FStar.Pervasives.result @x0py167))) ))) (or (Valid (FStar.Pervasives.ex_null_wp @x0py167 @x1py194)) (and (HasType (@x2!24 @x1py194 @x0py167) (FStar.Pervasives.result @x0py167)) (not (Valid (ApplyTT @x1py194 (@x2!24 @x1py194 @x0py167))))))) :pattern ((Valid (FStar.Pervasives.ex_null_wp @x0py167 @x1py194))) )) :named equation_FStar.Pervasives.ex_null_wp))
(assert (! (forall ((@x0py168 Term)) (! (= (FStar.Pervasives.ex_post @x0py168) (FStar.Pervasives.ex_post_ @x0py168 Prims.l_True)) :pattern ((FStar.Pervasives.ex_post @x0py168)) )) :named equation_FStar.Pervasives.ex_post))
(assert (! (forall ((@x0py169 Term)(@x1py195 Term)) (! (= (FStar.Pervasives.ex_post_ @x0py169 @x1py195) (Tm_arrow_4c49ce37319be38829a6032b2247a659 @x1py195 @x0py169)) :pattern ((FStar.Pervasives.ex_post_ @x0py169 @x1py195)) )) :named equation_FStar.Pervasives.ex_post_))
(assert (! (= FStar.Pervasives.ex_pre Tm_type) :named equation_FStar.Pervasives.ex_pre))
(assert (! (forall ((@x0py170 Term)(@x1py196 Term)(@x2py146 Term)) (! (= (FStar.Pervasives.ex_return @x0py170 @x1py196 @x2py146) (ApplyTT @x2py146 (FStar.Pervasives.V @x0py170 @x1py196))) :pattern ((FStar.Pervasives.ex_return @x0py170 @x1py196 @x2py146)) )) :named equation_FStar.Pervasives.ex_return))
(assert (! (forall ((@x0py171 Term)(@x1py197 Term)(@x2py147 Term)) (! (and (or (not (Valid (FStar.Pervasives.ex_stronger @x0py171 @x1py197 @x2py147))) (forall ((@x3py109 Term)) (! (or (Valid (ApplyTT @x2py147 @x3py109)) (not (HasType @x3py109 (FStar.Pervasives.ex_post @x0py171))) (not (Valid (ApplyTT @x1py197 @x3py109)))) :pattern ((ApplyTT @x2py147 @x3py109)) :pattern ((HasType @x3py109 (FStar.Pervasives.ex_post @x0py171))) :pattern ((ApplyTT @x1py197 @x3py109)) ))) (or (Valid (FStar.Pervasives.ex_stronger @x0py171 @x1py197 @x2py147)) (and (HasType (@x3!25 @x2py147 @x1py197 @x0py171) (FStar.Pervasives.ex_post @x0py171)) (Valid (ApplyTT @x1py197 (@x3!25 @x2py147 @x1py197 @x0py171))) (not (Valid (ApplyTT @x2py147 (@x3!25 @x2py147 @x1py197 @x0py171))))))) :pattern ((Valid (FStar.Pervasives.ex_stronger @x0py171 @x1py197 @x2py147))) )) :named equation_FStar.Pervasives.ex_stronger))
(assert (! (forall ((@x0py172 Term)(@x1py198 Term)) (! (= (FStar.Pervasives.ex_trivial @x0py172 @x1py198) (ApplyTT @x1py198 (FStar.Pervasives_Tm_abs_e607bfcb7d8c23b51c0ff04d27046641 Prims.l_True @x0py172))) :pattern ((FStar.Pervasives.ex_trivial @x0py172 @x1py198)) )) :named equation_FStar.Pervasives.ex_trivial))
(assert (! (forall ((@x0py173 Term)) (! (= (FStar.Pervasives.ex_wp @x0py173) (Tm_arrow_87ef52d5a8e7306848436909b0c69460 FStar.Pervasives.ex_pre @x0py173)) :pattern ((FStar.Pervasives.ex_wp @x0py173)) )) :named equation_FStar.Pervasives.ex_wp))
(assert (! (forall ((@x0py174 Term)(@x1py199 Term)) (! (= (FStar.Pervasives.id @x0py174 @x1py199) @x1py199) :pattern ((FStar.Pervasives.id @x0py174 @x1py199)) )) :named equation_FStar.Pervasives.id))
(assert (! (forall ((@x0py175 Term)(@x1py200 Term)) (! (= (FStar.Pervasives.ignore @x0py175 @x1py200) Tm_unit) :pattern ((FStar.Pervasives.ignore @x0py175 @x1py200)) )) :named equation_FStar.Pervasives.ignore))
(assert (! (forall ((@x0py176 Term)) (! (Valid (FStar.Pervasives.inversion @x0py176)) :pattern ((Valid (FStar.Pervasives.inversion @x0py176))) )) :named equation_FStar.Pervasives.inversion))
(assert (! (forall ((@x0py177 Term)(@x1py201 Term)(@x2py148 Term)) (! (= (FStar.Pervasives.lift_div_exn @x0py177 @x1py201 @x2py148) (ApplyTT @x1py201 (FStar.Pervasives_Tm_abs_08b6cbf5c721293cb051b1b5a6efcdf3 @x2py148 @x0py177))) :pattern ((FStar.Pervasives.lift_div_exn @x0py177 @x1py201 @x2py148)) )) :named equation_FStar.Pervasives.lift_div_exn))
(assert (! (forall ((@x0py178 Term)(@x1py202 Term)(@x2py149 Term)) (! (= (FStar.Pervasives.Native.fst @x0py178 @x1py202 @x2py149) (FStar.Pervasives.Native.__proj__Mktuple2__item___1 @x0py178 @x1py202 @x2py149)) :pattern ((FStar.Pervasives.Native.fst @x0py178 @x1py202 @x2py149)) )) :named equation_FStar.Pervasives.Native.fst))
(assert (! (forall ((@x0py179 Term)(@x1py203 Term)(@x2py150 Term)) (! (= (FStar.Pervasives.Native.snd @x0py179 @x1py203 @x2py150) (FStar.Pervasives.Native.__proj__Mktuple2__item___2 @x0py179 @x1py203 @x2py150)) :pattern ((FStar.Pervasives.Native.snd @x0py179 @x1py203 @x2py150)) )) :named equation_FStar.Pervasives.Native.snd))
(assert (! (forall ((@x0py180 Term)(@x1py204 Term)) (! (= (FStar.Pervasives.Native.with_type @x0py180 @x1py204) @x1py204) :pattern ((FStar.Pervasives.Native.with_type @x0py180 @x1py204)) )) :named equation_FStar.Pervasives.Native.with_type))
(assert (! (forall ((@x0py181 Term)(@x1py205 Term)(@x2py151 Term)(@x3py110 Term)(@x4py80 Term)(@x5py66 Term)) (! (and (or (not (Valid (FStar.Pervasives.st_assert_p @x0py181 @x1py205 @x2py151 @x3py110 @x4py80 @x5py66))) (and (Valid @x2py151) (Valid (ApplyTT (ApplyTT @x3py110 @x4py80) @x5py66)))) (or (Valid (FStar.Pervasives.st_assert_p @x0py181 @x1py205 @x2py151 @x3py110 @x4py80 @x5py66)) (not (Valid @x2py151)) (not (Valid (ApplyTT (ApplyTT @x3py110 @x4py80) @x5py66))))) :pattern ((Valid (FStar.Pervasives.st_assert_p @x0py181 @x1py205 @x2py151 @x3py110 @x4py80 @x5py66))) )) :named equation_FStar.Pervasives.st_assert_p))
(assert (! (forall ((@x0py182 Term)(@x1py206 Term)(@x2py152 Term)(@x3py111 Term)(@x4py81 Term)(@x5py67 Term)) (! (and (or (Valid (ApplyTT (ApplyTT @x3py111 @x4py81) @x5py67)) (not (Valid (FStar.Pervasives.st_assume_p @x0py182 @x1py206 @x2py152 @x3py111 @x4py81 @x5py67))) (not (Valid @x2py152))) (or (Valid (FStar.Pervasives.st_assume_p @x0py182 @x1py206 @x2py152 @x3py111 @x4py81 @x5py67)) (and (Valid @x2py152) (not (Valid (ApplyTT (ApplyTT @x3py111 @x4py81) @x5py67)))))) :pattern ((Valid (FStar.Pervasives.st_assume_p @x0py182 @x1py206 @x2py152 @x3py111 @x4py81 @x5py67))) )) :named equation_FStar.Pervasives.st_assume_p))
(assert (! (forall ((@x0py183 Term)(@x1py207 Term)(@x2py153 Term)(@x3py112 Term)(@x4py82 Term)(@x5py68 Term)(@x6py50 Term)(@x7py38 Term)) (! (= (FStar.Pervasives.st_bind_wp @x0py183 @x1py207 @x2py153 @x3py112 @x4py82 @x5py68 @x6py50 @x7py38) (ApplyTT (ApplyTT @x4py82 (FStar.Pervasives_Tm_abs_a31992f5c5dabbfdc6da62a16cd60a28 @x5py68 @x6py50 @x0py183 @x2py153)) @x7py38)) :pattern ((FStar.Pervasives.st_bind_wp @x0py183 @x1py207 @x2py153 @x3py112 @x4py82 @x5py68 @x6py50 @x7py38)) )) :named equation_FStar.Pervasives.st_bind_wp))
(assert (! (forall ((@x0py184 Term)(@x1py208 Term)(@x2py154 Term)(@x3py113 Term)(@x4py83 Term)(@x5py69 Term)) (! (and (or (not (Valid (FStar.Pervasives.st_close_wp @x0py184 @x1py208 @x2py154 @x3py113 @x4py83 @x5py69))) (forall ((@x6py51 Term)) (! (or (not (HasType @x6py51 @x2py154)) (Valid (ApplyTT (ApplyTT (ApplyTT @x3py113 @x6py51) @x4py83) @x5py69))) :pattern ((HasType @x6py51 @x2py154)) :pattern ((ApplyTT @x3py113 @x6py51)) ))) (or (Valid (FStar.Pervasives.st_close_wp @x0py184 @x1py208 @x2py154 @x3py113 @x4py83 @x5py69)) (and (HasType (@x6!26 @x5py69 @x4py83 @x3py113 @x2py154) @x2py154) (not (Valid (ApplyTT (ApplyTT (ApplyTT @x3py113 (@x6!26 @x5py69 @x4py83 @x3py113 @x2py154)) @x4py83) @x5py69)))))) :pattern ((Valid (FStar.Pervasives.st_close_wp @x0py184 @x1py208 @x2py154 @x3py113 @x4py83 @x5py69))) )) :named equation_FStar.Pervasives.st_close_wp))
(assert (! (forall ((@x0py185 Term)(@x1py209 Term)(@x2py155 Term)(@x3py114 Term)(@x4py84 Term)(@x5py70 Term)(@x6py52 Term)) (! (and (or (not (Valid (FStar.Pervasives.st_if_then_else @x0py185 @x1py209 @x2py155 @x3py114 @x4py84 @x5py70 @x6py52))) (and (or (not (Valid @x2py155)) (Valid (ApplyTT (ApplyTT @x3py114 @x5py70) @x6py52))) (or (Valid @x2py155) (Valid (ApplyTT (ApplyTT @x4py84 @x5py70) @x6py52))))) (or (Valid (FStar.Pervasives.st_if_then_else @x0py185 @x1py209 @x2py155 @x3py114 @x4py84 @x5py70 @x6py52)) (and (or (not (Valid @x2py155)) (not (Valid (ApplyTT (ApplyTT @x3py114 @x5py70) @x6py52)))) (or (Valid @x2py155) (not (Valid (ApplyTT (ApplyTT @x4py84 @x5py70) @x6py52))))))) :pattern ((Valid (FStar.Pervasives.st_if_then_else @x0py185 @x1py209 @x2py155 @x3py114 @x4py84 @x5py70 @x6py52))) )) :named equation_FStar.Pervasives.st_if_then_else))
(assert (! (forall ((@x0py186 Term)(@x1py210 Term)(@x2py156 Term)(@x3py115 Term)(@x4py85 Term)) (! (and (or (not (Valid (FStar.Pervasives.st_ite_wp @x0py186 @x1py210 @x2py156 @x3py115 @x4py85))) (forall ((@x5py71 Term)) (! (or (Valid (ApplyTT (ApplyTT @x2py156 @x5py71) @x4py85)) (not (HasType @x5py71 (FStar.Pervasives.st_post_h @x0py186 @x1py210))) (and (Valid (ApplyTT (ApplyTT @x3py115 (@x6!28 @x5py71 @x3py115)) (@x7!27 @x5py71 @x3py115))) (not (Valid (ApplyTT (ApplyTT @x5py71 (@x6!28 @x5py71 @x3py115)) (@x7!27 @x5py71 @x3py115)))))) :pattern ((ApplyTT @x2py156 @x5py71)) :pattern ((HasType @x5py71 (FStar.Pervasives.st_post_h @x0py186 @x1py210))) :pattern ((@x6!28 @x5py71 @x3py115)) :pattern ((@x7!27 @x5py71 @x3py115)) ))) (or (Valid (FStar.Pervasives.st_ite_wp @x0py186 @x1py210 @x2py156 @x3py115 @x4py85)) (and (HasType (@x5!29 @x4py85 @x3py115 @x2py156 @x1py210 @x0py186) (FStar.Pervasives.st_post_h @x0py186 @x1py210)) (forall ((@x6py53 Term)(@x7py39 Term)) (! (or (Valid (ApplyTT (ApplyTT (@x5!29 @x4py85 @x3py115 @x2py156 @x1py210 @x0py186) @x6py53) @x7py39)) (not (Valid (ApplyTT (ApplyTT @x3py115 @x6py53) @x7py39)))) :pattern ((ApplyTT (ApplyTT (@x5!29 @x4py85 @x3py115 @x2py156 @x1py210 @x0py186) @x6py53) @x7py39)) )) (not (Valid (ApplyTT (ApplyTT @x2py156 (@x5!29 @x4py85 @x3py115 @x2py156 @x1py210 @x0py186)) @x4py85)))))) :pattern ((Valid (FStar.Pervasives.st_ite_wp @x0py186 @x1py210 @x2py156 @x3py115 @x4py85))) )) :named equation_FStar.Pervasives.st_ite_wp))
(assert (! (forall ((@x0py187 Term)(@x1py211 Term)(@x2py157 Term)(@x3py116 Term)) (! (and (or (not (Valid (FStar.Pervasives.st_null_wp @x0py187 @x1py211 @x2py157 @x3py116))) (forall ((@x4py86 Term)(@x5py72 Term)) (! (or (Valid (ApplyTT (ApplyTT @x2py157 @x4py86) @x5py72)) (not (HasType @x4py86 @x1py211)) (not (HasType @x5py72 @x0py187))) :pattern ((ApplyTT (ApplyTT @x2py157 @x4py86) @x5py72)) ))) (or (Valid (FStar.Pervasives.st_null_wp @x0py187 @x1py211 @x2py157 @x3py116)) (and (HasType (@x4!31 @x2py157 @x1py211 @x0py187) @x1py211) (HasType (@x5!30 @x2py157 @x1py211 @x0py187) @x0py187) (not (Valid (ApplyTT (ApplyTT @x2py157 (@x4!31 @x2py157 @x1py211 @x0py187)) (@x5!30 @x2py157 @x1py211 @x0py187))))))) :pattern ((Valid (FStar.Pervasives.st_null_wp @x0py187 @x1py211 @x2py157 @x3py116))) )) :named equation_FStar.Pervasives.st_null_wp))
(assert (! (forall ((@x0py188 Term)(@x1py212 Term)) (! (= (FStar.Pervasives.st_post_h @x0py188 @x1py212) (FStar.Pervasives.st_post_h_ @x0py188 @x1py212 Prims.l_True)) :pattern ((FStar.Pervasives.st_post_h @x0py188 @x1py212)) )) :named equation_FStar.Pervasives.st_post_h))
(assert (! (forall ((@x0py189 Term)(@x1py213 Term)(@x2py158 Term)) (! (= (FStar.Pervasives.st_post_h_ @x0py189 @x1py213 @x2py158) (Tm_arrow_24dbc58008173456430189ae3ecf9a5f @x2py158 @x0py189 @x1py213)) :pattern ((FStar.Pervasives.st_post_h_ @x0py189 @x1py213 @x2py158)) )) :named equation_FStar.Pervasives.st_post_h_))
(assert (! (forall ((@x0py190 Term)) (! (= (FStar.Pervasives.st_pre_h @x0py190) (Tm_arrow_e06752ba152f81447b312efcdf8f0e23 @x0py190)) :pattern ((FStar.Pervasives.st_pre_h @x0py190)) )) :named equation_FStar.Pervasives.st_pre_h))
(assert (! (forall ((@x0py191 Term)(@x1py214 Term)(@x2py159 Term)(@x3py117 Term)) (! (= (FStar.Pervasives.st_return @x0py191 @x1py214 @x2py159 @x3py117) (ApplyTT @x3py117 @x2py159)) :pattern ((FStar.Pervasives.st_return @x0py191 @x1py214 @x2py159 @x3py117)) )) :named equation_FStar.Pervasives.st_return))
(assert (! (forall ((@x0py192 Term)(@x1py215 Term)(@x2py160 Term)(@x3py118 Term)) (! (and (or (not (Valid (FStar.Pervasives.st_stronger @x0py192 @x1py215 @x2py160 @x3py118))) (forall ((@x4py87 Term)(@x5py73 Term)) (! (or (Valid (ApplyTT (ApplyTT @x3py118 @x4py87) @x5py73)) (not (HasType @x4py87 (FStar.Pervasives.st_post_h @x0py192 @x1py215))) (not (HasType @x5py73 @x0py192)) (not (Valid (ApplyTT (ApplyTT @x2py160 @x4py87) @x5py73)))) :pattern ((ApplyTT (ApplyTT @x3py118 @x4py87) @x5py73)) :pattern ((ApplyTT (ApplyTT @x2py160 @x4py87) @x5py73)) ))) (or (Valid (FStar.Pervasives.st_stronger @x0py192 @x1py215 @x2py160 @x3py118)) (and (HasType (@x4!33 @x3py118 @x2py160 @x1py215 @x0py192) (FStar.Pervasives.st_post_h @x0py192 @x1py215)) (HasType (@x5!32 @x3py118 @x2py160 @x1py215 @x0py192) @x0py192) (Valid (ApplyTT (ApplyTT @x2py160 (@x4!33 @x3py118 @x2py160 @x1py215 @x0py192)) (@x5!32 @x3py118 @x2py160 @x1py215 @x0py192))) (not (Valid (ApplyTT (ApplyTT @x3py118 (@x4!33 @x3py118 @x2py160 @x1py215 @x0py192)) (@x5!32 @x3py118 @x2py160 @x1py215 @x0py192))))))) :pattern ((Valid (FStar.Pervasives.st_stronger @x0py192 @x1py215 @x2py160 @x3py118))) )) :named equation_FStar.Pervasives.st_stronger))
(assert (! (forall ((@x0py193 Term)(@x1py216 Term)(@x2py161 Term)) (! (and (or (not (Valid (FStar.Pervasives.st_trivial @x0py193 @x1py216 @x2py161))) (forall ((@x3py119 Term)) (! (or (not (HasType @x3py119 @x0py193)) (Valid (ApplyTT (ApplyTT @x2py161 (FStar.Pervasives_Tm_abs_fcd1fe475df8761bb0be4af6b43db341 Prims.l_True @x0py193 @x1py216)) @x3py119))) :pattern ((HasType @x3py119 @x0py193)) :pattern ((ApplyTT (ApplyTT @x2py161 (FStar.Pervasives_Tm_abs_fcd1fe475df8761bb0be4af6b43db341 Prims.l_True @x0py193 @x1py216)) @x3py119)) ))) (or (Valid (FStar.Pervasives.st_trivial @x0py193 @x1py216 @x2py161)) (and (HasType (@x3!34 @x2py161 @x1py216 @x0py193) @x0py193) (not (Valid (ApplyTT (ApplyTT @x2py161 (FStar.Pervasives_Tm_abs_fcd1fe475df8761bb0be4af6b43db341 Prims.l_True @x0py193 @x1py216)) (@x3!34 @x2py161 @x1py216 @x0py193))))))) :pattern ((Valid (FStar.Pervasives.st_trivial @x0py193 @x1py216 @x2py161))) )) :named equation_FStar.Pervasives.st_trivial))
(assert (! (forall ((@x0py194 Term)(@x1py217 Term)) (! (= (FStar.Pervasives.st_wp_h @x0py194 @x1py217) (Tm_arrow_1114487a196323b3ca7d5d0b38969957 @x1py217 @x0py194)) :pattern ((FStar.Pervasives.st_wp_h @x0py194 @x1py217)) )) :named equation_FStar.Pervasives.st_wp_h))
(assert (! (forall ((@x0py195 Term)) (! (= (Prims._assert @x0py195) Tm_unit) :pattern ((Prims._assert @x0py195)) )) :named equation_Prims._assert))
(assert (! (forall ((@x0py196 Term)) (! (= (Prims.abs @x0py196) (z3name!35 @x0py196)) :pattern ((Prims.abs @x0py196)) )) :named equation_Prims.abs_0))
(assert (! (forall ((x!1py0 Term)) (! (or (= (z3name!35 x!1py0) (Prims.op_Minus x!1py0)) (= (Prims.op_GreaterThanOrEqual x!1py0 (BoxInt 0)) (BoxBool true))) :pattern ((z3name!35 x!1py0)) )) :named equation_Prims.abs_1))
(assert (! (forall ((x!1py1 Term)) (! (or (not (= (Prims.op_GreaterThanOrEqual x!1py1 (BoxInt 0)) (BoxBool true))) (= (z3name!35 x!1py1) x!1py1)) :pattern ((z3name!35 x!1py1)) )) :named equation_Prims.abs_2))
(assert (! (forall ((@x0py197 Term)(@x1py218 Term)(@x2py162 Term)) (! (= (Prims.as_ensures @x0py197 @x1py218 @x2py162) (Prims.l_not (ApplyTT @x1py218 (Prims_Tm_abs_cc0ce251c10a6cba9664080c8e806896 @x2py162 @x0py197)))) :pattern ((Prims.as_ensures @x0py197 @x1py218 @x2py162)) )) :named equation_Prims.as_ensures))
(assert (! (forall ((@x0py198 Term)(@x1py219 Term)) (! (= (Prims.as_requires @x0py198 @x1py219) (ApplyTT @x1py219 (Prims_Tm_abs_65a2e960d61ec783b59c1bd1dd30ed10 Prims.l_True @x0py198))) :pattern ((Prims.as_requires @x0py198 @x1py219)) )) :named equation_Prims.as_requires))
(assert (! (forall ((@x0py199 Term)) (! (= (Prims.assert_spinoff @x0py199) Tm_unit) :pattern ((Prims.assert_spinoff @x0py199)) )) :named equation_Prims.assert_spinoff))
(assert (! (forall ((@x0py200 Term)) (! (= (Prims.auto_squash @x0py200) (Prims.squash @x0py200)) :pattern ((Prims.auto_squash @x0py200)) )) :named equation_Prims.auto_squash))
(assert (! (forall ((@x0py201 Term)) (! (= (Prims.cut @x0py201) Tm_unit) :pattern ((Prims.cut @x0py201)) )) :named equation_Prims.cut))
(assert (! (forall ((@x0py202 Term)(@x1py220 Term)(@x2py163 Term)) (! (= (Prims.eq2 @x0py202 @x1py220 @x2py163) (Prims.squash (Prims.equals @x0py202 @x1py220 @x2py163))) :pattern ((Prims.eq2 @x0py202 @x1py220 @x2py163)) )) :named equation_Prims.eq2))
(assert (! (forall ((@x0py203 Term)(@x1py221 Term)(@x2py164 Term)(@x3py120 Term)) (! (= (Prims.eq3 @x0py203 @x1py221 @x2py164 @x3py120) (Prims.squash (Prims.h_equals @x0py203 @x2py164 @x1py221 @x3py120))) :pattern ((Prims.eq3 @x0py203 @x1py221 @x2py164 @x3py120)) )) :named equation_Prims.eq3))
(assert (! (= Prims.eqtype Prims_Tm_refine_414d0a9f578ab0048252f8c8f552b99f) :named equation_Prims.eqtype))
(assert (! (forall ((@x0py204 Term)(@x1py222 Term)) (! (= (Prims.l_and @x0py204 @x1py222) (Prims.squash (Prims.c_and @x0py204 @x1py222))) :pattern ((Prims.l_and @x0py204 @x1py222)) )) :named equation_Prims.l_and))
(assert (! (forall ((@x0py205 Term)(@x1py223 Term)) (! (= (Prims.l_Exists @x0py205 @x1py223) (Prims.squash (Prims.dtuple2 @x0py205 @x1py223))) :pattern ((Prims.l_Exists @x0py205 @x1py223)) )) :named equation_Prims.l_Exists))
(assert (! (= Prims.l_False (Prims.squash Prims.c_False)) :named equation_Prims.l_False))
(assert (! (forall ((@x0py206 Term)(@x1py224 Term)) (! (= (Prims.l_Forall @x0py206 @x1py224) (Prims.squash (Tm_arrow_a26b6f0ab7c6505137c6de4ce0011041 @x1py224 @x0py206))) :pattern ((Prims.l_Forall @x0py206 @x1py224)) )) :named equation_Prims.l_Forall))
(assert (! (forall ((@x0py207 Term)(@x1py225 Term)) (! (= (Prims.l_iff @x0py207 @x1py225) (Prims.l_and (Prims.l_imp @x0py207 @x1py225) (Prims.l_imp @x1py225 @x0py207))) :pattern ((Prims.l_iff @x0py207 @x1py225)) )) :named equation_Prims.l_iff))
(assert (! (forall ((@x0py208 Term)(@x1py226 Term)) (! (= (Prims.l_imp @x0py208 @x1py226) (Prims.squash (Tm_arrow_9cb3c953faf527c316d427b2ce8bd81b @x1py226 @x0py208))) :pattern ((Prims.l_imp @x0py208 @x1py226)) )) :named equation_Prims.l_imp))
(assert (! (forall ((@x0py209 Term)) (! (= (Prims.l_not @x0py209) (Prims.l_imp @x0py209 Prims.l_False)) :pattern ((Prims.l_not @x0py209)) )) :named equation_Prims.l_not))
(assert (! (forall ((@x0py210 Term)(@x1py227 Term)) (! (= (Prims.l_or @x0py210 @x1py227) (Prims.squash (Prims.c_or @x0py210 @x1py227))) :pattern ((Prims.l_or @x0py210 @x1py227)) )) :named equation_Prims.l_or))
(assert (! (= Prims.l_True (Prims.squash Prims.c_True)) :named equation_Prims.l_True))
(assert (! (= Prims.logical Tm_type) :named equation_Prims.logical))
(assert (! (forall ((@x0py211 Term)(@x1py228 Term)) (! (= (Prims.min @x0py211 @x1py228) (z3name!36 @x1py228 @x0py211)) :pattern ((Prims.min @x0py211 @x1py228)) )) :named equation_Prims.min_0))
(assert (! (forall ((x!1py2 Term)(x!2py0 Term)) (! (or (= (Prims.op_LessThanOrEqual x!1py2 x!2py0) (BoxBool true)) (= (z3name!36 x!2py0 x!1py2) x!2py0)) :pattern ((z3name!36 x!2py0 x!1py2)) )) :named equation_Prims.min_1))
(assert (! (forall ((x!1py3 Term)(x!2py1 Term)) (! (or (not (= (Prims.op_LessThanOrEqual x!1py3 x!2py1) (BoxBool true))) (= (z3name!36 x!2py1 x!1py3) x!1py3)) :pattern ((z3name!36 x!2py1 x!1py3)) )) :named equation_Prims.min_2))
(assert (! (= Prims.nat (Prims_Tm_refine_ba523126f67e00e7cd55f0b92f16681d Prims.int)) :named equation_Prims.nat))
(assert (! (= Prims.nonzero (Prims_Tm_refine_7075614a0e8c0bdbec6de0d0ef7f1280 Prims.int)) :named equation_Prims.nonzero))
(assert (! (= Prims.pos (Prims_Tm_refine_f048236b5f8051f83b495ea5eaa6127b Prims.int)) :named equation_Prims.pos))
(assert (! (= Prims.prop Prims_Tm_refine_8c9ebed3095a60bf2b256a37e40b13f4) :named equation_Prims.prop))
(assert (! (forall ((@x0py212 Term)) (! (= (Prims.pure_post @x0py212) (Prims.pure_post_ @x0py212 Prims.l_True)) :pattern ((Prims.pure_post @x0py212)) )) :named equation_Prims.pure_post))
(assert (! (forall ((@x0py213 Term)(@x1py229 Term)) (! (= (Prims.pure_post_ @x0py213 @x1py229) (Tm_arrow_e9338c9e176627b4318e37ce7ca5332a @x1py229 @x0py213)) :pattern ((Prims.pure_post_ @x0py213 @x1py229)) )) :named equation_Prims.pure_post_))
(assert (! (= Prims.pure_pre Tm_type) :named equation_Prims.pure_pre))
(assert (! (forall ((@x0py214 Term)) (! (= (Prims.pure_wp @x0py214) (Tm_arrow_efa04d9e9741fb25eada2b1d426efe29 Prims.pure_pre @x0py214)) :pattern ((Prims.pure_wp @x0py214)) )) :named equation_Prims.pure_wp))
(assert (! (forall ((@x0py215 Term)(@x1py230 Term)) (! (= (Prims.returnM @x0py215 @x1py230) @x1py230) :pattern ((Prims.returnM @x0py215 @x1py230)) )) :named equation_Prims.returnM))
(assert (! (forall ((@x0py216 Term)) (! (= (Prims.squash @x0py216) (Prims_Tm_refine_8d65e998a07dd53ec478e27017d9dba5 Prims.unit @x0py216)) :pattern ((Prims.squash @x0py216)) )) :named equation_Prims.squash))
(assert (! (forall ((@u0py77 Fuel)(@x1py231 Term)) (! (= (Prims.pow2.fuel_instrumented (SFuel @u0py77) @x1py231) (z3name!37 @x1py231 @u0py77)) :pattern ((Prims.pow2.fuel_instrumented (SFuel @u0py77) @x1py231)) )) :named equation_with_fuel_Prims.pow2.fuel_instrumented_0))
(assert (! (forall ((x!1py4 Fuel)(x!2py2 Term)) (! (or (= x!2py2 (BoxInt 0)) (= (z3name!37 x!2py2 x!1py4) (Prims.op_Multiply (BoxInt 2) (Prims.pow2.fuel_instrumented x!1py4 (Prims.op_Subtraction x!2py2 (BoxInt 1)))))) :pattern ((z3name!37 x!2py2 x!1py4)) )) :named equation_with_fuel_Prims.pow2.fuel_instrumented_1))
(assert (! (forall ((x!1py5 Fuel)(x!2py3 Term)) (! (or (not (= x!2py3 (BoxInt 0))) (= (z3name!37 x!2py3 x!1py5) (BoxInt 1))) :pattern ((z3name!37 x!2py3 x!1py5)) )) :named equation_with_fuel_Prims.pow2.fuel_instrumented_2))
(assert (! (not (Valid Prims.l_False)) :named false_interp))
(assert (! (forall ((@x0py217 Term)) (! (and (or (not (HasTypeZ @x0py217 Tm_arrow_01af5ab61334f3cf5e140ba023176d9a)) (forall ((@x1py232 Term)(@x2py165 Term)) (! (or (HasType (ApplyTT (ApplyTT @x0py217 @x1py232) @x2py165) (False.calc_proof @x1py232 (Prims.Nil (False.relation @x1py232)) @x2py165 @x2py165)) (not (HasType @x1py232 Tm_type)) (not (HasType @x2py165 @x1py232))) :pattern ((ApplyTT (ApplyTT @x0py217 @x1py232) @x2py165)) ))) (or (HasTypeZ @x0py217 Tm_arrow_01af5ab61334f3cf5e140ba023176d9a) (and (HasType (@x1!39 @x0py217) Tm_type) (HasType (@x2!38 @x0py217) (@x1!39 @x0py217)) (not (HasType (ApplyTT (ApplyTT @x0py217 (@x1!39 @x0py217)) (@x2!38 @x0py217)) (False.calc_proof (@x1!39 @x0py217) (Prims.Nil (False.relation (@x1!39 @x0py217))) (@x2!38 @x0py217) (@x2!38 @x0py217))))))) :pattern ((HasTypeZ @x0py217 Tm_arrow_01af5ab61334f3cf5e140ba023176d9a)) )) :named False_interpretation_Tm_arrow_01af5ab61334f3cf5e140ba023176d9a))
(assert (! (forall ((@x0py218 Term)(@x1py233 Term)) (! (and (or (not (HasTypeZ @x0py218 (Tm_arrow_2d7f2b032d9f59f51dc6a0b9dd727adc @x1py233))) (forall ((@x2py166 Term)(@x3py121 Term)(@x4py88 Term)(@x5py74 Term)(@x6py54 Term)(@x7py40 Term)(@x8py25 Term)(@x9py21 Term)) (! (or (HasType (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT @x0py218 @x2py166) @x3py121) @x4py88) @x5py74) @x6py54) @x7py40) @x8py25) @x9py21) (False.calc_proof @x2py166 (Prims.Cons (False.relation @x2py166) @x6py54 @x3py121) @x4py88 @x7py40)) (not (HasType @x2py166 Tm_type)) (not (HasType @x3py121 (Prims.list (False.relation @x2py166)))) (not (HasType @x4py88 @x2py166)) (not (HasType @x5py74 @x2py166)) (not (HasType @x6py54 (False.relation @x2py166))) (not (HasType @x7py40 @x2py166)) (not (HasType @x8py25 (Tm_arrow_b876badf58234251d7cd1ca0d2659f12 @x5py74 @x4py88 @x3py121 @x2py166 @x1py233))) (not (HasType @x9py21 (Tm_arrow_6cdb49601bd9255655221b5bfb8efb6f @x7py40 @x5py74 @x6py54 @x1py233)))) :pattern ((ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT @x0py218 @x2py166) @x3py121) @x4py88) @x5py74) @x6py54) @x7py40) @x8py25) @x9py21)) ))) (or (HasTypeZ @x0py218 (Tm_arrow_2d7f2b032d9f59f51dc6a0b9dd727adc @x1py233)) (and (HasType (@x2!47 @x1py233 @x0py218) Tm_type) (HasType (@x3!46 @x1py233 @x0py218) (Prims.list (False.relation (@x2!47 @x1py233 @x0py218)))) (HasType (@x4!45 @x1py233 @x0py218) (@x2!47 @x1py233 @x0py218)) (HasType (@x5!44 @x1py233 @x0py218) (@x2!47 @x1py233 @x0py218)) (HasType (@x6!43 @x1py233 @x0py218) (False.relation (@x2!47 @x1py233 @x0py218))) (HasType (@x7!42 @x1py233 @x0py218) (@x2!47 @x1py233 @x0py218)) (HasType (@x8!41 @x1py233 @x0py218) (Tm_arrow_b876badf58234251d7cd1ca0d2659f12 (@x5!44 @x1py233 @x0py218) (@x4!45 @x1py233 @x0py218) (@x3!46 @x1py233 @x0py218) (@x2!47 @x1py233 @x0py218) @x1py233)) (HasType (@x9!40 @x1py233 @x0py218) (Tm_arrow_6cdb49601bd9255655221b5bfb8efb6f (@x7!42 @x1py233 @x0py218) (@x5!44 @x1py233 @x0py218) (@x6!43 @x1py233 @x0py218) @x1py233)) (not (HasType (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT @x0py218 (@x2!47 @x1py233 @x0py218)) (@x3!46 @x1py233 @x0py218)) (@x4!45 @x1py233 @x0py218)) (@x5!44 @x1py233 @x0py218)) (@x6!43 @x1py233 @x0py218)) (@x7!42 @x1py233 @x0py218)) (@x8!41 @x1py233 @x0py218)) (@x9!40 @x1py233 @x0py218)) (False.calc_proof (@x2!47 @x1py233 @x0py218) (Prims.Cons (False.relation (@x2!47 @x1py233 @x0py218)) (@x6!43 @x1py233 @x0py218) (@x3!46 @x1py233 @x0py218)) (@x4!45 @x1py233 @x0py218) (@x7!42 @x1py233 @x0py218))))))) :pattern ((HasTypeZ @x0py218 (Tm_arrow_2d7f2b032d9f59f51dc6a0b9dd727adc @x1py233))) )) :named False_interpretation_Tm_arrow_2d7f2b032d9f59f51dc6a0b9dd727adc))
(assert (! (forall ((@x0py219 Term)(@x1py234 Term)(@x2py167 Term)) (! (and (or (not (HasTypeZ @x0py219 (Tm_arrow_6c8a344d1f126f59d9c6304a0bfbc84a @x1py234 @x2py167))) (forall ((@x3py122 Term)) (! (or (not (HasType @x3py122 @x2py167)) (HasType (ApplyTT @x0py219 @x3py122) (False.calc_proof @x1py234 (Prims.Nil (False.relation @x1py234)) (BoxInt 10) (BoxInt 10)))) :pattern ((ApplyTT @x0py219 @x3py122)) ))) (or (HasTypeZ @x0py219 (Tm_arrow_6c8a344d1f126f59d9c6304a0bfbc84a @x1py234 @x2py167)) (and (HasType (@x3!48 @x2py167 @x1py234 @x0py219) @x2py167) (not (HasType (ApplyTT @x0py219 (@x3!48 @x2py167 @x1py234 @x0py219)) (False.calc_proof @x1py234 (Prims.Nil (False.relation @x1py234)) (BoxInt 10) (BoxInt 10))))))) :pattern ((HasTypeZ @x0py219 (Tm_arrow_6c8a344d1f126f59d9c6304a0bfbc84a @x1py234 @x2py167))) )) :named False_interpretation_Tm_arrow_6c8a344d1f126f59d9c6304a0bfbc84a))
(assert (! (forall ((@x0py220 Term)(@x1py235 Term)(@x2py168 Term)(@x3py123 Term)(@x4py89 Term)) (! (and (or (not (HasTypeZ @x0py220 (Tm_arrow_6cdb49601bd9255655221b5bfb8efb6f @x1py235 @x2py168 @x3py123 @x4py89))) (forall ((@x5py75 Term)) (! (or (not (HasType @x5py75 @x4py89)) (HasType (ApplyTT @x0py220 @x5py75) (Prims.squash (ApplyTT (ApplyTT @x3py123 @x2py168) @x1py235)))) :pattern ((ApplyTT @x0py220 @x5py75)) ))) (or (HasTypeZ @x0py220 (Tm_arrow_6cdb49601bd9255655221b5bfb8efb6f @x1py235 @x2py168 @x3py123 @x4py89)) (and (HasType (@x5!49 @x4py89 @x3py123 @x2py168 @x1py235 @x0py220) @x4py89) (not (HasType (ApplyTT @x0py220 (@x5!49 @x4py89 @x3py123 @x2py168 @x1py235 @x0py220)) (Prims.squash (ApplyTT (ApplyTT @x3py123 @x2py168) @x1py235))))))) :pattern ((HasTypeZ @x0py220 (Tm_arrow_6cdb49601bd9255655221b5bfb8efb6f @x1py235 @x2py168 @x3py123 @x4py89))) )) :named False_interpretation_Tm_arrow_6cdb49601bd9255655221b5bfb8efb6f))
(assert (! (forall ((@x0py221 Term)(@x1py236 Term)) (! (and (or (not (HasTypeZ @x0py221 (Tm_arrow_9eaf2ac78d771b56d59474a450ebd43c @x1py236))) (forall ((@x2py169 Term)(@x3py124 Term)(@x4py90 Term)(@x5py76 Term)(@x6py55 Term)) (! (or (not (HasType @x2py169 Tm_type)) (not (HasType @x3py124 (Prims.list (False.relation @x2py169)))) (not (HasType @x5py76 @x2py169)) (HasType (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT @x0py221 @x2py169) @x3py124) @x4py90) @x5py76) @x6py55) @x1py236) (not (HasType @x6py55 (False.calc_proof @x2py169 @x3py124 @x4py90 @x5py76))) (not (HasType @x4py90 @x2py169))) :pattern ((ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT @x0py221 @x2py169) @x3py124) @x4py90) @x5py76) @x6py55)) ))) (or (HasTypeZ @x0py221 (Tm_arrow_9eaf2ac78d771b56d59474a450ebd43c @x1py236)) (and (HasType (@x2!54 @x1py236 @x0py221) Tm_type) (HasType (@x3!53 @x1py236 @x0py221) (Prims.list (False.relation (@x2!54 @x1py236 @x0py221)))) (HasType (@x4!52 @x1py236 @x0py221) (@x2!54 @x1py236 @x0py221)) (HasType (@x5!51 @x1py236 @x0py221) (@x2!54 @x1py236 @x0py221)) (HasType (@x6!50 @x1py236 @x0py221) (False.calc_proof (@x2!54 @x1py236 @x0py221) (@x3!53 @x1py236 @x0py221) (@x4!52 @x1py236 @x0py221) (@x5!51 @x1py236 @x0py221))) (not (HasType (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT @x0py221 (@x2!54 @x1py236 @x0py221)) (@x3!53 @x1py236 @x0py221)) (@x4!52 @x1py236 @x0py221)) (@x5!51 @x1py236 @x0py221)) (@x6!50 @x1py236 @x0py221)) @x1py236))))) :pattern ((HasTypeZ @x0py221 (Tm_arrow_9eaf2ac78d771b56d59474a450ebd43c @x1py236))) )) :named False_interpretation_Tm_arrow_9eaf2ac78d771b56d59474a450ebd43c))
(assert (! (forall ((@x0py222 Term)) (! (and (or (not (HasTypeZ @x0py222 Tm_arrow_14bcecce05a6e15aa540694546ee26ed)) (forall ((@x1py237 Term)(@x2py170 Term)(@x3py125 Term)(@x4py91 Term)(@x5py77 Term)) (! (or (HasType (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT @x0py222 @x1py237) @x2py170) @x3py125) @x4py91) @x5py77) @x1py237) (not (HasType @x2py170 (Prims.list (False.relation @x1py237)))) (not (HasType @x1py237 Tm_type)) (not (HasType @x3py125 @x1py237)) (not (HasType @x4py91 @x1py237)) (not (HasType @x5py77 (False_Tm_refine_253153fea998a3a502df455711574c4d @x1py237 @x2py170 @x3py125 @x4py91)))) :pattern ((ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT @x0py222 @x1py237) @x2py170) @x3py125) @x4py91) @x5py77)) ))) (or (HasTypeZ @x0py222 Tm_arrow_14bcecce05a6e15aa540694546ee26ed) (and (HasType (@x1!59 @x0py222) Tm_type) (HasType (@x2!58 @x0py222) (Prims.list (False.relation (@x1!59 @x0py222)))) (HasType (@x3!57 @x0py222) (@x1!59 @x0py222)) (HasType (@x4!56 @x0py222) (@x1!59 @x0py222)) (HasType (@x5!55 @x0py222) (False_Tm_refine_253153fea998a3a502df455711574c4d (@x1!59 @x0py222) (@x2!58 @x0py222) (@x3!57 @x0py222) (@x4!56 @x0py222))) (not (HasType (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT @x0py222 (@x1!59 @x0py222)) (@x2!58 @x0py222)) (@x3!57 @x0py222)) (@x4!56 @x0py222)) (@x5!55 @x0py222)) (@x1!59 @x0py222)))))) :pattern ((HasTypeZ @x0py222 Tm_arrow_14bcecce05a6e15aa540694546ee26ed)) )) :named False_interpretation_Tm_arrow_14bcecce05a6e15aa540694546ee26ed))
(assert (! (forall ((@x0py223 Term)(@x1py238 Term)) (! (and (or (not (HasTypeZ @x0py223 (Tm_arrow_76a60dab4e3b3182a3b4dae5a57cfb2d @x1py238))) (forall ((@x2py171 Term)(@x3py126 Term)) (! (or (not (HasType @x3py126 @x1py238)) (HasType (ApplyTT (ApplyTT @x0py223 @x2py171) @x3py126) Tm_type) (not (HasType @x2py171 @x1py238))) :pattern ((ApplyTT (ApplyTT @x0py223 @x2py171) @x3py126)) ))) (or (HasTypeZ @x0py223 (Tm_arrow_76a60dab4e3b3182a3b4dae5a57cfb2d @x1py238)) (and (HasType (@x2!61 @x1py238 @x0py223) @x1py238) (HasType (@x3!60 @x1py238 @x0py223) @x1py238) (not (HasType (ApplyTT (ApplyTT @x0py223 (@x2!61 @x1py238 @x0py223)) (@x3!60 @x1py238 @x0py223)) Tm_type))))) :pattern ((HasTypeZ @x0py223 (Tm_arrow_76a60dab4e3b3182a3b4dae5a57cfb2d @x1py238))) )) :named False_interpretation_Tm_arrow_76a60dab4e3b3182a3b4dae5a57cfb2d))
(assert (! (forall ((@x0py224 Term)(@x1py239 Term)(@x2py172 Term)(@x3py127 Term)) (! (and (or (not (HasTypeZ @x0py224 (Tm_arrow_637c9767c7a2c264e0a7f2bd68427abf @x1py239 @x2py172 @x3py127))) (forall ((@x4py92 Term)) (! (or (not (HasType @x4py92 @x3py127)) (HasType (ApplyTT @x0py224 @x4py92) (False.calc_proof @x2py172 (Prims.Cons (False.relation @x2py172) @x1py239 (Prims.Nil (False.relation @x2py172))) (BoxInt 10) (BoxInt 9)))) :pattern ((ApplyTT @x0py224 @x4py92)) ))) (or (HasTypeZ @x0py224 (Tm_arrow_637c9767c7a2c264e0a7f2bd68427abf @x1py239 @x2py172 @x3py127)) (and (HasType (@x4!62 @x3py127 @x2py172 @x1py239 @x0py224) @x3py127) (not (HasType (ApplyTT @x0py224 (@x4!62 @x3py127 @x2py172 @x1py239 @x0py224)) (False.calc_proof @x2py172 (Prims.Cons (False.relation @x2py172) @x1py239 (Prims.Nil (False.relation @x2py172))) (BoxInt 10) (BoxInt 9))))))) :pattern ((HasTypeZ @x0py224 (Tm_arrow_637c9767c7a2c264e0a7f2bd68427abf @x1py239 @x2py172 @x3py127))) )) :named False_interpretation_Tm_arrow_637c9767c7a2c264e0a7f2bd68427abf))
(assert (! (forall ((@x0py225 Term)) (! (and (or (not (HasTypeZ @x0py225 Tm_arrow_3892eda38ed5a9b6d9aa7ad2635088fc)) (forall ((@x1py240 Term)(@x2py173 Term)(@x3py128 Term)(@x4py93 Term)(@x5py78 Term)) (! (or (HasType (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT @x0py225 @x1py240) @x2py173) @x3py128) @x4py93) @x5py78) (False.calc_proof @x1py240 (False.__proj__CalcStep__item__rs @x1py240 @x2py173 @x3py128 @x4py93 @x5py78) (False.__proj__CalcStep__item__x @x1py240 @x2py173 @x3py128 @x4py93 @x5py78) (False.__proj__CalcStep__item__y @x1py240 @x2py173 @x3py128 @x4py93 @x5py78))) (not (HasType @x1py240 Tm_type)) (not (HasType @x2py173 (Prims.list (False.relation @x1py240)))) (not (HasType @x3py128 @x1py240)) (not (HasType @x4py93 @x1py240)) (not (HasType @x5py78 (False_Tm_refine_c7c1219b2b697290706c3cb902d0c0fb @x1py240 @x2py173 @x3py128 @x4py93)))) :pattern ((ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT @x0py225 @x1py240) @x2py173) @x3py128) @x4py93) @x5py78)) ))) (or (HasTypeZ @x0py225 Tm_arrow_3892eda38ed5a9b6d9aa7ad2635088fc) (and (HasType (@x1!67 @x0py225) Tm_type) (HasType (@x2!66 @x0py225) (Prims.list (False.relation (@x1!67 @x0py225)))) (HasType (@x3!65 @x0py225) (@x1!67 @x0py225)) (HasType (@x4!64 @x0py225) (@x1!67 @x0py225)) (HasType (@x5!63 @x0py225) (False_Tm_refine_c7c1219b2b697290706c3cb902d0c0fb (@x1!67 @x0py225) (@x2!66 @x0py225) (@x3!65 @x0py225) (@x4!64 @x0py225))) (not (HasType (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT @x0py225 (@x1!67 @x0py225)) (@x2!66 @x0py225)) (@x3!65 @x0py225)) (@x4!64 @x0py225)) (@x5!63 @x0py225)) (False.calc_proof (@x1!67 @x0py225) (False.__proj__CalcStep__item__rs (@x1!67 @x0py225) (@x2!66 @x0py225) (@x3!65 @x0py225) (@x4!64 @x0py225) (@x5!63 @x0py225)) (False.__proj__CalcStep__item__x (@x1!67 @x0py225) (@x2!66 @x0py225) (@x3!65 @x0py225) (@x4!64 @x0py225) (@x5!63 @x0py225)) (False.__proj__CalcStep__item__y (@x1!67 @x0py225) (@x2!66 @x0py225) (@x3!65 @x0py225) (@x4!64 @x0py225) (@x5!63 @x0py225)))))))) :pattern ((HasTypeZ @x0py225 Tm_arrow_3892eda38ed5a9b6d9aa7ad2635088fc)) )) :named False_interpretation_Tm_arrow_3892eda38ed5a9b6d9aa7ad2635088fc))
(assert (! (forall ((@x0py226 Term)) (! (and (or (not (HasTypeZ @x0py226 Tm_arrow_88445f768cf4024bacb21baa68bdff2b)) (forall ((@x1py241 Term)(@x2py174 Term)(@x3py129 Term)(@x4py94 Term)(@x5py79 Term)) (! (or (HasType (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT @x0py226 @x1py241) @x2py174) @x3py129) @x4py94) @x5py79) (Prims.list (False.relation @x1py241))) (not (HasType @x3py129 @x1py241)) (not (HasType @x1py241 Tm_type)) (not (HasType @x2py174 (Prims.list (False.relation @x1py241)))) (not (HasType @x4py94 @x1py241)) (not (HasType @x5py79 (False_Tm_refine_c7c1219b2b697290706c3cb902d0c0fb @x1py241 @x2py174 @x3py129 @x4py94)))) :pattern ((ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT @x0py226 @x1py241) @x2py174) @x3py129) @x4py94) @x5py79)) ))) (or (HasTypeZ @x0py226 Tm_arrow_88445f768cf4024bacb21baa68bdff2b) (and (HasType (@x1!72 @x0py226) Tm_type) (HasType (@x2!71 @x0py226) (Prims.list (False.relation (@x1!72 @x0py226)))) (HasType (@x3!70 @x0py226) (@x1!72 @x0py226)) (HasType (@x4!69 @x0py226) (@x1!72 @x0py226)) (HasType (@x5!68 @x0py226) (False_Tm_refine_c7c1219b2b697290706c3cb902d0c0fb (@x1!72 @x0py226) (@x2!71 @x0py226) (@x3!70 @x0py226) (@x4!69 @x0py226))) (not (HasType (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT @x0py226 (@x1!72 @x0py226)) (@x2!71 @x0py226)) (@x3!70 @x0py226)) (@x4!69 @x0py226)) (@x5!68 @x0py226)) (Prims.list (False.relation (@x1!72 @x0py226)))))))) :pattern ((HasTypeZ @x0py226 Tm_arrow_88445f768cf4024bacb21baa68bdff2b)) )) :named False_interpretation_Tm_arrow_88445f768cf4024bacb21baa68bdff2b))
(assert (! (forall ((@x0py227 Term)(@x1py242 Term)(@x2py175 Term)) (! (and (or (not (HasTypeZ @x0py227 (Tm_arrow_14950698eb45c81a0e8055b3844caf01 @x1py242 @x2py175))) (forall ((@x3py130 Term)) (! (or (not (HasType @x3py130 @x2py175)) (HasType (ApplyTT @x0py227 @x3py130) (Prims.squash (ApplyTT (ApplyTT @x1py242 (BoxInt 9)) (BoxInt 11))))) :pattern ((ApplyTT @x0py227 @x3py130)) ))) (or (HasTypeZ @x0py227 (Tm_arrow_14950698eb45c81a0e8055b3844caf01 @x1py242 @x2py175)) (and (HasType (@x3!73 @x2py175 @x1py242 @x0py227) @x2py175) (not (HasType (ApplyTT @x0py227 (@x3!73 @x2py175 @x1py242 @x0py227)) (Prims.squash (ApplyTT (ApplyTT @x1py242 (BoxInt 9)) (BoxInt 11)))))))) :pattern ((HasTypeZ @x0py227 (Tm_arrow_14950698eb45c81a0e8055b3844caf01 @x1py242 @x2py175))) )) :named False_interpretation_Tm_arrow_14950698eb45c81a0e8055b3844caf01))
(assert (! (forall ((@x0py228 Term)) (! (and (or (not (HasTypeZ @x0py228 Tm_arrow_b0a698cf4739f4ff0d04a8f64ce9f32f)) (forall ((@x1py243 Term)(@x2py176 Term)(@x3py131 Term)(@x4py95 Term)(@x5py80 Term)(@x6py56 Term)(@x7py41 Term)(@x8py26 Term)) (! (or (not (HasType @x8py26 (Prims.squash (ApplyTT (ApplyTT @x3py131 @x5py80) @x6py56)))) (not (HasType @x4py95 @x1py243)) (not (HasType @x3py131 (False.relation @x1py243))) (not (HasType @x5py80 @x1py243)) (HasType (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT @x0py228 @x1py243) @x2py176) @x3py131) @x4py95) @x5py80) @x6py56) @x7py41) @x8py26) (False.calc_proof @x1py243 (Prims.Cons (False.relation @x1py243) @x3py131 @x2py176) @x4py95 @x6py56)) (not (HasType @x7py41 (False.calc_proof @x1py243 @x2py176 @x4py95 @x5py80))) (not (HasType @x6py56 @x1py243)) (not (HasType @x1py243 Tm_type)) (not (HasType @x2py176 (Prims.list (False.relation @x1py243))))) :pattern ((ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT @x0py228 @x1py243) @x2py176) @x3py131) @x4py95) @x5py80) @x6py56) @x7py41) @x8py26)) ))) (or (HasTypeZ @x0py228 Tm_arrow_b0a698cf4739f4ff0d04a8f64ce9f32f) (and (HasType (@x1!81 @x0py228) Tm_type) (HasType (@x2!80 @x0py228) (Prims.list (False.relation (@x1!81 @x0py228)))) (HasType (@x3!79 @x0py228) (False.relation (@x1!81 @x0py228))) (HasType (@x4!78 @x0py228) (@x1!81 @x0py228)) (HasType (@x5!77 @x0py228) (@x1!81 @x0py228)) (HasType (@x6!76 @x0py228) (@x1!81 @x0py228)) (HasType (@x7!75 @x0py228) (False.calc_proof (@x1!81 @x0py228) (@x2!80 @x0py228) (@x4!78 @x0py228) (@x5!77 @x0py228))) (HasType (@x8!74 @x0py228) (Prims.squash (ApplyTT (ApplyTT (@x3!79 @x0py228) (@x5!77 @x0py228)) (@x6!76 @x0py228)))) (not (HasType (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT @x0py228 (@x1!81 @x0py228)) (@x2!80 @x0py228)) (@x3!79 @x0py228)) (@x4!78 @x0py228)) (@x5!77 @x0py228)) (@x6!76 @x0py228)) (@x7!75 @x0py228)) (@x8!74 @x0py228)) (False.calc_proof (@x1!81 @x0py228) (Prims.Cons (False.relation (@x1!81 @x0py228)) (@x3!79 @x0py228) (@x2!80 @x0py228)) (@x4!78 @x0py228) (@x6!76 @x0py228))))))) :pattern ((HasTypeZ @x0py228 Tm_arrow_b0a698cf4739f4ff0d04a8f64ce9f32f)) )) :named False_interpretation_Tm_arrow_b0a698cf4739f4ff0d04a8f64ce9f32f))
(assert (! (forall ((@x0py229 Term)(@x1py244 Term)(@x2py177 Term)(@x3py132 Term)(@x4py96 Term)(@x5py81 Term)) (! (and (or (not (HasTypeZ @x0py229 (Tm_arrow_b876badf58234251d7cd1ca0d2659f12 @x1py244 @x2py177 @x3py132 @x4py96 @x5py81))) (forall ((@x6py57 Term)) (! (or (not (HasType @x6py57 @x5py81)) (HasType (ApplyTT @x0py229 @x6py57) (False.calc_proof @x4py96 @x3py132 @x2py177 @x1py244))) :pattern ((ApplyTT @x0py229 @x6py57)) ))) (or (HasTypeZ @x0py229 (Tm_arrow_b876badf58234251d7cd1ca0d2659f12 @x1py244 @x2py177 @x3py132 @x4py96 @x5py81)) (and (HasType (@x6!82 @x5py81 @x4py96 @x3py132 @x2py177 @x1py244 @x0py229) @x5py81) (not (HasType (ApplyTT @x0py229 (@x6!82 @x5py81 @x4py96 @x3py132 @x2py177 @x1py244 @x0py229)) (False.calc_proof @x4py96 @x3py132 @x2py177 @x1py244)))))) :pattern ((HasTypeZ @x0py229 (Tm_arrow_b876badf58234251d7cd1ca0d2659f12 @x1py244 @x2py177 @x3py132 @x4py96 @x5py81))) )) :named False_interpretation_Tm_arrow_b876badf58234251d7cd1ca0d2659f12))
(assert (! (forall ((@x0py230 Term)) (! (and (or (not (HasTypeZ @x0py230 Tm_arrow_e4d7b27ac8277ab0ab77e116a8906fa4)) (forall ((@x1py245 Term)(@x2py178 Term)(@x3py133 Term)(@x4py97 Term)(@x5py82 Term)) (! (or (HasType (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT @x0py230 @x1py245) @x2py178) @x3py133) @x4py97) @x5py82) (False.relation @x1py245)) (not (HasType @x5py82 (False_Tm_refine_c7c1219b2b697290706c3cb902d0c0fb @x1py245 @x2py178 @x3py133 @x4py97))) (not (HasType @x2py178 (Prims.list (False.relation @x1py245)))) (not (HasType @x4py97 @x1py245)) (not (HasType @x1py245 Tm_type)) (not (HasType @x3py133 @x1py245))) :pattern ((ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT @x0py230 @x1py245) @x2py178) @x3py133) @x4py97) @x5py82)) ))) (or (HasTypeZ @x0py230 Tm_arrow_e4d7b27ac8277ab0ab77e116a8906fa4) (and (HasType (@x1!87 @x0py230) Tm_type) (HasType (@x2!86 @x0py230) (Prims.list (False.relation (@x1!87 @x0py230)))) (HasType (@x3!85 @x0py230) (@x1!87 @x0py230)) (HasType (@x4!84 @x0py230) (@x1!87 @x0py230)) (HasType (@x5!83 @x0py230) (False_Tm_refine_c7c1219b2b697290706c3cb902d0c0fb (@x1!87 @x0py230) (@x2!86 @x0py230) (@x3!85 @x0py230) (@x4!84 @x0py230))) (not (HasType (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT @x0py230 (@x1!87 @x0py230)) (@x2!86 @x0py230)) (@x3!85 @x0py230)) (@x4!84 @x0py230)) (@x5!83 @x0py230)) (False.relation (@x1!87 @x0py230))))))) :pattern ((HasTypeZ @x0py230 Tm_arrow_e4d7b27ac8277ab0ab77e116a8906fa4)) )) :named False_interpretation_Tm_arrow_e4d7b27ac8277ab0ab77e116a8906fa4))
(assert (! (forall ((@x0py231 Term)) (! (and (or (not (HasTypeZ @x0py231 Tm_arrow_f3a6f55103b1d9f09f2c9d33389125e1)) (forall ((@x1py246 Term)(@x2py179 Term)(@x3py134 Term)(@x4py98 Term)(@x5py83 Term)) (! (or (not (HasType @x2py179 (Prims.list (False.relation @x1py246)))) (not (HasType @x1py246 Tm_type)) (not (HasType @x3py134 @x1py246)) (not (HasType @x4py98 @x1py246)) (not (HasType @x5py83 (False_Tm_refine_c7c1219b2b697290706c3cb902d0c0fb @x1py246 @x2py179 @x3py134 @x4py98))) (HasType (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT @x0py231 @x1py246) @x2py179) @x3py134) @x4py98) @x5py83) (Prims.squash (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT False.__proj__CalcStep__item__p@tok @x1py246) @x2py179) @x3py134) @x4py98) @x5py83) (False.__proj__CalcStep__item__y @x1py246 @x2py179 @x3py134 @x4py98 @x5py83)) (False.__proj__CalcStep__item__z @x1py246 @x2py179 @x3py134 @x4py98 @x5py83))))) :pattern ((ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT @x0py231 @x1py246) @x2py179) @x3py134) @x4py98) @x5py83)) ))) (or (HasTypeZ @x0py231 Tm_arrow_f3a6f55103b1d9f09f2c9d33389125e1) (and (HasType (@x1!92 @x0py231) Tm_type) (HasType (@x2!91 @x0py231) (Prims.list (False.relation (@x1!92 @x0py231)))) (HasType (@x3!90 @x0py231) (@x1!92 @x0py231)) (HasType (@x4!89 @x0py231) (@x1!92 @x0py231)) (HasType (@x5!88 @x0py231) (False_Tm_refine_c7c1219b2b697290706c3cb902d0c0fb (@x1!92 @x0py231) (@x2!91 @x0py231) (@x3!90 @x0py231) (@x4!89 @x0py231))) (not (HasType (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT @x0py231 (@x1!92 @x0py231)) (@x2!91 @x0py231)) (@x3!90 @x0py231)) (@x4!89 @x0py231)) (@x5!88 @x0py231)) (Prims.squash (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT False.__proj__CalcStep__item__p@tok (@x1!92 @x0py231)) (@x2!91 @x0py231)) (@x3!90 @x0py231)) (@x4!89 @x0py231)) (@x5!88 @x0py231)) (False.__proj__CalcStep__item__y (@x1!92 @x0py231) (@x2!91 @x0py231) (@x3!90 @x0py231) (@x4!89 @x0py231) (@x5!88 @x0py231))) (False.__proj__CalcStep__item__z (@x1!92 @x0py231) (@x2!91 @x0py231) (@x3!90 @x0py231) (@x4!89 @x0py231) (@x5!88 @x0py231))))))))) :pattern ((HasTypeZ @x0py231 Tm_arrow_f3a6f55103b1d9f09f2c9d33389125e1)) )) :named False_interpretation_Tm_arrow_f3a6f55103b1d9f09f2c9d33389125e1))
(assert (! (forall ((@x0py232 Term)(@x1py247 Term)(@x2py180 Term)) (! (and (or (not (HasTypeZ @x0py232 (Tm_arrow_fc31a65eb1baad4caf91e28652535209 @x1py247 @x2py180))) (forall ((@x3py135 Term)) (! (or (not (HasType @x3py135 @x2py180)) (HasType (ApplyTT @x0py232 @x3py135) (Prims.squash (ApplyTT (ApplyTT @x1py247 (BoxInt 10)) (BoxInt 9))))) :pattern ((ApplyTT @x0py232 @x3py135)) ))) (or (HasTypeZ @x0py232 (Tm_arrow_fc31a65eb1baad4caf91e28652535209 @x1py247 @x2py180)) (and (HasType (@x3!93 @x2py180 @x1py247 @x0py232) @x2py180) (not (HasType (ApplyTT @x0py232 (@x3!93 @x2py180 @x1py247 @x0py232)) (Prims.squash (ApplyTT (ApplyTT @x1py247 (BoxInt 10)) (BoxInt 9)))))))) :pattern ((HasTypeZ @x0py232 (Tm_arrow_fc31a65eb1baad4caf91e28652535209 @x1py247 @x2py180))) )) :named False_interpretation_Tm_arrow_fc31a65eb1baad4caf91e28652535209))
(assert (! (forall ((@x0py233 Term)) (! (and (or (not (HasTypeZ @x0py233 Tm_arrow_feb6e9b0823403b824ec87356300d43e)) (forall ((@x1py248 Term)(@x2py181 Term)(@x3py136 Term)(@x4py99 Term)(@x5py84 Term)) (! (or (HasType (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT @x0py233 @x1py248) @x2py181) @x3py136) @x4py99) @x5py84) @x1py248) (not (HasType @x3py136 @x1py248)) (not (HasType @x1py248 Tm_type)) (not (HasType @x4py99 @x1py248)) (not (HasType @x2py181 (Prims.list (False.relation @x1py248)))) (not (HasType @x5py84 (False_Tm_refine_c7c1219b2b697290706c3cb902d0c0fb @x1py248 @x2py181 @x3py136 @x4py99)))) :pattern ((ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT @x0py233 @x1py248) @x2py181) @x3py136) @x4py99) @x5py84)) ))) (or (HasTypeZ @x0py233 Tm_arrow_feb6e9b0823403b824ec87356300d43e) (and (HasType (@x1!98 @x0py233) Tm_type) (HasType (@x2!97 @x0py233) (Prims.list (False.relation (@x1!98 @x0py233)))) (HasType (@x3!96 @x0py233) (@x1!98 @x0py233)) (HasType (@x4!95 @x0py233) (@x1!98 @x0py233)) (HasType (@x5!94 @x0py233) (False_Tm_refine_c7c1219b2b697290706c3cb902d0c0fb (@x1!98 @x0py233) (@x2!97 @x0py233) (@x3!96 @x0py233) (@x4!95 @x0py233))) (not (HasType (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT @x0py233 (@x1!98 @x0py233)) (@x2!97 @x0py233)) (@x3!96 @x0py233)) (@x4!95 @x0py233)) (@x5!94 @x0py233)) (@x1!98 @x0py233)))))) :pattern ((HasTypeZ @x0py233 Tm_arrow_feb6e9b0823403b824ec87356300d43e)) )) :named False_interpretation_Tm_arrow_feb6e9b0823403b824ec87356300d43e))
(assert (! (forall ((@u0py78 Fuel)(@x1py249 Term)) (! (or (not (HasTypeFuel @u0py78 @x1py249 Tm_arrow_01af5ab61334f3cf5e140ba023176d9a)) (is-Tm_arrow (PreType @x1py249))) :pattern ((HasTypeFuel @u0py78 @x1py249 Tm_arrow_01af5ab61334f3cf5e140ba023176d9a)) )) :named False_pre_typing_Tm_arrow_01af5ab61334f3cf5e140ba023176d9a))
(assert (! (forall ((@u0py79 Fuel)(@x1py250 Term)(@x2py182 Term)) (! (or (is-Tm_arrow (PreType @x1py250)) (not (HasTypeFuel @u0py79 @x1py250 (Tm_arrow_2d7f2b032d9f59f51dc6a0b9dd727adc @x2py182)))) :pattern ((HasTypeFuel @u0py79 @x1py250 (Tm_arrow_2d7f2b032d9f59f51dc6a0b9dd727adc @x2py182))) )) :named False_pre_typing_Tm_arrow_2d7f2b032d9f59f51dc6a0b9dd727adc))
(assert (! (forall ((@u0py80 Fuel)(@x1py251 Term)(@x2py183 Term)(@x3py137 Term)) (! (or (is-Tm_arrow (PreType @x1py251)) (not (HasTypeFuel @u0py80 @x1py251 (Tm_arrow_6c8a344d1f126f59d9c6304a0bfbc84a @x2py183 @x3py137)))) :pattern ((HasTypeFuel @u0py80 @x1py251 (Tm_arrow_6c8a344d1f126f59d9c6304a0bfbc84a @x2py183 @x3py137))) )) :named False_pre_typing_Tm_arrow_6c8a344d1f126f59d9c6304a0bfbc84a))
(assert (! (forall ((@u0py81 Fuel)(@x1py252 Term)(@x2py184 Term)(@x3py138 Term)(@x4py100 Term)(@x5py85 Term)) (! (or (not (HasTypeFuel @u0py81 @x1py252 (Tm_arrow_6cdb49601bd9255655221b5bfb8efb6f @x2py184 @x3py138 @x4py100 @x5py85))) (is-Tm_arrow (PreType @x1py252))) :pattern ((HasTypeFuel @u0py81 @x1py252 (Tm_arrow_6cdb49601bd9255655221b5bfb8efb6f @x2py184 @x3py138 @x4py100 @x5py85))) )) :named False_pre_typing_Tm_arrow_6cdb49601bd9255655221b5bfb8efb6f))
(assert (! (forall ((@u0py82 Fuel)(@x1py253 Term)(@x2py185 Term)) (! (or (is-Tm_arrow (PreType @x1py253)) (not (HasTypeFuel @u0py82 @x1py253 (Tm_arrow_9eaf2ac78d771b56d59474a450ebd43c @x2py185)))) :pattern ((HasTypeFuel @u0py82 @x1py253 (Tm_arrow_9eaf2ac78d771b56d59474a450ebd43c @x2py185))) )) :named False_pre_typing_Tm_arrow_9eaf2ac78d771b56d59474a450ebd43c))
(assert (! (forall ((@u0py83 Fuel)(@x1py254 Term)) (! (or (is-Tm_arrow (PreType @x1py254)) (not (HasTypeFuel @u0py83 @x1py254 Tm_arrow_14bcecce05a6e15aa540694546ee26ed))) :pattern ((HasTypeFuel @u0py83 @x1py254 Tm_arrow_14bcecce05a6e15aa540694546ee26ed)) )) :named False_pre_typing_Tm_arrow_14bcecce05a6e15aa540694546ee26ed))
(assert (! (forall ((@u0py84 Fuel)(@x1py255 Term)(@x2py186 Term)) (! (or (is-Tm_arrow (PreType @x1py255)) (not (HasTypeFuel @u0py84 @x1py255 (Tm_arrow_76a60dab4e3b3182a3b4dae5a57cfb2d @x2py186)))) :pattern ((HasTypeFuel @u0py84 @x1py255 (Tm_arrow_76a60dab4e3b3182a3b4dae5a57cfb2d @x2py186))) )) :named False_pre_typing_Tm_arrow_76a60dab4e3b3182a3b4dae5a57cfb2d))
(assert (! (forall ((@u0py85 Fuel)(@x1py256 Term)(@x2py187 Term)(@x3py139 Term)(@x4py101 Term)) (! (or (is-Tm_arrow (PreType @x1py256)) (not (HasTypeFuel @u0py85 @x1py256 (Tm_arrow_637c9767c7a2c264e0a7f2bd68427abf @x2py187 @x3py139 @x4py101)))) :pattern ((HasTypeFuel @u0py85 @x1py256 (Tm_arrow_637c9767c7a2c264e0a7f2bd68427abf @x2py187 @x3py139 @x4py101))) )) :named False_pre_typing_Tm_arrow_637c9767c7a2c264e0a7f2bd68427abf))
(assert (! (forall ((@u0py86 Fuel)(@x1py257 Term)) (! (or (is-Tm_arrow (PreType @x1py257)) (not (HasTypeFuel @u0py86 @x1py257 Tm_arrow_3892eda38ed5a9b6d9aa7ad2635088fc))) :pattern ((HasTypeFuel @u0py86 @x1py257 Tm_arrow_3892eda38ed5a9b6d9aa7ad2635088fc)) )) :named False_pre_typing_Tm_arrow_3892eda38ed5a9b6d9aa7ad2635088fc))
(assert (! (forall ((@u0py87 Fuel)(@x1py258 Term)) (! (or (is-Tm_arrow (PreType @x1py258)) (not (HasTypeFuel @u0py87 @x1py258 Tm_arrow_88445f768cf4024bacb21baa68bdff2b))) :pattern ((HasTypeFuel @u0py87 @x1py258 Tm_arrow_88445f768cf4024bacb21baa68bdff2b)) )) :named False_pre_typing_Tm_arrow_88445f768cf4024bacb21baa68bdff2b))
(assert (! (forall ((@u0py88 Fuel)(@x1py259 Term)(@x2py188 Term)(@x3py140 Term)) (! (or (is-Tm_arrow (PreType @x1py259)) (not (HasTypeFuel @u0py88 @x1py259 (Tm_arrow_14950698eb45c81a0e8055b3844caf01 @x2py188 @x3py140)))) :pattern ((HasTypeFuel @u0py88 @x1py259 (Tm_arrow_14950698eb45c81a0e8055b3844caf01 @x2py188 @x3py140))) )) :named False_pre_typing_Tm_arrow_14950698eb45c81a0e8055b3844caf01))
(assert (! (forall ((@u0py89 Fuel)(@x1py260 Term)) (! (or (is-Tm_arrow (PreType @x1py260)) (not (HasTypeFuel @u0py89 @x1py260 Tm_arrow_b0a698cf4739f4ff0d04a8f64ce9f32f))) :pattern ((HasTypeFuel @u0py89 @x1py260 Tm_arrow_b0a698cf4739f4ff0d04a8f64ce9f32f)) )) :named False_pre_typing_Tm_arrow_b0a698cf4739f4ff0d04a8f64ce9f32f))
(assert (! (forall ((@u0py90 Fuel)(@x1py261 Term)(@x2py189 Term)(@x3py141 Term)(@x4py102 Term)(@x5py86 Term)(@x6py58 Term)) (! (or (is-Tm_arrow (PreType @x1py261)) (not (HasTypeFuel @u0py90 @x1py261 (Tm_arrow_b876badf58234251d7cd1ca0d2659f12 @x2py189 @x3py141 @x4py102 @x5py86 @x6py58)))) :pattern ((HasTypeFuel @u0py90 @x1py261 (Tm_arrow_b876badf58234251d7cd1ca0d2659f12 @x2py189 @x3py141 @x4py102 @x5py86 @x6py58))) )) :named False_pre_typing_Tm_arrow_b876badf58234251d7cd1ca0d2659f12))
(assert (! (forall ((@u0py91 Fuel)(@x1py262 Term)) (! (or (is-Tm_arrow (PreType @x1py262)) (not (HasTypeFuel @u0py91 @x1py262 Tm_arrow_e4d7b27ac8277ab0ab77e116a8906fa4))) :pattern ((HasTypeFuel @u0py91 @x1py262 Tm_arrow_e4d7b27ac8277ab0ab77e116a8906fa4)) )) :named False_pre_typing_Tm_arrow_e4d7b27ac8277ab0ab77e116a8906fa4))
(assert (! (forall ((@u0py92 Fuel)(@x1py263 Term)) (! (or (is-Tm_arrow (PreType @x1py263)) (not (HasTypeFuel @u0py92 @x1py263 Tm_arrow_f3a6f55103b1d9f09f2c9d33389125e1))) :pattern ((HasTypeFuel @u0py92 @x1py263 Tm_arrow_f3a6f55103b1d9f09f2c9d33389125e1)) )) :named False_pre_typing_Tm_arrow_f3a6f55103b1d9f09f2c9d33389125e1))
(assert (! (forall ((@u0py93 Fuel)(@x1py264 Term)(@x2py190 Term)(@x3py142 Term)) (! (or (is-Tm_arrow (PreType @x1py264)) (not (HasTypeFuel @u0py93 @x1py264 (Tm_arrow_fc31a65eb1baad4caf91e28652535209 @x2py190 @x3py142)))) :pattern ((HasTypeFuel @u0py93 @x1py264 (Tm_arrow_fc31a65eb1baad4caf91e28652535209 @x2py190 @x3py142))) )) :named False_pre_typing_Tm_arrow_fc31a65eb1baad4caf91e28652535209))
(assert (! (forall ((@u0py94 Fuel)(@x1py265 Term)) (! (or (is-Tm_arrow (PreType @x1py265)) (not (HasTypeFuel @u0py94 @x1py265 Tm_arrow_feb6e9b0823403b824ec87356300d43e))) :pattern ((HasTypeFuel @u0py94 @x1py265 Tm_arrow_feb6e9b0823403b824ec87356300d43e)) )) :named False_pre_typing_Tm_arrow_feb6e9b0823403b824ec87356300d43e))
(assert (! (forall ((@x0py234 Term)(@u1py0 Fuel)(@x2py191 Term)(@x3py143 Term)(@x4py103 Term)(@x5py87 Term)) (! (or (not (HasTypeFuel @u1py0 @x0py234 (False.calc_proof @x2py191 @x3py143 @x4py103 @x5py87))) (= (False.calc_proof @x2py191 @x3py143 @x4py103 @x5py87) (PreType @x0py234))) :pattern ((HasTypeFuel @u1py0 @x0py234 (False.calc_proof @x2py191 @x3py143 @x4py103 @x5py87))) )) :named False_pretyping_b65599eb5df89ca9739f3bfdeb70779e))
(assert (! (= 2120 (Term_constr_id False.calc_proof@tok)) :named fresh_token_False.calc_proof@tok))
(assert (! (= 2129 (Term_constr_id False.CalcRefl@tok)) :named fresh_token_False.CalcRefl@tok))
(assert (! (= 2134 (Term_constr_id False.CalcStep@tok)) :named fresh_token_False.CalcStep@tok))
(assert (! (= 2080 (Term_constr_id FStar.Pervasives.CConst@tok)) :named fresh_token_FStar.Pervasives.CConst@tok))
(assert (! (= 2076 (Term_constr_id FStar.Pervasives.CEpilogue@tok)) :named fresh_token_FStar.Pervasives.CEpilogue@tok))
(assert (! (= 2068 (Term_constr_id FStar.Pervasives.Comment@tok)) :named fresh_token_FStar.Pervasives.Comment@tok))
(assert (! (= 2072 (Term_constr_id FStar.Pervasives.CPrologue@tok)) :named fresh_token_FStar.Pervasives.CPrologue@tok))
(assert (! (= 1931 (Term_constr_id FStar.Pervasives.dtuple3@tok)) :named fresh_token_FStar.Pervasives.dtuple3@tok))
(assert (! (= 1978 (Term_constr_id FStar.Pervasives.dtuple4@tok)) :named fresh_token_FStar.Pervasives.dtuple4@tok))
(assert (! (= 1772 (Term_constr_id FStar.Pervasives.E@tok)) :named fresh_token_FStar.Pervasives.E@tok))
(assert (! (= 1893 (Term_constr_id FStar.Pervasives.either@tok)) :named fresh_token_FStar.Pervasives.either@tok))
(assert (! (= 1776 (Term_constr_id FStar.Pervasives.Err@tok)) :named fresh_token_FStar.Pervasives.Err@tok))
(assert (! (= 1902 (Term_constr_id FStar.Pervasives.Inl@tok)) :named fresh_token_FStar.Pervasives.Inl@tok))
(assert (! (= 1907 (Term_constr_id FStar.Pervasives.Inr@tok)) :named fresh_token_FStar.Pervasives.Inr@tok))
(assert (! (= 1946 (Term_constr_id FStar.Pervasives.Mkdtuple3@tok)) :named fresh_token_FStar.Pervasives.Mkdtuple3@tok))
(assert (! (= 1996 (Term_constr_id FStar.Pervasives.Mkdtuple4@tok)) :named fresh_token_FStar.Pervasives.Mkdtuple4@tok))
(assert (! (= 1048 (Term_constr_id FStar.Pervasives.Native.Mktuple2@tok)) :named fresh_token_FStar.Pervasives.Native.Mktuple2@tok))
(assert (! (= 1067 (Term_constr_id FStar.Pervasives.Native.Mktuple3@tok)) :named fresh_token_FStar.Pervasives.Native.Mktuple3@tok))
(assert (! (= 1086 (Term_constr_id FStar.Pervasives.Native.Mktuple4@tok)) :named fresh_token_FStar.Pervasives.Native.Mktuple4@tok))
(assert (! (= 1107 (Term_constr_id FStar.Pervasives.Native.Mktuple5@tok)) :named fresh_token_FStar.Pervasives.Native.Mktuple5@tok))
(assert (! (= 1130 (Term_constr_id FStar.Pervasives.Native.Mktuple6@tok)) :named fresh_token_FStar.Pervasives.Native.Mktuple6@tok))
(assert (! (= 1155 (Term_constr_id FStar.Pervasives.Native.Mktuple7@tok)) :named fresh_token_FStar.Pervasives.Native.Mktuple7@tok))
(assert (! (= 1182 (Term_constr_id FStar.Pervasives.Native.Mktuple8@tok)) :named fresh_token_FStar.Pervasives.Native.Mktuple8@tok))
(assert (! (= 1025 (Term_constr_id FStar.Pervasives.Native.None@tok)) :named fresh_token_FStar.Pervasives.Native.None@tok))
(assert (! (= 1016 (Term_constr_id FStar.Pervasives.Native.option@tok)) :named fresh_token_FStar.Pervasives.Native.option@tok))
(assert (! (= 1030 (Term_constr_id FStar.Pervasives.Native.Some@tok)) :named fresh_token_FStar.Pervasives.Native.Some@tok))
(assert (! (= 1039 (Term_constr_id FStar.Pervasives.Native.tuple2@tok)) :named fresh_token_FStar.Pervasives.Native.tuple2@tok))
(assert (! (= 1058 (Term_constr_id FStar.Pervasives.Native.tuple3@tok)) :named fresh_token_FStar.Pervasives.Native.tuple3@tok))
(assert (! (= 1077 (Term_constr_id FStar.Pervasives.Native.tuple4@tok)) :named fresh_token_FStar.Pervasives.Native.tuple4@tok))
(assert (! (= 1098 (Term_constr_id FStar.Pervasives.Native.tuple5@tok)) :named fresh_token_FStar.Pervasives.Native.tuple5@tok))
(assert (! (= 1121 (Term_constr_id FStar.Pervasives.Native.tuple6@tok)) :named fresh_token_FStar.Pervasives.Native.tuple6@tok))
(assert (! (= 1146 (Term_constr_id FStar.Pervasives.Native.tuple7@tok)) :named fresh_token_FStar.Pervasives.Native.tuple7@tok))
(assert (! (= 1173 (Term_constr_id FStar.Pervasives.Native.tuple8@tok)) :named fresh_token_FStar.Pervasives.Native.tuple8@tok))
(assert (! (= 2056 (Term_constr_id FStar.Pervasives.PpxDerivingShowConstant@tok)) :named fresh_token_FStar.Pervasives.PpxDerivingShowConstant@tok))
(assert (! (= 1758 (Term_constr_id FStar.Pervasives.result@tok)) :named fresh_token_FStar.Pervasives.result@tok))
(assert (! (= 1767 (Term_constr_id FStar.Pervasives.V@tok)) :named fresh_token_FStar.Pervasives.V@tok))
(assert (! (= 461 (Term_constr_id Prims.And@tok)) :named fresh_token_Prims.And@tok))
(assert (! (= 452 (Term_constr_id Prims.c_and@tok)) :named fresh_token_Prims.c_and@tok))
(assert (! (= 471 (Term_constr_id Prims.c_or@tok)) :named fresh_token_Prims.c_or@tok))
(assert (! (= 595 (Term_constr_id Prims.Cons@tok)) :named fresh_token_Prims.Cons@tok))
(assert (! (= 517 (Term_constr_id Prims.dtuple2@tok)) :named fresh_token_Prims.dtuple2@tok))
(assert (! (= 422 (Term_constr_id Prims.equals@tok)) :named fresh_token_Prims.equals@tok))
(assert (! (= 437 (Term_constr_id Prims.h_equals@tok)) :named fresh_token_Prims.h_equals@tok))
(assert (! (= 446 (Term_constr_id Prims.HRefl@tok)) :named fresh_token_Prims.HRefl@tok))
(assert (! (= 480 (Term_constr_id Prims.Left@tok)) :named fresh_token_Prims.Left@tok))
(assert (! (= 581 (Term_constr_id Prims.list@tok)) :named fresh_token_Prims.list@tok))
(assert (! (= 529 (Term_constr_id Prims.Mkdtuple2@tok)) :named fresh_token_Prims.Mkdtuple2@tok))
(assert (! (= 590 (Term_constr_id Prims.Nil@tok)) :named fresh_token_Prims.Nil@tok))
(assert (! (= 431 (Term_constr_id Prims.Refl@tok)) :named fresh_token_Prims.Refl@tok))
(assert (! (= 485 (Term_constr_id Prims.Right@tok)) :named fresh_token_Prims.Right@tok))
(assert (! (forall ((@x0py235 Term)) (! (and (or (not (HasTypeZ @x0py235 Tm_arrow_0dad7bc7f64c4faac713e4788a31a16e)) (forall ((@x1py266 Term)(@x2py192 Term)(@x3py144 Term)(@x4py104 Term)(@x5py88 Term)(@x6py59 Term)) (! (or (HasType (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT @x0py235 @x1py266) @x2py192) @x3py144) @x4py104) @x5py88) @x6py59) @x2py192) (not (HasType @x1py266 Tm_type)) (not (HasType @x2py192 Tm_type)) (not (HasType @x3py144 Tm_type)) (not (HasType @x4py104 Tm_type)) (not (HasType @x5py88 Tm_type)) (not (HasType @x6py59 (FStar.Pervasives.Native.tuple5 @x1py266 @x2py192 @x3py144 @x4py104 @x5py88)))) :pattern ((ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT @x0py235 @x1py266) @x2py192) @x3py144) @x4py104) @x5py88) @x6py59)) ))) (or (HasTypeZ @x0py235 Tm_arrow_0dad7bc7f64c4faac713e4788a31a16e) (and (HasType (@x1!104 @x0py235) Tm_type) (HasType (@x2!103 @x0py235) Tm_type) (HasType (@x3!102 @x0py235) Tm_type) (HasType (@x4!101 @x0py235) Tm_type) (HasType (@x5!100 @x0py235) Tm_type) (HasType (@x6!99 @x0py235) (FStar.Pervasives.Native.tuple5 (@x1!104 @x0py235) (@x2!103 @x0py235) (@x3!102 @x0py235) (@x4!101 @x0py235) (@x5!100 @x0py235))) (not (HasType (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT @x0py235 (@x1!104 @x0py235)) (@x2!103 @x0py235)) (@x3!102 @x0py235)) (@x4!101 @x0py235)) (@x5!100 @x0py235)) (@x6!99 @x0py235)) (@x2!103 @x0py235)))))) :pattern ((HasTypeZ @x0py235 Tm_arrow_0dad7bc7f64c4faac713e4788a31a16e)) )) :named FStar.Pervasives.Native_interpretation_Tm_arrow_0dad7bc7f64c4faac713e4788a31a16e))
(assert (! (forall ((@x0py236 Term)(@x1py267 Term)) (! (and (or (not (HasTypeZ @x0py236 (Tm_arrow_0e873ada4642b527a7ed8ad8c9a23c0c @x1py267))) (forall ((@x2py193 Term)(@x3py145 Term)(@x4py105 Term)) (! (or (HasType (ApplyTT (ApplyTT (ApplyTT @x0py236 @x2py193) @x3py145) @x4py105) @x1py267) (not (HasType @x3py145 Tm_type)) (not (HasType @x2py193 Tm_type)) (not (HasType @x4py105 (FStar.Pervasives.Native.tuple2 @x2py193 @x3py145)))) :pattern ((ApplyTT (ApplyTT (ApplyTT @x0py236 @x2py193) @x3py145) @x4py105)) ))) (or (HasTypeZ @x0py236 (Tm_arrow_0e873ada4642b527a7ed8ad8c9a23c0c @x1py267)) (and (HasType (@x2!107 @x1py267 @x0py236) Tm_type) (HasType (@x3!106 @x1py267 @x0py236) Tm_type) (HasType (@x4!105 @x1py267 @x0py236) (FStar.Pervasives.Native.tuple2 (@x2!107 @x1py267 @x0py236) (@x3!106 @x1py267 @x0py236))) (not (HasType (ApplyTT (ApplyTT (ApplyTT @x0py236 (@x2!107 @x1py267 @x0py236)) (@x3!106 @x1py267 @x0py236)) (@x4!105 @x1py267 @x0py236)) @x1py267))))) :pattern ((HasTypeZ @x0py236 (Tm_arrow_0e873ada4642b527a7ed8ad8c9a23c0c @x1py267))) )) :named FStar.Pervasives.Native_interpretation_Tm_arrow_0e873ada4642b527a7ed8ad8c9a23c0c))
(assert (! (forall ((@x0py237 Term)) (! (and (or (not (HasTypeZ @x0py237 Tm_arrow_02d3b5b79bf8b1df357192967171c4e9)) (forall ((@x1py268 Term)(@x2py194 Term)(@x3py146 Term)(@x4py106 Term)(@x5py89 Term)(@x6py60 Term)(@x7py42 Term)(@x8py27 Term)(@x9py22 Term)) (! (or (not (HasType @x6py60 Tm_type)) (not (HasType @x4py106 Tm_type)) (not (HasType @x7py42 Tm_type)) (not (HasType @x3py146 Tm_type)) (not (HasType @x1py268 Tm_type)) (not (HasType @x2py194 Tm_type)) (not (HasType @x9py22 (FStar.Pervasives.Native.tuple8 @x1py268 @x2py194 @x3py146 @x4py106 @x5py89 @x6py60 @x7py42 @x8py27))) (HasType (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT @x0py237 @x1py268) @x2py194) @x3py146) @x4py106) @x5py89) @x6py60) @x7py42) @x8py27) @x9py22) @x5py89) (not (HasType @x5py89 Tm_type)) (not (HasType @x8py27 Tm_type))) :pattern ((ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT @x0py237 @x1py268) @x2py194) @x3py146) @x4py106) @x5py89) @x6py60) @x7py42) @x8py27) @x9py22)) ))) (or (HasTypeZ @x0py237 Tm_arrow_02d3b5b79bf8b1df357192967171c4e9) (and (HasType (@x1!116 @x0py237) Tm_type) (HasType (@x2!115 @x0py237) Tm_type) (HasType (@x3!114 @x0py237) Tm_type) (HasType (@x4!113 @x0py237) Tm_type) (HasType (@x5!112 @x0py237) Tm_type) (HasType (@x6!111 @x0py237) Tm_type) (HasType (@x7!110 @x0py237) Tm_type) (HasType (@x8!109 @x0py237) Tm_type) (HasType (@x9!108 @x0py237) (FStar.Pervasives.Native.tuple8 (@x1!116 @x0py237) (@x2!115 @x0py237) (@x3!114 @x0py237) (@x4!113 @x0py237) (@x5!112 @x0py237) (@x6!111 @x0py237) (@x7!110 @x0py237) (@x8!109 @x0py237))) (not (HasType (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT @x0py237 (@x1!116 @x0py237)) (@x2!115 @x0py237)) (@x3!114 @x0py237)) (@x4!113 @x0py237)) (@x5!112 @x0py237)) (@x6!111 @x0py237)) (@x7!110 @x0py237)) (@x8!109 @x0py237)) (@x9!108 @x0py237)) (@x5!112 @x0py237)))))) :pattern ((HasTypeZ @x0py237 Tm_arrow_02d3b5b79bf8b1df357192967171c4e9)) )) :named FStar.Pervasives.Native_interpretation_Tm_arrow_02d3b5b79bf8b1df357192967171c4e9))
(assert (! (forall ((@x0py238 Term)(@x1py269 Term)) (! (and (or (not (HasTypeZ @x0py238 (Tm_arrow_3e3f6c09cac83bd2c87427772baf967c @x1py269))) (forall ((@x2py195 Term)) (! (or (not (HasType @x2py195 (FStar.Pervasives.Native_Tm_refine_735fdbeb3c591d804f924767d4322a6a @x1py269))) (HasType (ApplyTT @x0py238 @x2py195) (FStar.Pervasives.Native.__proj__UnfoldAttr__item__t @x2py195))) :pattern ((ApplyTT @x0py238 @x2py195)) ))) (or (HasTypeZ @x0py238 (Tm_arrow_3e3f6c09cac83bd2c87427772baf967c @x1py269)) (and (HasType (@x2!117 @x1py269 @x0py238) (FStar.Pervasives.Native_Tm_refine_735fdbeb3c591d804f924767d4322a6a @x1py269)) (not (HasType (ApplyTT @x0py238 (@x2!117 @x1py269 @x0py238)) (FStar.Pervasives.Native.__proj__UnfoldAttr__item__t (@x2!117 @x1py269 @x0py238))))))) :pattern ((HasTypeZ @x0py238 (Tm_arrow_3e3f6c09cac83bd2c87427772baf967c @x1py269))) )) :named FStar.Pervasives.Native_interpretation_Tm_arrow_3e3f6c09cac83bd2c87427772baf967c))
(assert (! (forall ((@x0py239 Term)) (! (and (or (not (HasTypeZ @x0py239 Tm_arrow_4a0e4247f19d3748beed54010175e86f)) (forall ((@x1py270 Term)(@x2py196 Term)(@x3py147 Term)(@x4py107 Term)(@x5py90 Term)) (! (or (not (HasType @x4py107 Tm_type)) (not (HasType @x1py270 Tm_type)) (not (HasType @x2py196 Tm_type)) (not (HasType @x3py147 Tm_type)) (not (HasType @x5py90 (FStar.Pervasives.Native.tuple4 @x1py270 @x2py196 @x3py147 @x4py107))) (HasType (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT @x0py239 @x1py270) @x2py196) @x3py147) @x4py107) @x5py90) @x2py196)) :pattern ((ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT @x0py239 @x1py270) @x2py196) @x3py147) @x4py107) @x5py90)) ))) (or (HasTypeZ @x0py239 Tm_arrow_4a0e4247f19d3748beed54010175e86f) (and (HasType (@x1!122 @x0py239) Tm_type) (HasType (@x2!121 @x0py239) Tm_type) (HasType (@x3!120 @x0py239) Tm_type) (HasType (@x4!119 @x0py239) Tm_type) (HasType (@x5!118 @x0py239) (FStar.Pervasives.Native.tuple4 (@x1!122 @x0py239) (@x2!121 @x0py239) (@x3!120 @x0py239) (@x4!119 @x0py239))) (not (HasType (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT @x0py239 (@x1!122 @x0py239)) (@x2!121 @x0py239)) (@x3!120 @x0py239)) (@x4!119 @x0py239)) (@x5!118 @x0py239)) (@x2!121 @x0py239)))))) :pattern ((HasTypeZ @x0py239 Tm_arrow_4a0e4247f19d3748beed54010175e86f)) )) :named FStar.Pervasives.Native_interpretation_Tm_arrow_4a0e4247f19d3748beed54010175e86f))
(assert (! (forall ((@x0py240 Term)) (! (and (or (not (HasTypeZ @x0py240 Tm_arrow_4be4d0827cb852d3f57a920e42b0e232)) (forall ((@x1py271 Term)(@x2py197 Term)(@x3py148 Term)(@x4py108 Term)(@x5py91 Term)(@x6py61 Term)(@x7py43 Term)(@x8py28 Term)(@x9py23 Term)(@x10py17 Term)(@x11py16 Term)(@x12py14 Term)(@x13py10 Term)(@x14py8 Term)) (! (or (HasType (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT @x0py240 @x1py271) @x2py197) @x3py148) @x4py108) @x5py91) @x6py61) @x7py43) @x8py28) @x9py23) @x10py17) @x11py16) @x12py14) @x13py10) @x14py8) (FStar.Pervasives.Native.tuple7 @x1py271 @x2py197 @x3py148 @x4py108 @x5py91 @x6py61 @x7py43)) (not (HasType @x1py271 Tm_type)) (not (HasType @x2py197 Tm_type)) (not (HasType @x3py148 Tm_type)) (not (HasType @x4py108 Tm_type)) (not (HasType @x5py91 Tm_type)) (not (HasType @x6py61 Tm_type)) (not (HasType @x7py43 Tm_type)) (not (HasType @x8py28 @x1py271)) (not (HasType @x9py23 @x2py197)) (not (HasType @x10py17 @x3py148)) (not (HasType @x11py16 @x4py108)) (not (HasType @x12py14 @x5py91)) (not (HasType @x13py10 @x6py61)) (not (HasType @x14py8 @x7py43))) :pattern ((ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT @x0py240 @x1py271) @x2py197) @x3py148) @x4py108) @x5py91) @x6py61) @x7py43) @x8py28) @x9py23) @x10py17) @x11py16) @x12py14) @x13py10) @x14py8)) ))) (or (HasTypeZ @x0py240 Tm_arrow_4be4d0827cb852d3f57a920e42b0e232) (and (HasType (@x1!136 @x0py240) Tm_type) (HasType (@x2!135 @x0py240) Tm_type) (HasType (@x3!134 @x0py240) Tm_type) (HasType (@x4!133 @x0py240) Tm_type) (HasType (@x5!132 @x0py240) Tm_type) (HasType (@x6!131 @x0py240) Tm_type) (HasType (@x7!130 @x0py240) Tm_type) (HasType (@x8!129 @x0py240) (@x1!136 @x0py240)) (HasType (@x9!128 @x0py240) (@x2!135 @x0py240)) (HasType (@x10!127 @x0py240) (@x3!134 @x0py240)) (HasType (@x11!126 @x0py240) (@x4!133 @x0py240)) (HasType (@x12!125 @x0py240) (@x5!132 @x0py240)) (HasType (@x13!124 @x0py240) (@x6!131 @x0py240)) (HasType (@x14!123 @x0py240) (@x7!130 @x0py240)) (not (HasType (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT @x0py240 (@x1!136 @x0py240)) (@x2!135 @x0py240)) (@x3!134 @x0py240)) (@x4!133 @x0py240)) (@x5!132 @x0py240)) (@x6!131 @x0py240)) (@x7!130 @x0py240)) (@x8!129 @x0py240)) (@x9!128 @x0py240)) (@x10!127 @x0py240)) (@x11!126 @x0py240)) (@x12!125 @x0py240)) (@x13!124 @x0py240)) (@x14!123 @x0py240)) (FStar.Pervasives.Native.tuple7 (@x1!136 @x0py240) (@x2!135 @x0py240) (@x3!134 @x0py240) (@x4!133 @x0py240) (@x5!132 @x0py240) (@x6!131 @x0py240) (@x7!130 @x0py240))))))) :pattern ((HasTypeZ @x0py240 Tm_arrow_4be4d0827cb852d3f57a920e42b0e232)) )) :named FStar.Pervasives.Native_interpretation_Tm_arrow_4be4d0827cb852d3f57a920e42b0e232))
(assert (! (forall ((@x0py241 Term)) (! (and (or (not (HasTypeZ @x0py241 Tm_arrow_4f040c69fbe8d7b2e50ca31bd5455a8e)) (forall ((@x1py272 Term)(@x2py198 Term)) (! (or (not (HasType @x1py272 Tm_type)) (not (HasType @x2py198 (FStar.Pervasives.Native_Tm_refine_4d5241eb6fe198666a8101195bbd4a2a @x1py272))) (HasType (ApplyTT (ApplyTT @x0py241 @x1py272) @x2py198) @x1py272)) :pattern ((ApplyTT (ApplyTT @x0py241 @x1py272) @x2py198)) ))) (or (HasTypeZ @x0py241 Tm_arrow_4f040c69fbe8d7b2e50ca31bd5455a8e) (and (HasType (@x1!138 @x0py241) Tm_type) (HasType (@x2!137 @x0py241) (FStar.Pervasives.Native_Tm_refine_4d5241eb6fe198666a8101195bbd4a2a (@x1!138 @x0py241))) (not (HasType (ApplyTT (ApplyTT @x0py241 (@x1!138 @x0py241)) (@x2!137 @x0py241)) (@x1!138 @x0py241)))))) :pattern ((HasTypeZ @x0py241 Tm_arrow_4f040c69fbe8d7b2e50ca31bd5455a8e)) )) :named FStar.Pervasives.Native_interpretation_Tm_arrow_4f040c69fbe8d7b2e50ca31bd5455a8e))
(assert (! (forall ((@x0py242 Term)(@x1py273 Term)) (! (and (or (not (HasTypeZ @x0py242 (Tm_arrow_6d32d43d8787bb16acca18c75ecbe1b1 @x1py273))) (forall ((@x2py199 Term)(@x3py149 Term)) (! (or (not (HasType @x2py199 Tm_type)) (not (HasType @x3py149 (FStar.Pervasives.Native.option @x2py199))) (HasType (ApplyTT (ApplyTT @x0py242 @x2py199) @x3py149) @x1py273)) :pattern ((ApplyTT (ApplyTT @x0py242 @x2py199) @x3py149)) ))) (or (HasTypeZ @x0py242 (Tm_arrow_6d32d43d8787bb16acca18c75ecbe1b1 @x1py273)) (and (HasType (@x2!140 @x1py273 @x0py242) Tm_type) (HasType (@x3!139 @x1py273 @x0py242) (FStar.Pervasives.Native.option (@x2!140 @x1py273 @x0py242))) (not (HasType (ApplyTT (ApplyTT @x0py242 (@x2!140 @x1py273 @x0py242)) (@x3!139 @x1py273 @x0py242)) @x1py273))))) :pattern ((HasTypeZ @x0py242 (Tm_arrow_6d32d43d8787bb16acca18c75ecbe1b1 @x1py273))) )) :named FStar.Pervasives.Native_interpretation_Tm_arrow_6d32d43d8787bb16acca18c75ecbe1b1))
(assert (! (forall ((@x0py243 Term)) (! (and (or (not (HasTypeZ @x0py243 Tm_arrow_6e23aa00e38a92d031af78d42cdf6218)) (forall ((@x1py274 Term)(@x2py200 Term)(@x3py150 Term)(@x4py109 Term)(@x5py92 Term)(@x6py62 Term)(@x7py44 Term)(@x8py29 Term)(@x9py24 Term)(@x10py18 Term)(@x11py17 Term)(@x12py15 Term)) (! (or (HasType (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT @x0py243 @x1py274) @x2py200) @x3py150) @x4py109) @x5py92) @x6py62) @x7py44) @x8py29) @x9py24) @x10py18) @x11py17) @x12py15) (FStar.Pervasives.Native.tuple6 @x1py274 @x2py200 @x3py150 @x4py109 @x5py92 @x6py62)) (not (HasType @x1py274 Tm_type)) (not (HasType @x2py200 Tm_type)) (not (HasType @x3py150 Tm_type)) (not (HasType @x4py109 Tm_type)) (not (HasType @x5py92 Tm_type)) (not (HasType @x6py62 Tm_type)) (not (HasType @x7py44 @x1py274)) (not (HasType @x8py29 @x2py200)) (not (HasType @x9py24 @x3py150)) (not (HasType @x10py18 @x4py109)) (not (HasType @x11py17 @x5py92)) (not (HasType @x12py15 @x6py62))) :pattern ((ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT @x0py243 @x1py274) @x2py200) @x3py150) @x4py109) @x5py92) @x6py62) @x7py44) @x8py29) @x9py24) @x10py18) @x11py17) @x12py15)) ))) (or (HasTypeZ @x0py243 Tm_arrow_6e23aa00e38a92d031af78d42cdf6218) (and (HasType (@x1!152 @x0py243) Tm_type) (HasType (@x2!151 @x0py243) Tm_type) (HasType (@x3!150 @x0py243) Tm_type) (HasType (@x4!149 @x0py243) Tm_type) (HasType (@x5!148 @x0py243) Tm_type) (HasType (@x6!147 @x0py243) Tm_type) (HasType (@x7!146 @x0py243) (@x1!152 @x0py243)) (HasType (@x8!145 @x0py243) (@x2!151 @x0py243)) (HasType (@x9!144 @x0py243) (@x3!150 @x0py243)) (HasType (@x10!143 @x0py243) (@x4!149 @x0py243)) (HasType (@x11!142 @x0py243) (@x5!148 @x0py243)) (HasType (@x12!141 @x0py243) (@x6!147 @x0py243)) (not (HasType (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT @x0py243 (@x1!152 @x0py243)) (@x2!151 @x0py243)) (@x3!150 @x0py243)) (@x4!149 @x0py243)) (@x5!148 @x0py243)) (@x6!147 @x0py243)) (@x7!146 @x0py243)) (@x8!145 @x0py243)) (@x9!144 @x0py243)) (@x10!143 @x0py243)) (@x11!142 @x0py243)) (@x12!141 @x0py243)) (FStar.Pervasives.Native.tuple6 (@x1!152 @x0py243) (@x2!151 @x0py243) (@x3!150 @x0py243) (@x4!149 @x0py243) (@x5!148 @x0py243) (@x6!147 @x0py243))))))) :pattern ((HasTypeZ @x0py243 Tm_arrow_6e23aa00e38a92d031af78d42cdf6218)) )) :named FStar.Pervasives.Native_interpretation_Tm_arrow_6e23aa00e38a92d031af78d42cdf6218))
(assert (! (forall ((@x0py244 Term)) (! (and (or (not (HasTypeZ @x0py244 Tm_arrow_7d790bb96aadc2828cd88ef5143114e0)) (forall ((@x1py275 Term)(@x2py201 Term)(@x3py151 Term)(@x4py110 Term)(@x5py93 Term)(@x6py63 Term)(@x7py45 Term)) (! (or (not (HasType @x7py45 (FStar.Pervasives.Native.tuple6 @x1py275 @x2py201 @x3py151 @x4py110 @x5py93 @x6py63))) (HasType (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT @x0py244 @x1py275) @x2py201) @x3py151) @x4py110) @x5py93) @x6py63) @x7py45) @x3py151) (not (HasType @x5py93 Tm_type)) (not (HasType @x3py151 Tm_type)) (not (HasType @x1py275 Tm_type)) (not (HasType @x2py201 Tm_type)) (not (HasType @x4py110 Tm_type)) (not (HasType @x6py63 Tm_type))) :pattern ((ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT @x0py244 @x1py275) @x2py201) @x3py151) @x4py110) @x5py93) @x6py63) @x7py45)) ))) (or (HasTypeZ @x0py244 Tm_arrow_7d790bb96aadc2828cd88ef5143114e0) (and (HasType (@x1!159 @x0py244) Tm_type) (HasType (@x2!158 @x0py244) Tm_type) (HasType (@x3!157 @x0py244) Tm_type) (HasType (@x4!156 @x0py244) Tm_type) (HasType (@x5!155 @x0py244) Tm_type) (HasType (@x6!154 @x0py244) Tm_type) (HasType (@x7!153 @x0py244) (FStar.Pervasives.Native.tuple6 (@x1!159 @x0py244) (@x2!158 @x0py244) (@x3!157 @x0py244) (@x4!156 @x0py244) (@x5!155 @x0py244) (@x6!154 @x0py244))) (not (HasType (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT @x0py244 (@x1!159 @x0py244)) (@x2!158 @x0py244)) (@x3!157 @x0py244)) (@x4!156 @x0py244)) (@x5!155 @x0py244)) (@x6!154 @x0py244)) (@x7!153 @x0py244)) (@x3!157 @x0py244)))))) :pattern ((HasTypeZ @x0py244 Tm_arrow_7d790bb96aadc2828cd88ef5143114e0)) )) :named FStar.Pervasives.Native_interpretation_Tm_arrow_7d790bb96aadc2828cd88ef5143114e0))
(assert (! (forall ((@x0py245 Term)) (! (and (or (not (HasTypeZ @x0py245 Tm_arrow_7fe3e7847982dd1674bac902db1b25d6)) (forall ((@x1py276 Term)(@x2py202 Term)(@x3py152 Term)) (! (or (not (HasType @x1py276 Tm_type)) (HasType (ApplyTT (ApplyTT (ApplyTT @x0py245 @x1py276) @x2py202) @x3py152) @x1py276) (not (HasType @x3py152 (FStar.Pervasives.Native.tuple2 @x1py276 @x2py202))) (not (HasType @x2py202 Tm_type))) :pattern ((ApplyTT (ApplyTT (ApplyTT @x0py245 @x1py276) @x2py202) @x3py152)) ))) (or (HasTypeZ @x0py245 Tm_arrow_7fe3e7847982dd1674bac902db1b25d6) (and (HasType (@x1!162 @x0py245) Tm_type) (HasType (@x2!161 @x0py245) Tm_type) (HasType (@x3!160 @x0py245) (FStar.Pervasives.Native.tuple2 (@x1!162 @x0py245) (@x2!161 @x0py245))) (not (HasType (ApplyTT (ApplyTT (ApplyTT @x0py245 (@x1!162 @x0py245)) (@x2!161 @x0py245)) (@x3!160 @x0py245)) (@x1!162 @x0py245)))))) :pattern ((HasTypeZ @x0py245 Tm_arrow_7fe3e7847982dd1674bac902db1b25d6)) )) :named FStar.Pervasives.Native_interpretation_Tm_arrow_7fe3e7847982dd1674bac902db1b25d6))
(assert (! (forall ((@x0py246 Term)) (! (and (or (not (HasTypeZ @x0py246 Tm_arrow_9a2d52aef28944ddfbe3d4af8c624d0b)) (forall ((@x1py277 Term)(@x2py203 Term)(@x3py153 Term)(@x4py111 Term)(@x5py94 Term)(@x6py64 Term)(@x7py46 Term)(@x8py30 Term)) (! (or (not (HasType @x2py203 Tm_type)) (not (HasType @x1py277 Tm_type)) (not (HasType @x3py153 Tm_type)) (not (HasType @x4py111 Tm_type)) (not (HasType @x5py94 Tm_type)) (not (HasType @x6py64 Tm_type)) (not (HasType @x7py46 Tm_type)) (HasType (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT @x0py246 @x1py277) @x2py203) @x3py153) @x4py111) @x5py94) @x6py64) @x7py46) @x8py30) @x4py111) (not (HasType @x8py30 (FStar.Pervasives.Native.tuple7 @x1py277 @x2py203 @x3py153 @x4py111 @x5py94 @x6py64 @x7py46)))) :pattern ((ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT @x0py246 @x1py277) @x2py203) @x3py153) @x4py111) @x5py94) @x6py64) @x7py46) @x8py30)) ))) (or (HasTypeZ @x0py246 Tm_arrow_9a2d52aef28944ddfbe3d4af8c624d0b) (and (HasType (@x1!170 @x0py246) Tm_type) (HasType (@x2!169 @x0py246) Tm_type) (HasType (@x3!168 @x0py246) Tm_type) (HasType (@x4!167 @x0py246) Tm_type) (HasType (@x5!166 @x0py246) Tm_type) (HasType (@x6!165 @x0py246) Tm_type) (HasType (@x7!164 @x0py246) Tm_type) (HasType (@x8!163 @x0py246) (FStar.Pervasives.Native.tuple7 (@x1!170 @x0py246) (@x2!169 @x0py246) (@x3!168 @x0py246) (@x4!167 @x0py246) (@x5!166 @x0py246) (@x6!165 @x0py246) (@x7!164 @x0py246))) (not (HasType (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT @x0py246 (@x1!170 @x0py246)) (@x2!169 @x0py246)) (@x3!168 @x0py246)) (@x4!167 @x0py246)) (@x5!166 @x0py246)) (@x6!165 @x0py246)) (@x7!164 @x0py246)) (@x8!163 @x0py246)) (@x4!167 @x0py246)))))) :pattern ((HasTypeZ @x0py246 Tm_arrow_9a2d52aef28944ddfbe3d4af8c624d0b)) )) :named FStar.Pervasives.Native_interpretation_Tm_arrow_9a2d52aef28944ddfbe3d4af8c624d0b))
(assert (! (forall ((@x0py247 Term)) (! (and (or (not (HasTypeZ @x0py247 Tm_arrow_9ac1fc4819cbc364e77988b8605dfbd2)) (forall ((@x1py278 Term)(@x2py204 Term)(@x3py154 Term)(@x4py112 Term)(@x5py95 Term)(@x6py65 Term)(@x7py47 Term)) (! (or (not (HasType @x5py95 Tm_type)) (HasType (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT @x0py247 @x1py278) @x2py204) @x3py154) @x4py112) @x5py95) @x6py65) @x7py47) @x4py112) (not (HasType @x6py65 Tm_type)) (not (HasType @x4py112 Tm_type)) (not (HasType @x7py47 (FStar.Pervasives.Native.tuple6 @x1py278 @x2py204 @x3py154 @x4py112 @x5py95 @x6py65))) (not (HasType @x1py278 Tm_type)) (not (HasType @x2py204 Tm_type)) (not (HasType @x3py154 Tm_type))) :pattern ((ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT @x0py247 @x1py278) @x2py204) @x3py154) @x4py112) @x5py95) @x6py65) @x7py47)) ))) (or (HasTypeZ @x0py247 Tm_arrow_9ac1fc4819cbc364e77988b8605dfbd2) (and (HasType (@x1!177 @x0py247) Tm_type) (HasType (@x2!176 @x0py247) Tm_type) (HasType (@x3!175 @x0py247) Tm_type) (HasType (@x4!174 @x0py247) Tm_type) (HasType (@x5!173 @x0py247) Tm_type) (HasType (@x6!172 @x0py247) Tm_type) (HasType (@x7!171 @x0py247) (FStar.Pervasives.Native.tuple6 (@x1!177 @x0py247) (@x2!176 @x0py247) (@x3!175 @x0py247) (@x4!174 @x0py247) (@x5!173 @x0py247) (@x6!172 @x0py247))) (not (HasType (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT @x0py247 (@x1!177 @x0py247)) (@x2!176 @x0py247)) (@x3!175 @x0py247)) (@x4!174 @x0py247)) (@x5!173 @x0py247)) (@x6!172 @x0py247)) (@x7!171 @x0py247)) (@x4!174 @x0py247)))))) :pattern ((HasTypeZ @x0py247 Tm_arrow_9ac1fc4819cbc364e77988b8605dfbd2)) )) :named FStar.Pervasives.Native_interpretation_Tm_arrow_9ac1fc4819cbc364e77988b8605dfbd2))
(assert (! (forall ((@x0py248 Term)) (! (and (or (not (HasTypeZ @x0py248 Tm_arrow_9c915ca115c32a0e42eafce253bfd2cd)) (forall ((@x1py279 Term)(@x2py205 Term)) (! (or (not (HasType @x2py205 @x1py279)) (HasType (ApplyTT (ApplyTT @x0py248 @x1py279) @x2py205) (FStar.Pervasives.Native_Tm_refine_2fbd657fe85bcb2423f9c7e5f9b3bcb5 @x1py279 @x2py205)) (not (HasType @x1py279 Tm_type))) :pattern ((ApplyTT (ApplyTT @x0py248 @x1py279) @x2py205)) ))) (or (HasTypeZ @x0py248 Tm_arrow_9c915ca115c32a0e42eafce253bfd2cd) (and (HasType (@x1!179 @x0py248) Tm_type) (HasType (@x2!178 @x0py248) (@x1!179 @x0py248)) (not (HasType (ApplyTT (ApplyTT @x0py248 (@x1!179 @x0py248)) (@x2!178 @x0py248)) (FStar.Pervasives.Native_Tm_refine_2fbd657fe85bcb2423f9c7e5f9b3bcb5 (@x1!179 @x0py248) (@x2!178 @x0py248))))))) :pattern ((HasTypeZ @x0py248 Tm_arrow_9c915ca115c32a0e42eafce253bfd2cd)) )) :named FStar.Pervasives.Native_interpretation_Tm_arrow_9c915ca115c32a0e42eafce253bfd2cd))
(assert (! (forall ((@x0py249 Term)) (! (and (or (not (HasTypeZ @x0py249 Tm_arrow_15e10e26df1554e12524dd8fbe3e2f20)) (forall ((@x1py280 Term)(@x2py206 Term)(@x3py155 Term)(@x4py113 Term)(@x5py96 Term)(@x6py66 Term)(@x7py48 Term)) (! (or (not (HasType @x3py155 Tm_type)) (not (HasType @x5py96 Tm_type)) (not (HasType @x1py280 Tm_type)) (not (HasType @x2py206 Tm_type)) (not (HasType @x4py113 Tm_type)) (not (HasType @x6py66 Tm_type)) (HasType (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT @x0py249 @x1py280) @x2py206) @x3py155) @x4py113) @x5py96) @x6py66) @x7py48) @x2py206) (not (HasType @x7py48 (FStar.Pervasives.Native.tuple6 @x1py280 @x2py206 @x3py155 @x4py113 @x5py96 @x6py66)))) :pattern ((ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT @x0py249 @x1py280) @x2py206) @x3py155) @x4py113) @x5py96) @x6py66) @x7py48)) ))) (or (HasTypeZ @x0py249 Tm_arrow_15e10e26df1554e12524dd8fbe3e2f20) (and (HasType (@x1!186 @x0py249) Tm_type) (HasType (@x2!185 @x0py249) Tm_type) (HasType (@x3!184 @x0py249) Tm_type) (HasType (@x4!183 @x0py249) Tm_type) (HasType (@x5!182 @x0py249) Tm_type) (HasType (@x6!181 @x0py249) Tm_type) (HasType (@x7!180 @x0py249) (FStar.Pervasives.Native.tuple6 (@x1!186 @x0py249) (@x2!185 @x0py249) (@x3!184 @x0py249) (@x4!183 @x0py249) (@x5!182 @x0py249) (@x6!181 @x0py249))) (not (HasType (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT @x0py249 (@x1!186 @x0py249)) (@x2!185 @x0py249)) (@x3!184 @x0py249)) (@x4!183 @x0py249)) (@x5!182 @x0py249)) (@x6!181 @x0py249)) (@x7!180 @x0py249)) (@x2!185 @x0py249)))))) :pattern ((HasTypeZ @x0py249 Tm_arrow_15e10e26df1554e12524dd8fbe3e2f20)) )) :named FStar.Pervasives.Native_interpretation_Tm_arrow_15e10e26df1554e12524dd8fbe3e2f20))
(assert (! (forall ((@x0py250 Term)(@x1py281 Term)) (! (and (or (not (HasTypeZ @x0py250 (Tm_arrow_37a65a1a1bca77204cc44fddae45a654 @x1py281))) (forall ((@x2py207 Term)) (! (or (not (Valid @x2py207)) (not (HasType @x2py207 Tm_type)) (HasType (ApplyTT @x0py250 @x2py207) (Prims_Tm_refine_8d65e998a07dd53ec478e27017d9dba5 @x1py281 @x2py207))) :pattern ((ApplyTT @x0py250 @x2py207)) ))) (or (HasTypeZ @x0py250 (Tm_arrow_37a65a1a1bca77204cc44fddae45a654 @x1py281)) (and (Valid (@x2!187 @x1py281 @x0py250)) (HasType (@x2!187 @x1py281 @x0py250) Tm_type) (not (HasType (ApplyTT @x0py250 (@x2!187 @x1py281 @x0py250)) (Prims_Tm_refine_8d65e998a07dd53ec478e27017d9dba5 @x1py281 (@x2!187 @x1py281 @x0py250))))))) :pattern ((HasTypeZ @x0py250 (Tm_arrow_37a65a1a1bca77204cc44fddae45a654 @x1py281))) )) :named FStar.Pervasives.Native_interpretation_Tm_arrow_37a65a1a1bca77204cc44fddae45a654))
(assert (! (forall ((@x0py251 Term)) (! (and (or (not (HasTypeZ @x0py251 Tm_arrow_45ca9c2b9710ead839b1f3bf7ef7a305)) (forall ((@x1py282 Term)(@x2py208 Term)(@x3py156 Term)(@x4py114 Term)(@x5py97 Term)(@x6py67 Term)(@x7py49 Term)) (! (or (not (HasType @x2py208 Tm_type)) (not (HasType @x4py114 Tm_type)) (not (HasType @x3py156 Tm_type)) (not (HasType @x1py282 Tm_type)) (HasType (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT @x0py251 @x1py282) @x2py208) @x3py156) @x4py114) @x5py97) @x6py67) @x7py49) @x6py67) (not (HasType @x5py97 Tm_type)) (not (HasType @x6py67 Tm_type)) (not (HasType @x7py49 (FStar.Pervasives.Native.tuple6 @x1py282 @x2py208 @x3py156 @x4py114 @x5py97 @x6py67)))) :pattern ((ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT @x0py251 @x1py282) @x2py208) @x3py156) @x4py114) @x5py97) @x6py67) @x7py49)) ))) (or (HasTypeZ @x0py251 Tm_arrow_45ca9c2b9710ead839b1f3bf7ef7a305) (and (HasType (@x1!194 @x0py251) Tm_type) (HasType (@x2!193 @x0py251) Tm_type) (HasType (@x3!192 @x0py251) Tm_type) (HasType (@x4!191 @x0py251) Tm_type) (HasType (@x5!190 @x0py251) Tm_type) (HasType (@x6!189 @x0py251) Tm_type) (HasType (@x7!188 @x0py251) (FStar.Pervasives.Native.tuple6 (@x1!194 @x0py251) (@x2!193 @x0py251) (@x3!192 @x0py251) (@x4!191 @x0py251) (@x5!190 @x0py251) (@x6!189 @x0py251))) (not (HasType (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT @x0py251 (@x1!194 @x0py251)) (@x2!193 @x0py251)) (@x3!192 @x0py251)) (@x4!191 @x0py251)) (@x5!190 @x0py251)) (@x6!189 @x0py251)) (@x7!188 @x0py251)) (@x6!189 @x0py251)))))) :pattern ((HasTypeZ @x0py251 Tm_arrow_45ca9c2b9710ead839b1f3bf7ef7a305)) )) :named FStar.Pervasives.Native_interpretation_Tm_arrow_45ca9c2b9710ead839b1f3bf7ef7a305))
(assert (! (forall ((@x0py252 Term)(@x1py283 Term)(@x2py209 Term)) (! (and (or (not (HasTypeZ @x0py252 (Tm_arrow_52c7e04c1aef70d52ef99d2cc9753aed @x1py283 @x2py209))) (forall ((@x3py157 Term)) (! (or (not (HasType @x3py157 (Prims.list @x2py209))) (HasType (ApplyTT @x0py252 @x3py157) @x1py283)) :pattern ((ApplyTT @x0py252 @x3py157)) ))) (or (HasTypeZ @x0py252 (Tm_arrow_52c7e04c1aef70d52ef99d2cc9753aed @x1py283 @x2py209)) (and (HasType (@x3!195 @x2py209 @x1py283 @x0py252) (Prims.list @x2py209)) (not (HasType (ApplyTT @x0py252 (@x3!195 @x2py209 @x1py283 @x0py252)) @x1py283))))) :pattern ((HasTypeZ @x0py252 (Tm_arrow_52c7e04c1aef70d52ef99d2cc9753aed @x1py283 @x2py209))) )) :named FStar.Pervasives.Native_interpretation_Tm_arrow_52c7e04c1aef70d52ef99d2cc9753aed))
(assert (! (forall ((@x0py253 Term)(@x1py284 Term)(@x2py210 Term)) (! (and (or (not (HasTypeZ @x0py253 (Tm_arrow_52d29796e7fa32d5b27962b2b725e507 @x1py284 @x2py210))) (forall ((@x3py158 Term)) (! (or (not (HasType @x3py158 (FStar.Pervasives.Native_Tm_refine_40cfb467dd44d40edcf16599ec909847 @x2py210))) (HasType (ApplyTT @x0py253 @x3py158) (Prims.list @x1py284))) :pattern ((ApplyTT @x0py253 @x3py158)) ))) (or (HasTypeZ @x0py253 (Tm_arrow_52d29796e7fa32d5b27962b2b725e507 @x1py284 @x2py210)) (and (HasType (@x3!196 @x2py210 @x1py284 @x0py253) (FStar.Pervasives.Native_Tm_refine_40cfb467dd44d40edcf16599ec909847 @x2py210)) (not (HasType (ApplyTT @x0py253 (@x3!196 @x2py210 @x1py284 @x0py253)) (Prims.list @x1py284)))))) :pattern ((HasTypeZ @x0py253 (Tm_arrow_52d29796e7fa32d5b27962b2b725e507 @x1py284 @x2py210))) )) :named FStar.Pervasives.Native_interpretation_Tm_arrow_52d29796e7fa32d5b27962b2b725e507))
(assert (! (forall ((@x0py254 Term)) (! (and (or (not (HasTypeZ @x0py254 Tm_arrow_57fa2a22c6acb92aec36a98d388a288a)) (forall ((@x1py285 Term)(@x2py211 Term)(@x3py159 Term)(@x4py115 Term)(@x5py98 Term)(@x6py68 Term)(@x7py50 Term)(@x8py31 Term)) (! (or (HasType (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT @x0py254 @x1py285) @x2py211) @x3py159) @x4py115) @x5py98) @x6py68) @x7py50) @x8py31) (FStar.Pervasives.Native.tuple4 @x1py285 @x2py211 @x3py159 @x4py115)) (not (HasType @x1py285 Tm_type)) (not (HasType @x8py31 @x4py115)) (not (HasType @x2py211 Tm_type)) (not (HasType @x3py159 Tm_type)) (not (HasType @x4py115 Tm_type)) (not (HasType @x5py98 @x1py285)) (not (HasType @x6py68 @x2py211)) (not (HasType @x7py50 @x3py159))) :pattern ((ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT @x0py254 @x1py285) @x2py211) @x3py159) @x4py115) @x5py98) @x6py68) @x7py50) @x8py31)) ))) (or (HasTypeZ @x0py254 Tm_arrow_57fa2a22c6acb92aec36a98d388a288a) (and (HasType (@x1!204 @x0py254) Tm_type) (HasType (@x2!203 @x0py254) Tm_type) (HasType (@x3!202 @x0py254) Tm_type) (HasType (@x4!201 @x0py254) Tm_type) (HasType (@x5!200 @x0py254) (@x1!204 @x0py254)) (HasType (@x6!199 @x0py254) (@x2!203 @x0py254)) (HasType (@x7!198 @x0py254) (@x3!202 @x0py254)) (HasType (@x8!197 @x0py254) (@x4!201 @x0py254)) (not (HasType (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT @x0py254 (@x1!204 @x0py254)) (@x2!203 @x0py254)) (@x3!202 @x0py254)) (@x4!201 @x0py254)) (@x5!200 @x0py254)) (@x6!199 @x0py254)) (@x7!198 @x0py254)) (@x8!197 @x0py254)) (FStar.Pervasives.Native.tuple4 (@x1!204 @x0py254) (@x2!203 @x0py254) (@x3!202 @x0py254) (@x4!201 @x0py254))))))) :pattern ((HasTypeZ @x0py254 Tm_arrow_57fa2a22c6acb92aec36a98d388a288a)) )) :named FStar.Pervasives.Native_interpretation_Tm_arrow_57fa2a22c6acb92aec36a98d388a288a))
(assert (! (forall ((@x0py255 Term)(@x1py286 Term)) (! (and (or (not (HasTypeZ @x0py255 (Tm_arrow_071cdac364befd9b3a1ef15c982380ca @x1py286))) (forall ((@x2py212 Term)(@x3py160 Term)(@x4py116 Term)(@x5py99 Term)(@x6py69 Term)(@x7py51 Term)) (! (or (HasType (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT @x0py255 @x2py212) @x3py160) @x4py116) @x5py99) @x6py69) @x7py51) @x1py286) (not (HasType @x7py51 (FStar.Pervasives.Native.tuple5 @x2py212 @x3py160 @x4py116 @x5py99 @x6py69))) (not (HasType @x5py99 Tm_type)) (not (HasType @x3py160 Tm_type)) (not (HasType @x2py212 Tm_type)) (not (HasType @x4py116 Tm_type)) (not (HasType @x6py69 Tm_type))) :pattern ((ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT @x0py255 @x2py212) @x3py160) @x4py116) @x5py99) @x6py69) @x7py51)) ))) (or (HasTypeZ @x0py255 (Tm_arrow_071cdac364befd9b3a1ef15c982380ca @x1py286)) (and (HasType (@x2!210 @x1py286 @x0py255) Tm_type) (HasType (@x3!209 @x1py286 @x0py255) Tm_type) (HasType (@x4!208 @x1py286 @x0py255) Tm_type) (HasType (@x5!207 @x1py286 @x0py255) Tm_type) (HasType (@x6!206 @x1py286 @x0py255) Tm_type) (HasType (@x7!205 @x1py286 @x0py255) (FStar.Pervasives.Native.tuple5 (@x2!210 @x1py286 @x0py255) (@x3!209 @x1py286 @x0py255) (@x4!208 @x1py286 @x0py255) (@x5!207 @x1py286 @x0py255) (@x6!206 @x1py286 @x0py255))) (not (HasType (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT @x0py255 (@x2!210 @x1py286 @x0py255)) (@x3!209 @x1py286 @x0py255)) (@x4!208 @x1py286 @x0py255)) (@x5!207 @x1py286 @x0py255)) (@x6!206 @x1py286 @x0py255)) (@x7!205 @x1py286 @x0py255)) @x1py286))))) :pattern ((HasTypeZ @x0py255 (Tm_arrow_071cdac364befd9b3a1ef15c982380ca @x1py286))) )) :named FStar.Pervasives.Native_interpretation_Tm_arrow_071cdac364befd9b3a1ef15c982380ca))
(assert (! (forall ((@x0py256 Term)(@x1py287 Term)) (! (and (or (not (HasTypeZ @x0py256 (Tm_arrow_81b181f0a50be9c359f1e3afcab46996 @x1py287))) (forall ((@x2py213 Term)(@x3py161 Term)(@x4py117 Term)(@x5py100 Term)) (! (or (not (HasType @x3py161 Tm_type)) (HasType (ApplyTT (ApplyTT (ApplyTT (ApplyTT @x0py256 @x2py213) @x3py161) @x4py117) @x5py100) @x1py287) (not (HasType @x5py100 (FStar.Pervasives.Native.tuple3 @x2py213 @x3py161 @x4py117))) (not (HasType @x2py213 Tm_type)) (not (HasType @x4py117 Tm_type))) :pattern ((ApplyTT (ApplyTT (ApplyTT (ApplyTT @x0py256 @x2py213) @x3py161) @x4py117) @x5py100)) ))) (or (HasTypeZ @x0py256 (Tm_arrow_81b181f0a50be9c359f1e3afcab46996 @x1py287)) (and (HasType (@x2!214 @x1py287 @x0py256) Tm_type) (HasType (@x3!213 @x1py287 @x0py256) Tm_type) (HasType (@x4!212 @x1py287 @x0py256) Tm_type) (HasType (@x5!211 @x1py287 @x0py256) (FStar.Pervasives.Native.tuple3 (@x2!214 @x1py287 @x0py256) (@x3!213 @x1py287 @x0py256) (@x4!212 @x1py287 @x0py256))) (not (HasType (ApplyTT (ApplyTT (ApplyTT (ApplyTT @x0py256 (@x2!214 @x1py287 @x0py256)) (@x3!213 @x1py287 @x0py256)) (@x4!212 @x1py287 @x0py256)) (@x5!211 @x1py287 @x0py256)) @x1py287))))) :pattern ((HasTypeZ @x0py256 (Tm_arrow_81b181f0a50be9c359f1e3afcab46996 @x1py287))) )) :named FStar.Pervasives.Native_interpretation_Tm_arrow_81b181f0a50be9c359f1e3afcab46996))
(assert (! (forall ((@x0py257 Term)) (! (and (or (not (HasTypeZ @x0py257 Tm_arrow_85e89735c9356e795787b0e5b5a2f363)) (forall ((@x1py288 Term)(@x2py214 Term)(@x3py162 Term)(@x4py118 Term)(@x5py101 Term)(@x6py70 Term)(@x7py52 Term)(@x8py32 Term)) (! (or (not (HasType @x5py101 Tm_type)) (not (HasType @x7py52 Tm_type)) (HasType (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT @x0py257 @x1py288) @x2py214) @x3py162) @x4py118) @x5py101) @x6py70) @x7py52) @x8py32) @x7py52) (not (HasType @x6py70 Tm_type)) (not (HasType @x4py118 Tm_type)) (not (HasType @x8py32 (FStar.Pervasives.Native.tuple7 @x1py288 @x2py214 @x3py162 @x4py118 @x5py101 @x6py70 @x7py52))) (not (HasType @x2py214 Tm_type)) (not (HasType @x1py288 Tm_type)) (not (HasType @x3py162 Tm_type))) :pattern ((ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT @x0py257 @x1py288) @x2py214) @x3py162) @x4py118) @x5py101) @x6py70) @x7py52) @x8py32)) ))) (or (HasTypeZ @x0py257 Tm_arrow_85e89735c9356e795787b0e5b5a2f363) (and (HasType (@x1!222 @x0py257) Tm_type) (HasType (@x2!221 @x0py257) Tm_type) (HasType (@x3!220 @x0py257) Tm_type) (HasType (@x4!219 @x0py257) Tm_type) (HasType (@x5!218 @x0py257) Tm_type) (HasType (@x6!217 @x0py257) Tm_type) (HasType (@x7!216 @x0py257) Tm_type) (HasType (@x8!215 @x0py257) (FStar.Pervasives.Native.tuple7 (@x1!222 @x0py257) (@x2!221 @x0py257) (@x3!220 @x0py257) (@x4!219 @x0py257) (@x5!218 @x0py257) (@x6!217 @x0py257) (@x7!216 @x0py257))) (not (HasType (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT @x0py257 (@x1!222 @x0py257)) (@x2!221 @x0py257)) (@x3!220 @x0py257)) (@x4!219 @x0py257)) (@x5!218 @x0py257)) (@x6!217 @x0py257)) (@x7!216 @x0py257)) (@x8!215 @x0py257)) (@x7!216 @x0py257)))))) :pattern ((HasTypeZ @x0py257 Tm_arrow_85e89735c9356e795787b0e5b5a2f363)) )) :named FStar.Pervasives.Native_interpretation_Tm_arrow_85e89735c9356e795787b0e5b5a2f363))
(assert (! (forall ((@x0py258 Term)(@x1py289 Term)) (! (and (or (not (HasTypeZ @x0py258 (Tm_arrow_302ec1d59a0c160d8b944503f142e361 @x1py289))) (forall ((@x2py215 Term)(@x3py163 Term)(@x4py119 Term)(@x5py102 Term)(@x6py71 Term)(@x7py53 Term)(@x8py33 Term)(@x9py25 Term)(@x10py19 Term)) (! (or (not (HasType @x7py53 Tm_type)) (not (HasType @x9py25 Tm_type)) (not (HasType @x4py119 Tm_type)) (not (HasType @x5py102 Tm_type)) (not (HasType @x6py71 Tm_type)) (not (HasType @x8py33 Tm_type)) (not (HasType @x10py19 (FStar.Pervasives.Native.tuple8 @x2py215 @x3py163 @x4py119 @x5py102 @x6py71 @x7py53 @x8py33 @x9py25))) (HasType (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT @x0py258 @x2py215) @x3py163) @x4py119) @x5py102) @x6py71) @x7py53) @x8py33) @x9py25) @x10py19) @x1py289) (not (HasType @x2py215 Tm_type)) (not (HasType @x3py163 Tm_type))) :pattern ((ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT @x0py258 @x2py215) @x3py163) @x4py119) @x5py102) @x6py71) @x7py53) @x8py33) @x9py25) @x10py19)) ))) (or (HasTypeZ @x0py258 (Tm_arrow_302ec1d59a0c160d8b944503f142e361 @x1py289)) (and (HasType (@x2!231 @x1py289 @x0py258) Tm_type) (HasType (@x3!230 @x1py289 @x0py258) Tm_type) (HasType (@x4!229 @x1py289 @x0py258) Tm_type) (HasType (@x5!228 @x1py289 @x0py258) Tm_type) (HasType (@x6!227 @x1py289 @x0py258) Tm_type) (HasType (@x7!226 @x1py289 @x0py258) Tm_type) (HasType (@x8!225 @x1py289 @x0py258) Tm_type) (HasType (@x9!224 @x1py289 @x0py258) Tm_type) (HasType (@x10!223 @x1py289 @x0py258) (FStar.Pervasives.Native.tuple8 (@x2!231 @x1py289 @x0py258) (@x3!230 @x1py289 @x0py258) (@x4!229 @x1py289 @x0py258) (@x5!228 @x1py289 @x0py258) (@x6!227 @x1py289 @x0py258) (@x7!226 @x1py289 @x0py258) (@x8!225 @x1py289 @x0py258) (@x9!224 @x1py289 @x0py258))) (not (HasType (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT @x0py258 (@x2!231 @x1py289 @x0py258)) (@x3!230 @x1py289 @x0py258)) (@x4!229 @x1py289 @x0py258)) (@x5!228 @x1py289 @x0py258)) (@x6!227 @x1py289 @x0py258)) (@x7!226 @x1py289 @x0py258)) (@x8!225 @x1py289 @x0py258)) (@x9!224 @x1py289 @x0py258)) (@x10!223 @x1py289 @x0py258)) @x1py289))))) :pattern ((HasTypeZ @x0py258 (Tm_arrow_302ec1d59a0c160d8b944503f142e361 @x1py289))) )) :named FStar.Pervasives.Native_interpretation_Tm_arrow_302ec1d59a0c160d8b944503f142e361))
(assert (! (forall ((@x0py259 Term)(@x1py290 Term)) (! (and (or (not (HasTypeZ @x0py259 (Tm_arrow_471e47868c0f16aa720099399b21873e @x1py290))) (forall ((@x2py216 Term)(@x3py164 Term)(@x4py120 Term)(@x5py103 Term)(@x6py72 Term)) (! (or (HasType (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT @x0py259 @x2py216) @x3py164) @x4py120) @x5py103) @x6py72) @x1py290) (not (HasType @x2py216 Tm_type)) (not (HasType @x3py164 Tm_type)) (not (HasType @x4py120 Tm_type)) (not (HasType @x5py103 Tm_type)) (not (HasType @x6py72 (FStar.Pervasives.Native.tuple4 @x2py216 @x3py164 @x4py120 @x5py103)))) :pattern ((ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT @x0py259 @x2py216) @x3py164) @x4py120) @x5py103) @x6py72)) ))) (or (HasTypeZ @x0py259 (Tm_arrow_471e47868c0f16aa720099399b21873e @x1py290)) (and (HasType (@x2!236 @x1py290 @x0py259) Tm_type) (HasType (@x3!235 @x1py290 @x0py259) Tm_type) (HasType (@x4!234 @x1py290 @x0py259) Tm_type) (HasType (@x5!233 @x1py290 @x0py259) Tm_type) (HasType (@x6!232 @x1py290 @x0py259) (FStar.Pervasives.Native.tuple4 (@x2!236 @x1py290 @x0py259) (@x3!235 @x1py290 @x0py259) (@x4!234 @x1py290 @x0py259) (@x5!233 @x1py290 @x0py259))) (not (HasType (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT @x0py259 (@x2!236 @x1py290 @x0py259)) (@x3!235 @x1py290 @x0py259)) (@x4!234 @x1py290 @x0py259)) (@x5!233 @x1py290 @x0py259)) (@x6!232 @x1py290 @x0py259)) @x1py290))))) :pattern ((HasTypeZ @x0py259 (Tm_arrow_471e47868c0f16aa720099399b21873e @x1py290))) )) :named FStar.Pervasives.Native_interpretation_Tm_arrow_471e47868c0f16aa720099399b21873e))
(assert (! (forall ((@x0py260 Term)) (! (and (or (not (HasTypeZ @x0py260 Tm_arrow_530e081bbbd964966a402b7e14fb9d69)) (forall ((@x1py291 Term)(@x2py217 Term)(@x3py165 Term)(@x4py121 Term)) (! (or (HasType (ApplyTT (ApplyTT (ApplyTT (ApplyTT @x0py260 @x1py291) @x2py217) @x3py165) @x4py121) @x1py291) (not (HasType @x2py217 Tm_type)) (not (HasType @x4py121 (FStar.Pervasives.Native.tuple3 @x1py291 @x2py217 @x3py165))) (not (HasType @x1py291 Tm_type)) (not (HasType @x3py165 Tm_type))) :pattern ((ApplyTT (ApplyTT (ApplyTT (ApplyTT @x0py260 @x1py291) @x2py217) @x3py165) @x4py121)) ))) (or (HasTypeZ @x0py260 Tm_arrow_530e081bbbd964966a402b7e14fb9d69) (and (HasType (@x1!240 @x0py260) Tm_type) (HasType (@x2!239 @x0py260) Tm_type) (HasType (@x3!238 @x0py260) Tm_type) (HasType (@x4!237 @x0py260) (FStar.Pervasives.Native.tuple3 (@x1!240 @x0py260) (@x2!239 @x0py260) (@x3!238 @x0py260))) (not (HasType (ApplyTT (ApplyTT (ApplyTT (ApplyTT @x0py260 (@x1!240 @x0py260)) (@x2!239 @x0py260)) (@x3!238 @x0py260)) (@x4!237 @x0py260)) (@x1!240 @x0py260)))))) :pattern ((HasTypeZ @x0py260 Tm_arrow_530e081bbbd964966a402b7e14fb9d69)) )) :named FStar.Pervasives.Native_interpretation_Tm_arrow_530e081bbbd964966a402b7e14fb9d69))
(assert (! (forall ((@x0py261 Term)) (! (and (or (not (HasTypeZ @x0py261 Tm_arrow_879fb9ac6887317b2253fa415d6e297f)) (forall ((@x1py292 Term)(@x2py218 Term)(@x3py166 Term)(@x4py122 Term)(@x5py104 Term)) (! (or (not (HasType @x2py218 Tm_type)) (not (HasType @x1py292 Tm_type)) (not (HasType @x4py122 Tm_type)) (not (HasType @x3py166 Tm_type)) (not (HasType @x5py104 (FStar.Pervasives.Native.tuple4 @x1py292 @x2py218 @x3py166 @x4py122))) (HasType (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT @x0py261 @x1py292) @x2py218) @x3py166) @x4py122) @x5py104) @x3py166)) :pattern ((ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT @x0py261 @x1py292) @x2py218) @x3py166) @x4py122) @x5py104)) ))) (or (HasTypeZ @x0py261 Tm_arrow_879fb9ac6887317b2253fa415d6e297f) (and (HasType (@x1!245 @x0py261) Tm_type) (HasType (@x2!244 @x0py261) Tm_type) (HasType (@x3!243 @x0py261) Tm_type) (HasType (@x4!242 @x0py261) Tm_type) (HasType (@x5!241 @x0py261) (FStar.Pervasives.Native.tuple4 (@x1!245 @x0py261) (@x2!244 @x0py261) (@x3!243 @x0py261) (@x4!242 @x0py261))) (not (HasType (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT @x0py261 (@x1!245 @x0py261)) (@x2!244 @x0py261)) (@x3!243 @x0py261)) (@x4!242 @x0py261)) (@x5!241 @x0py261)) (@x3!243 @x0py261)))))) :pattern ((HasTypeZ @x0py261 Tm_arrow_879fb9ac6887317b2253fa415d6e297f)) )) :named FStar.Pervasives.Native_interpretation_Tm_arrow_879fb9ac6887317b2253fa415d6e297f))
(assert (! (forall ((@x0py262 Term)) (! (and (or (not (HasTypeZ @x0py262 Tm_arrow_959ecc63baf89362269f0a0ccd5668b0)) (forall ((@x1py293 Term)(@x2py219 Term)(@x3py167 Term)(@x4py123 Term)(@x5py105 Term)(@x6py73 Term)(@x7py54 Term)(@x8py34 Term)) (! (or (not (HasType @x4py123 Tm_type)) (HasType (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT @x0py262 @x1py293) @x2py219) @x3py167) @x4py123) @x5py105) @x6py73) @x7py54) @x8py34) @x5py105) (not (HasType @x8py34 (FStar.Pervasives.Native.tuple7 @x1py293 @x2py219 @x3py167 @x4py123 @x5py105 @x6py73 @x7py54))) (not (HasType @x3py167 Tm_type)) (not (HasType @x1py293 Tm_type)) (not (HasType @x2py219 Tm_type)) (not (HasType @x6py73 Tm_type)) (not (HasType @x7py54 Tm_type)) (not (HasType @x5py105 Tm_type))) :pattern ((ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT @x0py262 @x1py293) @x2py219) @x3py167) @x4py123) @x5py105) @x6py73) @x7py54) @x8py34)) ))) (or (HasTypeZ @x0py262 Tm_arrow_959ecc63baf89362269f0a0ccd5668b0) (and (HasType (@x1!253 @x0py262) Tm_type) (HasType (@x2!252 @x0py262) Tm_type) (HasType (@x3!251 @x0py262) Tm_type) (HasType (@x4!250 @x0py262) Tm_type) (HasType (@x5!249 @x0py262) Tm_type) (HasType (@x6!248 @x0py262) Tm_type) (HasType (@x7!247 @x0py262) Tm_type) (HasType (@x8!246 @x0py262) (FStar.Pervasives.Native.tuple7 (@x1!253 @x0py262) (@x2!252 @x0py262) (@x3!251 @x0py262) (@x4!250 @x0py262) (@x5!249 @x0py262) (@x6!248 @x0py262) (@x7!247 @x0py262))) (not (HasType (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT @x0py262 (@x1!253 @x0py262)) (@x2!252 @x0py262)) (@x3!251 @x0py262)) (@x4!250 @x0py262)) (@x5!249 @x0py262)) (@x6!248 @x0py262)) (@x7!247 @x0py262)) (@x8!246 @x0py262)) (@x5!249 @x0py262)))))) :pattern ((HasTypeZ @x0py262 Tm_arrow_959ecc63baf89362269f0a0ccd5668b0)) )) :named FStar.Pervasives.Native_interpretation_Tm_arrow_959ecc63baf89362269f0a0ccd5668b0))
(assert (! (forall ((@x0py263 Term)) (! (and (or (not (HasTypeZ @x0py263 Tm_arrow_3209a7a409ec605c6410051291219438)) (forall ((@x1py294 Term)(@x2py220 Term)(@x3py168 Term)(@x4py124 Term)(@x5py106 Term)(@x6py74 Term)(@x7py55 Term)) (! (or (HasType (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT @x0py263 @x1py294) @x2py220) @x3py168) @x4py124) @x5py106) @x6py74) @x7py55) @x1py294) (not (HasType @x6py74 Tm_type)) (not (HasType @x4py124 Tm_type)) (not (HasType @x5py106 Tm_type)) (not (HasType @x7py55 (FStar.Pervasives.Native.tuple6 @x1py294 @x2py220 @x3py168 @x4py124 @x5py106 @x6py74))) (not (HasType @x1py294 Tm_type)) (not (HasType @x2py220 Tm_type)) (not (HasType @x3py168 Tm_type))) :pattern ((ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT @x0py263 @x1py294) @x2py220) @x3py168) @x4py124) @x5py106) @x6py74) @x7py55)) ))) (or (HasTypeZ @x0py263 Tm_arrow_3209a7a409ec605c6410051291219438) (and (HasType (@x1!260 @x0py263) Tm_type) (HasType (@x2!259 @x0py263) Tm_type) (HasType (@x3!258 @x0py263) Tm_type) (HasType (@x4!257 @x0py263) Tm_type) (HasType (@x5!256 @x0py263) Tm_type) (HasType (@x6!255 @x0py263) Tm_type) (HasType (@x7!254 @x0py263) (FStar.Pervasives.Native.tuple6 (@x1!260 @x0py263) (@x2!259 @x0py263) (@x3!258 @x0py263) (@x4!257 @x0py263) (@x5!256 @x0py263) (@x6!255 @x0py263))) (not (HasType (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT @x0py263 (@x1!260 @x0py263)) (@x2!259 @x0py263)) (@x3!258 @x0py263)) (@x4!257 @x0py263)) (@x5!256 @x0py263)) (@x6!255 @x0py263)) (@x7!254 @x0py263)) (@x1!260 @x0py263)))))) :pattern ((HasTypeZ @x0py263 Tm_arrow_3209a7a409ec605c6410051291219438)) )) :named FStar.Pervasives.Native_interpretation_Tm_arrow_3209a7a409ec605c6410051291219438))
(assert (! (forall ((@x0py264 Term)) (! (and (or (not (HasTypeZ @x0py264 Tm_arrow_4902efa5488190c456656843f7646562)) (forall ((@x1py295 Term)(@x2py221 Term)(@x3py169 Term)(@x4py125 Term)(@x5py107 Term)(@x6py75 Term)(@x7py56 Term)) (! (or (not (HasType @x6py75 Tm_type)) (not (HasType @x4py125 Tm_type)) (not (HasType @x7py56 (FStar.Pervasives.Native.tuple6 @x1py295 @x2py221 @x3py169 @x4py125 @x5py107 @x6py75))) (not (HasType @x5py107 Tm_type)) (HasType (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT @x0py264 @x1py295) @x2py221) @x3py169) @x4py125) @x5py107) @x6py75) @x7py56) @x5py107) (not (HasType @x3py169 Tm_type)) (not (HasType @x1py295 Tm_type)) (not (HasType @x2py221 Tm_type))) :pattern ((ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT @x0py264 @x1py295) @x2py221) @x3py169) @x4py125) @x5py107) @x6py75) @x7py56)) ))) (or (HasTypeZ @x0py264 Tm_arrow_4902efa5488190c456656843f7646562) (and (HasType (@x1!267 @x0py264) Tm_type) (HasType (@x2!266 @x0py264) Tm_type) (HasType (@x3!265 @x0py264) Tm_type) (HasType (@x4!264 @x0py264) Tm_type) (HasType (@x5!263 @x0py264) Tm_type) (HasType (@x6!262 @x0py264) Tm_type) (HasType (@x7!261 @x0py264) (FStar.Pervasives.Native.tuple6 (@x1!267 @x0py264) (@x2!266 @x0py264) (@x3!265 @x0py264) (@x4!264 @x0py264) (@x5!263 @x0py264) (@x6!262 @x0py264))) (not (HasType (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT @x0py264 (@x1!267 @x0py264)) (@x2!266 @x0py264)) (@x3!265 @x0py264)) (@x4!264 @x0py264)) (@x5!263 @x0py264)) (@x6!262 @x0py264)) (@x7!261 @x0py264)) (@x5!263 @x0py264)))))) :pattern ((HasTypeZ @x0py264 Tm_arrow_4902efa5488190c456656843f7646562)) )) :named FStar.Pervasives.Native_interpretation_Tm_arrow_4902efa5488190c456656843f7646562))
(assert (! (forall ((@x0py265 Term)) (! (and (or (not (HasTypeZ @x0py265 Tm_arrow_6426d9c2c96ff0881bdcece54fff4277)) (forall ((@x1py296 Term)(@x2py222 Term)(@x3py170 Term)(@x4py126 Term)(@x5py108 Term)(@x6py76 Term)) (! (or (not (HasType @x5py108 Tm_type)) (not (HasType @x3py170 Tm_type)) (not (HasType @x4py126 Tm_type)) (not (HasType @x6py76 (FStar.Pervasives.Native.tuple5 @x1py296 @x2py222 @x3py170 @x4py126 @x5py108))) (HasType (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT @x0py265 @x1py296) @x2py222) @x3py170) @x4py126) @x5py108) @x6py76) @x1py296) (not (HasType @x1py296 Tm_type)) (not (HasType @x2py222 Tm_type))) :pattern ((ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT @x0py265 @x1py296) @x2py222) @x3py170) @x4py126) @x5py108) @x6py76)) ))) (or (HasTypeZ @x0py265 Tm_arrow_6426d9c2c96ff0881bdcece54fff4277) (and (HasType (@x1!273 @x0py265) Tm_type) (HasType (@x2!272 @x0py265) Tm_type) (HasType (@x3!271 @x0py265) Tm_type) (HasType (@x4!270 @x0py265) Tm_type) (HasType (@x5!269 @x0py265) Tm_type) (HasType (@x6!268 @x0py265) (FStar.Pervasives.Native.tuple5 (@x1!273 @x0py265) (@x2!272 @x0py265) (@x3!271 @x0py265) (@x4!270 @x0py265) (@x5!269 @x0py265))) (not (HasType (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT @x0py265 (@x1!273 @x0py265)) (@x2!272 @x0py265)) (@x3!271 @x0py265)) (@x4!270 @x0py265)) (@x5!269 @x0py265)) (@x6!268 @x0py265)) (@x1!273 @x0py265)))))) :pattern ((HasTypeZ @x0py265 Tm_arrow_6426d9c2c96ff0881bdcece54fff4277)) )) :named FStar.Pervasives.Native_interpretation_Tm_arrow_6426d9c2c96ff0881bdcece54fff4277))
(assert (! (forall ((@x0py266 Term)) (! (and (or (not (HasTypeZ @x0py266 Tm_arrow_7493b9132d0860b9d4513189a97e9cc2)) (forall ((@x1py297 Term)(@x2py223 Term)(@x3py171 Term)(@x4py127 Term)(@x5py109 Term)(@x6py77 Term)(@x7py57 Term)(@x8py35 Term)(@x9py26 Term)(@x10py20 Term)(@x11py18 Term)(@x12py16 Term)(@x13py11 Term)(@x14py9 Term)(@x15py7 Term)(@x16py4 Term)) (! (or (not (HasType @x5py109 Tm_type)) (not (HasType @x6py77 Tm_type)) (not (HasType @x4py127 Tm_type)) (not (HasType @x3py171 Tm_type)) (not (HasType @x1py297 Tm_type)) (not (HasType @x2py223 Tm_type)) (HasType (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT @x0py266 @x1py297) @x2py223) @x3py171) @x4py127) @x5py109) @x6py77) @x7py57) @x8py35) @x9py26) @x10py20) @x11py18) @x12py16) @x13py11) @x14py9) @x15py7) @x16py4) (FStar.Pervasives.Native.tuple8 @x1py297 @x2py223 @x3py171 @x4py127 @x5py109 @x6py77 @x7py57 @x8py35)) (not (HasType @x7py57 Tm_type)) (not (HasType @x8py35 Tm_type)) (not (HasType @x9py26 @x1py297)) (not (HasType @x10py20 @x2py223)) (not (HasType @x11py18 @x3py171)) (not (HasType @x12py16 @x4py127)) (not (HasType @x13py11 @x5py109)) (not (HasType @x14py9 @x6py77)) (not (HasType @x15py7 @x7py57)) (not (HasType @x16py4 @x8py35))) :pattern ((ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT @x0py266 @x1py297) @x2py223) @x3py171) @x4py127) @x5py109) @x6py77) @x7py57) @x8py35) @x9py26) @x10py20) @x11py18) @x12py16) @x13py11) @x14py9) @x15py7) @x16py4)) ))) (or (HasTypeZ @x0py266 Tm_arrow_7493b9132d0860b9d4513189a97e9cc2) (and (HasType (@x1!289 @x0py266) Tm_type) (HasType (@x2!288 @x0py266) Tm_type) (HasType (@x3!287 @x0py266) Tm_type) (HasType (@x4!286 @x0py266) Tm_type) (HasType (@x5!285 @x0py266) Tm_type) (HasType (@x6!284 @x0py266) Tm_type) (HasType (@x7!283 @x0py266) Tm_type) (HasType (@x8!282 @x0py266) Tm_type) (HasType (@x9!281 @x0py266) (@x1!289 @x0py266)) (HasType (@x10!280 @x0py266) (@x2!288 @x0py266)) (HasType (@x11!279 @x0py266) (@x3!287 @x0py266)) (HasType (@x12!278 @x0py266) (@x4!286 @x0py266)) (HasType (@x13!277 @x0py266) (@x5!285 @x0py266)) (HasType (@x14!276 @x0py266) (@x6!284 @x0py266)) (HasType (@x15!275 @x0py266) (@x7!283 @x0py266)) (HasType (@x16!274 @x0py266) (@x8!282 @x0py266)) (not (HasType (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT @x0py266 (@x1!289 @x0py266)) (@x2!288 @x0py266)) (@x3!287 @x0py266)) (@x4!286 @x0py266)) (@x5!285 @x0py266)) (@x6!284 @x0py266)) (@x7!283 @x0py266)) (@x8!282 @x0py266)) (@x9!281 @x0py266)) (@x10!280 @x0py266)) (@x11!279 @x0py266)) (@x12!278 @x0py266)) (@x13!277 @x0py266)) (@x14!276 @x0py266)) (@x15!275 @x0py266)) (@x16!274 @x0py266)) (FStar.Pervasives.Native.tuple8 (@x1!289 @x0py266) (@x2!288 @x0py266) (@x3!287 @x0py266) (@x4!286 @x0py266) (@x5!285 @x0py266) (@x6!284 @x0py266) (@x7!283 @x0py266) (@x8!282 @x0py266))))))) :pattern ((HasTypeZ @x0py266 Tm_arrow_7493b9132d0860b9d4513189a97e9cc2)) )) :named FStar.Pervasives.Native_interpretation_Tm_arrow_7493b9132d0860b9d4513189a97e9cc2))
(assert (! (forall ((@x0py267 Term)) (! (and (or (not (HasTypeZ @x0py267 Tm_arrow_08953d1bb2ff5a2bd59d780036c9167c)) (forall ((@x1py298 Term)(@x2py224 Term)(@x3py172 Term)(@x4py128 Term)(@x5py110 Term)(@x6py78 Term)) (! (or (HasType (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT @x0py267 @x1py298) @x2py224) @x3py172) @x4py128) @x5py110) @x6py78) @x4py128) (not (HasType @x1py298 Tm_type)) (not (HasType @x2py224 Tm_type)) (not (HasType @x3py172 Tm_type)) (not (HasType @x4py128 Tm_type)) (not (HasType @x5py110 Tm_type)) (not (HasType @x6py78 (FStar.Pervasives.Native.tuple5 @x1py298 @x2py224 @x3py172 @x4py128 @x5py110)))) :pattern ((ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT @x0py267 @x1py298) @x2py224) @x3py172) @x4py128) @x5py110) @x6py78)) ))) (or (HasTypeZ @x0py267 Tm_arrow_08953d1bb2ff5a2bd59d780036c9167c) (and (HasType (@x1!295 @x0py267) Tm_type) (HasType (@x2!294 @x0py267) Tm_type) (HasType (@x3!293 @x0py267) Tm_type) (HasType (@x4!292 @x0py267) Tm_type) (HasType (@x5!291 @x0py267) Tm_type) (HasType (@x6!290 @x0py267) (FStar.Pervasives.Native.tuple5 (@x1!295 @x0py267) (@x2!294 @x0py267) (@x3!293 @x0py267) (@x4!292 @x0py267) (@x5!291 @x0py267))) (not (HasType (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT @x0py267 (@x1!295 @x0py267)) (@x2!294 @x0py267)) (@x3!293 @x0py267)) (@x4!292 @x0py267)) (@x5!291 @x0py267)) (@x6!290 @x0py267)) (@x4!292 @x0py267)))))) :pattern ((HasTypeZ @x0py267 Tm_arrow_08953d1bb2ff5a2bd59d780036c9167c)) )) :named FStar.Pervasives.Native_interpretation_Tm_arrow_08953d1bb2ff5a2bd59d780036c9167c))
(assert (! (forall ((@x0py268 Term)) (! (and (or (not (HasTypeZ @x0py268 Tm_arrow_051405f28864bdc9643ed01eb3b92100)) (forall ((@x1py299 Term)(@x2py225 Term)(@x3py173 Term)(@x4py129 Term)(@x5py111 Term)(@x6py79 Term)(@x7py58 Term)(@x8py36 Term)) (! (or (HasType (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT @x0py268 @x1py299) @x2py225) @x3py173) @x4py129) @x5py111) @x6py79) @x7py58) @x8py36) @x3py173) (not (HasType @x7py58 Tm_type)) (not (HasType @x3py173 Tm_type)) (not (HasType @x4py129 Tm_type)) (not (HasType @x8py36 (FStar.Pervasives.Native.tuple7 @x1py299 @x2py225 @x3py173 @x4py129 @x5py111 @x6py79 @x7py58))) (not (HasType @x6py79 Tm_type)) (not (HasType @x2py225 Tm_type)) (not (HasType @x5py111 Tm_type)) (not (HasType @x1py299 Tm_type))) :pattern ((ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT @x0py268 @x1py299) @x2py225) @x3py173) @x4py129) @x5py111) @x6py79) @x7py58) @x8py36)) ))) (or (HasTypeZ @x0py268 Tm_arrow_051405f28864bdc9643ed01eb3b92100) (and (HasType (@x1!303 @x0py268) Tm_type) (HasType (@x2!302 @x0py268) Tm_type) (HasType (@x3!301 @x0py268) Tm_type) (HasType (@x4!300 @x0py268) Tm_type) (HasType (@x5!299 @x0py268) Tm_type) (HasType (@x6!298 @x0py268) Tm_type) (HasType (@x7!297 @x0py268) Tm_type) (HasType (@x8!296 @x0py268) (FStar.Pervasives.Native.tuple7 (@x1!303 @x0py268) (@x2!302 @x0py268) (@x3!301 @x0py268) (@x4!300 @x0py268) (@x5!299 @x0py268) (@x6!298 @x0py268) (@x7!297 @x0py268))) (not (HasType (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT @x0py268 (@x1!303 @x0py268)) (@x2!302 @x0py268)) (@x3!301 @x0py268)) (@x4!300 @x0py268)) (@x5!299 @x0py268)) (@x6!298 @x0py268)) (@x7!297 @x0py268)) (@x8!296 @x0py268)) (@x3!301 @x0py268)))))) :pattern ((HasTypeZ @x0py268 Tm_arrow_051405f28864bdc9643ed01eb3b92100)) )) :named FStar.Pervasives.Native_interpretation_Tm_arrow_051405f28864bdc9643ed01eb3b92100))
(assert (! (forall ((@x0py269 Term)) (! (and (or (not (HasTypeZ @x0py269 Tm_arrow_59613b37f4c818dae9a7b082d5155f29)) (forall ((@x1py300 Term)(@x2py226 Term)(@x3py174 Term)(@x4py130 Term)(@x5py112 Term)(@x6py80 Term)(@x7py59 Term)(@x8py37 Term)(@x9py27 Term)) (! (or (HasType (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT @x0py269 @x1py300) @x2py226) @x3py174) @x4py130) @x5py112) @x6py80) @x7py59) @x8py37) @x9py27) @x6py80) (not (HasType @x9py27 (FStar.Pervasives.Native.tuple8 @x1py300 @x2py226 @x3py174 @x4py130 @x5py112 @x6py80 @x7py59 @x8py37))) (not (HasType @x7py59 Tm_type)) (not (HasType @x4py130 Tm_type)) (not (HasType @x8py37 Tm_type)) (not (HasType @x6py80 Tm_type)) (not (HasType @x5py112 Tm_type)) (not (HasType @x1py300 Tm_type)) (not (HasType @x2py226 Tm_type)) (not (HasType @x3py174 Tm_type))) :pattern ((ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT @x0py269 @x1py300) @x2py226) @x3py174) @x4py130) @x5py112) @x6py80) @x7py59) @x8py37) @x9py27)) ))) (or (HasTypeZ @x0py269 Tm_arrow_59613b37f4c818dae9a7b082d5155f29) (and (HasType (@x1!312 @x0py269) Tm_type) (HasType (@x2!311 @x0py269) Tm_type) (HasType (@x3!310 @x0py269) Tm_type) (HasType (@x4!309 @x0py269) Tm_type) (HasType (@x5!308 @x0py269) Tm_type) (HasType (@x6!307 @x0py269) Tm_type) (HasType (@x7!306 @x0py269) Tm_type) (HasType (@x8!305 @x0py269) Tm_type) (HasType (@x9!304 @x0py269) (FStar.Pervasives.Native.tuple8 (@x1!312 @x0py269) (@x2!311 @x0py269) (@x3!310 @x0py269) (@x4!309 @x0py269) (@x5!308 @x0py269) (@x6!307 @x0py269) (@x7!306 @x0py269) (@x8!305 @x0py269))) (not (HasType (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT @x0py269 (@x1!312 @x0py269)) (@x2!311 @x0py269)) (@x3!310 @x0py269)) (@x4!309 @x0py269)) (@x5!308 @x0py269)) (@x6!307 @x0py269)) (@x7!306 @x0py269)) (@x8!305 @x0py269)) (@x9!304 @x0py269)) (@x6!307 @x0py269)))))) :pattern ((HasTypeZ @x0py269 Tm_arrow_59613b37f4c818dae9a7b082d5155f29)) )) :named FStar.Pervasives.Native_interpretation_Tm_arrow_59613b37f4c818dae9a7b082d5155f29))
(assert (! (forall ((@x0py270 Term)) (! (and (or (not (HasTypeZ @x0py270 Tm_arrow_61613ad0fe4e0bf49515f58291a6d65c)) (forall ((@x1py301 Term)) (! (or (not (HasType @x1py301 Tm_type)) (HasType (ApplyTT @x0py270 @x1py301) (FStar.Pervasives.Native.option @x1py301))) :pattern ((ApplyTT @x0py270 @x1py301)) ))) (or (HasTypeZ @x0py270 Tm_arrow_61613ad0fe4e0bf49515f58291a6d65c) (and (HasType (@x1!313 @x0py270) Tm_type) (not (HasType (ApplyTT @x0py270 (@x1!313 @x0py270)) (FStar.Pervasives.Native.option (@x1!313 @x0py270))))))) :pattern ((HasTypeZ @x0py270 Tm_arrow_61613ad0fe4e0bf49515f58291a6d65c)) )) :named FStar.Pervasives.Native_interpretation_Tm_arrow_61613ad0fe4e0bf49515f58291a6d65c))
(assert (! (forall ((@x0py271 Term)) (! (and (or (not (HasTypeZ @x0py271 Tm_arrow_88772e9c1eff3cee09de1db3fc8087ca)) (forall ((@x1py302 Term)(@x2py227 Term)(@x3py175 Term)(@x4py131 Term)(@x5py113 Term)(@x6py81 Term)(@x7py60 Term)(@x8py38 Term)) (! (or (not (HasType @x3py175 Tm_type)) (not (HasType @x7py60 Tm_type)) (not (HasType @x4py131 Tm_type)) (HasType (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT @x0py271 @x1py302) @x2py227) @x3py175) @x4py131) @x5py113) @x6py81) @x7py60) @x8py38) @x2py227) (not (HasType @x1py302 Tm_type)) (not (HasType @x6py81 Tm_type)) (not (HasType @x5py113 Tm_type)) (not (HasType @x8py38 (FStar.Pervasives.Native.tuple7 @x1py302 @x2py227 @x3py175 @x4py131 @x5py113 @x6py81 @x7py60))) (not (HasType @x2py227 Tm_type))) :pattern ((ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT @x0py271 @x1py302) @x2py227) @x3py175) @x4py131) @x5py113) @x6py81) @x7py60) @x8py38)) ))) (or (HasTypeZ @x0py271 Tm_arrow_88772e9c1eff3cee09de1db3fc8087ca) (and (HasType (@x1!321 @x0py271) Tm_type) (HasType (@x2!320 @x0py271) Tm_type) (HasType (@x3!319 @x0py271) Tm_type) (HasType (@x4!318 @x0py271) Tm_type) (HasType (@x5!317 @x0py271) Tm_type) (HasType (@x6!316 @x0py271) Tm_type) (HasType (@x7!315 @x0py271) Tm_type) (HasType (@x8!314 @x0py271) (FStar.Pervasives.Native.tuple7 (@x1!321 @x0py271) (@x2!320 @x0py271) (@x3!319 @x0py271) (@x4!318 @x0py271) (@x5!317 @x0py271) (@x6!316 @x0py271) (@x7!315 @x0py271))) (not (HasType (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT @x0py271 (@x1!321 @x0py271)) (@x2!320 @x0py271)) (@x3!319 @x0py271)) (@x4!318 @x0py271)) (@x5!317 @x0py271)) (@x6!316 @x0py271)) (@x7!315 @x0py271)) (@x8!314 @x0py271)) (@x2!320 @x0py271)))))) :pattern ((HasTypeZ @x0py271 Tm_arrow_88772e9c1eff3cee09de1db3fc8087ca)) )) :named FStar.Pervasives.Native_interpretation_Tm_arrow_88772e9c1eff3cee09de1db3fc8087ca))
(assert (! (forall ((@x0py272 Term)) (! (and (or (not (HasTypeZ @x0py272 Tm_arrow_094933c54ea2002054dad555e01358ba)) (forall ((@x1py303 Term)(@x2py228 Term)(@x3py176 Term)(@x4py132 Term)(@x5py114 Term)) (! (or (HasType (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT @x0py272 @x1py303) @x2py228) @x3py176) @x4py132) @x5py114) @x4py132) (not (HasType @x5py114 (FStar.Pervasives.Native.tuple4 @x1py303 @x2py228 @x3py176 @x4py132))) (not (HasType @x4py132 Tm_type)) (not (HasType @x1py303 Tm_type)) (not (HasType @x2py228 Tm_type)) (not (HasType @x3py176 Tm_type))) :pattern ((ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT @x0py272 @x1py303) @x2py228) @x3py176) @x4py132) @x5py114)) ))) (or (HasTypeZ @x0py272 Tm_arrow_094933c54ea2002054dad555e01358ba) (and (HasType (@x1!326 @x0py272) Tm_type) (HasType (@x2!325 @x0py272) Tm_type) (HasType (@x3!324 @x0py272) Tm_type) (HasType (@x4!323 @x0py272) Tm_type) (HasType (@x5!322 @x0py272) (FStar.Pervasives.Native.tuple4 (@x1!326 @x0py272) (@x2!325 @x0py272) (@x3!324 @x0py272) (@x4!323 @x0py272))) (not (HasType (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT @x0py272 (@x1!326 @x0py272)) (@x2!325 @x0py272)) (@x3!324 @x0py272)) (@x4!323 @x0py272)) (@x5!322 @x0py272)) (@x4!323 @x0py272)))))) :pattern ((HasTypeZ @x0py272 Tm_arrow_094933c54ea2002054dad555e01358ba)) )) :named FStar.Pervasives.Native_interpretation_Tm_arrow_094933c54ea2002054dad555e01358ba))
(assert (! (forall ((@x0py273 Term)) (! (and (or (not (HasTypeZ @x0py273 Tm_arrow_21647838ffa803cb1cbaf82c99e03f01)) (forall ((@x1py304 Term)(@x2py229 Term)(@x3py177 Term)(@x4py133 Term)(@x5py115 Term)) (! (or (HasType (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT @x0py273 @x1py304) @x2py229) @x3py177) @x4py133) @x5py115) @x1py304) (not (HasType @x1py304 Tm_type)) (not (HasType @x3py177 Tm_type)) (not (HasType @x2py229 Tm_type)) (not (HasType @x5py115 (FStar.Pervasives.Native.tuple4 @x1py304 @x2py229 @x3py177 @x4py133))) (not (HasType @x4py133 Tm_type))) :pattern ((ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT @x0py273 @x1py304) @x2py229) @x3py177) @x4py133) @x5py115)) ))) (or (HasTypeZ @x0py273 Tm_arrow_21647838ffa803cb1cbaf82c99e03f01) (and (HasType (@x1!331 @x0py273) Tm_type) (HasType (@x2!330 @x0py273) Tm_type) (HasType (@x3!329 @x0py273) Tm_type) (HasType (@x4!328 @x0py273) Tm_type) (HasType (@x5!327 @x0py273) (FStar.Pervasives.Native.tuple4 (@x1!331 @x0py273) (@x2!330 @x0py273) (@x3!329 @x0py273) (@x4!328 @x0py273))) (not (HasType (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT @x0py273 (@x1!331 @x0py273)) (@x2!330 @x0py273)) (@x3!329 @x0py273)) (@x4!328 @x0py273)) (@x5!327 @x0py273)) (@x1!331 @x0py273)))))) :pattern ((HasTypeZ @x0py273 Tm_arrow_21647838ffa803cb1cbaf82c99e03f01)) )) :named FStar.Pervasives.Native_interpretation_Tm_arrow_21647838ffa803cb1cbaf82c99e03f01))
(assert (! (forall ((@x0py274 Term)) (! (and (or (not (HasTypeZ @x0py274 Tm_arrow_642316967e62d4894b4c5052196039ab)) (forall ((@x1py305 Term)(@x2py230 Term)(@x3py178 Term)(@x4py134 Term)(@x5py116 Term)(@x6py82 Term)(@x7py61 Term)(@x8py39 Term)(@x9py28 Term)) (! (or (not (HasType @x3py178 Tm_type)) (not (HasType @x4py134 Tm_type)) (not (HasType @x6py82 Tm_type)) (not (HasType @x2py230 Tm_type)) (not (HasType @x1py305 Tm_type)) (not (HasType @x5py116 Tm_type)) (not (HasType @x9py28 (FStar.Pervasives.Native.tuple8 @x1py305 @x2py230 @x3py178 @x4py134 @x5py116 @x6py82 @x7py61 @x8py39))) (not (HasType @x7py61 Tm_type)) (not (HasType @x8py39 Tm_type)) (HasType (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT @x0py274 @x1py305) @x2py230) @x3py178) @x4py134) @x5py116) @x6py82) @x7py61) @x8py39) @x9py28) @x7py61)) :pattern ((ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT @x0py274 @x1py305) @x2py230) @x3py178) @x4py134) @x5py116) @x6py82) @x7py61) @x8py39) @x9py28)) ))) (or (HasTypeZ @x0py274 Tm_arrow_642316967e62d4894b4c5052196039ab) (and (HasType (@x1!340 @x0py274) Tm_type) (HasType (@x2!339 @x0py274) Tm_type) (HasType (@x3!338 @x0py274) Tm_type) (HasType (@x4!337 @x0py274) Tm_type) (HasType (@x5!336 @x0py274) Tm_type) (HasType (@x6!335 @x0py274) Tm_type) (HasType (@x7!334 @x0py274) Tm_type) (HasType (@x8!333 @x0py274) Tm_type) (HasType (@x9!332 @x0py274) (FStar.Pervasives.Native.tuple8 (@x1!340 @x0py274) (@x2!339 @x0py274) (@x3!338 @x0py274) (@x4!337 @x0py274) (@x5!336 @x0py274) (@x6!335 @x0py274) (@x7!334 @x0py274) (@x8!333 @x0py274))) (not (HasType (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT @x0py274 (@x1!340 @x0py274)) (@x2!339 @x0py274)) (@x3!338 @x0py274)) (@x4!337 @x0py274)) (@x5!336 @x0py274)) (@x6!335 @x0py274)) (@x7!334 @x0py274)) (@x8!333 @x0py274)) (@x9!332 @x0py274)) (@x7!334 @x0py274)))))) :pattern ((HasTypeZ @x0py274 Tm_arrow_642316967e62d4894b4c5052196039ab)) )) :named FStar.Pervasives.Native_interpretation_Tm_arrow_642316967e62d4894b4c5052196039ab))
(assert (! (forall ((@x0py275 Term)) (! (and (or (not (HasTypeZ @x0py275 Tm_arrow_300677279975362e42b142f0238e1ce1)) (forall ((@x1py306 Term)(@x2py231 Term)(@x3py179 Term)(@x4py135 Term)(@x5py117 Term)(@x6py83 Term)(@x7py62 Term)(@x8py40 Term)(@x9py29 Term)) (! (or (not (HasType @x8py40 Tm_type)) (HasType (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT @x0py275 @x1py306) @x2py231) @x3py179) @x4py135) @x5py117) @x6py83) @x7py62) @x8py40) @x9py29) @x1py306) (not (HasType @x1py306 Tm_type)) (not (HasType @x9py29 (FStar.Pervasives.Native.tuple8 @x1py306 @x2py231 @x3py179 @x4py135 @x5py117 @x6py83 @x7py62 @x8py40))) (not (HasType @x7py62 Tm_type)) (not (HasType @x5py117 Tm_type)) (not (HasType @x6py83 Tm_type)) (not (HasType @x2py231 Tm_type)) (not (HasType @x3py179 Tm_type)) (not (HasType @x4py135 Tm_type))) :pattern ((ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT @x0py275 @x1py306) @x2py231) @x3py179) @x4py135) @x5py117) @x6py83) @x7py62) @x8py40) @x9py29)) ))) (or (HasTypeZ @x0py275 Tm_arrow_300677279975362e42b142f0238e1ce1) (and (HasType (@x1!349 @x0py275) Tm_type) (HasType (@x2!348 @x0py275) Tm_type) (HasType (@x3!347 @x0py275) Tm_type) (HasType (@x4!346 @x0py275) Tm_type) (HasType (@x5!345 @x0py275) Tm_type) (HasType (@x6!344 @x0py275) Tm_type) (HasType (@x7!343 @x0py275) Tm_type) (HasType (@x8!342 @x0py275) Tm_type) (HasType (@x9!341 @x0py275) (FStar.Pervasives.Native.tuple8 (@x1!349 @x0py275) (@x2!348 @x0py275) (@x3!347 @x0py275) (@x4!346 @x0py275) (@x5!345 @x0py275) (@x6!344 @x0py275) (@x7!343 @x0py275) (@x8!342 @x0py275))) (not (HasType (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT @x0py275 (@x1!349 @x0py275)) (@x2!348 @x0py275)) (@x3!347 @x0py275)) (@x4!346 @x0py275)) (@x5!345 @x0py275)) (@x6!344 @x0py275)) (@x7!343 @x0py275)) (@x8!342 @x0py275)) (@x9!341 @x0py275)) (@x1!349 @x0py275)))))) :pattern ((HasTypeZ @x0py275 Tm_arrow_300677279975362e42b142f0238e1ce1)) )) :named FStar.Pervasives.Native_interpretation_Tm_arrow_300677279975362e42b142f0238e1ce1))
(assert (! (forall ((@x0py276 Term)) (! (and (or (not (HasTypeZ @x0py276 Tm_arrow_a25fd62df6305ca0d5e962cb259a6497)) (forall ((@x1py307 Term)(@x2py232 Term)(@x3py180 Term)(@x4py136 Term)(@x5py118 Term)(@x6py84 Term)(@x7py63 Term)(@x8py41 Term)(@x9py30 Term)(@x10py21 Term)) (! (or (not (HasType @x2py232 Tm_type)) (not (HasType @x6py84 @x1py307)) (not (HasType @x4py136 Tm_type)) (not (HasType @x1py307 Tm_type)) (not (HasType @x3py180 Tm_type)) (not (HasType @x5py118 Tm_type)) (not (HasType @x7py63 @x2py232)) (not (HasType @x8py41 @x3py180)) (not (HasType @x9py30 @x4py136)) (not (HasType @x10py21 @x5py118)) (HasType (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT @x0py276 @x1py307) @x2py232) @x3py180) @x4py136) @x5py118) @x6py84) @x7py63) @x8py41) @x9py30) @x10py21) (FStar.Pervasives.Native.tuple5 @x1py307 @x2py232 @x3py180 @x4py136 @x5py118))) :pattern ((ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT @x0py276 @x1py307) @x2py232) @x3py180) @x4py136) @x5py118) @x6py84) @x7py63) @x8py41) @x9py30) @x10py21)) ))) (or (HasTypeZ @x0py276 Tm_arrow_a25fd62df6305ca0d5e962cb259a6497) (and (HasType (@x1!359 @x0py276) Tm_type) (HasType (@x2!358 @x0py276) Tm_type) (HasType (@x3!357 @x0py276) Tm_type) (HasType (@x4!356 @x0py276) Tm_type) (HasType (@x5!355 @x0py276) Tm_type) (HasType (@x6!354 @x0py276) (@x1!359 @x0py276)) (HasType (@x7!353 @x0py276) (@x2!358 @x0py276)) (HasType (@x8!352 @x0py276) (@x3!357 @x0py276)) (HasType (@x9!351 @x0py276) (@x4!356 @x0py276)) (HasType (@x10!350 @x0py276) (@x5!355 @x0py276)) (not (HasType (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT @x0py276 (@x1!359 @x0py276)) (@x2!358 @x0py276)) (@x3!357 @x0py276)) (@x4!356 @x0py276)) (@x5!355 @x0py276)) (@x6!354 @x0py276)) (@x7!353 @x0py276)) (@x8!352 @x0py276)) (@x9!351 @x0py276)) (@x10!350 @x0py276)) (FStar.Pervasives.Native.tuple5 (@x1!359 @x0py276) (@x2!358 @x0py276) (@x3!357 @x0py276) (@x4!356 @x0py276) (@x5!355 @x0py276))))))) :pattern ((HasTypeZ @x0py276 Tm_arrow_a25fd62df6305ca0d5e962cb259a6497)) )) :named FStar.Pervasives.Native_interpretation_Tm_arrow_a25fd62df6305ca0d5e962cb259a6497))
(assert (! (forall ((@x0py277 Term)) (! (and (or (not (HasTypeZ @x0py277 Tm_arrow_a984cc683b69e3e0d41bb0853d6a1664)) (forall ((@x1py308 Term)(@x2py233 Term)(@x3py181 Term)(@x4py137 Term)(@x5py119 Term)(@x6py85 Term)(@x7py64 Term)(@x8py42 Term)(@x9py31 Term)) (! (or (not (HasType @x9py31 (FStar.Pervasives.Native.tuple8 @x1py308 @x2py233 @x3py181 @x4py137 @x5py119 @x6py85 @x7py64 @x8py42))) (not (HasType @x7py64 Tm_type)) (HasType (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT @x0py277 @x1py308) @x2py233) @x3py181) @x4py137) @x5py119) @x6py85) @x7py64) @x8py42) @x9py31) @x8py42) (not (HasType @x1py308 Tm_type)) (not (HasType @x2py233 Tm_type)) (not (HasType @x8py42 Tm_type)) (not (HasType @x6py85 Tm_type)) (not (HasType @x3py181 Tm_type)) (not (HasType @x4py137 Tm_type)) (not (HasType @x5py119 Tm_type))) :pattern ((ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT @x0py277 @x1py308) @x2py233) @x3py181) @x4py137) @x5py119) @x6py85) @x7py64) @x8py42) @x9py31)) ))) (or (HasTypeZ @x0py277 Tm_arrow_a984cc683b69e3e0d41bb0853d6a1664) (and (HasType (@x1!368 @x0py277) Tm_type) (HasType (@x2!367 @x0py277) Tm_type) (HasType (@x3!366 @x0py277) Tm_type) (HasType (@x4!365 @x0py277) Tm_type) (HasType (@x5!364 @x0py277) Tm_type) (HasType (@x6!363 @x0py277) Tm_type) (HasType (@x7!362 @x0py277) Tm_type) (HasType (@x8!361 @x0py277) Tm_type) (HasType (@x9!360 @x0py277) (FStar.Pervasives.Native.tuple8 (@x1!368 @x0py277) (@x2!367 @x0py277) (@x3!366 @x0py277) (@x4!365 @x0py277) (@x5!364 @x0py277) (@x6!363 @x0py277) (@x7!362 @x0py277) (@x8!361 @x0py277))) (not (HasType (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT @x0py277 (@x1!368 @x0py277)) (@x2!367 @x0py277)) (@x3!366 @x0py277)) (@x4!365 @x0py277)) (@x5!364 @x0py277)) (@x6!363 @x0py277)) (@x7!362 @x0py277)) (@x8!361 @x0py277)) (@x9!360 @x0py277)) (@x8!361 @x0py277)))))) :pattern ((HasTypeZ @x0py277 Tm_arrow_a984cc683b69e3e0d41bb0853d6a1664)) )) :named FStar.Pervasives.Native_interpretation_Tm_arrow_a984cc683b69e3e0d41bb0853d6a1664))
(assert (! (forall ((@x0py278 Term)) (! (and (or (not (HasTypeZ @x0py278 Tm_arrow_aa2ac0c2eefec3ef36a52a5c1e92dd6b)) (forall ((@x1py309 Term)(@x2py234 Term)(@x3py182 Term)(@x4py138 Term)(@x5py120 Term)(@x6py86 Term)) (! (or (not (HasType @x5py120 @x2py234)) (not (HasType @x6py86 @x3py182)) (HasType (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT @x0py278 @x1py309) @x2py234) @x3py182) @x4py138) @x5py120) @x6py86) (FStar.Pervasives.Native.tuple3 @x1py309 @x2py234 @x3py182)) (not (HasType @x1py309 Tm_type)) (not (HasType @x4py138 @x1py309)) (not (HasType @x2py234 Tm_type)) (not (HasType @x3py182 Tm_type))) :pattern ((ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT @x0py278 @x1py309) @x2py234) @x3py182) @x4py138) @x5py120) @x6py86)) ))) (or (HasTypeZ @x0py278 Tm_arrow_aa2ac0c2eefec3ef36a52a5c1e92dd6b) (and (HasType (@x1!374 @x0py278) Tm_type) (HasType (@x2!373 @x0py278) Tm_type) (HasType (@x3!372 @x0py278) Tm_type) (HasType (@x4!371 @x0py278) (@x1!374 @x0py278)) (HasType (@x5!370 @x0py278) (@x2!373 @x0py278)) (HasType (@x6!369 @x0py278) (@x3!372 @x0py278)) (not (HasType (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT @x0py278 (@x1!374 @x0py278)) (@x2!373 @x0py278)) (@x3!372 @x0py278)) (@x4!371 @x0py278)) (@x5!370 @x0py278)) (@x6!369 @x0py278)) (FStar.Pervasives.Native.tuple3 (@x1!374 @x0py278) (@x2!373 @x0py278) (@x3!372 @x0py278))))))) :pattern ((HasTypeZ @x0py278 Tm_arrow_aa2ac0c2eefec3ef36a52a5c1e92dd6b)) )) :named FStar.Pervasives.Native_interpretation_Tm_arrow_aa2ac0c2eefec3ef36a52a5c1e92dd6b))
(assert (! (forall ((@x0py279 Term)(@x1py310 Term)) (! (and (or (not (HasTypeZ @x0py279 (Tm_arrow_b4cc8204c08bed808cee22615b49bc5f @x1py310))) (forall ((@x2py235 Term)(@x3py183 Term)(@x4py139 Term)(@x5py121 Term)(@x6py87 Term)(@x7py65 Term)(@x8py43 Term)) (! (or (not (HasType @x5py121 Tm_type)) (not (HasType @x4py139 Tm_type)) (HasType (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT @x0py279 @x2py235) @x3py183) @x4py139) @x5py121) @x6py87) @x7py65) @x8py43) @x1py310) (not (HasType @x3py183 Tm_type)) (not (HasType @x2py235 Tm_type)) (not (HasType @x6py87 Tm_type)) (not (HasType @x7py65 Tm_type)) (not (HasType @x8py43 (FStar.Pervasives.Native.tuple6 @x2py235 @x3py183 @x4py139 @x5py121 @x6py87 @x7py65)))) :pattern ((ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT @x0py279 @x2py235) @x3py183) @x4py139) @x5py121) @x6py87) @x7py65) @x8py43)) ))) (or (HasTypeZ @x0py279 (Tm_arrow_b4cc8204c08bed808cee22615b49bc5f @x1py310)) (and (HasType (@x2!381 @x1py310 @x0py279) Tm_type) (HasType (@x3!380 @x1py310 @x0py279) Tm_type) (HasType (@x4!379 @x1py310 @x0py279) Tm_type) (HasType (@x5!378 @x1py310 @x0py279) Tm_type) (HasType (@x6!377 @x1py310 @x0py279) Tm_type) (HasType (@x7!376 @x1py310 @x0py279) Tm_type) (HasType (@x8!375 @x1py310 @x0py279) (FStar.Pervasives.Native.tuple6 (@x2!381 @x1py310 @x0py279) (@x3!380 @x1py310 @x0py279) (@x4!379 @x1py310 @x0py279) (@x5!378 @x1py310 @x0py279) (@x6!377 @x1py310 @x0py279) (@x7!376 @x1py310 @x0py279))) (not (HasType (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT @x0py279 (@x2!381 @x1py310 @x0py279)) (@x3!380 @x1py310 @x0py279)) (@x4!379 @x1py310 @x0py279)) (@x5!378 @x1py310 @x0py279)) (@x6!377 @x1py310 @x0py279)) (@x7!376 @x1py310 @x0py279)) (@x8!375 @x1py310 @x0py279)) @x1py310))))) :pattern ((HasTypeZ @x0py279 (Tm_arrow_b4cc8204c08bed808cee22615b49bc5f @x1py310))) )) :named FStar.Pervasives.Native_interpretation_Tm_arrow_b4cc8204c08bed808cee22615b49bc5f))
(assert (! (forall ((@x0py280 Term)(@x1py311 Term)) (! (and (or (not (HasTypeZ @x0py280 (Tm_arrow_bc1e750d04f01d381d7c63e81b8697d1 @x1py311))) (forall ((@x2py236 Term)(@x3py184 Term)(@x4py140 Term)(@x5py122 Term)(@x6py88 Term)(@x7py66 Term)(@x8py44 Term)(@x9py32 Term)) (! (or (not (HasType @x9py32 (FStar.Pervasives.Native.tuple7 @x2py236 @x3py184 @x4py140 @x5py122 @x6py88 @x7py66 @x8py44))) (not (HasType @x5py122 Tm_type)) (not (HasType @x7py66 Tm_type)) (not (HasType @x8py44 Tm_type)) (HasType (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT @x0py280 @x2py236) @x3py184) @x4py140) @x5py122) @x6py88) @x7py66) @x8py44) @x9py32) @x1py311) (not (HasType @x4py140 Tm_type)) (not (HasType @x6py88 Tm_type)) (not (HasType @x2py236 Tm_type)) (not (HasType @x3py184 Tm_type))) :pattern ((ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT @x0py280 @x2py236) @x3py184) @x4py140) @x5py122) @x6py88) @x7py66) @x8py44) @x9py32)) ))) (or (HasTypeZ @x0py280 (Tm_arrow_bc1e750d04f01d381d7c63e81b8697d1 @x1py311)) (and (HasType (@x2!389 @x1py311 @x0py280) Tm_type) (HasType (@x3!388 @x1py311 @x0py280) Tm_type) (HasType (@x4!387 @x1py311 @x0py280) Tm_type) (HasType (@x5!386 @x1py311 @x0py280) Tm_type) (HasType (@x6!385 @x1py311 @x0py280) Tm_type) (HasType (@x7!384 @x1py311 @x0py280) Tm_type) (HasType (@x8!383 @x1py311 @x0py280) Tm_type) (HasType (@x9!382 @x1py311 @x0py280) (FStar.Pervasives.Native.tuple7 (@x2!389 @x1py311 @x0py280) (@x3!388 @x1py311 @x0py280) (@x4!387 @x1py311 @x0py280) (@x5!386 @x1py311 @x0py280) (@x6!385 @x1py311 @x0py280) (@x7!384 @x1py311 @x0py280) (@x8!383 @x1py311 @x0py280))) (not (HasType (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT @x0py280 (@x2!389 @x1py311 @x0py280)) (@x3!388 @x1py311 @x0py280)) (@x4!387 @x1py311 @x0py280)) (@x5!386 @x1py311 @x0py280)) (@x6!385 @x1py311 @x0py280)) (@x7!384 @x1py311 @x0py280)) (@x8!383 @x1py311 @x0py280)) (@x9!382 @x1py311 @x0py280)) @x1py311))))) :pattern ((HasTypeZ @x0py280 (Tm_arrow_bc1e750d04f01d381d7c63e81b8697d1 @x1py311))) )) :named FStar.Pervasives.Native_interpretation_Tm_arrow_bc1e750d04f01d381d7c63e81b8697d1))
(assert (! (forall ((@x0py281 Term)) (! (and (or (not (HasTypeZ @x0py281 Tm_arrow_c4e77c85318828d15167451b16a74f86)) (forall ((@x1py312 Term)(@x2py237 Term)(@x3py185 Term)(@x4py141 Term)(@x5py123 Term)(@x6py89 Term)) (! (or (not (HasType @x4py141 Tm_type)) (HasType (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT @x0py281 @x1py312) @x2py237) @x3py185) @x4py141) @x5py123) @x6py89) @x5py123) (not (HasType @x5py123 Tm_type)) (not (HasType @x6py89 (FStar.Pervasives.Native.tuple5 @x1py312 @x2py237 @x3py185 @x4py141 @x5py123))) (not (HasType @x1py312 Tm_type)) (not (HasType @x2py237 Tm_type)) (not (HasType @x3py185 Tm_type))) :pattern ((ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT @x0py281 @x1py312) @x2py237) @x3py185) @x4py141) @x5py123) @x6py89)) ))) (or (HasTypeZ @x0py281 Tm_arrow_c4e77c85318828d15167451b16a74f86) (and (HasType (@x1!395 @x0py281) Tm_type) (HasType (@x2!394 @x0py281) Tm_type) (HasType (@x3!393 @x0py281) Tm_type) (HasType (@x4!392 @x0py281) Tm_type) (HasType (@x5!391 @x0py281) Tm_type) (HasType (@x6!390 @x0py281) (FStar.Pervasives.Native.tuple5 (@x1!395 @x0py281) (@x2!394 @x0py281) (@x3!393 @x0py281) (@x4!392 @x0py281) (@x5!391 @x0py281))) (not (HasType (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT @x0py281 (@x1!395 @x0py281)) (@x2!394 @x0py281)) (@x3!393 @x0py281)) (@x4!392 @x0py281)) (@x5!391 @x0py281)) (@x6!390 @x0py281)) (@x5!391 @x0py281)))))) :pattern ((HasTypeZ @x0py281 Tm_arrow_c4e77c85318828d15167451b16a74f86)) )) :named FStar.Pervasives.Native_interpretation_Tm_arrow_c4e77c85318828d15167451b16a74f86))
(assert (! (forall ((@x0py282 Term)) (! (and (or (not (HasTypeZ @x0py282 Tm_arrow_caf985f824d0c8c31cc1333a92d97b40)) (forall ((@x1py313 Term)(@x2py238 Term)(@x3py186 Term)) (! (or (HasType (ApplyTT (ApplyTT (ApplyTT @x0py282 @x1py313) @x2py238) @x3py186) @x2py238) (not (HasType @x3py186 (FStar.Pervasives.Native.tuple2 @x1py313 @x2py238))) (not (HasType @x2py238 Tm_type)) (not (HasType @x1py313 Tm_type))) :pattern ((ApplyTT (ApplyTT (ApplyTT @x0py282 @x1py313) @x2py238) @x3py186)) ))) (or (HasTypeZ @x0py282 Tm_arrow_caf985f824d0c8c31cc1333a92d97b40) (and (HasType (@x1!398 @x0py282) Tm_type) (HasType (@x2!397 @x0py282) Tm_type) (HasType (@x3!396 @x0py282) (FStar.Pervasives.Native.tuple2 (@x1!398 @x0py282) (@x2!397 @x0py282))) (not (HasType (ApplyTT (ApplyTT (ApplyTT @x0py282 (@x1!398 @x0py282)) (@x2!397 @x0py282)) (@x3!396 @x0py282)) (@x2!397 @x0py282)))))) :pattern ((HasTypeZ @x0py282 Tm_arrow_caf985f824d0c8c31cc1333a92d97b40)) )) :named FStar.Pervasives.Native_interpretation_Tm_arrow_caf985f824d0c8c31cc1333a92d97b40))
(assert (! (forall ((@x0py283 Term)) (! (and (or (not (HasTypeZ @x0py283 Tm_arrow_cdcc1b95ab3319da21eacff69bb46ef7)) (forall ((@x1py314 Term)(@x2py239 Term)(@x3py187 Term)(@x4py142 Term)) (! (or (not (HasType @x4py142 (FStar.Pervasives.Native.tuple3 @x1py314 @x2py239 @x3py187))) (not (HasType @x1py314 Tm_type)) (not (HasType @x3py187 Tm_type)) (not (HasType @x2py239 Tm_type)) (HasType (ApplyTT (ApplyTT (ApplyTT (ApplyTT @x0py283 @x1py314) @x2py239) @x3py187) @x4py142) @x2py239)) :pattern ((ApplyTT (ApplyTT (ApplyTT (ApplyTT @x0py283 @x1py314) @x2py239) @x3py187) @x4py142)) ))) (or (HasTypeZ @x0py283 Tm_arrow_cdcc1b95ab3319da21eacff69bb46ef7) (and (HasType (@x1!402 @x0py283) Tm_type) (HasType (@x2!401 @x0py283) Tm_type) (HasType (@x3!400 @x0py283) Tm_type) (HasType (@x4!399 @x0py283) (FStar.Pervasives.Native.tuple3 (@x1!402 @x0py283) (@x2!401 @x0py283) (@x3!400 @x0py283))) (not (HasType (ApplyTT (ApplyTT (ApplyTT (ApplyTT @x0py283 (@x1!402 @x0py283)) (@x2!401 @x0py283)) (@x3!400 @x0py283)) (@x4!399 @x0py283)) (@x2!401 @x0py283)))))) :pattern ((HasTypeZ @x0py283 Tm_arrow_cdcc1b95ab3319da21eacff69bb46ef7)) )) :named FStar.Pervasives.Native_interpretation_Tm_arrow_cdcc1b95ab3319da21eacff69bb46ef7))
(assert (! (forall ((@x0py284 Term)) (! (and (or (not (HasTypeZ @x0py284 Tm_arrow_cfdfdc24b7e1267c05bed07df6aea066)) (forall ((@x1py315 Term)(@x2py240 Term)(@x3py188 Term)(@x4py143 Term)(@x5py124 Term)(@x6py90 Term)(@x7py67 Term)(@x8py45 Term)) (! (or (not (HasType @x7py67 Tm_type)) (not (HasType @x5py124 Tm_type)) (not (HasType @x6py90 Tm_type)) (not (HasType @x1py315 Tm_type)) (not (HasType @x8py45 (FStar.Pervasives.Native.tuple7 @x1py315 @x2py240 @x3py188 @x4py143 @x5py124 @x6py90 @x7py67))) (not (HasType @x4py143 Tm_type)) (not (HasType @x2py240 Tm_type)) (HasType (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT @x0py284 @x1py315) @x2py240) @x3py188) @x4py143) @x5py124) @x6py90) @x7py67) @x8py45) @x1py315) (not (HasType @x3py188 Tm_type))) :pattern ((ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT @x0py284 @x1py315) @x2py240) @x3py188) @x4py143) @x5py124) @x6py90) @x7py67) @x8py45)) ))) (or (HasTypeZ @x0py284 Tm_arrow_cfdfdc24b7e1267c05bed07df6aea066) (and (HasType (@x1!410 @x0py284) Tm_type) (HasType (@x2!409 @x0py284) Tm_type) (HasType (@x3!408 @x0py284) Tm_type) (HasType (@x4!407 @x0py284) Tm_type) (HasType (@x5!406 @x0py284) Tm_type) (HasType (@x6!405 @x0py284) Tm_type) (HasType (@x7!404 @x0py284) Tm_type) (HasType (@x8!403 @x0py284) (FStar.Pervasives.Native.tuple7 (@x1!410 @x0py284) (@x2!409 @x0py284) (@x3!408 @x0py284) (@x4!407 @x0py284) (@x5!406 @x0py284) (@x6!405 @x0py284) (@x7!404 @x0py284))) (not (HasType (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT @x0py284 (@x1!410 @x0py284)) (@x2!409 @x0py284)) (@x3!408 @x0py284)) (@x4!407 @x0py284)) (@x5!406 @x0py284)) (@x6!405 @x0py284)) (@x7!404 @x0py284)) (@x8!403 @x0py284)) (@x1!410 @x0py284)))))) :pattern ((HasTypeZ @x0py284 Tm_arrow_cfdfdc24b7e1267c05bed07df6aea066)) )) :named FStar.Pervasives.Native_interpretation_Tm_arrow_cfdfdc24b7e1267c05bed07df6aea066))
(assert (! (forall ((@x0py285 Term)(@x1py316 Term)) (! (and (or (not (HasTypeZ @x0py285 (Tm_arrow_cff63087848ae2e59f28234902699c0f @x1py316))) (forall ((@x2py241 Term)(@x3py189 Term)(@x4py144 Term)) (! (or (not (HasType @x4py144 @x3py189)) (not (HasType @x3py189 Tm_type)) (HasType (ApplyTT (ApplyTT (ApplyTT @x0py285 @x2py241) @x3py189) @x4py144) @x3py189) (not (HasType @x2py241 (Prims.list @x1py316)))) :pattern ((ApplyTT (ApplyTT (ApplyTT @x0py285 @x2py241) @x3py189) @x4py144)) ))) (or (HasTypeZ @x0py285 (Tm_arrow_cff63087848ae2e59f28234902699c0f @x1py316)) (and (HasType (@x2!413 @x1py316 @x0py285) (Prims.list @x1py316)) (HasType (@x3!412 @x1py316 @x0py285) Tm_type) (HasType (@x4!411 @x1py316 @x0py285) (@x3!412 @x1py316 @x0py285)) (not (HasType (ApplyTT (ApplyTT (ApplyTT @x0py285 (@x2!413 @x1py316 @x0py285)) (@x3!412 @x1py316 @x0py285)) (@x4!411 @x1py316 @x0py285)) (@x3!412 @x1py316 @x0py285)))))) :pattern ((HasTypeZ @x0py285 (Tm_arrow_cff63087848ae2e59f28234902699c0f @x1py316))) )) :named FStar.Pervasives.Native_interpretation_Tm_arrow_cff63087848ae2e59f28234902699c0f))
(assert (! (forall ((@x0py286 Term)) (! (and (or (not (HasTypeZ @x0py286 Tm_arrow_d3ed25c81ffc65c9f57b03935726ef00)) (forall ((@x1py317 Term)(@x2py242 Term)(@x3py190 Term)(@x4py145 Term)(@x5py125 Term)(@x6py91 Term)(@x7py68 Term)(@x8py46 Term)(@x9py33 Term)) (! (or (not (HasType @x3py190 Tm_type)) (not (HasType @x2py242 Tm_type)) (HasType (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT @x0py286 @x1py317) @x2py242) @x3py190) @x4py145) @x5py125) @x6py91) @x7py68) @x8py46) @x9py33) @x3py190) (not (HasType @x7py68 Tm_type)) (not (HasType @x5py125 Tm_type)) (not (HasType @x4py145 Tm_type)) (not (HasType @x6py91 Tm_type)) (not (HasType @x8py46 Tm_type)) (not (HasType @x1py317 Tm_type)) (not (HasType @x9py33 (FStar.Pervasives.Native.tuple8 @x1py317 @x2py242 @x3py190 @x4py145 @x5py125 @x6py91 @x7py68 @x8py46)))) :pattern ((ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT @x0py286 @x1py317) @x2py242) @x3py190) @x4py145) @x5py125) @x6py91) @x7py68) @x8py46) @x9py33)) ))) (or (HasTypeZ @x0py286 Tm_arrow_d3ed25c81ffc65c9f57b03935726ef00) (and (HasType (@x1!422 @x0py286) Tm_type) (HasType (@x2!421 @x0py286) Tm_type) (HasType (@x3!420 @x0py286) Tm_type) (HasType (@x4!419 @x0py286) Tm_type) (HasType (@x5!418 @x0py286) Tm_type) (HasType (@x6!417 @x0py286) Tm_type) (HasType (@x7!416 @x0py286) Tm_type) (HasType (@x8!415 @x0py286) Tm_type) (HasType (@x9!414 @x0py286) (FStar.Pervasives.Native.tuple8 (@x1!422 @x0py286) (@x2!421 @x0py286) (@x3!420 @x0py286) (@x4!419 @x0py286) (@x5!418 @x0py286) (@x6!417 @x0py286) (@x7!416 @x0py286) (@x8!415 @x0py286))) (not (HasType (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT @x0py286 (@x1!422 @x0py286)) (@x2!421 @x0py286)) (@x3!420 @x0py286)) (@x4!419 @x0py286)) (@x5!418 @x0py286)) (@x6!417 @x0py286)) (@x7!416 @x0py286)) (@x8!415 @x0py286)) (@x9!414 @x0py286)) (@x3!420 @x0py286)))))) :pattern ((HasTypeZ @x0py286 Tm_arrow_d3ed25c81ffc65c9f57b03935726ef00)) )) :named FStar.Pervasives.Native_interpretation_Tm_arrow_d3ed25c81ffc65c9f57b03935726ef00))
(assert (! (forall ((@x0py287 Term)) (! (and (or (not (HasTypeZ @x0py287 Tm_arrow_d24e3d13d5f3ba68fc4414c96e3c8794)) (forall ((@x1py318 Term)(@x2py243 Term)(@x3py191 Term)(@x4py146 Term)(@x5py126 Term)(@x6py92 Term)(@x7py69 Term)(@x8py47 Term)(@x9py34 Term)) (! (or (not (HasType @x1py318 Tm_type)) (not (HasType @x9py34 (FStar.Pervasives.Native.tuple8 @x1py318 @x2py243 @x3py191 @x4py146 @x5py126 @x6py92 @x7py69 @x8py47))) (not (HasType @x7py69 Tm_type)) (not (HasType @x5py126 Tm_type)) (not (HasType @x6py92 Tm_type)) (HasType (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT @x0py287 @x1py318) @x2py243) @x3py191) @x4py146) @x5py126) @x6py92) @x7py69) @x8py47) @x9py34) @x2py243) (not (HasType @x8py47 Tm_type)) (not (HasType @x2py243 Tm_type)) (not (HasType @x3py191 Tm_type)) (not (HasType @x4py146 Tm_type))) :pattern ((ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT @x0py287 @x1py318) @x2py243) @x3py191) @x4py146) @x5py126) @x6py92) @x7py69) @x8py47) @x9py34)) ))) (or (HasTypeZ @x0py287 Tm_arrow_d24e3d13d5f3ba68fc4414c96e3c8794) (and (HasType (@x1!431 @x0py287) Tm_type) (HasType (@x2!430 @x0py287) Tm_type) (HasType (@x3!429 @x0py287) Tm_type) (HasType (@x4!428 @x0py287) Tm_type) (HasType (@x5!427 @x0py287) Tm_type) (HasType (@x6!426 @x0py287) Tm_type) (HasType (@x7!425 @x0py287) Tm_type) (HasType (@x8!424 @x0py287) Tm_type) (HasType (@x9!423 @x0py287) (FStar.Pervasives.Native.tuple8 (@x1!431 @x0py287) (@x2!430 @x0py287) (@x3!429 @x0py287) (@x4!428 @x0py287) (@x5!427 @x0py287) (@x6!426 @x0py287) (@x7!425 @x0py287) (@x8!424 @x0py287))) (not (HasType (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT @x0py287 (@x1!431 @x0py287)) (@x2!430 @x0py287)) (@x3!429 @x0py287)) (@x4!428 @x0py287)) (@x5!427 @x0py287)) (@x6!426 @x0py287)) (@x7!425 @x0py287)) (@x8!424 @x0py287)) (@x9!423 @x0py287)) (@x2!430 @x0py287)))))) :pattern ((HasTypeZ @x0py287 Tm_arrow_d24e3d13d5f3ba68fc4414c96e3c8794)) )) :named FStar.Pervasives.Native_interpretation_Tm_arrow_d24e3d13d5f3ba68fc4414c96e3c8794))
(assert (! (forall ((@x0py288 Term)(@x1py319 Term)(@x2py244 Term)) (! (and (or (not (HasTypeZ @x0py288 (Tm_arrow_d73f8dacefc5e4cdc8cdd18970a5ae80 @x1py319 @x2py244))) (forall ((@x3py192 Term)) (! (or (not (HasType @x3py192 (FStar.Pervasives.Native_Tm_refine_f81289758692e8d7ff38327f5b71be85 @x2py244))) (HasType (ApplyTT @x0py288 @x3py192) (Prims.list @x1py319))) :pattern ((ApplyTT @x0py288 @x3py192)) ))) (or (HasTypeZ @x0py288 (Tm_arrow_d73f8dacefc5e4cdc8cdd18970a5ae80 @x1py319 @x2py244)) (and (HasType (@x3!432 @x2py244 @x1py319 @x0py288) (FStar.Pervasives.Native_Tm_refine_f81289758692e8d7ff38327f5b71be85 @x2py244)) (not (HasType (ApplyTT @x0py288 (@x3!432 @x2py244 @x1py319 @x0py288)) (Prims.list @x1py319)))))) :pattern ((HasTypeZ @x0py288 (Tm_arrow_d73f8dacefc5e4cdc8cdd18970a5ae80 @x1py319 @x2py244))) )) :named FStar.Pervasives.Native_interpretation_Tm_arrow_d73f8dacefc5e4cdc8cdd18970a5ae80))
(assert (! (forall ((@x0py289 Term)) (! (and (or (not (HasTypeZ @x0py289 Tm_arrow_dcdffe9de61b4fc93e96c6fef1350cf2)) (forall ((@x1py320 Term)(@x2py245 Term)(@x3py193 Term)(@x4py147 Term)(@x5py127 Term)(@x6py93 Term)(@x7py70 Term)(@x8py48 Term)) (! (or (not (HasType @x3py193 Tm_type)) (not (HasType @x6py93 Tm_type)) (not (HasType @x8py48 (FStar.Pervasives.Native.tuple7 @x1py320 @x2py245 @x3py193 @x4py147 @x5py127 @x6py93 @x7py70))) (not (HasType @x4py147 Tm_type)) (not (HasType @x1py320 Tm_type)) (HasType (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT @x0py289 @x1py320) @x2py245) @x3py193) @x4py147) @x5py127) @x6py93) @x7py70) @x8py48) @x6py93) (not (HasType @x2py245 Tm_type)) (not (HasType @x5py127 Tm_type)) (not (HasType @x7py70 Tm_type))) :pattern ((ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT @x0py289 @x1py320) @x2py245) @x3py193) @x4py147) @x5py127) @x6py93) @x7py70) @x8py48)) ))) (or (HasTypeZ @x0py289 Tm_arrow_dcdffe9de61b4fc93e96c6fef1350cf2) (and (HasType (@x1!440 @x0py289) Tm_type) (HasType (@x2!439 @x0py289) Tm_type) (HasType (@x3!438 @x0py289) Tm_type) (HasType (@x4!437 @x0py289) Tm_type) (HasType (@x5!436 @x0py289) Tm_type) (HasType (@x6!435 @x0py289) Tm_type) (HasType (@x7!434 @x0py289) Tm_type) (HasType (@x8!433 @x0py289) (FStar.Pervasives.Native.tuple7 (@x1!440 @x0py289) (@x2!439 @x0py289) (@x3!438 @x0py289) (@x4!437 @x0py289) (@x5!436 @x0py289) (@x6!435 @x0py289) (@x7!434 @x0py289))) (not (HasType (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT @x0py289 (@x1!440 @x0py289)) (@x2!439 @x0py289)) (@x3!438 @x0py289)) (@x4!437 @x0py289)) (@x5!436 @x0py289)) (@x6!435 @x0py289)) (@x7!434 @x0py289)) (@x8!433 @x0py289)) (@x6!435 @x0py289)))))) :pattern ((HasTypeZ @x0py289 Tm_arrow_dcdffe9de61b4fc93e96c6fef1350cf2)) )) :named FStar.Pervasives.Native_interpretation_Tm_arrow_dcdffe9de61b4fc93e96c6fef1350cf2))
(assert (! (forall ((@x0py290 Term)) (! (and (or (not (HasTypeZ @x0py290 Tm_arrow_df8cdbdef952cf059d2e5d9fe5b8bf02)) (forall ((@x1py321 Term)(@x2py246 Term)) (! (or (HasType (ApplyTT (ApplyTT @x0py290 @x1py321) @x2py246) (FStar.Pervasives.Native.option @x1py321)) (not (HasType @x1py321 Tm_type)) (not (HasType @x2py246 @x1py321))) :pattern ((ApplyTT (ApplyTT @x0py290 @x1py321) @x2py246)) ))) (or (HasTypeZ @x0py290 Tm_arrow_df8cdbdef952cf059d2e5d9fe5b8bf02) (and (HasType (@x1!442 @x0py290) Tm_type) (HasType (@x2!441 @x0py290) (@x1!442 @x0py290)) (not (HasType (ApplyTT (ApplyTT @x0py290 (@x1!442 @x0py290)) (@x2!441 @x0py290)) (FStar.Pervasives.Native.option (@x1!442 @x0py290))))))) :pattern ((HasTypeZ @x0py290 Tm_arrow_df8cdbdef952cf059d2e5d9fe5b8bf02)) )) :named FStar.Pervasives.Native_interpretation_Tm_arrow_df8cdbdef952cf059d2e5d9fe5b8bf02))
(assert (! (forall ((@x0py291 Term)) (! (and (or (not (HasTypeZ @x0py291 Tm_arrow_ea1d9eb08a7fc2511c09cc8007396ae9)) (forall ((@x1py322 Term)(@x2py247 Term)(@x3py194 Term)(@x4py148 Term)) (! (or (not (HasType @x1py322 Tm_type)) (HasType (ApplyTT (ApplyTT (ApplyTT (ApplyTT @x0py291 @x1py322) @x2py247) @x3py194) @x4py148) @x3py194) (not (HasType @x2py247 Tm_type)) (not (HasType @x3py194 Tm_type)) (not (HasType @x4py148 (FStar.Pervasives.Native.tuple3 @x1py322 @x2py247 @x3py194)))) :pattern ((ApplyTT (ApplyTT (ApplyTT (ApplyTT @x0py291 @x1py322) @x2py247) @x3py194) @x4py148)) ))) (or (HasTypeZ @x0py291 Tm_arrow_ea1d9eb08a7fc2511c09cc8007396ae9) (and (HasType (@x1!446 @x0py291) Tm_type) (HasType (@x2!445 @x0py291) Tm_type) (HasType (@x3!444 @x0py291) Tm_type) (HasType (@x4!443 @x0py291) (FStar.Pervasives.Native.tuple3 (@x1!446 @x0py291) (@x2!445 @x0py291) (@x3!444 @x0py291))) (not (HasType (ApplyTT (ApplyTT (ApplyTT (ApplyTT @x0py291 (@x1!446 @x0py291)) (@x2!445 @x0py291)) (@x3!444 @x0py291)) (@x4!443 @x0py291)) (@x3!444 @x0py291)))))) :pattern ((HasTypeZ @x0py291 Tm_arrow_ea1d9eb08a7fc2511c09cc8007396ae9)) )) :named FStar.Pervasives.Native_interpretation_Tm_arrow_ea1d9eb08a7fc2511c09cc8007396ae9))
(assert (! (forall ((@x0py292 Term)) (! (and (or (not (HasTypeZ @x0py292 Tm_arrow_ea874dc954d16eee0f41a749d898407d)) (forall ((@x1py323 Term)(@x2py248 Term)(@x3py195 Term)(@x4py149 Term)) (! (or (not (HasType @x4py149 @x2py248)) (HasType (ApplyTT (ApplyTT (ApplyTT (ApplyTT @x0py292 @x1py323) @x2py248) @x3py195) @x4py149) (FStar.Pervasives.Native.tuple2 @x1py323 @x2py248)) (not (HasType @x3py195 @x1py323)) (not (HasType @x1py323 Tm_type)) (not (HasType @x2py248 Tm_type))) :pattern ((ApplyTT (ApplyTT (ApplyTT (ApplyTT @x0py292 @x1py323) @x2py248) @x3py195) @x4py149)) ))) (or (HasTypeZ @x0py292 Tm_arrow_ea874dc954d16eee0f41a749d898407d) (and (HasType (@x1!450 @x0py292) Tm_type) (HasType (@x2!449 @x0py292) Tm_type) (HasType (@x3!448 @x0py292) (@x1!450 @x0py292)) (HasType (@x4!447 @x0py292) (@x2!449 @x0py292)) (not (HasType (ApplyTT (ApplyTT (ApplyTT (ApplyTT @x0py292 (@x1!450 @x0py292)) (@x2!449 @x0py292)) (@x3!448 @x0py292)) (@x4!447 @x0py292)) (FStar.Pervasives.Native.tuple2 (@x1!450 @x0py292) (@x2!449 @x0py292))))))) :pattern ((HasTypeZ @x0py292 Tm_arrow_ea874dc954d16eee0f41a749d898407d)) )) :named FStar.Pervasives.Native_interpretation_Tm_arrow_ea874dc954d16eee0f41a749d898407d))
(assert (! (forall ((@x0py293 Term)(@x1py324 Term)) (! (and (or (not (HasTypeZ @x0py293 (Tm_arrow_eaecbfb0f0c1d2e86edbe9df7d9fa3a5 @x1py324))) (forall ((@x2py249 Term)) (! (or (not (HasType @x2py249 (FStar.Pervasives.Native_Tm_refine_735fdbeb3c591d804f924767d4322a6a @x1py324))) (HasType (ApplyTT @x0py293 @x2py249) Tm_type)) :pattern ((ApplyTT @x0py293 @x2py249)) ))) (or (HasTypeZ @x0py293 (Tm_arrow_eaecbfb0f0c1d2e86edbe9df7d9fa3a5 @x1py324)) (and (HasType (@x2!451 @x1py324 @x0py293) (FStar.Pervasives.Native_Tm_refine_735fdbeb3c591d804f924767d4322a6a @x1py324)) (not (HasType (ApplyTT @x0py293 (@x2!451 @x1py324 @x0py293)) Tm_type))))) :pattern ((HasTypeZ @x0py293 (Tm_arrow_eaecbfb0f0c1d2e86edbe9df7d9fa3a5 @x1py324))) )) :named FStar.Pervasives.Native_interpretation_Tm_arrow_eaecbfb0f0c1d2e86edbe9df7d9fa3a5))
(assert (! (forall ((@x0py294 Term)) (! (and (or (not (HasTypeZ @x0py294 Tm_arrow_efdf2741fc5d2cd7ffdf01b992c9e8a9)) (forall ((@x1py325 Term)(@x2py250 Term)(@x3py196 Term)(@x4py150 Term)(@x5py128 Term)(@x6py94 Term)) (! (or (not (HasType @x6py94 (FStar.Pervasives.Native.tuple5 @x1py325 @x2py250 @x3py196 @x4py150 @x5py128))) (not (HasType @x1py325 Tm_type)) (not (HasType @x2py250 Tm_type)) (not (HasType @x5py128 Tm_type)) (not (HasType @x4py150 Tm_type)) (HasType (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT @x0py294 @x1py325) @x2py250) @x3py196) @x4py150) @x5py128) @x6py94) @x3py196) (not (HasType @x3py196 Tm_type))) :pattern ((ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT @x0py294 @x1py325) @x2py250) @x3py196) @x4py150) @x5py128) @x6py94)) ))) (or (HasTypeZ @x0py294 Tm_arrow_efdf2741fc5d2cd7ffdf01b992c9e8a9) (and (HasType (@x1!457 @x0py294) Tm_type) (HasType (@x2!456 @x0py294) Tm_type) (HasType (@x3!455 @x0py294) Tm_type) (HasType (@x4!454 @x0py294) Tm_type) (HasType (@x5!453 @x0py294) Tm_type) (HasType (@x6!452 @x0py294) (FStar.Pervasives.Native.tuple5 (@x1!457 @x0py294) (@x2!456 @x0py294) (@x3!455 @x0py294) (@x4!454 @x0py294) (@x5!453 @x0py294))) (not (HasType (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT @x0py294 (@x1!457 @x0py294)) (@x2!456 @x0py294)) (@x3!455 @x0py294)) (@x4!454 @x0py294)) (@x5!453 @x0py294)) (@x6!452 @x0py294)) (@x3!455 @x0py294)))))) :pattern ((HasTypeZ @x0py294 Tm_arrow_efdf2741fc5d2cd7ffdf01b992c9e8a9)) )) :named FStar.Pervasives.Native_interpretation_Tm_arrow_efdf2741fc5d2cd7ffdf01b992c9e8a9))
(assert (! (forall ((@x0py295 Term)) (! (and (or (not (HasTypeZ @x0py295 Tm_arrow_fb2b0d135fd95ad5a0c9931d87ebd9cf)) (forall ((@x1py326 Term)(@x2py251 Term)(@x3py197 Term)(@x4py151 Term)(@x5py129 Term)(@x6py95 Term)(@x7py71 Term)(@x8py49 Term)(@x9py35 Term)) (! (or (not (HasType @x3py197 Tm_type)) (HasType (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT @x0py295 @x1py326) @x2py251) @x3py197) @x4py151) @x5py129) @x6py95) @x7py71) @x8py49) @x9py35) @x4py151) (not (HasType @x4py151 Tm_type)) (not (HasType @x8py49 Tm_type)) (not (HasType @x6py95 Tm_type)) (not (HasType @x2py251 Tm_type)) (not (HasType @x5py129 Tm_type)) (not (HasType @x7py71 Tm_type)) (not (HasType @x9py35 (FStar.Pervasives.Native.tuple8 @x1py326 @x2py251 @x3py197 @x4py151 @x5py129 @x6py95 @x7py71 @x8py49))) (not (HasType @x1py326 Tm_type))) :pattern ((ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT @x0py295 @x1py326) @x2py251) @x3py197) @x4py151) @x5py129) @x6py95) @x7py71) @x8py49) @x9py35)) ))) (or (HasTypeZ @x0py295 Tm_arrow_fb2b0d135fd95ad5a0c9931d87ebd9cf) (and (HasType (@x1!466 @x0py295) Tm_type) (HasType (@x2!465 @x0py295) Tm_type) (HasType (@x3!464 @x0py295) Tm_type) (HasType (@x4!463 @x0py295) Tm_type) (HasType (@x5!462 @x0py295) Tm_type) (HasType (@x6!461 @x0py295) Tm_type) (HasType (@x7!460 @x0py295) Tm_type) (HasType (@x8!459 @x0py295) Tm_type) (HasType (@x9!458 @x0py295) (FStar.Pervasives.Native.tuple8 (@x1!466 @x0py295) (@x2!465 @x0py295) (@x3!464 @x0py295) (@x4!463 @x0py295) (@x5!462 @x0py295) (@x6!461 @x0py295) (@x7!460 @x0py295) (@x8!459 @x0py295))) (not (HasType (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT @x0py295 (@x1!466 @x0py295)) (@x2!465 @x0py295)) (@x3!464 @x0py295)) (@x4!463 @x0py295)) (@x5!462 @x0py295)) (@x6!461 @x0py295)) (@x7!460 @x0py295)) (@x8!459 @x0py295)) (@x9!458 @x0py295)) (@x4!463 @x0py295)))))) :pattern ((HasTypeZ @x0py295 Tm_arrow_fb2b0d135fd95ad5a0c9931d87ebd9cf)) )) :named FStar.Pervasives.Native_interpretation_Tm_arrow_fb2b0d135fd95ad5a0c9931d87ebd9cf))
(assert (! (forall ((@u0py95 Fuel)(@x1py327 Term)) (! (or (is-Tm_arrow (PreType @x1py327)) (not (HasTypeFuel @u0py95 @x1py327 Tm_arrow_0dad7bc7f64c4faac713e4788a31a16e))) :pattern ((HasTypeFuel @u0py95 @x1py327 Tm_arrow_0dad7bc7f64c4faac713e4788a31a16e)) )) :named FStar.Pervasives.Native_pre_typing_Tm_arrow_0dad7bc7f64c4faac713e4788a31a16e))
(assert (! (forall ((@u0py96 Fuel)(@x1py328 Term)(@x2py252 Term)) (! (or (is-Tm_arrow (PreType @x1py328)) (not (HasTypeFuel @u0py96 @x1py328 (Tm_arrow_0e873ada4642b527a7ed8ad8c9a23c0c @x2py252)))) :pattern ((HasTypeFuel @u0py96 @x1py328 (Tm_arrow_0e873ada4642b527a7ed8ad8c9a23c0c @x2py252))) )) :named FStar.Pervasives.Native_pre_typing_Tm_arrow_0e873ada4642b527a7ed8ad8c9a23c0c))
(assert (! (forall ((@u0py97 Fuel)(@x1py329 Term)) (! (or (is-Tm_arrow (PreType @x1py329)) (not (HasTypeFuel @u0py97 @x1py329 Tm_arrow_02d3b5b79bf8b1df357192967171c4e9))) :pattern ((HasTypeFuel @u0py97 @x1py329 Tm_arrow_02d3b5b79bf8b1df357192967171c4e9)) )) :named FStar.Pervasives.Native_pre_typing_Tm_arrow_02d3b5b79bf8b1df357192967171c4e9))
(assert (! (forall ((@u0py98 Fuel)(@x1py330 Term)(@x2py253 Term)) (! (or (is-Tm_arrow (PreType @x1py330)) (not (HasTypeFuel @u0py98 @x1py330 (Tm_arrow_3e3f6c09cac83bd2c87427772baf967c @x2py253)))) :pattern ((HasTypeFuel @u0py98 @x1py330 (Tm_arrow_3e3f6c09cac83bd2c87427772baf967c @x2py253))) )) :named FStar.Pervasives.Native_pre_typing_Tm_arrow_3e3f6c09cac83bd2c87427772baf967c))
(assert (! (forall ((@u0py99 Fuel)(@x1py331 Term)) (! (or (is-Tm_arrow (PreType @x1py331)) (not (HasTypeFuel @u0py99 @x1py331 Tm_arrow_4a0e4247f19d3748beed54010175e86f))) :pattern ((HasTypeFuel @u0py99 @x1py331 Tm_arrow_4a0e4247f19d3748beed54010175e86f)) )) :named FStar.Pervasives.Native_pre_typing_Tm_arrow_4a0e4247f19d3748beed54010175e86f))
(assert (! (forall ((@u0py100 Fuel)(@x1py332 Term)) (! (or (is-Tm_arrow (PreType @x1py332)) (not (HasTypeFuel @u0py100 @x1py332 Tm_arrow_4be4d0827cb852d3f57a920e42b0e232))) :pattern ((HasTypeFuel @u0py100 @x1py332 Tm_arrow_4be4d0827cb852d3f57a920e42b0e232)) )) :named FStar.Pervasives.Native_pre_typing_Tm_arrow_4be4d0827cb852d3f57a920e42b0e232))
(assert (! (forall ((@u0py101 Fuel)(@x1py333 Term)) (! (or (is-Tm_arrow (PreType @x1py333)) (not (HasTypeFuel @u0py101 @x1py333 Tm_arrow_4f040c69fbe8d7b2e50ca31bd5455a8e))) :pattern ((HasTypeFuel @u0py101 @x1py333 Tm_arrow_4f040c69fbe8d7b2e50ca31bd5455a8e)) )) :named FStar.Pervasives.Native_pre_typing_Tm_arrow_4f040c69fbe8d7b2e50ca31bd5455a8e))
(assert (! (forall ((@u0py102 Fuel)(@x1py334 Term)(@x2py254 Term)) (! (or (is-Tm_arrow (PreType @x1py334)) (not (HasTypeFuel @u0py102 @x1py334 (Tm_arrow_6d32d43d8787bb16acca18c75ecbe1b1 @x2py254)))) :pattern ((HasTypeFuel @u0py102 @x1py334 (Tm_arrow_6d32d43d8787bb16acca18c75ecbe1b1 @x2py254))) )) :named FStar.Pervasives.Native_pre_typing_Tm_arrow_6d32d43d8787bb16acca18c75ecbe1b1))
(assert (! (forall ((@u0py103 Fuel)(@x1py335 Term)) (! (or (is-Tm_arrow (PreType @x1py335)) (not (HasTypeFuel @u0py103 @x1py335 Tm_arrow_6e23aa00e38a92d031af78d42cdf6218))) :pattern ((HasTypeFuel @u0py103 @x1py335 Tm_arrow_6e23aa00e38a92d031af78d42cdf6218)) )) :named FStar.Pervasives.Native_pre_typing_Tm_arrow_6e23aa00e38a92d031af78d42cdf6218))
(assert (! (forall ((@u0py104 Fuel)(@x1py336 Term)) (! (or (is-Tm_arrow (PreType @x1py336)) (not (HasTypeFuel @u0py104 @x1py336 Tm_arrow_7d790bb96aadc2828cd88ef5143114e0))) :pattern ((HasTypeFuel @u0py104 @x1py336 Tm_arrow_7d790bb96aadc2828cd88ef5143114e0)) )) :named FStar.Pervasives.Native_pre_typing_Tm_arrow_7d790bb96aadc2828cd88ef5143114e0))
(assert (! (forall ((@u0py105 Fuel)(@x1py337 Term)) (! (or (is-Tm_arrow (PreType @x1py337)) (not (HasTypeFuel @u0py105 @x1py337 Tm_arrow_7fe3e7847982dd1674bac902db1b25d6))) :pattern ((HasTypeFuel @u0py105 @x1py337 Tm_arrow_7fe3e7847982dd1674bac902db1b25d6)) )) :named FStar.Pervasives.Native_pre_typing_Tm_arrow_7fe3e7847982dd1674bac902db1b25d6))
(assert (! (forall ((@u0py106 Fuel)(@x1py338 Term)) (! (or (is-Tm_arrow (PreType @x1py338)) (not (HasTypeFuel @u0py106 @x1py338 Tm_arrow_9a2d52aef28944ddfbe3d4af8c624d0b))) :pattern ((HasTypeFuel @u0py106 @x1py338 Tm_arrow_9a2d52aef28944ddfbe3d4af8c624d0b)) )) :named FStar.Pervasives.Native_pre_typing_Tm_arrow_9a2d52aef28944ddfbe3d4af8c624d0b))
(assert (! (forall ((@u0py107 Fuel)(@x1py339 Term)) (! (or (is-Tm_arrow (PreType @x1py339)) (not (HasTypeFuel @u0py107 @x1py339 Tm_arrow_9ac1fc4819cbc364e77988b8605dfbd2))) :pattern ((HasTypeFuel @u0py107 @x1py339 Tm_arrow_9ac1fc4819cbc364e77988b8605dfbd2)) )) :named FStar.Pervasives.Native_pre_typing_Tm_arrow_9ac1fc4819cbc364e77988b8605dfbd2))
(assert (! (forall ((@u0py108 Fuel)(@x1py340 Term)) (! (or (is-Tm_arrow (PreType @x1py340)) (not (HasTypeFuel @u0py108 @x1py340 Tm_arrow_9c915ca115c32a0e42eafce253bfd2cd))) :pattern ((HasTypeFuel @u0py108 @x1py340 Tm_arrow_9c915ca115c32a0e42eafce253bfd2cd)) )) :named FStar.Pervasives.Native_pre_typing_Tm_arrow_9c915ca115c32a0e42eafce253bfd2cd))
(assert (! (forall ((@u0py109 Fuel)(@x1py341 Term)) (! (or (is-Tm_arrow (PreType @x1py341)) (not (HasTypeFuel @u0py109 @x1py341 Tm_arrow_15e10e26df1554e12524dd8fbe3e2f20))) :pattern ((HasTypeFuel @u0py109 @x1py341 Tm_arrow_15e10e26df1554e12524dd8fbe3e2f20)) )) :named FStar.Pervasives.Native_pre_typing_Tm_arrow_15e10e26df1554e12524dd8fbe3e2f20))
(assert (! (forall ((@u0py110 Fuel)(@x1py342 Term)(@x2py255 Term)) (! (or (is-Tm_arrow (PreType @x1py342)) (not (HasTypeFuel @u0py110 @x1py342 (Tm_arrow_37a65a1a1bca77204cc44fddae45a654 @x2py255)))) :pattern ((HasTypeFuel @u0py110 @x1py342 (Tm_arrow_37a65a1a1bca77204cc44fddae45a654 @x2py255))) )) :named FStar.Pervasives.Native_pre_typing_Tm_arrow_37a65a1a1bca77204cc44fddae45a654))
(assert (! (forall ((@u0py111 Fuel)(@x1py343 Term)) (! (or (is-Tm_arrow (PreType @x1py343)) (not (HasTypeFuel @u0py111 @x1py343 Tm_arrow_45ca9c2b9710ead839b1f3bf7ef7a305))) :pattern ((HasTypeFuel @u0py111 @x1py343 Tm_arrow_45ca9c2b9710ead839b1f3bf7ef7a305)) )) :named FStar.Pervasives.Native_pre_typing_Tm_arrow_45ca9c2b9710ead839b1f3bf7ef7a305))
(assert (! (forall ((@u0py112 Fuel)(@x1py344 Term)(@x2py256 Term)(@x3py198 Term)) (! (or (is-Tm_arrow (PreType @x1py344)) (not (HasTypeFuel @u0py112 @x1py344 (Tm_arrow_52c7e04c1aef70d52ef99d2cc9753aed @x2py256 @x3py198)))) :pattern ((HasTypeFuel @u0py112 @x1py344 (Tm_arrow_52c7e04c1aef70d52ef99d2cc9753aed @x2py256 @x3py198))) )) :named FStar.Pervasives.Native_pre_typing_Tm_arrow_52c7e04c1aef70d52ef99d2cc9753aed))
(assert (! (forall ((@u0py113 Fuel)(@x1py345 Term)(@x2py257 Term)(@x3py199 Term)) (! (or (is-Tm_arrow (PreType @x1py345)) (not (HasTypeFuel @u0py113 @x1py345 (Tm_arrow_52d29796e7fa32d5b27962b2b725e507 @x2py257 @x3py199)))) :pattern ((HasTypeFuel @u0py113 @x1py345 (Tm_arrow_52d29796e7fa32d5b27962b2b725e507 @x2py257 @x3py199))) )) :named FStar.Pervasives.Native_pre_typing_Tm_arrow_52d29796e7fa32d5b27962b2b725e507))
(assert (! (forall ((@u0py114 Fuel)(@x1py346 Term)) (! (or (is-Tm_arrow (PreType @x1py346)) (not (HasTypeFuel @u0py114 @x1py346 Tm_arrow_57fa2a22c6acb92aec36a98d388a288a))) :pattern ((HasTypeFuel @u0py114 @x1py346 Tm_arrow_57fa2a22c6acb92aec36a98d388a288a)) )) :named FStar.Pervasives.Native_pre_typing_Tm_arrow_57fa2a22c6acb92aec36a98d388a288a))
(assert (! (forall ((@u0py115 Fuel)(@x1py347 Term)(@x2py258 Term)) (! (or (is-Tm_arrow (PreType @x1py347)) (not (HasTypeFuel @u0py115 @x1py347 (Tm_arrow_071cdac364befd9b3a1ef15c982380ca @x2py258)))) :pattern ((HasTypeFuel @u0py115 @x1py347 (Tm_arrow_071cdac364befd9b3a1ef15c982380ca @x2py258))) )) :named FStar.Pervasives.Native_pre_typing_Tm_arrow_071cdac364befd9b3a1ef15c982380ca))
(assert (! (forall ((@u0py116 Fuel)(@x1py348 Term)(@x2py259 Term)) (! (or (is-Tm_arrow (PreType @x1py348)) (not (HasTypeFuel @u0py116 @x1py348 (Tm_arrow_81b181f0a50be9c359f1e3afcab46996 @x2py259)))) :pattern ((HasTypeFuel @u0py116 @x1py348 (Tm_arrow_81b181f0a50be9c359f1e3afcab46996 @x2py259))) )) :named FStar.Pervasives.Native_pre_typing_Tm_arrow_81b181f0a50be9c359f1e3afcab46996))
(assert (! (forall ((@u0py117 Fuel)(@x1py349 Term)) (! (or (is-Tm_arrow (PreType @x1py349)) (not (HasTypeFuel @u0py117 @x1py349 Tm_arrow_85e89735c9356e795787b0e5b5a2f363))) :pattern ((HasTypeFuel @u0py117 @x1py349 Tm_arrow_85e89735c9356e795787b0e5b5a2f363)) )) :named FStar.Pervasives.Native_pre_typing_Tm_arrow_85e89735c9356e795787b0e5b5a2f363))
(assert (! (forall ((@u0py118 Fuel)(@x1py350 Term)(@x2py260 Term)) (! (or (is-Tm_arrow (PreType @x1py350)) (not (HasTypeFuel @u0py118 @x1py350 (Tm_arrow_302ec1d59a0c160d8b944503f142e361 @x2py260)))) :pattern ((HasTypeFuel @u0py118 @x1py350 (Tm_arrow_302ec1d59a0c160d8b944503f142e361 @x2py260))) )) :named FStar.Pervasives.Native_pre_typing_Tm_arrow_302ec1d59a0c160d8b944503f142e361))
(assert (! (forall ((@u0py119 Fuel)(@x1py351 Term)(@x2py261 Term)) (! (or (is-Tm_arrow (PreType @x1py351)) (not (HasTypeFuel @u0py119 @x1py351 (Tm_arrow_471e47868c0f16aa720099399b21873e @x2py261)))) :pattern ((HasTypeFuel @u0py119 @x1py351 (Tm_arrow_471e47868c0f16aa720099399b21873e @x2py261))) )) :named FStar.Pervasives.Native_pre_typing_Tm_arrow_471e47868c0f16aa720099399b21873e))
(assert (! (forall ((@u0py120 Fuel)(@x1py352 Term)) (! (or (is-Tm_arrow (PreType @x1py352)) (not (HasTypeFuel @u0py120 @x1py352 Tm_arrow_530e081bbbd964966a402b7e14fb9d69))) :pattern ((HasTypeFuel @u0py120 @x1py352 Tm_arrow_530e081bbbd964966a402b7e14fb9d69)) )) :named FStar.Pervasives.Native_pre_typing_Tm_arrow_530e081bbbd964966a402b7e14fb9d69))
(assert (! (forall ((@u0py121 Fuel)(@x1py353 Term)) (! (or (is-Tm_arrow (PreType @x1py353)) (not (HasTypeFuel @u0py121 @x1py353 Tm_arrow_879fb9ac6887317b2253fa415d6e297f))) :pattern ((HasTypeFuel @u0py121 @x1py353 Tm_arrow_879fb9ac6887317b2253fa415d6e297f)) )) :named FStar.Pervasives.Native_pre_typing_Tm_arrow_879fb9ac6887317b2253fa415d6e297f))
(assert (! (forall ((@u0py122 Fuel)(@x1py354 Term)) (! (or (is-Tm_arrow (PreType @x1py354)) (not (HasTypeFuel @u0py122 @x1py354 Tm_arrow_959ecc63baf89362269f0a0ccd5668b0))) :pattern ((HasTypeFuel @u0py122 @x1py354 Tm_arrow_959ecc63baf89362269f0a0ccd5668b0)) )) :named FStar.Pervasives.Native_pre_typing_Tm_arrow_959ecc63baf89362269f0a0ccd5668b0))
(assert (! (forall ((@u0py123 Fuel)(@x1py355 Term)) (! (or (is-Tm_arrow (PreType @x1py355)) (not (HasTypeFuel @u0py123 @x1py355 Tm_arrow_3209a7a409ec605c6410051291219438))) :pattern ((HasTypeFuel @u0py123 @x1py355 Tm_arrow_3209a7a409ec605c6410051291219438)) )) :named FStar.Pervasives.Native_pre_typing_Tm_arrow_3209a7a409ec605c6410051291219438))
(assert (! (forall ((@u0py124 Fuel)(@x1py356 Term)) (! (or (is-Tm_arrow (PreType @x1py356)) (not (HasTypeFuel @u0py124 @x1py356 Tm_arrow_4902efa5488190c456656843f7646562))) :pattern ((HasTypeFuel @u0py124 @x1py356 Tm_arrow_4902efa5488190c456656843f7646562)) )) :named FStar.Pervasives.Native_pre_typing_Tm_arrow_4902efa5488190c456656843f7646562))
(assert (! (forall ((@u0py125 Fuel)(@x1py357 Term)) (! (or (is-Tm_arrow (PreType @x1py357)) (not (HasTypeFuel @u0py125 @x1py357 Tm_arrow_6426d9c2c96ff0881bdcece54fff4277))) :pattern ((HasTypeFuel @u0py125 @x1py357 Tm_arrow_6426d9c2c96ff0881bdcece54fff4277)) )) :named FStar.Pervasives.Native_pre_typing_Tm_arrow_6426d9c2c96ff0881bdcece54fff4277))
(assert (! (forall ((@u0py126 Fuel)(@x1py358 Term)) (! (or (is-Tm_arrow (PreType @x1py358)) (not (HasTypeFuel @u0py126 @x1py358 Tm_arrow_7493b9132d0860b9d4513189a97e9cc2))) :pattern ((HasTypeFuel @u0py126 @x1py358 Tm_arrow_7493b9132d0860b9d4513189a97e9cc2)) )) :named FStar.Pervasives.Native_pre_typing_Tm_arrow_7493b9132d0860b9d4513189a97e9cc2))
(assert (! (forall ((@u0py127 Fuel)(@x1py359 Term)) (! (or (is-Tm_arrow (PreType @x1py359)) (not (HasTypeFuel @u0py127 @x1py359 Tm_arrow_08953d1bb2ff5a2bd59d780036c9167c))) :pattern ((HasTypeFuel @u0py127 @x1py359 Tm_arrow_08953d1bb2ff5a2bd59d780036c9167c)) )) :named FStar.Pervasives.Native_pre_typing_Tm_arrow_08953d1bb2ff5a2bd59d780036c9167c))
(assert (! (forall ((@u0py128 Fuel)(@x1py360 Term)) (! (or (is-Tm_arrow (PreType @x1py360)) (not (HasTypeFuel @u0py128 @x1py360 Tm_arrow_051405f28864bdc9643ed01eb3b92100))) :pattern ((HasTypeFuel @u0py128 @x1py360 Tm_arrow_051405f28864bdc9643ed01eb3b92100)) )) :named FStar.Pervasives.Native_pre_typing_Tm_arrow_051405f28864bdc9643ed01eb3b92100))
(assert (! (forall ((@u0py129 Fuel)(@x1py361 Term)) (! (or (is-Tm_arrow (PreType @x1py361)) (not (HasTypeFuel @u0py129 @x1py361 Tm_arrow_59613b37f4c818dae9a7b082d5155f29))) :pattern ((HasTypeFuel @u0py129 @x1py361 Tm_arrow_59613b37f4c818dae9a7b082d5155f29)) )) :named FStar.Pervasives.Native_pre_typing_Tm_arrow_59613b37f4c818dae9a7b082d5155f29))
(assert (! (forall ((@u0py130 Fuel)(@x1py362 Term)) (! (or (is-Tm_arrow (PreType @x1py362)) (not (HasTypeFuel @u0py130 @x1py362 Tm_arrow_61613ad0fe4e0bf49515f58291a6d65c))) :pattern ((HasTypeFuel @u0py130 @x1py362 Tm_arrow_61613ad0fe4e0bf49515f58291a6d65c)) )) :named FStar.Pervasives.Native_pre_typing_Tm_arrow_61613ad0fe4e0bf49515f58291a6d65c))
(assert (! (forall ((@u0py131 Fuel)(@x1py363 Term)) (! (or (is-Tm_arrow (PreType @x1py363)) (not (HasTypeFuel @u0py131 @x1py363 Tm_arrow_88772e9c1eff3cee09de1db3fc8087ca))) :pattern ((HasTypeFuel @u0py131 @x1py363 Tm_arrow_88772e9c1eff3cee09de1db3fc8087ca)) )) :named FStar.Pervasives.Native_pre_typing_Tm_arrow_88772e9c1eff3cee09de1db3fc8087ca))
(assert (! (forall ((@u0py132 Fuel)(@x1py364 Term)) (! (or (is-Tm_arrow (PreType @x1py364)) (not (HasTypeFuel @u0py132 @x1py364 Tm_arrow_094933c54ea2002054dad555e01358ba))) :pattern ((HasTypeFuel @u0py132 @x1py364 Tm_arrow_094933c54ea2002054dad555e01358ba)) )) :named FStar.Pervasives.Native_pre_typing_Tm_arrow_094933c54ea2002054dad555e01358ba))
(assert (! (forall ((@u0py133 Fuel)(@x1py365 Term)) (! (or (is-Tm_arrow (PreType @x1py365)) (not (HasTypeFuel @u0py133 @x1py365 Tm_arrow_21647838ffa803cb1cbaf82c99e03f01))) :pattern ((HasTypeFuel @u0py133 @x1py365 Tm_arrow_21647838ffa803cb1cbaf82c99e03f01)) )) :named FStar.Pervasives.Native_pre_typing_Tm_arrow_21647838ffa803cb1cbaf82c99e03f01))
(assert (! (forall ((@u0py134 Fuel)(@x1py366 Term)) (! (or (is-Tm_arrow (PreType @x1py366)) (not (HasTypeFuel @u0py134 @x1py366 Tm_arrow_642316967e62d4894b4c5052196039ab))) :pattern ((HasTypeFuel @u0py134 @x1py366 Tm_arrow_642316967e62d4894b4c5052196039ab)) )) :named FStar.Pervasives.Native_pre_typing_Tm_arrow_642316967e62d4894b4c5052196039ab))
(assert (! (forall ((@u0py135 Fuel)(@x1py367 Term)) (! (or (is-Tm_arrow (PreType @x1py367)) (not (HasTypeFuel @u0py135 @x1py367 Tm_arrow_300677279975362e42b142f0238e1ce1))) :pattern ((HasTypeFuel @u0py135 @x1py367 Tm_arrow_300677279975362e42b142f0238e1ce1)) )) :named FStar.Pervasives.Native_pre_typing_Tm_arrow_300677279975362e42b142f0238e1ce1))
(assert (! (forall ((@u0py136 Fuel)(@x1py368 Term)) (! (or (is-Tm_arrow (PreType @x1py368)) (not (HasTypeFuel @u0py136 @x1py368 Tm_arrow_a25fd62df6305ca0d5e962cb259a6497))) :pattern ((HasTypeFuel @u0py136 @x1py368 Tm_arrow_a25fd62df6305ca0d5e962cb259a6497)) )) :named FStar.Pervasives.Native_pre_typing_Tm_arrow_a25fd62df6305ca0d5e962cb259a6497))
(assert (! (forall ((@u0py137 Fuel)(@x1py369 Term)) (! (or (is-Tm_arrow (PreType @x1py369)) (not (HasTypeFuel @u0py137 @x1py369 Tm_arrow_a984cc683b69e3e0d41bb0853d6a1664))) :pattern ((HasTypeFuel @u0py137 @x1py369 Tm_arrow_a984cc683b69e3e0d41bb0853d6a1664)) )) :named FStar.Pervasives.Native_pre_typing_Tm_arrow_a984cc683b69e3e0d41bb0853d6a1664))
(assert (! (forall ((@u0py138 Fuel)(@x1py370 Term)) (! (or (is-Tm_arrow (PreType @x1py370)) (not (HasTypeFuel @u0py138 @x1py370 Tm_arrow_aa2ac0c2eefec3ef36a52a5c1e92dd6b))) :pattern ((HasTypeFuel @u0py138 @x1py370 Tm_arrow_aa2ac0c2eefec3ef36a52a5c1e92dd6b)) )) :named FStar.Pervasives.Native_pre_typing_Tm_arrow_aa2ac0c2eefec3ef36a52a5c1e92dd6b))
(assert (! (forall ((@u0py139 Fuel)(@x1py371 Term)(@x2py262 Term)) (! (or (is-Tm_arrow (PreType @x1py371)) (not (HasTypeFuel @u0py139 @x1py371 (Tm_arrow_b4cc8204c08bed808cee22615b49bc5f @x2py262)))) :pattern ((HasTypeFuel @u0py139 @x1py371 (Tm_arrow_b4cc8204c08bed808cee22615b49bc5f @x2py262))) )) :named FStar.Pervasives.Native_pre_typing_Tm_arrow_b4cc8204c08bed808cee22615b49bc5f))
(assert (! (forall ((@u0py140 Fuel)(@x1py372 Term)(@x2py263 Term)) (! (or (is-Tm_arrow (PreType @x1py372)) (not (HasTypeFuel @u0py140 @x1py372 (Tm_arrow_bc1e750d04f01d381d7c63e81b8697d1 @x2py263)))) :pattern ((HasTypeFuel @u0py140 @x1py372 (Tm_arrow_bc1e750d04f01d381d7c63e81b8697d1 @x2py263))) )) :named FStar.Pervasives.Native_pre_typing_Tm_arrow_bc1e750d04f01d381d7c63e81b8697d1))
(assert (! (forall ((@u0py141 Fuel)(@x1py373 Term)) (! (or (is-Tm_arrow (PreType @x1py373)) (not (HasTypeFuel @u0py141 @x1py373 Tm_arrow_c4e77c85318828d15167451b16a74f86))) :pattern ((HasTypeFuel @u0py141 @x1py373 Tm_arrow_c4e77c85318828d15167451b16a74f86)) )) :named FStar.Pervasives.Native_pre_typing_Tm_arrow_c4e77c85318828d15167451b16a74f86))
(assert (! (forall ((@u0py142 Fuel)(@x1py374 Term)) (! (or (is-Tm_arrow (PreType @x1py374)) (not (HasTypeFuel @u0py142 @x1py374 Tm_arrow_caf985f824d0c8c31cc1333a92d97b40))) :pattern ((HasTypeFuel @u0py142 @x1py374 Tm_arrow_caf985f824d0c8c31cc1333a92d97b40)) )) :named FStar.Pervasives.Native_pre_typing_Tm_arrow_caf985f824d0c8c31cc1333a92d97b40))
(assert (! (forall ((@u0py143 Fuel)(@x1py375 Term)) (! (or (is-Tm_arrow (PreType @x1py375)) (not (HasTypeFuel @u0py143 @x1py375 Tm_arrow_cdcc1b95ab3319da21eacff69bb46ef7))) :pattern ((HasTypeFuel @u0py143 @x1py375 Tm_arrow_cdcc1b95ab3319da21eacff69bb46ef7)) )) :named FStar.Pervasives.Native_pre_typing_Tm_arrow_cdcc1b95ab3319da21eacff69bb46ef7))
(assert (! (forall ((@u0py144 Fuel)(@x1py376 Term)) (! (or (is-Tm_arrow (PreType @x1py376)) (not (HasTypeFuel @u0py144 @x1py376 Tm_arrow_cfdfdc24b7e1267c05bed07df6aea066))) :pattern ((HasTypeFuel @u0py144 @x1py376 Tm_arrow_cfdfdc24b7e1267c05bed07df6aea066)) )) :named FStar.Pervasives.Native_pre_typing_Tm_arrow_cfdfdc24b7e1267c05bed07df6aea066))
(assert (! (forall ((@u0py145 Fuel)(@x1py377 Term)(@x2py264 Term)) (! (or (is-Tm_arrow (PreType @x1py377)) (not (HasTypeFuel @u0py145 @x1py377 (Tm_arrow_cff63087848ae2e59f28234902699c0f @x2py264)))) :pattern ((HasTypeFuel @u0py145 @x1py377 (Tm_arrow_cff63087848ae2e59f28234902699c0f @x2py264))) )) :named FStar.Pervasives.Native_pre_typing_Tm_arrow_cff63087848ae2e59f28234902699c0f))
(assert (! (forall ((@u0py146 Fuel)(@x1py378 Term)) (! (or (is-Tm_arrow (PreType @x1py378)) (not (HasTypeFuel @u0py146 @x1py378 Tm_arrow_d3ed25c81ffc65c9f57b03935726ef00))) :pattern ((HasTypeFuel @u0py146 @x1py378 Tm_arrow_d3ed25c81ffc65c9f57b03935726ef00)) )) :named FStar.Pervasives.Native_pre_typing_Tm_arrow_d3ed25c81ffc65c9f57b03935726ef00))
(assert (! (forall ((@u0py147 Fuel)(@x1py379 Term)) (! (or (is-Tm_arrow (PreType @x1py379)) (not (HasTypeFuel @u0py147 @x1py379 Tm_arrow_d24e3d13d5f3ba68fc4414c96e3c8794))) :pattern ((HasTypeFuel @u0py147 @x1py379 Tm_arrow_d24e3d13d5f3ba68fc4414c96e3c8794)) )) :named FStar.Pervasives.Native_pre_typing_Tm_arrow_d24e3d13d5f3ba68fc4414c96e3c8794))
(assert (! (forall ((@u0py148 Fuel)(@x1py380 Term)(@x2py265 Term)(@x3py200 Term)) (! (or (is-Tm_arrow (PreType @x1py380)) (not (HasTypeFuel @u0py148 @x1py380 (Tm_arrow_d73f8dacefc5e4cdc8cdd18970a5ae80 @x2py265 @x3py200)))) :pattern ((HasTypeFuel @u0py148 @x1py380 (Tm_arrow_d73f8dacefc5e4cdc8cdd18970a5ae80 @x2py265 @x3py200))) )) :named FStar.Pervasives.Native_pre_typing_Tm_arrow_d73f8dacefc5e4cdc8cdd18970a5ae80))
(assert (! (forall ((@u0py149 Fuel)(@x1py381 Term)) (! (or (is-Tm_arrow (PreType @x1py381)) (not (HasTypeFuel @u0py149 @x1py381 Tm_arrow_dcdffe9de61b4fc93e96c6fef1350cf2))) :pattern ((HasTypeFuel @u0py149 @x1py381 Tm_arrow_dcdffe9de61b4fc93e96c6fef1350cf2)) )) :named FStar.Pervasives.Native_pre_typing_Tm_arrow_dcdffe9de61b4fc93e96c6fef1350cf2))
(assert (! (forall ((@u0py150 Fuel)(@x1py382 Term)) (! (or (is-Tm_arrow (PreType @x1py382)) (not (HasTypeFuel @u0py150 @x1py382 Tm_arrow_df8cdbdef952cf059d2e5d9fe5b8bf02))) :pattern ((HasTypeFuel @u0py150 @x1py382 Tm_arrow_df8cdbdef952cf059d2e5d9fe5b8bf02)) )) :named FStar.Pervasives.Native_pre_typing_Tm_arrow_df8cdbdef952cf059d2e5d9fe5b8bf02))
(assert (! (forall ((@u0py151 Fuel)(@x1py383 Term)) (! (or (is-Tm_arrow (PreType @x1py383)) (not (HasTypeFuel @u0py151 @x1py383 Tm_arrow_ea1d9eb08a7fc2511c09cc8007396ae9))) :pattern ((HasTypeFuel @u0py151 @x1py383 Tm_arrow_ea1d9eb08a7fc2511c09cc8007396ae9)) )) :named FStar.Pervasives.Native_pre_typing_Tm_arrow_ea1d9eb08a7fc2511c09cc8007396ae9))
(assert (! (forall ((@u0py152 Fuel)(@x1py384 Term)) (! (or (is-Tm_arrow (PreType @x1py384)) (not (HasTypeFuel @u0py152 @x1py384 Tm_arrow_ea874dc954d16eee0f41a749d898407d))) :pattern ((HasTypeFuel @u0py152 @x1py384 Tm_arrow_ea874dc954d16eee0f41a749d898407d)) )) :named FStar.Pervasives.Native_pre_typing_Tm_arrow_ea874dc954d16eee0f41a749d898407d))
(assert (! (forall ((@u0py153 Fuel)(@x1py385 Term)(@x2py266 Term)) (! (or (is-Tm_arrow (PreType @x1py385)) (not (HasTypeFuel @u0py153 @x1py385 (Tm_arrow_eaecbfb0f0c1d2e86edbe9df7d9fa3a5 @x2py266)))) :pattern ((HasTypeFuel @u0py153 @x1py385 (Tm_arrow_eaecbfb0f0c1d2e86edbe9df7d9fa3a5 @x2py266))) )) :named FStar.Pervasives.Native_pre_typing_Tm_arrow_eaecbfb0f0c1d2e86edbe9df7d9fa3a5))
(assert (! (forall ((@u0py154 Fuel)(@x1py386 Term)) (! (or (is-Tm_arrow (PreType @x1py386)) (not (HasTypeFuel @u0py154 @x1py386 Tm_arrow_efdf2741fc5d2cd7ffdf01b992c9e8a9))) :pattern ((HasTypeFuel @u0py154 @x1py386 Tm_arrow_efdf2741fc5d2cd7ffdf01b992c9e8a9)) )) :named FStar.Pervasives.Native_pre_typing_Tm_arrow_efdf2741fc5d2cd7ffdf01b992c9e8a9))
(assert (! (forall ((@u0py155 Fuel)(@x1py387 Term)) (! (or (is-Tm_arrow (PreType @x1py387)) (not (HasTypeFuel @u0py155 @x1py387 Tm_arrow_fb2b0d135fd95ad5a0c9931d87ebd9cf))) :pattern ((HasTypeFuel @u0py155 @x1py387 Tm_arrow_fb2b0d135fd95ad5a0c9931d87ebd9cf)) )) :named FStar.Pervasives.Native_pre_typing_Tm_arrow_fb2b0d135fd95ad5a0c9931d87ebd9cf))
(assert (! (forall ((@x0py296 Term)(@u1py1 Fuel)(@x2py267 Term)(@x3py201 Term)(@x4py152 Term)) (! (or (not (HasTypeFuel @u1py1 @x0py296 (FStar.Pervasives.Native.tuple3 @x2py267 @x3py201 @x4py152))) (= (FStar.Pervasives.Native.tuple3 @x2py267 @x3py201 @x4py152) (PreType @x0py296))) :pattern ((HasTypeFuel @u1py1 @x0py296 (FStar.Pervasives.Native.tuple3 @x2py267 @x3py201 @x4py152))) )) :named FStar.Pervasives.Native_pretyping_3c3cf72e1bf7b1d6f8b0873a4feb6ec5))
(assert (! (forall ((@x0py297 Term)(@u1py2 Fuel)) (! (or (not (HasTypeFuel @u1py2 @x0py297 FStar.Pervasives.Native.norm_step)) (= FStar.Pervasives.Native.norm_step (PreType @x0py297))) :pattern ((HasTypeFuel @u1py2 @x0py297 FStar.Pervasives.Native.norm_step)) )) :named FStar.Pervasives.Native_pretyping_5ecf96a6ca7f03d556aad1db4626c209))
(assert (! (forall ((@x0py298 Term)(@u1py3 Fuel)(@x2py268 Term)(@x3py202 Term)(@x4py153 Term)(@x5py130 Term)(@x6py96 Term)(@x7py72 Term)(@x8py50 Term)) (! (or (not (HasTypeFuel @u1py3 @x0py298 (FStar.Pervasives.Native.tuple7 @x2py268 @x3py202 @x4py153 @x5py130 @x6py96 @x7py72 @x8py50))) (= (FStar.Pervasives.Native.tuple7 @x2py268 @x3py202 @x4py153 @x5py130 @x6py96 @x7py72 @x8py50) (PreType @x0py298))) :pattern ((HasTypeFuel @u1py3 @x0py298 (FStar.Pervasives.Native.tuple7 @x2py268 @x3py202 @x4py153 @x5py130 @x6py96 @x7py72 @x8py50))) )) :named FStar.Pervasives.Native_pretyping_6b53da96265c34bc84c778bd6410b170))
(assert (! (forall ((@x0py299 Term)(@u1py4 Fuel)(@x2py269 Term)(@x3py203 Term)(@x4py154 Term)(@x5py131 Term)(@x6py97 Term)(@x7py73 Term)) (! (or (not (HasTypeFuel @u1py4 @x0py299 (FStar.Pervasives.Native.tuple6 @x2py269 @x3py203 @x4py154 @x5py131 @x6py97 @x7py73))) (= (FStar.Pervasives.Native.tuple6 @x2py269 @x3py203 @x4py154 @x5py131 @x6py97 @x7py73) (PreType @x0py299))) :pattern ((HasTypeFuel @u1py4 @x0py299 (FStar.Pervasives.Native.tuple6 @x2py269 @x3py203 @x4py154 @x5py131 @x6py97 @x7py73))) )) :named FStar.Pervasives.Native_pretyping_77f71cd45f062f25ddde8ee758ebe7ca))
(assert (! (forall ((@x0py300 Term)(@u1py5 Fuel)(@x2py270 Term)(@x3py204 Term)(@x4py155 Term)(@x5py132 Term)(@x6py98 Term)) (! (or (not (HasTypeFuel @u1py5 @x0py300 (FStar.Pervasives.Native.tuple5 @x2py270 @x3py204 @x4py155 @x5py132 @x6py98))) (= (FStar.Pervasives.Native.tuple5 @x2py270 @x3py204 @x4py155 @x5py132 @x6py98) (PreType @x0py300))) :pattern ((HasTypeFuel @u1py5 @x0py300 (FStar.Pervasives.Native.tuple5 @x2py270 @x3py204 @x4py155 @x5py132 @x6py98))) )) :named FStar.Pervasives.Native_pretyping_616a6997592eb0970d9b3cb7e154d4a2))
(assert (! (forall ((@x0py301 Term)(@u1py6 Fuel)(@x2py271 Term)(@x3py205 Term)) (! (or (not (HasTypeFuel @u1py6 @x0py301 (FStar.Pervasives.Native.tuple2 @x2py271 @x3py205))) (= (FStar.Pervasives.Native.tuple2 @x2py271 @x3py205) (PreType @x0py301))) :pattern ((HasTypeFuel @u1py6 @x0py301 (FStar.Pervasives.Native.tuple2 @x2py271 @x3py205))) )) :named FStar.Pervasives.Native_pretyping_4894c30cf477acf9a27e7a844279eb08))
(assert (! (forall ((@x0py302 Term)(@u1py7 Fuel)(@x2py272 Term)(@x3py206 Term)(@x4py156 Term)(@x5py133 Term)) (! (or (not (HasTypeFuel @u1py7 @x0py302 (FStar.Pervasives.Native.tuple4 @x2py272 @x3py206 @x4py156 @x5py133))) (= (FStar.Pervasives.Native.tuple4 @x2py272 @x3py206 @x4py156 @x5py133) (PreType @x0py302))) :pattern ((HasTypeFuel @u1py7 @x0py302 (FStar.Pervasives.Native.tuple4 @x2py272 @x3py206 @x4py156 @x5py133))) )) :named FStar.Pervasives.Native_pretyping_a921c31b95ad6298eaccfc3532fde0e3))
(assert (! (forall ((@x0py303 Term)(@u1py8 Fuel)(@x2py273 Term)) (! (or (not (HasTypeFuel @u1py8 @x0py303 (FStar.Pervasives.Native.option @x2py273))) (= (FStar.Pervasives.Native.option @x2py273) (PreType @x0py303))) :pattern ((HasTypeFuel @u1py8 @x0py303 (FStar.Pervasives.Native.option @x2py273))) )) :named FStar.Pervasives.Native_pretyping_b53dbd183c526bc5d0f20d7b966ae125))
(assert (! (forall ((@x0py304 Term)(@u1py9 Fuel)(@x2py274 Term)(@x3py207 Term)(@x4py157 Term)(@x5py134 Term)(@x6py99 Term)(@x7py74 Term)(@x8py51 Term)(@x9py36 Term)) (! (or (not (HasTypeFuel @u1py9 @x0py304 (FStar.Pervasives.Native.tuple8 @x2py274 @x3py207 @x4py157 @x5py134 @x6py99 @x7py74 @x8py51 @x9py36))) (= (FStar.Pervasives.Native.tuple8 @x2py274 @x3py207 @x4py157 @x5py134 @x6py99 @x7py74 @x8py51 @x9py36) (PreType @x0py304))) :pattern ((HasTypeFuel @u1py9 @x0py304 (FStar.Pervasives.Native.tuple8 @x2py274 @x3py207 @x4py157 @x5py134 @x6py99 @x7py74 @x8py51 @x9py36))) )) :named FStar.Pervasives.Native_pretyping_db058ca688f8c62b81e4ac913379b0df))
(assert (! (forall ((@x0py305 Term)) (! (and (or (not (HasTypeZ @x0py305 Tm_arrow_1dac41f442c1cc7b5405768e36ae98f9)) (forall ((@x1py388 Term)(@x2py275 Term)(@x3py208 Term)(@x4py158 Term)(@x5py135 Term)) (! (or (HasType (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT @x0py305 @x1py388) @x2py275) @x3py208) @x4py158) @x5py135) (ApplyTT (ApplyTT @x3py208 (FStar.Pervasives.__proj__Mkdtuple4__item___1 @x1py388 @x2py275 @x3py208 @x4py158 @x5py135)) (FStar.Pervasives.__proj__Mkdtuple4__item___2 @x1py388 @x2py275 @x3py208 @x4py158 @x5py135))) (not (HasType @x1py388 Tm_type)) (not (HasType @x2py275 (Tm_arrow_e06752ba152f81447b312efcdf8f0e23 @x1py388))) (not (HasType @x3py208 (Tm_arrow_614c7b5886a6e5b119a37c35c7e4bd59 @x2py275 @x1py388))) (not (HasType @x4py158 (Tm_arrow_dbf39bf049d72c3088e1ed84d246952d @x3py208 @x2py275 @x1py388))) (not (HasType @x5py135 (FStar.Pervasives.dtuple4 @x1py388 @x2py275 @x3py208 @x4py158)))) :pattern ((ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT @x0py305 @x1py388) @x2py275) @x3py208) @x4py158) @x5py135)) ))) (or (HasTypeZ @x0py305 Tm_arrow_1dac41f442c1cc7b5405768e36ae98f9) (and (HasType (@x1!471 @x0py305) Tm_type) (HasType (@x2!470 @x0py305) (Tm_arrow_e06752ba152f81447b312efcdf8f0e23 (@x1!471 @x0py305))) (HasType (@x3!469 @x0py305) (Tm_arrow_614c7b5886a6e5b119a37c35c7e4bd59 (@x2!470 @x0py305) (@x1!471 @x0py305))) (HasType (@x4!468 @x0py305) (Tm_arrow_dbf39bf049d72c3088e1ed84d246952d (@x3!469 @x0py305) (@x2!470 @x0py305) (@x1!471 @x0py305))) (HasType (@x5!467 @x0py305) (FStar.Pervasives.dtuple4 (@x1!471 @x0py305) (@x2!470 @x0py305) (@x3!469 @x0py305) (@x4!468 @x0py305))) (not (HasType (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT @x0py305 (@x1!471 @x0py305)) (@x2!470 @x0py305)) (@x3!469 @x0py305)) (@x4!468 @x0py305)) (@x5!467 @x0py305)) (ApplyTT (ApplyTT (@x3!469 @x0py305) (FStar.Pervasives.__proj__Mkdtuple4__item___1 (@x1!471 @x0py305) (@x2!470 @x0py305) (@x3!469 @x0py305) (@x4!468 @x0py305) (@x5!467 @x0py305))) (FStar.Pervasives.__proj__Mkdtuple4__item___2 (@x1!471 @x0py305) (@x2!470 @x0py305) (@x3!469 @x0py305) (@x4!468 @x0py305) (@x5!467 @x0py305)))))))) :pattern ((HasTypeZ @x0py305 Tm_arrow_1dac41f442c1cc7b5405768e36ae98f9)) )) :named FStar.Pervasives_interpretation_Tm_arrow_1dac41f442c1cc7b5405768e36ae98f9))
(assert (! (forall ((@x0py306 Term)(@x1py389 Term)) (! (and (or (not (HasTypeZ @x0py306 (Tm_arrow_1dca680c8d3cb58c552551782d77cbad @x1py389))) (forall ((@x2py276 Term)) (! (or (not (HasType @x2py276 FStar.Pervasives_Tm_refine_47384bef739d1f0729fd782d351dc9a5)) (HasType (ApplyTT @x0py306 @x2py276) @x1py389)) :pattern ((ApplyTT @x0py306 @x2py276)) ))) (or (HasTypeZ @x0py306 (Tm_arrow_1dca680c8d3cb58c552551782d77cbad @x1py389)) (and (HasType (@x2!472 @x1py389 @x0py306) FStar.Pervasives_Tm_refine_47384bef739d1f0729fd782d351dc9a5) (not (HasType (ApplyTT @x0py306 (@x2!472 @x1py389 @x0py306)) @x1py389))))) :pattern ((HasTypeZ @x0py306 (Tm_arrow_1dca680c8d3cb58c552551782d77cbad @x1py389))) )) :named FStar.Pervasives_interpretation_Tm_arrow_1dca680c8d3cb58c552551782d77cbad))
(assert (! (forall ((@x0py307 Term)(@x1py390 Term)) (! (and (or (not (HasTypeZ @x0py307 (Tm_arrow_1e34c94069c60657ba290f517d081e8f @x1py390))) (forall ((@x2py277 Term)(@x3py209 Term)(@x4py159 Term)(@x5py136 Term)(@x6py100 Term)(@x7py75 Term)) (! (or (HasType (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT @x0py307 @x2py277) @x3py209) @x4py159) @x5py136) @x6py100) @x7py75) @x1py390) (not (HasType @x2py277 Tm_type)) (not (HasType @x3py209 Tm_type)) (not (HasType @x4py159 Tm_type)) (not (HasType @x5py136 (FStar.Pervasives.all_wp_h @x2py277 @x3py209))) (not (HasType @x6py100 (FStar.Pervasives.all_post_h @x2py277 @x3py209))) (not (HasType @x7py75 @x2py277))) :pattern ((ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT @x0py307 @x2py277) @x3py209) @x4py159) @x5py136) @x6py100) @x7py75)) ))) (or (HasTypeZ @x0py307 (Tm_arrow_1e34c94069c60657ba290f517d081e8f @x1py390)) (and (HasType (@x2!478 @x1py390 @x0py307) Tm_type) (HasType (@x3!477 @x1py390 @x0py307) Tm_type) (HasType (@x4!476 @x1py390 @x0py307) Tm_type) (HasType (@x5!475 @x1py390 @x0py307) (FStar.Pervasives.all_wp_h (@x2!478 @x1py390 @x0py307) (@x3!477 @x1py390 @x0py307))) (HasType (@x6!474 @x1py390 @x0py307) (FStar.Pervasives.all_post_h (@x2!478 @x1py390 @x0py307) (@x3!477 @x1py390 @x0py307))) (HasType (@x7!473 @x1py390 @x0py307) (@x2!478 @x1py390 @x0py307)) (not (HasType (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT @x0py307 (@x2!478 @x1py390 @x0py307)) (@x3!477 @x1py390 @x0py307)) (@x4!476 @x1py390 @x0py307)) (@x5!475 @x1py390 @x0py307)) (@x6!474 @x1py390 @x0py307)) (@x7!473 @x1py390 @x0py307)) @x1py390))))) :pattern ((HasTypeZ @x0py307 (Tm_arrow_1e34c94069c60657ba290f517d081e8f @x1py390))) )) :named FStar.Pervasives_interpretation_Tm_arrow_1e34c94069c60657ba290f517d081e8f))
(assert (! (forall ((@x0py308 Term)(@x1py391 Term)) (! (and (or (not (HasTypeZ @x0py308 (Tm_arrow_1eae0eaa54a90d4d45405fc37f59299f @x1py391))) (forall ((@x2py278 Term)(@x3py210 Term)(@x4py160 Term)(@x5py137 Term)(@x6py101 Term)) (! (or (HasType (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT @x0py308 @x2py278) @x3py210) @x4py160) @x5py137) @x6py101) @x1py391) (not (HasType @x4py160 (FStar.Pervasives.st_wp_h @x2py278 @x3py210))) (not (HasType @x6py101 @x2py278)) (not (HasType @x5py137 (FStar.Pervasives.st_post_h @x2py278 @x3py210))) (not (HasType @x3py210 Tm_type)) (not (HasType @x2py278 Tm_type))) :pattern ((ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT @x0py308 @x2py278) @x3py210) @x4py160) @x5py137) @x6py101)) ))) (or (HasTypeZ @x0py308 (Tm_arrow_1eae0eaa54a90d4d45405fc37f59299f @x1py391)) (and (HasType (@x2!483 @x1py391 @x0py308) Tm_type) (HasType (@x3!482 @x1py391 @x0py308) Tm_type) (HasType (@x4!481 @x1py391 @x0py308) (FStar.Pervasives.st_wp_h (@x2!483 @x1py391 @x0py308) (@x3!482 @x1py391 @x0py308))) (HasType (@x5!480 @x1py391 @x0py308) (FStar.Pervasives.st_post_h (@x2!483 @x1py391 @x0py308) (@x3!482 @x1py391 @x0py308))) (HasType (@x6!479 @x1py391 @x0py308) (@x2!483 @x1py391 @x0py308)) (not (HasType (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT @x0py308 (@x2!483 @x1py391 @x0py308)) (@x3!482 @x1py391 @x0py308)) (@x4!481 @x1py391 @x0py308)) (@x5!480 @x1py391 @x0py308)) (@x6!479 @x1py391 @x0py308)) @x1py391))))) :pattern ((HasTypeZ @x0py308 (Tm_arrow_1eae0eaa54a90d4d45405fc37f59299f @x1py391))) )) :named FStar.Pervasives_interpretation_Tm_arrow_1eae0eaa54a90d4d45405fc37f59299f))
(assert (! (forall ((@x0py309 Term)) (! (and (or (not (HasTypeZ @x0py309 Tm_arrow_2b9e6d83dc78155badfb9f85c9c4c887)) (forall ((@x1py392 Term)(@x2py279 Term)(@x3py211 Term)) (! (or (not (HasType @x2py279 Tm_type)) (HasType (ApplyTT (ApplyTT (ApplyTT @x0py309 @x1py392) @x2py279) @x3py211) Tm_type) (not (HasType @x1py392 Tm_type)) (not (HasType @x3py211 Tm_type))) :pattern ((ApplyTT (ApplyTT (ApplyTT @x0py309 @x1py392) @x2py279) @x3py211)) ))) (or (HasTypeZ @x0py309 Tm_arrow_2b9e6d83dc78155badfb9f85c9c4c887) (and (HasType (@x1!486 @x0py309) Tm_type) (HasType (@x2!485 @x0py309) Tm_type) (HasType (@x3!484 @x0py309) Tm_type) (not (HasType (ApplyTT (ApplyTT (ApplyTT @x0py309 (@x1!486 @x0py309)) (@x2!485 @x0py309)) (@x3!484 @x0py309)) Tm_type))))) :pattern ((HasTypeZ @x0py309 Tm_arrow_2b9e6d83dc78155badfb9f85c9c4c887)) )) :named FStar.Pervasives_interpretation_Tm_arrow_2b9e6d83dc78155badfb9f85c9c4c887))
(assert (! (forall ((@x0py310 Term)(@x1py393 Term)) (! (and (or (not (HasTypeZ @x0py310 (Tm_arrow_2c5c4d02fbece15e63160b3c87c78b01 @x1py393))) (forall ((@x2py280 Term)) (! (or (not (HasType @x2py280 FStar.Pervasives.__internal_ocaml_attributes)) (HasType (ApplyTT @x0py310 @x2py280) @x1py393)) :pattern ((ApplyTT @x0py310 @x2py280)) ))) (or (HasTypeZ @x0py310 (Tm_arrow_2c5c4d02fbece15e63160b3c87c78b01 @x1py393)) (and (HasType (@x2!487 @x1py393 @x0py310) FStar.Pervasives.__internal_ocaml_attributes) (not (HasType (ApplyTT @x0py310 (@x2!487 @x1py393 @x0py310)) @x1py393))))) :pattern ((HasTypeZ @x0py310 (Tm_arrow_2c5c4d02fbece15e63160b3c87c78b01 @x1py393))) )) :named FStar.Pervasives_interpretation_Tm_arrow_2c5c4d02fbece15e63160b3c87c78b01))
(assert (! (forall ((@x0py311 Term)(@x1py394 Term)) (! (and (or (not (HasTypeZ @x0py311 (Tm_arrow_2e05015ec978795a21c10130eebfeae9 @x1py394))) (forall ((@x2py281 Term)(@x3py212 Term)(@x4py161 Term)(@x5py138 Term)) (! (or (HasType (ApplyTT (ApplyTT (ApplyTT (ApplyTT @x0py311 @x2py281) @x3py212) @x4py161) @x5py138) @x1py394) (not (HasType @x2py281 Tm_type)) (not (HasType @x5py138 @x2py281)) (not (HasType @x3py212 Tm_type)) (not (HasType @x4py161 (FStar.Pervasives.st_post_h @x2py281 @x3py212)))) :pattern ((ApplyTT (ApplyTT (ApplyTT (ApplyTT @x0py311 @x2py281) @x3py212) @x4py161) @x5py138)) ))) (or (HasTypeZ @x0py311 (Tm_arrow_2e05015ec978795a21c10130eebfeae9 @x1py394)) (and (HasType (@x2!491 @x1py394 @x0py311) Tm_type) (HasType (@x3!490 @x1py394 @x0py311) Tm_type) (HasType (@x4!489 @x1py394 @x0py311) (FStar.Pervasives.st_post_h (@x2!491 @x1py394 @x0py311) (@x3!490 @x1py394 @x0py311))) (HasType (@x5!488 @x1py394 @x0py311) (@x2!491 @x1py394 @x0py311)) (not (HasType (ApplyTT (ApplyTT (ApplyTT (ApplyTT @x0py311 (@x2!491 @x1py394 @x0py311)) (@x3!490 @x1py394 @x0py311)) (@x4!489 @x1py394 @x0py311)) (@x5!488 @x1py394 @x0py311)) @x1py394))))) :pattern ((HasTypeZ @x0py311 (Tm_arrow_2e05015ec978795a21c10130eebfeae9 @x1py394))) )) :named FStar.Pervasives_interpretation_Tm_arrow_2e05015ec978795a21c10130eebfeae9))
(assert (! (forall ((@x0py312 Term)(@x1py395 Term)(@x2py282 Term)) (! (and (or (not (HasTypeZ @x0py312 (Tm_arrow_4c49ce37319be38829a6032b2247a659 @x1py395 @x2py282))) (forall ((@x3py213 Term)) (! (or (not (HasType @x3py213 (FStar.Pervasives_Tm_refine_a4dcdeeacbcb04d05a6720f786918fd6 @x2py282 @x1py395))) (HasType (ApplyTT @x0py312 @x3py213) Tm_type)) :pattern ((ApplyTT @x0py312 @x3py213)) ))) (or (HasTypeZ @x0py312 (Tm_arrow_4c49ce37319be38829a6032b2247a659 @x1py395 @x2py282)) (and (HasType (@x3!492 @x2py282 @x1py395 @x0py312) (FStar.Pervasives_Tm_refine_a4dcdeeacbcb04d05a6720f786918fd6 @x2py282 @x1py395)) (not (HasType (ApplyTT @x0py312 (@x3!492 @x2py282 @x1py395 @x0py312)) Tm_type))))) :pattern ((HasTypeZ @x0py312 (Tm_arrow_4c49ce37319be38829a6032b2247a659 @x1py395 @x2py282))) )) :named FStar.Pervasives_interpretation_Tm_arrow_4c49ce37319be38829a6032b2247a659))
(assert (! (forall ((@x0py313 Term)(@x1py396 Term)) (! (and (or (not (HasTypeZ @x0py313 (Tm_arrow_4e8df289938ae02937cd1c94aba2cf20 @x1py396))) (forall ((@x2py283 Term)(@x3py214 Term)(@x4py162 Term)(@x5py139 Term)) (! (or (HasType (ApplyTT (ApplyTT (ApplyTT (ApplyTT @x0py313 @x2py283) @x3py214) @x4py162) @x5py139) @x1py396) (not (HasType @x3py214 Tm_type)) (not (HasType @x2py283 Tm_type)) (not (HasType @x4py162 (FStar.Pervasives.ex_wp @x2py283))) (not (HasType @x5py139 (FStar.Pervasives.ex_post @x2py283)))) :pattern ((ApplyTT (ApplyTT (ApplyTT (ApplyTT @x0py313 @x2py283) @x3py214) @x4py162) @x5py139)) ))) (or (HasTypeZ @x0py313 (Tm_arrow_4e8df289938ae02937cd1c94aba2cf20 @x1py396)) (and (HasType (@x2!496 @x1py396 @x0py313) Tm_type) (HasType (@x3!495 @x1py396 @x0py313) Tm_type) (HasType (@x4!494 @x1py396 @x0py313) (FStar.Pervasives.ex_wp (@x2!496 @x1py396 @x0py313))) (HasType (@x5!493 @x1py396 @x0py313) (FStar.Pervasives.ex_post (@x2!496 @x1py396 @x0py313))) (not (HasType (ApplyTT (ApplyTT (ApplyTT (ApplyTT @x0py313 (@x2!496 @x1py396 @x0py313)) (@x3!495 @x1py396 @x0py313)) (@x4!494 @x1py396 @x0py313)) (@x5!493 @x1py396 @x0py313)) @x1py396))))) :pattern ((HasTypeZ @x0py313 (Tm_arrow_4e8df289938ae02937cd1c94aba2cf20 @x1py396))) )) :named FStar.Pervasives_interpretation_Tm_arrow_4e8df289938ae02937cd1c94aba2cf20))
(assert (! (forall ((@x0py314 Term)) (! (and (or (not (HasTypeZ @x0py314 Tm_arrow_4eb2e0118149efb6019111cf994e0f6b)) (forall ((@x1py397 Term)(@x2py284 Term)(@x3py215 Term)) (! (or (HasType (ApplyTT (ApplyTT (ApplyTT @x0py314 @x1py397) @x2py284) @x3py215) Tm_type) (not (HasType @x2py284 @x1py397)) (not (HasType @x1py397 Tm_type)) (not (HasType @x3py215 (FStar.Pervasives.ex_post @x1py397)))) :pattern ((ApplyTT (ApplyTT (ApplyTT @x0py314 @x1py397) @x2py284) @x3py215)) ))) (or (HasTypeZ @x0py314 Tm_arrow_4eb2e0118149efb6019111cf994e0f6b) (and (HasType (@x1!499 @x0py314) Tm_type) (HasType (@x2!498 @x0py314) (@x1!499 @x0py314)) (HasType (@x3!497 @x0py314) (FStar.Pervasives.ex_post (@x1!499 @x0py314))) (not (HasType (ApplyTT (ApplyTT (ApplyTT @x0py314 (@x1!499 @x0py314)) (@x2!498 @x0py314)) (@x3!497 @x0py314)) Tm_type))))) :pattern ((HasTypeZ @x0py314 Tm_arrow_4eb2e0118149efb6019111cf994e0f6b)) )) :named FStar.Pervasives_interpretation_Tm_arrow_4eb2e0118149efb6019111cf994e0f6b))
(assert (! (forall ((@x0py315 Term)(@x1py398 Term)) (! (and (or (not (HasTypeZ @x0py315 (Tm_arrow_5caeced02ae19cd28fdaa3e41ea7d339 @x1py398))) (forall ((@x2py285 Term)(@x3py216 Term)(@x4py163 Term)(@x5py140 Term)) (! (or (HasType (ApplyTT (ApplyTT (ApplyTT (ApplyTT @x0py315 @x2py285) @x3py216) @x4py163) @x5py140) @x1py398) (not (HasType @x2py285 Tm_type)) (not (HasType @x3py216 Tm_type)) (not (HasType @x4py163 (FStar.Pervasives.all_post_h @x2py285 @x3py216))) (not (HasType @x5py140 @x2py285))) :pattern ((ApplyTT (ApplyTT (ApplyTT (ApplyTT @x0py315 @x2py285) @x3py216) @x4py163) @x5py140)) ))) (or (HasTypeZ @x0py315 (Tm_arrow_5caeced02ae19cd28fdaa3e41ea7d339 @x1py398)) (and (HasType (@x2!503 @x1py398 @x0py315) Tm_type) (HasType (@x3!502 @x1py398 @x0py315) Tm_type) (HasType (@x4!501 @x1py398 @x0py315) (FStar.Pervasives.all_post_h (@x2!503 @x1py398 @x0py315) (@x3!502 @x1py398 @x0py315))) (HasType (@x5!500 @x1py398 @x0py315) (@x2!503 @x1py398 @x0py315)) (not (HasType (ApplyTT (ApplyTT (ApplyTT (ApplyTT @x0py315 (@x2!503 @x1py398 @x0py315)) (@x3!502 @x1py398 @x0py315)) (@x4!501 @x1py398 @x0py315)) (@x5!500 @x1py398 @x0py315)) @x1py398))))) :pattern ((HasTypeZ @x0py315 (Tm_arrow_5caeced02ae19cd28fdaa3e41ea7d339 @x1py398))) )) :named FStar.Pervasives_interpretation_Tm_arrow_5caeced02ae19cd28fdaa3e41ea7d339))
(assert (! (forall ((@x0py316 Term)(@x1py399 Term)(@x2py286 Term)(@x3py217 Term)) (! (and (or (not (HasTypeZ @x0py316 (Tm_arrow_5db9487ea079f4bbc6de2da583d038f7 @x1py399 @x2py286 @x3py217))) (forall ((@x4py164 Term)(@x5py141 Term)) (! (or (not (HasType @x4py164 (FStar.Pervasives.result @x3py217))) (HasType (ApplyTT (ApplyTT @x0py316 @x4py164) @x5py141) Tm_type) (not (HasType @x5py141 (Prims_Tm_refine_8d65e998a07dd53ec478e27017d9dba5 @x2py286 @x1py399)))) :pattern ((ApplyTT (ApplyTT @x0py316 @x4py164) @x5py141)) ))) (or (HasTypeZ @x0py316 (Tm_arrow_5db9487ea079f4bbc6de2da583d038f7 @x1py399 @x2py286 @x3py217)) (and (HasType (@x4!505 @x3py217 @x2py286 @x1py399 @x0py316) (FStar.Pervasives.result @x3py217)) (HasType (@x5!504 @x3py217 @x2py286 @x1py399 @x0py316) (Prims_Tm_refine_8d65e998a07dd53ec478e27017d9dba5 @x2py286 @x1py399)) (not (HasType (ApplyTT (ApplyTT @x0py316 (@x4!505 @x3py217 @x2py286 @x1py399 @x0py316)) (@x5!504 @x3py217 @x2py286 @x1py399 @x0py316)) Tm_type))))) :pattern ((HasTypeZ @x0py316 (Tm_arrow_5db9487ea079f4bbc6de2da583d038f7 @x1py399 @x2py286 @x3py217))) )) :named FStar.Pervasives_interpretation_Tm_arrow_5db9487ea079f4bbc6de2da583d038f7))
(assert (! (forall ((@x0py317 Term)(@x1py400 Term)) (! (and (or (not (HasTypeZ @x0py317 (Tm_arrow_5f168af91094f21c4a68cd41bed2b946 @x1py400))) (forall ((@x2py287 Term)(@x3py218 Term)(@x4py165 Term)) (! (or (HasType (ApplyTT (ApplyTT (ApplyTT @x0py317 @x2py287) @x3py218) @x4py165) @x1py400) (not (HasType @x4py165 (FStar.Pervasives.all_wp_h @x2py287 @x3py218))) (not (HasType @x2py287 Tm_type)) (not (HasType @x3py218 Tm_type))) :pattern ((ApplyTT (ApplyTT (ApplyTT @x0py317 @x2py287) @x3py218) @x4py165)) ))) (or (HasTypeZ @x0py317 (Tm_arrow_5f168af91094f21c4a68cd41bed2b946 @x1py400)) (and (HasType (@x2!508 @x1py400 @x0py317) Tm_type) (HasType (@x3!507 @x1py400 @x0py317) Tm_type) (HasType (@x4!506 @x1py400 @x0py317) (FStar.Pervasives.all_wp_h (@x2!508 @x1py400 @x0py317) (@x3!507 @x1py400 @x0py317))) (not (HasType (ApplyTT (ApplyTT (ApplyTT @x0py317 (@x2!508 @x1py400 @x0py317)) (@x3!507 @x1py400 @x0py317)) (@x4!506 @x1py400 @x0py317)) @x1py400))))) :pattern ((HasTypeZ @x0py317 (Tm_arrow_5f168af91094f21c4a68cd41bed2b946 @x1py400))) )) :named FStar.Pervasives_interpretation_Tm_arrow_5f168af91094f21c4a68cd41bed2b946))
(assert (! (forall ((@x0py318 Term)(@x1py401 Term)) (! (and (or (not (HasTypeZ @x0py318 (Tm_arrow_08bfe555982713e1ba6b9cc3db1f9942 @x1py401))) (forall ((@x2py288 Term)(@x3py219 Term)(@x4py166 Term)(@x5py142 Term)(@x6py102 Term)) (! (or (HasType (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT @x0py318 @x2py288) @x3py219) @x4py166) @x5py142) @x6py102) @x1py401) (not (HasType @x2py288 Tm_type)) (not (HasType @x4py166 (Tm_arrow_614c7b5886a6e5b119a37c35c7e4bd59 @x3py219 @x2py288))) (not (HasType @x6py102 (FStar.Pervasives.dtuple4 @x2py288 @x3py219 @x4py166 @x5py142))) (not (HasType @x5py142 (Tm_arrow_dbf39bf049d72c3088e1ed84d246952d @x4py166 @x3py219 @x2py288))) (not (HasType @x3py219 (Tm_arrow_e06752ba152f81447b312efcdf8f0e23 @x2py288)))) :pattern ((ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT @x0py318 @x2py288) @x3py219) @x4py166) @x5py142) @x6py102)) ))) (or (HasTypeZ @x0py318 (Tm_arrow_08bfe555982713e1ba6b9cc3db1f9942 @x1py401)) (and (HasType (@x2!513 @x1py401 @x0py318) Tm_type) (HasType (@x3!512 @x1py401 @x0py318) (Tm_arrow_e06752ba152f81447b312efcdf8f0e23 (@x2!513 @x1py401 @x0py318))) (HasType (@x4!511 @x1py401 @x0py318) (Tm_arrow_614c7b5886a6e5b119a37c35c7e4bd59 (@x3!512 @x1py401 @x0py318) (@x2!513 @x1py401 @x0py318))) (HasType (@x5!510 @x1py401 @x0py318) (Tm_arrow_dbf39bf049d72c3088e1ed84d246952d (@x4!511 @x1py401 @x0py318) (@x3!512 @x1py401 @x0py318) (@x2!513 @x1py401 @x0py318))) (HasType (@x6!509 @x1py401 @x0py318) (FStar.Pervasives.dtuple4 (@x2!513 @x1py401 @x0py318) (@x3!512 @x1py401 @x0py318) (@x4!511 @x1py401 @x0py318) (@x5!510 @x1py401 @x0py318))) (not (HasType (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT @x0py318 (@x2!513 @x1py401 @x0py318)) (@x3!512 @x1py401 @x0py318)) (@x4!511 @x1py401 @x0py318)) (@x5!510 @x1py401 @x0py318)) (@x6!509 @x1py401 @x0py318)) @x1py401))))) :pattern ((HasTypeZ @x0py318 (Tm_arrow_08bfe555982713e1ba6b9cc3db1f9942 @x1py401))) )) :named FStar.Pervasives_interpretation_Tm_arrow_08bfe555982713e1ba6b9cc3db1f9942))
(assert (! (forall ((@x0py319 Term)(@x1py402 Term)) (! (and (or (not (HasTypeZ @x0py319 (Tm_arrow_9d7b0e2d115bb41f98da64d5384f7531 @x1py402))) (forall ((@x2py289 Term)(@x3py220 Term)(@x4py167 Term)) (! (or (HasType (ApplyTT (ApplyTT (ApplyTT @x0py319 @x2py289) @x3py220) @x4py167) @x1py402) (not (HasType @x4py167 (FStar.Pervasives.ex_post @x2py289))) (not (HasType @x2py289 Tm_type)) (not (HasType @x3py220 (Prims.pure_wp @x2py289)))) :pattern ((ApplyTT (ApplyTT (ApplyTT @x0py319 @x2py289) @x3py220) @x4py167)) ))) (or (HasTypeZ @x0py319 (Tm_arrow_9d7b0e2d115bb41f98da64d5384f7531 @x1py402)) (and (HasType (@x2!516 @x1py402 @x0py319) Tm_type) (HasType (@x3!515 @x1py402 @x0py319) (Prims.pure_wp (@x2!516 @x1py402 @x0py319))) (HasType (@x4!514 @x1py402 @x0py319) (FStar.Pervasives.ex_post (@x2!516 @x1py402 @x0py319))) (not (HasType (ApplyTT (ApplyTT (ApplyTT @x0py319 (@x2!516 @x1py402 @x0py319)) (@x3!515 @x1py402 @x0py319)) (@x4!514 @x1py402 @x0py319)) @x1py402))))) :pattern ((HasTypeZ @x0py319 (Tm_arrow_9d7b0e2d115bb41f98da64d5384f7531 @x1py402))) )) :named FStar.Pervasives_interpretation_Tm_arrow_9d7b0e2d115bb41f98da64d5384f7531))
(assert (! (forall ((@x0py320 Term)) (! (and (or (not (HasTypeZ @x0py320 Tm_arrow_13dd269756cb773b57b515955a3c167c)) (forall ((@x1py403 Term)(@x2py290 Term)(@x3py221 Term)(@x4py168 Term)) (! (or (not (HasType @x1py403 Tm_type)) (not (HasType @x2py290 Tm_type)) (HasType (ApplyTT (ApplyTT (ApplyTT (ApplyTT @x0py320 @x1py403) @x2py290) @x3py221) @x4py168) (Tm_arrow_1c4871de840a52d38a5b65a5ad4e97ea @x1py403)) (not (HasType @x3py221 @x2py290)) (not (HasType @x4py168 (FStar.Pervasives.st_post_h @x1py403 @x2py290)))) :pattern ((ApplyTT (ApplyTT (ApplyTT (ApplyTT @x0py320 @x1py403) @x2py290) @x3py221) @x4py168)) ))) (or (HasTypeZ @x0py320 Tm_arrow_13dd269756cb773b57b515955a3c167c) (and (HasType (@x1!520 @x0py320) Tm_type) (HasType (@x2!519 @x0py320) Tm_type) (HasType (@x3!518 @x0py320) (@x2!519 @x0py320)) (HasType (@x4!517 @x0py320) (FStar.Pervasives.st_post_h (@x1!520 @x0py320) (@x2!519 @x0py320))) (not (HasType (ApplyTT (ApplyTT (ApplyTT (ApplyTT @x0py320 (@x1!520 @x0py320)) (@x2!519 @x0py320)) (@x3!518 @x0py320)) (@x4!517 @x0py320)) (Tm_arrow_1c4871de840a52d38a5b65a5ad4e97ea (@x1!520 @x0py320))))))) :pattern ((HasTypeZ @x0py320 Tm_arrow_13dd269756cb773b57b515955a3c167c)) )) :named FStar.Pervasives_interpretation_Tm_arrow_13dd269756cb773b57b515955a3c167c))
(assert (! (forall ((@x0py321 Term)(@x1py404 Term)) (! (and (or (not (HasTypeZ @x0py321 (Tm_arrow_17a09828089dfad9c34f612c63238178 @x1py404))) (forall ((@x2py291 Term)(@x3py222 Term)(@x4py169 Term)(@x5py143 Term)) (! (or (HasType (ApplyTT (ApplyTT (ApplyTT (ApplyTT @x0py321 @x2py291) @x3py222) @x4py169) @x5py143) @x1py404) (not (HasType @x3py222 Tm_type)) (not (HasType @x5py143 (FStar.Pervasives.st_wp_h @x2py291 @x3py222))) (not (HasType @x2py291 Tm_type)) (not (HasType @x4py169 (FStar.Pervasives.st_wp_h @x2py291 @x3py222)))) :pattern ((ApplyTT (ApplyTT (ApplyTT (ApplyTT @x0py321 @x2py291) @x3py222) @x4py169) @x5py143)) ))) (or (HasTypeZ @x0py321 (Tm_arrow_17a09828089dfad9c34f612c63238178 @x1py404)) (and (HasType (@x2!524 @x1py404 @x0py321) Tm_type) (HasType (@x3!523 @x1py404 @x0py321) Tm_type) (HasType (@x4!522 @x1py404 @x0py321) (FStar.Pervasives.st_wp_h (@x2!524 @x1py404 @x0py321) (@x3!523 @x1py404 @x0py321))) (HasType (@x5!521 @x1py404 @x0py321) (FStar.Pervasives.st_wp_h (@x2!524 @x1py404 @x0py321) (@x3!523 @x1py404 @x0py321))) (not (HasType (ApplyTT (ApplyTT (ApplyTT (ApplyTT @x0py321 (@x2!524 @x1py404 @x0py321)) (@x3!523 @x1py404 @x0py321)) (@x4!522 @x1py404 @x0py321)) (@x5!521 @x1py404 @x0py321)) @x1py404))))) :pattern ((HasTypeZ @x0py321 (Tm_arrow_17a09828089dfad9c34f612c63238178 @x1py404))) )) :named FStar.Pervasives_interpretation_Tm_arrow_17a09828089dfad9c34f612c63238178))
(assert (! (forall ((@x0py322 Term)(@x1py405 Term)(@x2py292 Term)(@x3py223 Term)) (! (and (or (not (HasTypeZ @x0py322 (Tm_arrow_24dbc58008173456430189ae3ecf9a5f @x1py405 @x2py292 @x3py223))) (forall ((@x4py170 Term)(@x5py144 Term)) (! (or (not (HasType @x4py170 @x3py223)) (not (HasType @x5py144 (Prims_Tm_refine_8d65e998a07dd53ec478e27017d9dba5 @x2py292 @x1py405))) (HasType (ApplyTT (ApplyTT @x0py322 @x4py170) @x5py144) Tm_type)) :pattern ((ApplyTT (ApplyTT @x0py322 @x4py170) @x5py144)) ))) (or (HasTypeZ @x0py322 (Tm_arrow_24dbc58008173456430189ae3ecf9a5f @x1py405 @x2py292 @x3py223)) (and (HasType (@x4!526 @x3py223 @x2py292 @x1py405 @x0py322) @x3py223) (HasType (@x5!525 @x3py223 @x2py292 @x1py405 @x0py322) (Prims_Tm_refine_8d65e998a07dd53ec478e27017d9dba5 @x2py292 @x1py405)) (not (HasType (ApplyTT (ApplyTT @x0py322 (@x4!526 @x3py223 @x2py292 @x1py405 @x0py322)) (@x5!525 @x3py223 @x2py292 @x1py405 @x0py322)) Tm_type))))) :pattern ((HasTypeZ @x0py322 (Tm_arrow_24dbc58008173456430189ae3ecf9a5f @x1py405 @x2py292 @x3py223))) )) :named FStar.Pervasives_interpretation_Tm_arrow_24dbc58008173456430189ae3ecf9a5f))
(assert (! (forall ((@x0py323 Term)(@x1py406 Term)) (! (and (or (not (HasTypeZ @x0py323 (Tm_arrow_25c72f362ef3d8a23658a89597e3665d @x1py406))) (forall ((@x2py293 Term)(@x3py224 Term)(@x4py171 Term)(@x5py145 Term)) (! (or (HasType (ApplyTT (ApplyTT (ApplyTT (ApplyTT @x0py323 @x2py293) @x3py224) @x4py171) @x5py145) @x1py406) (not (HasType @x2py293 Tm_type)) (not (HasType @x3py224 (Tm_arrow_e06752ba152f81447b312efcdf8f0e23 @x2py293))) (not (HasType @x4py171 (Tm_arrow_614c7b5886a6e5b119a37c35c7e4bd59 @x3py224 @x2py293))) (not (HasType @x5py145 (FStar.Pervasives.dtuple3 @x2py293 @x3py224 @x4py171)))) :pattern ((ApplyTT (ApplyTT (ApplyTT (ApplyTT @x0py323 @x2py293) @x3py224) @x4py171) @x5py145)) ))) (or (HasTypeZ @x0py323 (Tm_arrow_25c72f362ef3d8a23658a89597e3665d @x1py406)) (and (HasType (@x2!530 @x1py406 @x0py323) Tm_type) (HasType (@x3!529 @x1py406 @x0py323) (Tm_arrow_e06752ba152f81447b312efcdf8f0e23 (@x2!530 @x1py406 @x0py323))) (HasType (@x4!528 @x1py406 @x0py323) (Tm_arrow_614c7b5886a6e5b119a37c35c7e4bd59 (@x3!529 @x1py406 @x0py323) (@x2!530 @x1py406 @x0py323))) (HasType (@x5!527 @x1py406 @x0py323) (FStar.Pervasives.dtuple3 (@x2!530 @x1py406 @x0py323) (@x3!529 @x1py406 @x0py323) (@x4!528 @x1py406 @x0py323))) (not (HasType (ApplyTT (ApplyTT (ApplyTT (ApplyTT @x0py323 (@x2!530 @x1py406 @x0py323)) (@x3!529 @x1py406 @x0py323)) (@x4!528 @x1py406 @x0py323)) (@x5!527 @x1py406 @x0py323)) @x1py406))))) :pattern ((HasTypeZ @x0py323 (Tm_arrow_25c72f362ef3d8a23658a89597e3665d @x1py406))) )) :named FStar.Pervasives_interpretation_Tm_arrow_25c72f362ef3d8a23658a89597e3665d))
(assert (! (forall ((@x0py324 Term)(@x1py407 Term)) (! (and (or (not (HasTypeZ @x0py324 (Tm_arrow_28bfbd2790e868cd7c317313e9ee5c1a @x1py407))) (forall ((@x2py294 Term)(@x3py225 Term)) (! (or (not (HasType @x2py294 Tm_type)) (not (HasType @x3py225 (FStar.Pervasives_Tm_refine_95e1e2ee29104754cc3740f5575fc6e5 @x2py294))) (HasType (ApplyTT (ApplyTT @x0py324 @x2py294) @x3py225) @x1py407)) :pattern ((ApplyTT (ApplyTT @x0py324 @x2py294) @x3py225)) ))) (or (HasTypeZ @x0py324 (Tm_arrow_28bfbd2790e868cd7c317313e9ee5c1a @x1py407)) (and (HasType (@x2!532 @x1py407 @x0py324) Tm_type) (HasType (@x3!531 @x1py407 @x0py324) (FStar.Pervasives_Tm_refine_95e1e2ee29104754cc3740f5575fc6e5 (@x2!532 @x1py407 @x0py324))) (not (HasType (ApplyTT (ApplyTT @x0py324 (@x2!532 @x1py407 @x0py324)) (@x3!531 @x1py407 @x0py324)) @x1py407))))) :pattern ((HasTypeZ @x0py324 (Tm_arrow_28bfbd2790e868cd7c317313e9ee5c1a @x1py407))) )) :named FStar.Pervasives_interpretation_Tm_arrow_28bfbd2790e868cd7c317313e9ee5c1a))
(assert (! (forall ((@x0py325 Term)) (! (and (or (not (HasTypeZ @x0py325 Tm_arrow_33c5389e8c042e819d87a774e0987a42)) (forall ((@x1py408 Term)(@x2py295 Term)(@x3py226 Term)) (! (or (HasType (ApplyTT (ApplyTT (ApplyTT @x0py325 @x1py408) @x2py295) @x3py226) @x1py408) (not (HasType @x1py408 Tm_type)) (not (HasType @x2py295 Tm_type)) (not (HasType @x3py226 (FStar.Pervasives_Tm_refine_85e0cc884f8457202f90cd77f23733ba @x1py408 @x2py295)))) :pattern ((ApplyTT (ApplyTT (ApplyTT @x0py325 @x1py408) @x2py295) @x3py226)) ))) (or (HasTypeZ @x0py325 Tm_arrow_33c5389e8c042e819d87a774e0987a42) (and (HasType (@x1!535 @x0py325) Tm_type) (HasType (@x2!534 @x0py325) Tm_type) (HasType (@x3!533 @x0py325) (FStar.Pervasives_Tm_refine_85e0cc884f8457202f90cd77f23733ba (@x1!535 @x0py325) (@x2!534 @x0py325))) (not (HasType (ApplyTT (ApplyTT (ApplyTT @x0py325 (@x1!535 @x0py325)) (@x2!534 @x0py325)) (@x3!533 @x0py325)) (@x1!535 @x0py325)))))) :pattern ((HasTypeZ @x0py325 Tm_arrow_33c5389e8c042e819d87a774e0987a42)) )) :named FStar.Pervasives_interpretation_Tm_arrow_33c5389e8c042e819d87a774e0987a42))
(assert (! (forall ((@x0py326 Term)(@x1py409 Term)(@x2py296 Term)) (! (and (or (not (HasTypeZ @x0py326 (Tm_arrow_39ad8232ffc69b341ef9ad0212b74d41 @x1py409 @x2py296))) (forall ((@x3py227 Term)(@x4py172 Term)) (! (or (not (HasType @x3py227 @x2py296)) (not (HasType @x4py172 (Prims_Tm_refine_c16bc1b61f58b349bf6fc1c94dcaf83b @x1py409))) (HasType (ApplyTT (ApplyTT @x0py326 @x3py227) @x4py172) Tm_type)) :pattern ((ApplyTT (ApplyTT @x0py326 @x3py227) @x4py172)) ))) (or (HasTypeZ @x0py326 (Tm_arrow_39ad8232ffc69b341ef9ad0212b74d41 @x1py409 @x2py296)) (and (HasType (@x3!537 @x2py296 @x1py409 @x0py326) @x2py296) (HasType (@x4!536 @x2py296 @x1py409 @x0py326) (Prims_Tm_refine_c16bc1b61f58b349bf6fc1c94dcaf83b @x1py409)) (not (HasType (ApplyTT (ApplyTT @x0py326 (@x3!537 @x2py296 @x1py409 @x0py326)) (@x4!536 @x2py296 @x1py409 @x0py326)) Tm_type))))) :pattern ((HasTypeZ @x0py326 (Tm_arrow_39ad8232ffc69b341ef9ad0212b74d41 @x1py409 @x2py296))) )) :named FStar.Pervasives_interpretation_Tm_arrow_39ad8232ffc69b341ef9ad0212b74d41))
(assert (! (forall ((@x0py327 Term)(@x1py410 Term)) (! (and (or (not (HasTypeZ @x0py327 (Tm_arrow_49e61e769c9e3a0a679cbd25d6e21a53 @x1py410))) (forall ((@x2py297 Term)(@x3py228 Term)(@x4py173 Term)(@x5py146 Term)(@x6py103 Term)(@x7py76 Term)) (! (or (HasType (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT @x0py327 @x2py297) @x3py228) @x4py173) @x5py146) @x6py103) @x7py76) @x1py410) (not (HasType @x2py297 Tm_type)) (not (HasType @x3py228 Tm_type)) (not (HasType @x5py146 (Tm_arrow_d9eac583d9f115ef0dc2cf4de1079b38 @x3py228 @x2py297 @x4py173))) (not (HasType @x4py173 Tm_type)) (not (HasType @x6py103 (FStar.Pervasives.st_post_h @x2py297 @x3py228))) (not (HasType @x7py76 @x2py297))) :pattern ((ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT @x0py327 @x2py297) @x3py228) @x4py173) @x5py146) @x6py103) @x7py76)) ))) (or (HasTypeZ @x0py327 (Tm_arrow_49e61e769c9e3a0a679cbd25d6e21a53 @x1py410)) (and (HasType (@x2!543 @x1py410 @x0py327) Tm_type) (HasType (@x3!542 @x1py410 @x0py327) Tm_type) (HasType (@x4!541 @x1py410 @x0py327) Tm_type) (HasType (@x5!540 @x1py410 @x0py327) (Tm_arrow_d9eac583d9f115ef0dc2cf4de1079b38 (@x3!542 @x1py410 @x0py327) (@x2!543 @x1py410 @x0py327) (@x4!541 @x1py410 @x0py327))) (HasType (@x6!539 @x1py410 @x0py327) (FStar.Pervasives.st_post_h (@x2!543 @x1py410 @x0py327) (@x3!542 @x1py410 @x0py327))) (HasType (@x7!538 @x1py410 @x0py327) (@x2!543 @x1py410 @x0py327)) (not (HasType (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT @x0py327 (@x2!543 @x1py410 @x0py327)) (@x3!542 @x1py410 @x0py327)) (@x4!541 @x1py410 @x0py327)) (@x5!540 @x1py410 @x0py327)) (@x6!539 @x1py410 @x0py327)) (@x7!538 @x1py410 @x0py327)) @x1py410))))) :pattern ((HasTypeZ @x0py327 (Tm_arrow_49e61e769c9e3a0a679cbd25d6e21a53 @x1py410))) )) :named FStar.Pervasives_interpretation_Tm_arrow_49e61e769c9e3a0a679cbd25d6e21a53))
(assert (! (forall ((@x0py328 Term)(@x1py411 Term)) (! (and (or (not (HasTypeZ @x0py328 (Tm_arrow_50d480c53f6a4b67c098ecbee395c271 @x1py411))) (forall ((@x2py298 Term)) (! (or (not (HasType @x2py298 FStar.Pervasives_Tm_refine_5036c6b2983454bc3afeffcba3f00f50)) (HasType (ApplyTT @x0py328 @x2py298) @x1py411)) :pattern ((ApplyTT @x0py328 @x2py298)) ))) (or (HasTypeZ @x0py328 (Tm_arrow_50d480c53f6a4b67c098ecbee395c271 @x1py411)) (and (HasType (@x2!544 @x1py411 @x0py328) FStar.Pervasives_Tm_refine_5036c6b2983454bc3afeffcba3f00f50) (not (HasType (ApplyTT @x0py328 (@x2!544 @x1py411 @x0py328)) @x1py411))))) :pattern ((HasTypeZ @x0py328 (Tm_arrow_50d480c53f6a4b67c098ecbee395c271 @x1py411))) )) :named FStar.Pervasives_interpretation_Tm_arrow_50d480c53f6a4b67c098ecbee395c271))
(assert (! (forall ((@x0py329 Term)(@x1py412 Term)) (! (and (or (not (HasTypeZ @x0py329 (Tm_arrow_51b345975888169ae4f69613c826965e @x1py412))) (forall ((@x2py299 Term)) (! (or (not (HasType @x2py299 FStar.Pervasives_Tm_refine_c53089e2d20d1b0f5a267296ac8e45f0)) (HasType (ApplyTT @x0py329 @x2py299) @x1py412)) :pattern ((ApplyTT @x0py329 @x2py299)) ))) (or (HasTypeZ @x0py329 (Tm_arrow_51b345975888169ae4f69613c826965e @x1py412)) (and (HasType (@x2!545 @x1py412 @x0py329) FStar.Pervasives_Tm_refine_c53089e2d20d1b0f5a267296ac8e45f0) (not (HasType (ApplyTT @x0py329 (@x2!545 @x1py412 @x0py329)) @x1py412))))) :pattern ((HasTypeZ @x0py329 (Tm_arrow_51b345975888169ae4f69613c826965e @x1py412))) )) :named FStar.Pervasives_interpretation_Tm_arrow_51b345975888169ae4f69613c826965e))
(assert (! (forall ((@x0py330 Term)) (! (and (or (not (HasTypeZ @x0py330 Tm_arrow_66a0d53ccf00bc028aa22d526865c801)) (forall ((@x1py413 Term)(@x2py300 Term)(@x3py229 Term)) (! (or (HasType (ApplyTT (ApplyTT (ApplyTT @x0py330 @x1py413) @x2py300) @x3py229) (FStar.Pervasives.either @x1py413 @x2py300)) (not (HasType @x2py300 Tm_type)) (not (HasType @x1py413 Tm_type)) (not (HasType @x3py229 @x1py413))) :pattern ((ApplyTT (ApplyTT (ApplyTT @x0py330 @x1py413) @x2py300) @x3py229)) ))) (or (HasTypeZ @x0py330 Tm_arrow_66a0d53ccf00bc028aa22d526865c801) (and (HasType (@x1!548 @x0py330) Tm_type) (HasType (@x2!547 @x0py330) Tm_type) (HasType (@x3!546 @x0py330) (@x1!548 @x0py330)) (not (HasType (ApplyTT (ApplyTT (ApplyTT @x0py330 (@x1!548 @x0py330)) (@x2!547 @x0py330)) (@x3!546 @x0py330)) (FStar.Pervasives.either (@x1!548 @x0py330) (@x2!547 @x0py330))))))) :pattern ((HasTypeZ @x0py330 Tm_arrow_66a0d53ccf00bc028aa22d526865c801)) )) :named FStar.Pervasives_interpretation_Tm_arrow_66a0d53ccf00bc028aa22d526865c801))
(assert (! (forall ((@x0py331 Term)(@x1py414 Term)) (! (and (or (not (HasTypeZ @x0py331 (Tm_arrow_82af1f1c7453b4c313f49c7e70e41650 @x1py414))) (forall ((@x2py301 Term)(@x3py230 Term)(@x4py174 Term)(@x5py147 Term)(@x6py104 Term)(@x7py77 Term)) (! (or (HasType (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT @x0py331 @x2py301) @x3py230) @x4py174) @x5py147) @x6py104) @x7py77) @x1py414) (not (HasType @x4py174 Tm_type)) (not (HasType @x3py230 Tm_type)) (not (HasType @x5py147 (Tm_arrow_12929d79484018a159cc54c10d62f794 @x3py230 @x2py301 @x4py174))) (not (HasType @x6py104 (FStar.Pervasives.all_post_h @x2py301 @x3py230))) (not (HasType @x7py77 @x2py301)) (not (HasType @x2py301 Tm_type))) :pattern ((ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT @x0py331 @x2py301) @x3py230) @x4py174) @x5py147) @x6py104) @x7py77)) ))) (or (HasTypeZ @x0py331 (Tm_arrow_82af1f1c7453b4c313f49c7e70e41650 @x1py414)) (and (HasType (@x2!554 @x1py414 @x0py331) Tm_type) (HasType (@x3!553 @x1py414 @x0py331) Tm_type) (HasType (@x4!552 @x1py414 @x0py331) Tm_type) (HasType (@x5!551 @x1py414 @x0py331) (Tm_arrow_12929d79484018a159cc54c10d62f794 (@x3!553 @x1py414 @x0py331) (@x2!554 @x1py414 @x0py331) (@x4!552 @x1py414 @x0py331))) (HasType (@x6!550 @x1py414 @x0py331) (FStar.Pervasives.all_post_h (@x2!554 @x1py414 @x0py331) (@x3!553 @x1py414 @x0py331))) (HasType (@x7!549 @x1py414 @x0py331) (@x2!554 @x1py414 @x0py331)) (not (HasType (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT @x0py331 (@x2!554 @x1py414 @x0py331)) (@x3!553 @x1py414 @x0py331)) (@x4!552 @x1py414 @x0py331)) (@x5!551 @x1py414 @x0py331)) (@x6!550 @x1py414 @x0py331)) (@x7!549 @x1py414 @x0py331)) @x1py414))))) :pattern ((HasTypeZ @x0py331 (Tm_arrow_82af1f1c7453b4c313f49c7e70e41650 @x1py414))) )) :named FStar.Pervasives_interpretation_Tm_arrow_82af1f1c7453b4c313f49c7e70e41650))
(assert (! (forall ((@x0py332 Term)(@x1py415 Term)(@x2py302 Term)) (! (and (or (not (HasTypeZ @x0py332 (Tm_arrow_87ef52d5a8e7306848436909b0c69460 @x1py415 @x2py302))) (forall ((@x3py231 Term)) (! (or (not (HasType @x3py231 (FStar.Pervasives.ex_post @x2py302))) (HasType (ApplyTT @x0py332 @x3py231) @x1py415)) :pattern ((ApplyTT @x0py332 @x3py231)) ))) (or (HasTypeZ @x0py332 (Tm_arrow_87ef52d5a8e7306848436909b0c69460 @x1py415 @x2py302)) (and (HasType (@x3!555 @x2py302 @x1py415 @x0py332) (FStar.Pervasives.ex_post @x2py302)) (not (HasType (ApplyTT @x0py332 (@x3!555 @x2py302 @x1py415 @x0py332)) @x1py415))))) :pattern ((HasTypeZ @x0py332 (Tm_arrow_87ef52d5a8e7306848436909b0c69460 @x1py415 @x2py302))) )) :named FStar.Pervasives_interpretation_Tm_arrow_87ef52d5a8e7306848436909b0c69460))
(assert (! (forall ((@x0py333 Term)(@x1py416 Term)(@x2py303 Term)) (! (and (or (not (HasTypeZ @x0py333 (Tm_arrow_95c0b403ba19b1a7c1f8c73440744c07 @x1py416 @x2py303))) (forall ((@x3py232 Term)) (! (or (not (HasType @x3py232 (FStar.Pervasives.all_post_h @x2py303 @x1py416))) (HasType (ApplyTT @x0py333 @x3py232) (FStar.Pervasives.all_pre_h @x2py303))) :pattern ((ApplyTT @x0py333 @x3py232)) ))) (or (HasTypeZ @x0py333 (Tm_arrow_95c0b403ba19b1a7c1f8c73440744c07 @x1py416 @x2py303)) (and (HasType (@x3!556 @x2py303 @x1py416 @x0py333) (FStar.Pervasives.all_post_h @x2py303 @x1py416)) (not (HasType (ApplyTT @x0py333 (@x3!556 @x2py303 @x1py416 @x0py333)) (FStar.Pervasives.all_pre_h @x2py303)))))) :pattern ((HasTypeZ @x0py333 (Tm_arrow_95c0b403ba19b1a7c1f8c73440744c07 @x1py416 @x2py303))) )) :named FStar.Pervasives_interpretation_Tm_arrow_95c0b403ba19b1a7c1f8c73440744c07))
(assert (! (forall ((@x0py334 Term)) (! (and (or (not (HasTypeZ @x0py334 Tm_arrow_370eef0be624c130308f9f3e7fdda8fb)) (forall ((@x1py417 Term)(@x2py304 Term)(@x3py233 Term)(@x4py175 Term)) (! (or (HasType (ApplyTT (ApplyTT (ApplyTT (ApplyTT @x0py334 @x1py417) @x2py304) @x3py233) @x4py175) @x1py417) (not (HasType @x1py417 Tm_type)) (not (HasType @x2py304 (Tm_arrow_e06752ba152f81447b312efcdf8f0e23 @x1py417))) (not (HasType @x3py233 (Tm_arrow_614c7b5886a6e5b119a37c35c7e4bd59 @x2py304 @x1py417))) (not (HasType @x4py175 (FStar.Pervasives.dtuple3 @x1py417 @x2py304 @x3py233)))) :pattern ((ApplyTT (ApplyTT (ApplyTT (ApplyTT @x0py334 @x1py417) @x2py304) @x3py233) @x4py175)) ))) (or (HasTypeZ @x0py334 Tm_arrow_370eef0be624c130308f9f3e7fdda8fb) (and (HasType (@x1!560 @x0py334) Tm_type) (HasType (@x2!559 @x0py334) (Tm_arrow_e06752ba152f81447b312efcdf8f0e23 (@x1!560 @x0py334))) (HasType (@x3!558 @x0py334) (Tm_arrow_614c7b5886a6e5b119a37c35c7e4bd59 (@x2!559 @x0py334) (@x1!560 @x0py334))) (HasType (@x4!557 @x0py334) (FStar.Pervasives.dtuple3 (@x1!560 @x0py334) (@x2!559 @x0py334) (@x3!558 @x0py334))) (not (HasType (ApplyTT (ApplyTT (ApplyTT (ApplyTT @x0py334 (@x1!560 @x0py334)) (@x2!559 @x0py334)) (@x3!558 @x0py334)) (@x4!557 @x0py334)) (@x1!560 @x0py334)))))) :pattern ((HasTypeZ @x0py334 Tm_arrow_370eef0be624c130308f9f3e7fdda8fb)) )) :named FStar.Pervasives_interpretation_Tm_arrow_370eef0be624c130308f9f3e7fdda8fb))
(assert (! (forall ((@x0py335 Term)(@x1py418 Term)) (! (and (or (not (HasTypeZ @x0py335 (Tm_arrow_414ca6c3d38bb3e0864e4a9d0cd19766 @x1py418))) (forall ((@x2py305 Term)) (! (or (not (HasType @x2py305 FStar.Pervasives_Tm_refine_ac46c1a2a06ce46a180e0eda48004c47)) (HasType (ApplyTT @x0py335 @x2py305) @x1py418)) :pattern ((ApplyTT @x0py335 @x2py305)) ))) (or (HasTypeZ @x0py335 (Tm_arrow_414ca6c3d38bb3e0864e4a9d0cd19766 @x1py418)) (and (HasType (@x2!561 @x1py418 @x0py335) FStar.Pervasives_Tm_refine_ac46c1a2a06ce46a180e0eda48004c47) (not (HasType (ApplyTT @x0py335 (@x2!561 @x1py418 @x0py335)) @x1py418))))) :pattern ((HasTypeZ @x0py335 (Tm_arrow_414ca6c3d38bb3e0864e4a9d0cd19766 @x1py418))) )) :named FStar.Pervasives_interpretation_Tm_arrow_414ca6c3d38bb3e0864e4a9d0cd19766))
(assert (! (forall ((@x0py336 Term)(@x1py419 Term)) (! (and (or (not (HasTypeZ @x0py336 (Tm_arrow_433e42e3116eeb237f1030231a24382d @x1py419))) (forall ((@x2py306 Term)(@x3py234 Term)(@x4py176 Term)(@x5py148 Term)(@x6py105 Term)(@x7py78 Term)) (! (or (HasType (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT @x0py336 @x2py306) @x3py234) @x4py176) @x5py148) @x6py105) @x7py78) @x1py419) (not (HasType @x2py306 Tm_type)) (not (HasType @x3py234 Tm_type)) (not (HasType @x4py176 Tm_type)) (not (HasType @x5py148 (FStar.Pervasives.st_wp_h @x2py306 @x3py234))) (not (HasType @x6py105 (FStar.Pervasives.st_post_h @x2py306 @x3py234))) (not (HasType @x7py78 @x2py306))) :pattern ((ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT @x0py336 @x2py306) @x3py234) @x4py176) @x5py148) @x6py105) @x7py78)) ))) (or (HasTypeZ @x0py336 (Tm_arrow_433e42e3116eeb237f1030231a24382d @x1py419)) (and (HasType (@x2!567 @x1py419 @x0py336) Tm_type) (HasType (@x3!566 @x1py419 @x0py336) Tm_type) (HasType (@x4!565 @x1py419 @x0py336) Tm_type) (HasType (@x5!564 @x1py419 @x0py336) (FStar.Pervasives.st_wp_h (@x2!567 @x1py419 @x0py336) (@x3!566 @x1py419 @x0py336))) (HasType (@x6!563 @x1py419 @x0py336) (FStar.Pervasives.st_post_h (@x2!567 @x1py419 @x0py336) (@x3!566 @x1py419 @x0py336))) (HasType (@x7!562 @x1py419 @x0py336) (@x2!567 @x1py419 @x0py336)) (not (HasType (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT @x0py336 (@x2!567 @x1py419 @x0py336)) (@x3!566 @x1py419 @x0py336)) (@x4!565 @x1py419 @x0py336)) (@x5!564 @x1py419 @x0py336)) (@x6!563 @x1py419 @x0py336)) (@x7!562 @x1py419 @x0py336)) @x1py419))))) :pattern ((HasTypeZ @x0py336 (Tm_arrow_433e42e3116eeb237f1030231a24382d @x1py419))) )) :named FStar.Pervasives_interpretation_Tm_arrow_433e42e3116eeb237f1030231a24382d))
(assert (! (forall ((@x0py337 Term)(@x1py420 Term)(@x2py307 Term)) (! (and (or (not (HasTypeZ @x0py337 (Tm_arrow_614c7b5886a6e5b119a37c35c7e4bd59 @x1py420 @x2py307))) (forall ((@x3py235 Term)(@x4py177 Term)) (! (or (not (HasType @x3py235 @x2py307)) (not (HasType @x4py177 (ApplyTT @x1py420 @x3py235))) (HasType (ApplyTT (ApplyTT @x0py337 @x3py235) @x4py177) Tm_type)) :pattern ((ApplyTT (ApplyTT @x0py337 @x3py235) @x4py177)) ))) (or (HasTypeZ @x0py337 (Tm_arrow_614c7b5886a6e5b119a37c35c7e4bd59 @x1py420 @x2py307)) (and (HasType (@x3!569 @x2py307 @x1py420 @x0py337) @x2py307) (HasType (@x4!568 @x2py307 @x1py420 @x0py337) (ApplyTT @x1py420 (@x3!569 @x2py307 @x1py420 @x0py337))) (not (HasType (ApplyTT (ApplyTT @x0py337 (@x3!569 @x2py307 @x1py420 @x0py337)) (@x4!568 @x2py307 @x1py420 @x0py337)) Tm_type))))) :pattern ((HasTypeZ @x0py337 (Tm_arrow_614c7b5886a6e5b119a37c35c7e4bd59 @x1py420 @x2py307))) )) :named FStar.Pervasives_interpretation_Tm_arrow_614c7b5886a6e5b119a37c35c7e4bd59))
(assert (! (forall ((@x0py338 Term)(@x1py421 Term)) (! (and (or (not (HasTypeZ @x0py338 (Tm_arrow_641a228fe9177bb850d1efb25c4ca0d9 @x1py421))) (forall ((@x2py308 Term)(@x3py236 Term)(@x4py178 Term)) (! (or (HasType (ApplyTT (ApplyTT (ApplyTT @x0py338 @x2py308) @x3py236) @x4py178) @x1py421) (not (HasType @x3py236 (FStar.Pervasives.ex_wp @x2py308))) (not (HasType @x2py308 Tm_type)) (not (HasType @x4py178 (FStar.Pervasives.ex_post @x2py308)))) :pattern ((ApplyTT (ApplyTT (ApplyTT @x0py338 @x2py308) @x3py236) @x4py178)) ))) (or (HasTypeZ @x0py338 (Tm_arrow_641a228fe9177bb850d1efb25c4ca0d9 @x1py421)) (and (HasType (@x2!572 @x1py421 @x0py338) Tm_type) (HasType (@x3!571 @x1py421 @x0py338) (FStar.Pervasives.ex_wp (@x2!572 @x1py421 @x0py338))) (HasType (@x4!570 @x1py421 @x0py338) (FStar.Pervasives.ex_post (@x2!572 @x1py421 @x0py338))) (not (HasType (ApplyTT (ApplyTT (ApplyTT @x0py338 (@x2!572 @x1py421 @x0py338)) (@x3!571 @x1py421 @x0py338)) (@x4!570 @x1py421 @x0py338)) @x1py421))))) :pattern ((HasTypeZ @x0py338 (Tm_arrow_641a228fe9177bb850d1efb25c4ca0d9 @x1py421))) )) :named FStar.Pervasives_interpretation_Tm_arrow_641a228fe9177bb850d1efb25c4ca0d9))
(assert (! (forall ((@x0py339 Term)(@x1py422 Term)) (! (and (or (not (HasTypeZ @x0py339 (Tm_arrow_739df426cfefbd9297407e8f408e091d @x1py422))) (forall ((@x2py309 Term)(@x3py237 Term)) (! (or (not (HasType @x2py309 Tm_type)) (HasType (ApplyTT (ApplyTT @x0py339 @x2py309) @x3py237) (FStar.Pervasives.result @x2py309)) (not (HasType @x3py237 @x1py422))) :pattern ((ApplyTT (ApplyTT @x0py339 @x2py309) @x3py237)) ))) (or (HasTypeZ @x0py339 (Tm_arrow_739df426cfefbd9297407e8f408e091d @x1py422)) (and (HasType (@x2!574 @x1py422 @x0py339) Tm_type) (HasType (@x3!573 @x1py422 @x0py339) @x1py422) (not (HasType (ApplyTT (ApplyTT @x0py339 (@x2!574 @x1py422 @x0py339)) (@x3!573 @x1py422 @x0py339)) (FStar.Pervasives.result (@x2!574 @x1py422 @x0py339))))))) :pattern ((HasTypeZ @x0py339 (Tm_arrow_739df426cfefbd9297407e8f408e091d @x1py422))) )) :named FStar.Pervasives_interpretation_Tm_arrow_739df426cfefbd9297407e8f408e091d))
(assert (! (forall ((@x0py340 Term)) (! (and (or (not (HasTypeZ @x0py340 Tm_arrow_894aed5f2f01f9fc4bb62bf7e2d70f35)) (forall ((@x1py423 Term)(@x2py310 Term)(@x3py238 Term)(@x4py179 Term)(@x5py149 Term)) (! (or (HasType (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT @x0py340 @x1py423) @x2py310) @x3py238) @x4py179) @x5py149) (ApplyTT @x2py310 (FStar.Pervasives.__proj__Mkdtuple4__item___1 @x1py423 @x2py310 @x3py238 @x4py179 @x5py149))) (not (HasType @x5py149 (FStar.Pervasives.dtuple4 @x1py423 @x2py310 @x3py238 @x4py179))) (not (HasType @x1py423 Tm_type)) (not (HasType @x2py310 (Tm_arrow_e06752ba152f81447b312efcdf8f0e23 @x1py423))) (not (HasType @x3py238 (Tm_arrow_614c7b5886a6e5b119a37c35c7e4bd59 @x2py310 @x1py423))) (not (HasType @x4py179 (Tm_arrow_dbf39bf049d72c3088e1ed84d246952d @x3py238 @x2py310 @x1py423)))) :pattern ((ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT @x0py340 @x1py423) @x2py310) @x3py238) @x4py179) @x5py149)) ))) (or (HasTypeZ @x0py340 Tm_arrow_894aed5f2f01f9fc4bb62bf7e2d70f35) (and (HasType (@x1!579 @x0py340) Tm_type) (HasType (@x2!578 @x0py340) (Tm_arrow_e06752ba152f81447b312efcdf8f0e23 (@x1!579 @x0py340))) (HasType (@x3!577 @x0py340) (Tm_arrow_614c7b5886a6e5b119a37c35c7e4bd59 (@x2!578 @x0py340) (@x1!579 @x0py340))) (HasType (@x4!576 @x0py340) (Tm_arrow_dbf39bf049d72c3088e1ed84d246952d (@x3!577 @x0py340) (@x2!578 @x0py340) (@x1!579 @x0py340))) (HasType (@x5!575 @x0py340) (FStar.Pervasives.dtuple4 (@x1!579 @x0py340) (@x2!578 @x0py340) (@x3!577 @x0py340) (@x4!576 @x0py340))) (not (HasType (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT @x0py340 (@x1!579 @x0py340)) (@x2!578 @x0py340)) (@x3!577 @x0py340)) (@x4!576 @x0py340)) (@x5!575 @x0py340)) (ApplyTT (@x2!578 @x0py340) (FStar.Pervasives.__proj__Mkdtuple4__item___1 (@x1!579 @x0py340) (@x2!578 @x0py340) (@x3!577 @x0py340) (@x4!576 @x0py340) (@x5!575 @x0py340)))))))) :pattern ((HasTypeZ @x0py340 Tm_arrow_894aed5f2f01f9fc4bb62bf7e2d70f35)) )) :named FStar.Pervasives_interpretation_Tm_arrow_894aed5f2f01f9fc4bb62bf7e2d70f35))
(assert (! (forall ((@x0py341 Term)(@x1py424 Term)) (! (and (or (not (HasTypeZ @x0py341 (Tm_arrow_5002e807b09214fd2f4ddb0ecd7cc6a9 @x1py424))) (forall ((@x2py311 Term)) (! (or (not (HasType @x2py311 Tm_type)) (HasType (ApplyTT @x0py341 @x2py311) @x1py424)) :pattern ((ApplyTT @x0py341 @x2py311)) ))) (or (HasTypeZ @x0py341 (Tm_arrow_5002e807b09214fd2f4ddb0ecd7cc6a9 @x1py424)) (and (HasType (@x2!580 @x1py424 @x0py341) Tm_type) (not (HasType (ApplyTT @x0py341 (@x2!580 @x1py424 @x0py341)) @x1py424))))) :pattern ((HasTypeZ @x0py341 (Tm_arrow_5002e807b09214fd2f4ddb0ecd7cc6a9 @x1py424))) )) :named FStar.Pervasives_interpretation_Tm_arrow_5002e807b09214fd2f4ddb0ecd7cc6a9))
(assert (! (forall ((@x0py342 Term)(@x1py425 Term)) (! (and (or (not (HasTypeZ @x0py342 (Tm_arrow_5221ddbf8295a5d706d58e293ca3b4fe @x1py425))) (forall ((@x2py312 Term)(@x3py239 Term)) (! (or (not (HasType @x2py312 Tm_type)) (not (HasType @x3py239 (FStar.Pervasives.ex_wp @x2py312))) (HasType (ApplyTT (ApplyTT @x0py342 @x2py312) @x3py239) @x1py425)) :pattern ((ApplyTT (ApplyTT @x0py342 @x2py312) @x3py239)) ))) (or (HasTypeZ @x0py342 (Tm_arrow_5221ddbf8295a5d706d58e293ca3b4fe @x1py425)) (and (HasType (@x2!582 @x1py425 @x0py342) Tm_type) (HasType (@x3!581 @x1py425 @x0py342) (FStar.Pervasives.ex_wp (@x2!582 @x1py425 @x0py342))) (not (HasType (ApplyTT (ApplyTT @x0py342 (@x2!582 @x1py425 @x0py342)) (@x3!581 @x1py425 @x0py342)) @x1py425))))) :pattern ((HasTypeZ @x0py342 (Tm_arrow_5221ddbf8295a5d706d58e293ca3b4fe @x1py425))) )) :named FStar.Pervasives_interpretation_Tm_arrow_5221ddbf8295a5d706d58e293ca3b4fe))
(assert (! (forall ((@x0py343 Term)(@x1py426 Term)(@x2py313 Term)(@x3py240 Term)) (! (and (or (not (HasTypeZ @x0py343 (Tm_arrow_12929d79484018a159cc54c10d62f794 @x1py426 @x2py313 @x3py240))) (forall ((@x4py180 Term)) (! (or (not (HasType @x4py180 @x3py240)) (HasType (ApplyTT @x0py343 @x4py180) (FStar.Pervasives.all_wp_h @x2py313 @x1py426))) :pattern ((ApplyTT @x0py343 @x4py180)) ))) (or (HasTypeZ @x0py343 (Tm_arrow_12929d79484018a159cc54c10d62f794 @x1py426 @x2py313 @x3py240)) (and (HasType (@x4!583 @x3py240 @x2py313 @x1py426 @x0py343) @x3py240) (not (HasType (ApplyTT @x0py343 (@x4!583 @x3py240 @x2py313 @x1py426 @x0py343)) (FStar.Pervasives.all_wp_h @x2py313 @x1py426)))))) :pattern ((HasTypeZ @x0py343 (Tm_arrow_12929d79484018a159cc54c10d62f794 @x1py426 @x2py313 @x3py240))) )) :named FStar.Pervasives_interpretation_Tm_arrow_12929d79484018a159cc54c10d62f794))
(assert (! (forall ((@x0py344 Term)) (! (and (or (not (HasTypeZ @x0py344 Tm_arrow_51228bc6fe187c605830950e4b63d461)) (forall ((@x1py427 Term)(@x2py314 Term)(@x3py241 Term)(@x4py181 Term)(@x5py150 Term)(@x6py106 Term)) (! (or (not (HasType @x5py150 (ApplyTT @x2py314 @x4py181))) (not (HasType @x6py106 (ApplyTT (ApplyTT @x3py241 @x4py181) @x5py150))) (HasType (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT @x0py344 @x1py427) @x2py314) @x3py241) @x4py181) @x5py150) @x6py106) (FStar.Pervasives.dtuple3 @x1py427 @x2py314 @x3py241)) (not (HasType @x3py241 (Tm_arrow_614c7b5886a6e5b119a37c35c7e4bd59 @x2py314 @x1py427))) (not (HasType @x1py427 Tm_type)) (not (HasType @x4py181 @x1py427)) (not (HasType @x2py314 (Tm_arrow_e06752ba152f81447b312efcdf8f0e23 @x1py427)))) :pattern ((ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT @x0py344 @x1py427) @x2py314) @x3py241) @x4py181) @x5py150) @x6py106)) ))) (or (HasTypeZ @x0py344 Tm_arrow_51228bc6fe187c605830950e4b63d461) (and (HasType (@x1!589 @x0py344) Tm_type) (HasType (@x2!588 @x0py344) (Tm_arrow_e06752ba152f81447b312efcdf8f0e23 (@x1!589 @x0py344))) (HasType (@x3!587 @x0py344) (Tm_arrow_614c7b5886a6e5b119a37c35c7e4bd59 (@x2!588 @x0py344) (@x1!589 @x0py344))) (HasType (@x4!586 @x0py344) (@x1!589 @x0py344)) (HasType (@x5!585 @x0py344) (ApplyTT (@x2!588 @x0py344) (@x4!586 @x0py344))) (HasType (@x6!584 @x0py344) (ApplyTT (ApplyTT (@x3!587 @x0py344) (@x4!586 @x0py344)) (@x5!585 @x0py344))) (not (HasType (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT @x0py344 (@x1!589 @x0py344)) (@x2!588 @x0py344)) (@x3!587 @x0py344)) (@x4!586 @x0py344)) (@x5!585 @x0py344)) (@x6!584 @x0py344)) (FStar.Pervasives.dtuple3 (@x1!589 @x0py344) (@x2!588 @x0py344) (@x3!587 @x0py344))))))) :pattern ((HasTypeZ @x0py344 Tm_arrow_51228bc6fe187c605830950e4b63d461)) )) :named FStar.Pervasives_interpretation_Tm_arrow_51228bc6fe187c605830950e4b63d461))
(assert (! (forall ((@x0py345 Term)(@x1py428 Term)) (! (and (or (not (HasTypeZ @x0py345 (Tm_arrow_53506eda6d12f67a8e4b3ea75d309e23 @x1py428))) (forall ((@x2py315 Term)) (! (or (not (HasType @x2py315 @x1py428)) (HasType (ApplyTT @x0py345 @x2py315) FStar.Pervasives.__internal_ocaml_attributes)) :pattern ((ApplyTT @x0py345 @x2py315)) ))) (or (HasTypeZ @x0py345 (Tm_arrow_53506eda6d12f67a8e4b3ea75d309e23 @x1py428)) (and (HasType (@x2!590 @x1py428 @x0py345) @x1py428) (not (HasType (ApplyTT @x0py345 (@x2!590 @x1py428 @x0py345)) FStar.Pervasives.__internal_ocaml_attributes))))) :pattern ((HasTypeZ @x0py345 (Tm_arrow_53506eda6d12f67a8e4b3ea75d309e23 @x1py428))) )) :named FStar.Pervasives_interpretation_Tm_arrow_53506eda6d12f67a8e4b3ea75d309e23))
(assert (! (forall ((@x0py346 Term)(@x1py429 Term)) (! (and (or (not (HasTypeZ @x0py346 (Tm_arrow_59435ca7efae8c5a13162daf50ca7594 @x1py429))) (forall ((@x2py316 Term)(@x3py242 Term)(@x4py182 Term)) (! (or (HasType (ApplyTT (ApplyTT (ApplyTT @x0py346 @x2py316) @x3py242) @x4py182) @x1py429) (not (HasType @x4py182 (FStar.Pervasives.either @x2py316 @x3py242))) (not (HasType @x3py242 Tm_type)) (not (HasType @x2py316 Tm_type))) :pattern ((ApplyTT (ApplyTT (ApplyTT @x0py346 @x2py316) @x3py242) @x4py182)) ))) (or (HasTypeZ @x0py346 (Tm_arrow_59435ca7efae8c5a13162daf50ca7594 @x1py429)) (and (HasType (@x2!593 @x1py429 @x0py346) Tm_type) (HasType (@x3!592 @x1py429 @x0py346) Tm_type) (HasType (@x4!591 @x1py429 @x0py346) (FStar.Pervasives.either (@x2!593 @x1py429 @x0py346) (@x3!592 @x1py429 @x0py346))) (not (HasType (ApplyTT (ApplyTT (ApplyTT @x0py346 (@x2!593 @x1py429 @x0py346)) (@x3!592 @x1py429 @x0py346)) (@x4!591 @x1py429 @x0py346)) @x1py429))))) :pattern ((HasTypeZ @x0py346 (Tm_arrow_59435ca7efae8c5a13162daf50ca7594 @x1py429))) )) :named FStar.Pervasives_interpretation_Tm_arrow_59435ca7efae8c5a13162daf50ca7594))
(assert (! (forall ((@x0py347 Term)(@x1py430 Term)) (! (and (or (not (HasTypeZ @x0py347 (Tm_arrow_059768e110c940ea8bff9492771ddcc8 @x1py430))) (forall ((@x2py317 Term)(@x3py243 Term)(@x4py183 Term)(@x5py151 Term)) (! (or (HasType (ApplyTT (ApplyTT (ApplyTT (ApplyTT @x0py347 @x2py317) @x3py243) @x4py183) @x5py151) @x1py430) (not (HasType @x2py317 Tm_type)) (not (HasType @x3py243 Tm_type)) (not (HasType @x4py183 (FStar.Pervasives.all_wp_h @x2py317 @x3py243))) (not (HasType @x5py151 (FStar.Pervasives.all_wp_h @x2py317 @x3py243)))) :pattern ((ApplyTT (ApplyTT (ApplyTT (ApplyTT @x0py347 @x2py317) @x3py243) @x4py183) @x5py151)) ))) (or (HasTypeZ @x0py347 (Tm_arrow_059768e110c940ea8bff9492771ddcc8 @x1py430)) (and (HasType (@x2!597 @x1py430 @x0py347) Tm_type) (HasType (@x3!596 @x1py430 @x0py347) Tm_type) (HasType (@x4!595 @x1py430 @x0py347) (FStar.Pervasives.all_wp_h (@x2!597 @x1py430 @x0py347) (@x3!596 @x1py430 @x0py347))) (HasType (@x5!594 @x1py430 @x0py347) (FStar.Pervasives.all_wp_h (@x2!597 @x1py430 @x0py347) (@x3!596 @x1py430 @x0py347))) (not (HasType (ApplyTT (ApplyTT (ApplyTT (ApplyTT @x0py347 (@x2!597 @x1py430 @x0py347)) (@x3!596 @x1py430 @x0py347)) (@x4!595 @x1py430 @x0py347)) (@x5!594 @x1py430 @x0py347)) @x1py430))))) :pattern ((HasTypeZ @x0py347 (Tm_arrow_059768e110c940ea8bff9492771ddcc8 @x1py430))) )) :named FStar.Pervasives_interpretation_Tm_arrow_059768e110c940ea8bff9492771ddcc8))
(assert (! (forall ((@x0py348 Term)(@x1py431 Term)) (! (and (or (not (HasTypeZ @x0py348 (Tm_arrow_63177eca1c58ba394d666028d123748d @x1py431))) (forall ((@x2py318 Term)(@x3py244 Term)) (! (or (not (HasType @x2py318 Tm_type)) (not (HasType @x3py244 (FStar.Pervasives.ex_post @x2py318))) (HasType (ApplyTT (ApplyTT @x0py348 @x2py318) @x3py244) @x1py431)) :pattern ((ApplyTT (ApplyTT @x0py348 @x2py318) @x3py244)) ))) (or (HasTypeZ @x0py348 (Tm_arrow_63177eca1c58ba394d666028d123748d @x1py431)) (and (HasType (@x2!599 @x1py431 @x0py348) Tm_type) (HasType (@x3!598 @x1py431 @x0py348) (FStar.Pervasives.ex_post (@x2!599 @x1py431 @x0py348))) (not (HasType (ApplyTT (ApplyTT @x0py348 (@x2!599 @x1py431 @x0py348)) (@x3!598 @x1py431 @x0py348)) @x1py431))))) :pattern ((HasTypeZ @x0py348 (Tm_arrow_63177eca1c58ba394d666028d123748d @x1py431))) )) :named FStar.Pervasives_interpretation_Tm_arrow_63177eca1c58ba394d666028d123748d))
(assert (! (forall ((@x0py349 Term)(@x1py432 Term)) (! (and (or (not (HasTypeZ @x0py349 (Tm_arrow_425389aaf0306ac889308852f2d13f76 @x1py432))) (forall ((@x2py319 Term)(@x3py245 Term)(@x4py184 Term)(@x5py152 Term)(@x6py107 Term)) (! (or (HasType (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT @x0py349 @x2py319) @x3py245) @x4py184) @x5py152) @x6py107) @x1py432) (not (HasType @x2py319 Tm_type)) (not (HasType @x3py245 Tm_type)) (not (HasType @x5py152 (FStar.Pervasives.ex_wp @x2py319))) (not (HasType @x6py107 (FStar.Pervasives.ex_post @x2py319))) (not (HasType @x4py184 (FStar.Pervasives.ex_wp @x2py319)))) :pattern ((ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT @x0py349 @x2py319) @x3py245) @x4py184) @x5py152) @x6py107)) ))) (or (HasTypeZ @x0py349 (Tm_arrow_425389aaf0306ac889308852f2d13f76 @x1py432)) (and (HasType (@x2!604 @x1py432 @x0py349) Tm_type) (HasType (@x3!603 @x1py432 @x0py349) Tm_type) (HasType (@x4!602 @x1py432 @x0py349) (FStar.Pervasives.ex_wp (@x2!604 @x1py432 @x0py349))) (HasType (@x5!601 @x1py432 @x0py349) (FStar.Pervasives.ex_wp (@x2!604 @x1py432 @x0py349))) (HasType (@x6!600 @x1py432 @x0py349) (FStar.Pervasives.ex_post (@x2!604 @x1py432 @x0py349))) (not (HasType (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT @x0py349 (@x2!604 @x1py432 @x0py349)) (@x3!603 @x1py432 @x0py349)) (@x4!602 @x1py432 @x0py349)) (@x5!601 @x1py432 @x0py349)) (@x6!600 @x1py432 @x0py349)) @x1py432))))) :pattern ((HasTypeZ @x0py349 (Tm_arrow_425389aaf0306ac889308852f2d13f76 @x1py432))) )) :named FStar.Pervasives_interpretation_Tm_arrow_425389aaf0306ac889308852f2d13f76))
(assert (! (forall ((@x0py350 Term)(@x1py433 Term)) (! (and (or (not (HasTypeZ @x0py350 (Tm_arrow_646607d9b79b27cb700948778ab8dc33 @x1py433))) (forall ((@x2py320 Term)(@x3py246 Term)(@x4py185 Term)(@x5py153 Term)(@x6py108 Term)(@x7py79 Term)(@x8py52 Term)(@x9py37 Term)) (! (or (not (HasType @x3py246 @x1py433)) (HasType (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT @x0py350 @x2py320) @x3py246) @x4py185) @x5py153) @x6py108) @x7py79) @x8py52) @x9py37) Tm_type) (not (HasType @x2py320 Tm_type)) (not (HasType @x4py185 Tm_type)) (not (HasType @x5py153 Tm_type)) (not (HasType @x6py108 (FStar.Pervasives.all_wp_h @x2py320 @x4py185))) (not (HasType @x7py79 (Tm_arrow_12929d79484018a159cc54c10d62f794 @x5py153 @x2py320 @x4py185))) (not (HasType @x8py52 (FStar.Pervasives.all_post_h @x2py320 @x5py153))) (not (HasType @x9py37 @x2py320))) :pattern ((ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT @x0py350 @x2py320) @x3py246) @x4py185) @x5py153) @x6py108) @x7py79) @x8py52) @x9py37)) ))) (or (HasTypeZ @x0py350 (Tm_arrow_646607d9b79b27cb700948778ab8dc33 @x1py433)) (and (HasType (@x2!612 @x1py433 @x0py350) Tm_type) (HasType (@x3!611 @x1py433 @x0py350) @x1py433) (HasType (@x4!610 @x1py433 @x0py350) Tm_type) (HasType (@x5!609 @x1py433 @x0py350) Tm_type) (HasType (@x6!608 @x1py433 @x0py350) (FStar.Pervasives.all_wp_h (@x2!612 @x1py433 @x0py350) (@x4!610 @x1py433 @x0py350))) (HasType (@x7!607 @x1py433 @x0py350) (Tm_arrow_12929d79484018a159cc54c10d62f794 (@x5!609 @x1py433 @x0py350) (@x2!612 @x1py433 @x0py350) (@x4!610 @x1py433 @x0py350))) (HasType (@x8!606 @x1py433 @x0py350) (FStar.Pervasives.all_post_h (@x2!612 @x1py433 @x0py350) (@x5!609 @x1py433 @x0py350))) (HasType (@x9!605 @x1py433 @x0py350) (@x2!612 @x1py433 @x0py350)) (not (HasType (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT @x0py350 (@x2!612 @x1py433 @x0py350)) (@x3!611 @x1py433 @x0py350)) (@x4!610 @x1py433 @x0py350)) (@x5!609 @x1py433 @x0py350)) (@x6!608 @x1py433 @x0py350)) (@x7!607 @x1py433 @x0py350)) (@x8!606 @x1py433 @x0py350)) (@x9!605 @x1py433 @x0py350)) Tm_type))))) :pattern ((HasTypeZ @x0py350 (Tm_arrow_646607d9b79b27cb700948778ab8dc33 @x1py433))) )) :named FStar.Pervasives_interpretation_Tm_arrow_646607d9b79b27cb700948778ab8dc33))
(assert (! (forall ((@x0py351 Term)(@x1py434 Term)(@x2py321 Term)) (! (and (or (not (HasTypeZ @x0py351 (Tm_arrow_1114487a196323b3ca7d5d0b38969957 @x1py434 @x2py321))) (forall ((@x3py247 Term)) (! (or (not (HasType @x3py247 (FStar.Pervasives.st_post_h @x2py321 @x1py434))) (HasType (ApplyTT @x0py351 @x3py247) (FStar.Pervasives.st_pre_h @x2py321))) :pattern ((ApplyTT @x0py351 @x3py247)) ))) (or (HasTypeZ @x0py351 (Tm_arrow_1114487a196323b3ca7d5d0b38969957 @x1py434 @x2py321)) (and (HasType (@x3!613 @x2py321 @x1py434 @x0py351) (FStar.Pervasives.st_post_h @x2py321 @x1py434)) (not (HasType (ApplyTT @x0py351 (@x3!613 @x2py321 @x1py434 @x0py351)) (FStar.Pervasives.st_pre_h @x2py321)))))) :pattern ((HasTypeZ @x0py351 (Tm_arrow_1114487a196323b3ca7d5d0b38969957 @x1py434 @x2py321))) )) :named FStar.Pervasives_interpretation_Tm_arrow_1114487a196323b3ca7d5d0b38969957))
(assert (! (forall ((@x0py352 Term)(@x1py435 Term)) (! (and (or (not (HasTypeZ @x0py352 (Tm_arrow_8024419d86cafa6a8f5a740b84a7c291 @x1py435))) (forall ((@x2py322 Term)(@x3py248 Term)) (! (or (not (HasType @x2py322 Tm_type)) (not (HasType @x3py248 (FStar.Pervasives_Tm_refine_22fb403854eba07427f92e79848f9d9f @x2py322))) (HasType (ApplyTT (ApplyTT @x0py352 @x2py322) @x3py248) @x1py435)) :pattern ((ApplyTT (ApplyTT @x0py352 @x2py322) @x3py248)) ))) (or (HasTypeZ @x0py352 (Tm_arrow_8024419d86cafa6a8f5a740b84a7c291 @x1py435)) (and (HasType (@x2!615 @x1py435 @x0py352) Tm_type) (HasType (@x3!614 @x1py435 @x0py352) (FStar.Pervasives_Tm_refine_22fb403854eba07427f92e79848f9d9f (@x2!615 @x1py435 @x0py352))) (not (HasType (ApplyTT (ApplyTT @x0py352 (@x2!615 @x1py435 @x0py352)) (@x3!614 @x1py435 @x0py352)) @x1py435))))) :pattern ((HasTypeZ @x0py352 (Tm_arrow_8024419d86cafa6a8f5a740b84a7c291 @x1py435))) )) :named FStar.Pervasives_interpretation_Tm_arrow_8024419d86cafa6a8f5a740b84a7c291))
(assert (! (forall ((@x0py353 Term)(@x1py436 Term)(@x2py323 Term)) (! (and (or (not (HasTypeZ @x0py353 (Tm_arrow_37267229c41a09d7df20584f1caf324f @x1py436 @x2py323))) (forall ((@x3py249 Term)(@x4py186 Term)) (! (or (HasType (ApplyTT (ApplyTT @x0py353 @x3py249) @x4py186) Tm_type) (not (HasType @x3py249 (FStar.Pervasives.result @x2py323))) (not (HasType @x4py186 (Prims_Tm_refine_c16bc1b61f58b349bf6fc1c94dcaf83b @x1py436)))) :pattern ((ApplyTT (ApplyTT @x0py353 @x3py249) @x4py186)) ))) (or (HasTypeZ @x0py353 (Tm_arrow_37267229c41a09d7df20584f1caf324f @x1py436 @x2py323)) (and (HasType (@x3!617 @x2py323 @x1py436 @x0py353) (FStar.Pervasives.result @x2py323)) (HasType (@x4!616 @x2py323 @x1py436 @x0py353) (Prims_Tm_refine_c16bc1b61f58b349bf6fc1c94dcaf83b @x1py436)) (not (HasType (ApplyTT (ApplyTT @x0py353 (@x3!617 @x2py323 @x1py436 @x0py353)) (@x4!616 @x2py323 @x1py436 @x0py353)) Tm_type))))) :pattern ((HasTypeZ @x0py353 (Tm_arrow_37267229c41a09d7df20584f1caf324f @x1py436 @x2py323))) )) :named FStar.Pervasives_interpretation_Tm_arrow_37267229c41a09d7df20584f1caf324f))
(assert (! (forall ((@x0py354 Term)) (! (and (or (not (HasTypeZ @x0py354 Tm_arrow_627359304a35057805507fd05f62a750)) (forall ((@x1py437 Term)(@x2py324 Term)(@x3py250 Term)(@x4py187 Term)(@x5py154 Term)) (! (or (HasType (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT @x0py354 @x1py437) @x2py324) @x3py250) @x4py187) @x5py154) @x1py437) (not (HasType @x2py324 (Tm_arrow_e06752ba152f81447b312efcdf8f0e23 @x1py437))) (not (HasType @x5py154 (FStar.Pervasives.dtuple4 @x1py437 @x2py324 @x3py250 @x4py187))) (not (HasType @x4py187 (Tm_arrow_dbf39bf049d72c3088e1ed84d246952d @x3py250 @x2py324 @x1py437))) (not (HasType @x1py437 Tm_type)) (not (HasType @x3py250 (Tm_arrow_614c7b5886a6e5b119a37c35c7e4bd59 @x2py324 @x1py437)))) :pattern ((ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT @x0py354 @x1py437) @x2py324) @x3py250) @x4py187) @x5py154)) ))) (or (HasTypeZ @x0py354 Tm_arrow_627359304a35057805507fd05f62a750) (and (HasType (@x1!622 @x0py354) Tm_type) (HasType (@x2!621 @x0py354) (Tm_arrow_e06752ba152f81447b312efcdf8f0e23 (@x1!622 @x0py354))) (HasType (@x3!620 @x0py354) (Tm_arrow_614c7b5886a6e5b119a37c35c7e4bd59 (@x2!621 @x0py354) (@x1!622 @x0py354))) (HasType (@x4!619 @x0py354) (Tm_arrow_dbf39bf049d72c3088e1ed84d246952d (@x3!620 @x0py354) (@x2!621 @x0py354) (@x1!622 @x0py354))) (HasType (@x5!618 @x0py354) (FStar.Pervasives.dtuple4 (@x1!622 @x0py354) (@x2!621 @x0py354) (@x3!620 @x0py354) (@x4!619 @x0py354))) (not (HasType (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT @x0py354 (@x1!622 @x0py354)) (@x2!621 @x0py354)) (@x3!620 @x0py354)) (@x4!619 @x0py354)) (@x5!618 @x0py354)) (@x1!622 @x0py354)))))) :pattern ((HasTypeZ @x0py354 Tm_arrow_627359304a35057805507fd05f62a750)) )) :named FStar.Pervasives_interpretation_Tm_arrow_627359304a35057805507fd05f62a750))
(assert (! (forall ((@x0py355 Term)) (! (and (or (not (HasTypeZ @x0py355 Tm_arrow_a1a8754ef05983b108c166cca1c4e63a)) (forall ((@x1py438 Term)(@x2py325 Term)(@x3py251 Term)) (! (or (HasType (ApplyTT (ApplyTT (ApplyTT @x0py355 @x1py438) @x2py325) @x3py251) (FStar.Pervasives.either @x1py438 @x2py325)) (not (HasType @x3py251 @x2py325)) (not (HasType @x1py438 Tm_type)) (not (HasType @x2py325 Tm_type))) :pattern ((ApplyTT (ApplyTT (ApplyTT @x0py355 @x1py438) @x2py325) @x3py251)) ))) (or (HasTypeZ @x0py355 Tm_arrow_a1a8754ef05983b108c166cca1c4e63a) (and (HasType (@x1!625 @x0py355) Tm_type) (HasType (@x2!624 @x0py355) Tm_type) (HasType (@x3!623 @x0py355) (@x2!624 @x0py355)) (not (HasType (ApplyTT (ApplyTT (ApplyTT @x0py355 (@x1!625 @x0py355)) (@x2!624 @x0py355)) (@x3!623 @x0py355)) (FStar.Pervasives.either (@x1!625 @x0py355) (@x2!624 @x0py355))))))) :pattern ((HasTypeZ @x0py355 Tm_arrow_a1a8754ef05983b108c166cca1c4e63a)) )) :named FStar.Pervasives_interpretation_Tm_arrow_a1a8754ef05983b108c166cca1c4e63a))
(assert (! (forall ((@x0py356 Term)(@x1py439 Term)) (! (and (or (not (HasTypeZ @x0py356 (Tm_arrow_a3b523cfd66a616c0e641efdb75e9e3e @x1py439))) (forall ((@x2py326 Term)(@x3py252 Term)) (! (or (not (HasType @x2py326 Tm_type)) (not (HasType @x3py252 (FStar.Pervasives_Tm_refine_16d7dda25a162db0722685f27f707102 @x1py439))) (HasType (ApplyTT (ApplyTT @x0py356 @x2py326) @x3py252) @x2py326)) :pattern ((ApplyTT (ApplyTT @x0py356 @x2py326) @x3py252)) ))) (or (HasTypeZ @x0py356 (Tm_arrow_a3b523cfd66a616c0e641efdb75e9e3e @x1py439)) (and (HasType (@x2!627 @x1py439 @x0py356) Tm_type) (HasType (@x3!626 @x1py439 @x0py356) (FStar.Pervasives_Tm_refine_16d7dda25a162db0722685f27f707102 @x1py439)) (not (HasType (ApplyTT (ApplyTT @x0py356 (@x2!627 @x1py439 @x0py356)) (@x3!626 @x1py439 @x0py356)) (@x2!627 @x1py439 @x0py356)))))) :pattern ((HasTypeZ @x0py356 (Tm_arrow_a3b523cfd66a616c0e641efdb75e9e3e @x1py439))) )) :named FStar.Pervasives_interpretation_Tm_arrow_a3b523cfd66a616c0e641efdb75e9e3e))
(assert (! (forall ((@x0py357 Term)(@x1py440 Term)) (! (and (or (not (HasTypeZ @x0py357 (Tm_arrow_a7b615889edcbdfadf24ad49f4c2628e @x1py440))) (forall ((@x2py327 Term)) (! (or (not (HasType @x2py327 FStar.Pervasives_Tm_refine_564db2f0aa0878b4d96c60508be3dd36)) (HasType (ApplyTT @x0py357 @x2py327) @x1py440)) :pattern ((ApplyTT @x0py357 @x2py327)) ))) (or (HasTypeZ @x0py357 (Tm_arrow_a7b615889edcbdfadf24ad49f4c2628e @x1py440)) (and (HasType (@x2!628 @x1py440 @x0py357) FStar.Pervasives_Tm_refine_564db2f0aa0878b4d96c60508be3dd36) (not (HasType (ApplyTT @x0py357 (@x2!628 @x1py440 @x0py357)) @x1py440))))) :pattern ((HasTypeZ @x0py357 (Tm_arrow_a7b615889edcbdfadf24ad49f4c2628e @x1py440))) )) :named FStar.Pervasives_interpretation_Tm_arrow_a7b615889edcbdfadf24ad49f4c2628e))
(assert (! (forall ((@x0py358 Term)(@x1py441 Term)) (! (and (or (not (HasTypeZ @x0py358 (Tm_arrow_a8bd5744f1e631257a4264db50bf5a7c @x1py441))) (forall ((@x2py328 Term)(@x3py253 Term)(@x4py188 Term)(@x5py155 Term)(@x6py109 Term)(@x7py80 Term)(@x8py53 Term)) (! (or (HasType (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT @x0py358 @x2py328) @x3py253) @x4py188) @x5py155) @x6py109) @x7py80) @x8py53) @x1py441) (not (HasType @x3py253 Tm_type)) (not (HasType @x2py328 Tm_type)) (not (HasType @x6py109 (FStar.Pervasives.st_wp_h @x2py328 @x3py253))) (not (HasType @x4py188 Tm_type)) (not (HasType @x5py155 (FStar.Pervasives.st_wp_h @x2py328 @x3py253))) (not (HasType @x7py80 (FStar.Pervasives.st_post_h @x2py328 @x3py253))) (not (HasType @x8py53 @x2py328))) :pattern ((ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT @x0py358 @x2py328) @x3py253) @x4py188) @x5py155) @x6py109) @x7py80) @x8py53)) ))) (or (HasTypeZ @x0py358 (Tm_arrow_a8bd5744f1e631257a4264db50bf5a7c @x1py441)) (and (HasType (@x2!635 @x1py441 @x0py358) Tm_type) (HasType (@x3!634 @x1py441 @x0py358) Tm_type) (HasType (@x4!633 @x1py441 @x0py358) Tm_type) (HasType (@x5!632 @x1py441 @x0py358) (FStar.Pervasives.st_wp_h (@x2!635 @x1py441 @x0py358) (@x3!634 @x1py441 @x0py358))) (HasType (@x6!631 @x1py441 @x0py358) (FStar.Pervasives.st_wp_h (@x2!635 @x1py441 @x0py358) (@x3!634 @x1py441 @x0py358))) (HasType (@x7!630 @x1py441 @x0py358) (FStar.Pervasives.st_post_h (@x2!635 @x1py441 @x0py358) (@x3!634 @x1py441 @x0py358))) (HasType (@x8!629 @x1py441 @x0py358) (@x2!635 @x1py441 @x0py358)) (not (HasType (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT @x0py358 (@x2!635 @x1py441 @x0py358)) (@x3!634 @x1py441 @x0py358)) (@x4!633 @x1py441 @x0py358)) (@x5!632 @x1py441 @x0py358)) (@x6!631 @x1py441 @x0py358)) (@x7!630 @x1py441 @x0py358)) (@x8!629 @x1py441 @x0py358)) @x1py441))))) :pattern ((HasTypeZ @x0py358 (Tm_arrow_a8bd5744f1e631257a4264db50bf5a7c @x1py441))) )) :named FStar.Pervasives_interpretation_Tm_arrow_a8bd5744f1e631257a4264db50bf5a7c))
(assert (! (forall ((@x0py359 Term)(@x1py442 Term)) (! (and (or (not (HasTypeZ @x0py359 (Tm_arrow_aa928d5fea25781a172e9e551de2bee3 @x1py442))) (forall ((@x2py329 Term)) (! (or (not (HasType @x2py329 (FStar.Pervasives_Tm_refine_a2260b9f44d24a9a5b9e80956138e9d0 @x1py442))) (HasType (ApplyTT @x0py359 @x2py329) Tm_type)) :pattern ((ApplyTT @x0py359 @x2py329)) ))) (or (HasTypeZ @x0py359 (Tm_arrow_aa928d5fea25781a172e9e551de2bee3 @x1py442)) (and (HasType (@x2!636 @x1py442 @x0py359) (FStar.Pervasives_Tm_refine_a2260b9f44d24a9a5b9e80956138e9d0 @x1py442)) (not (HasType (ApplyTT @x0py359 (@x2!636 @x1py442 @x0py359)) Tm_type))))) :pattern ((HasTypeZ @x0py359 (Tm_arrow_aa928d5fea25781a172e9e551de2bee3 @x1py442))) )) :named FStar.Pervasives_interpretation_Tm_arrow_aa928d5fea25781a172e9e551de2bee3))
(assert (! (forall ((@x0py360 Term)(@x1py443 Term)) (! (and (or (not (HasTypeZ @x0py360 (Tm_arrow_ad2a5a45548b5666753ded1bcb23ab10 @x1py443))) (forall ((@x2py330 Term)(@x3py254 Term)(@x4py189 Term)) (! (or (HasType (ApplyTT (ApplyTT (ApplyTT @x0py360 @x2py330) @x3py254) @x4py189) @x1py443) (not (HasType @x2py330 Tm_type)) (not (HasType @x4py189 (FStar.Pervasives.ex_wp @x2py330))) (not (HasType @x3py254 (FStar.Pervasives.ex_wp @x2py330)))) :pattern ((ApplyTT (ApplyTT (ApplyTT @x0py360 @x2py330) @x3py254) @x4py189)) ))) (or (HasTypeZ @x0py360 (Tm_arrow_ad2a5a45548b5666753ded1bcb23ab10 @x1py443)) (and (HasType (@x2!639 @x1py443 @x0py360) Tm_type) (HasType (@x3!638 @x1py443 @x0py360) (FStar.Pervasives.ex_wp (@x2!639 @x1py443 @x0py360))) (HasType (@x4!637 @x1py443 @x0py360) (FStar.Pervasives.ex_wp (@x2!639 @x1py443 @x0py360))) (not (HasType (ApplyTT (ApplyTT (ApplyTT @x0py360 (@x2!639 @x1py443 @x0py360)) (@x3!638 @x1py443 @x0py360)) (@x4!637 @x1py443 @x0py360)) @x1py443))))) :pattern ((HasTypeZ @x0py360 (Tm_arrow_ad2a5a45548b5666753ded1bcb23ab10 @x1py443))) )) :named FStar.Pervasives_interpretation_Tm_arrow_ad2a5a45548b5666753ded1bcb23ab10))
(assert (! (forall ((@x0py361 Term)) (! (and (or (not (HasTypeZ @x0py361 Tm_arrow_bc432a638e8ded95e6543c5ef7d6cefa)) (forall ((@x1py444 Term)(@x2py331 Term)(@x3py255 Term)(@x4py190 Term)(@x5py156 Term)(@x6py110 Term)(@x7py81 Term)(@x8py54 Term)) (! (or (HasType (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT @x0py361 @x1py444) @x2py331) @x3py255) @x4py190) @x5py156) @x6py110) @x7py81) @x8py54) (FStar.Pervasives.dtuple4 @x1py444 @x2py331 @x3py255 @x4py190)) (not (HasType @x1py444 Tm_type)) (not (HasType @x2py331 (Tm_arrow_e06752ba152f81447b312efcdf8f0e23 @x1py444))) (not (HasType @x3py255 (Tm_arrow_614c7b5886a6e5b119a37c35c7e4bd59 @x2py331 @x1py444))) (not (HasType @x4py190 (Tm_arrow_dbf39bf049d72c3088e1ed84d246952d @x3py255 @x2py331 @x1py444))) (not (HasType @x7py81 (ApplyTT (ApplyTT @x3py255 @x5py156) @x6py110))) (not (HasType @x8py54 (ApplyTT (ApplyTT (ApplyTT @x4py190 @x5py156) @x6py110) @x7py81))) (not (HasType @x5py156 @x1py444)) (not (HasType @x6py110 (ApplyTT @x2py331 @x5py156)))) :pattern ((ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT @x0py361 @x1py444) @x2py331) @x3py255) @x4py190) @x5py156) @x6py110) @x7py81) @x8py54)) ))) (or (HasTypeZ @x0py361 Tm_arrow_bc432a638e8ded95e6543c5ef7d6cefa) (and (HasType (@x1!647 @x0py361) Tm_type) (HasType (@x2!646 @x0py361) (Tm_arrow_e06752ba152f81447b312efcdf8f0e23 (@x1!647 @x0py361))) (HasType (@x3!645 @x0py361) (Tm_arrow_614c7b5886a6e5b119a37c35c7e4bd59 (@x2!646 @x0py361) (@x1!647 @x0py361))) (HasType (@x4!644 @x0py361) (Tm_arrow_dbf39bf049d72c3088e1ed84d246952d (@x3!645 @x0py361) (@x2!646 @x0py361) (@x1!647 @x0py361))) (HasType (@x5!643 @x0py361) (@x1!647 @x0py361)) (HasType (@x6!642 @x0py361) (ApplyTT (@x2!646 @x0py361) (@x5!643 @x0py361))) (HasType (@x7!641 @x0py361) (ApplyTT (ApplyTT (@x3!645 @x0py361) (@x5!643 @x0py361)) (@x6!642 @x0py361))) (HasType (@x8!640 @x0py361) (ApplyTT (ApplyTT (ApplyTT (@x4!644 @x0py361) (@x5!643 @x0py361)) (@x6!642 @x0py361)) (@x7!641 @x0py361))) (not (HasType (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT @x0py361 (@x1!647 @x0py361)) (@x2!646 @x0py361)) (@x3!645 @x0py361)) (@x4!644 @x0py361)) (@x5!643 @x0py361)) (@x6!642 @x0py361)) (@x7!641 @x0py361)) (@x8!640 @x0py361)) (FStar.Pervasives.dtuple4 (@x1!647 @x0py361) (@x2!646 @x0py361) (@x3!645 @x0py361) (@x4!644 @x0py361))))))) :pattern ((HasTypeZ @x0py361 Tm_arrow_bc432a638e8ded95e6543c5ef7d6cefa)) )) :named FStar.Pervasives_interpretation_Tm_arrow_bc432a638e8ded95e6543c5ef7d6cefa))
(assert (! (forall ((@x0py362 Term)) (! (and (or (not (HasTypeZ @x0py362 Tm_arrow_bec8a4f6afbb1e18e2d9aca8cce42b29)) (forall ((@x1py445 Term)(@x2py332 Term)(@x3py256 Term)(@x4py191 Term)) (! (or (not (HasType @x2py332 (Tm_arrow_e06752ba152f81447b312efcdf8f0e23 @x1py445))) (HasType (ApplyTT (ApplyTT (ApplyTT (ApplyTT @x0py362 @x1py445) @x2py332) @x3py256) @x4py191) (ApplyTT (ApplyTT @x3py256 (FStar.Pervasives.__proj__Mkdtuple3__item___1 @x1py445 @x2py332 @x3py256 @x4py191)) (FStar.Pervasives.__proj__Mkdtuple3__item___2 @x1py445 @x2py332 @x3py256 @x4py191))) (not (HasType @x1py445 Tm_type)) (not (HasType @x3py256 (Tm_arrow_614c7b5886a6e5b119a37c35c7e4bd59 @x2py332 @x1py445))) (not (HasType @x4py191 (FStar.Pervasives.dtuple3 @x1py445 @x2py332 @x3py256)))) :pattern ((ApplyTT (ApplyTT (ApplyTT (ApplyTT @x0py362 @x1py445) @x2py332) @x3py256) @x4py191)) ))) (or (HasTypeZ @x0py362 Tm_arrow_bec8a4f6afbb1e18e2d9aca8cce42b29) (and (HasType (@x1!651 @x0py362) Tm_type) (HasType (@x2!650 @x0py362) (Tm_arrow_e06752ba152f81447b312efcdf8f0e23 (@x1!651 @x0py362))) (HasType (@x3!649 @x0py362) (Tm_arrow_614c7b5886a6e5b119a37c35c7e4bd59 (@x2!650 @x0py362) (@x1!651 @x0py362))) (HasType (@x4!648 @x0py362) (FStar.Pervasives.dtuple3 (@x1!651 @x0py362) (@x2!650 @x0py362) (@x3!649 @x0py362))) (not (HasType (ApplyTT (ApplyTT (ApplyTT (ApplyTT @x0py362 (@x1!651 @x0py362)) (@x2!650 @x0py362)) (@x3!649 @x0py362)) (@x4!648 @x0py362)) (ApplyTT (ApplyTT (@x3!649 @x0py362) (FStar.Pervasives.__proj__Mkdtuple3__item___1 (@x1!651 @x0py362) (@x2!650 @x0py362) (@x3!649 @x0py362) (@x4!648 @x0py362))) (FStar.Pervasives.__proj__Mkdtuple3__item___2 (@x1!651 @x0py362) (@x2!650 @x0py362) (@x3!649 @x0py362) (@x4!648 @x0py362)))))))) :pattern ((HasTypeZ @x0py362 Tm_arrow_bec8a4f6afbb1e18e2d9aca8cce42b29)) )) :named FStar.Pervasives_interpretation_Tm_arrow_bec8a4f6afbb1e18e2d9aca8cce42b29))
(assert (! (forall ((@x0py363 Term)) (! (and (or (not (HasTypeZ @x0py363 Tm_arrow_bf84b86e4714dba88d5fa227c56fabbb)) (forall ((@x1py446 Term)(@x2py333 Term)) (! (or (not (HasType @x1py446 Tm_type)) (not (HasType @x2py333 (FStar.Pervasives_Tm_refine_9db520b26a7f39c5a01493a3f375290d @x1py446))) (HasType (ApplyTT (ApplyTT @x0py363 @x1py446) @x2py333) @x1py446)) :pattern ((ApplyTT (ApplyTT @x0py363 @x1py446) @x2py333)) ))) (or (HasTypeZ @x0py363 Tm_arrow_bf84b86e4714dba88d5fa227c56fabbb) (and (HasType (@x1!653 @x0py363) Tm_type) (HasType (@x2!652 @x0py363) (FStar.Pervasives_Tm_refine_9db520b26a7f39c5a01493a3f375290d (@x1!653 @x0py363))) (not (HasType (ApplyTT (ApplyTT @x0py363 (@x1!653 @x0py363)) (@x2!652 @x0py363)) (@x1!653 @x0py363)))))) :pattern ((HasTypeZ @x0py363 Tm_arrow_bf84b86e4714dba88d5fa227c56fabbb)) )) :named FStar.Pervasives_interpretation_Tm_arrow_bf84b86e4714dba88d5fa227c56fabbb))
(assert (! (forall ((@x0py364 Term)) (! (and (or (not (HasTypeZ @x0py364 Tm_arrow_c3d46b8ae03d5e5761b37a519c1896ea)) (forall ((@x1py447 Term)(@x2py334 Term)(@x3py257 Term)) (! (or (HasType (ApplyTT (ApplyTT (ApplyTT @x0py364 @x1py447) @x2py334) @x3py257) @x2py334) (not (HasType @x1py447 Tm_type)) (not (HasType @x2py334 Tm_type)) (not (HasType @x3py257 (FStar.Pervasives_Tm_refine_8f1f5f564dae90240db429de2eb41517 @x1py447 @x2py334)))) :pattern ((ApplyTT (ApplyTT (ApplyTT @x0py364 @x1py447) @x2py334) @x3py257)) ))) (or (HasTypeZ @x0py364 Tm_arrow_c3d46b8ae03d5e5761b37a519c1896ea) (and (HasType (@x1!656 @x0py364) Tm_type) (HasType (@x2!655 @x0py364) Tm_type) (HasType (@x3!654 @x0py364) (FStar.Pervasives_Tm_refine_8f1f5f564dae90240db429de2eb41517 (@x1!656 @x0py364) (@x2!655 @x0py364))) (not (HasType (ApplyTT (ApplyTT (ApplyTT @x0py364 (@x1!656 @x0py364)) (@x2!655 @x0py364)) (@x3!654 @x0py364)) (@x2!655 @x0py364)))))) :pattern ((HasTypeZ @x0py364 Tm_arrow_c3d46b8ae03d5e5761b37a519c1896ea)) )) :named FStar.Pervasives_interpretation_Tm_arrow_c3d46b8ae03d5e5761b37a519c1896ea))
(assert (! (forall ((@x0py365 Term)(@x1py448 Term)) (! (and (or (not (HasTypeZ @x0py365 (Tm_arrow_c7a05ebcf00d9d5ea2ad28cd2649cf23 @x1py448))) (forall ((@x2py335 Term)) (! (or (not (HasType @x2py335 Tm_type)) (HasType (ApplyTT @x0py365 @x2py335) (FStar.Pervasives_Tm_refine_7026ef6906ebd21e19dc2cc0639312d3 @x1py448 @x2py335))) :pattern ((ApplyTT @x0py365 @x2py335)) ))) (or (HasTypeZ @x0py365 (Tm_arrow_c7a05ebcf00d9d5ea2ad28cd2649cf23 @x1py448)) (and (HasType (@x2!657 @x1py448 @x0py365) Tm_type) (not (HasType (ApplyTT @x0py365 (@x2!657 @x1py448 @x0py365)) (FStar.Pervasives_Tm_refine_7026ef6906ebd21e19dc2cc0639312d3 @x1py448 (@x2!657 @x1py448 @x0py365))))))) :pattern ((HasTypeZ @x0py365 (Tm_arrow_c7a05ebcf00d9d5ea2ad28cd2649cf23 @x1py448))) )) :named FStar.Pervasives_interpretation_Tm_arrow_c7a05ebcf00d9d5ea2ad28cd2649cf23))
(assert (! (forall ((@x0py366 Term)(@x1py449 Term)) (! (and (or (not (HasTypeZ @x0py366 (Tm_arrow_c89a507d37bce525c784ce4c49ca4e78 @x1py449))) (forall ((@x2py336 Term)(@x3py258 Term)(@x4py192 Term)(@x5py157 Term)(@x6py111 Term)(@x7py82 Term)(@x8py55 Term)(@x9py38 Term)) (! (or (HasType (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT @x0py366 @x2py336) @x3py258) @x4py192) @x5py157) @x6py111) @x7py82) @x8py55) @x9py38) Tm_type) (not (HasType @x4py192 Tm_type)) (not (HasType @x2py336 Tm_type)) (not (HasType @x3py258 @x1py449)) (not (HasType @x8py55 (FStar.Pervasives.st_post_h @x2py336 @x5py157))) (not (HasType @x5py157 Tm_type)) (not (HasType @x6py111 (FStar.Pervasives.st_wp_h @x2py336 @x4py192))) (not (HasType @x9py38 @x2py336)) (not (HasType @x7py82 (Tm_arrow_d9eac583d9f115ef0dc2cf4de1079b38 @x5py157 @x2py336 @x4py192)))) :pattern ((ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT @x0py366 @x2py336) @x3py258) @x4py192) @x5py157) @x6py111) @x7py82) @x8py55) @x9py38)) ))) (or (HasTypeZ @x0py366 (Tm_arrow_c89a507d37bce525c784ce4c49ca4e78 @x1py449)) (and (HasType (@x2!665 @x1py449 @x0py366) Tm_type) (HasType (@x3!664 @x1py449 @x0py366) @x1py449) (HasType (@x4!663 @x1py449 @x0py366) Tm_type) (HasType (@x5!662 @x1py449 @x0py366) Tm_type) (HasType (@x6!661 @x1py449 @x0py366) (FStar.Pervasives.st_wp_h (@x2!665 @x1py449 @x0py366) (@x4!663 @x1py449 @x0py366))) (HasType (@x7!660 @x1py449 @x0py366) (Tm_arrow_d9eac583d9f115ef0dc2cf4de1079b38 (@x5!662 @x1py449 @x0py366) (@x2!665 @x1py449 @x0py366) (@x4!663 @x1py449 @x0py366))) (HasType (@x8!659 @x1py449 @x0py366) (FStar.Pervasives.st_post_h (@x2!665 @x1py449 @x0py366) (@x5!662 @x1py449 @x0py366))) (HasType (@x9!658 @x1py449 @x0py366) (@x2!665 @x1py449 @x0py366)) (not (HasType (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT @x0py366 (@x2!665 @x1py449 @x0py366)) (@x3!664 @x1py449 @x0py366)) (@x4!663 @x1py449 @x0py366)) (@x5!662 @x1py449 @x0py366)) (@x6!661 @x1py449 @x0py366)) (@x7!660 @x1py449 @x0py366)) (@x8!659 @x1py449 @x0py366)) (@x9!658 @x1py449 @x0py366)) Tm_type))))) :pattern ((HasTypeZ @x0py366 (Tm_arrow_c89a507d37bce525c784ce4c49ca4e78 @x1py449))) )) :named FStar.Pervasives_interpretation_Tm_arrow_c89a507d37bce525c784ce4c49ca4e78))
(assert (! (forall ((@x0py367 Term)) (! (and (or (not (HasTypeZ @x0py367 Tm_arrow_c314ab62524b1a2d1997954ac4c1ae99)) (forall ((@x1py450 Term)(@x2py337 Term)(@x3py259 Term)(@x4py193 Term)) (! (or (HasType (ApplyTT (ApplyTT (ApplyTT (ApplyTT @x0py367 @x1py450) @x2py337) @x3py259) @x4py193) (ApplyTT @x2py337 (FStar.Pervasives.__proj__Mkdtuple3__item___1 @x1py450 @x2py337 @x3py259 @x4py193))) (not (HasType @x3py259 (Tm_arrow_614c7b5886a6e5b119a37c35c7e4bd59 @x2py337 @x1py450))) (not (HasType @x4py193 (FStar.Pervasives.dtuple3 @x1py450 @x2py337 @x3py259))) (not (HasType @x1py450 Tm_type)) (not (HasType @x2py337 (Tm_arrow_e06752ba152f81447b312efcdf8f0e23 @x1py450)))) :pattern ((ApplyTT (ApplyTT (ApplyTT (ApplyTT @x0py367 @x1py450) @x2py337) @x3py259) @x4py193)) ))) (or (HasTypeZ @x0py367 Tm_arrow_c314ab62524b1a2d1997954ac4c1ae99) (and (HasType (@x1!669 @x0py367) Tm_type) (HasType (@x2!668 @x0py367) (Tm_arrow_e06752ba152f81447b312efcdf8f0e23 (@x1!669 @x0py367))) (HasType (@x3!667 @x0py367) (Tm_arrow_614c7b5886a6e5b119a37c35c7e4bd59 (@x2!668 @x0py367) (@x1!669 @x0py367))) (HasType (@x4!666 @x0py367) (FStar.Pervasives.dtuple3 (@x1!669 @x0py367) (@x2!668 @x0py367) (@x3!667 @x0py367))) (not (HasType (ApplyTT (ApplyTT (ApplyTT (ApplyTT @x0py367 (@x1!669 @x0py367)) (@x2!668 @x0py367)) (@x3!667 @x0py367)) (@x4!666 @x0py367)) (ApplyTT (@x2!668 @x0py367) (FStar.Pervasives.__proj__Mkdtuple3__item___1 (@x1!669 @x0py367) (@x2!668 @x0py367) (@x3!667 @x0py367) (@x4!666 @x0py367)))))))) :pattern ((HasTypeZ @x0py367 Tm_arrow_c314ab62524b1a2d1997954ac4c1ae99)) )) :named FStar.Pervasives_interpretation_Tm_arrow_c314ab62524b1a2d1997954ac4c1ae99))
(assert (! (forall ((@x0py368 Term)) (! (and (or (not (HasTypeZ @x0py368 Tm_arrow_c550a8e282abd0593a028dd71c851c33)) (forall ((@x1py451 Term)(@x2py338 Term)(@x3py260 Term)(@x4py194 Term)) (! (or (HasType (ApplyTT (ApplyTT (ApplyTT (ApplyTT @x0py368 @x1py451) @x2py338) @x3py260) @x4py194) (Tm_arrow_1c4871de840a52d38a5b65a5ad4e97ea @x1py451)) (not (HasType @x3py260 @x2py338)) (not (HasType @x4py194 (FStar.Pervasives.all_post_h @x1py451 @x2py338))) (not (HasType @x1py451 Tm_type)) (not (HasType @x2py338 Tm_type))) :pattern ((ApplyTT (ApplyTT (ApplyTT (ApplyTT @x0py368 @x1py451) @x2py338) @x3py260) @x4py194)) ))) (or (HasTypeZ @x0py368 Tm_arrow_c550a8e282abd0593a028dd71c851c33) (and (HasType (@x1!673 @x0py368) Tm_type) (HasType (@x2!672 @x0py368) Tm_type) (HasType (@x3!671 @x0py368) (@x2!672 @x0py368)) (HasType (@x4!670 @x0py368) (FStar.Pervasives.all_post_h (@x1!673 @x0py368) (@x2!672 @x0py368))) (not (HasType (ApplyTT (ApplyTT (ApplyTT (ApplyTT @x0py368 (@x1!673 @x0py368)) (@x2!672 @x0py368)) (@x3!671 @x0py368)) (@x4!670 @x0py368)) (Tm_arrow_1c4871de840a52d38a5b65a5ad4e97ea (@x1!673 @x0py368))))))) :pattern ((HasTypeZ @x0py368 Tm_arrow_c550a8e282abd0593a028dd71c851c33)) )) :named FStar.Pervasives_interpretation_Tm_arrow_c550a8e282abd0593a028dd71c851c33))
(assert (! (forall ((@x0py369 Term)(@x1py452 Term)) (! (and (or (not (HasTypeZ @x0py369 (Tm_arrow_d1e52eaae1c31c37e88414cfa45e35d7 @x1py452))) (forall ((@x2py339 Term)(@x3py261 Term)(@x4py195 Term)) (! (or (HasType (ApplyTT (ApplyTT (ApplyTT @x0py369 @x2py339) @x3py261) @x4py195) @x1py452) (not (HasType @x3py261 Tm_type)) (not (HasType @x2py339 Tm_type)) (not (HasType @x4py195 (FStar.Pervasives.st_wp_h @x2py339 @x3py261)))) :pattern ((ApplyTT (ApplyTT (ApplyTT @x0py369 @x2py339) @x3py261) @x4py195)) ))) (or (HasTypeZ @x0py369 (Tm_arrow_d1e52eaae1c31c37e88414cfa45e35d7 @x1py452)) (and (HasType (@x2!676 @x1py452 @x0py369) Tm_type) (HasType (@x3!675 @x1py452 @x0py369) Tm_type) (HasType (@x4!674 @x1py452 @x0py369) (FStar.Pervasives.st_wp_h (@x2!676 @x1py452 @x0py369) (@x3!675 @x1py452 @x0py369))) (not (HasType (ApplyTT (ApplyTT (ApplyTT @x0py369 (@x2!676 @x1py452 @x0py369)) (@x3!675 @x1py452 @x0py369)) (@x4!674 @x1py452 @x0py369)) @x1py452))))) :pattern ((HasTypeZ @x0py369 (Tm_arrow_d1e52eaae1c31c37e88414cfa45e35d7 @x1py452))) )) :named FStar.Pervasives_interpretation_Tm_arrow_d1e52eaae1c31c37e88414cfa45e35d7))
(assert (! (forall ((@x0py370 Term)(@x1py453 Term)(@x2py340 Term)(@x3py262 Term)) (! (and (or (not (HasTypeZ @x0py370 (Tm_arrow_d9eac583d9f115ef0dc2cf4de1079b38 @x1py453 @x2py340 @x3py262))) (forall ((@x4py196 Term)) (! (or (not (HasType @x4py196 @x3py262)) (HasType (ApplyTT @x0py370 @x4py196) (FStar.Pervasives.st_wp_h @x2py340 @x1py453))) :pattern ((ApplyTT @x0py370 @x4py196)) ))) (or (HasTypeZ @x0py370 (Tm_arrow_d9eac583d9f115ef0dc2cf4de1079b38 @x1py453 @x2py340 @x3py262)) (and (HasType (@x4!677 @x3py262 @x2py340 @x1py453 @x0py370) @x3py262) (not (HasType (ApplyTT @x0py370 (@x4!677 @x3py262 @x2py340 @x1py453 @x0py370)) (FStar.Pervasives.st_wp_h @x2py340 @x1py453)))))) :pattern ((HasTypeZ @x0py370 (Tm_arrow_d9eac583d9f115ef0dc2cf4de1079b38 @x1py453 @x2py340 @x3py262))) )) :named FStar.Pervasives_interpretation_Tm_arrow_d9eac583d9f115ef0dc2cf4de1079b38))
(assert (! (forall ((@x0py371 Term)(@x1py454 Term)(@x2py341 Term)) (! (and (or (not (HasTypeZ @x0py371 (Tm_arrow_d794a58e52e51e13e3b9afe660625c54 @x1py454 @x2py341))) (forall ((@x3py263 Term)) (! (or (not (HasType @x3py263 @x2py341)) (HasType (ApplyTT @x0py371 @x3py263) (FStar.Pervasives.ex_wp @x1py454))) :pattern ((ApplyTT @x0py371 @x3py263)) ))) (or (HasTypeZ @x0py371 (Tm_arrow_d794a58e52e51e13e3b9afe660625c54 @x1py454 @x2py341)) (and (HasType (@x3!678 @x2py341 @x1py454 @x0py371) @x2py341) (not (HasType (ApplyTT @x0py371 (@x3!678 @x2py341 @x1py454 @x0py371)) (FStar.Pervasives.ex_wp @x1py454)))))) :pattern ((HasTypeZ @x0py371 (Tm_arrow_d794a58e52e51e13e3b9afe660625c54 @x1py454 @x2py341))) )) :named FStar.Pervasives_interpretation_Tm_arrow_d794a58e52e51e13e3b9afe660625c54))
(assert (! (forall ((@x0py372 Term)(@x1py455 Term)) (! (and (or (not (HasTypeZ @x0py372 (Tm_arrow_db526519745d691ef343e32a1084673b @x1py455))) (forall ((@x2py342 Term)(@x3py264 Term)(@x4py197 Term)(@x5py158 Term)(@x6py112 Term)) (! (or (HasType (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT @x0py372 @x2py342) @x3py264) @x4py197) @x5py158) @x6py112) @x1py455) (not (HasType @x2py342 Tm_type)) (not (HasType @x3py264 Tm_type)) (not (HasType @x4py197 (FStar.Pervasives.all_wp_h @x2py342 @x3py264))) (not (HasType @x5py158 (FStar.Pervasives.all_post_h @x2py342 @x3py264))) (not (HasType @x6py112 @x2py342))) :pattern ((ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT @x0py372 @x2py342) @x3py264) @x4py197) @x5py158) @x6py112)) ))) (or (HasTypeZ @x0py372 (Tm_arrow_db526519745d691ef343e32a1084673b @x1py455)) (and (HasType (@x2!683 @x1py455 @x0py372) Tm_type) (HasType (@x3!682 @x1py455 @x0py372) Tm_type) (HasType (@x4!681 @x1py455 @x0py372) (FStar.Pervasives.all_wp_h (@x2!683 @x1py455 @x0py372) (@x3!682 @x1py455 @x0py372))) (HasType (@x5!680 @x1py455 @x0py372) (FStar.Pervasives.all_post_h (@x2!683 @x1py455 @x0py372) (@x3!682 @x1py455 @x0py372))) (HasType (@x6!679 @x1py455 @x0py372) (@x2!683 @x1py455 @x0py372)) (not (HasType (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT @x0py372 (@x2!683 @x1py455 @x0py372)) (@x3!682 @x1py455 @x0py372)) (@x4!681 @x1py455 @x0py372)) (@x5!680 @x1py455 @x0py372)) (@x6!679 @x1py455 @x0py372)) @x1py455))))) :pattern ((HasTypeZ @x0py372 (Tm_arrow_db526519745d691ef343e32a1084673b @x1py455))) )) :named FStar.Pervasives_interpretation_Tm_arrow_db526519745d691ef343e32a1084673b))
(assert (! (forall ((@x0py373 Term)(@x1py456 Term)(@x2py343 Term)(@x3py265 Term)) (! (and (or (not (HasTypeZ @x0py373 (Tm_arrow_dbf39bf049d72c3088e1ed84d246952d @x1py456 @x2py343 @x3py265))) (forall ((@x4py198 Term)(@x5py159 Term)(@x6py113 Term)) (! (or (not (HasType @x4py198 @x3py265)) (not (HasType @x5py159 (ApplyTT @x2py343 @x4py198))) (not (HasType @x6py113 (ApplyTT (ApplyTT @x1py456 @x4py198) @x5py159))) (HasType (ApplyTT (ApplyTT (ApplyTT @x0py373 @x4py198) @x5py159) @x6py113) Tm_type)) :pattern ((ApplyTT (ApplyTT (ApplyTT @x0py373 @x4py198) @x5py159) @x6py113)) ))) (or (HasTypeZ @x0py373 (Tm_arrow_dbf39bf049d72c3088e1ed84d246952d @x1py456 @x2py343 @x3py265)) (and (HasType (@x4!686 @x3py265 @x2py343 @x1py456 @x0py373) @x3py265) (HasType (@x5!685 @x3py265 @x2py343 @x1py456 @x0py373) (ApplyTT @x2py343 (@x4!686 @x3py265 @x2py343 @x1py456 @x0py373))) (HasType (@x6!684 @x3py265 @x2py343 @x1py456 @x0py373) (ApplyTT (ApplyTT @x1py456 (@x4!686 @x3py265 @x2py343 @x1py456 @x0py373)) (@x5!685 @x3py265 @x2py343 @x1py456 @x0py373))) (not (HasType (ApplyTT (ApplyTT (ApplyTT @x0py373 (@x4!686 @x3py265 @x2py343 @x1py456 @x0py373)) (@x5!685 @x3py265 @x2py343 @x1py456 @x0py373)) (@x6!684 @x3py265 @x2py343 @x1py456 @x0py373)) Tm_type))))) :pattern ((HasTypeZ @x0py373 (Tm_arrow_dbf39bf049d72c3088e1ed84d246952d @x1py456 @x2py343 @x3py265))) )) :named FStar.Pervasives_interpretation_Tm_arrow_dbf39bf049d72c3088e1ed84d246952d))
(assert (! (forall ((@x0py374 Term)(@x1py457 Term)) (! (and (or (not (HasTypeZ @x0py374 (Tm_arrow_dd2de7e516014096b8b41947307b7781 @x1py457))) (forall ((@x2py344 Term)(@x3py266 Term)(@x4py199 Term)(@x5py160 Term)(@x6py114 Term)(@x7py83 Term)) (! (or (not (HasType @x4py199 Tm_type)) (not (HasType @x5py160 (FStar.Pervasives.ex_wp @x3py266))) (HasType (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT @x0py374 @x2py344) @x3py266) @x4py199) @x5py160) @x6py114) @x7py83) Tm_type) (not (HasType @x7py83 (FStar.Pervasives.ex_post @x4py199))) (not (HasType @x6py114 (Tm_arrow_d794a58e52e51e13e3b9afe660625c54 @x4py199 @x3py266))) (not (HasType @x2py344 @x1py457)) (not (HasType @x3py266 Tm_type))) :pattern ((ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT @x0py374 @x2py344) @x3py266) @x4py199) @x5py160) @x6py114) @x7py83)) ))) (or (HasTypeZ @x0py374 (Tm_arrow_dd2de7e516014096b8b41947307b7781 @x1py457)) (and (HasType (@x2!692 @x1py457 @x0py374) @x1py457) (HasType (@x3!691 @x1py457 @x0py374) Tm_type) (HasType (@x4!690 @x1py457 @x0py374) Tm_type) (HasType (@x5!689 @x1py457 @x0py374) (FStar.Pervasives.ex_wp (@x3!691 @x1py457 @x0py374))) (HasType (@x6!688 @x1py457 @x0py374) (Tm_arrow_d794a58e52e51e13e3b9afe660625c54 (@x4!690 @x1py457 @x0py374) (@x3!691 @x1py457 @x0py374))) (HasType (@x7!687 @x1py457 @x0py374) (FStar.Pervasives.ex_post (@x4!690 @x1py457 @x0py374))) (not (HasType (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT @x0py374 (@x2!692 @x1py457 @x0py374)) (@x3!691 @x1py457 @x0py374)) (@x4!690 @x1py457 @x0py374)) (@x5!689 @x1py457 @x0py374)) (@x6!688 @x1py457 @x0py374)) (@x7!687 @x1py457 @x0py374)) Tm_type))))) :pattern ((HasTypeZ @x0py374 (Tm_arrow_dd2de7e516014096b8b41947307b7781 @x1py457))) )) :named FStar.Pervasives_interpretation_Tm_arrow_dd2de7e516014096b8b41947307b7781))
(assert (! (forall ((@x0py375 Term)(@x1py458 Term)) (! (and (or (not (HasTypeZ @x0py375 (Tm_arrow_e62fd03c6d75c90fe0c21b54135b4ded @x1py458))) (forall ((@x2py345 Term)(@x3py267 Term)) (! (or (not (HasType @x2py345 Tm_type)) (not (HasType @x3py267 (FStar.Pervasives.result @x2py345))) (HasType (ApplyTT (ApplyTT @x0py375 @x2py345) @x3py267) @x1py458)) :pattern ((ApplyTT (ApplyTT @x0py375 @x2py345) @x3py267)) ))) (or (HasTypeZ @x0py375 (Tm_arrow_e62fd03c6d75c90fe0c21b54135b4ded @x1py458)) (and (HasType (@x2!694 @x1py458 @x0py375) Tm_type) (HasType (@x3!693 @x1py458 @x0py375) (FStar.Pervasives.result (@x2!694 @x1py458 @x0py375))) (not (HasType (ApplyTT (ApplyTT @x0py375 (@x2!694 @x1py458 @x0py375)) (@x3!693 @x1py458 @x0py375)) @x1py458))))) :pattern ((HasTypeZ @x0py375 (Tm_arrow_e62fd03c6d75c90fe0c21b54135b4ded @x1py458))) )) :named FStar.Pervasives_interpretation_Tm_arrow_e62fd03c6d75c90fe0c21b54135b4ded))
(assert (! (forall ((@x0py376 Term)) (! (and (or (not (HasTypeZ @x0py376 Tm_arrow_e797b13f3527682c5e8e530b8c8c696d)) (forall ((@x1py459 Term)(@x2py346 Term)) (! (or (HasType (ApplyTT (ApplyTT @x0py376 @x1py459) @x2py346) (FStar.Pervasives.result @x1py459)) (not (HasType @x1py459 Tm_type)) (not (HasType @x2py346 @x1py459))) :pattern ((ApplyTT (ApplyTT @x0py376 @x1py459) @x2py346)) ))) (or (HasTypeZ @x0py376 Tm_arrow_e797b13f3527682c5e8e530b8c8c696d) (and (HasType (@x1!696 @x0py376) Tm_type) (HasType (@x2!695 @x0py376) (@x1!696 @x0py376)) (not (HasType (ApplyTT (ApplyTT @x0py376 (@x1!696 @x0py376)) (@x2!695 @x0py376)) (FStar.Pervasives.result (@x1!696 @x0py376))))))) :pattern ((HasTypeZ @x0py376 Tm_arrow_e797b13f3527682c5e8e530b8c8c696d)) )) :named FStar.Pervasives_interpretation_Tm_arrow_e797b13f3527682c5e8e530b8c8c696d))
(assert (! (forall ((@x0py377 Term)(@x1py460 Term)) (! (and (or (not (HasTypeZ @x0py377 (Tm_arrow_eff36c64f2c347faf7149c68721d618a @x1py460))) (forall ((@x2py347 Term)(@x3py268 Term)(@x4py200 Term)(@x5py161 Term)) (! (or (HasType (ApplyTT (ApplyTT (ApplyTT (ApplyTT @x0py377 @x2py347) @x3py268) @x4py200) @x5py161) @x1py460) (not (HasType @x2py347 Tm_type)) (not (HasType @x3py268 Tm_type)) (not (HasType @x5py161 (FStar.Pervasives.ex_post @x2py347))) (not (HasType @x4py200 (Tm_arrow_d794a58e52e51e13e3b9afe660625c54 @x2py347 @x3py268)))) :pattern ((ApplyTT (ApplyTT (ApplyTT (ApplyTT @x0py377 @x2py347) @x3py268) @x4py200) @x5py161)) ))) (or (HasTypeZ @x0py377 (Tm_arrow_eff36c64f2c347faf7149c68721d618a @x1py460)) (and (HasType (@x2!700 @x1py460 @x0py377) Tm_type) (HasType (@x3!699 @x1py460 @x0py377) Tm_type) (HasType (@x4!698 @x1py460 @x0py377) (Tm_arrow_d794a58e52e51e13e3b9afe660625c54 (@x2!700 @x1py460 @x0py377) (@x3!699 @x1py460 @x0py377))) (HasType (@x5!697 @x1py460 @x0py377) (FStar.Pervasives.ex_post (@x2!700 @x1py460 @x0py377))) (not (HasType (ApplyTT (ApplyTT (ApplyTT (ApplyTT @x0py377 (@x2!700 @x1py460 @x0py377)) (@x3!699 @x1py460 @x0py377)) (@x4!698 @x1py460 @x0py377)) (@x5!697 @x1py460 @x0py377)) @x1py460))))) :pattern ((HasTypeZ @x0py377 (Tm_arrow_eff36c64f2c347faf7149c68721d618a @x1py460))) )) :named FStar.Pervasives_interpretation_Tm_arrow_eff36c64f2c347faf7149c68721d618a))
(assert (! (forall ((@x0py378 Term)) (! (and (or (not (HasTypeZ @x0py378 Tm_arrow_f17dd97b1f287869d6a3add69232601b)) (forall ((@x1py461 Term)(@x2py348 Term)(@x3py269 Term)(@x4py201 Term)(@x5py162 Term)) (! (or (HasType (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT @x0py378 @x1py461) @x2py348) @x3py269) @x4py201) @x5py162) (ApplyTT (ApplyTT (ApplyTT @x4py201 (FStar.Pervasives.__proj__Mkdtuple4__item___1 @x1py461 @x2py348 @x3py269 @x4py201 @x5py162)) (FStar.Pervasives.__proj__Mkdtuple4__item___2 @x1py461 @x2py348 @x3py269 @x4py201 @x5py162)) (FStar.Pervasives.__proj__Mkdtuple4__item___3 @x1py461 @x2py348 @x3py269 @x4py201 @x5py162))) (not (HasType @x4py201 (Tm_arrow_dbf39bf049d72c3088e1ed84d246952d @x3py269 @x2py348 @x1py461))) (not (HasType @x5py162 (FStar.Pervasives.dtuple4 @x1py461 @x2py348 @x3py269 @x4py201))) (not (HasType @x1py461 Tm_type)) (not (HasType @x2py348 (Tm_arrow_e06752ba152f81447b312efcdf8f0e23 @x1py461))) (not (HasType @x3py269 (Tm_arrow_614c7b5886a6e5b119a37c35c7e4bd59 @x2py348 @x1py461)))) :pattern ((ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT @x0py378 @x1py461) @x2py348) @x3py269) @x4py201) @x5py162)) ))) (or (HasTypeZ @x0py378 Tm_arrow_f17dd97b1f287869d6a3add69232601b) (and (HasType (@x1!705 @x0py378) Tm_type) (HasType (@x2!704 @x0py378) (Tm_arrow_e06752ba152f81447b312efcdf8f0e23 (@x1!705 @x0py378))) (HasType (@x3!703 @x0py378) (Tm_arrow_614c7b5886a6e5b119a37c35c7e4bd59 (@x2!704 @x0py378) (@x1!705 @x0py378))) (HasType (@x4!702 @x0py378) (Tm_arrow_dbf39bf049d72c3088e1ed84d246952d (@x3!703 @x0py378) (@x2!704 @x0py378) (@x1!705 @x0py378))) (HasType (@x5!701 @x0py378) (FStar.Pervasives.dtuple4 (@x1!705 @x0py378) (@x2!704 @x0py378) (@x3!703 @x0py378) (@x4!702 @x0py378))) (not (HasType (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT @x0py378 (@x1!705 @x0py378)) (@x2!704 @x0py378)) (@x3!703 @x0py378)) (@x4!702 @x0py378)) (@x5!701 @x0py378)) (ApplyTT (ApplyTT (ApplyTT (@x4!702 @x0py378) (FStar.Pervasives.__proj__Mkdtuple4__item___1 (@x1!705 @x0py378) (@x2!704 @x0py378) (@x3!703 @x0py378) (@x4!702 @x0py378) (@x5!701 @x0py378))) (FStar.Pervasives.__proj__Mkdtuple4__item___2 (@x1!705 @x0py378) (@x2!704 @x0py378) (@x3!703 @x0py378) (@x4!702 @x0py378) (@x5!701 @x0py378))) (FStar.Pervasives.__proj__Mkdtuple4__item___3 (@x1!705 @x0py378) (@x2!704 @x0py378) (@x3!703 @x0py378) (@x4!702 @x0py378) (@x5!701 @x0py378)))))))) :pattern ((HasTypeZ @x0py378 Tm_arrow_f17dd97b1f287869d6a3add69232601b)) )) :named FStar.Pervasives_interpretation_Tm_arrow_f17dd97b1f287869d6a3add69232601b))
(assert (! (forall ((@x0py379 Term)(@x1py462 Term)) (! (and (or (not (HasTypeZ @x0py379 (Tm_arrow_f2144e812b1bb22d3fc2a233dbf4e7ad @x1py462))) (forall ((@x2py349 Term)(@x3py270 Term)(@x4py202 Term)(@x5py163 Term)(@x6py115 Term)(@x7py84 Term)(@x8py56 Term)) (! (or (HasType (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT @x0py379 @x2py349) @x3py270) @x4py202) @x5py163) @x6py115) @x7py84) @x8py56) @x1py462) (not (HasType @x3py270 Tm_type)) (not (HasType @x4py202 Tm_type)) (not (HasType @x7py84 (FStar.Pervasives.all_post_h @x2py349 @x3py270))) (not (HasType @x8py56 @x2py349)) (not (HasType @x5py163 (FStar.Pervasives.all_wp_h @x2py349 @x3py270))) (not (HasType @x2py349 Tm_type)) (not (HasType @x6py115 (FStar.Pervasives.all_wp_h @x2py349 @x3py270)))) :pattern ((ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT @x0py379 @x2py349) @x3py270) @x4py202) @x5py163) @x6py115) @x7py84) @x8py56)) ))) (or (HasTypeZ @x0py379 (Tm_arrow_f2144e812b1bb22d3fc2a233dbf4e7ad @x1py462)) (and (HasType (@x2!712 @x1py462 @x0py379) Tm_type) (HasType (@x3!711 @x1py462 @x0py379) Tm_type) (HasType (@x4!710 @x1py462 @x0py379) Tm_type) (HasType (@x5!709 @x1py462 @x0py379) (FStar.Pervasives.all_wp_h (@x2!712 @x1py462 @x0py379) (@x3!711 @x1py462 @x0py379))) (HasType (@x6!708 @x1py462 @x0py379) (FStar.Pervasives.all_wp_h (@x2!712 @x1py462 @x0py379) (@x3!711 @x1py462 @x0py379))) (HasType (@x7!707 @x1py462 @x0py379) (FStar.Pervasives.all_post_h (@x2!712 @x1py462 @x0py379) (@x3!711 @x1py462 @x0py379))) (HasType (@x8!706 @x1py462 @x0py379) (@x2!712 @x1py462 @x0py379)) (not (HasType (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT @x0py379 (@x2!712 @x1py462 @x0py379)) (@x3!711 @x1py462 @x0py379)) (@x4!710 @x1py462 @x0py379)) (@x5!709 @x1py462 @x0py379)) (@x6!708 @x1py462 @x0py379)) (@x7!707 @x1py462 @x0py379)) (@x8!706 @x1py462 @x0py379)) @x1py462))))) :pattern ((HasTypeZ @x0py379 (Tm_arrow_f2144e812b1bb22d3fc2a233dbf4e7ad @x1py462))) )) :named FStar.Pervasives_interpretation_Tm_arrow_f2144e812b1bb22d3fc2a233dbf4e7ad))
(assert (! (forall ((@u0py156 Fuel)(@x1py463 Term)) (! (or (is-Tm_arrow (PreType @x1py463)) (not (HasTypeFuel @u0py156 @x1py463 Tm_arrow_1dac41f442c1cc7b5405768e36ae98f9))) :pattern ((HasTypeFuel @u0py156 @x1py463 Tm_arrow_1dac41f442c1cc7b5405768e36ae98f9)) )) :named FStar.Pervasives_pre_typing_Tm_arrow_1dac41f442c1cc7b5405768e36ae98f9))
(assert (! (forall ((@u0py157 Fuel)(@x1py464 Term)(@x2py350 Term)) (! (or (is-Tm_arrow (PreType @x1py464)) (not (HasTypeFuel @u0py157 @x1py464 (Tm_arrow_1dca680c8d3cb58c552551782d77cbad @x2py350)))) :pattern ((HasTypeFuel @u0py157 @x1py464 (Tm_arrow_1dca680c8d3cb58c552551782d77cbad @x2py350))) )) :named FStar.Pervasives_pre_typing_Tm_arrow_1dca680c8d3cb58c552551782d77cbad))
(assert (! (forall ((@u0py158 Fuel)(@x1py465 Term)(@x2py351 Term)) (! (or (is-Tm_arrow (PreType @x1py465)) (not (HasTypeFuel @u0py158 @x1py465 (Tm_arrow_1e34c94069c60657ba290f517d081e8f @x2py351)))) :pattern ((HasTypeFuel @u0py158 @x1py465 (Tm_arrow_1e34c94069c60657ba290f517d081e8f @x2py351))) )) :named FStar.Pervasives_pre_typing_Tm_arrow_1e34c94069c60657ba290f517d081e8f))
(assert (! (forall ((@u0py159 Fuel)(@x1py466 Term)(@x2py352 Term)) (! (or (is-Tm_arrow (PreType @x1py466)) (not (HasTypeFuel @u0py159 @x1py466 (Tm_arrow_1eae0eaa54a90d4d45405fc37f59299f @x2py352)))) :pattern ((HasTypeFuel @u0py159 @x1py466 (Tm_arrow_1eae0eaa54a90d4d45405fc37f59299f @x2py352))) )) :named FStar.Pervasives_pre_typing_Tm_arrow_1eae0eaa54a90d4d45405fc37f59299f))
(assert (! (forall ((@u0py160 Fuel)(@x1py467 Term)) (! (or (is-Tm_arrow (PreType @x1py467)) (not (HasTypeFuel @u0py160 @x1py467 Tm_arrow_2b9e6d83dc78155badfb9f85c9c4c887))) :pattern ((HasTypeFuel @u0py160 @x1py467 Tm_arrow_2b9e6d83dc78155badfb9f85c9c4c887)) )) :named FStar.Pervasives_pre_typing_Tm_arrow_2b9e6d83dc78155badfb9f85c9c4c887))
(assert (! (forall ((@u0py161 Fuel)(@x1py468 Term)(@x2py353 Term)) (! (or (is-Tm_arrow (PreType @x1py468)) (not (HasTypeFuel @u0py161 @x1py468 (Tm_arrow_2c5c4d02fbece15e63160b3c87c78b01 @x2py353)))) :pattern ((HasTypeFuel @u0py161 @x1py468 (Tm_arrow_2c5c4d02fbece15e63160b3c87c78b01 @x2py353))) )) :named FStar.Pervasives_pre_typing_Tm_arrow_2c5c4d02fbece15e63160b3c87c78b01))
(assert (! (forall ((@u0py162 Fuel)(@x1py469 Term)(@x2py354 Term)) (! (or (is-Tm_arrow (PreType @x1py469)) (not (HasTypeFuel @u0py162 @x1py469 (Tm_arrow_2e05015ec978795a21c10130eebfeae9 @x2py354)))) :pattern ((HasTypeFuel @u0py162 @x1py469 (Tm_arrow_2e05015ec978795a21c10130eebfeae9 @x2py354))) )) :named FStar.Pervasives_pre_typing_Tm_arrow_2e05015ec978795a21c10130eebfeae9))
(assert (! (forall ((@u0py163 Fuel)(@x1py470 Term)(@x2py355 Term)(@x3py271 Term)) (! (or (is-Tm_arrow (PreType @x1py470)) (not (HasTypeFuel @u0py163 @x1py470 (Tm_arrow_4c49ce37319be38829a6032b2247a659 @x2py355 @x3py271)))) :pattern ((HasTypeFuel @u0py163 @x1py470 (Tm_arrow_4c49ce37319be38829a6032b2247a659 @x2py355 @x3py271))) )) :named FStar.Pervasives_pre_typing_Tm_arrow_4c49ce37319be38829a6032b2247a659))
(assert (! (forall ((@u0py164 Fuel)(@x1py471 Term)(@x2py356 Term)) (! (or (is-Tm_arrow (PreType @x1py471)) (not (HasTypeFuel @u0py164 @x1py471 (Tm_arrow_4e8df289938ae02937cd1c94aba2cf20 @x2py356)))) :pattern ((HasTypeFuel @u0py164 @x1py471 (Tm_arrow_4e8df289938ae02937cd1c94aba2cf20 @x2py356))) )) :named FStar.Pervasives_pre_typing_Tm_arrow_4e8df289938ae02937cd1c94aba2cf20))
(assert (! (forall ((@u0py165 Fuel)(@x1py472 Term)) (! (or (is-Tm_arrow (PreType @x1py472)) (not (HasTypeFuel @u0py165 @x1py472 Tm_arrow_4eb2e0118149efb6019111cf994e0f6b))) :pattern ((HasTypeFuel @u0py165 @x1py472 Tm_arrow_4eb2e0118149efb6019111cf994e0f6b)) )) :named FStar.Pervasives_pre_typing_Tm_arrow_4eb2e0118149efb6019111cf994e0f6b))
(assert (! (forall ((@u0py166 Fuel)(@x1py473 Term)(@x2py357 Term)) (! (or (is-Tm_arrow (PreType @x1py473)) (not (HasTypeFuel @u0py166 @x1py473 (Tm_arrow_5caeced02ae19cd28fdaa3e41ea7d339 @x2py357)))) :pattern ((HasTypeFuel @u0py166 @x1py473 (Tm_arrow_5caeced02ae19cd28fdaa3e41ea7d339 @x2py357))) )) :named FStar.Pervasives_pre_typing_Tm_arrow_5caeced02ae19cd28fdaa3e41ea7d339))
(assert (! (forall ((@u0py167 Fuel)(@x1py474 Term)(@x2py358 Term)(@x3py272 Term)(@x4py203 Term)) (! (or (is-Tm_arrow (PreType @x1py474)) (not (HasTypeFuel @u0py167 @x1py474 (Tm_arrow_5db9487ea079f4bbc6de2da583d038f7 @x2py358 @x3py272 @x4py203)))) :pattern ((HasTypeFuel @u0py167 @x1py474 (Tm_arrow_5db9487ea079f4bbc6de2da583d038f7 @x2py358 @x3py272 @x4py203))) )) :named FStar.Pervasives_pre_typing_Tm_arrow_5db9487ea079f4bbc6de2da583d038f7))
(assert (! (forall ((@u0py168 Fuel)(@x1py475 Term)(@x2py359 Term)) (! (or (is-Tm_arrow (PreType @x1py475)) (not (HasTypeFuel @u0py168 @x1py475 (Tm_arrow_5f168af91094f21c4a68cd41bed2b946 @x2py359)))) :pattern ((HasTypeFuel @u0py168 @x1py475 (Tm_arrow_5f168af91094f21c4a68cd41bed2b946 @x2py359))) )) :named FStar.Pervasives_pre_typing_Tm_arrow_5f168af91094f21c4a68cd41bed2b946))
(assert (! (forall ((@u0py169 Fuel)(@x1py476 Term)(@x2py360 Term)) (! (or (is-Tm_arrow (PreType @x1py476)) (not (HasTypeFuel @u0py169 @x1py476 (Tm_arrow_08bfe555982713e1ba6b9cc3db1f9942 @x2py360)))) :pattern ((HasTypeFuel @u0py169 @x1py476 (Tm_arrow_08bfe555982713e1ba6b9cc3db1f9942 @x2py360))) )) :named FStar.Pervasives_pre_typing_Tm_arrow_08bfe555982713e1ba6b9cc3db1f9942))
(assert (! (forall ((@u0py170 Fuel)(@x1py477 Term)(@x2py361 Term)) (! (or (is-Tm_arrow (PreType @x1py477)) (not (HasTypeFuel @u0py170 @x1py477 (Tm_arrow_9d7b0e2d115bb41f98da64d5384f7531 @x2py361)))) :pattern ((HasTypeFuel @u0py170 @x1py477 (Tm_arrow_9d7b0e2d115bb41f98da64d5384f7531 @x2py361))) )) :named FStar.Pervasives_pre_typing_Tm_arrow_9d7b0e2d115bb41f98da64d5384f7531))
(assert (! (forall ((@u0py171 Fuel)(@x1py478 Term)) (! (or (is-Tm_arrow (PreType @x1py478)) (not (HasTypeFuel @u0py171 @x1py478 Tm_arrow_13dd269756cb773b57b515955a3c167c))) :pattern ((HasTypeFuel @u0py171 @x1py478 Tm_arrow_13dd269756cb773b57b515955a3c167c)) )) :named FStar.Pervasives_pre_typing_Tm_arrow_13dd269756cb773b57b515955a3c167c))
(assert (! (forall ((@u0py172 Fuel)(@x1py479 Term)(@x2py362 Term)) (! (or (is-Tm_arrow (PreType @x1py479)) (not (HasTypeFuel @u0py172 @x1py479 (Tm_arrow_17a09828089dfad9c34f612c63238178 @x2py362)))) :pattern ((HasTypeFuel @u0py172 @x1py479 (Tm_arrow_17a09828089dfad9c34f612c63238178 @x2py362))) )) :named FStar.Pervasives_pre_typing_Tm_arrow_17a09828089dfad9c34f612c63238178))
(assert (! (forall ((@u0py173 Fuel)(@x1py480 Term)(@x2py363 Term)(@x3py273 Term)(@x4py204 Term)) (! (or (is-Tm_arrow (PreType @x1py480)) (not (HasTypeFuel @u0py173 @x1py480 (Tm_arrow_24dbc58008173456430189ae3ecf9a5f @x2py363 @x3py273 @x4py204)))) :pattern ((HasTypeFuel @u0py173 @x1py480 (Tm_arrow_24dbc58008173456430189ae3ecf9a5f @x2py363 @x3py273 @x4py204))) )) :named FStar.Pervasives_pre_typing_Tm_arrow_24dbc58008173456430189ae3ecf9a5f))
(assert (! (forall ((@u0py174 Fuel)(@x1py481 Term)(@x2py364 Term)) (! (or (is-Tm_arrow (PreType @x1py481)) (not (HasTypeFuel @u0py174 @x1py481 (Tm_arrow_25c72f362ef3d8a23658a89597e3665d @x2py364)))) :pattern ((HasTypeFuel @u0py174 @x1py481 (Tm_arrow_25c72f362ef3d8a23658a89597e3665d @x2py364))) )) :named FStar.Pervasives_pre_typing_Tm_arrow_25c72f362ef3d8a23658a89597e3665d))
(assert (! (forall ((@u0py175 Fuel)(@x1py482 Term)(@x2py365 Term)) (! (or (is-Tm_arrow (PreType @x1py482)) (not (HasTypeFuel @u0py175 @x1py482 (Tm_arrow_28bfbd2790e868cd7c317313e9ee5c1a @x2py365)))) :pattern ((HasTypeFuel @u0py175 @x1py482 (Tm_arrow_28bfbd2790e868cd7c317313e9ee5c1a @x2py365))) )) :named FStar.Pervasives_pre_typing_Tm_arrow_28bfbd2790e868cd7c317313e9ee5c1a))
(assert (! (forall ((@u0py176 Fuel)(@x1py483 Term)) (! (or (is-Tm_arrow (PreType @x1py483)) (not (HasTypeFuel @u0py176 @x1py483 Tm_arrow_33c5389e8c042e819d87a774e0987a42))) :pattern ((HasTypeFuel @u0py176 @x1py483 Tm_arrow_33c5389e8c042e819d87a774e0987a42)) )) :named FStar.Pervasives_pre_typing_Tm_arrow_33c5389e8c042e819d87a774e0987a42))
(assert (! (forall ((@u0py177 Fuel)(@x1py484 Term)(@x2py366 Term)(@x3py274 Term)) (! (or (is-Tm_arrow (PreType @x1py484)) (not (HasTypeFuel @u0py177 @x1py484 (Tm_arrow_39ad8232ffc69b341ef9ad0212b74d41 @x2py366 @x3py274)))) :pattern ((HasTypeFuel @u0py177 @x1py484 (Tm_arrow_39ad8232ffc69b341ef9ad0212b74d41 @x2py366 @x3py274))) )) :named FStar.Pervasives_pre_typing_Tm_arrow_39ad8232ffc69b341ef9ad0212b74d41))
(assert (! (forall ((@u0py178 Fuel)(@x1py485 Term)(@x2py367 Term)) (! (or (is-Tm_arrow (PreType @x1py485)) (not (HasTypeFuel @u0py178 @x1py485 (Tm_arrow_49e61e769c9e3a0a679cbd25d6e21a53 @x2py367)))) :pattern ((HasTypeFuel @u0py178 @x1py485 (Tm_arrow_49e61e769c9e3a0a679cbd25d6e21a53 @x2py367))) )) :named FStar.Pervasives_pre_typing_Tm_arrow_49e61e769c9e3a0a679cbd25d6e21a53))
(assert (! (forall ((@u0py179 Fuel)(@x1py486 Term)(@x2py368 Term)) (! (or (is-Tm_arrow (PreType @x1py486)) (not (HasTypeFuel @u0py179 @x1py486 (Tm_arrow_50d480c53f6a4b67c098ecbee395c271 @x2py368)))) :pattern ((HasTypeFuel @u0py179 @x1py486 (Tm_arrow_50d480c53f6a4b67c098ecbee395c271 @x2py368))) )) :named FStar.Pervasives_pre_typing_Tm_arrow_50d480c53f6a4b67c098ecbee395c271))
(assert (! (forall ((@u0py180 Fuel)(@x1py487 Term)(@x2py369 Term)) (! (or (is-Tm_arrow (PreType @x1py487)) (not (HasTypeFuel @u0py180 @x1py487 (Tm_arrow_51b345975888169ae4f69613c826965e @x2py369)))) :pattern ((HasTypeFuel @u0py180 @x1py487 (Tm_arrow_51b345975888169ae4f69613c826965e @x2py369))) )) :named FStar.Pervasives_pre_typing_Tm_arrow_51b345975888169ae4f69613c826965e))
(assert (! (forall ((@u0py181 Fuel)(@x1py488 Term)) (! (or (is-Tm_arrow (PreType @x1py488)) (not (HasTypeFuel @u0py181 @x1py488 Tm_arrow_66a0d53ccf00bc028aa22d526865c801))) :pattern ((HasTypeFuel @u0py181 @x1py488 Tm_arrow_66a0d53ccf00bc028aa22d526865c801)) )) :named FStar.Pervasives_pre_typing_Tm_arrow_66a0d53ccf00bc028aa22d526865c801))
(assert (! (forall ((@u0py182 Fuel)(@x1py489 Term)(@x2py370 Term)) (! (or (is-Tm_arrow (PreType @x1py489)) (not (HasTypeFuel @u0py182 @x1py489 (Tm_arrow_82af1f1c7453b4c313f49c7e70e41650 @x2py370)))) :pattern ((HasTypeFuel @u0py182 @x1py489 (Tm_arrow_82af1f1c7453b4c313f49c7e70e41650 @x2py370))) )) :named FStar.Pervasives_pre_typing_Tm_arrow_82af1f1c7453b4c313f49c7e70e41650))
(assert (! (forall ((@u0py183 Fuel)(@x1py490 Term)(@x2py371 Term)(@x3py275 Term)) (! (or (is-Tm_arrow (PreType @x1py490)) (not (HasTypeFuel @u0py183 @x1py490 (Tm_arrow_87ef52d5a8e7306848436909b0c69460 @x2py371 @x3py275)))) :pattern ((HasTypeFuel @u0py183 @x1py490 (Tm_arrow_87ef52d5a8e7306848436909b0c69460 @x2py371 @x3py275))) )) :named FStar.Pervasives_pre_typing_Tm_arrow_87ef52d5a8e7306848436909b0c69460))
(assert (! (forall ((@u0py184 Fuel)(@x1py491 Term)(@x2py372 Term)(@x3py276 Term)) (! (or (is-Tm_arrow (PreType @x1py491)) (not (HasTypeFuel @u0py184 @x1py491 (Tm_arrow_95c0b403ba19b1a7c1f8c73440744c07 @x2py372 @x3py276)))) :pattern ((HasTypeFuel @u0py184 @x1py491 (Tm_arrow_95c0b403ba19b1a7c1f8c73440744c07 @x2py372 @x3py276))) )) :named FStar.Pervasives_pre_typing_Tm_arrow_95c0b403ba19b1a7c1f8c73440744c07))
(assert (! (forall ((@u0py185 Fuel)(@x1py492 Term)) (! (or (is-Tm_arrow (PreType @x1py492)) (not (HasTypeFuel @u0py185 @x1py492 Tm_arrow_370eef0be624c130308f9f3e7fdda8fb))) :pattern ((HasTypeFuel @u0py185 @x1py492 Tm_arrow_370eef0be624c130308f9f3e7fdda8fb)) )) :named FStar.Pervasives_pre_typing_Tm_arrow_370eef0be624c130308f9f3e7fdda8fb))
(assert (! (forall ((@u0py186 Fuel)(@x1py493 Term)(@x2py373 Term)) (! (or (is-Tm_arrow (PreType @x1py493)) (not (HasTypeFuel @u0py186 @x1py493 (Tm_arrow_414ca6c3d38bb3e0864e4a9d0cd19766 @x2py373)))) :pattern ((HasTypeFuel @u0py186 @x1py493 (Tm_arrow_414ca6c3d38bb3e0864e4a9d0cd19766 @x2py373))) )) :named FStar.Pervasives_pre_typing_Tm_arrow_414ca6c3d38bb3e0864e4a9d0cd19766))
(assert (! (forall ((@u0py187 Fuel)(@x1py494 Term)(@x2py374 Term)) (! (or (is-Tm_arrow (PreType @x1py494)) (not (HasTypeFuel @u0py187 @x1py494 (Tm_arrow_433e42e3116eeb237f1030231a24382d @x2py374)))) :pattern ((HasTypeFuel @u0py187 @x1py494 (Tm_arrow_433e42e3116eeb237f1030231a24382d @x2py374))) )) :named FStar.Pervasives_pre_typing_Tm_arrow_433e42e3116eeb237f1030231a24382d))
(assert (! (forall ((@u0py188 Fuel)(@x1py495 Term)(@x2py375 Term)(@x3py277 Term)) (! (or (is-Tm_arrow (PreType @x1py495)) (not (HasTypeFuel @u0py188 @x1py495 (Tm_arrow_614c7b5886a6e5b119a37c35c7e4bd59 @x2py375 @x3py277)))) :pattern ((HasTypeFuel @u0py188 @x1py495 (Tm_arrow_614c7b5886a6e5b119a37c35c7e4bd59 @x2py375 @x3py277))) )) :named FStar.Pervasives_pre_typing_Tm_arrow_614c7b5886a6e5b119a37c35c7e4bd59))
(assert (! (forall ((@u0py189 Fuel)(@x1py496 Term)(@x2py376 Term)) (! (or (is-Tm_arrow (PreType @x1py496)) (not (HasTypeFuel @u0py189 @x1py496 (Tm_arrow_641a228fe9177bb850d1efb25c4ca0d9 @x2py376)))) :pattern ((HasTypeFuel @u0py189 @x1py496 (Tm_arrow_641a228fe9177bb850d1efb25c4ca0d9 @x2py376))) )) :named FStar.Pervasives_pre_typing_Tm_arrow_641a228fe9177bb850d1efb25c4ca0d9))
(assert (! (forall ((@u0py190 Fuel)(@x1py497 Term)(@x2py377 Term)) (! (or (is-Tm_arrow (PreType @x1py497)) (not (HasTypeFuel @u0py190 @x1py497 (Tm_arrow_739df426cfefbd9297407e8f408e091d @x2py377)))) :pattern ((HasTypeFuel @u0py190 @x1py497 (Tm_arrow_739df426cfefbd9297407e8f408e091d @x2py377))) )) :named FStar.Pervasives_pre_typing_Tm_arrow_739df426cfefbd9297407e8f408e091d))
(assert (! (forall ((@u0py191 Fuel)(@x1py498 Term)) (! (or (is-Tm_arrow (PreType @x1py498)) (not (HasTypeFuel @u0py191 @x1py498 Tm_arrow_894aed5f2f01f9fc4bb62bf7e2d70f35))) :pattern ((HasTypeFuel @u0py191 @x1py498 Tm_arrow_894aed5f2f01f9fc4bb62bf7e2d70f35)) )) :named FStar.Pervasives_pre_typing_Tm_arrow_894aed5f2f01f9fc4bb62bf7e2d70f35))
(assert (! (forall ((@u0py192 Fuel)(@x1py499 Term)(@x2py378 Term)) (! (or (is-Tm_arrow (PreType @x1py499)) (not (HasTypeFuel @u0py192 @x1py499 (Tm_arrow_5002e807b09214fd2f4ddb0ecd7cc6a9 @x2py378)))) :pattern ((HasTypeFuel @u0py192 @x1py499 (Tm_arrow_5002e807b09214fd2f4ddb0ecd7cc6a9 @x2py378))) )) :named FStar.Pervasives_pre_typing_Tm_arrow_5002e807b09214fd2f4ddb0ecd7cc6a9))
(assert (! (forall ((@u0py193 Fuel)(@x1py500 Term)(@x2py379 Term)) (! (or (is-Tm_arrow (PreType @x1py500)) (not (HasTypeFuel @u0py193 @x1py500 (Tm_arrow_5221ddbf8295a5d706d58e293ca3b4fe @x2py379)))) :pattern ((HasTypeFuel @u0py193 @x1py500 (Tm_arrow_5221ddbf8295a5d706d58e293ca3b4fe @x2py379))) )) :named FStar.Pervasives_pre_typing_Tm_arrow_5221ddbf8295a5d706d58e293ca3b4fe))
(assert (! (forall ((@u0py194 Fuel)(@x1py501 Term)(@x2py380 Term)(@x3py278 Term)(@x4py205 Term)) (! (or (is-Tm_arrow (PreType @x1py501)) (not (HasTypeFuel @u0py194 @x1py501 (Tm_arrow_12929d79484018a159cc54c10d62f794 @x2py380 @x3py278 @x4py205)))) :pattern ((HasTypeFuel @u0py194 @x1py501 (Tm_arrow_12929d79484018a159cc54c10d62f794 @x2py380 @x3py278 @x4py205))) )) :named FStar.Pervasives_pre_typing_Tm_arrow_12929d79484018a159cc54c10d62f794))
(assert (! (forall ((@u0py195 Fuel)(@x1py502 Term)) (! (or (is-Tm_arrow (PreType @x1py502)) (not (HasTypeFuel @u0py195 @x1py502 Tm_arrow_51228bc6fe187c605830950e4b63d461))) :pattern ((HasTypeFuel @u0py195 @x1py502 Tm_arrow_51228bc6fe187c605830950e4b63d461)) )) :named FStar.Pervasives_pre_typing_Tm_arrow_51228bc6fe187c605830950e4b63d461))
(assert (! (forall ((@u0py196 Fuel)(@x1py503 Term)(@x2py381 Term)) (! (or (is-Tm_arrow (PreType @x1py503)) (not (HasTypeFuel @u0py196 @x1py503 (Tm_arrow_53506eda6d12f67a8e4b3ea75d309e23 @x2py381)))) :pattern ((HasTypeFuel @u0py196 @x1py503 (Tm_arrow_53506eda6d12f67a8e4b3ea75d309e23 @x2py381))) )) :named FStar.Pervasives_pre_typing_Tm_arrow_53506eda6d12f67a8e4b3ea75d309e23))
(assert (! (forall ((@u0py197 Fuel)(@x1py504 Term)(@x2py382 Term)) (! (or (is-Tm_arrow (PreType @x1py504)) (not (HasTypeFuel @u0py197 @x1py504 (Tm_arrow_59435ca7efae8c5a13162daf50ca7594 @x2py382)))) :pattern ((HasTypeFuel @u0py197 @x1py504 (Tm_arrow_59435ca7efae8c5a13162daf50ca7594 @x2py382))) )) :named FStar.Pervasives_pre_typing_Tm_arrow_59435ca7efae8c5a13162daf50ca7594))
(assert (! (forall ((@u0py198 Fuel)(@x1py505 Term)(@x2py383 Term)) (! (or (is-Tm_arrow (PreType @x1py505)) (not (HasTypeFuel @u0py198 @x1py505 (Tm_arrow_059768e110c940ea8bff9492771ddcc8 @x2py383)))) :pattern ((HasTypeFuel @u0py198 @x1py505 (Tm_arrow_059768e110c940ea8bff9492771ddcc8 @x2py383))) )) :named FStar.Pervasives_pre_typing_Tm_arrow_059768e110c940ea8bff9492771ddcc8))
(assert (! (forall ((@u0py199 Fuel)(@x1py506 Term)(@x2py384 Term)) (! (or (is-Tm_arrow (PreType @x1py506)) (not (HasTypeFuel @u0py199 @x1py506 (Tm_arrow_63177eca1c58ba394d666028d123748d @x2py384)))) :pattern ((HasTypeFuel @u0py199 @x1py506 (Tm_arrow_63177eca1c58ba394d666028d123748d @x2py384))) )) :named FStar.Pervasives_pre_typing_Tm_arrow_63177eca1c58ba394d666028d123748d))
(assert (! (forall ((@u0py200 Fuel)(@x1py507 Term)(@x2py385 Term)) (! (or (is-Tm_arrow (PreType @x1py507)) (not (HasTypeFuel @u0py200 @x1py507 (Tm_arrow_425389aaf0306ac889308852f2d13f76 @x2py385)))) :pattern ((HasTypeFuel @u0py200 @x1py507 (Tm_arrow_425389aaf0306ac889308852f2d13f76 @x2py385))) )) :named FStar.Pervasives_pre_typing_Tm_arrow_425389aaf0306ac889308852f2d13f76))
(assert (! (forall ((@u0py201 Fuel)(@x1py508 Term)(@x2py386 Term)) (! (or (is-Tm_arrow (PreType @x1py508)) (not (HasTypeFuel @u0py201 @x1py508 (Tm_arrow_646607d9b79b27cb700948778ab8dc33 @x2py386)))) :pattern ((HasTypeFuel @u0py201 @x1py508 (Tm_arrow_646607d9b79b27cb700948778ab8dc33 @x2py386))) )) :named FStar.Pervasives_pre_typing_Tm_arrow_646607d9b79b27cb700948778ab8dc33))
(assert (! (forall ((@u0py202 Fuel)(@x1py509 Term)(@x2py387 Term)(@x3py279 Term)) (! (or (is-Tm_arrow (PreType @x1py509)) (not (HasTypeFuel @u0py202 @x1py509 (Tm_arrow_1114487a196323b3ca7d5d0b38969957 @x2py387 @x3py279)))) :pattern ((HasTypeFuel @u0py202 @x1py509 (Tm_arrow_1114487a196323b3ca7d5d0b38969957 @x2py387 @x3py279))) )) :named FStar.Pervasives_pre_typing_Tm_arrow_1114487a196323b3ca7d5d0b38969957))
(assert (! (forall ((@u0py203 Fuel)(@x1py510 Term)(@x2py388 Term)) (! (or (is-Tm_arrow (PreType @x1py510)) (not (HasTypeFuel @u0py203 @x1py510 (Tm_arrow_8024419d86cafa6a8f5a740b84a7c291 @x2py388)))) :pattern ((HasTypeFuel @u0py203 @x1py510 (Tm_arrow_8024419d86cafa6a8f5a740b84a7c291 @x2py388))) )) :named FStar.Pervasives_pre_typing_Tm_arrow_8024419d86cafa6a8f5a740b84a7c291))
(assert (! (forall ((@u0py204 Fuel)(@x1py511 Term)(@x2py389 Term)(@x3py280 Term)) (! (or (is-Tm_arrow (PreType @x1py511)) (not (HasTypeFuel @u0py204 @x1py511 (Tm_arrow_37267229c41a09d7df20584f1caf324f @x2py389 @x3py280)))) :pattern ((HasTypeFuel @u0py204 @x1py511 (Tm_arrow_37267229c41a09d7df20584f1caf324f @x2py389 @x3py280))) )) :named FStar.Pervasives_pre_typing_Tm_arrow_37267229c41a09d7df20584f1caf324f))
(assert (! (forall ((@u0py205 Fuel)(@x1py512 Term)) (! (or (is-Tm_arrow (PreType @x1py512)) (not (HasTypeFuel @u0py205 @x1py512 Tm_arrow_627359304a35057805507fd05f62a750))) :pattern ((HasTypeFuel @u0py205 @x1py512 Tm_arrow_627359304a35057805507fd05f62a750)) )) :named FStar.Pervasives_pre_typing_Tm_arrow_627359304a35057805507fd05f62a750))
(assert (! (forall ((@u0py206 Fuel)(@x1py513 Term)) (! (or (is-Tm_arrow (PreType @x1py513)) (not (HasTypeFuel @u0py206 @x1py513 Tm_arrow_a1a8754ef05983b108c166cca1c4e63a))) :pattern ((HasTypeFuel @u0py206 @x1py513 Tm_arrow_a1a8754ef05983b108c166cca1c4e63a)) )) :named FStar.Pervasives_pre_typing_Tm_arrow_a1a8754ef05983b108c166cca1c4e63a))
(assert (! (forall ((@u0py207 Fuel)(@x1py514 Term)(@x2py390 Term)) (! (or (is-Tm_arrow (PreType @x1py514)) (not (HasTypeFuel @u0py207 @x1py514 (Tm_arrow_a3b523cfd66a616c0e641efdb75e9e3e @x2py390)))) :pattern ((HasTypeFuel @u0py207 @x1py514 (Tm_arrow_a3b523cfd66a616c0e641efdb75e9e3e @x2py390))) )) :named FStar.Pervasives_pre_typing_Tm_arrow_a3b523cfd66a616c0e641efdb75e9e3e))
(assert (! (forall ((@u0py208 Fuel)(@x1py515 Term)(@x2py391 Term)) (! (or (is-Tm_arrow (PreType @x1py515)) (not (HasTypeFuel @u0py208 @x1py515 (Tm_arrow_a7b615889edcbdfadf24ad49f4c2628e @x2py391)))) :pattern ((HasTypeFuel @u0py208 @x1py515 (Tm_arrow_a7b615889edcbdfadf24ad49f4c2628e @x2py391))) )) :named FStar.Pervasives_pre_typing_Tm_arrow_a7b615889edcbdfadf24ad49f4c2628e))
(assert (! (forall ((@u0py209 Fuel)(@x1py516 Term)(@x2py392 Term)) (! (or (is-Tm_arrow (PreType @x1py516)) (not (HasTypeFuel @u0py209 @x1py516 (Tm_arrow_a8bd5744f1e631257a4264db50bf5a7c @x2py392)))) :pattern ((HasTypeFuel @u0py209 @x1py516 (Tm_arrow_a8bd5744f1e631257a4264db50bf5a7c @x2py392))) )) :named FStar.Pervasives_pre_typing_Tm_arrow_a8bd5744f1e631257a4264db50bf5a7c))
(assert (! (forall ((@u0py210 Fuel)(@x1py517 Term)(@x2py393 Term)) (! (or (is-Tm_arrow (PreType @x1py517)) (not (HasTypeFuel @u0py210 @x1py517 (Tm_arrow_aa928d5fea25781a172e9e551de2bee3 @x2py393)))) :pattern ((HasTypeFuel @u0py210 @x1py517 (Tm_arrow_aa928d5fea25781a172e9e551de2bee3 @x2py393))) )) :named FStar.Pervasives_pre_typing_Tm_arrow_aa928d5fea25781a172e9e551de2bee3))
(assert (! (forall ((@u0py211 Fuel)(@x1py518 Term)(@x2py394 Term)) (! (or (is-Tm_arrow (PreType @x1py518)) (not (HasTypeFuel @u0py211 @x1py518 (Tm_arrow_ad2a5a45548b5666753ded1bcb23ab10 @x2py394)))) :pattern ((HasTypeFuel @u0py211 @x1py518 (Tm_arrow_ad2a5a45548b5666753ded1bcb23ab10 @x2py394))) )) :named FStar.Pervasives_pre_typing_Tm_arrow_ad2a5a45548b5666753ded1bcb23ab10))
(assert (! (forall ((@u0py212 Fuel)(@x1py519 Term)) (! (or (is-Tm_arrow (PreType @x1py519)) (not (HasTypeFuel @u0py212 @x1py519 Tm_arrow_bc432a638e8ded95e6543c5ef7d6cefa))) :pattern ((HasTypeFuel @u0py212 @x1py519 Tm_arrow_bc432a638e8ded95e6543c5ef7d6cefa)) )) :named FStar.Pervasives_pre_typing_Tm_arrow_bc432a638e8ded95e6543c5ef7d6cefa))
(assert (! (forall ((@u0py213 Fuel)(@x1py520 Term)) (! (or (is-Tm_arrow (PreType @x1py520)) (not (HasTypeFuel @u0py213 @x1py520 Tm_arrow_bec8a4f6afbb1e18e2d9aca8cce42b29))) :pattern ((HasTypeFuel @u0py213 @x1py520 Tm_arrow_bec8a4f6afbb1e18e2d9aca8cce42b29)) )) :named FStar.Pervasives_pre_typing_Tm_arrow_bec8a4f6afbb1e18e2d9aca8cce42b29))
(assert (! (forall ((@u0py214 Fuel)(@x1py521 Term)) (! (or (is-Tm_arrow (PreType @x1py521)) (not (HasTypeFuel @u0py214 @x1py521 Tm_arrow_bf84b86e4714dba88d5fa227c56fabbb))) :pattern ((HasTypeFuel @u0py214 @x1py521 Tm_arrow_bf84b86e4714dba88d5fa227c56fabbb)) )) :named FStar.Pervasives_pre_typing_Tm_arrow_bf84b86e4714dba88d5fa227c56fabbb))
(assert (! (forall ((@u0py215 Fuel)(@x1py522 Term)) (! (or (is-Tm_arrow (PreType @x1py522)) (not (HasTypeFuel @u0py215 @x1py522 Tm_arrow_c3d46b8ae03d5e5761b37a519c1896ea))) :pattern ((HasTypeFuel @u0py215 @x1py522 Tm_arrow_c3d46b8ae03d5e5761b37a519c1896ea)) )) :named FStar.Pervasives_pre_typing_Tm_arrow_c3d46b8ae03d5e5761b37a519c1896ea))
(assert (! (forall ((@u0py216 Fuel)(@x1py523 Term)(@x2py395 Term)) (! (or (is-Tm_arrow (PreType @x1py523)) (not (HasTypeFuel @u0py216 @x1py523 (Tm_arrow_c7a05ebcf00d9d5ea2ad28cd2649cf23 @x2py395)))) :pattern ((HasTypeFuel @u0py216 @x1py523 (Tm_arrow_c7a05ebcf00d9d5ea2ad28cd2649cf23 @x2py395))) )) :named FStar.Pervasives_pre_typing_Tm_arrow_c7a05ebcf00d9d5ea2ad28cd2649cf23))
(assert (! (forall ((@u0py217 Fuel)(@x1py524 Term)(@x2py396 Term)) (! (or (is-Tm_arrow (PreType @x1py524)) (not (HasTypeFuel @u0py217 @x1py524 (Tm_arrow_c89a507d37bce525c784ce4c49ca4e78 @x2py396)))) :pattern ((HasTypeFuel @u0py217 @x1py524 (Tm_arrow_c89a507d37bce525c784ce4c49ca4e78 @x2py396))) )) :named FStar.Pervasives_pre_typing_Tm_arrow_c89a507d37bce525c784ce4c49ca4e78))
(assert (! (forall ((@u0py218 Fuel)(@x1py525 Term)) (! (or (is-Tm_arrow (PreType @x1py525)) (not (HasTypeFuel @u0py218 @x1py525 Tm_arrow_c314ab62524b1a2d1997954ac4c1ae99))) :pattern ((HasTypeFuel @u0py218 @x1py525 Tm_arrow_c314ab62524b1a2d1997954ac4c1ae99)) )) :named FStar.Pervasives_pre_typing_Tm_arrow_c314ab62524b1a2d1997954ac4c1ae99))
(assert (! (forall ((@u0py219 Fuel)(@x1py526 Term)) (! (or (is-Tm_arrow (PreType @x1py526)) (not (HasTypeFuel @u0py219 @x1py526 Tm_arrow_c550a8e282abd0593a028dd71c851c33))) :pattern ((HasTypeFuel @u0py219 @x1py526 Tm_arrow_c550a8e282abd0593a028dd71c851c33)) )) :named FStar.Pervasives_pre_typing_Tm_arrow_c550a8e282abd0593a028dd71c851c33))
(assert (! (forall ((@u0py220 Fuel)(@x1py527 Term)(@x2py397 Term)) (! (or (is-Tm_arrow (PreType @x1py527)) (not (HasTypeFuel @u0py220 @x1py527 (Tm_arrow_d1e52eaae1c31c37e88414cfa45e35d7 @x2py397)))) :pattern ((HasTypeFuel @u0py220 @x1py527 (Tm_arrow_d1e52eaae1c31c37e88414cfa45e35d7 @x2py397))) )) :named FStar.Pervasives_pre_typing_Tm_arrow_d1e52eaae1c31c37e88414cfa45e35d7))
(assert (! (forall ((@u0py221 Fuel)(@x1py528 Term)(@x2py398 Term)(@x3py281 Term)(@x4py206 Term)) (! (or (is-Tm_arrow (PreType @x1py528)) (not (HasTypeFuel @u0py221 @x1py528 (Tm_arrow_d9eac583d9f115ef0dc2cf4de1079b38 @x2py398 @x3py281 @x4py206)))) :pattern ((HasTypeFuel @u0py221 @x1py528 (Tm_arrow_d9eac583d9f115ef0dc2cf4de1079b38 @x2py398 @x3py281 @x4py206))) )) :named FStar.Pervasives_pre_typing_Tm_arrow_d9eac583d9f115ef0dc2cf4de1079b38))
(assert (! (forall ((@u0py222 Fuel)(@x1py529 Term)(@x2py399 Term)(@x3py282 Term)) (! (or (is-Tm_arrow (PreType @x1py529)) (not (HasTypeFuel @u0py222 @x1py529 (Tm_arrow_d794a58e52e51e13e3b9afe660625c54 @x2py399 @x3py282)))) :pattern ((HasTypeFuel @u0py222 @x1py529 (Tm_arrow_d794a58e52e51e13e3b9afe660625c54 @x2py399 @x3py282))) )) :named FStar.Pervasives_pre_typing_Tm_arrow_d794a58e52e51e13e3b9afe660625c54))
(assert (! (forall ((@u0py223 Fuel)(@x1py530 Term)(@x2py400 Term)) (! (or (is-Tm_arrow (PreType @x1py530)) (not (HasTypeFuel @u0py223 @x1py530 (Tm_arrow_db526519745d691ef343e32a1084673b @x2py400)))) :pattern ((HasTypeFuel @u0py223 @x1py530 (Tm_arrow_db526519745d691ef343e32a1084673b @x2py400))) )) :named FStar.Pervasives_pre_typing_Tm_arrow_db526519745d691ef343e32a1084673b))
(assert (! (forall ((@u0py224 Fuel)(@x1py531 Term)(@x2py401 Term)(@x3py283 Term)(@x4py207 Term)) (! (or (is-Tm_arrow (PreType @x1py531)) (not (HasTypeFuel @u0py224 @x1py531 (Tm_arrow_dbf39bf049d72c3088e1ed84d246952d @x2py401 @x3py283 @x4py207)))) :pattern ((HasTypeFuel @u0py224 @x1py531 (Tm_arrow_dbf39bf049d72c3088e1ed84d246952d @x2py401 @x3py283 @x4py207))) )) :named FStar.Pervasives_pre_typing_Tm_arrow_dbf39bf049d72c3088e1ed84d246952d))
(assert (! (forall ((@u0py225 Fuel)(@x1py532 Term)(@x2py402 Term)) (! (or (is-Tm_arrow (PreType @x1py532)) (not (HasTypeFuel @u0py225 @x1py532 (Tm_arrow_dd2de7e516014096b8b41947307b7781 @x2py402)))) :pattern ((HasTypeFuel @u0py225 @x1py532 (Tm_arrow_dd2de7e516014096b8b41947307b7781 @x2py402))) )) :named FStar.Pervasives_pre_typing_Tm_arrow_dd2de7e516014096b8b41947307b7781))
(assert (! (forall ((@u0py226 Fuel)(@x1py533 Term)(@x2py403 Term)) (! (or (is-Tm_arrow (PreType @x1py533)) (not (HasTypeFuel @u0py226 @x1py533 (Tm_arrow_e62fd03c6d75c90fe0c21b54135b4ded @x2py403)))) :pattern ((HasTypeFuel @u0py226 @x1py533 (Tm_arrow_e62fd03c6d75c90fe0c21b54135b4ded @x2py403))) )) :named FStar.Pervasives_pre_typing_Tm_arrow_e62fd03c6d75c90fe0c21b54135b4ded))
(assert (! (forall ((@u0py227 Fuel)(@x1py534 Term)) (! (or (is-Tm_arrow (PreType @x1py534)) (not (HasTypeFuel @u0py227 @x1py534 Tm_arrow_e797b13f3527682c5e8e530b8c8c696d))) :pattern ((HasTypeFuel @u0py227 @x1py534 Tm_arrow_e797b13f3527682c5e8e530b8c8c696d)) )) :named FStar.Pervasives_pre_typing_Tm_arrow_e797b13f3527682c5e8e530b8c8c696d))
(assert (! (forall ((@u0py228 Fuel)(@x1py535 Term)(@x2py404 Term)) (! (or (is-Tm_arrow (PreType @x1py535)) (not (HasTypeFuel @u0py228 @x1py535 (Tm_arrow_eff36c64f2c347faf7149c68721d618a @x2py404)))) :pattern ((HasTypeFuel @u0py228 @x1py535 (Tm_arrow_eff36c64f2c347faf7149c68721d618a @x2py404))) )) :named FStar.Pervasives_pre_typing_Tm_arrow_eff36c64f2c347faf7149c68721d618a))
(assert (! (forall ((@u0py229 Fuel)(@x1py536 Term)) (! (or (is-Tm_arrow (PreType @x1py536)) (not (HasTypeFuel @u0py229 @x1py536 Tm_arrow_f17dd97b1f287869d6a3add69232601b))) :pattern ((HasTypeFuel @u0py229 @x1py536 Tm_arrow_f17dd97b1f287869d6a3add69232601b)) )) :named FStar.Pervasives_pre_typing_Tm_arrow_f17dd97b1f287869d6a3add69232601b))
(assert (! (forall ((@u0py230 Fuel)(@x1py537 Term)(@x2py405 Term)) (! (or (is-Tm_arrow (PreType @x1py537)) (not (HasTypeFuel @u0py230 @x1py537 (Tm_arrow_f2144e812b1bb22d3fc2a233dbf4e7ad @x2py405)))) :pattern ((HasTypeFuel @u0py230 @x1py537 (Tm_arrow_f2144e812b1bb22d3fc2a233dbf4e7ad @x2py405))) )) :named FStar.Pervasives_pre_typing_Tm_arrow_f2144e812b1bb22d3fc2a233dbf4e7ad))
(assert (! (forall ((@x0py380 Term)(@u1py10 Fuel)) (! (or (not (HasTypeFuel @u1py10 @x0py380 FStar.Pervasives.__internal_ocaml_attributes)) (= FStar.Pervasives.__internal_ocaml_attributes (PreType @x0py380))) :pattern ((HasTypeFuel @u1py10 @x0py380 FStar.Pervasives.__internal_ocaml_attributes)) )) :named FStar.Pervasives_pretyping_a4b7a3cd3b1c984348c37abd2aa7744a))
(assert (! (forall ((@x0py381 Term)(@u1py11 Fuel)(@x2py406 Term)(@x3py284 Term)(@x4py208 Term)) (! (or (not (HasTypeFuel @u1py11 @x0py381 (FStar.Pervasives.dtuple3 @x2py406 @x3py284 @x4py208))) (= (FStar.Pervasives.dtuple3 @x2py406 @x3py284 @x4py208) (PreType @x0py381))) :pattern ((HasTypeFuel @u1py11 @x0py381 (FStar.Pervasives.dtuple3 @x2py406 @x3py284 @x4py208))) )) :named FStar.Pervasives_pretyping_a5299c19d6dd1bceb5aa4630d018b183))
(assert (! (forall ((@x0py382 Term)(@u1py12 Fuel)(@x2py407 Term)(@x3py285 Term)) (! (or (not (HasTypeFuel @u1py12 @x0py382 (FStar.Pervasives.either @x2py407 @x3py285))) (= (FStar.Pervasives.either @x2py407 @x3py285) (PreType @x0py382))) :pattern ((HasTypeFuel @u1py12 @x0py382 (FStar.Pervasives.either @x2py407 @x3py285))) )) :named FStar.Pervasives_pretyping_b33635a76275268b8c60db6fa0677ca6))
(assert (! (forall ((@x0py383 Term)(@u1py13 Fuel)(@x2py408 Term)(@x3py286 Term)(@x4py209 Term)(@x5py164 Term)) (! (or (not (HasTypeFuel @u1py13 @x0py383 (FStar.Pervasives.dtuple4 @x2py408 @x3py286 @x4py209 @x5py164))) (= (FStar.Pervasives.dtuple4 @x2py408 @x3py286 @x4py209 @x5py164) (PreType @x0py383))) :pattern ((HasTypeFuel @u1py13 @x0py383 (FStar.Pervasives.dtuple4 @x2py408 @x3py286 @x4py209 @x5py164))) )) :named FStar.Pervasives_pretyping_cb2c0bca2c2aabdf2d195b0740c049bd))
(assert (! (forall ((@x0py384 Term)(@u1py14 Fuel)(@x2py409 Term)) (! (or (not (HasTypeFuel @u1py14 @x0py384 (FStar.Pervasives.result @x2py409))) (= (FStar.Pervasives.result @x2py409) (PreType @x0py384))) :pattern ((HasTypeFuel @u1py14 @x0py384 (FStar.Pervasives.result @x2py409))) )) :named FStar.Pervasives_pretyping_f012bfbe57874e314f153effb10f002f))
(assert (! (forall ((@u0py231 Fuel)(@x1py538 Term)(@x2py410 Term)(@x3py287 Term)(@x4py210 Term)(@x5py165 Term)) (! (or (and (is-False.CalcRefl @x1py538) (= @x2py410 (False.CalcRefl_t @x1py538)) (= @x3py287 (Prims.Nil (False.relation (False.CalcRefl_t @x1py538)))) (= @x4py210 (False.CalcRefl_x @x1py538)) (= @x5py165 (False.CalcRefl_x @x1py538))) (and (is-False.CalcStep @x1py538) (= @x2py410 (False.CalcStep_t @x1py538)) (= @x3py287 (Prims.Cons (False.relation (False.CalcStep_t @x1py538)) (False.CalcStep_p @x1py538) (False.CalcStep_rs @x1py538))) (= @x4py210 (False.CalcStep_x @x1py538)) (= @x5py165 (False.CalcStep_z @x1py538))) (not (HasTypeFuel (SFuel @u0py231) @x1py538 (False.calc_proof @x2py410 @x3py287 @x4py210 @x5py165)))) :pattern ((HasTypeFuel (SFuel @u0py231) @x1py538 (False.calc_proof @x2py410 @x3py287 @x4py210 @x5py165))) )) :named fuel_guarded_inversion_False.calc_proof))
(assert (! (forall ((@u0py232 Fuel)(@x1py539 Term)) (! (or (is-FStar.Pervasives.PpxDerivingShow @x1py539) (is-FStar.Pervasives.PpxDerivingShowConstant @x1py539) (is-FStar.Pervasives.PpxDerivingYoJson @x1py539) (is-FStar.Pervasives.CInline @x1py539) (is-FStar.Pervasives.Substitute @x1py539) (is-FStar.Pervasives.Gc @x1py539) (is-FStar.Pervasives.Comment @x1py539) (is-FStar.Pervasives.CPrologue @x1py539) (is-FStar.Pervasives.CEpilogue @x1py539) (is-FStar.Pervasives.CConst @x1py539) (not (HasTypeFuel (SFuel @u0py232) @x1py539 FStar.Pervasives.__internal_ocaml_attributes))) :pattern ((HasTypeFuel (SFuel @u0py232) @x1py539 FStar.Pervasives.__internal_ocaml_attributes)) )) :named fuel_guarded_inversion_FStar.Pervasives.__internal_ocaml_attributes))
(assert (! (forall ((@u0py233 Fuel)(@x1py540 Term)(@x2py411 Term)(@x3py288 Term)(@x4py211 Term)) (! (or (not (HasTypeFuel @u0py233 @x1py540 (FStar.Pervasives.dtuple3 @x2py411 @x3py288 @x4py211))) (and (is-FStar.Pervasives.Mkdtuple3 @x1py540) (= @x2py411 (FStar.Pervasives.Mkdtuple3_a @x1py540)) (= @x3py288 (FStar.Pervasives.Mkdtuple3_b @x1py540)) (= @x4py211 (FStar.Pervasives.Mkdtuple3_c @x1py540)))) :pattern ((HasTypeFuel @u0py233 @x1py540 (FStar.Pervasives.dtuple3 @x2py411 @x3py288 @x4py211))) )) :named fuel_guarded_inversion_FStar.Pervasives.dtuple3))
(assert (! (forall ((@u0py234 Fuel)(@x1py541 Term)(@x2py412 Term)(@x3py289 Term)(@x4py212 Term)(@x5py166 Term)) (! (or (not (HasTypeFuel @u0py234 @x1py541 (FStar.Pervasives.dtuple4 @x2py412 @x3py289 @x4py212 @x5py166))) (and (is-FStar.Pervasives.Mkdtuple4 @x1py541) (= @x2py412 (FStar.Pervasives.Mkdtuple4_a @x1py541)) (= @x3py289 (FStar.Pervasives.Mkdtuple4_b @x1py541)) (= @x4py212 (FStar.Pervasives.Mkdtuple4_c @x1py541)) (= @x5py166 (FStar.Pervasives.Mkdtuple4_d @x1py541)))) :pattern ((HasTypeFuel @u0py234 @x1py541 (FStar.Pervasives.dtuple4 @x2py412 @x3py289 @x4py212 @x5py166))) )) :named fuel_guarded_inversion_FStar.Pervasives.dtuple4))
(assert (! (forall ((@u0py235 Fuel)(@x1py542 Term)(@x2py413 Term)(@x3py290 Term)) (! (or (and (is-FStar.Pervasives.Inl @x1py542) (= @x2py413 (FStar.Pervasives.Inl__a @x1py542)) (= @x3py290 (FStar.Pervasives.Inl__b @x1py542))) (and (is-FStar.Pervasives.Inr @x1py542) (= @x2py413 (FStar.Pervasives.Inr__a @x1py542)) (= @x3py290 (FStar.Pervasives.Inr__b @x1py542))) (not (HasTypeFuel (SFuel @u0py235) @x1py542 (FStar.Pervasives.either @x2py413 @x3py290)))) :pattern ((HasTypeFuel (SFuel @u0py235) @x1py542 (FStar.Pervasives.either @x2py413 @x3py290))) )) :named fuel_guarded_inversion_FStar.Pervasives.either))
(assert (! (forall ((@u0py236 Fuel)(@x1py543 Term)(@x2py414 Term)) (! (or (and (is-FStar.Pervasives.Native.None @x1py543) (= @x2py414 (FStar.Pervasives.Native.None_a @x1py543))) (and (is-FStar.Pervasives.Native.Some @x1py543) (= @x2py414 (FStar.Pervasives.Native.Some_a @x1py543))) (not (HasTypeFuel (SFuel @u0py236) @x1py543 (FStar.Pervasives.Native.option @x2py414)))) :pattern ((HasTypeFuel (SFuel @u0py236) @x1py543 (FStar.Pervasives.Native.option @x2py414))) )) :named fuel_guarded_inversion_FStar.Pervasives.Native.option))
(assert (! (forall ((@u0py237 Fuel)(@x1py544 Term)(@x2py415 Term)(@x3py291 Term)) (! (or (not (HasTypeFuel @u0py237 @x1py544 (FStar.Pervasives.Native.tuple2 @x2py415 @x3py291))) (and (is-FStar.Pervasives.Native.Mktuple2 @x1py544) (= @x2py415 (FStar.Pervasives.Native.Mktuple2__a @x1py544)) (= @x3py291 (FStar.Pervasives.Native.Mktuple2__b @x1py544)))) :pattern ((HasTypeFuel @u0py237 @x1py544 (FStar.Pervasives.Native.tuple2 @x2py415 @x3py291))) )) :named fuel_guarded_inversion_FStar.Pervasives.Native.tuple2))
(assert (! (forall ((@u0py238 Fuel)(@x1py545 Term)(@x2py416 Term)(@x3py292 Term)(@x4py213 Term)) (! (or (not (HasTypeFuel @u0py238 @x1py545 (FStar.Pervasives.Native.tuple3 @x2py416 @x3py292 @x4py213))) (and (is-FStar.Pervasives.Native.Mktuple3 @x1py545) (= @x2py416 (FStar.Pervasives.Native.Mktuple3__a @x1py545)) (= @x3py292 (FStar.Pervasives.Native.Mktuple3__b @x1py545)) (= @x4py213 (FStar.Pervasives.Native.Mktuple3__c @x1py545)))) :pattern ((HasTypeFuel @u0py238 @x1py545 (FStar.Pervasives.Native.tuple3 @x2py416 @x3py292 @x4py213))) )) :named fuel_guarded_inversion_FStar.Pervasives.Native.tuple3))
(assert (! (forall ((@u0py239 Fuel)(@x1py546 Term)(@x2py417 Term)(@x3py293 Term)(@x4py214 Term)(@x5py167 Term)) (! (or (not (HasTypeFuel @u0py239 @x1py546 (FStar.Pervasives.Native.tuple4 @x2py417 @x3py293 @x4py214 @x5py167))) (and (is-FStar.Pervasives.Native.Mktuple4 @x1py546) (= @x2py417 (FStar.Pervasives.Native.Mktuple4__a @x1py546)) (= @x3py293 (FStar.Pervasives.Native.Mktuple4__b @x1py546)) (= @x4py214 (FStar.Pervasives.Native.Mktuple4__c @x1py546)) (= @x5py167 (FStar.Pervasives.Native.Mktuple4__d @x1py546)))) :pattern ((HasTypeFuel @u0py239 @x1py546 (FStar.Pervasives.Native.tuple4 @x2py417 @x3py293 @x4py214 @x5py167))) )) :named fuel_guarded_inversion_FStar.Pervasives.Native.tuple4))
(assert (! (forall ((@u0py240 Fuel)(@x1py547 Term)(@x2py418 Term)(@x3py294 Term)(@x4py215 Term)(@x5py168 Term)(@x6py116 Term)) (! (or (not (HasTypeFuel @u0py240 @x1py547 (FStar.Pervasives.Native.tuple5 @x2py418 @x3py294 @x4py215 @x5py168 @x6py116))) (and (is-FStar.Pervasives.Native.Mktuple5 @x1py547) (= @x2py418 (FStar.Pervasives.Native.Mktuple5__a @x1py547)) (= @x3py294 (FStar.Pervasives.Native.Mktuple5__b @x1py547)) (= @x4py215 (FStar.Pervasives.Native.Mktuple5__c @x1py547)) (= @x5py168 (FStar.Pervasives.Native.Mktuple5__d @x1py547)) (= @x6py116 (FStar.Pervasives.Native.Mktuple5__e @x1py547)))) :pattern ((HasTypeFuel @u0py240 @x1py547 (FStar.Pervasives.Native.tuple5 @x2py418 @x3py294 @x4py215 @x5py168 @x6py116))) )) :named fuel_guarded_inversion_FStar.Pervasives.Native.tuple5))
(assert (! (forall ((@u0py241 Fuel)(@x1py548 Term)(@x2py419 Term)(@x3py295 Term)(@x4py216 Term)(@x5py169 Term)(@x6py117 Term)(@x7py85 Term)) (! (or (not (HasTypeFuel @u0py241 @x1py548 (FStar.Pervasives.Native.tuple6 @x2py419 @x3py295 @x4py216 @x5py169 @x6py117 @x7py85))) (and (is-FStar.Pervasives.Native.Mktuple6 @x1py548) (= @x2py419 (FStar.Pervasives.Native.Mktuple6__a @x1py548)) (= @x3py295 (FStar.Pervasives.Native.Mktuple6__b @x1py548)) (= @x4py216 (FStar.Pervasives.Native.Mktuple6__c @x1py548)) (= @x5py169 (FStar.Pervasives.Native.Mktuple6__d @x1py548)) (= @x6py117 (FStar.Pervasives.Native.Mktuple6__e @x1py548)) (= @x7py85 (FStar.Pervasives.Native.Mktuple6__f @x1py548)))) :pattern ((HasTypeFuel @u0py241 @x1py548 (FStar.Pervasives.Native.tuple6 @x2py419 @x3py295 @x4py216 @x5py169 @x6py117 @x7py85))) )) :named fuel_guarded_inversion_FStar.Pervasives.Native.tuple6))
(assert (! (forall ((@u0py242 Fuel)(@x1py549 Term)(@x2py420 Term)(@x3py296 Term)(@x4py217 Term)(@x5py170 Term)(@x6py118 Term)(@x7py86 Term)(@x8py57 Term)) (! (or (not (HasTypeFuel @u0py242 @x1py549 (FStar.Pervasives.Native.tuple7 @x2py420 @x3py296 @x4py217 @x5py170 @x6py118 @x7py86 @x8py57))) (and (is-FStar.Pervasives.Native.Mktuple7 @x1py549) (= @x2py420 (FStar.Pervasives.Native.Mktuple7__a @x1py549)) (= @x3py296 (FStar.Pervasives.Native.Mktuple7__b @x1py549)) (= @x4py217 (FStar.Pervasives.Native.Mktuple7__c @x1py549)) (= @x5py170 (FStar.Pervasives.Native.Mktuple7__d @x1py549)) (= @x6py118 (FStar.Pervasives.Native.Mktuple7__e @x1py549)) (= @x7py86 (FStar.Pervasives.Native.Mktuple7__f @x1py549)) (= @x8py57 (FStar.Pervasives.Native.Mktuple7__g @x1py549)))) :pattern ((HasTypeFuel @u0py242 @x1py549 (FStar.Pervasives.Native.tuple7 @x2py420 @x3py296 @x4py217 @x5py170 @x6py118 @x7py86 @x8py57))) )) :named fuel_guarded_inversion_FStar.Pervasives.Native.tuple7))
(assert (! (forall ((@u0py243 Fuel)(@x1py550 Term)(@x2py421 Term)(@x3py297 Term)(@x4py218 Term)(@x5py171 Term)(@x6py119 Term)(@x7py87 Term)(@x8py58 Term)(@x9py39 Term)) (! (or (not (HasTypeFuel @u0py243 @x1py550 (FStar.Pervasives.Native.tuple8 @x2py421 @x3py297 @x4py218 @x5py171 @x6py119 @x7py87 @x8py58 @x9py39))) (and (is-FStar.Pervasives.Native.Mktuple8 @x1py550) (= @x2py421 (FStar.Pervasives.Native.Mktuple8__a @x1py550)) (= @x3py297 (FStar.Pervasives.Native.Mktuple8__b @x1py550)) (= @x4py218 (FStar.Pervasives.Native.Mktuple8__c @x1py550)) (= @x5py171 (FStar.Pervasives.Native.Mktuple8__d @x1py550)) (= @x6py119 (FStar.Pervasives.Native.Mktuple8__e @x1py550)) (= @x7py87 (FStar.Pervasives.Native.Mktuple8__f @x1py550)) (= @x8py58 (FStar.Pervasives.Native.Mktuple8__g @x1py550)) (= @x9py39 (FStar.Pervasives.Native.Mktuple8__h @x1py550)))) :pattern ((HasTypeFuel @u0py243 @x1py550 (FStar.Pervasives.Native.tuple8 @x2py421 @x3py297 @x4py218 @x5py171 @x6py119 @x7py87 @x8py58 @x9py39))) )) :named fuel_guarded_inversion_FStar.Pervasives.Native.tuple8))
(assert (! (forall ((@u0py244 Fuel)(@x1py551 Term)(@x2py422 Term)) (! (or (and (is-FStar.Pervasives.V @x1py551) (= @x2py422 (FStar.Pervasives.V_a @x1py551))) (and (is-FStar.Pervasives.E @x1py551) (= @x2py422 (FStar.Pervasives.E_a @x1py551))) (and (is-FStar.Pervasives.Err @x1py551) (= @x2py422 (FStar.Pervasives.Err_a @x1py551))) (not (HasTypeFuel (SFuel @u0py244) @x1py551 (FStar.Pervasives.result @x2py422)))) :pattern ((HasTypeFuel (SFuel @u0py244) @x1py551 (FStar.Pervasives.result @x2py422))) )) :named fuel_guarded_inversion_FStar.Pervasives.result))
(assert (! (forall ((@u0py245 Fuel)(@x1py552 Term)(@x2py423 Term)(@x3py298 Term)) (! (or (not (HasTypeFuel @u0py245 @x1py552 (Prims.c_and @x2py423 @x3py298))) (and (is-Prims.And @x1py552) (= @x2py423 (Prims.And_p @x1py552)) (= @x3py298 (Prims.And_q @x1py552)))) :pattern ((HasTypeFuel @u0py245 @x1py552 (Prims.c_and @x2py423 @x3py298))) )) :named fuel_guarded_inversion_Prims.c_and))
(assert (! (forall ((@u0py246 Fuel)(@x1py553 Term)) (! (not (HasTypeFuel @u0py246 @x1py553 Prims.c_False)) :pattern ((HasTypeFuel @u0py246 @x1py553 Prims.c_False)) )) :named fuel_guarded_inversion_Prims.c_False))
(assert (! (forall ((@u0py247 Fuel)(@x1py554 Term)(@x2py424 Term)(@x3py299 Term)) (! (or (and (is-Prims.Left @x1py554) (= @x2py424 (Prims.Left_p @x1py554)) (= @x3py299 (Prims.Left_q @x1py554))) (and (is-Prims.Right @x1py554) (= @x2py424 (Prims.Right_p @x1py554)) (= @x3py299 (Prims.Right_q @x1py554))) (not (HasTypeFuel (SFuel @u0py247) @x1py554 (Prims.c_or @x2py424 @x3py299)))) :pattern ((HasTypeFuel (SFuel @u0py247) @x1py554 (Prims.c_or @x2py424 @x3py299))) )) :named fuel_guarded_inversion_Prims.c_or))
(assert (! (forall ((@u0py248 Fuel)(@x1py555 Term)) (! (or (is-Prims.T @x1py555) (not (HasTypeFuel @u0py248 @x1py555 Prims.c_True))) :pattern ((HasTypeFuel @u0py248 @x1py555 Prims.c_True)) )) :named fuel_guarded_inversion_Prims.c_True))
(assert (! (forall ((@u0py249 Fuel)(@x1py556 Term)(@x2py425 Term)(@x3py300 Term)) (! (or (not (HasTypeFuel @u0py249 @x1py556 (Prims.dtuple2 @x2py425 @x3py300))) (and (is-Prims.Mkdtuple2 @x1py556) (= @x2py425 (Prims.Mkdtuple2_a @x1py556)) (= @x3py300 (Prims.Mkdtuple2_b @x1py556)))) :pattern ((HasTypeFuel @u0py249 @x1py556 (Prims.dtuple2 @x2py425 @x3py300))) )) :named fuel_guarded_inversion_Prims.dtuple2))
(assert (! (forall ((@u0py250 Fuel)(@x1py557 Term)(@x2py426 Term)(@x3py301 Term)(@x4py219 Term)) (! (or (not (HasTypeFuel @u0py250 @x1py557 (Prims.equals @x2py426 @x3py301 @x4py219))) (and (is-Prims.Refl @x1py557) (= @x2py426 (Prims.Refl_a @x1py557)) (= @x3py301 (Prims.Refl_x @x1py557)) (= @x4py219 (Prims.Refl_x @x1py557)))) :pattern ((HasTypeFuel @u0py250 @x1py557 (Prims.equals @x2py426 @x3py301 @x4py219))) )) :named fuel_guarded_inversion_Prims.equals))
(assert (! (forall ((@u0py251 Fuel)(@x1py558 Term)(@x2py427 Term)(@x3py302 Term)(@x4py220 Term)(@x5py172 Term)) (! (or (not (HasTypeFuel @u0py251 @x1py558 (Prims.h_equals @x2py427 @x3py302 @x4py220 @x5py172))) (and (is-Prims.HRefl @x1py558) (= @x2py427 (Prims.HRefl_a @x1py558)) (= @x3py302 (Prims.HRefl_x @x1py558)) (= @x4py220 (Prims.HRefl_a @x1py558)) (= @x5py172 (Prims.HRefl_x @x1py558)))) :pattern ((HasTypeFuel @u0py251 @x1py558 (Prims.h_equals @x2py427 @x3py302 @x4py220 @x5py172))) )) :named fuel_guarded_inversion_Prims.h_equals))
(assert (! (forall ((@u0py252 Fuel)(@x1py559 Term)) (! (or (is-Prims.LexTop @x1py559) (is-Prims.LexCons @x1py559) (not (HasTypeFuel (SFuel @u0py252) @x1py559 Prims.lex_t))) :pattern ((HasTypeFuel (SFuel @u0py252) @x1py559 Prims.lex_t)) )) :named fuel_guarded_inversion_Prims.lex_t))
(assert (! (forall ((@u0py253 Fuel)(@x1py560 Term)(@x2py428 Term)) (! (or (and (is-Prims.Nil @x1py560) (= @x2py428 (Prims.Nil_a @x1py560))) (and (is-Prims.Cons @x1py560) (= @x2py428 (Prims.Cons_a @x1py560))) (not (HasTypeFuel (SFuel @u0py253) @x1py560 (Prims.list @x2py428)))) :pattern ((HasTypeFuel (SFuel @u0py253) @x1py560 (Prims.list @x2py428))) )) :named fuel_guarded_inversion_Prims.list))
(assert (! (forall ((@u0py254 Fuel)(@x1py561 Term)) (! (= (ApplyTT (ApplyTF Prims.pow2.fuel_instrumented_token @u0py254) @x1py561) (Prims.pow2.fuel_instrumented @u0py254 @x1py561)) :pattern ((ApplyTT (ApplyTF Prims.pow2.fuel_instrumented_token @u0py254) @x1py561)) )) :named fuel_token_correspondence_Prims.pow2.fuel_instrumented_token))
(assert (! (forall ((@x0py385 Term)) (! (and (NoHoist @x0py385 (HasType False.__proj__CalcRefl__item__x@tok Tm_arrow_14bcecce05a6e15aa540694546ee26ed)) (forall ((@x1py562 Term)(@x2py429 Term)(@x3py303 Term)(@x4py221 Term)(@x5py173 Term)) (! (= (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT False.__proj__CalcRefl__item__x@tok @x1py562) @x2py429) @x3py303) @x4py221) @x5py173) (False.__proj__CalcRefl__item__x @x1py562 @x2py429 @x3py303 @x4py221 @x5py173)) :pattern ((False.__proj__CalcRefl__item__x @x1py562 @x2py429 @x3py303 @x4py221 @x5py173)) ))) :pattern ((ApplyTT @x0py385 False.__proj__CalcRefl__item__x@tok)) )) :named function_token_typing_False.__proj__CalcRefl__item__x))
(assert (! (forall ((@x0py386 Term)) (! (and (NoHoist @x0py386 (HasType False.__proj__CalcStep__item___5@tok Tm_arrow_3892eda38ed5a9b6d9aa7ad2635088fc)) (forall ((@x1py563 Term)(@x2py430 Term)(@x3py304 Term)(@x4py222 Term)(@x5py174 Term)) (! (= (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT False.__proj__CalcStep__item___5@tok @x1py563) @x2py430) @x3py304) @x4py222) @x5py174) (False.__proj__CalcStep__item___5 @x1py563 @x2py430 @x3py304 @x4py222 @x5py174)) :pattern ((False.__proj__CalcStep__item___5 @x1py563 @x2py430 @x3py304 @x4py222 @x5py174)) ))) :pattern ((ApplyTT @x0py386 False.__proj__CalcStep__item___5@tok)) )) :named function_token_typing_False.__proj__CalcStep__item___5))
(assert (! (forall ((@x0py387 Term)) (! (and (NoHoist @x0py387 (HasType False.__proj__CalcStep__item___6@tok Tm_arrow_f3a6f55103b1d9f09f2c9d33389125e1)) (forall ((@x1py564 Term)(@x2py431 Term)(@x3py305 Term)(@x4py223 Term)(@x5py175 Term)) (! (= (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT False.__proj__CalcStep__item___6@tok @x1py564) @x2py431) @x3py305) @x4py223) @x5py175) (False.__proj__CalcStep__item___6 @x1py564 @x2py431 @x3py305 @x4py223 @x5py175)) :pattern ((False.__proj__CalcStep__item___6 @x1py564 @x2py431 @x3py305 @x4py223 @x5py175)) ))) :pattern ((ApplyTT @x0py387 False.__proj__CalcStep__item___6@tok)) )) :named function_token_typing_False.__proj__CalcStep__item___6))
(assert (! (forall ((@x0py388 Term)) (! (and (NoHoist @x0py388 (HasType False.__proj__CalcStep__item__p@tok Tm_arrow_e4d7b27ac8277ab0ab77e116a8906fa4)) (forall ((@x1py565 Term)(@x2py432 Term)(@x3py306 Term)(@x4py224 Term)(@x5py176 Term)) (! (= (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT False.__proj__CalcStep__item__p@tok @x1py565) @x2py432) @x3py306) @x4py224) @x5py176) (False.__proj__CalcStep__item__p @x1py565 @x2py432 @x3py306 @x4py224 @x5py176)) :pattern ((False.__proj__CalcStep__item__p @x1py565 @x2py432 @x3py306 @x4py224 @x5py176)) ))) :pattern ((ApplyTT @x0py388 False.__proj__CalcStep__item__p@tok)) )) :named function_token_typing_False.__proj__CalcStep__item__p))
(assert (! (forall ((@x0py389 Term)) (! (and (NoHoist @x0py389 (HasType False.__proj__CalcStep__item__rs@tok Tm_arrow_88445f768cf4024bacb21baa68bdff2b)) (forall ((@x1py566 Term)(@x2py433 Term)(@x3py307 Term)(@x4py225 Term)(@x5py177 Term)) (! (= (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT False.__proj__CalcStep__item__rs@tok @x1py566) @x2py433) @x3py307) @x4py225) @x5py177) (False.__proj__CalcStep__item__rs @x1py566 @x2py433 @x3py307 @x4py225 @x5py177)) :pattern ((False.__proj__CalcStep__item__rs @x1py566 @x2py433 @x3py307 @x4py225 @x5py177)) ))) :pattern ((ApplyTT @x0py389 False.__proj__CalcStep__item__rs@tok)) )) :named function_token_typing_False.__proj__CalcStep__item__rs))
(assert (! (forall ((@x0py390 Term)) (! (and (NoHoist @x0py390 (HasType False.__proj__CalcStep__item__x@tok Tm_arrow_feb6e9b0823403b824ec87356300d43e)) (forall ((@x1py567 Term)(@x2py434 Term)(@x3py308 Term)(@x4py226 Term)(@x5py178 Term)) (! (= (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT False.__proj__CalcStep__item__x@tok @x1py567) @x2py434) @x3py308) @x4py226) @x5py178) (False.__proj__CalcStep__item__x @x1py567 @x2py434 @x3py308 @x4py226 @x5py178)) :pattern ((False.__proj__CalcStep__item__x @x1py567 @x2py434 @x3py308 @x4py226 @x5py178)) ))) :pattern ((ApplyTT @x0py390 False.__proj__CalcStep__item__x@tok)) )) :named function_token_typing_False.__proj__CalcStep__item__x))
(assert (! (forall ((@x0py391 Term)) (! (and (NoHoist @x0py391 (HasType False.__proj__CalcStep__item__y@tok Tm_arrow_feb6e9b0823403b824ec87356300d43e)) (forall ((@x1py568 Term)(@x2py435 Term)(@x3py309 Term)(@x4py227 Term)(@x5py179 Term)) (! (= (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT False.__proj__CalcStep__item__y@tok @x1py568) @x2py435) @x3py309) @x4py227) @x5py179) (False.__proj__CalcStep__item__y @x1py568 @x2py435 @x3py309 @x4py227 @x5py179)) :pattern ((False.__proj__CalcStep__item__y @x1py568 @x2py435 @x3py309 @x4py227 @x5py179)) ))) :pattern ((ApplyTT @x0py391 False.__proj__CalcStep__item__y@tok)) )) :named function_token_typing_False.__proj__CalcStep__item__y))
(assert (! (forall ((@x0py392 Term)) (! (and (NoHoist @x0py392 (HasType False.__proj__CalcStep__item__z@tok Tm_arrow_feb6e9b0823403b824ec87356300d43e)) (forall ((@x1py569 Term)(@x2py436 Term)(@x3py310 Term)(@x4py228 Term)(@x5py180 Term)) (! (= (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT False.__proj__CalcStep__item__z@tok @x1py569) @x2py436) @x3py310) @x4py228) @x5py180) (False.__proj__CalcStep__item__z @x1py569 @x2py436 @x3py310 @x4py228 @x5py180)) :pattern ((False.__proj__CalcStep__item__z @x1py569 @x2py436 @x3py310 @x4py228 @x5py180)) ))) :pattern ((ApplyTT @x0py392 False.__proj__CalcStep__item__z@tok)) )) :named function_token_typing_False.__proj__CalcStep__item__z))
(assert (! (forall ((@x0py393 Term)) (! (and (NoHoist @x0py393 (HasType False.init@tok Tm_arrow_01af5ab61334f3cf5e140ba023176d9a)) (forall ((@x1py570 Term)(@x2py437 Term)) (! (= (ApplyTT (ApplyTT False.init@tok @x1py570) @x2py437) (False.init @x1py570 @x2py437)) :pattern ((False.init @x1py570 @x2py437)) ))) :pattern ((ApplyTT @x0py393 False.init@tok)) )) :named function_token_typing_False.init))
(assert (! (forall ((@x0py394 Term)) (! (and (NoHoist @x0py394 (HasType False.preorder@tok Tm_arrow_257be5ee7da9f477702a7d2ee9bef0c9)) (forall ((@x1py571 Term)) (! (= (ApplyTT False.preorder@tok @x1py571) (False.preorder @x1py571)) :pattern ((False.preorder @x1py571)) ))) :pattern ((ApplyTT @x0py394 False.preorder@tok)) )) :named function_token_typing_False.preorder))
(assert (! (HasType False.r1 (False_Tm_refine_74ff667701f75cfbefa2fd1da9dbdc13 Prims.int)) :named function_token_typing_False.r1))
(assert (! (HasType False.r2 (False_Tm_refine_74ff667701f75cfbefa2fd1da9dbdc13 Prims.int)) :named function_token_typing_False.r2))
(assert (! (forall ((@x0py395 Term)) (! (and (NoHoist @x0py395 (HasType False.relation@tok Tm_arrow_257be5ee7da9f477702a7d2ee9bef0c9)) (forall ((@x1py572 Term)) (! (= (ApplyTT False.relation@tok @x1py572) (False.relation @x1py572)) :pattern ((False.relation @x1py572)) ))) :pattern ((ApplyTT @x0py395 False.relation@tok)) )) :named function_token_typing_False.relation))
(assert (! (forall ((@x0py396 Term)) (! (and (NoHoist @x0py396 (HasType False.step@tok (Tm_arrow_2d7f2b032d9f59f51dc6a0b9dd727adc Prims.unit))) (forall ((@x1py573 Term)(@x2py438 Term)(@x3py311 Term)(@x4py229 Term)(@x5py181 Term)(@x6py120 Term)(@x7py88 Term)(@x8py59 Term)) (! (= (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT False.step@tok @x1py573) @x2py438) @x3py311) @x4py229) @x5py181) @x6py120) @x7py88) @x8py59) (False.step @x1py573 @x2py438 @x3py311 @x4py229 @x5py181 @x6py120 @x7py88 @x8py59)) :pattern ((False.step @x1py573 @x2py438 @x3py311 @x4py229 @x5py181 @x6py120 @x7py88 @x8py59)) ))) :pattern ((ApplyTT @x0py396 False.step@tok)) )) :named function_token_typing_False.step))
(assert (! (forall ((@x0py397 Term)) (! (and (NoHoist @x0py397 (HasType False.uu___is_CalcRefl@tok (Tm_arrow_9eaf2ac78d771b56d59474a450ebd43c Prims.bool))) (forall ((@x1py574 Term)(@x2py439 Term)(@x3py312 Term)(@x4py230 Term)(@x5py182 Term)) (! (= (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT False.uu___is_CalcRefl@tok @x1py574) @x2py439) @x3py312) @x4py230) @x5py182) (False.uu___is_CalcRefl @x1py574 @x2py439 @x3py312 @x4py230 @x5py182)) :pattern ((False.uu___is_CalcRefl @x1py574 @x2py439 @x3py312 @x4py230 @x5py182)) ))) :pattern ((ApplyTT @x0py397 False.uu___is_CalcRefl@tok)) )) :named function_token_typing_False.uu___is_CalcRefl))
(assert (! (forall ((@x0py398 Term)) (! (and (NoHoist @x0py398 (HasType False.uu___is_CalcStep@tok (Tm_arrow_9eaf2ac78d771b56d59474a450ebd43c Prims.bool))) (forall ((@x1py575 Term)(@x2py440 Term)(@x3py313 Term)(@x4py231 Term)(@x5py183 Term)) (! (= (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT False.uu___is_CalcStep@tok @x1py575) @x2py440) @x3py313) @x4py231) @x5py183) (False.uu___is_CalcStep @x1py575 @x2py440 @x3py313 @x4py231 @x5py183)) :pattern ((False.uu___is_CalcStep @x1py575 @x2py440 @x3py313 @x4py231 @x5py183)) ))) :pattern ((ApplyTT @x0py398 False.uu___is_CalcStep@tok)) )) :named function_token_typing_False.uu___is_CalcStep))
(assert (! (forall ((@x0py399 Term)) (! (and (NoHoist @x0py399 (HasType FStar.Pervasives.__proj__CConst__item___0@tok (Tm_arrow_50d480c53f6a4b67c098ecbee395c271 Prims.string))) (forall ((@x1py576 Term)) (! (= (ApplyTT FStar.Pervasives.__proj__CConst__item___0@tok @x1py576) (FStar.Pervasives.__proj__CConst__item___0 @x1py576)) :pattern ((FStar.Pervasives.__proj__CConst__item___0 @x1py576)) ))) :pattern ((ApplyTT @x0py399 FStar.Pervasives.__proj__CConst__item___0@tok)) )) :named function_token_typing_FStar.Pervasives.__proj__CConst__item___0))
(assert (! (forall ((@x0py400 Term)) (! (and (NoHoist @x0py400 (HasType FStar.Pervasives.__proj__CEpilogue__item___0@tok (Tm_arrow_1dca680c8d3cb58c552551782d77cbad Prims.string))) (forall ((@x1py577 Term)) (! (= (ApplyTT FStar.Pervasives.__proj__CEpilogue__item___0@tok @x1py577) (FStar.Pervasives.__proj__CEpilogue__item___0 @x1py577)) :pattern ((FStar.Pervasives.__proj__CEpilogue__item___0 @x1py577)) ))) :pattern ((ApplyTT @x0py400 FStar.Pervasives.__proj__CEpilogue__item___0@tok)) )) :named function_token_typing_FStar.Pervasives.__proj__CEpilogue__item___0))
(assert (! (forall ((@x0py401 Term)) (! (and (NoHoist @x0py401 (HasType FStar.Pervasives.__proj__Comment__item___0@tok (Tm_arrow_51b345975888169ae4f69613c826965e Prims.string))) (forall ((@x1py578 Term)) (! (= (ApplyTT FStar.Pervasives.__proj__Comment__item___0@tok @x1py578) (FStar.Pervasives.__proj__Comment__item___0 @x1py578)) :pattern ((FStar.Pervasives.__proj__Comment__item___0 @x1py578)) ))) :pattern ((ApplyTT @x0py401 FStar.Pervasives.__proj__Comment__item___0@tok)) )) :named function_token_typing_FStar.Pervasives.__proj__Comment__item___0))
(assert (! (forall ((@x0py402 Term)) (! (and (NoHoist @x0py402 (HasType FStar.Pervasives.__proj__CPrologue__item___0@tok (Tm_arrow_414ca6c3d38bb3e0864e4a9d0cd19766 Prims.string))) (forall ((@x1py579 Term)) (! (= (ApplyTT FStar.Pervasives.__proj__CPrologue__item___0@tok @x1py579) (FStar.Pervasives.__proj__CPrologue__item___0 @x1py579)) :pattern ((FStar.Pervasives.__proj__CPrologue__item___0 @x1py579)) ))) :pattern ((ApplyTT @x0py402 FStar.Pervasives.__proj__CPrologue__item___0@tok)) )) :named function_token_typing_FStar.Pervasives.__proj__CPrologue__item___0))
(assert (! (forall ((@x0py403 Term)) (! (and (NoHoist @x0py403 (HasType FStar.Pervasives.__proj__E__item__e@tok (Tm_arrow_28bfbd2790e868cd7c317313e9ee5c1a Prims.exn))) (forall ((@x1py580 Term)(@x2py441 Term)) (! (= (ApplyTT (ApplyTT FStar.Pervasives.__proj__E__item__e@tok @x1py580) @x2py441) (FStar.Pervasives.__proj__E__item__e @x1py580 @x2py441)) :pattern ((FStar.Pervasives.__proj__E__item__e @x1py580 @x2py441)) ))) :pattern ((ApplyTT @x0py403 FStar.Pervasives.__proj__E__item__e@tok)) )) :named function_token_typing_FStar.Pervasives.__proj__E__item__e))
(assert (! (forall ((@x0py404 Term)) (! (and (NoHoist @x0py404 (HasType FStar.Pervasives.__proj__Err__item__msg@tok (Tm_arrow_8024419d86cafa6a8f5a740b84a7c291 Prims.string))) (forall ((@x1py581 Term)(@x2py442 Term)) (! (= (ApplyTT (ApplyTT FStar.Pervasives.__proj__Err__item__msg@tok @x1py581) @x2py442) (FStar.Pervasives.__proj__Err__item__msg @x1py581 @x2py442)) :pattern ((FStar.Pervasives.__proj__Err__item__msg @x1py581 @x2py442)) ))) :pattern ((ApplyTT @x0py404 FStar.Pervasives.__proj__Err__item__msg@tok)) )) :named function_token_typing_FStar.Pervasives.__proj__Err__item__msg))
(assert (! (forall ((@x0py405 Term)) (! (and (NoHoist @x0py405 (HasType FStar.Pervasives.__proj__Inl__item__v@tok Tm_arrow_33c5389e8c042e819d87a774e0987a42)) (forall ((@x1py582 Term)(@x2py443 Term)(@x3py314 Term)) (! (= (ApplyTT (ApplyTT (ApplyTT FStar.Pervasives.__proj__Inl__item__v@tok @x1py582) @x2py443) @x3py314) (FStar.Pervasives.__proj__Inl__item__v @x1py582 @x2py443 @x3py314)) :pattern ((FStar.Pervasives.__proj__Inl__item__v @x1py582 @x2py443 @x3py314)) ))) :pattern ((ApplyTT @x0py405 FStar.Pervasives.__proj__Inl__item__v@tok)) )) :named function_token_typing_FStar.Pervasives.__proj__Inl__item__v))
(assert (! (forall ((@x0py406 Term)) (! (and (NoHoist @x0py406 (HasType FStar.Pervasives.__proj__Inr__item__v@tok Tm_arrow_c3d46b8ae03d5e5761b37a519c1896ea)) (forall ((@x1py583 Term)(@x2py444 Term)(@x3py315 Term)) (! (= (ApplyTT (ApplyTT (ApplyTT FStar.Pervasives.__proj__Inr__item__v@tok @x1py583) @x2py444) @x3py315) (FStar.Pervasives.__proj__Inr__item__v @x1py583 @x2py444 @x3py315)) :pattern ((FStar.Pervasives.__proj__Inr__item__v @x1py583 @x2py444 @x3py315)) ))) :pattern ((ApplyTT @x0py406 FStar.Pervasives.__proj__Inr__item__v@tok)) )) :named function_token_typing_FStar.Pervasives.__proj__Inr__item__v))
(assert (! (forall ((@x0py407 Term)) (! (and (NoHoist @x0py407 (HasType FStar.Pervasives.__proj__Mkdtuple3__item___1@tok Tm_arrow_370eef0be624c130308f9f3e7fdda8fb)) (forall ((@x1py584 Term)(@x2py445 Term)(@x3py316 Term)(@x4py232 Term)) (! (= (ApplyTT (ApplyTT (ApplyTT (ApplyTT FStar.Pervasives.__proj__Mkdtuple3__item___1@tok @x1py584) @x2py445) @x3py316) @x4py232) (FStar.Pervasives.__proj__Mkdtuple3__item___1 @x1py584 @x2py445 @x3py316 @x4py232)) :pattern ((FStar.Pervasives.__proj__Mkdtuple3__item___1 @x1py584 @x2py445 @x3py316 @x4py232)) ))) :pattern ((ApplyTT @x0py407 FStar.Pervasives.__proj__Mkdtuple3__item___1@tok)) )) :named function_token_typing_FStar.Pervasives.__proj__Mkdtuple3__item___1))
(assert (! (forall ((@x0py408 Term)) (! (and (NoHoist @x0py408 (HasType FStar.Pervasives.__proj__Mkdtuple3__item___2@tok Tm_arrow_c314ab62524b1a2d1997954ac4c1ae99)) (forall ((@x1py585 Term)(@x2py446 Term)(@x3py317 Term)(@x4py233 Term)) (! (= (ApplyTT (ApplyTT (ApplyTT (ApplyTT FStar.Pervasives.__proj__Mkdtuple3__item___2@tok @x1py585) @x2py446) @x3py317) @x4py233) (FStar.Pervasives.__proj__Mkdtuple3__item___2 @x1py585 @x2py446 @x3py317 @x4py233)) :pattern ((FStar.Pervasives.__proj__Mkdtuple3__item___2 @x1py585 @x2py446 @x3py317 @x4py233)) ))) :pattern ((ApplyTT @x0py408 FStar.Pervasives.__proj__Mkdtuple3__item___2@tok)) )) :named function_token_typing_FStar.Pervasives.__proj__Mkdtuple3__item___2))
(assert (! (forall ((@x0py409 Term)) (! (and (NoHoist @x0py409 (HasType FStar.Pervasives.__proj__Mkdtuple3__item___3@tok Tm_arrow_bec8a4f6afbb1e18e2d9aca8cce42b29)) (forall ((@x1py586 Term)(@x2py447 Term)(@x3py318 Term)(@x4py234 Term)) (! (= (ApplyTT (ApplyTT (ApplyTT (ApplyTT FStar.Pervasives.__proj__Mkdtuple3__item___3@tok @x1py586) @x2py447) @x3py318) @x4py234) (FStar.Pervasives.__proj__Mkdtuple3__item___3 @x1py586 @x2py447 @x3py318 @x4py234)) :pattern ((FStar.Pervasives.__proj__Mkdtuple3__item___3 @x1py586 @x2py447 @x3py318 @x4py234)) ))) :pattern ((ApplyTT @x0py409 FStar.Pervasives.__proj__Mkdtuple3__item___3@tok)) )) :named function_token_typing_FStar.Pervasives.__proj__Mkdtuple3__item___3))
(assert (! (forall ((@x0py410 Term)) (! (and (NoHoist @x0py410 (HasType FStar.Pervasives.__proj__Mkdtuple4__item___1@tok Tm_arrow_627359304a35057805507fd05f62a750)) (forall ((@x1py587 Term)(@x2py448 Term)(@x3py319 Term)(@x4py235 Term)(@x5py184 Term)) (! (= (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT FStar.Pervasives.__proj__Mkdtuple4__item___1@tok @x1py587) @x2py448) @x3py319) @x4py235) @x5py184) (FStar.Pervasives.__proj__Mkdtuple4__item___1 @x1py587 @x2py448 @x3py319 @x4py235 @x5py184)) :pattern ((FStar.Pervasives.__proj__Mkdtuple4__item___1 @x1py587 @x2py448 @x3py319 @x4py235 @x5py184)) ))) :pattern ((ApplyTT @x0py410 FStar.Pervasives.__proj__Mkdtuple4__item___1@tok)) )) :named function_token_typing_FStar.Pervasives.__proj__Mkdtuple4__item___1))
(assert (! (forall ((@x0py411 Term)) (! (and (NoHoist @x0py411 (HasType FStar.Pervasives.__proj__Mkdtuple4__item___2@tok Tm_arrow_894aed5f2f01f9fc4bb62bf7e2d70f35)) (forall ((@x1py588 Term)(@x2py449 Term)(@x3py320 Term)(@x4py236 Term)(@x5py185 Term)) (! (= (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT FStar.Pervasives.__proj__Mkdtuple4__item___2@tok @x1py588) @x2py449) @x3py320) @x4py236) @x5py185) (FStar.Pervasives.__proj__Mkdtuple4__item___2 @x1py588 @x2py449 @x3py320 @x4py236 @x5py185)) :pattern ((FStar.Pervasives.__proj__Mkdtuple4__item___2 @x1py588 @x2py449 @x3py320 @x4py236 @x5py185)) ))) :pattern ((ApplyTT @x0py411 FStar.Pervasives.__proj__Mkdtuple4__item___2@tok)) )) :named function_token_typing_FStar.Pervasives.__proj__Mkdtuple4__item___2))
(assert (! (forall ((@x0py412 Term)) (! (and (NoHoist @x0py412 (HasType FStar.Pervasives.__proj__Mkdtuple4__item___3@tok Tm_arrow_1dac41f442c1cc7b5405768e36ae98f9)) (forall ((@x1py589 Term)(@x2py450 Term)(@x3py321 Term)(@x4py237 Term)(@x5py186 Term)) (! (= (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT FStar.Pervasives.__proj__Mkdtuple4__item___3@tok @x1py589) @x2py450) @x3py321) @x4py237) @x5py186) (FStar.Pervasives.__proj__Mkdtuple4__item___3 @x1py589 @x2py450 @x3py321 @x4py237 @x5py186)) :pattern ((FStar.Pervasives.__proj__Mkdtuple4__item___3 @x1py589 @x2py450 @x3py321 @x4py237 @x5py186)) ))) :pattern ((ApplyTT @x0py412 FStar.Pervasives.__proj__Mkdtuple4__item___3@tok)) )) :named function_token_typing_FStar.Pervasives.__proj__Mkdtuple4__item___3))
(assert (! (forall ((@x0py413 Term)) (! (and (NoHoist @x0py413 (HasType FStar.Pervasives.__proj__Mkdtuple4__item___4@tok Tm_arrow_f17dd97b1f287869d6a3add69232601b)) (forall ((@x1py590 Term)(@x2py451 Term)(@x3py322 Term)(@x4py238 Term)(@x5py187 Term)) (! (= (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT FStar.Pervasives.__proj__Mkdtuple4__item___4@tok @x1py590) @x2py451) @x3py322) @x4py238) @x5py187) (FStar.Pervasives.__proj__Mkdtuple4__item___4 @x1py590 @x2py451 @x3py322 @x4py238 @x5py187)) :pattern ((FStar.Pervasives.__proj__Mkdtuple4__item___4 @x1py590 @x2py451 @x3py322 @x4py238 @x5py187)) ))) :pattern ((ApplyTT @x0py413 FStar.Pervasives.__proj__Mkdtuple4__item___4@tok)) )) :named function_token_typing_FStar.Pervasives.__proj__Mkdtuple4__item___4))
(assert (! (forall ((@x0py414 Term)) (! (and (NoHoist @x0py414 (HasType FStar.Pervasives.__proj__PpxDerivingShowConstant__item___0@tok (Tm_arrow_a7b615889edcbdfadf24ad49f4c2628e Prims.string))) (forall ((@x1py591 Term)) (! (= (ApplyTT FStar.Pervasives.__proj__PpxDerivingShowConstant__item___0@tok @x1py591) (FStar.Pervasives.__proj__PpxDerivingShowConstant__item___0 @x1py591)) :pattern ((FStar.Pervasives.__proj__PpxDerivingShowConstant__item___0 @x1py591)) ))) :pattern ((ApplyTT @x0py414 FStar.Pervasives.__proj__PpxDerivingShowConstant__item___0@tok)) )) :named function_token_typing_FStar.Pervasives.__proj__PpxDerivingShowConstant__item___0))
(assert (! (forall ((@x0py415 Term)) (! (and (NoHoist @x0py415 (HasType FStar.Pervasives.__proj__V__item__v@tok Tm_arrow_bf84b86e4714dba88d5fa227c56fabbb)) (forall ((@x1py592 Term)(@x2py452 Term)) (! (= (ApplyTT (ApplyTT FStar.Pervasives.__proj__V__item__v@tok @x1py592) @x2py452) (FStar.Pervasives.__proj__V__item__v @x1py592 @x2py452)) :pattern ((FStar.Pervasives.__proj__V__item__v @x1py592 @x2py452)) ))) :pattern ((ApplyTT @x0py415 FStar.Pervasives.__proj__V__item__v@tok)) )) :named function_token_typing_FStar.Pervasives.__proj__V__item__v))
(assert (! (forall ((@x0py416 Term)) (! (and (NoHoist @x0py416 (HasType FStar.Pervasives.all_assert_p@tok (Tm_arrow_1e34c94069c60657ba290f517d081e8f Prims.logical))) (forall ((@x1py593 Term)(@x2py453 Term)(@x3py323 Term)(@x4py239 Term)(@x5py188 Term)(@x6py121 Term)) (! (= (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT FStar.Pervasives.all_assert_p@tok @x1py593) @x2py453) @x3py323) @x4py239) @x5py188) @x6py121) (FStar.Pervasives.all_assert_p @x1py593 @x2py453 @x3py323 @x4py239 @x5py188 @x6py121)) :pattern ((FStar.Pervasives.all_assert_p @x1py593 @x2py453 @x3py323 @x4py239 @x5py188 @x6py121)) ))) :pattern ((ApplyTT @x0py416 FStar.Pervasives.all_assert_p@tok)) )) :named function_token_typing_FStar.Pervasives.all_assert_p))
(assert (! (forall ((@x0py417 Term)) (! (and (NoHoist @x0py417 (HasType FStar.Pervasives.all_assume_p@tok (Tm_arrow_1e34c94069c60657ba290f517d081e8f Prims.logical))) (forall ((@x1py594 Term)(@x2py454 Term)(@x3py324 Term)(@x4py240 Term)(@x5py189 Term)(@x6py122 Term)) (! (= (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT FStar.Pervasives.all_assume_p@tok @x1py594) @x2py454) @x3py324) @x4py240) @x5py189) @x6py122) (FStar.Pervasives.all_assume_p @x1py594 @x2py454 @x3py324 @x4py240 @x5py189 @x6py122)) :pattern ((FStar.Pervasives.all_assume_p @x1py594 @x2py454 @x3py324 @x4py240 @x5py189 @x6py122)) ))) :pattern ((ApplyTT @x0py417 FStar.Pervasives.all_assume_p@tok)) )) :named function_token_typing_FStar.Pervasives.all_assume_p))
(assert (! (forall ((@x0py418 Term)) (! (and (NoHoist @x0py418 (HasType FStar.Pervasives.all_bind_wp@tok (Tm_arrow_646607d9b79b27cb700948778ab8dc33 Prims.range))) (forall ((@x1py595 Term)(@x2py455 Term)(@x3py325 Term)(@x4py241 Term)(@x5py190 Term)(@x6py123 Term)(@x7py89 Term)(@x8py60 Term)) (! (= (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT FStar.Pervasives.all_bind_wp@tok @x1py595) @x2py455) @x3py325) @x4py241) @x5py190) @x6py123) @x7py89) @x8py60) (FStar.Pervasives.all_bind_wp @x1py595 @x2py455 @x3py325 @x4py241 @x5py190 @x6py123 @x7py89 @x8py60)) :pattern ((FStar.Pervasives.all_bind_wp @x1py595 @x2py455 @x3py325 @x4py241 @x5py190 @x6py123 @x7py89 @x8py60)) ))) :pattern ((ApplyTT @x0py418 FStar.Pervasives.all_bind_wp@tok)) )) :named function_token_typing_FStar.Pervasives.all_bind_wp))
(assert (! (forall ((@x0py419 Term)) (! (and (NoHoist @x0py419 (HasType FStar.Pervasives.all_close_wp@tok (Tm_arrow_82af1f1c7453b4c313f49c7e70e41650 Prims.logical))) (forall ((@x1py596 Term)(@x2py456 Term)(@x3py326 Term)(@x4py242 Term)(@x5py191 Term)(@x6py124 Term)) (! (= (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT FStar.Pervasives.all_close_wp@tok @x1py596) @x2py456) @x3py326) @x4py242) @x5py191) @x6py124) (FStar.Pervasives.all_close_wp @x1py596 @x2py456 @x3py326 @x4py242 @x5py191 @x6py124)) :pattern ((FStar.Pervasives.all_close_wp @x1py596 @x2py456 @x3py326 @x4py242 @x5py191 @x6py124)) ))) :pattern ((ApplyTT @x0py419 FStar.Pervasives.all_close_wp@tok)) )) :named function_token_typing_FStar.Pervasives.all_close_wp))
(assert (! (forall ((@x0py420 Term)) (! (and (NoHoist @x0py420 (HasType FStar.Pervasives.all_if_then_else@tok (Tm_arrow_f2144e812b1bb22d3fc2a233dbf4e7ad Prims.logical))) (forall ((@x1py597 Term)(@x2py457 Term)(@x3py327 Term)(@x4py243 Term)(@x5py192 Term)(@x6py125 Term)(@x7py90 Term)) (! (= (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT FStar.Pervasives.all_if_then_else@tok @x1py597) @x2py457) @x3py327) @x4py243) @x5py192) @x6py125) @x7py90) (FStar.Pervasives.all_if_then_else @x1py597 @x2py457 @x3py327 @x4py243 @x5py192 @x6py125 @x7py90)) :pattern ((FStar.Pervasives.all_if_then_else @x1py597 @x2py457 @x3py327 @x4py243 @x5py192 @x6py125 @x7py90)) ))) :pattern ((ApplyTT @x0py420 FStar.Pervasives.all_if_then_else@tok)) )) :named function_token_typing_FStar.Pervasives.all_if_then_else))
(assert (! (forall ((@x0py421 Term)) (! (and (NoHoist @x0py421 (HasType FStar.Pervasives.all_ite_wp@tok (Tm_arrow_db526519745d691ef343e32a1084673b Prims.logical))) (forall ((@x1py598 Term)(@x2py458 Term)(@x3py328 Term)(@x4py244 Term)(@x5py193 Term)) (! (= (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT FStar.Pervasives.all_ite_wp@tok @x1py598) @x2py458) @x3py328) @x4py244) @x5py193) (FStar.Pervasives.all_ite_wp @x1py598 @x2py458 @x3py328 @x4py244 @x5py193)) :pattern ((FStar.Pervasives.all_ite_wp @x1py598 @x2py458 @x3py328 @x4py244 @x5py193)) ))) :pattern ((ApplyTT @x0py421 FStar.Pervasives.all_ite_wp@tok)) )) :named function_token_typing_FStar.Pervasives.all_ite_wp))
(assert (! (forall ((@x0py422 Term)) (! (and (NoHoist @x0py422 (HasType FStar.Pervasives.all_null_wp@tok (Tm_arrow_5caeced02ae19cd28fdaa3e41ea7d339 Prims.logical))) (forall ((@x1py599 Term)(@x2py459 Term)(@x3py329 Term)(@x4py245 Term)) (! (= (ApplyTT (ApplyTT (ApplyTT (ApplyTT FStar.Pervasives.all_null_wp@tok @x1py599) @x2py459) @x3py329) @x4py245) (FStar.Pervasives.all_null_wp @x1py599 @x2py459 @x3py329 @x4py245)) :pattern ((FStar.Pervasives.all_null_wp @x1py599 @x2py459 @x3py329 @x4py245)) ))) :pattern ((ApplyTT @x0py422 FStar.Pervasives.all_null_wp@tok)) )) :named function_token_typing_FStar.Pervasives.all_null_wp))
(assert (! (forall ((@x0py423 Term)) (! (and (NoHoist @x0py423 (HasType FStar.Pervasives.all_post_h@tok Tm_arrow_30967c52768a603d18eb4835e5ba8f79)) (forall ((@x1py600 Term)(@x2py460 Term)) (! (= (ApplyTT (ApplyTT FStar.Pervasives.all_post_h@tok @x1py600) @x2py460) (FStar.Pervasives.all_post_h @x1py600 @x2py460)) :pattern ((FStar.Pervasives.all_post_h @x1py600 @x2py460)) ))) :pattern ((ApplyTT @x0py423 FStar.Pervasives.all_post_h@tok)) )) :named function_token_typing_FStar.Pervasives.all_post_h))
(assert (! (forall ((@x0py424 Term)) (! (and (NoHoist @x0py424 (HasType FStar.Pervasives.all_post_h_@tok Tm_arrow_2b9e6d83dc78155badfb9f85c9c4c887)) (forall ((@x1py601 Term)(@x2py461 Term)(@x3py330 Term)) (! (= (ApplyTT (ApplyTT (ApplyTT FStar.Pervasives.all_post_h_@tok @x1py601) @x2py461) @x3py330) (FStar.Pervasives.all_post_h_ @x1py601 @x2py461 @x3py330)) :pattern ((FStar.Pervasives.all_post_h_ @x1py601 @x2py461 @x3py330)) ))) :pattern ((ApplyTT @x0py424 FStar.Pervasives.all_post_h_@tok)) )) :named function_token_typing_FStar.Pervasives.all_post_h_))
(assert (! (forall ((@x0py425 Term)) (! (and (NoHoist @x0py425 (HasType FStar.Pervasives.all_pre_h@tok Tm_arrow_257be5ee7da9f477702a7d2ee9bef0c9)) (forall ((@x1py602 Term)) (! (= (ApplyTT FStar.Pervasives.all_pre_h@tok @x1py602) (FStar.Pervasives.all_pre_h @x1py602)) :pattern ((FStar.Pervasives.all_pre_h @x1py602)) ))) :pattern ((ApplyTT @x0py425 FStar.Pervasives.all_pre_h@tok)) )) :named function_token_typing_FStar.Pervasives.all_pre_h))
(assert (! (forall ((@x0py426 Term)) (! (and (NoHoist @x0py426 (HasType FStar.Pervasives.all_return@tok Tm_arrow_c550a8e282abd0593a028dd71c851c33)) (forall ((@x1py603 Term)(@x2py462 Term)(@x3py331 Term)(@x4py246 Term)) (! (= (ApplyTT (ApplyTT (ApplyTT (ApplyTT FStar.Pervasives.all_return@tok @x1py603) @x2py462) @x3py331) @x4py246) (FStar.Pervasives.all_return @x1py603 @x2py462 @x3py331 @x4py246)) :pattern ((FStar.Pervasives.all_return @x1py603 @x2py462 @x3py331 @x4py246)) ))) :pattern ((ApplyTT @x0py426 FStar.Pervasives.all_return@tok)) )) :named function_token_typing_FStar.Pervasives.all_return))
(assert (! (forall ((@x0py427 Term)) (! (and (NoHoist @x0py427 (HasType FStar.Pervasives.all_stronger@tok (Tm_arrow_059768e110c940ea8bff9492771ddcc8 Prims.logical))) (forall ((@x1py604 Term)(@x2py463 Term)(@x3py332 Term)(@x4py247 Term)) (! (= (ApplyTT (ApplyTT (ApplyTT (ApplyTT FStar.Pervasives.all_stronger@tok @x1py604) @x2py463) @x3py332) @x4py247) (FStar.Pervasives.all_stronger @x1py604 @x2py463 @x3py332 @x4py247)) :pattern ((FStar.Pervasives.all_stronger @x1py604 @x2py463 @x3py332 @x4py247)) ))) :pattern ((ApplyTT @x0py427 FStar.Pervasives.all_stronger@tok)) )) :named function_token_typing_FStar.Pervasives.all_stronger))
(assert (! (forall ((@x0py428 Term)) (! (and (NoHoist @x0py428 (HasType FStar.Pervasives.all_trivial@tok (Tm_arrow_5f168af91094f21c4a68cd41bed2b946 Prims.logical))) (forall ((@x1py605 Term)(@x2py464 Term)(@x3py333 Term)) (! (= (ApplyTT (ApplyTT (ApplyTT FStar.Pervasives.all_trivial@tok @x1py605) @x2py464) @x3py333) (FStar.Pervasives.all_trivial @x1py605 @x2py464 @x3py333)) :pattern ((FStar.Pervasives.all_trivial @x1py605 @x2py464 @x3py333)) ))) :pattern ((ApplyTT @x0py428 FStar.Pervasives.all_trivial@tok)) )) :named function_token_typing_FStar.Pervasives.all_trivial))
(assert (! (forall ((@x0py429 Term)) (! (and (NoHoist @x0py429 (HasType FStar.Pervasives.all_wp_h@tok Tm_arrow_30967c52768a603d18eb4835e5ba8f79)) (forall ((@x1py606 Term)(@x2py465 Term)) (! (= (ApplyTT (ApplyTT FStar.Pervasives.all_wp_h@tok @x1py606) @x2py465) (FStar.Pervasives.all_wp_h @x1py606 @x2py465)) :pattern ((FStar.Pervasives.all_wp_h @x1py606 @x2py465)) ))) :pattern ((ApplyTT @x0py429 FStar.Pervasives.all_wp_h@tok)) )) :named function_token_typing_FStar.Pervasives.all_wp_h))
(assert (! (forall ((@x0py430 Term)) (! (and (NoHoist @x0py430 (HasType FStar.Pervasives.allow_inversion@tok (Tm_arrow_c7a05ebcf00d9d5ea2ad28cd2649cf23 Prims.unit))) (forall ((@x1py607 Term)) (! (= (ApplyTT FStar.Pervasives.allow_inversion@tok @x1py607) (FStar.Pervasives.allow_inversion @x1py607)) :pattern ((FStar.Pervasives.allow_inversion @x1py607)) ))) :pattern ((ApplyTT @x0py430 FStar.Pervasives.allow_inversion@tok)) )) :named function_token_typing_FStar.Pervasives.allow_inversion))
(assert (! (forall ((@x0py431 Term)) (! (and (NoHoist @x0py431 (HasType FStar.Pervasives.deprecated@tok (Tm_arrow_9cb3c953faf527c316d427b2ce8bd81b Prims.unit Prims.string))) (forall ((@x1py608 Term)) (! (= (ApplyTT FStar.Pervasives.deprecated@tok @x1py608) (FStar.Pervasives.deprecated @x1py608)) :pattern ((FStar.Pervasives.deprecated @x1py608)) ))) :pattern ((ApplyTT @x0py431 FStar.Pervasives.deprecated@tok)) )) :named function_token_typing_FStar.Pervasives.deprecated))
(assert (! (forall ((@x0py432 Term)) (! (and (NoHoist @x0py432 (HasType FStar.Pervasives.dfst@tok Tm_arrow_ec4aa512bc54da67a0356075af124e44)) (forall ((@x1py609 Term)(@x2py466 Term)(@x3py334 Term)) (! (= (ApplyTT (ApplyTT (ApplyTT FStar.Pervasives.dfst@tok @x1py609) @x2py466) @x3py334) (FStar.Pervasives.dfst @x1py609 @x2py466 @x3py334)) :pattern ((FStar.Pervasives.dfst @x1py609 @x2py466 @x3py334)) ))) :pattern ((ApplyTT @x0py432 FStar.Pervasives.dfst@tok)) )) :named function_token_typing_FStar.Pervasives.dfst))
(assert (! (forall ((@x0py433 Term)) (! (and (NoHoist @x0py433 (HasType FStar.Pervasives.dsnd@tok Tm_arrow_2e5fda2477c3f2ade2b68a9685bf6393)) (forall ((@x1py610 Term)(@x2py467 Term)(@x3py335 Term)) (! (= (ApplyTT (ApplyTT (ApplyTT FStar.Pervasives.dsnd@tok @x1py610) @x2py467) @x3py335) (FStar.Pervasives.dsnd @x1py610 @x2py467 @x3py335)) :pattern ((FStar.Pervasives.dsnd @x1py610 @x2py467 @x3py335)) ))) :pattern ((ApplyTT @x0py433 FStar.Pervasives.dsnd@tok)) )) :named function_token_typing_FStar.Pervasives.dsnd))
(assert (! (forall ((@x0py434 Term)) (! (and (NoHoist @x0py434 (HasType FStar.Pervasives.ex_assert_p@tok (Tm_arrow_4e8df289938ae02937cd1c94aba2cf20 Prims.logical))) (forall ((@x1py611 Term)(@x2py468 Term)(@x3py336 Term)(@x4py248 Term)) (! (= (ApplyTT (ApplyTT (ApplyTT (ApplyTT FStar.Pervasives.ex_assert_p@tok @x1py611) @x2py468) @x3py336) @x4py248) (FStar.Pervasives.ex_assert_p @x1py611 @x2py468 @x3py336 @x4py248)) :pattern ((FStar.Pervasives.ex_assert_p @x1py611 @x2py468 @x3py336 @x4py248)) ))) :pattern ((ApplyTT @x0py434 FStar.Pervasives.ex_assert_p@tok)) )) :named function_token_typing_FStar.Pervasives.ex_assert_p))
(assert (! (forall ((@x0py435 Term)) (! (and (NoHoist @x0py435 (HasType FStar.Pervasives.ex_assume_p@tok (Tm_arrow_4e8df289938ae02937cd1c94aba2cf20 Prims.logical))) (forall ((@x1py612 Term)(@x2py469 Term)(@x3py337 Term)(@x4py249 Term)) (! (= (ApplyTT (ApplyTT (ApplyTT (ApplyTT FStar.Pervasives.ex_assume_p@tok @x1py612) @x2py469) @x3py337) @x4py249) (FStar.Pervasives.ex_assume_p @x1py612 @x2py469 @x3py337 @x4py249)) :pattern ((FStar.Pervasives.ex_assume_p @x1py612 @x2py469 @x3py337 @x4py249)) ))) :pattern ((ApplyTT @x0py435 FStar.Pervasives.ex_assume_p@tok)) )) :named function_token_typing_FStar.Pervasives.ex_assume_p))
(assert (! (forall ((@x0py436 Term)) (! (and (NoHoist @x0py436 (HasType FStar.Pervasives.ex_bind_wp@tok (Tm_arrow_dd2de7e516014096b8b41947307b7781 Prims.range))) (forall ((@x1py613 Term)(@x2py470 Term)(@x3py338 Term)(@x4py250 Term)(@x5py194 Term)(@x6py126 Term)) (! (= (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT FStar.Pervasives.ex_bind_wp@tok @x1py613) @x2py470) @x3py338) @x4py250) @x5py194) @x6py126) (FStar.Pervasives.ex_bind_wp @x1py613 @x2py470 @x3py338 @x4py250 @x5py194 @x6py126)) :pattern ((FStar.Pervasives.ex_bind_wp @x1py613 @x2py470 @x3py338 @x4py250 @x5py194 @x6py126)) ))) :pattern ((ApplyTT @x0py436 FStar.Pervasives.ex_bind_wp@tok)) )) :named function_token_typing_FStar.Pervasives.ex_bind_wp))
(assert (! (forall ((@x0py437 Term)) (! (and (NoHoist @x0py437 (HasType FStar.Pervasives.ex_close_wp@tok (Tm_arrow_eff36c64f2c347faf7149c68721d618a Prims.logical))) (forall ((@x1py614 Term)(@x2py471 Term)(@x3py339 Term)(@x4py251 Term)) (! (= (ApplyTT (ApplyTT (ApplyTT (ApplyTT FStar.Pervasives.ex_close_wp@tok @x1py614) @x2py471) @x3py339) @x4py251) (FStar.Pervasives.ex_close_wp @x1py614 @x2py471 @x3py339 @x4py251)) :pattern ((FStar.Pervasives.ex_close_wp @x1py614 @x2py471 @x3py339 @x4py251)) ))) :pattern ((ApplyTT @x0py437 FStar.Pervasives.ex_close_wp@tok)) )) :named function_token_typing_FStar.Pervasives.ex_close_wp))
(assert (! (forall ((@x0py438 Term)) (! (and (NoHoist @x0py438 (HasType FStar.Pervasives.ex_if_then_else@tok (Tm_arrow_425389aaf0306ac889308852f2d13f76 Prims.logical))) (forall ((@x1py615 Term)(@x2py472 Term)(@x3py340 Term)(@x4py252 Term)(@x5py195 Term)) (! (= (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT FStar.Pervasives.ex_if_then_else@tok @x1py615) @x2py472) @x3py340) @x4py252) @x5py195) (FStar.Pervasives.ex_if_then_else @x1py615 @x2py472 @x3py340 @x4py252 @x5py195)) :pattern ((FStar.Pervasives.ex_if_then_else @x1py615 @x2py472 @x3py340 @x4py252 @x5py195)) ))) :pattern ((ApplyTT @x0py438 FStar.Pervasives.ex_if_then_else@tok)) )) :named function_token_typing_FStar.Pervasives.ex_if_then_else))
(assert (! (forall ((@x0py439 Term)) (! (and (NoHoist @x0py439 (HasType FStar.Pervasives.ex_ite_wp@tok (Tm_arrow_641a228fe9177bb850d1efb25c4ca0d9 Prims.logical))) (forall ((@x1py616 Term)(@x2py473 Term)(@x3py341 Term)) (! (= (ApplyTT (ApplyTT (ApplyTT FStar.Pervasives.ex_ite_wp@tok @x1py616) @x2py473) @x3py341) (FStar.Pervasives.ex_ite_wp @x1py616 @x2py473 @x3py341)) :pattern ((FStar.Pervasives.ex_ite_wp @x1py616 @x2py473 @x3py341)) ))) :pattern ((ApplyTT @x0py439 FStar.Pervasives.ex_ite_wp@tok)) )) :named function_token_typing_FStar.Pervasives.ex_ite_wp))
(assert (! (forall ((@x0py440 Term)) (! (and (NoHoist @x0py440 (HasType FStar.Pervasives.ex_null_wp@tok (Tm_arrow_63177eca1c58ba394d666028d123748d Prims.logical))) (forall ((@x1py617 Term)(@x2py474 Term)) (! (= (ApplyTT (ApplyTT FStar.Pervasives.ex_null_wp@tok @x1py617) @x2py474) (FStar.Pervasives.ex_null_wp @x1py617 @x2py474)) :pattern ((FStar.Pervasives.ex_null_wp @x1py617 @x2py474)) ))) :pattern ((ApplyTT @x0py440 FStar.Pervasives.ex_null_wp@tok)) )) :named function_token_typing_FStar.Pervasives.ex_null_wp))
(assert (! (forall ((@x0py441 Term)) (! (and (NoHoist @x0py441 (HasType FStar.Pervasives.ex_post@tok Tm_arrow_257be5ee7da9f477702a7d2ee9bef0c9)) (forall ((@x1py618 Term)) (! (= (ApplyTT FStar.Pervasives.ex_post@tok @x1py618) (FStar.Pervasives.ex_post @x1py618)) :pattern ((FStar.Pervasives.ex_post @x1py618)) ))) :pattern ((ApplyTT @x0py441 FStar.Pervasives.ex_post@tok)) )) :named function_token_typing_FStar.Pervasives.ex_post))
(assert (! (forall ((@x0py442 Term)) (! (and (NoHoist @x0py442 (HasType FStar.Pervasives.ex_post_@tok Tm_arrow_30967c52768a603d18eb4835e5ba8f79)) (forall ((@x1py619 Term)(@x2py475 Term)) (! (= (ApplyTT (ApplyTT FStar.Pervasives.ex_post_@tok @x1py619) @x2py475) (FStar.Pervasives.ex_post_ @x1py619 @x2py475)) :pattern ((FStar.Pervasives.ex_post_ @x1py619 @x2py475)) ))) :pattern ((ApplyTT @x0py442 FStar.Pervasives.ex_post_@tok)) )) :named function_token_typing_FStar.Pervasives.ex_post_))
(assert (! (forall ((@x0py443 Term)) (! (and (NoHoist @x0py443 (HasType FStar.Pervasives.ex_return@tok Tm_arrow_4eb2e0118149efb6019111cf994e0f6b)) (forall ((@x1py620 Term)(@x2py476 Term)(@x3py342 Term)) (! (= (ApplyTT (ApplyTT (ApplyTT FStar.Pervasives.ex_return@tok @x1py620) @x2py476) @x3py342) (FStar.Pervasives.ex_return @x1py620 @x2py476 @x3py342)) :pattern ((FStar.Pervasives.ex_return @x1py620 @x2py476 @x3py342)) ))) :pattern ((ApplyTT @x0py443 FStar.Pervasives.ex_return@tok)) )) :named function_token_typing_FStar.Pervasives.ex_return))
(assert (! (forall ((@x0py444 Term)) (! (and (NoHoist @x0py444 (HasType FStar.Pervasives.ex_stronger@tok (Tm_arrow_ad2a5a45548b5666753ded1bcb23ab10 Prims.logical))) (forall ((@x1py621 Term)(@x2py477 Term)(@x3py343 Term)) (! (= (ApplyTT (ApplyTT (ApplyTT FStar.Pervasives.ex_stronger@tok @x1py621) @x2py477) @x3py343) (FStar.Pervasives.ex_stronger @x1py621 @x2py477 @x3py343)) :pattern ((FStar.Pervasives.ex_stronger @x1py621 @x2py477 @x3py343)) ))) :pattern ((ApplyTT @x0py444 FStar.Pervasives.ex_stronger@tok)) )) :named function_token_typing_FStar.Pervasives.ex_stronger))
(assert (! (forall ((@x0py445 Term)) (! (and (NoHoist @x0py445 (HasType FStar.Pervasives.ex_trivial@tok (Tm_arrow_5221ddbf8295a5d706d58e293ca3b4fe FStar.Pervasives.ex_pre))) (forall ((@x1py622 Term)(@x2py478 Term)) (! (= (ApplyTT (ApplyTT FStar.Pervasives.ex_trivial@tok @x1py622) @x2py478) (FStar.Pervasives.ex_trivial @x1py622 @x2py478)) :pattern ((FStar.Pervasives.ex_trivial @x1py622 @x2py478)) ))) :pattern ((ApplyTT @x0py445 FStar.Pervasives.ex_trivial@tok)) )) :named function_token_typing_FStar.Pervasives.ex_trivial))
(assert (! (forall ((@x0py446 Term)) (! (and (NoHoist @x0py446 (HasType FStar.Pervasives.ex_wp@tok Tm_arrow_257be5ee7da9f477702a7d2ee9bef0c9)) (forall ((@x1py623 Term)) (! (= (ApplyTT FStar.Pervasives.ex_wp@tok @x1py623) (FStar.Pervasives.ex_wp @x1py623)) :pattern ((FStar.Pervasives.ex_wp @x1py623)) ))) :pattern ((ApplyTT @x0py446 FStar.Pervasives.ex_wp@tok)) )) :named function_token_typing_FStar.Pervasives.ex_wp))
(assert (! (forall ((@x0py447 Term)) (! (and (NoHoist @x0py447 (HasType FStar.Pervasives.fail@tok (Tm_arrow_52c7e04c1aef70d52ef99d2cc9753aed Prims.unit Prims.int))) (forall ((@x1py624 Term)) (! (= (ApplyTT FStar.Pervasives.fail@tok @x1py624) (FStar.Pervasives.fail @x1py624)) :pattern ((FStar.Pervasives.fail @x1py624)) ))) :pattern ((ApplyTT @x0py447 FStar.Pervasives.fail@tok)) )) :named function_token_typing_FStar.Pervasives.fail))
(assert (! (forall ((@x0py448 Term)) (! (and (NoHoist @x0py448 (HasType FStar.Pervasives.false_elim@tok (Tm_arrow_a3b523cfd66a616c0e641efdb75e9e3e Prims.unit))) (forall ((@x1py625 Term)(@x2py479 Term)) (! (= (ApplyTT (ApplyTT FStar.Pervasives.false_elim@tok @x1py625) @x2py479) (FStar.Pervasives.false_elim @x1py625 @x2py479)) :pattern ((FStar.Pervasives.false_elim @x1py625 @x2py479)) ))) :pattern ((ApplyTT @x0py448 FStar.Pervasives.false_elim@tok)) )) :named function_token_typing_FStar.Pervasives.false_elim))
(assert (! (forall ((@x0py449 Term)) (! (and (NoHoist @x0py449 (HasType FStar.Pervasives.id@tok Tm_arrow_fa4e3ee4a3dfa402363cd0693fcbfca4)) (forall ((@x1py626 Term)(@x2py480 Term)) (! (= (ApplyTT (ApplyTT FStar.Pervasives.id@tok @x1py626) @x2py480) (FStar.Pervasives.id @x1py626 @x2py480)) :pattern ((FStar.Pervasives.id @x1py626 @x2py480)) ))) :pattern ((ApplyTT @x0py449 FStar.Pervasives.id@tok)) )) :named function_token_typing_FStar.Pervasives.id))
(assert (! (forall ((@x0py450 Term)) (! (and (NoHoist @x0py450 (HasType FStar.Pervasives.ignore@tok (Tm_arrow_756e7b0ac20279dfcded24e5a99a27b8 Prims.unit))) (forall ((@x1py627 Term)(@x2py481 Term)) (! (= (ApplyTT (ApplyTT FStar.Pervasives.ignore@tok @x1py627) @x2py481) (FStar.Pervasives.ignore @x1py627 @x2py481)) :pattern ((FStar.Pervasives.ignore @x1py627 @x2py481)) ))) :pattern ((ApplyTT @x0py450 FStar.Pervasives.ignore@tok)) )) :named function_token_typing_FStar.Pervasives.ignore))
(assert (! (forall ((@x0py451 Term)) (! (and (NoHoist @x0py451 (HasType FStar.Pervasives.inversion@tok (Tm_arrow_5002e807b09214fd2f4ddb0ecd7cc6a9 Prims.logical))) (forall ((@x1py628 Term)) (! (= (ApplyTT FStar.Pervasives.inversion@tok @x1py628) (FStar.Pervasives.inversion @x1py628)) :pattern ((FStar.Pervasives.inversion @x1py628)) ))) :pattern ((ApplyTT @x0py451 FStar.Pervasives.inversion@tok)) )) :named function_token_typing_FStar.Pervasives.inversion))
(assert (! (forall ((@x0py452 Term)) (! (and (NoHoist @x0py452 (HasType FStar.Pervasives.lift_div_exn@tok (Tm_arrow_9d7b0e2d115bb41f98da64d5384f7531 Prims.pure_pre))) (forall ((@x1py629 Term)(@x2py482 Term)(@x3py344 Term)) (! (= (ApplyTT (ApplyTT (ApplyTT FStar.Pervasives.lift_div_exn@tok @x1py629) @x2py482) @x3py344) (FStar.Pervasives.lift_div_exn @x1py629 @x2py482 @x3py344)) :pattern ((FStar.Pervasives.lift_div_exn @x1py629 @x2py482 @x3py344)) ))) :pattern ((ApplyTT @x0py452 FStar.Pervasives.lift_div_exn@tok)) )) :named function_token_typing_FStar.Pervasives.lift_div_exn))
(assert (! (forall ((@x0py453 Term)) (! (and (NoHoist @x0py453 (HasType FStar.Pervasives.Native.__proj__Mktuple2__item___1@tok Tm_arrow_7fe3e7847982dd1674bac902db1b25d6)) (forall ((@x1py630 Term)(@x2py483 Term)(@x3py345 Term)) (! (= (ApplyTT (ApplyTT (ApplyTT FStar.Pervasives.Native.__proj__Mktuple2__item___1@tok @x1py630) @x2py483) @x3py345) (FStar.Pervasives.Native.__proj__Mktuple2__item___1 @x1py630 @x2py483 @x3py345)) :pattern ((FStar.Pervasives.Native.__proj__Mktuple2__item___1 @x1py630 @x2py483 @x3py345)) ))) :pattern ((ApplyTT @x0py453 FStar.Pervasives.Native.__proj__Mktuple2__item___1@tok)) )) :named function_token_typing_FStar.Pervasives.Native.__proj__Mktuple2__item___1))
(assert (! (forall ((@x0py454 Term)) (! (and (NoHoist @x0py454 (HasType FStar.Pervasives.Native.__proj__Mktuple2__item___2@tok Tm_arrow_caf985f824d0c8c31cc1333a92d97b40)) (forall ((@x1py631 Term)(@x2py484 Term)(@x3py346 Term)) (! (= (ApplyTT (ApplyTT (ApplyTT FStar.Pervasives.Native.__proj__Mktuple2__item___2@tok @x1py631) @x2py484) @x3py346) (FStar.Pervasives.Native.__proj__Mktuple2__item___2 @x1py631 @x2py484 @x3py346)) :pattern ((FStar.Pervasives.Native.__proj__Mktuple2__item___2 @x1py631 @x2py484 @x3py346)) ))) :pattern ((ApplyTT @x0py454 FStar.Pervasives.Native.__proj__Mktuple2__item___2@tok)) )) :named function_token_typing_FStar.Pervasives.Native.__proj__Mktuple2__item___2))
(assert (! (forall ((@x0py455 Term)) (! (and (NoHoist @x0py455 (HasType FStar.Pervasives.Native.__proj__Mktuple3__item___1@tok Tm_arrow_530e081bbbd964966a402b7e14fb9d69)) (forall ((@x1py632 Term)(@x2py485 Term)(@x3py347 Term)(@x4py253 Term)) (! (= (ApplyTT (ApplyTT (ApplyTT (ApplyTT FStar.Pervasives.Native.__proj__Mktuple3__item___1@tok @x1py632) @x2py485) @x3py347) @x4py253) (FStar.Pervasives.Native.__proj__Mktuple3__item___1 @x1py632 @x2py485 @x3py347 @x4py253)) :pattern ((FStar.Pervasives.Native.__proj__Mktuple3__item___1 @x1py632 @x2py485 @x3py347 @x4py253)) ))) :pattern ((ApplyTT @x0py455 FStar.Pervasives.Native.__proj__Mktuple3__item___1@tok)) )) :named function_token_typing_FStar.Pervasives.Native.__proj__Mktuple3__item___1))
(assert (! (forall ((@x0py456 Term)) (! (and (NoHoist @x0py456 (HasType FStar.Pervasives.Native.__proj__Mktuple3__item___2@tok Tm_arrow_cdcc1b95ab3319da21eacff69bb46ef7)) (forall ((@x1py633 Term)(@x2py486 Term)(@x3py348 Term)(@x4py254 Term)) (! (= (ApplyTT (ApplyTT (ApplyTT (ApplyTT FStar.Pervasives.Native.__proj__Mktuple3__item___2@tok @x1py633) @x2py486) @x3py348) @x4py254) (FStar.Pervasives.Native.__proj__Mktuple3__item___2 @x1py633 @x2py486 @x3py348 @x4py254)) :pattern ((FStar.Pervasives.Native.__proj__Mktuple3__item___2 @x1py633 @x2py486 @x3py348 @x4py254)) ))) :pattern ((ApplyTT @x0py456 FStar.Pervasives.Native.__proj__Mktuple3__item___2@tok)) )) :named function_token_typing_FStar.Pervasives.Native.__proj__Mktuple3__item___2))
(assert (! (forall ((@x0py457 Term)) (! (and (NoHoist @x0py457 (HasType FStar.Pervasives.Native.__proj__Mktuple3__item___3@tok Tm_arrow_ea1d9eb08a7fc2511c09cc8007396ae9)) (forall ((@x1py634 Term)(@x2py487 Term)(@x3py349 Term)(@x4py255 Term)) (! (= (ApplyTT (ApplyTT (ApplyTT (ApplyTT FStar.Pervasives.Native.__proj__Mktuple3__item___3@tok @x1py634) @x2py487) @x3py349) @x4py255) (FStar.Pervasives.Native.__proj__Mktuple3__item___3 @x1py634 @x2py487 @x3py349 @x4py255)) :pattern ((FStar.Pervasives.Native.__proj__Mktuple3__item___3 @x1py634 @x2py487 @x3py349 @x4py255)) ))) :pattern ((ApplyTT @x0py457 FStar.Pervasives.Native.__proj__Mktuple3__item___3@tok)) )) :named function_token_typing_FStar.Pervasives.Native.__proj__Mktuple3__item___3))
(assert (! (forall ((@x0py458 Term)) (! (and (NoHoist @x0py458 (HasType FStar.Pervasives.Native.__proj__Mktuple4__item___1@tok Tm_arrow_21647838ffa803cb1cbaf82c99e03f01)) (forall ((@x1py635 Term)(@x2py488 Term)(@x3py350 Term)(@x4py256 Term)(@x5py196 Term)) (! (= (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT FStar.Pervasives.Native.__proj__Mktuple4__item___1@tok @x1py635) @x2py488) @x3py350) @x4py256) @x5py196) (FStar.Pervasives.Native.__proj__Mktuple4__item___1 @x1py635 @x2py488 @x3py350 @x4py256 @x5py196)) :pattern ((FStar.Pervasives.Native.__proj__Mktuple4__item___1 @x1py635 @x2py488 @x3py350 @x4py256 @x5py196)) ))) :pattern ((ApplyTT @x0py458 FStar.Pervasives.Native.__proj__Mktuple4__item___1@tok)) )) :named function_token_typing_FStar.Pervasives.Native.__proj__Mktuple4__item___1))
(assert (! (forall ((@x0py459 Term)) (! (and (NoHoist @x0py459 (HasType FStar.Pervasives.Native.__proj__Mktuple4__item___2@tok Tm_arrow_4a0e4247f19d3748beed54010175e86f)) (forall ((@x1py636 Term)(@x2py489 Term)(@x3py351 Term)(@x4py257 Term)(@x5py197 Term)) (! (= (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT FStar.Pervasives.Native.__proj__Mktuple4__item___2@tok @x1py636) @x2py489) @x3py351) @x4py257) @x5py197) (FStar.Pervasives.Native.__proj__Mktuple4__item___2 @x1py636 @x2py489 @x3py351 @x4py257 @x5py197)) :pattern ((FStar.Pervasives.Native.__proj__Mktuple4__item___2 @x1py636 @x2py489 @x3py351 @x4py257 @x5py197)) ))) :pattern ((ApplyTT @x0py459 FStar.Pervasives.Native.__proj__Mktuple4__item___2@tok)) )) :named function_token_typing_FStar.Pervasives.Native.__proj__Mktuple4__item___2))
(assert (! (forall ((@x0py460 Term)) (! (and (NoHoist @x0py460 (HasType FStar.Pervasives.Native.__proj__Mktuple4__item___3@tok Tm_arrow_879fb9ac6887317b2253fa415d6e297f)) (forall ((@x1py637 Term)(@x2py490 Term)(@x3py352 Term)(@x4py258 Term)(@x5py198 Term)) (! (= (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT FStar.Pervasives.Native.__proj__Mktuple4__item___3@tok @x1py637) @x2py490) @x3py352) @x4py258) @x5py198) (FStar.Pervasives.Native.__proj__Mktuple4__item___3 @x1py637 @x2py490 @x3py352 @x4py258 @x5py198)) :pattern ((FStar.Pervasives.Native.__proj__Mktuple4__item___3 @x1py637 @x2py490 @x3py352 @x4py258 @x5py198)) ))) :pattern ((ApplyTT @x0py460 FStar.Pervasives.Native.__proj__Mktuple4__item___3@tok)) )) :named function_token_typing_FStar.Pervasives.Native.__proj__Mktuple4__item___3))
(assert (! (forall ((@x0py461 Term)) (! (and (NoHoist @x0py461 (HasType FStar.Pervasives.Native.__proj__Mktuple4__item___4@tok Tm_arrow_094933c54ea2002054dad555e01358ba)) (forall ((@x1py638 Term)(@x2py491 Term)(@x3py353 Term)(@x4py259 Term)(@x5py199 Term)) (! (= (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT FStar.Pervasives.Native.__proj__Mktuple4__item___4@tok @x1py638) @x2py491) @x3py353) @x4py259) @x5py199) (FStar.Pervasives.Native.__proj__Mktuple4__item___4 @x1py638 @x2py491 @x3py353 @x4py259 @x5py199)) :pattern ((FStar.Pervasives.Native.__proj__Mktuple4__item___4 @x1py638 @x2py491 @x3py353 @x4py259 @x5py199)) ))) :pattern ((ApplyTT @x0py461 FStar.Pervasives.Native.__proj__Mktuple4__item___4@tok)) )) :named function_token_typing_FStar.Pervasives.Native.__proj__Mktuple4__item___4))
(assert (! (forall ((@x0py462 Term)) (! (and (NoHoist @x0py462 (HasType FStar.Pervasives.Native.__proj__Mktuple5__item___1@tok Tm_arrow_6426d9c2c96ff0881bdcece54fff4277)) (forall ((@x1py639 Term)(@x2py492 Term)(@x3py354 Term)(@x4py260 Term)(@x5py200 Term)(@x6py127 Term)) (! (= (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT FStar.Pervasives.Native.__proj__Mktuple5__item___1@tok @x1py639) @x2py492) @x3py354) @x4py260) @x5py200) @x6py127) (FStar.Pervasives.Native.__proj__Mktuple5__item___1 @x1py639 @x2py492 @x3py354 @x4py260 @x5py200 @x6py127)) :pattern ((FStar.Pervasives.Native.__proj__Mktuple5__item___1 @x1py639 @x2py492 @x3py354 @x4py260 @x5py200 @x6py127)) ))) :pattern ((ApplyTT @x0py462 FStar.Pervasives.Native.__proj__Mktuple5__item___1@tok)) )) :named function_token_typing_FStar.Pervasives.Native.__proj__Mktuple5__item___1))
(assert (! (forall ((@x0py463 Term)) (! (and (NoHoist @x0py463 (HasType FStar.Pervasives.Native.__proj__Mktuple5__item___2@tok Tm_arrow_0dad7bc7f64c4faac713e4788a31a16e)) (forall ((@x1py640 Term)(@x2py493 Term)(@x3py355 Term)(@x4py261 Term)(@x5py201 Term)(@x6py128 Term)) (! (= (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT FStar.Pervasives.Native.__proj__Mktuple5__item___2@tok @x1py640) @x2py493) @x3py355) @x4py261) @x5py201) @x6py128) (FStar.Pervasives.Native.__proj__Mktuple5__item___2 @x1py640 @x2py493 @x3py355 @x4py261 @x5py201 @x6py128)) :pattern ((FStar.Pervasives.Native.__proj__Mktuple5__item___2 @x1py640 @x2py493 @x3py355 @x4py261 @x5py201 @x6py128)) ))) :pattern ((ApplyTT @x0py463 FStar.Pervasives.Native.__proj__Mktuple5__item___2@tok)) )) :named function_token_typing_FStar.Pervasives.Native.__proj__Mktuple5__item___2))
(assert (! (forall ((@x0py464 Term)) (! (and (NoHoist @x0py464 (HasType FStar.Pervasives.Native.__proj__Mktuple5__item___3@tok Tm_arrow_efdf2741fc5d2cd7ffdf01b992c9e8a9)) (forall ((@x1py641 Term)(@x2py494 Term)(@x3py356 Term)(@x4py262 Term)(@x5py202 Term)(@x6py129 Term)) (! (= (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT FStar.Pervasives.Native.__proj__Mktuple5__item___3@tok @x1py641) @x2py494) @x3py356) @x4py262) @x5py202) @x6py129) (FStar.Pervasives.Native.__proj__Mktuple5__item___3 @x1py641 @x2py494 @x3py356 @x4py262 @x5py202 @x6py129)) :pattern ((FStar.Pervasives.Native.__proj__Mktuple5__item___3 @x1py641 @x2py494 @x3py356 @x4py262 @x5py202 @x6py129)) ))) :pattern ((ApplyTT @x0py464 FStar.Pervasives.Native.__proj__Mktuple5__item___3@tok)) )) :named function_token_typing_FStar.Pervasives.Native.__proj__Mktuple5__item___3))
(assert (! (forall ((@x0py465 Term)) (! (and (NoHoist @x0py465 (HasType FStar.Pervasives.Native.__proj__Mktuple5__item___4@tok Tm_arrow_08953d1bb2ff5a2bd59d780036c9167c)) (forall ((@x1py642 Term)(@x2py495 Term)(@x3py357 Term)(@x4py263 Term)(@x5py203 Term)(@x6py130 Term)) (! (= (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT FStar.Pervasives.Native.__proj__Mktuple5__item___4@tok @x1py642) @x2py495) @x3py357) @x4py263) @x5py203) @x6py130) (FStar.Pervasives.Native.__proj__Mktuple5__item___4 @x1py642 @x2py495 @x3py357 @x4py263 @x5py203 @x6py130)) :pattern ((FStar.Pervasives.Native.__proj__Mktuple5__item___4 @x1py642 @x2py495 @x3py357 @x4py263 @x5py203 @x6py130)) ))) :pattern ((ApplyTT @x0py465 FStar.Pervasives.Native.__proj__Mktuple5__item___4@tok)) )) :named function_token_typing_FStar.Pervasives.Native.__proj__Mktuple5__item___4))
(assert (! (forall ((@x0py466 Term)) (! (and (NoHoist @x0py466 (HasType FStar.Pervasives.Native.__proj__Mktuple5__item___5@tok Tm_arrow_c4e77c85318828d15167451b16a74f86)) (forall ((@x1py643 Term)(@x2py496 Term)(@x3py358 Term)(@x4py264 Term)(@x5py204 Term)(@x6py131 Term)) (! (= (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT FStar.Pervasives.Native.__proj__Mktuple5__item___5@tok @x1py643) @x2py496) @x3py358) @x4py264) @x5py204) @x6py131) (FStar.Pervasives.Native.__proj__Mktuple5__item___5 @x1py643 @x2py496 @x3py358 @x4py264 @x5py204 @x6py131)) :pattern ((FStar.Pervasives.Native.__proj__Mktuple5__item___5 @x1py643 @x2py496 @x3py358 @x4py264 @x5py204 @x6py131)) ))) :pattern ((ApplyTT @x0py466 FStar.Pervasives.Native.__proj__Mktuple5__item___5@tok)) )) :named function_token_typing_FStar.Pervasives.Native.__proj__Mktuple5__item___5))
(assert (! (forall ((@x0py467 Term)) (! (and (NoHoist @x0py467 (HasType FStar.Pervasives.Native.__proj__Mktuple6__item___1@tok Tm_arrow_3209a7a409ec605c6410051291219438)) (forall ((@x1py644 Term)(@x2py497 Term)(@x3py359 Term)(@x4py265 Term)(@x5py205 Term)(@x6py132 Term)(@x7py91 Term)) (! (= (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT FStar.Pervasives.Native.__proj__Mktuple6__item___1@tok @x1py644) @x2py497) @x3py359) @x4py265) @x5py205) @x6py132) @x7py91) (FStar.Pervasives.Native.__proj__Mktuple6__item___1 @x1py644 @x2py497 @x3py359 @x4py265 @x5py205 @x6py132 @x7py91)) :pattern ((FStar.Pervasives.Native.__proj__Mktuple6__item___1 @x1py644 @x2py497 @x3py359 @x4py265 @x5py205 @x6py132 @x7py91)) ))) :pattern ((ApplyTT @x0py467 FStar.Pervasives.Native.__proj__Mktuple6__item___1@tok)) )) :named function_token_typing_FStar.Pervasives.Native.__proj__Mktuple6__item___1))
(assert (! (forall ((@x0py468 Term)) (! (and (NoHoist @x0py468 (HasType FStar.Pervasives.Native.__proj__Mktuple6__item___2@tok Tm_arrow_15e10e26df1554e12524dd8fbe3e2f20)) (forall ((@x1py645 Term)(@x2py498 Term)(@x3py360 Term)(@x4py266 Term)(@x5py206 Term)(@x6py133 Term)(@x7py92 Term)) (! (= (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT FStar.Pervasives.Native.__proj__Mktuple6__item___2@tok @x1py645) @x2py498) @x3py360) @x4py266) @x5py206) @x6py133) @x7py92) (FStar.Pervasives.Native.__proj__Mktuple6__item___2 @x1py645 @x2py498 @x3py360 @x4py266 @x5py206 @x6py133 @x7py92)) :pattern ((FStar.Pervasives.Native.__proj__Mktuple6__item___2 @x1py645 @x2py498 @x3py360 @x4py266 @x5py206 @x6py133 @x7py92)) ))) :pattern ((ApplyTT @x0py468 FStar.Pervasives.Native.__proj__Mktuple6__item___2@tok)) )) :named function_token_typing_FStar.Pervasives.Native.__proj__Mktuple6__item___2))
(assert (! (forall ((@x0py469 Term)) (! (and (NoHoist @x0py469 (HasType FStar.Pervasives.Native.__proj__Mktuple6__item___3@tok Tm_arrow_7d790bb96aadc2828cd88ef5143114e0)) (forall ((@x1py646 Term)(@x2py499 Term)(@x3py361 Term)(@x4py267 Term)(@x5py207 Term)(@x6py134 Term)(@x7py93 Term)) (! (= (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT FStar.Pervasives.Native.__proj__Mktuple6__item___3@tok @x1py646) @x2py499) @x3py361) @x4py267) @x5py207) @x6py134) @x7py93) (FStar.Pervasives.Native.__proj__Mktuple6__item___3 @x1py646 @x2py499 @x3py361 @x4py267 @x5py207 @x6py134 @x7py93)) :pattern ((FStar.Pervasives.Native.__proj__Mktuple6__item___3 @x1py646 @x2py499 @x3py361 @x4py267 @x5py207 @x6py134 @x7py93)) ))) :pattern ((ApplyTT @x0py469 FStar.Pervasives.Native.__proj__Mktuple6__item___3@tok)) )) :named function_token_typing_FStar.Pervasives.Native.__proj__Mktuple6__item___3))
(assert (! (forall ((@x0py470 Term)) (! (and (NoHoist @x0py470 (HasType FStar.Pervasives.Native.__proj__Mktuple6__item___4@tok Tm_arrow_9ac1fc4819cbc364e77988b8605dfbd2)) (forall ((@x1py647 Term)(@x2py500 Term)(@x3py362 Term)(@x4py268 Term)(@x5py208 Term)(@x6py135 Term)(@x7py94 Term)) (! (= (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT FStar.Pervasives.Native.__proj__Mktuple6__item___4@tok @x1py647) @x2py500) @x3py362) @x4py268) @x5py208) @x6py135) @x7py94) (FStar.Pervasives.Native.__proj__Mktuple6__item___4 @x1py647 @x2py500 @x3py362 @x4py268 @x5py208 @x6py135 @x7py94)) :pattern ((FStar.Pervasives.Native.__proj__Mktuple6__item___4 @x1py647 @x2py500 @x3py362 @x4py268 @x5py208 @x6py135 @x7py94)) ))) :pattern ((ApplyTT @x0py470 FStar.Pervasives.Native.__proj__Mktuple6__item___4@tok)) )) :named function_token_typing_FStar.Pervasives.Native.__proj__Mktuple6__item___4))
(assert (! (forall ((@x0py471 Term)) (! (and (NoHoist @x0py471 (HasType FStar.Pervasives.Native.__proj__Mktuple6__item___5@tok Tm_arrow_4902efa5488190c456656843f7646562)) (forall ((@x1py648 Term)(@x2py501 Term)(@x3py363 Term)(@x4py269 Term)(@x5py209 Term)(@x6py136 Term)(@x7py95 Term)) (! (= (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT FStar.Pervasives.Native.__proj__Mktuple6__item___5@tok @x1py648) @x2py501) @x3py363) @x4py269) @x5py209) @x6py136) @x7py95) (FStar.Pervasives.Native.__proj__Mktuple6__item___5 @x1py648 @x2py501 @x3py363 @x4py269 @x5py209 @x6py136 @x7py95)) :pattern ((FStar.Pervasives.Native.__proj__Mktuple6__item___5 @x1py648 @x2py501 @x3py363 @x4py269 @x5py209 @x6py136 @x7py95)) ))) :pattern ((ApplyTT @x0py471 FStar.Pervasives.Native.__proj__Mktuple6__item___5@tok)) )) :named function_token_typing_FStar.Pervasives.Native.__proj__Mktuple6__item___5))
(assert (! (forall ((@x0py472 Term)) (! (and (NoHoist @x0py472 (HasType FStar.Pervasives.Native.__proj__Mktuple6__item___6@tok Tm_arrow_45ca9c2b9710ead839b1f3bf7ef7a305)) (forall ((@x1py649 Term)(@x2py502 Term)(@x3py364 Term)(@x4py270 Term)(@x5py210 Term)(@x6py137 Term)(@x7py96 Term)) (! (= (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT FStar.Pervasives.Native.__proj__Mktuple6__item___6@tok @x1py649) @x2py502) @x3py364) @x4py270) @x5py210) @x6py137) @x7py96) (FStar.Pervasives.Native.__proj__Mktuple6__item___6 @x1py649 @x2py502 @x3py364 @x4py270 @x5py210 @x6py137 @x7py96)) :pattern ((FStar.Pervasives.Native.__proj__Mktuple6__item___6 @x1py649 @x2py502 @x3py364 @x4py270 @x5py210 @x6py137 @x7py96)) ))) :pattern ((ApplyTT @x0py472 FStar.Pervasives.Native.__proj__Mktuple6__item___6@tok)) )) :named function_token_typing_FStar.Pervasives.Native.__proj__Mktuple6__item___6))
(assert (! (forall ((@x0py473 Term)) (! (and (NoHoist @x0py473 (HasType FStar.Pervasives.Native.__proj__Mktuple7__item___1@tok Tm_arrow_cfdfdc24b7e1267c05bed07df6aea066)) (forall ((@x1py650 Term)(@x2py503 Term)(@x3py365 Term)(@x4py271 Term)(@x5py211 Term)(@x6py138 Term)(@x7py97 Term)(@x8py61 Term)) (! (= (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT FStar.Pervasives.Native.__proj__Mktuple7__item___1@tok @x1py650) @x2py503) @x3py365) @x4py271) @x5py211) @x6py138) @x7py97) @x8py61) (FStar.Pervasives.Native.__proj__Mktuple7__item___1 @x1py650 @x2py503 @x3py365 @x4py271 @x5py211 @x6py138 @x7py97 @x8py61)) :pattern ((FStar.Pervasives.Native.__proj__Mktuple7__item___1 @x1py650 @x2py503 @x3py365 @x4py271 @x5py211 @x6py138 @x7py97 @x8py61)) ))) :pattern ((ApplyTT @x0py473 FStar.Pervasives.Native.__proj__Mktuple7__item___1@tok)) )) :named function_token_typing_FStar.Pervasives.Native.__proj__Mktuple7__item___1))
(assert (! (forall ((@x0py474 Term)) (! (and (NoHoist @x0py474 (HasType FStar.Pervasives.Native.__proj__Mktuple7__item___2@tok Tm_arrow_88772e9c1eff3cee09de1db3fc8087ca)) (forall ((@x1py651 Term)(@x2py504 Term)(@x3py366 Term)(@x4py272 Term)(@x5py212 Term)(@x6py139 Term)(@x7py98 Term)(@x8py62 Term)) (! (= (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT FStar.Pervasives.Native.__proj__Mktuple7__item___2@tok @x1py651) @x2py504) @x3py366) @x4py272) @x5py212) @x6py139) @x7py98) @x8py62) (FStar.Pervasives.Native.__proj__Mktuple7__item___2 @x1py651 @x2py504 @x3py366 @x4py272 @x5py212 @x6py139 @x7py98 @x8py62)) :pattern ((FStar.Pervasives.Native.__proj__Mktuple7__item___2 @x1py651 @x2py504 @x3py366 @x4py272 @x5py212 @x6py139 @x7py98 @x8py62)) ))) :pattern ((ApplyTT @x0py474 FStar.Pervasives.Native.__proj__Mktuple7__item___2@tok)) )) :named function_token_typing_FStar.Pervasives.Native.__proj__Mktuple7__item___2))
(assert (! (forall ((@x0py475 Term)) (! (and (NoHoist @x0py475 (HasType FStar.Pervasives.Native.__proj__Mktuple7__item___3@tok Tm_arrow_051405f28864bdc9643ed01eb3b92100)) (forall ((@x1py652 Term)(@x2py505 Term)(@x3py367 Term)(@x4py273 Term)(@x5py213 Term)(@x6py140 Term)(@x7py99 Term)(@x8py63 Term)) (! (= (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT FStar.Pervasives.Native.__proj__Mktuple7__item___3@tok @x1py652) @x2py505) @x3py367) @x4py273) @x5py213) @x6py140) @x7py99) @x8py63) (FStar.Pervasives.Native.__proj__Mktuple7__item___3 @x1py652 @x2py505 @x3py367 @x4py273 @x5py213 @x6py140 @x7py99 @x8py63)) :pattern ((FStar.Pervasives.Native.__proj__Mktuple7__item___3 @x1py652 @x2py505 @x3py367 @x4py273 @x5py213 @x6py140 @x7py99 @x8py63)) ))) :pattern ((ApplyTT @x0py475 FStar.Pervasives.Native.__proj__Mktuple7__item___3@tok)) )) :named function_token_typing_FStar.Pervasives.Native.__proj__Mktuple7__item___3))
(assert (! (forall ((@x0py476 Term)) (! (and (NoHoist @x0py476 (HasType FStar.Pervasives.Native.__proj__Mktuple7__item___4@tok Tm_arrow_9a2d52aef28944ddfbe3d4af8c624d0b)) (forall ((@x1py653 Term)(@x2py506 Term)(@x3py368 Term)(@x4py274 Term)(@x5py214 Term)(@x6py141 Term)(@x7py100 Term)(@x8py64 Term)) (! (= (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT FStar.Pervasives.Native.__proj__Mktuple7__item___4@tok @x1py653) @x2py506) @x3py368) @x4py274) @x5py214) @x6py141) @x7py100) @x8py64) (FStar.Pervasives.Native.__proj__Mktuple7__item___4 @x1py653 @x2py506 @x3py368 @x4py274 @x5py214 @x6py141 @x7py100 @x8py64)) :pattern ((FStar.Pervasives.Native.__proj__Mktuple7__item___4 @x1py653 @x2py506 @x3py368 @x4py274 @x5py214 @x6py141 @x7py100 @x8py64)) ))) :pattern ((ApplyTT @x0py476 FStar.Pervasives.Native.__proj__Mktuple7__item___4@tok)) )) :named function_token_typing_FStar.Pervasives.Native.__proj__Mktuple7__item___4))
(assert (! (forall ((@x0py477 Term)) (! (and (NoHoist @x0py477 (HasType FStar.Pervasives.Native.__proj__Mktuple7__item___5@tok Tm_arrow_959ecc63baf89362269f0a0ccd5668b0)) (forall ((@x1py654 Term)(@x2py507 Term)(@x3py369 Term)(@x4py275 Term)(@x5py215 Term)(@x6py142 Term)(@x7py101 Term)(@x8py65 Term)) (! (= (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT FStar.Pervasives.Native.__proj__Mktuple7__item___5@tok @x1py654) @x2py507) @x3py369) @x4py275) @x5py215) @x6py142) @x7py101) @x8py65) (FStar.Pervasives.Native.__proj__Mktuple7__item___5 @x1py654 @x2py507 @x3py369 @x4py275 @x5py215 @x6py142 @x7py101 @x8py65)) :pattern ((FStar.Pervasives.Native.__proj__Mktuple7__item___5 @x1py654 @x2py507 @x3py369 @x4py275 @x5py215 @x6py142 @x7py101 @x8py65)) ))) :pattern ((ApplyTT @x0py477 FStar.Pervasives.Native.__proj__Mktuple7__item___5@tok)) )) :named function_token_typing_FStar.Pervasives.Native.__proj__Mktuple7__item___5))
(assert (! (forall ((@x0py478 Term)) (! (and (NoHoist @x0py478 (HasType FStar.Pervasives.Native.__proj__Mktuple7__item___6@tok Tm_arrow_dcdffe9de61b4fc93e96c6fef1350cf2)) (forall ((@x1py655 Term)(@x2py508 Term)(@x3py370 Term)(@x4py276 Term)(@x5py216 Term)(@x6py143 Term)(@x7py102 Term)(@x8py66 Term)) (! (= (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT FStar.Pervasives.Native.__proj__Mktuple7__item___6@tok @x1py655) @x2py508) @x3py370) @x4py276) @x5py216) @x6py143) @x7py102) @x8py66) (FStar.Pervasives.Native.__proj__Mktuple7__item___6 @x1py655 @x2py508 @x3py370 @x4py276 @x5py216 @x6py143 @x7py102 @x8py66)) :pattern ((FStar.Pervasives.Native.__proj__Mktuple7__item___6 @x1py655 @x2py508 @x3py370 @x4py276 @x5py216 @x6py143 @x7py102 @x8py66)) ))) :pattern ((ApplyTT @x0py478 FStar.Pervasives.Native.__proj__Mktuple7__item___6@tok)) )) :named function_token_typing_FStar.Pervasives.Native.__proj__Mktuple7__item___6))
(assert (! (forall ((@x0py479 Term)) (! (and (NoHoist @x0py479 (HasType FStar.Pervasives.Native.__proj__Mktuple7__item___7@tok Tm_arrow_85e89735c9356e795787b0e5b5a2f363)) (forall ((@x1py656 Term)(@x2py509 Term)(@x3py371 Term)(@x4py277 Term)(@x5py217 Term)(@x6py144 Term)(@x7py103 Term)(@x8py67 Term)) (! (= (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT FStar.Pervasives.Native.__proj__Mktuple7__item___7@tok @x1py656) @x2py509) @x3py371) @x4py277) @x5py217) @x6py144) @x7py103) @x8py67) (FStar.Pervasives.Native.__proj__Mktuple7__item___7 @x1py656 @x2py509 @x3py371 @x4py277 @x5py217 @x6py144 @x7py103 @x8py67)) :pattern ((FStar.Pervasives.Native.__proj__Mktuple7__item___7 @x1py656 @x2py509 @x3py371 @x4py277 @x5py217 @x6py144 @x7py103 @x8py67)) ))) :pattern ((ApplyTT @x0py479 FStar.Pervasives.Native.__proj__Mktuple7__item___7@tok)) )) :named function_token_typing_FStar.Pervasives.Native.__proj__Mktuple7__item___7))
(assert (! (forall ((@x0py480 Term)) (! (and (NoHoist @x0py480 (HasType FStar.Pervasives.Native.__proj__Mktuple8__item___1@tok Tm_arrow_300677279975362e42b142f0238e1ce1)) (forall ((@x1py657 Term)(@x2py510 Term)(@x3py372 Term)(@x4py278 Term)(@x5py218 Term)(@x6py145 Term)(@x7py104 Term)(@x8py68 Term)(@x9py40 Term)) (! (= (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT FStar.Pervasives.Native.__proj__Mktuple8__item___1@tok @x1py657) @x2py510) @x3py372) @x4py278) @x5py218) @x6py145) @x7py104) @x8py68) @x9py40) (FStar.Pervasives.Native.__proj__Mktuple8__item___1 @x1py657 @x2py510 @x3py372 @x4py278 @x5py218 @x6py145 @x7py104 @x8py68 @x9py40)) :pattern ((FStar.Pervasives.Native.__proj__Mktuple8__item___1 @x1py657 @x2py510 @x3py372 @x4py278 @x5py218 @x6py145 @x7py104 @x8py68 @x9py40)) ))) :pattern ((ApplyTT @x0py480 FStar.Pervasives.Native.__proj__Mktuple8__item___1@tok)) )) :named function_token_typing_FStar.Pervasives.Native.__proj__Mktuple8__item___1))
(assert (! (forall ((@x0py481 Term)) (! (and (NoHoist @x0py481 (HasType FStar.Pervasives.Native.__proj__Mktuple8__item___2@tok Tm_arrow_d24e3d13d5f3ba68fc4414c96e3c8794)) (forall ((@x1py658 Term)(@x2py511 Term)(@x3py373 Term)(@x4py279 Term)(@x5py219 Term)(@x6py146 Term)(@x7py105 Term)(@x8py69 Term)(@x9py41 Term)) (! (= (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT FStar.Pervasives.Native.__proj__Mktuple8__item___2@tok @x1py658) @x2py511) @x3py373) @x4py279) @x5py219) @x6py146) @x7py105) @x8py69) @x9py41) (FStar.Pervasives.Native.__proj__Mktuple8__item___2 @x1py658 @x2py511 @x3py373 @x4py279 @x5py219 @x6py146 @x7py105 @x8py69 @x9py41)) :pattern ((FStar.Pervasives.Native.__proj__Mktuple8__item___2 @x1py658 @x2py511 @x3py373 @x4py279 @x5py219 @x6py146 @x7py105 @x8py69 @x9py41)) ))) :pattern ((ApplyTT @x0py481 FStar.Pervasives.Native.__proj__Mktuple8__item___2@tok)) )) :named function_token_typing_FStar.Pervasives.Native.__proj__Mktuple8__item___2))
(assert (! (forall ((@x0py482 Term)) (! (and (NoHoist @x0py482 (HasType FStar.Pervasives.Native.__proj__Mktuple8__item___3@tok Tm_arrow_d3ed25c81ffc65c9f57b03935726ef00)) (forall ((@x1py659 Term)(@x2py512 Term)(@x3py374 Term)(@x4py280 Term)(@x5py220 Term)(@x6py147 Term)(@x7py106 Term)(@x8py70 Term)(@x9py42 Term)) (! (= (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT FStar.Pervasives.Native.__proj__Mktuple8__item___3@tok @x1py659) @x2py512) @x3py374) @x4py280) @x5py220) @x6py147) @x7py106) @x8py70) @x9py42) (FStar.Pervasives.Native.__proj__Mktuple8__item___3 @x1py659 @x2py512 @x3py374 @x4py280 @x5py220 @x6py147 @x7py106 @x8py70 @x9py42)) :pattern ((FStar.Pervasives.Native.__proj__Mktuple8__item___3 @x1py659 @x2py512 @x3py374 @x4py280 @x5py220 @x6py147 @x7py106 @x8py70 @x9py42)) ))) :pattern ((ApplyTT @x0py482 FStar.Pervasives.Native.__proj__Mktuple8__item___3@tok)) )) :named function_token_typing_FStar.Pervasives.Native.__proj__Mktuple8__item___3))
(assert (! (forall ((@x0py483 Term)) (! (and (NoHoist @x0py483 (HasType FStar.Pervasives.Native.__proj__Mktuple8__item___4@tok Tm_arrow_fb2b0d135fd95ad5a0c9931d87ebd9cf)) (forall ((@x1py660 Term)(@x2py513 Term)(@x3py375 Term)(@x4py281 Term)(@x5py221 Term)(@x6py148 Term)(@x7py107 Term)(@x8py71 Term)(@x9py43 Term)) (! (= (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT FStar.Pervasives.Native.__proj__Mktuple8__item___4@tok @x1py660) @x2py513) @x3py375) @x4py281) @x5py221) @x6py148) @x7py107) @x8py71) @x9py43) (FStar.Pervasives.Native.__proj__Mktuple8__item___4 @x1py660 @x2py513 @x3py375 @x4py281 @x5py221 @x6py148 @x7py107 @x8py71 @x9py43)) :pattern ((FStar.Pervasives.Native.__proj__Mktuple8__item___4 @x1py660 @x2py513 @x3py375 @x4py281 @x5py221 @x6py148 @x7py107 @x8py71 @x9py43)) ))) :pattern ((ApplyTT @x0py483 FStar.Pervasives.Native.__proj__Mktuple8__item___4@tok)) )) :named function_token_typing_FStar.Pervasives.Native.__proj__Mktuple8__item___4))
(assert (! (forall ((@x0py484 Term)) (! (and (NoHoist @x0py484 (HasType FStar.Pervasives.Native.__proj__Mktuple8__item___5@tok Tm_arrow_02d3b5b79bf8b1df357192967171c4e9)) (forall ((@x1py661 Term)(@x2py514 Term)(@x3py376 Term)(@x4py282 Term)(@x5py222 Term)(@x6py149 Term)(@x7py108 Term)(@x8py72 Term)(@x9py44 Term)) (! (= (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT FStar.Pervasives.Native.__proj__Mktuple8__item___5@tok @x1py661) @x2py514) @x3py376) @x4py282) @x5py222) @x6py149) @x7py108) @x8py72) @x9py44) (FStar.Pervasives.Native.__proj__Mktuple8__item___5 @x1py661 @x2py514 @x3py376 @x4py282 @x5py222 @x6py149 @x7py108 @x8py72 @x9py44)) :pattern ((FStar.Pervasives.Native.__proj__Mktuple8__item___5 @x1py661 @x2py514 @x3py376 @x4py282 @x5py222 @x6py149 @x7py108 @x8py72 @x9py44)) ))) :pattern ((ApplyTT @x0py484 FStar.Pervasives.Native.__proj__Mktuple8__item___5@tok)) )) :named function_token_typing_FStar.Pervasives.Native.__proj__Mktuple8__item___5))
(assert (! (forall ((@x0py485 Term)) (! (and (NoHoist @x0py485 (HasType FStar.Pervasives.Native.__proj__Mktuple8__item___6@tok Tm_arrow_59613b37f4c818dae9a7b082d5155f29)) (forall ((@x1py662 Term)(@x2py515 Term)(@x3py377 Term)(@x4py283 Term)(@x5py223 Term)(@x6py150 Term)(@x7py109 Term)(@x8py73 Term)(@x9py45 Term)) (! (= (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT FStar.Pervasives.Native.__proj__Mktuple8__item___6@tok @x1py662) @x2py515) @x3py377) @x4py283) @x5py223) @x6py150) @x7py109) @x8py73) @x9py45) (FStar.Pervasives.Native.__proj__Mktuple8__item___6 @x1py662 @x2py515 @x3py377 @x4py283 @x5py223 @x6py150 @x7py109 @x8py73 @x9py45)) :pattern ((FStar.Pervasives.Native.__proj__Mktuple8__item___6 @x1py662 @x2py515 @x3py377 @x4py283 @x5py223 @x6py150 @x7py109 @x8py73 @x9py45)) ))) :pattern ((ApplyTT @x0py485 FStar.Pervasives.Native.__proj__Mktuple8__item___6@tok)) )) :named function_token_typing_FStar.Pervasives.Native.__proj__Mktuple8__item___6))
(assert (! (forall ((@x0py486 Term)) (! (and (NoHoist @x0py486 (HasType FStar.Pervasives.Native.__proj__Mktuple8__item___7@tok Tm_arrow_642316967e62d4894b4c5052196039ab)) (forall ((@x1py663 Term)(@x2py516 Term)(@x3py378 Term)(@x4py284 Term)(@x5py224 Term)(@x6py151 Term)(@x7py110 Term)(@x8py74 Term)(@x9py46 Term)) (! (= (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT FStar.Pervasives.Native.__proj__Mktuple8__item___7@tok @x1py663) @x2py516) @x3py378) @x4py284) @x5py224) @x6py151) @x7py110) @x8py74) @x9py46) (FStar.Pervasives.Native.__proj__Mktuple8__item___7 @x1py663 @x2py516 @x3py378 @x4py284 @x5py224 @x6py151 @x7py110 @x8py74 @x9py46)) :pattern ((FStar.Pervasives.Native.__proj__Mktuple8__item___7 @x1py663 @x2py516 @x3py378 @x4py284 @x5py224 @x6py151 @x7py110 @x8py74 @x9py46)) ))) :pattern ((ApplyTT @x0py486 FStar.Pervasives.Native.__proj__Mktuple8__item___7@tok)) )) :named function_token_typing_FStar.Pervasives.Native.__proj__Mktuple8__item___7))
(assert (! (forall ((@x0py487 Term)) (! (and (NoHoist @x0py487 (HasType FStar.Pervasives.Native.__proj__Mktuple8__item___8@tok Tm_arrow_a984cc683b69e3e0d41bb0853d6a1664)) (forall ((@x1py664 Term)(@x2py517 Term)(@x3py379 Term)(@x4py285 Term)(@x5py225 Term)(@x6py152 Term)(@x7py111 Term)(@x8py75 Term)(@x9py47 Term)) (! (= (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT FStar.Pervasives.Native.__proj__Mktuple8__item___8@tok @x1py664) @x2py517) @x3py379) @x4py285) @x5py225) @x6py152) @x7py111) @x8py75) @x9py47) (FStar.Pervasives.Native.__proj__Mktuple8__item___8 @x1py664 @x2py517 @x3py379 @x4py285 @x5py225 @x6py152 @x7py111 @x8py75 @x9py47)) :pattern ((FStar.Pervasives.Native.__proj__Mktuple8__item___8 @x1py664 @x2py517 @x3py379 @x4py285 @x5py225 @x6py152 @x7py111 @x8py75 @x9py47)) ))) :pattern ((ApplyTT @x0py487 FStar.Pervasives.Native.__proj__Mktuple8__item___8@tok)) )) :named function_token_typing_FStar.Pervasives.Native.__proj__Mktuple8__item___8))
(assert (! (forall ((@x0py488 Term)) (! (and (NoHoist @x0py488 (HasType FStar.Pervasives.Native.__proj__Some__item__v@tok Tm_arrow_4f040c69fbe8d7b2e50ca31bd5455a8e)) (forall ((@x1py665 Term)(@x2py518 Term)) (! (= (ApplyTT (ApplyTT FStar.Pervasives.Native.__proj__Some__item__v@tok @x1py665) @x2py518) (FStar.Pervasives.Native.__proj__Some__item__v @x1py665 @x2py518)) :pattern ((FStar.Pervasives.Native.__proj__Some__item__v @x1py665 @x2py518)) ))) :pattern ((ApplyTT @x0py488 FStar.Pervasives.Native.__proj__Some__item__v@tok)) )) :named function_token_typing_FStar.Pervasives.Native.__proj__Some__item__v))
(assert (! (forall ((@x0py489 Term)) (! (and (NoHoist @x0py489 (HasType FStar.Pervasives.Native.__proj__UnfoldAttr__item__a@tok (Tm_arrow_3e3f6c09cac83bd2c87427772baf967c FStar.Pervasives.Native.norm_step))) (forall ((@x1py666 Term)) (! (= (ApplyTT FStar.Pervasives.Native.__proj__UnfoldAttr__item__a@tok @x1py666) (FStar.Pervasives.Native.__proj__UnfoldAttr__item__a @x1py666)) :pattern ((FStar.Pervasives.Native.__proj__UnfoldAttr__item__a @x1py666)) ))) :pattern ((ApplyTT @x0py489 FStar.Pervasives.Native.__proj__UnfoldAttr__item__a@tok)) )) :named function_token_typing_FStar.Pervasives.Native.__proj__UnfoldAttr__item__a))
(assert (! (forall ((@x0py490 Term)) (! (and (NoHoist @x0py490 (HasType FStar.Pervasives.Native.__proj__UnfoldAttr__item__t@tok (Tm_arrow_eaecbfb0f0c1d2e86edbe9df7d9fa3a5 FStar.Pervasives.Native.norm_step))) (forall ((@x1py667 Term)) (! (= (ApplyTT FStar.Pervasives.Native.__proj__UnfoldAttr__item__t@tok @x1py667) (FStar.Pervasives.Native.__proj__UnfoldAttr__item__t @x1py667)) :pattern ((FStar.Pervasives.Native.__proj__UnfoldAttr__item__t @x1py667)) ))) :pattern ((ApplyTT @x0py490 FStar.Pervasives.Native.__proj__UnfoldAttr__item__t@tok)) )) :named function_token_typing_FStar.Pervasives.Native.__proj__UnfoldAttr__item__t))
(assert (! (forall ((@x0py491 Term)) (! (and (NoHoist @x0py491 (HasType FStar.Pervasives.Native.__proj__UnfoldFully__item___0@tok (Tm_arrow_52d29796e7fa32d5b27962b2b725e507 Prims.string FStar.Pervasives.Native.norm_step))) (forall ((@x1py668 Term)) (! (= (ApplyTT FStar.Pervasives.Native.__proj__UnfoldFully__item___0@tok @x1py668) (FStar.Pervasives.Native.__proj__UnfoldFully__item___0 @x1py668)) :pattern ((FStar.Pervasives.Native.__proj__UnfoldFully__item___0 @x1py668)) ))) :pattern ((ApplyTT @x0py491 FStar.Pervasives.Native.__proj__UnfoldFully__item___0@tok)) )) :named function_token_typing_FStar.Pervasives.Native.__proj__UnfoldFully__item___0))
(assert (! (forall ((@x0py492 Term)) (! (and (NoHoist @x0py492 (HasType FStar.Pervasives.Native.__proj__UnfoldOnly__item___0@tok (Tm_arrow_d73f8dacefc5e4cdc8cdd18970a5ae80 Prims.string FStar.Pervasives.Native.norm_step))) (forall ((@x1py669 Term)) (! (= (ApplyTT FStar.Pervasives.Native.__proj__UnfoldOnly__item___0@tok @x1py669) (FStar.Pervasives.Native.__proj__UnfoldOnly__item___0 @x1py669)) :pattern ((FStar.Pervasives.Native.__proj__UnfoldOnly__item___0 @x1py669)) ))) :pattern ((ApplyTT @x0py492 FStar.Pervasives.Native.__proj__UnfoldOnly__item___0@tok)) )) :named function_token_typing_FStar.Pervasives.Native.__proj__UnfoldOnly__item___0))
(assert (! (forall ((@x0py493 Term)) (! (and (NoHoist @x0py493 (HasType FStar.Pervasives.Native.assert_norm@tok (Tm_arrow_37a65a1a1bca77204cc44fddae45a654 Prims.unit))) (forall ((@x1py670 Term)) (! (= (ApplyTT FStar.Pervasives.Native.assert_norm@tok @x1py670) (FStar.Pervasives.Native.assert_norm @x1py670)) :pattern ((FStar.Pervasives.Native.assert_norm @x1py670)) ))) :pattern ((ApplyTT @x0py493 FStar.Pervasives.Native.assert_norm@tok)) )) :named function_token_typing_FStar.Pervasives.Native.assert_norm))
(assert (! (HasType FStar.Pervasives.Native.Delta FStar.Pervasives.Native.norm_step) :named function_token_typing_FStar.Pervasives.Native.Delta))
(assert (! (forall ((@x0py494 Term)) (! (and (NoHoist @x0py494 (HasType FStar.Pervasives.Native.delta_attr@tok (Tm_arrow_756e7b0ac20279dfcded24e5a99a27b8 FStar.Pervasives.Native.norm_step))) (forall ((@x1py671 Term)(@x2py519 Term)) (! (= (ApplyTT (ApplyTT FStar.Pervasives.Native.delta_attr@tok @x1py671) @x2py519) (FStar.Pervasives.Native.delta_attr @x1py671 @x2py519)) :pattern ((FStar.Pervasives.Native.delta_attr @x1py671 @x2py519)) ))) :pattern ((ApplyTT @x0py494 FStar.Pervasives.Native.delta_attr@tok)) )) :named function_token_typing_FStar.Pervasives.Native.delta_attr))
(assert (! (forall ((@x0py495 Term)) (! (and (NoHoist @x0py495 (HasType FStar.Pervasives.Native.delta_fully@tok (Tm_arrow_52c7e04c1aef70d52ef99d2cc9753aed FStar.Pervasives.Native.norm_step Prims.string))) (forall ((@x1py672 Term)) (! (= (ApplyTT FStar.Pervasives.Native.delta_fully@tok @x1py672) (FStar.Pervasives.Native.delta_fully @x1py672)) :pattern ((FStar.Pervasives.Native.delta_fully @x1py672)) ))) :pattern ((ApplyTT @x0py495 FStar.Pervasives.Native.delta_fully@tok)) )) :named function_token_typing_FStar.Pervasives.Native.delta_fully))
(assert (! (forall ((@x0py496 Term)) (! (and (NoHoist @x0py496 (HasType FStar.Pervasives.Native.delta_only@tok (Tm_arrow_52c7e04c1aef70d52ef99d2cc9753aed FStar.Pervasives.Native.norm_step Prims.string))) (forall ((@x1py673 Term)) (! (= (ApplyTT FStar.Pervasives.Native.delta_only@tok @x1py673) (FStar.Pervasives.Native.delta_only @x1py673)) :pattern ((FStar.Pervasives.Native.delta_only @x1py673)) ))) :pattern ((ApplyTT @x0py496 FStar.Pervasives.Native.delta_only@tok)) )) :named function_token_typing_FStar.Pervasives.Native.delta_only))
(assert (! (forall ((@x0py497 Term)) (! (and (NoHoist @x0py497 (HasType FStar.Pervasives.Native.fst@tok Tm_arrow_7fe3e7847982dd1674bac902db1b25d6)) (forall ((@x1py674 Term)(@x2py520 Term)(@x3py380 Term)) (! (= (ApplyTT (ApplyTT (ApplyTT FStar.Pervasives.Native.fst@tok @x1py674) @x2py520) @x3py380) (FStar.Pervasives.Native.fst @x1py674 @x2py520 @x3py380)) :pattern ((FStar.Pervasives.Native.fst @x1py674 @x2py520 @x3py380)) ))) :pattern ((ApplyTT @x0py497 FStar.Pervasives.Native.fst@tok)) )) :named function_token_typing_FStar.Pervasives.Native.fst))
(assert (! (HasType FStar.Pervasives.Native.HNF FStar.Pervasives.Native.norm_step) :named function_token_typing_FStar.Pervasives.Native.HNF))
(assert (! (HasType FStar.Pervasives.Native.hnf FStar.Pervasives.Native.norm_step) :named function_token_typing_FStar.Pervasives.Native.hnf))
(assert (! (HasType FStar.Pervasives.Native.Iota FStar.Pervasives.Native.norm_step) :named function_token_typing_FStar.Pervasives.Native.Iota))
(assert (! (forall ((@x0py498 Term)) (! (and (NoHoist @x0py498 (HasType FStar.Pervasives.Native.norm@tok (Tm_arrow_cff63087848ae2e59f28234902699c0f FStar.Pervasives.Native.norm_step))) (forall ((@x1py675 Term)(@x2py521 Term)(@x3py381 Term)) (! (= (ApplyTT (ApplyTT (ApplyTT FStar.Pervasives.Native.norm@tok @x1py675) @x2py521) @x3py381) (FStar.Pervasives.Native.norm @x1py675 @x2py521 @x3py381)) :pattern ((FStar.Pervasives.Native.norm @x1py675 @x2py521 @x3py381)) ))) :pattern ((ApplyTT @x0py498 FStar.Pervasives.Native.norm@tok)) )) :named function_token_typing_FStar.Pervasives.Native.norm))
(assert (! (HasType FStar.Pervasives.Native.norm_step Tm_type) :named function_token_typing_FStar.Pervasives.Native.norm_step))
(assert (! (forall ((@x0py499 Term)) (! (and (NoHoist @x0py499 (HasType FStar.Pervasives.Native.normalize@tok Tm_arrow_257be5ee7da9f477702a7d2ee9bef0c9)) (forall ((@x1py676 Term)) (! (= (ApplyTT FStar.Pervasives.Native.normalize@tok @x1py676) (FStar.Pervasives.Native.normalize @x1py676)) :pattern ((FStar.Pervasives.Native.normalize @x1py676)) ))) :pattern ((ApplyTT @x0py499 FStar.Pervasives.Native.normalize@tok)) )) :named function_token_typing_FStar.Pervasives.Native.normalize))
(assert (! (forall ((@x0py500 Term)) (! (and (NoHoist @x0py500 (HasType FStar.Pervasives.Native.normalize_term@tok Tm_arrow_fa4e3ee4a3dfa402363cd0693fcbfca4)) (forall ((@x1py677 Term)(@x2py522 Term)) (! (= (ApplyTT (ApplyTT FStar.Pervasives.Native.normalize_term@tok @x1py677) @x2py522) (FStar.Pervasives.Native.normalize_term @x1py677 @x2py522)) :pattern ((FStar.Pervasives.Native.normalize_term @x1py677 @x2py522)) ))) :pattern ((ApplyTT @x0py500 FStar.Pervasives.Native.normalize_term@tok)) )) :named function_token_typing_FStar.Pervasives.Native.normalize_term))
(assert (! (HasType FStar.Pervasives.Native.Primops FStar.Pervasives.Native.norm_step) :named function_token_typing_FStar.Pervasives.Native.Primops))
(assert (! (forall ((@x0py501 Term)) (! (and (NoHoist @x0py501 (HasType FStar.Pervasives.Native.singleton@tok Tm_arrow_9c915ca115c32a0e42eafce253bfd2cd)) (forall ((@x1py678 Term)(@x2py523 Term)) (! (= (ApplyTT (ApplyTT FStar.Pervasives.Native.singleton@tok @x1py678) @x2py523) (FStar.Pervasives.Native.singleton @x1py678 @x2py523)) :pattern ((FStar.Pervasives.Native.singleton @x1py678 @x2py523)) ))) :pattern ((ApplyTT @x0py501 FStar.Pervasives.Native.singleton@tok)) )) :named function_token_typing_FStar.Pervasives.Native.singleton))
(assert (! (forall ((@x0py502 Term)) (! (and (NoHoist @x0py502 (HasType FStar.Pervasives.Native.snd@tok Tm_arrow_caf985f824d0c8c31cc1333a92d97b40)) (forall ((@x1py679 Term)(@x2py524 Term)(@x3py382 Term)) (! (= (ApplyTT (ApplyTT (ApplyTT FStar.Pervasives.Native.snd@tok @x1py679) @x2py524) @x3py382) (FStar.Pervasives.Native.snd @x1py679 @x2py524 @x3py382)) :pattern ((FStar.Pervasives.Native.snd @x1py679 @x2py524 @x3py382)) ))) :pattern ((ApplyTT @x0py502 FStar.Pervasives.Native.snd@tok)) )) :named function_token_typing_FStar.Pervasives.Native.snd))
(assert (! (forall ((@x0py503 Term)) (! (and (NoHoist @x0py503 (HasType FStar.Pervasives.Native.UnfoldAttr@tok (Tm_arrow_756e7b0ac20279dfcded24e5a99a27b8 FStar.Pervasives.Native.norm_step))) (forall ((@x1py680 Term)(@x2py525 Term)) (! (= (ApplyTT (ApplyTT FStar.Pervasives.Native.UnfoldAttr@tok @x1py680) @x2py525) (FStar.Pervasives.Native.UnfoldAttr @x1py680 @x2py525)) :pattern ((FStar.Pervasives.Native.UnfoldAttr @x1py680 @x2py525)) ))) :pattern ((ApplyTT @x0py503 FStar.Pervasives.Native.UnfoldAttr@tok)) )) :named function_token_typing_FStar.Pervasives.Native.UnfoldAttr))
(assert (! (forall ((@x0py504 Term)) (! (and (NoHoist @x0py504 (HasType FStar.Pervasives.Native.UnfoldFully@tok (Tm_arrow_52c7e04c1aef70d52ef99d2cc9753aed FStar.Pervasives.Native.norm_step Prims.string))) (forall ((@x1py681 Term)) (! (= (ApplyTT FStar.Pervasives.Native.UnfoldFully@tok @x1py681) (FStar.Pervasives.Native.UnfoldFully @x1py681)) :pattern ((FStar.Pervasives.Native.UnfoldFully @x1py681)) ))) :pattern ((ApplyTT @x0py504 FStar.Pervasives.Native.UnfoldFully@tok)) )) :named function_token_typing_FStar.Pervasives.Native.UnfoldFully))
(assert (! (forall ((@x0py505 Term)) (! (and (NoHoist @x0py505 (HasType FStar.Pervasives.Native.UnfoldOnly@tok (Tm_arrow_52c7e04c1aef70d52ef99d2cc9753aed FStar.Pervasives.Native.norm_step Prims.string))) (forall ((@x1py682 Term)) (! (= (ApplyTT FStar.Pervasives.Native.UnfoldOnly@tok @x1py682) (FStar.Pervasives.Native.UnfoldOnly @x1py682)) :pattern ((FStar.Pervasives.Native.UnfoldOnly @x1py682)) ))) :pattern ((ApplyTT @x0py505 FStar.Pervasives.Native.UnfoldOnly@tok)) )) :named function_token_typing_FStar.Pervasives.Native.UnfoldOnly))
(assert (! (forall ((@x0py506 Term)) (! (and (NoHoist @x0py506 (HasType FStar.Pervasives.Native.uu___is_Delta@tok (Tm_arrow_9cb3c953faf527c316d427b2ce8bd81b Prims.bool FStar.Pervasives.Native.norm_step))) (forall ((@x1py683 Term)) (! (= (ApplyTT FStar.Pervasives.Native.uu___is_Delta@tok @x1py683) (FStar.Pervasives.Native.uu___is_Delta @x1py683)) :pattern ((FStar.Pervasives.Native.uu___is_Delta @x1py683)) ))) :pattern ((ApplyTT @x0py506 FStar.Pervasives.Native.uu___is_Delta@tok)) )) :named function_token_typing_FStar.Pervasives.Native.uu___is_Delta))
(assert (! (forall ((@x0py507 Term)) (! (and (NoHoist @x0py507 (HasType FStar.Pervasives.Native.uu___is_HNF@tok (Tm_arrow_9cb3c953faf527c316d427b2ce8bd81b Prims.bool FStar.Pervasives.Native.norm_step))) (forall ((@x1py684 Term)) (! (= (ApplyTT FStar.Pervasives.Native.uu___is_HNF@tok @x1py684) (FStar.Pervasives.Native.uu___is_HNF @x1py684)) :pattern ((FStar.Pervasives.Native.uu___is_HNF @x1py684)) ))) :pattern ((ApplyTT @x0py507 FStar.Pervasives.Native.uu___is_HNF@tok)) )) :named function_token_typing_FStar.Pervasives.Native.uu___is_HNF))
(assert (! (forall ((@x0py508 Term)) (! (and (NoHoist @x0py508 (HasType FStar.Pervasives.Native.uu___is_Iota@tok (Tm_arrow_9cb3c953faf527c316d427b2ce8bd81b Prims.bool FStar.Pervasives.Native.norm_step))) (forall ((@x1py685 Term)) (! (= (ApplyTT FStar.Pervasives.Native.uu___is_Iota@tok @x1py685) (FStar.Pervasives.Native.uu___is_Iota @x1py685)) :pattern ((FStar.Pervasives.Native.uu___is_Iota @x1py685)) ))) :pattern ((ApplyTT @x0py508 FStar.Pervasives.Native.uu___is_Iota@tok)) )) :named function_token_typing_FStar.Pervasives.Native.uu___is_Iota))
(assert (! (forall ((@x0py509 Term)) (! (and (NoHoist @x0py509 (HasType FStar.Pervasives.Native.uu___is_Mktuple2@tok (Tm_arrow_0e873ada4642b527a7ed8ad8c9a23c0c Prims.bool))) (forall ((@x1py686 Term)(@x2py526 Term)(@x3py383 Term)) (! (= (ApplyTT (ApplyTT (ApplyTT FStar.Pervasives.Native.uu___is_Mktuple2@tok @x1py686) @x2py526) @x3py383) (FStar.Pervasives.Native.uu___is_Mktuple2 @x1py686 @x2py526 @x3py383)) :pattern ((FStar.Pervasives.Native.uu___is_Mktuple2 @x1py686 @x2py526 @x3py383)) ))) :pattern ((ApplyTT @x0py509 FStar.Pervasives.Native.uu___is_Mktuple2@tok)) )) :named function_token_typing_FStar.Pervasives.Native.uu___is_Mktuple2))
(assert (! (forall ((@x0py510 Term)) (! (and (NoHoist @x0py510 (HasType FStar.Pervasives.Native.uu___is_Mktuple3@tok (Tm_arrow_81b181f0a50be9c359f1e3afcab46996 Prims.bool))) (forall ((@x1py687 Term)(@x2py527 Term)(@x3py384 Term)(@x4py286 Term)) (! (= (ApplyTT (ApplyTT (ApplyTT (ApplyTT FStar.Pervasives.Native.uu___is_Mktuple3@tok @x1py687) @x2py527) @x3py384) @x4py286) (FStar.Pervasives.Native.uu___is_Mktuple3 @x1py687 @x2py527 @x3py384 @x4py286)) :pattern ((FStar.Pervasives.Native.uu___is_Mktuple3 @x1py687 @x2py527 @x3py384 @x4py286)) ))) :pattern ((ApplyTT @x0py510 FStar.Pervasives.Native.uu___is_Mktuple3@tok)) )) :named function_token_typing_FStar.Pervasives.Native.uu___is_Mktuple3))
(assert (! (forall ((@x0py511 Term)) (! (and (NoHoist @x0py511 (HasType FStar.Pervasives.Native.uu___is_Mktuple4@tok (Tm_arrow_471e47868c0f16aa720099399b21873e Prims.bool))) (forall ((@x1py688 Term)(@x2py528 Term)(@x3py385 Term)(@x4py287 Term)(@x5py226 Term)) (! (= (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT FStar.Pervasives.Native.uu___is_Mktuple4@tok @x1py688) @x2py528) @x3py385) @x4py287) @x5py226) (FStar.Pervasives.Native.uu___is_Mktuple4 @x1py688 @x2py528 @x3py385 @x4py287 @x5py226)) :pattern ((FStar.Pervasives.Native.uu___is_Mktuple4 @x1py688 @x2py528 @x3py385 @x4py287 @x5py226)) ))) :pattern ((ApplyTT @x0py511 FStar.Pervasives.Native.uu___is_Mktuple4@tok)) )) :named function_token_typing_FStar.Pervasives.Native.uu___is_Mktuple4))
(assert (! (forall ((@x0py512 Term)) (! (and (NoHoist @x0py512 (HasType FStar.Pervasives.Native.uu___is_Mktuple5@tok (Tm_arrow_071cdac364befd9b3a1ef15c982380ca Prims.bool))) (forall ((@x1py689 Term)(@x2py529 Term)(@x3py386 Term)(@x4py288 Term)(@x5py227 Term)(@x6py153 Term)) (! (= (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT FStar.Pervasives.Native.uu___is_Mktuple5@tok @x1py689) @x2py529) @x3py386) @x4py288) @x5py227) @x6py153) (FStar.Pervasives.Native.uu___is_Mktuple5 @x1py689 @x2py529 @x3py386 @x4py288 @x5py227 @x6py153)) :pattern ((FStar.Pervasives.Native.uu___is_Mktuple5 @x1py689 @x2py529 @x3py386 @x4py288 @x5py227 @x6py153)) ))) :pattern ((ApplyTT @x0py512 FStar.Pervasives.Native.uu___is_Mktuple5@tok)) )) :named function_token_typing_FStar.Pervasives.Native.uu___is_Mktuple5))
(assert (! (forall ((@x0py513 Term)) (! (and (NoHoist @x0py513 (HasType FStar.Pervasives.Native.uu___is_Mktuple6@tok (Tm_arrow_b4cc8204c08bed808cee22615b49bc5f Prims.bool))) (forall ((@x1py690 Term)(@x2py530 Term)(@x3py387 Term)(@x4py289 Term)(@x5py228 Term)(@x6py154 Term)(@x7py112 Term)) (! (= (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT FStar.Pervasives.Native.uu___is_Mktuple6@tok @x1py690) @x2py530) @x3py387) @x4py289) @x5py228) @x6py154) @x7py112) (FStar.Pervasives.Native.uu___is_Mktuple6 @x1py690 @x2py530 @x3py387 @x4py289 @x5py228 @x6py154 @x7py112)) :pattern ((FStar.Pervasives.Native.uu___is_Mktuple6 @x1py690 @x2py530 @x3py387 @x4py289 @x5py228 @x6py154 @x7py112)) ))) :pattern ((ApplyTT @x0py513 FStar.Pervasives.Native.uu___is_Mktuple6@tok)) )) :named function_token_typing_FStar.Pervasives.Native.uu___is_Mktuple6))
(assert (! (forall ((@x0py514 Term)) (! (and (NoHoist @x0py514 (HasType FStar.Pervasives.Native.uu___is_Mktuple7@tok (Tm_arrow_bc1e750d04f01d381d7c63e81b8697d1 Prims.bool))) (forall ((@x1py691 Term)(@x2py531 Term)(@x3py388 Term)(@x4py290 Term)(@x5py229 Term)(@x6py155 Term)(@x7py113 Term)(@x8py76 Term)) (! (= (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT FStar.Pervasives.Native.uu___is_Mktuple7@tok @x1py691) @x2py531) @x3py388) @x4py290) @x5py229) @x6py155) @x7py113) @x8py76) (FStar.Pervasives.Native.uu___is_Mktuple7 @x1py691 @x2py531 @x3py388 @x4py290 @x5py229 @x6py155 @x7py113 @x8py76)) :pattern ((FStar.Pervasives.Native.uu___is_Mktuple7 @x1py691 @x2py531 @x3py388 @x4py290 @x5py229 @x6py155 @x7py113 @x8py76)) ))) :pattern ((ApplyTT @x0py514 FStar.Pervasives.Native.uu___is_Mktuple7@tok)) )) :named function_token_typing_FStar.Pervasives.Native.uu___is_Mktuple7))
(assert (! (forall ((@x0py515 Term)) (! (and (NoHoist @x0py515 (HasType FStar.Pervasives.Native.uu___is_Mktuple8@tok (Tm_arrow_302ec1d59a0c160d8b944503f142e361 Prims.bool))) (forall ((@x1py692 Term)(@x2py532 Term)(@x3py389 Term)(@x4py291 Term)(@x5py230 Term)(@x6py156 Term)(@x7py114 Term)(@x8py77 Term)(@x9py48 Term)) (! (= (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT FStar.Pervasives.Native.uu___is_Mktuple8@tok @x1py692) @x2py532) @x3py389) @x4py291) @x5py230) @x6py156) @x7py114) @x8py77) @x9py48) (FStar.Pervasives.Native.uu___is_Mktuple8 @x1py692 @x2py532 @x3py389 @x4py291 @x5py230 @x6py156 @x7py114 @x8py77 @x9py48)) :pattern ((FStar.Pervasives.Native.uu___is_Mktuple8 @x1py692 @x2py532 @x3py389 @x4py291 @x5py230 @x6py156 @x7py114 @x8py77 @x9py48)) ))) :pattern ((ApplyTT @x0py515 FStar.Pervasives.Native.uu___is_Mktuple8@tok)) )) :named function_token_typing_FStar.Pervasives.Native.uu___is_Mktuple8))
(assert (! (forall ((@x0py516 Term)) (! (and (NoHoist @x0py516 (HasType FStar.Pervasives.Native.uu___is_None@tok (Tm_arrow_6d32d43d8787bb16acca18c75ecbe1b1 Prims.bool))) (forall ((@x1py693 Term)(@x2py533 Term)) (! (= (ApplyTT (ApplyTT FStar.Pervasives.Native.uu___is_None@tok @x1py693) @x2py533) (FStar.Pervasives.Native.uu___is_None @x1py693 @x2py533)) :pattern ((FStar.Pervasives.Native.uu___is_None @x1py693 @x2py533)) ))) :pattern ((ApplyTT @x0py516 FStar.Pervasives.Native.uu___is_None@tok)) )) :named function_token_typing_FStar.Pervasives.Native.uu___is_None))
(assert (! (forall ((@x0py517 Term)) (! (and (NoHoist @x0py517 (HasType FStar.Pervasives.Native.uu___is_Primops@tok (Tm_arrow_9cb3c953faf527c316d427b2ce8bd81b Prims.bool FStar.Pervasives.Native.norm_step))) (forall ((@x1py694 Term)) (! (= (ApplyTT FStar.Pervasives.Native.uu___is_Primops@tok @x1py694) (FStar.Pervasives.Native.uu___is_Primops @x1py694)) :pattern ((FStar.Pervasives.Native.uu___is_Primops @x1py694)) ))) :pattern ((ApplyTT @x0py517 FStar.Pervasives.Native.uu___is_Primops@tok)) )) :named function_token_typing_FStar.Pervasives.Native.uu___is_Primops))
(assert (! (forall ((@x0py518 Term)) (! (and (NoHoist @x0py518 (HasType FStar.Pervasives.Native.uu___is_Simpl@tok (Tm_arrow_9cb3c953faf527c316d427b2ce8bd81b Prims.bool FStar.Pervasives.Native.norm_step))) (forall ((@x1py695 Term)) (! (= (ApplyTT FStar.Pervasives.Native.uu___is_Simpl@tok @x1py695) (FStar.Pervasives.Native.uu___is_Simpl @x1py695)) :pattern ((FStar.Pervasives.Native.uu___is_Simpl @x1py695)) ))) :pattern ((ApplyTT @x0py518 FStar.Pervasives.Native.uu___is_Simpl@tok)) )) :named function_token_typing_FStar.Pervasives.Native.uu___is_Simpl))
(assert (! (forall ((@x0py519 Term)) (! (and (NoHoist @x0py519 (HasType FStar.Pervasives.Native.uu___is_Some@tok (Tm_arrow_6d32d43d8787bb16acca18c75ecbe1b1 Prims.bool))) (forall ((@x1py696 Term)(@x2py534 Term)) (! (= (ApplyTT (ApplyTT FStar.Pervasives.Native.uu___is_Some@tok @x1py696) @x2py534) (FStar.Pervasives.Native.uu___is_Some @x1py696 @x2py534)) :pattern ((FStar.Pervasives.Native.uu___is_Some @x1py696 @x2py534)) ))) :pattern ((ApplyTT @x0py519 FStar.Pervasives.Native.uu___is_Some@tok)) )) :named function_token_typing_FStar.Pervasives.Native.uu___is_Some))
(assert (! (forall ((@x0py520 Term)) (! (and (NoHoist @x0py520 (HasType FStar.Pervasives.Native.uu___is_UnfoldAttr@tok (Tm_arrow_9cb3c953faf527c316d427b2ce8bd81b Prims.bool FStar.Pervasives.Native.norm_step))) (forall ((@x1py697 Term)) (! (= (ApplyTT FStar.Pervasives.Native.uu___is_UnfoldAttr@tok @x1py697) (FStar.Pervasives.Native.uu___is_UnfoldAttr @x1py697)) :pattern ((FStar.Pervasives.Native.uu___is_UnfoldAttr @x1py697)) ))) :pattern ((ApplyTT @x0py520 FStar.Pervasives.Native.uu___is_UnfoldAttr@tok)) )) :named function_token_typing_FStar.Pervasives.Native.uu___is_UnfoldAttr))
(assert (! (forall ((@x0py521 Term)) (! (and (NoHoist @x0py521 (HasType FStar.Pervasives.Native.uu___is_UnfoldFully@tok (Tm_arrow_9cb3c953faf527c316d427b2ce8bd81b Prims.bool FStar.Pervasives.Native.norm_step))) (forall ((@x1py698 Term)) (! (= (ApplyTT FStar.Pervasives.Native.uu___is_UnfoldFully@tok @x1py698) (FStar.Pervasives.Native.uu___is_UnfoldFully @x1py698)) :pattern ((FStar.Pervasives.Native.uu___is_UnfoldFully @x1py698)) ))) :pattern ((ApplyTT @x0py521 FStar.Pervasives.Native.uu___is_UnfoldFully@tok)) )) :named function_token_typing_FStar.Pervasives.Native.uu___is_UnfoldFully))
(assert (! (forall ((@x0py522 Term)) (! (and (NoHoist @x0py522 (HasType FStar.Pervasives.Native.uu___is_UnfoldOnly@tok (Tm_arrow_9cb3c953faf527c316d427b2ce8bd81b Prims.bool FStar.Pervasives.Native.norm_step))) (forall ((@x1py699 Term)) (! (= (ApplyTT FStar.Pervasives.Native.uu___is_UnfoldOnly@tok @x1py699) (FStar.Pervasives.Native.uu___is_UnfoldOnly @x1py699)) :pattern ((FStar.Pervasives.Native.uu___is_UnfoldOnly @x1py699)) ))) :pattern ((ApplyTT @x0py522 FStar.Pervasives.Native.uu___is_UnfoldOnly@tok)) )) :named function_token_typing_FStar.Pervasives.Native.uu___is_UnfoldOnly))
(assert (! (forall ((@x0py523 Term)) (! (and (NoHoist @x0py523 (HasType FStar.Pervasives.Native.uu___is_Weak@tok (Tm_arrow_9cb3c953faf527c316d427b2ce8bd81b Prims.bool FStar.Pervasives.Native.norm_step))) (forall ((@x1py700 Term)) (! (= (ApplyTT FStar.Pervasives.Native.uu___is_Weak@tok @x1py700) (FStar.Pervasives.Native.uu___is_Weak @x1py700)) :pattern ((FStar.Pervasives.Native.uu___is_Weak @x1py700)) ))) :pattern ((ApplyTT @x0py523 FStar.Pervasives.Native.uu___is_Weak@tok)) )) :named function_token_typing_FStar.Pervasives.Native.uu___is_Weak))
(assert (! (forall ((@x0py524 Term)) (! (and (NoHoist @x0py524 (HasType FStar.Pervasives.Native.uu___is_Zeta@tok (Tm_arrow_9cb3c953faf527c316d427b2ce8bd81b Prims.bool FStar.Pervasives.Native.norm_step))) (forall ((@x1py701 Term)) (! (= (ApplyTT FStar.Pervasives.Native.uu___is_Zeta@tok @x1py701) (FStar.Pervasives.Native.uu___is_Zeta @x1py701)) :pattern ((FStar.Pervasives.Native.uu___is_Zeta @x1py701)) ))) :pattern ((ApplyTT @x0py524 FStar.Pervasives.Native.uu___is_Zeta@tok)) )) :named function_token_typing_FStar.Pervasives.Native.uu___is_Zeta))
(assert (! (HasType FStar.Pervasives.Native.Weak FStar.Pervasives.Native.norm_step) :named function_token_typing_FStar.Pervasives.Native.Weak))
(assert (! (HasType FStar.Pervasives.Native.weak FStar.Pervasives.Native.norm_step) :named function_token_typing_FStar.Pervasives.Native.weak))
(assert (! (forall ((@x0py525 Term)) (! (and (NoHoist @x0py525 (HasType FStar.Pervasives.Native.with_type@tok Tm_arrow_fa4e3ee4a3dfa402363cd0693fcbfca4)) (forall ((@x1py702 Term)(@x2py535 Term)) (! (= (ApplyTT (ApplyTT FStar.Pervasives.Native.with_type@tok @x1py702) @x2py535) (FStar.Pervasives.Native.with_type @x1py702 @x2py535)) :pattern ((FStar.Pervasives.Native.with_type @x1py702 @x2py535)) ))) :pattern ((ApplyTT @x0py525 FStar.Pervasives.Native.with_type@tok)) )) :named function_token_typing_FStar.Pervasives.Native.with_type))
(assert (! (HasType FStar.Pervasives.Native.Zeta FStar.Pervasives.Native.norm_step) :named function_token_typing_FStar.Pervasives.Native.Zeta))
(assert (! (HasType FStar.Pervasives.Native.zeta FStar.Pervasives.Native.norm_step) :named function_token_typing_FStar.Pervasives.Native.zeta))
(assert (! (HasType FStar.Pervasives.plugin Prims.unit) :named function_token_typing_FStar.Pervasives.plugin))
(assert (! (forall ((@x0py526 Term)) (! (and (NoHoist @x0py526 (HasType FStar.Pervasives.st_assert_p@tok (Tm_arrow_433e42e3116eeb237f1030231a24382d Prims.logical))) (forall ((@x1py703 Term)(@x2py536 Term)(@x3py390 Term)(@x4py292 Term)(@x5py231 Term)(@x6py157 Term)) (! (= (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT FStar.Pervasives.st_assert_p@tok @x1py703) @x2py536) @x3py390) @x4py292) @x5py231) @x6py157) (FStar.Pervasives.st_assert_p @x1py703 @x2py536 @x3py390 @x4py292 @x5py231 @x6py157)) :pattern ((FStar.Pervasives.st_assert_p @x1py703 @x2py536 @x3py390 @x4py292 @x5py231 @x6py157)) ))) :pattern ((ApplyTT @x0py526 FStar.Pervasives.st_assert_p@tok)) )) :named function_token_typing_FStar.Pervasives.st_assert_p))
(assert (! (forall ((@x0py527 Term)) (! (and (NoHoist @x0py527 (HasType FStar.Pervasives.st_assume_p@tok (Tm_arrow_433e42e3116eeb237f1030231a24382d Prims.logical))) (forall ((@x1py704 Term)(@x2py537 Term)(@x3py391 Term)(@x4py293 Term)(@x5py232 Term)(@x6py158 Term)) (! (= (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT FStar.Pervasives.st_assume_p@tok @x1py704) @x2py537) @x3py391) @x4py293) @x5py232) @x6py158) (FStar.Pervasives.st_assume_p @x1py704 @x2py537 @x3py391 @x4py293 @x5py232 @x6py158)) :pattern ((FStar.Pervasives.st_assume_p @x1py704 @x2py537 @x3py391 @x4py293 @x5py232 @x6py158)) ))) :pattern ((ApplyTT @x0py527 FStar.Pervasives.st_assume_p@tok)) )) :named function_token_typing_FStar.Pervasives.st_assume_p))
(assert (! (forall ((@x0py528 Term)) (! (and (NoHoist @x0py528 (HasType FStar.Pervasives.st_bind_wp@tok (Tm_arrow_c89a507d37bce525c784ce4c49ca4e78 Prims.range))) (forall ((@x1py705 Term)(@x2py538 Term)(@x3py392 Term)(@x4py294 Term)(@x5py233 Term)(@x6py159 Term)(@x7py115 Term)(@x8py78 Term)) (! (= (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT FStar.Pervasives.st_bind_wp@tok @x1py705) @x2py538) @x3py392) @x4py294) @x5py233) @x6py159) @x7py115) @x8py78) (FStar.Pervasives.st_bind_wp @x1py705 @x2py538 @x3py392 @x4py294 @x5py233 @x6py159 @x7py115 @x8py78)) :pattern ((FStar.Pervasives.st_bind_wp @x1py705 @x2py538 @x3py392 @x4py294 @x5py233 @x6py159 @x7py115 @x8py78)) ))) :pattern ((ApplyTT @x0py528 FStar.Pervasives.st_bind_wp@tok)) )) :named function_token_typing_FStar.Pervasives.st_bind_wp))
(assert (! (forall ((@x0py529 Term)) (! (and (NoHoist @x0py529 (HasType FStar.Pervasives.st_close_wp@tok (Tm_arrow_49e61e769c9e3a0a679cbd25d6e21a53 Prims.logical))) (forall ((@x1py706 Term)(@x2py539 Term)(@x3py393 Term)(@x4py295 Term)(@x5py234 Term)(@x6py160 Term)) (! (= (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT FStar.Pervasives.st_close_wp@tok @x1py706) @x2py539) @x3py393) @x4py295) @x5py234) @x6py160) (FStar.Pervasives.st_close_wp @x1py706 @x2py539 @x3py393 @x4py295 @x5py234 @x6py160)) :pattern ((FStar.Pervasives.st_close_wp @x1py706 @x2py539 @x3py393 @x4py295 @x5py234 @x6py160)) ))) :pattern ((ApplyTT @x0py529 FStar.Pervasives.st_close_wp@tok)) )) :named function_token_typing_FStar.Pervasives.st_close_wp))
(assert (! (forall ((@x0py530 Term)) (! (and (NoHoist @x0py530 (HasType FStar.Pervasives.st_if_then_else@tok (Tm_arrow_a8bd5744f1e631257a4264db50bf5a7c Prims.logical))) (forall ((@x1py707 Term)(@x2py540 Term)(@x3py394 Term)(@x4py296 Term)(@x5py235 Term)(@x6py161 Term)(@x7py116 Term)) (! (= (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT FStar.Pervasives.st_if_then_else@tok @x1py707) @x2py540) @x3py394) @x4py296) @x5py235) @x6py161) @x7py116) (FStar.Pervasives.st_if_then_else @x1py707 @x2py540 @x3py394 @x4py296 @x5py235 @x6py161 @x7py116)) :pattern ((FStar.Pervasives.st_if_then_else @x1py707 @x2py540 @x3py394 @x4py296 @x5py235 @x6py161 @x7py116)) ))) :pattern ((ApplyTT @x0py530 FStar.Pervasives.st_if_then_else@tok)) )) :named function_token_typing_FStar.Pervasives.st_if_then_else))
(assert (! (forall ((@x0py531 Term)) (! (and (NoHoist @x0py531 (HasType FStar.Pervasives.st_ite_wp@tok (Tm_arrow_1eae0eaa54a90d4d45405fc37f59299f Prims.logical))) (forall ((@x1py708 Term)(@x2py541 Term)(@x3py395 Term)(@x4py297 Term)(@x5py236 Term)) (! (= (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT FStar.Pervasives.st_ite_wp@tok @x1py708) @x2py541) @x3py395) @x4py297) @x5py236) (FStar.Pervasives.st_ite_wp @x1py708 @x2py541 @x3py395 @x4py297 @x5py236)) :pattern ((FStar.Pervasives.st_ite_wp @x1py708 @x2py541 @x3py395 @x4py297 @x5py236)) ))) :pattern ((ApplyTT @x0py531 FStar.Pervasives.st_ite_wp@tok)) )) :named function_token_typing_FStar.Pervasives.st_ite_wp))
(assert (! (forall ((@x0py532 Term)) (! (and (NoHoist @x0py532 (HasType FStar.Pervasives.st_null_wp@tok (Tm_arrow_2e05015ec978795a21c10130eebfeae9 Prims.logical))) (forall ((@x1py709 Term)(@x2py542 Term)(@x3py396 Term)(@x4py298 Term)) (! (= (ApplyTT (ApplyTT (ApplyTT (ApplyTT FStar.Pervasives.st_null_wp@tok @x1py709) @x2py542) @x3py396) @x4py298) (FStar.Pervasives.st_null_wp @x1py709 @x2py542 @x3py396 @x4py298)) :pattern ((FStar.Pervasives.st_null_wp @x1py709 @x2py542 @x3py396 @x4py298)) ))) :pattern ((ApplyTT @x0py532 FStar.Pervasives.st_null_wp@tok)) )) :named function_token_typing_FStar.Pervasives.st_null_wp))
(assert (! (forall ((@x0py533 Term)) (! (and (NoHoist @x0py533 (HasType FStar.Pervasives.st_post_h@tok Tm_arrow_30967c52768a603d18eb4835e5ba8f79)) (forall ((@x1py710 Term)(@x2py543 Term)) (! (= (ApplyTT (ApplyTT FStar.Pervasives.st_post_h@tok @x1py710) @x2py543) (FStar.Pervasives.st_post_h @x1py710 @x2py543)) :pattern ((FStar.Pervasives.st_post_h @x1py710 @x2py543)) ))) :pattern ((ApplyTT @x0py533 FStar.Pervasives.st_post_h@tok)) )) :named function_token_typing_FStar.Pervasives.st_post_h))
(assert (! (forall ((@x0py534 Term)) (! (and (NoHoist @x0py534 (HasType FStar.Pervasives.st_post_h_@tok Tm_arrow_2b9e6d83dc78155badfb9f85c9c4c887)) (forall ((@x1py711 Term)(@x2py544 Term)(@x3py397 Term)) (! (= (ApplyTT (ApplyTT (ApplyTT FStar.Pervasives.st_post_h_@tok @x1py711) @x2py544) @x3py397) (FStar.Pervasives.st_post_h_ @x1py711 @x2py544 @x3py397)) :pattern ((FStar.Pervasives.st_post_h_ @x1py711 @x2py544 @x3py397)) ))) :pattern ((ApplyTT @x0py534 FStar.Pervasives.st_post_h_@tok)) )) :named function_token_typing_FStar.Pervasives.st_post_h_))
(assert (! (forall ((@x0py535 Term)) (! (and (NoHoist @x0py535 (HasType FStar.Pervasives.st_pre_h@tok Tm_arrow_257be5ee7da9f477702a7d2ee9bef0c9)) (forall ((@x1py712 Term)) (! (= (ApplyTT FStar.Pervasives.st_pre_h@tok @x1py712) (FStar.Pervasives.st_pre_h @x1py712)) :pattern ((FStar.Pervasives.st_pre_h @x1py712)) ))) :pattern ((ApplyTT @x0py535 FStar.Pervasives.st_pre_h@tok)) )) :named function_token_typing_FStar.Pervasives.st_pre_h))
(assert (! (forall ((@x0py536 Term)) (! (and (NoHoist @x0py536 (HasType FStar.Pervasives.st_return@tok Tm_arrow_13dd269756cb773b57b515955a3c167c)) (forall ((@x1py713 Term)(@x2py545 Term)(@x3py398 Term)(@x4py299 Term)) (! (= (ApplyTT (ApplyTT (ApplyTT (ApplyTT FStar.Pervasives.st_return@tok @x1py713) @x2py545) @x3py398) @x4py299) (FStar.Pervasives.st_return @x1py713 @x2py545 @x3py398 @x4py299)) :pattern ((FStar.Pervasives.st_return @x1py713 @x2py545 @x3py398 @x4py299)) ))) :pattern ((ApplyTT @x0py536 FStar.Pervasives.st_return@tok)) )) :named function_token_typing_FStar.Pervasives.st_return))
(assert (! (forall ((@x0py537 Term)) (! (and (NoHoist @x0py537 (HasType FStar.Pervasives.st_stronger@tok (Tm_arrow_17a09828089dfad9c34f612c63238178 Prims.logical))) (forall ((@x1py714 Term)(@x2py546 Term)(@x3py399 Term)(@x4py300 Term)) (! (= (ApplyTT (ApplyTT (ApplyTT (ApplyTT FStar.Pervasives.st_stronger@tok @x1py714) @x2py546) @x3py399) @x4py300) (FStar.Pervasives.st_stronger @x1py714 @x2py546 @x3py399 @x4py300)) :pattern ((FStar.Pervasives.st_stronger @x1py714 @x2py546 @x3py399 @x4py300)) ))) :pattern ((ApplyTT @x0py537 FStar.Pervasives.st_stronger@tok)) )) :named function_token_typing_FStar.Pervasives.st_stronger))
(assert (! (forall ((@x0py538 Term)) (! (and (NoHoist @x0py538 (HasType FStar.Pervasives.st_trivial@tok (Tm_arrow_d1e52eaae1c31c37e88414cfa45e35d7 Prims.logical))) (forall ((@x1py715 Term)(@x2py547 Term)(@x3py400 Term)) (! (= (ApplyTT (ApplyTT (ApplyTT FStar.Pervasives.st_trivial@tok @x1py715) @x2py547) @x3py400) (FStar.Pervasives.st_trivial @x1py715 @x2py547 @x3py400)) :pattern ((FStar.Pervasives.st_trivial @x1py715 @x2py547 @x3py400)) ))) :pattern ((ApplyTT @x0py538 FStar.Pervasives.st_trivial@tok)) )) :named function_token_typing_FStar.Pervasives.st_trivial))
(assert (! (forall ((@x0py539 Term)) (! (and (NoHoist @x0py539 (HasType FStar.Pervasives.st_wp_h@tok Tm_arrow_30967c52768a603d18eb4835e5ba8f79)) (forall ((@x1py716 Term)(@x2py548 Term)) (! (= (ApplyTT (ApplyTT FStar.Pervasives.st_wp_h@tok @x1py716) @x2py548) (FStar.Pervasives.st_wp_h @x1py716 @x2py548)) :pattern ((FStar.Pervasives.st_wp_h @x1py716 @x2py548)) ))) :pattern ((ApplyTT @x0py539 FStar.Pervasives.st_wp_h@tok)) )) :named function_token_typing_FStar.Pervasives.st_wp_h))
(assert (! (forall ((@x0py540 Term)) (! (and (NoHoist @x0py540 (HasType FStar.Pervasives.uu___is_CConst@tok (Tm_arrow_2c5c4d02fbece15e63160b3c87c78b01 Prims.bool))) (forall ((@x1py717 Term)) (! (= (ApplyTT FStar.Pervasives.uu___is_CConst@tok @x1py717) (FStar.Pervasives.uu___is_CConst @x1py717)) :pattern ((FStar.Pervasives.uu___is_CConst @x1py717)) ))) :pattern ((ApplyTT @x0py540 FStar.Pervasives.uu___is_CConst@tok)) )) :named function_token_typing_FStar.Pervasives.uu___is_CConst))
(assert (! (forall ((@x0py541 Term)) (! (and (NoHoist @x0py541 (HasType FStar.Pervasives.uu___is_CEpilogue@tok (Tm_arrow_2c5c4d02fbece15e63160b3c87c78b01 Prims.bool))) (forall ((@x1py718 Term)) (! (= (ApplyTT FStar.Pervasives.uu___is_CEpilogue@tok @x1py718) (FStar.Pervasives.uu___is_CEpilogue @x1py718)) :pattern ((FStar.Pervasives.uu___is_CEpilogue @x1py718)) ))) :pattern ((ApplyTT @x0py541 FStar.Pervasives.uu___is_CEpilogue@tok)) )) :named function_token_typing_FStar.Pervasives.uu___is_CEpilogue))
(assert (! (forall ((@x0py542 Term)) (! (and (NoHoist @x0py542 (HasType FStar.Pervasives.uu___is_CInline@tok (Tm_arrow_2c5c4d02fbece15e63160b3c87c78b01 Prims.bool))) (forall ((@x1py719 Term)) (! (= (ApplyTT FStar.Pervasives.uu___is_CInline@tok @x1py719) (FStar.Pervasives.uu___is_CInline @x1py719)) :pattern ((FStar.Pervasives.uu___is_CInline @x1py719)) ))) :pattern ((ApplyTT @x0py542 FStar.Pervasives.uu___is_CInline@tok)) )) :named function_token_typing_FStar.Pervasives.uu___is_CInline))
(assert (! (forall ((@x0py543 Term)) (! (and (NoHoist @x0py543 (HasType FStar.Pervasives.uu___is_Comment@tok (Tm_arrow_2c5c4d02fbece15e63160b3c87c78b01 Prims.bool))) (forall ((@x1py720 Term)) (! (= (ApplyTT FStar.Pervasives.uu___is_Comment@tok @x1py720) (FStar.Pervasives.uu___is_Comment @x1py720)) :pattern ((FStar.Pervasives.uu___is_Comment @x1py720)) ))) :pattern ((ApplyTT @x0py543 FStar.Pervasives.uu___is_Comment@tok)) )) :named function_token_typing_FStar.Pervasives.uu___is_Comment))
(assert (! (forall ((@x0py544 Term)) (! (and (NoHoist @x0py544 (HasType FStar.Pervasives.uu___is_CPrologue@tok (Tm_arrow_2c5c4d02fbece15e63160b3c87c78b01 Prims.bool))) (forall ((@x1py721 Term)) (! (= (ApplyTT FStar.Pervasives.uu___is_CPrologue@tok @x1py721) (FStar.Pervasives.uu___is_CPrologue @x1py721)) :pattern ((FStar.Pervasives.uu___is_CPrologue @x1py721)) ))) :pattern ((ApplyTT @x0py544 FStar.Pervasives.uu___is_CPrologue@tok)) )) :named function_token_typing_FStar.Pervasives.uu___is_CPrologue))
(assert (! (forall ((@x0py545 Term)) (! (and (NoHoist @x0py545 (HasType FStar.Pervasives.uu___is_E@tok (Tm_arrow_e62fd03c6d75c90fe0c21b54135b4ded Prims.bool))) (forall ((@x1py722 Term)(@x2py549 Term)) (! (= (ApplyTT (ApplyTT FStar.Pervasives.uu___is_E@tok @x1py722) @x2py549) (FStar.Pervasives.uu___is_E @x1py722 @x2py549)) :pattern ((FStar.Pervasives.uu___is_E @x1py722 @x2py549)) ))) :pattern ((ApplyTT @x0py545 FStar.Pervasives.uu___is_E@tok)) )) :named function_token_typing_FStar.Pervasives.uu___is_E))
(assert (! (forall ((@x0py546 Term)) (! (and (NoHoist @x0py546 (HasType FStar.Pervasives.uu___is_Err@tok (Tm_arrow_e62fd03c6d75c90fe0c21b54135b4ded Prims.bool))) (forall ((@x1py723 Term)(@x2py550 Term)) (! (= (ApplyTT (ApplyTT FStar.Pervasives.uu___is_Err@tok @x1py723) @x2py550) (FStar.Pervasives.uu___is_Err @x1py723 @x2py550)) :pattern ((FStar.Pervasives.uu___is_Err @x1py723 @x2py550)) ))) :pattern ((ApplyTT @x0py546 FStar.Pervasives.uu___is_Err@tok)) )) :named function_token_typing_FStar.Pervasives.uu___is_Err))
(assert (! (forall ((@x0py547 Term)) (! (and (NoHoist @x0py547 (HasType FStar.Pervasives.uu___is_Gc@tok (Tm_arrow_2c5c4d02fbece15e63160b3c87c78b01 Prims.bool))) (forall ((@x1py724 Term)) (! (= (ApplyTT FStar.Pervasives.uu___is_Gc@tok @x1py724) (FStar.Pervasives.uu___is_Gc @x1py724)) :pattern ((FStar.Pervasives.uu___is_Gc @x1py724)) ))) :pattern ((ApplyTT @x0py547 FStar.Pervasives.uu___is_Gc@tok)) )) :named function_token_typing_FStar.Pervasives.uu___is_Gc))
(assert (! (forall ((@x0py548 Term)) (! (and (NoHoist @x0py548 (HasType FStar.Pervasives.uu___is_Inl@tok (Tm_arrow_59435ca7efae8c5a13162daf50ca7594 Prims.bool))) (forall ((@x1py725 Term)(@x2py551 Term)(@x3py401 Term)) (! (= (ApplyTT (ApplyTT (ApplyTT FStar.Pervasives.uu___is_Inl@tok @x1py725) @x2py551) @x3py401) (FStar.Pervasives.uu___is_Inl @x1py725 @x2py551 @x3py401)) :pattern ((FStar.Pervasives.uu___is_Inl @x1py725 @x2py551 @x3py401)) ))) :pattern ((ApplyTT @x0py548 FStar.Pervasives.uu___is_Inl@tok)) )) :named function_token_typing_FStar.Pervasives.uu___is_Inl))
(assert (! (forall ((@x0py549 Term)) (! (and (NoHoist @x0py549 (HasType FStar.Pervasives.uu___is_Inr@tok (Tm_arrow_59435ca7efae8c5a13162daf50ca7594 Prims.bool))) (forall ((@x1py726 Term)(@x2py552 Term)(@x3py402 Term)) (! (= (ApplyTT (ApplyTT (ApplyTT FStar.Pervasives.uu___is_Inr@tok @x1py726) @x2py552) @x3py402) (FStar.Pervasives.uu___is_Inr @x1py726 @x2py552 @x3py402)) :pattern ((FStar.Pervasives.uu___is_Inr @x1py726 @x2py552 @x3py402)) ))) :pattern ((ApplyTT @x0py549 FStar.Pervasives.uu___is_Inr@tok)) )) :named function_token_typing_FStar.Pervasives.uu___is_Inr))
(assert (! (forall ((@x0py550 Term)) (! (and (NoHoist @x0py550 (HasType FStar.Pervasives.uu___is_Mkdtuple3@tok (Tm_arrow_25c72f362ef3d8a23658a89597e3665d Prims.bool))) (forall ((@x1py727 Term)(@x2py553 Term)(@x3py403 Term)(@x4py301 Term)) (! (= (ApplyTT (ApplyTT (ApplyTT (ApplyTT FStar.Pervasives.uu___is_Mkdtuple3@tok @x1py727) @x2py553) @x3py403) @x4py301) (FStar.Pervasives.uu___is_Mkdtuple3 @x1py727 @x2py553 @x3py403 @x4py301)) :pattern ((FStar.Pervasives.uu___is_Mkdtuple3 @x1py727 @x2py553 @x3py403 @x4py301)) ))) :pattern ((ApplyTT @x0py550 FStar.Pervasives.uu___is_Mkdtuple3@tok)) )) :named function_token_typing_FStar.Pervasives.uu___is_Mkdtuple3))
(assert (! (forall ((@x0py551 Term)) (! (and (NoHoist @x0py551 (HasType FStar.Pervasives.uu___is_Mkdtuple4@tok (Tm_arrow_08bfe555982713e1ba6b9cc3db1f9942 Prims.bool))) (forall ((@x1py728 Term)(@x2py554 Term)(@x3py404 Term)(@x4py302 Term)(@x5py237 Term)) (! (= (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT FStar.Pervasives.uu___is_Mkdtuple4@tok @x1py728) @x2py554) @x3py404) @x4py302) @x5py237) (FStar.Pervasives.uu___is_Mkdtuple4 @x1py728 @x2py554 @x3py404 @x4py302 @x5py237)) :pattern ((FStar.Pervasives.uu___is_Mkdtuple4 @x1py728 @x2py554 @x3py404 @x4py302 @x5py237)) ))) :pattern ((ApplyTT @x0py551 FStar.Pervasives.uu___is_Mkdtuple4@tok)) )) :named function_token_typing_FStar.Pervasives.uu___is_Mkdtuple4))
(assert (! (forall ((@x0py552 Term)) (! (and (NoHoist @x0py552 (HasType FStar.Pervasives.uu___is_PpxDerivingShow@tok (Tm_arrow_2c5c4d02fbece15e63160b3c87c78b01 Prims.bool))) (forall ((@x1py729 Term)) (! (= (ApplyTT FStar.Pervasives.uu___is_PpxDerivingShow@tok @x1py729) (FStar.Pervasives.uu___is_PpxDerivingShow @x1py729)) :pattern ((FStar.Pervasives.uu___is_PpxDerivingShow @x1py729)) ))) :pattern ((ApplyTT @x0py552 FStar.Pervasives.uu___is_PpxDerivingShow@tok)) )) :named function_token_typing_FStar.Pervasives.uu___is_PpxDerivingShow))
(assert (! (forall ((@x0py553 Term)) (! (and (NoHoist @x0py553 (HasType FStar.Pervasives.uu___is_PpxDerivingShowConstant@tok (Tm_arrow_2c5c4d02fbece15e63160b3c87c78b01 Prims.bool))) (forall ((@x1py730 Term)) (! (= (ApplyTT FStar.Pervasives.uu___is_PpxDerivingShowConstant@tok @x1py730) (FStar.Pervasives.uu___is_PpxDerivingShowConstant @x1py730)) :pattern ((FStar.Pervasives.uu___is_PpxDerivingShowConstant @x1py730)) ))) :pattern ((ApplyTT @x0py553 FStar.Pervasives.uu___is_PpxDerivingShowConstant@tok)) )) :named function_token_typing_FStar.Pervasives.uu___is_PpxDerivingShowConstant))
(assert (! (forall ((@x0py554 Term)) (! (and (NoHoist @x0py554 (HasType FStar.Pervasives.uu___is_PpxDerivingYoJson@tok (Tm_arrow_2c5c4d02fbece15e63160b3c87c78b01 Prims.bool))) (forall ((@x1py731 Term)) (! (= (ApplyTT FStar.Pervasives.uu___is_PpxDerivingYoJson@tok @x1py731) (FStar.Pervasives.uu___is_PpxDerivingYoJson @x1py731)) :pattern ((FStar.Pervasives.uu___is_PpxDerivingYoJson @x1py731)) ))) :pattern ((ApplyTT @x0py554 FStar.Pervasives.uu___is_PpxDerivingYoJson@tok)) )) :named function_token_typing_FStar.Pervasives.uu___is_PpxDerivingYoJson))
(assert (! (forall ((@x0py555 Term)) (! (and (NoHoist @x0py555 (HasType FStar.Pervasives.uu___is_Substitute@tok (Tm_arrow_2c5c4d02fbece15e63160b3c87c78b01 Prims.bool))) (forall ((@x1py732 Term)) (! (= (ApplyTT FStar.Pervasives.uu___is_Substitute@tok @x1py732) (FStar.Pervasives.uu___is_Substitute @x1py732)) :pattern ((FStar.Pervasives.uu___is_Substitute @x1py732)) ))) :pattern ((ApplyTT @x0py555 FStar.Pervasives.uu___is_Substitute@tok)) )) :named function_token_typing_FStar.Pervasives.uu___is_Substitute))
(assert (! (forall ((@x0py556 Term)) (! (and (NoHoist @x0py556 (HasType FStar.Pervasives.uu___is_V@tok (Tm_arrow_e62fd03c6d75c90fe0c21b54135b4ded Prims.bool))) (forall ((@x1py733 Term)(@x2py555 Term)) (! (= (ApplyTT (ApplyTT FStar.Pervasives.uu___is_V@tok @x1py733) @x2py555) (FStar.Pervasives.uu___is_V @x1py733 @x2py555)) :pattern ((FStar.Pervasives.uu___is_V @x1py733 @x2py555)) ))) :pattern ((ApplyTT @x0py556 FStar.Pervasives.uu___is_V@tok)) )) :named function_token_typing_FStar.Pervasives.uu___is_V))
(assert (! (forall ((@x0py557 Term)) (! (and (NoHoist @x0py557 (HasType Prims.__proj__And__item___0@tok Tm_arrow_301a720cbb1c5487adfd2a0b64c67b7e)) (forall ((@x1py734 Term)(@x2py556 Term)(@x3py405 Term)) (! (= (ApplyTT (ApplyTT (ApplyTT Prims.__proj__And__item___0@tok @x1py734) @x2py556) @x3py405) (Prims.__proj__And__item___0 @x1py734 @x2py556 @x3py405)) :pattern ((Prims.__proj__And__item___0 @x1py734 @x2py556 @x3py405)) ))) :pattern ((ApplyTT @x0py557 Prims.__proj__And__item___0@tok)) )) :named function_token_typing_Prims.__proj__And__item___0))
(assert (! (forall ((@x0py558 Term)) (! (and (NoHoist @x0py558 (HasType Prims.__proj__And__item___1@tok Tm_arrow_b6d5b453dd814b79a1d29a5f85b3161f)) (forall ((@x1py735 Term)(@x2py557 Term)(@x3py406 Term)) (! (= (ApplyTT (ApplyTT (ApplyTT Prims.__proj__And__item___1@tok @x1py735) @x2py557) @x3py406) (Prims.__proj__And__item___1 @x1py735 @x2py557 @x3py406)) :pattern ((Prims.__proj__And__item___1 @x1py735 @x2py557 @x3py406)) ))) :pattern ((ApplyTT @x0py558 Prims.__proj__And__item___1@tok)) )) :named function_token_typing_Prims.__proj__And__item___1))
(assert (! (forall ((@x0py559 Term)) (! (and (NoHoist @x0py559 (HasType Prims.__proj__Cons__item__hd@tok Tm_arrow_3ca80ddba151a71b9c9aa6e8efea65cd)) (forall ((@x1py736 Term)(@x2py558 Term)) (! (= (ApplyTT (ApplyTT Prims.__proj__Cons__item__hd@tok @x1py736) @x2py558) (Prims.__proj__Cons__item__hd @x1py736 @x2py558)) :pattern ((Prims.__proj__Cons__item__hd @x1py736 @x2py558)) ))) :pattern ((ApplyTT @x0py559 Prims.__proj__Cons__item__hd@tok)) )) :named function_token_typing_Prims.__proj__Cons__item__hd))
(assert (! (forall ((@x0py560 Term)) (! (and (NoHoist @x0py560 (HasType Prims.__proj__Cons__item__tl@tok Tm_arrow_a704b31706c9f8227ffcec83d74a9b31)) (forall ((@x1py737 Term)(@x2py559 Term)) (! (= (ApplyTT (ApplyTT Prims.__proj__Cons__item__tl@tok @x1py737) @x2py559) (Prims.__proj__Cons__item__tl @x1py737 @x2py559)) :pattern ((Prims.__proj__Cons__item__tl @x1py737 @x2py559)) ))) :pattern ((ApplyTT @x0py560 Prims.__proj__Cons__item__tl@tok)) )) :named function_token_typing_Prims.__proj__Cons__item__tl))
(assert (! (forall ((@x0py561 Term)) (! (and (NoHoist @x0py561 (HasType Prims.__proj__Left__item___0@tok Tm_arrow_7e78dbd6763d8fddb37f1e732bda927c)) (forall ((@x1py738 Term)(@x2py560 Term)(@x3py407 Term)) (! (= (ApplyTT (ApplyTT (ApplyTT Prims.__proj__Left__item___0@tok @x1py738) @x2py560) @x3py407) (Prims.__proj__Left__item___0 @x1py738 @x2py560 @x3py407)) :pattern ((Prims.__proj__Left__item___0 @x1py738 @x2py560 @x3py407)) ))) :pattern ((ApplyTT @x0py561 Prims.__proj__Left__item___0@tok)) )) :named function_token_typing_Prims.__proj__Left__item___0))
(assert (! (forall ((@x0py562 Term)) (! (and (NoHoist @x0py562 (HasType Prims.__proj__Mkdtuple2__item___1@tok Tm_arrow_ec4aa512bc54da67a0356075af124e44)) (forall ((@x1py739 Term)(@x2py561 Term)(@x3py408 Term)) (! (= (ApplyTT (ApplyTT (ApplyTT Prims.__proj__Mkdtuple2__item___1@tok @x1py739) @x2py561) @x3py408) (Prims.__proj__Mkdtuple2__item___1 @x1py739 @x2py561 @x3py408)) :pattern ((Prims.__proj__Mkdtuple2__item___1 @x1py739 @x2py561 @x3py408)) ))) :pattern ((ApplyTT @x0py562 Prims.__proj__Mkdtuple2__item___1@tok)) )) :named function_token_typing_Prims.__proj__Mkdtuple2__item___1))
(assert (! (forall ((@x0py563 Term)) (! (and (NoHoist @x0py563 (HasType Prims.__proj__Mkdtuple2__item___2@tok Tm_arrow_2e5fda2477c3f2ade2b68a9685bf6393)) (forall ((@x1py740 Term)(@x2py562 Term)(@x3py409 Term)) (! (= (ApplyTT (ApplyTT (ApplyTT Prims.__proj__Mkdtuple2__item___2@tok @x1py740) @x2py562) @x3py409) (Prims.__proj__Mkdtuple2__item___2 @x1py740 @x2py562 @x3py409)) :pattern ((Prims.__proj__Mkdtuple2__item___2 @x1py740 @x2py562 @x3py409)) ))) :pattern ((ApplyTT @x0py563 Prims.__proj__Mkdtuple2__item___2@tok)) )) :named function_token_typing_Prims.__proj__Mkdtuple2__item___2))
(assert (! (forall ((@x0py564 Term)) (! (and (NoHoist @x0py564 (HasType Prims.__proj__Right__item___0@tok Tm_arrow_c69c7e036a278fd3b0fe0b71a945feca)) (forall ((@x1py741 Term)(@x2py563 Term)(@x3py410 Term)) (! (= (ApplyTT (ApplyTT (ApplyTT Prims.__proj__Right__item___0@tok @x1py741) @x2py563) @x3py410) (Prims.__proj__Right__item___0 @x1py741 @x2py563 @x3py410)) :pattern ((Prims.__proj__Right__item___0 @x1py741 @x2py563 @x3py410)) ))) :pattern ((ApplyTT @x0py564 Prims.__proj__Right__item___0@tok)) )) :named function_token_typing_Prims.__proj__Right__item___0))
(assert (! (forall ((@x0py565 Term)) (! (and (NoHoist @x0py565 (HasType Prims._assert@tok Non_total_Tm_arrow_642)) (forall ((@x1py742 Term)) (! (= (ApplyTT Prims._assert@tok @x1py742) (Prims._assert @x1py742)) :pattern ((Prims._assert @x1py742)) ))) :pattern ((ApplyTT @x0py565 Prims._assert@tok)) )) :named function_token_typing_Prims._assert))
(assert (! (forall ((@x0py566 Term)) (! (and (NoHoist @x0py566 (HasType Prims._assume@tok Non_total_Tm_arrow_634)) (forall ((@x1py743 Term)) (! (= (ApplyTT Prims._assume@tok @x1py743) (Prims._assume @x1py743)) :pattern ((Prims._assume @x1py743)) ))) :pattern ((ApplyTT @x0py566 Prims._assume@tok)) )) :named function_token_typing_Prims._assume))
(assert (! (forall ((@x0py567 Term)) (! (and (NoHoist @x0py567 (HasType Prims.abs@tok (Tm_arrow_f82c3fb9ac6610efb97620a59b378092 Prims.int))) (forall ((@x1py744 Term)) (! (= (ApplyTT Prims.abs@tok @x1py744) (Prims.abs @x1py744)) :pattern ((Prims.abs @x1py744)) ))) :pattern ((ApplyTT @x0py567 Prims.abs@tok)) )) :named function_token_typing_Prims.abs))
(assert (! (forall ((@x0py568 Term)) (! (and (NoHoist @x0py568 (HasType Prims.admitP@tok Non_total_Tm_arrow_640)) (forall ((@x1py745 Term)) (! (= (ApplyTT Prims.admitP@tok @x1py745) (Prims.admitP @x1py745)) :pattern ((Prims.admitP @x1py745)) ))) :pattern ((ApplyTT @x0py568 Prims.admitP@tok)) )) :named function_token_typing_Prims.admitP))
(assert (! (forall ((@x0py569 Term)) (! (and (NoHoist @x0py569 (HasType Prims.array@tok Tm_arrow_257be5ee7da9f477702a7d2ee9bef0c9)) (forall ((@x1py746 Term)) (! (= (ApplyTT Prims.array@tok @x1py746) (Prims.array @x1py746)) :pattern ((Prims.array @x1py746)) ))) :pattern ((ApplyTT @x0py569 Prims.array@tok)) )) :named function_token_typing_Prims.array))
(assert (! (forall ((@x0py570 Term)) (! (and (NoHoist @x0py570 (HasType Prims.as_ensures@tok (Tm_arrow_03fd83481846190115df092b2a491354 Prims.logical))) (forall ((@x1py747 Term)(@x2py564 Term)(@x3py411 Term)) (! (= (ApplyTT (ApplyTT (ApplyTT Prims.as_ensures@tok @x1py747) @x2py564) @x3py411) (Prims.as_ensures @x1py747 @x2py564 @x3py411)) :pattern ((Prims.as_ensures @x1py747 @x2py564 @x3py411)) ))) :pattern ((ApplyTT @x0py570 Prims.as_ensures@tok)) )) :named function_token_typing_Prims.as_ensures))
(assert (! (forall ((@x0py571 Term)) (! (and (NoHoist @x0py571 (HasType Prims.as_requires@tok (Tm_arrow_21504714b743c269357a5ba76f64b480 Prims.pure_pre))) (forall ((@x1py748 Term)(@x2py565 Term)) (! (= (ApplyTT (ApplyTT Prims.as_requires@tok @x1py748) @x2py565) (Prims.as_requires @x1py748 @x2py565)) :pattern ((Prims.as_requires @x1py748 @x2py565)) ))) :pattern ((ApplyTT @x0py571 Prims.as_requires@tok)) )) :named function_token_typing_Prims.as_requires))
(assert (! (forall ((@x0py572 Term)) (! (and (NoHoist @x0py572 (HasType Prims.assert_spinoff@tok Non_total_Tm_arrow_645)) (forall ((@x1py749 Term)) (! (= (ApplyTT Prims.assert_spinoff@tok @x1py749) (Prims.assert_spinoff @x1py749)) :pattern ((Prims.assert_spinoff @x1py749)) ))) :pattern ((ApplyTT @x0py572 Prims.assert_spinoff@tok)) )) :named function_token_typing_Prims.assert_spinoff))
(assert (! (forall ((@x0py573 Term)) (! (and (NoHoist @x0py573 (HasType Prims.auto_squash@tok Tm_arrow_257be5ee7da9f477702a7d2ee9bef0c9)) (forall ((@x1py750 Term)) (! (= (ApplyTT Prims.auto_squash@tok @x1py750) (Prims.auto_squash @x1py750)) :pattern ((Prims.auto_squash @x1py750)) ))) :pattern ((ApplyTT @x0py573 Prims.auto_squash@tok)) )) :named function_token_typing_Prims.auto_squash))
(assert (! (HasType Prims.cps Prims.attribute) :named function_token_typing_Prims.cps))
(assert (! (forall ((@x0py574 Term)) (! (and (NoHoist @x0py574 (HasType Prims.cut@tok Non_total_Tm_arrow_647)) (forall ((@x1py751 Term)) (! (= (ApplyTT Prims.cut@tok @x1py751) (Prims.cut @x1py751)) :pattern ((Prims.cut @x1py751)) ))) :pattern ((ApplyTT @x0py574 Prims.cut@tok)) )) :named function_token_typing_Prims.cut))
(assert (! (forall ((@x0py575 Term)) (! (and (NoHoist @x0py575 (HasType Prims.decreases@tok Tm_arrow_34d4137f6994a8c7bcc0b38f6ac7779f)) (forall ((@x1py752 Term)(@x2py566 Term)) (! (= (ApplyTT (ApplyTT Prims.decreases@tok @x1py752) @x2py566) (Prims.decreases @x1py752 @x2py566)) :pattern ((Prims.decreases @x1py752 @x2py566)) ))) :pattern ((ApplyTT @x0py575 Prims.decreases@tok)) )) :named function_token_typing_Prims.decreases))
(assert (! (forall ((@x0py576 Term)) (! (and (NoHoist @x0py576 (HasType Prims.eq2@tok (Tm_arrow_f33ea54607e6f443deeaa74ebd418449 Prims.logical))) (forall ((@x1py753 Term)(@x2py567 Term)(@x3py412 Term)) (! (= (ApplyTT (ApplyTT (ApplyTT Prims.eq2@tok @x1py753) @x2py567) @x3py412) (Prims.eq2 @x1py753 @x2py567 @x3py412)) :pattern ((Prims.eq2 @x1py753 @x2py567 @x3py412)) ))) :pattern ((ApplyTT @x0py576 Prims.eq2@tok)) )) :named function_token_typing_Prims.eq2))
(assert (! (forall ((@x0py577 Term)) (! (and (NoHoist @x0py577 (HasType Prims.eq3@tok (Tm_arrow_537c5575a5fd1154f5e2f17311f50ca8 Prims.logical))) (forall ((@x1py754 Term)(@x2py568 Term)(@x3py413 Term)(@x4py303 Term)) (! (= (ApplyTT (ApplyTT (ApplyTT (ApplyTT Prims.eq3@tok @x1py754) @x2py568) @x3py413) @x4py303) (Prims.eq3 @x1py754 @x2py568 @x3py413 @x4py303)) :pattern ((Prims.eq3 @x1py754 @x2py568 @x3py413 @x4py303)) ))) :pattern ((ApplyTT @x0py577 Prims.eq3@tok)) )) :named function_token_typing_Prims.eq3))
(assert (! (forall ((@x0py578 Term)) (! (and (NoHoist @x0py578 (HasType Prims.guard_free@tok Tm_arrow_257be5ee7da9f477702a7d2ee9bef0c9)) (forall ((@x1py755 Term)) (! (= (ApplyTT Prims.guard_free@tok @x1py755) (Prims.guard_free @x1py755)) :pattern ((Prims.guard_free @x1py755)) ))) :pattern ((ApplyTT @x0py578 Prims.guard_free@tok)) )) :named function_token_typing_Prims.guard_free))
(assert (! (forall ((@x0py579 Term)) (! (and (NoHoist @x0py579 (HasType Prims.has_type@tok Tm_arrow_7c761265d6fe943628c96343fc66d1a0)) (forall ((@x1py756 Term)(@x2py569 Term)(@x3py414 Term)) (! (= (ApplyTT (ApplyTT (ApplyTT Prims.has_type@tok @x1py756) @x2py569) @x3py414) (Prims.has_type @x1py756 @x2py569 @x3py414)) :pattern ((Prims.has_type @x1py756 @x2py569 @x3py414)) ))) :pattern ((ApplyTT @x0py579 Prims.has_type@tok)) )) :named function_token_typing_Prims.has_type))
(assert (! (forall ((@x0py580 Term)) (! (and (NoHoist @x0py580 (HasType Prims.hasEq@tok Tm_arrow_257be5ee7da9f477702a7d2ee9bef0c9)) (forall ((@x1py757 Term)) (! (= (ApplyTT Prims.hasEq@tok @x1py757) (Prims.hasEq @x1py757)) :pattern ((Prims.hasEq @x1py757)) ))) :pattern ((ApplyTT @x0py580 Prims.hasEq@tok)) )) :named function_token_typing_Prims.hasEq))
(assert (! (HasType Prims.int Tm_type) :named function_token_typing_Prims.int))
(assert (! (forall ((@x0py581 Term)) (! (and (NoHoist @x0py581 (HasType Prims.l_and@tok (Tm_arrow_44faff5d8543c30ad9bf2eeaf1b3abcf Prims.logical))) (forall ((@x1py758 Term)(@x2py570 Term)) (! (= (ApplyTT (ApplyTT Prims.l_and@tok @x1py758) @x2py570) (Prims.l_and @x1py758 @x2py570)) :pattern ((Prims.l_and @x1py758 @x2py570)) ))) :pattern ((ApplyTT @x0py581 Prims.l_and@tok)) )) :named function_token_typing_Prims.l_and))
(assert (! (forall ((@x0py582 Term)) (! (and (NoHoist @x0py582 (HasType Prims.l_Exists@tok (Tm_arrow_79f007373109c2c6539212e679be2f2f Prims.logical))) (forall ((@x1py759 Term)(@x2py571 Term)) (! (= (ApplyTT (ApplyTT Prims.l_Exists@tok @x1py759) @x2py571) (Prims.l_Exists @x1py759 @x2py571)) :pattern ((Prims.l_Exists @x1py759 @x2py571)) ))) :pattern ((ApplyTT @x0py582 Prims.l_Exists@tok)) )) :named function_token_typing_Prims.l_Exists))
(assert (! (HasType Prims.l_False Prims.logical) :named function_token_typing_Prims.l_False))
(assert (! (forall ((@x0py583 Term)) (! (and (NoHoist @x0py583 (HasType Prims.l_Forall@tok (Tm_arrow_79f007373109c2c6539212e679be2f2f Prims.logical))) (forall ((@x1py760 Term)(@x2py572 Term)) (! (= (ApplyTT (ApplyTT Prims.l_Forall@tok @x1py760) @x2py572) (Prims.l_Forall @x1py760 @x2py572)) :pattern ((Prims.l_Forall @x1py760 @x2py572)) ))) :pattern ((ApplyTT @x0py583 Prims.l_Forall@tok)) )) :named function_token_typing_Prims.l_Forall))
(assert (! (forall ((@x0py584 Term)) (! (and (NoHoist @x0py584 (HasType Prims.l_iff@tok (Tm_arrow_44faff5d8543c30ad9bf2eeaf1b3abcf Prims.logical))) (forall ((@x1py761 Term)(@x2py573 Term)) (! (= (ApplyTT (ApplyTT Prims.l_iff@tok @x1py761) @x2py573) (Prims.l_iff @x1py761 @x2py573)) :pattern ((Prims.l_iff @x1py761 @x2py573)) ))) :pattern ((ApplyTT @x0py584 Prims.l_iff@tok)) )) :named function_token_typing_Prims.l_iff))
(assert (! (forall ((@x0py585 Term)) (! (and (NoHoist @x0py585 (HasType Prims.l_imp@tok (Tm_arrow_44faff5d8543c30ad9bf2eeaf1b3abcf Prims.logical))) (forall ((@x1py762 Term)(@x2py574 Term)) (! (= (ApplyTT (ApplyTT Prims.l_imp@tok @x1py762) @x2py574) (Prims.l_imp @x1py762 @x2py574)) :pattern ((Prims.l_imp @x1py762 @x2py574)) ))) :pattern ((ApplyTT @x0py585 Prims.l_imp@tok)) )) :named function_token_typing_Prims.l_imp))
(assert (! (forall ((@x0py586 Term)) (! (and (NoHoist @x0py586 (HasType Prims.l_not@tok (Tm_arrow_f82c3fb9ac6610efb97620a59b378092 Prims.logical))) (forall ((@x1py763 Term)) (! (= (ApplyTT Prims.l_not@tok @x1py763) (Prims.l_not @x1py763)) :pattern ((Prims.l_not @x1py763)) ))) :pattern ((ApplyTT @x0py586 Prims.l_not@tok)) )) :named function_token_typing_Prims.l_not))
(assert (! (forall ((@x0py587 Term)) (! (and (NoHoist @x0py587 (HasType Prims.l_or@tok (Tm_arrow_44faff5d8543c30ad9bf2eeaf1b3abcf Prims.logical))) (forall ((@x1py764 Term)(@x2py575 Term)) (! (= (ApplyTT (ApplyTT Prims.l_or@tok @x1py764) @x2py575) (Prims.l_or @x1py764 @x2py575)) :pattern ((Prims.l_or @x1py764 @x2py575)) ))) :pattern ((ApplyTT @x0py587 Prims.l_or@tok)) )) :named function_token_typing_Prims.l_or))
(assert (! (forall ((@x0py588 Term)) (! (and (NoHoist @x0py588 (HasType Prims.labeled@tok (Tm_arrow_57c992be3fa76720bf1a10ffa047db3d Prims.string Prims.range))) (forall ((@x1py765 Term)(@x2py576 Term)(@x3py415 Term)) (! (= (ApplyTT (ApplyTT (ApplyTT Prims.labeled@tok @x1py765) @x2py576) @x3py415) (Prims.labeled @x1py765 @x2py576 @x3py415)) :pattern ((Prims.labeled @x1py765 @x2py576 @x3py415)) ))) :pattern ((ApplyTT @x0py588 Prims.labeled@tok)) )) :named function_token_typing_Prims.labeled))
(assert (! (HasType Prims.logical Tm_type) :named function_token_typing_Prims.logical))
(assert (! (forall ((@x0py589 Term)) (! (and (NoHoist @x0py589 (HasType Prims.magic@tok (Tm_arrow_244b5b2a1fc882c67ebcb032ace08d85 Prims.unit))) (forall ((@x1py766 Term)(@x2py577 Term)) (! (= (ApplyTT (ApplyTT Prims.magic@tok @x1py766) @x2py577) (Prims.magic @x1py766 @x2py577)) :pattern ((Prims.magic @x1py766 @x2py577)) ))) :pattern ((ApplyTT @x0py589 Prims.magic@tok)) )) :named function_token_typing_Prims.magic))
(assert (! (forall ((@x0py590 Term)) (! (and (NoHoist @x0py590 (HasType Prims.min@tok (Tm_arrow_44faff5d8543c30ad9bf2eeaf1b3abcf Prims.int))) (forall ((@x1py767 Term)(@x2py578 Term)) (! (= (ApplyTT (ApplyTT Prims.min@tok @x1py767) @x2py578) (Prims.min @x1py767 @x2py578)) :pattern ((Prims.min @x1py767 @x2py578)) ))) :pattern ((ApplyTT @x0py590 Prims.min@tok)) )) :named function_token_typing_Prims.min))
(assert (! (forall ((@x0py591 Term)) (! (and (NoHoist @x0py591 (HasType Prims.mk_range@tok (Tm_arrow_1a6b9de3491ece0b8961a8acbb38411b Prims.range Prims.int Prims.string))) (forall ((@x1py768 Term)(@x2py579 Term)(@x3py416 Term)(@x4py304 Term)(@x5py238 Term)) (! (= (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT Prims.mk_range@tok @x1py768) @x2py579) @x3py416) @x4py304) @x5py238) (Prims.mk_range @x1py768 @x2py579 @x3py416 @x4py304 @x5py238)) :pattern ((Prims.mk_range @x1py768 @x2py579 @x3py416 @x4py304 @x5py238)) ))) :pattern ((ApplyTT @x0py591 Prims.mk_range@tok)) )) :named function_token_typing_Prims.mk_range))
(assert (! (HasType Prims.nonzero Tm_type) :named function_token_typing_Prims.nonzero))
(assert (! (HasType Prims.pattern Tm_type) :named function_token_typing_Prims.pattern))
(assert (! (HasType Prims.pos Tm_type) :named function_token_typing_Prims.pos))
(assert (! (forall ((@x0py592 Term)) (! (and (NoHoist @x0py592 (HasType Prims.pow2@tok (Tm_arrow_9cb3c953faf527c316d427b2ce8bd81b Prims.pos Prims.nat))) (forall ((@x1py769 Term)) (! (= (ApplyTT Prims.pow2@tok @x1py769) (Prims.pow2 @x1py769)) :pattern ((Prims.pow2 @x1py769)) ))) :pattern ((ApplyTT @x0py592 Prims.pow2@tok)) )) :named function_token_typing_Prims.pow2))
(assert (! (HasType Prims.prop Tm_type) :named function_token_typing_Prims.prop))
(assert (! (forall ((@x0py593 Term)) (! (and (NoHoist @x0py593 (HasType Prims.pure_post@tok Tm_arrow_257be5ee7da9f477702a7d2ee9bef0c9)) (forall ((@x1py770 Term)) (! (= (ApplyTT Prims.pure_post@tok @x1py770) (Prims.pure_post @x1py770)) :pattern ((Prims.pure_post @x1py770)) ))) :pattern ((ApplyTT @x0py593 Prims.pure_post@tok)) )) :named function_token_typing_Prims.pure_post))
(assert (! (forall ((@x0py594 Term)) (! (and (NoHoist @x0py594 (HasType Prims.pure_post_@tok Tm_arrow_30967c52768a603d18eb4835e5ba8f79)) (forall ((@x1py771 Term)(@x2py580 Term)) (! (= (ApplyTT (ApplyTT Prims.pure_post_@tok @x1py771) @x2py580) (Prims.pure_post_ @x1py771 @x2py580)) :pattern ((Prims.pure_post_ @x1py771 @x2py580)) ))) :pattern ((ApplyTT @x0py594 Prims.pure_post_@tok)) )) :named function_token_typing_Prims.pure_post_))
(assert (! (HasType Prims.pure_pre Tm_type) :named function_token_typing_Prims.pure_pre))
(assert (! (forall ((@x0py595 Term)) (! (and (NoHoist @x0py595 (HasType Prims.pure_wp@tok Tm_arrow_257be5ee7da9f477702a7d2ee9bef0c9)) (forall ((@x1py772 Term)) (! (= (ApplyTT Prims.pure_wp@tok @x1py772) (Prims.pure_wp @x1py772)) :pattern ((Prims.pure_wp @x1py772)) ))) :pattern ((ApplyTT @x0py595 Prims.pure_wp@tok)) )) :named function_token_typing_Prims.pure_wp))
(assert (! (HasType Prims.range Tm_type) :named function_token_typing_Prims.range))
(assert (! (HasType Prims.range_0 Prims.range) :named function_token_typing_Prims.range_0))
(assert (! (forall ((@x0py596 Term)) (! (and (NoHoist @x0py596 (HasType Prims.returnM@tok Tm_arrow_fa4e3ee4a3dfa402363cd0693fcbfca4)) (forall ((@x1py773 Term)(@x2py581 Term)) (! (= (ApplyTT (ApplyTT Prims.returnM@tok @x1py773) @x2py581) (Prims.returnM @x1py773 @x2py581)) :pattern ((Prims.returnM @x1py773 @x2py581)) ))) :pattern ((ApplyTT @x0py596 Prims.returnM@tok)) )) :named function_token_typing_Prims.returnM))
(assert (! (forall ((@x0py597 Term)) (! (and (NoHoist @x0py597 (HasType Prims.smt_pat@tok (Tm_arrow_756e7b0ac20279dfcded24e5a99a27b8 Prims.pattern))) (forall ((@x1py774 Term)(@x2py582 Term)) (! (= (ApplyTT (ApplyTT Prims.smt_pat@tok @x1py774) @x2py582) (Prims.smt_pat @x1py774 @x2py582)) :pattern ((Prims.smt_pat @x1py774 @x2py582)) ))) :pattern ((ApplyTT @x0py597 Prims.smt_pat@tok)) )) :named function_token_typing_Prims.smt_pat))
(assert (! (forall ((@x0py598 Term)) (! (and (NoHoist @x0py598 (HasType Prims.smt_pat_or@tok (Tm_arrow_7df6282d3b185c0f02eb10c3e19fe2e1 Prims.pattern))) (forall ((@x1py775 Term)) (! (= (ApplyTT Prims.smt_pat_or@tok @x1py775) (Prims.smt_pat_or @x1py775)) :pattern ((Prims.smt_pat_or @x1py775)) ))) :pattern ((ApplyTT @x0py598 Prims.smt_pat_or@tok)) )) :named function_token_typing_Prims.smt_pat_or))
(assert (! (forall ((@x0py599 Term)) (! (and (NoHoist @x0py599 (HasType Prims.spinoff@tok Tm_arrow_257be5ee7da9f477702a7d2ee9bef0c9)) (forall ((@x1py776 Term)) (! (= (ApplyTT Prims.spinoff@tok @x1py776) (Prims.spinoff @x1py776)) :pattern ((Prims.spinoff @x1py776)) ))) :pattern ((ApplyTT @x0py599 Prims.spinoff@tok)) )) :named function_token_typing_Prims.spinoff))
(assert (! (forall ((@x0py600 Term)) (! (and (NoHoist @x0py600 (HasType Prims.squash@tok Tm_arrow_257be5ee7da9f477702a7d2ee9bef0c9)) (forall ((@x1py777 Term)) (! (= (ApplyTT Prims.squash@tok @x1py777) (Prims.squash @x1py777)) :pattern ((Prims.squash @x1py777)) ))) :pattern ((ApplyTT @x0py600 Prims.squash@tok)) )) :named function_token_typing_Prims.squash))
(assert (! (forall ((@x0py601 Term)) (! (and (NoHoist @x0py601 (HasType Prims.strcat@tok (Tm_arrow_44faff5d8543c30ad9bf2eeaf1b3abcf Prims.string))) (forall ((@x1py778 Term)(@x2py583 Term)) (! (= (ApplyTT (ApplyTT Prims.strcat@tok @x1py778) @x2py583) (Prims.strcat @x1py778 @x2py583)) :pattern ((Prims.strcat @x1py778 @x2py583)) ))) :pattern ((ApplyTT @x0py601 Prims.strcat@tok)) )) :named function_token_typing_Prims.strcat))
(assert (! (HasType Prims.string Tm_type) :named function_token_typing_Prims.string))
(assert (! (forall ((@x0py602 Term)) (! (and (NoHoist @x0py602 (HasType Prims.string_of_bool@tok (Tm_arrow_9cb3c953faf527c316d427b2ce8bd81b Prims.string Prims.bool))) (forall ((@x1py779 Term)) (! (= (ApplyTT Prims.string_of_bool@tok @x1py779) (Prims.string_of_bool @x1py779)) :pattern ((Prims.string_of_bool @x1py779)) ))) :pattern ((ApplyTT @x0py602 Prims.string_of_bool@tok)) )) :named function_token_typing_Prims.string_of_bool))
(assert (! (forall ((@x0py603 Term)) (! (and (NoHoist @x0py603 (HasType Prims.string_of_int@tok (Tm_arrow_9cb3c953faf527c316d427b2ce8bd81b Prims.string Prims.int))) (forall ((@x1py780 Term)) (! (= (ApplyTT Prims.string_of_int@tok @x1py780) (Prims.string_of_int @x1py780)) :pattern ((Prims.string_of_int @x1py780)) ))) :pattern ((ApplyTT @x0py603 Prims.string_of_int@tok)) )) :named function_token_typing_Prims.string_of_int))
(assert (! (HasType Prims.unit Tm_type) :named function_token_typing_Prims.unit))
(assert (! (forall ((@x0py604 Term)) (! (and (NoHoist @x0py604 (HasType Prims.unsafe_coerce@tok Tm_arrow_205942e024d5471c930d18c2ca3ae24b)) (forall ((@x1py781 Term)(@x2py584 Term)(@x3py417 Term)) (! (= (ApplyTT (ApplyTT (ApplyTT Prims.unsafe_coerce@tok @x1py781) @x2py584) @x3py417) (Prims.unsafe_coerce @x1py781 @x2py584 @x3py417)) :pattern ((Prims.unsafe_coerce @x1py781 @x2py584 @x3py417)) ))) :pattern ((ApplyTT @x0py604 Prims.unsafe_coerce@tok)) )) :named function_token_typing_Prims.unsafe_coerce))
(assert (! (forall ((@x0py605 Term)) (! (and (NoHoist @x0py605 (HasType Prims.uu___is_And@tok (Tm_arrow_a85c3802d57513fa8b84a44441b2fe6a Prims.bool))) (forall ((@x1py782 Term)(@x2py585 Term)(@x3py418 Term)) (! (= (ApplyTT (ApplyTT (ApplyTT Prims.uu___is_And@tok @x1py782) @x2py585) @x3py418) (Prims.uu___is_And @x1py782 @x2py585 @x3py418)) :pattern ((Prims.uu___is_And @x1py782 @x2py585 @x3py418)) ))) :pattern ((ApplyTT @x0py605 Prims.uu___is_And@tok)) )) :named function_token_typing_Prims.uu___is_And))
(assert (! (forall ((@x0py606 Term)) (! (and (NoHoist @x0py606 (HasType Prims.uu___is_Cons@tok (Tm_arrow_186fc0e29ebb27a200ef672a89551282 Prims.bool))) (forall ((@x1py783 Term)(@x2py586 Term)) (! (= (ApplyTT (ApplyTT Prims.uu___is_Cons@tok @x1py783) @x2py586) (Prims.uu___is_Cons @x1py783 @x2py586)) :pattern ((Prims.uu___is_Cons @x1py783 @x2py586)) ))) :pattern ((ApplyTT @x0py606 Prims.uu___is_Cons@tok)) )) :named function_token_typing_Prims.uu___is_Cons))
(assert (! (forall ((@x0py607 Term)) (! (and (NoHoist @x0py607 (HasType Prims.uu___is_HRefl@tok (Tm_arrow_e55fd27cdca75961dfd00ca7901ce64a Prims.bool))) (forall ((@x1py784 Term)(@x2py587 Term)(@x3py419 Term)(@x4py305 Term)(@x5py239 Term)) (! (= (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT Prims.uu___is_HRefl@tok @x1py784) @x2py587) @x3py419) @x4py305) @x5py239) (Prims.uu___is_HRefl @x1py784 @x2py587 @x3py419 @x4py305 @x5py239)) :pattern ((Prims.uu___is_HRefl @x1py784 @x2py587 @x3py419 @x4py305 @x5py239)) ))) :pattern ((ApplyTT @x0py607 Prims.uu___is_HRefl@tok)) )) :named function_token_typing_Prims.uu___is_HRefl))
(assert (! (forall ((@x0py608 Term)) (! (and (NoHoist @x0py608 (HasType Prims.uu___is_Left@tok (Tm_arrow_581a99aa4b3c2c64b4b6501081582473 Prims.bool))) (forall ((@x1py785 Term)(@x2py588 Term)(@x3py420 Term)) (! (= (ApplyTT (ApplyTT (ApplyTT Prims.uu___is_Left@tok @x1py785) @x2py588) @x3py420) (Prims.uu___is_Left @x1py785 @x2py588 @x3py420)) :pattern ((Prims.uu___is_Left @x1py785 @x2py588 @x3py420)) ))) :pattern ((ApplyTT @x0py608 Prims.uu___is_Left@tok)) )) :named function_token_typing_Prims.uu___is_Left))
(assert (! (forall ((@x0py609 Term)) (! (and (NoHoist @x0py609 (HasType Prims.uu___is_Mkdtuple2@tok (Tm_arrow_21a7a3166e0683e2dfa5d2815e88da4a Prims.bool))) (forall ((@x1py786 Term)(@x2py589 Term)(@x3py421 Term)) (! (= (ApplyTT (ApplyTT (ApplyTT Prims.uu___is_Mkdtuple2@tok @x1py786) @x2py589) @x3py421) (Prims.uu___is_Mkdtuple2 @x1py786 @x2py589 @x3py421)) :pattern ((Prims.uu___is_Mkdtuple2 @x1py786 @x2py589 @x3py421)) ))) :pattern ((ApplyTT @x0py609 Prims.uu___is_Mkdtuple2@tok)) )) :named function_token_typing_Prims.uu___is_Mkdtuple2))
(assert (! (forall ((@x0py610 Term)) (! (and (NoHoist @x0py610 (HasType Prims.uu___is_Nil@tok (Tm_arrow_186fc0e29ebb27a200ef672a89551282 Prims.bool))) (forall ((@x1py787 Term)(@x2py590 Term)) (! (= (ApplyTT (ApplyTT Prims.uu___is_Nil@tok @x1py787) @x2py590) (Prims.uu___is_Nil @x1py787 @x2py590)) :pattern ((Prims.uu___is_Nil @x1py787 @x2py590)) ))) :pattern ((ApplyTT @x0py610 Prims.uu___is_Nil@tok)) )) :named function_token_typing_Prims.uu___is_Nil))
(assert (! (forall ((@x0py611 Term)) (! (and (NoHoist @x0py611 (HasType Prims.uu___is_Refl@tok (Tm_arrow_bc73fd7342ebe29d8df19539096373ef Prims.bool))) (forall ((@x1py788 Term)(@x2py591 Term)(@x3py422 Term)(@x4py306 Term)) (! (= (ApplyTT (ApplyTT (ApplyTT (ApplyTT Prims.uu___is_Refl@tok @x1py788) @x2py591) @x3py422) @x4py306) (Prims.uu___is_Refl @x1py788 @x2py591 @x3py422 @x4py306)) :pattern ((Prims.uu___is_Refl @x1py788 @x2py591 @x3py422 @x4py306)) ))) :pattern ((ApplyTT @x0py611 Prims.uu___is_Refl@tok)) )) :named function_token_typing_Prims.uu___is_Refl))
(assert (! (forall ((@x0py612 Term)) (! (and (NoHoist @x0py612 (HasType Prims.uu___is_Right@tok (Tm_arrow_581a99aa4b3c2c64b4b6501081582473 Prims.bool))) (forall ((@x1py789 Term)(@x2py592 Term)(@x3py423 Term)) (! (= (ApplyTT (ApplyTT (ApplyTT Prims.uu___is_Right@tok @x1py789) @x2py592) @x3py423) (Prims.uu___is_Right @x1py789 @x2py592 @x3py423)) :pattern ((Prims.uu___is_Right @x1py789 @x2py592 @x3py423)) ))) :pattern ((ApplyTT @x0py612 Prims.uu___is_Right@tok)) )) :named function_token_typing_Prims.uu___is_Right))
(assert (! (forall ((@x0py613 Term)) (! (and (NoHoist @x0py613 (HasType Prims.uu___is_T@tok (Tm_arrow_070c89d0419ca0b80e0da94940c40fa3 Prims.bool))) (forall ((@x1py790 Term)) (! (= (ApplyTT Prims.uu___is_T@tok @x1py790) (Prims.uu___is_T @x1py790)) :pattern ((Prims.uu___is_T @x1py790)) ))) :pattern ((ApplyTT @x0py613 Prims.uu___is_T@tok)) )) :named function_token_typing_Prims.uu___is_T))
(assert (! (forall ((@x0py614 Term)) (! (and (or (Valid (Prims.hasEq (False.relation @x0py614))) (not (Valid (Prims.hasEq (False_Tm_refine_74ff667701f75cfbefa2fd1da9dbdc13 @x0py614))))) (or (Valid (Prims.hasEq (False_Tm_refine_74ff667701f75cfbefa2fd1da9dbdc13 @x0py614))) (not (Valid (Prims.hasEq (False.relation @x0py614)))))) :pattern ((Valid (Prims.hasEq (False_Tm_refine_74ff667701f75cfbefa2fd1da9dbdc13 @x0py614)))) )) :named haseqFalse_Tm_refine_74ff667701f75cfbefa2fd1da9dbdc13))
(assert (! (forall ((@x0py615 Term)(@x1py791 Term)(@x2py593 Term)(@x3py424 Term)) (! (and (or (not (Valid (Prims.hasEq (False_Tm_refine_253153fea998a3a502df455711574c4d @x0py615 @x1py791 @x2py593 @x3py424)))) (Valid (Prims.hasEq (False.calc_proof @x0py615 @x1py791 @x2py593 @x3py424)))) (or (Valid (Prims.hasEq (False_Tm_refine_253153fea998a3a502df455711574c4d @x0py615 @x1py791 @x2py593 @x3py424))) (not (Valid (Prims.hasEq (False.calc_proof @x0py615 @x1py791 @x2py593 @x3py424)))))) :pattern ((Valid (Prims.hasEq (False_Tm_refine_253153fea998a3a502df455711574c4d @x0py615 @x1py791 @x2py593 @x3py424)))) )) :named haseqFalse_Tm_refine_253153fea998a3a502df455711574c4d))
(assert (! (forall ((@x0py616 Term)(@x1py792 Term)(@x2py594 Term)(@x3py425 Term)) (! (and (or (Valid (Prims.hasEq (False.calc_proof @x0py616 @x1py792 @x2py594 @x3py425))) (not (Valid (Prims.hasEq (False_Tm_refine_c7c1219b2b697290706c3cb902d0c0fb @x0py616 @x1py792 @x2py594 @x3py425))))) (or (Valid (Prims.hasEq (False_Tm_refine_c7c1219b2b697290706c3cb902d0c0fb @x0py616 @x1py792 @x2py594 @x3py425))) (not (Valid (Prims.hasEq (False.calc_proof @x0py616 @x1py792 @x2py594 @x3py425)))))) :pattern ((Valid (Prims.hasEq (False_Tm_refine_c7c1219b2b697290706c3cb902d0c0fb @x0py616 @x1py792 @x2py594 @x3py425)))) )) :named haseqFalse_Tm_refine_c7c1219b2b697290706c3cb902d0c0fb))
(assert (! (forall ((@x0py617 Term)(@x1py793 Term)) (! (and (or (Valid (Prims.hasEq @x0py617)) (not (Valid (Prims.hasEq (FStar.Pervasives.Native_Tm_refine_2fbd657fe85bcb2423f9c7e5f9b3bcb5 @x0py617 @x1py793))))) (or (Valid (Prims.hasEq (FStar.Pervasives.Native_Tm_refine_2fbd657fe85bcb2423f9c7e5f9b3bcb5 @x0py617 @x1py793))) (not (Valid (Prims.hasEq @x0py617))))) :pattern ((Valid (Prims.hasEq (FStar.Pervasives.Native_Tm_refine_2fbd657fe85bcb2423f9c7e5f9b3bcb5 @x0py617 @x1py793)))) )) :named haseqFStar.Pervasives.Native_Tm_refine_2fbd657fe85bcb2423f9c7e5f9b3bcb5))
(assert (! (forall ((@x0py618 Term)) (! (and (or (Valid (Prims.hasEq (FStar.Pervasives.Native.option @x0py618))) (not (Valid (Prims.hasEq (FStar.Pervasives.Native_Tm_refine_4d5241eb6fe198666a8101195bbd4a2a @x0py618))))) (or (Valid (Prims.hasEq (FStar.Pervasives.Native_Tm_refine_4d5241eb6fe198666a8101195bbd4a2a @x0py618))) (not (Valid (Prims.hasEq (FStar.Pervasives.Native.option @x0py618)))))) :pattern ((Valid (Prims.hasEq (FStar.Pervasives.Native_Tm_refine_4d5241eb6fe198666a8101195bbd4a2a @x0py618)))) )) :named haseqFStar.Pervasives.Native_Tm_refine_4d5241eb6fe198666a8101195bbd4a2a))
(assert (! (forall ((@x0py619 Term)) (! (and (or (Valid (Prims.hasEq @x0py619)) (not (Valid (Prims.hasEq (FStar.Pervasives.Native_Tm_refine_40cfb467dd44d40edcf16599ec909847 @x0py619))))) (or (Valid (Prims.hasEq (FStar.Pervasives.Native_Tm_refine_40cfb467dd44d40edcf16599ec909847 @x0py619))) (not (Valid (Prims.hasEq @x0py619))))) :pattern ((Valid (Prims.hasEq (FStar.Pervasives.Native_Tm_refine_40cfb467dd44d40edcf16599ec909847 @x0py619)))) )) :named haseqFStar.Pervasives.Native_Tm_refine_40cfb467dd44d40edcf16599ec909847))
(assert (! (forall ((@x0py620 Term)) (! (and (or (Valid (Prims.hasEq @x0py620)) (not (Valid (Prims.hasEq (FStar.Pervasives.Native_Tm_refine_735fdbeb3c591d804f924767d4322a6a @x0py620))))) (or (Valid (Prims.hasEq (FStar.Pervasives.Native_Tm_refine_735fdbeb3c591d804f924767d4322a6a @x0py620))) (not (Valid (Prims.hasEq @x0py620))))) :pattern ((Valid (Prims.hasEq (FStar.Pervasives.Native_Tm_refine_735fdbeb3c591d804f924767d4322a6a @x0py620)))) )) :named haseqFStar.Pervasives.Native_Tm_refine_735fdbeb3c591d804f924767d4322a6a))
(assert (! (forall ((@x0py621 Term)) (! (and (or (Valid (Prims.hasEq @x0py621)) (not (Valid (Prims.hasEq (FStar.Pervasives.Native_Tm_refine_f81289758692e8d7ff38327f5b71be85 @x0py621))))) (or (Valid (Prims.hasEq (FStar.Pervasives.Native_Tm_refine_f81289758692e8d7ff38327f5b71be85 @x0py621))) (not (Valid (Prims.hasEq @x0py621))))) :pattern ((Valid (Prims.hasEq (FStar.Pervasives.Native_Tm_refine_f81289758692e8d7ff38327f5b71be85 @x0py621)))) )) :named haseqFStar.Pervasives.Native_Tm_refine_f81289758692e8d7ff38327f5b71be85))
(assert (! (forall ((@x0py622 Term)(@x1py794 Term)) (! (and (or (Valid (Prims.hasEq (FStar.Pervasives.either @x0py622 @x1py794))) (not (Valid (Prims.hasEq (FStar.Pervasives_Tm_refine_8f1f5f564dae90240db429de2eb41517 @x0py622 @x1py794))))) (or (Valid (Prims.hasEq (FStar.Pervasives_Tm_refine_8f1f5f564dae90240db429de2eb41517 @x0py622 @x1py794))) (not (Valid (Prims.hasEq (FStar.Pervasives.either @x0py622 @x1py794)))))) :pattern ((Valid (Prims.hasEq (FStar.Pervasives_Tm_refine_8f1f5f564dae90240db429de2eb41517 @x0py622 @x1py794)))) )) :named haseqFStar.Pervasives_Tm_refine_8f1f5f564dae90240db429de2eb41517))
(assert (! (forall ((@x0py623 Term)) (! (and (or (not (Valid (Prims.hasEq (FStar.Pervasives_Tm_refine_9db520b26a7f39c5a01493a3f375290d @x0py623)))) (Valid (Prims.hasEq (FStar.Pervasives.result @x0py623)))) (or (Valid (Prims.hasEq (FStar.Pervasives_Tm_refine_9db520b26a7f39c5a01493a3f375290d @x0py623))) (not (Valid (Prims.hasEq (FStar.Pervasives.result @x0py623)))))) :pattern ((Valid (Prims.hasEq (FStar.Pervasives_Tm_refine_9db520b26a7f39c5a01493a3f375290d @x0py623)))) )) :named haseqFStar.Pervasives_Tm_refine_9db520b26a7f39c5a01493a3f375290d))
(assert (! (forall ((@x0py624 Term)) (! (and (or (Valid (Prims.hasEq @x0py624)) (not (Valid (Prims.hasEq (FStar.Pervasives_Tm_refine_16d7dda25a162db0722685f27f707102 @x0py624))))) (or (Valid (Prims.hasEq (FStar.Pervasives_Tm_refine_16d7dda25a162db0722685f27f707102 @x0py624))) (not (Valid (Prims.hasEq @x0py624))))) :pattern ((Valid (Prims.hasEq (FStar.Pervasives_Tm_refine_16d7dda25a162db0722685f27f707102 @x0py624)))) )) :named haseqFStar.Pervasives_Tm_refine_16d7dda25a162db0722685f27f707102))
(assert (! (forall ((@x0py625 Term)) (! (and (or (Valid (Prims.hasEq (FStar.Pervasives.result @x0py625))) (not (Valid (Prims.hasEq (FStar.Pervasives_Tm_refine_22fb403854eba07427f92e79848f9d9f @x0py625))))) (or (Valid (Prims.hasEq (FStar.Pervasives_Tm_refine_22fb403854eba07427f92e79848f9d9f @x0py625))) (not (Valid (Prims.hasEq (FStar.Pervasives.result @x0py625)))))) :pattern ((Valid (Prims.hasEq (FStar.Pervasives_Tm_refine_22fb403854eba07427f92e79848f9d9f @x0py625)))) )) :named haseqFStar.Pervasives_Tm_refine_22fb403854eba07427f92e79848f9d9f))
(assert (! (forall ((@x0py626 Term)(@x1py795 Term)) (! (and (or (Valid (Prims.hasEq (FStar.Pervasives.either @x0py626 @x1py795))) (not (Valid (Prims.hasEq (FStar.Pervasives_Tm_refine_85e0cc884f8457202f90cd77f23733ba @x0py626 @x1py795))))) (or (Valid (Prims.hasEq (FStar.Pervasives_Tm_refine_85e0cc884f8457202f90cd77f23733ba @x0py626 @x1py795))) (not (Valid (Prims.hasEq (FStar.Pervasives.either @x0py626 @x1py795)))))) :pattern ((Valid (Prims.hasEq (FStar.Pervasives_Tm_refine_85e0cc884f8457202f90cd77f23733ba @x0py626 @x1py795)))) )) :named haseqFStar.Pervasives_Tm_refine_85e0cc884f8457202f90cd77f23733ba))
(assert (! (forall ((@x0py627 Term)) (! (and (or (Valid (Prims.hasEq (FStar.Pervasives.result @x0py627))) (not (Valid (Prims.hasEq (FStar.Pervasives_Tm_refine_95e1e2ee29104754cc3740f5575fc6e5 @x0py627))))) (or (Valid (Prims.hasEq (FStar.Pervasives_Tm_refine_95e1e2ee29104754cc3740f5575fc6e5 @x0py627))) (not (Valid (Prims.hasEq (FStar.Pervasives.result @x0py627)))))) :pattern ((Valid (Prims.hasEq (FStar.Pervasives_Tm_refine_95e1e2ee29104754cc3740f5575fc6e5 @x0py627)))) )) :named haseqFStar.Pervasives_Tm_refine_95e1e2ee29104754cc3740f5575fc6e5))
(assert (! (or (Valid (Prims.hasEq FStar.Pervasives.__internal_ocaml_attributes)) (not (Valid (Prims.hasEq FStar.Pervasives_Tm_refine_564db2f0aa0878b4d96c60508be3dd36)))) :named haseqFStar.Pervasives_Tm_refine_564db2f0aa0878b4d96c60508be3dd36_0))
(assert (! (or (Valid (Prims.hasEq FStar.Pervasives_Tm_refine_564db2f0aa0878b4d96c60508be3dd36)) (not (Valid (Prims.hasEq FStar.Pervasives.__internal_ocaml_attributes)))) :named haseqFStar.Pervasives_Tm_refine_564db2f0aa0878b4d96c60508be3dd36_1))
(assert (! (or (Valid (Prims.hasEq FStar.Pervasives.__internal_ocaml_attributes)) (not (Valid (Prims.hasEq FStar.Pervasives_Tm_refine_5036c6b2983454bc3afeffcba3f00f50)))) :named haseqFStar.Pervasives_Tm_refine_5036c6b2983454bc3afeffcba3f00f50_0))
(assert (! (or (Valid (Prims.hasEq FStar.Pervasives_Tm_refine_5036c6b2983454bc3afeffcba3f00f50)) (not (Valid (Prims.hasEq FStar.Pervasives.__internal_ocaml_attributes)))) :named haseqFStar.Pervasives_Tm_refine_5036c6b2983454bc3afeffcba3f00f50_1))
(assert (! (forall ((@x0py628 Term)(@x1py796 Term)) (! (and (or (Valid (Prims.hasEq @x0py628)) (not (Valid (Prims.hasEq (FStar.Pervasives_Tm_refine_7026ef6906ebd21e19dc2cc0639312d3 @x0py628 @x1py796))))) (or (Valid (Prims.hasEq (FStar.Pervasives_Tm_refine_7026ef6906ebd21e19dc2cc0639312d3 @x0py628 @x1py796))) (not (Valid (Prims.hasEq @x0py628))))) :pattern ((Valid (Prims.hasEq (FStar.Pervasives_Tm_refine_7026ef6906ebd21e19dc2cc0639312d3 @x0py628 @x1py796)))) )) :named haseqFStar.Pervasives_Tm_refine_7026ef6906ebd21e19dc2cc0639312d3))
(assert (! (or (Valid (Prims.hasEq FStar.Pervasives.__internal_ocaml_attributes)) (not (Valid (Prims.hasEq FStar.Pervasives_Tm_refine_47384bef739d1f0729fd782d351dc9a5)))) :named haseqFStar.Pervasives_Tm_refine_47384bef739d1f0729fd782d351dc9a5_0))
(assert (! (or (Valid (Prims.hasEq FStar.Pervasives_Tm_refine_47384bef739d1f0729fd782d351dc9a5)) (not (Valid (Prims.hasEq FStar.Pervasives.__internal_ocaml_attributes)))) :named haseqFStar.Pervasives_Tm_refine_47384bef739d1f0729fd782d351dc9a5_1))
(assert (! (forall ((@x0py629 Term)(@x1py797 Term)) (! (and (or (Valid (Prims.hasEq (FStar.Pervasives.result @x0py629))) (not (Valid (Prims.hasEq (FStar.Pervasives_Tm_refine_a4dcdeeacbcb04d05a6720f786918fd6 @x0py629 @x1py797))))) (or (Valid (Prims.hasEq (FStar.Pervasives_Tm_refine_a4dcdeeacbcb04d05a6720f786918fd6 @x0py629 @x1py797))) (not (Valid (Prims.hasEq (FStar.Pervasives.result @x0py629)))))) :pattern ((Valid (Prims.hasEq (FStar.Pervasives_Tm_refine_a4dcdeeacbcb04d05a6720f786918fd6 @x0py629 @x1py797)))) )) :named haseqFStar.Pervasives_Tm_refine_a4dcdeeacbcb04d05a6720f786918fd6))
(assert (! (forall ((@x0py630 Term)) (! (and (or (Valid (Prims.hasEq (FStar.Pervasives.result @x0py630))) (not (Valid (Prims.hasEq (FStar.Pervasives_Tm_refine_a2260b9f44d24a9a5b9e80956138e9d0 @x0py630))))) (or (Valid (Prims.hasEq (FStar.Pervasives_Tm_refine_a2260b9f44d24a9a5b9e80956138e9d0 @x0py630))) (not (Valid (Prims.hasEq (FStar.Pervasives.result @x0py630)))))) :pattern ((Valid (Prims.hasEq (FStar.Pervasives_Tm_refine_a2260b9f44d24a9a5b9e80956138e9d0 @x0py630)))) )) :named haseqFStar.Pervasives_Tm_refine_a2260b9f44d24a9a5b9e80956138e9d0))
(assert (! (or (Valid (Prims.hasEq FStar.Pervasives.__internal_ocaml_attributes)) (not (Valid (Prims.hasEq FStar.Pervasives_Tm_refine_ac46c1a2a06ce46a180e0eda48004c47)))) :named haseqFStar.Pervasives_Tm_refine_ac46c1a2a06ce46a180e0eda48004c47_0))
(assert (! (or (Valid (Prims.hasEq FStar.Pervasives_Tm_refine_ac46c1a2a06ce46a180e0eda48004c47)) (not (Valid (Prims.hasEq FStar.Pervasives.__internal_ocaml_attributes)))) :named haseqFStar.Pervasives_Tm_refine_ac46c1a2a06ce46a180e0eda48004c47_1))
(assert (! (or (Valid (Prims.hasEq FStar.Pervasives.__internal_ocaml_attributes)) (not (Valid (Prims.hasEq FStar.Pervasives_Tm_refine_c53089e2d20d1b0f5a267296ac8e45f0)))) :named haseqFStar.Pervasives_Tm_refine_c53089e2d20d1b0f5a267296ac8e45f0_0))
(assert (! (or (Valid (Prims.hasEq FStar.Pervasives_Tm_refine_c53089e2d20d1b0f5a267296ac8e45f0)) (not (Valid (Prims.hasEq FStar.Pervasives.__internal_ocaml_attributes)))) :named haseqFStar.Pervasives_Tm_refine_c53089e2d20d1b0f5a267296ac8e45f0_1))
(assert (! (forall ((@x0py631 Term)) (! (and (or (Valid (Prims.hasEq (Prims.list @x0py631))) (not (Valid (Prims.hasEq (Prims_Tm_refine_7aac12c24449a22c34d98a0ea8ed4a32 @x0py631))))) (or (Valid (Prims.hasEq (Prims_Tm_refine_7aac12c24449a22c34d98a0ea8ed4a32 @x0py631))) (not (Valid (Prims.hasEq (Prims.list @x0py631)))))) :pattern ((Valid (Prims.hasEq (Prims_Tm_refine_7aac12c24449a22c34d98a0ea8ed4a32 @x0py631)))) )) :named haseqPrims_Tm_refine_7aac12c24449a22c34d98a0ea8ed4a32))
(assert (! (or (Valid (Prims.hasEq Prims_Tm_refine_8c9ebed3095a60bf2b256a37e40b13f4)) (not (Valid (Prims.hasEq Tm_type)))) :named haseqPrims_Tm_refine_8c9ebed3095a60bf2b256a37e40b13f4_0))
(assert (! (or (Valid (Prims.hasEq Tm_type)) (not (Valid (Prims.hasEq Prims_Tm_refine_8c9ebed3095a60bf2b256a37e40b13f4)))) :named haseqPrims_Tm_refine_8c9ebed3095a60bf2b256a37e40b13f4_1))
(assert (! (forall ((@x0py632 Term)(@x1py798 Term)) (! (and (or (Valid (Prims.hasEq @x0py632)) (not (Valid (Prims.hasEq (Prims_Tm_refine_8d65e998a07dd53ec478e27017d9dba5 @x0py632 @x1py798))))) (or (Valid (Prims.hasEq (Prims_Tm_refine_8d65e998a07dd53ec478e27017d9dba5 @x0py632 @x1py798))) (not (Valid (Prims.hasEq @x0py632))))) :pattern ((Valid (Prims.hasEq (Prims_Tm_refine_8d65e998a07dd53ec478e27017d9dba5 @x0py632 @x1py798)))) )) :named haseqPrims_Tm_refine_8d65e998a07dd53ec478e27017d9dba5))
(assert (! (forall ((@x0py633 Term)(@x1py799 Term)) (! (and (or (not (Valid (Prims.hasEq (Prims_Tm_refine_95f078f2b9cfbd740f9afd162814a526 @x0py633 @x1py799)))) (Valid (Prims.hasEq (Prims.c_or @x0py633 @x1py799)))) (or (Valid (Prims.hasEq (Prims_Tm_refine_95f078f2b9cfbd740f9afd162814a526 @x0py633 @x1py799))) (not (Valid (Prims.hasEq (Prims.c_or @x0py633 @x1py799)))))) :pattern ((Valid (Prims.hasEq (Prims_Tm_refine_95f078f2b9cfbd740f9afd162814a526 @x0py633 @x1py799)))) )) :named haseqPrims_Tm_refine_95f078f2b9cfbd740f9afd162814a526))
(assert (! (or (Valid (Prims.hasEq Prims_Tm_refine_414d0a9f578ab0048252f8c8f552b99f)) (not (Valid (Prims.hasEq Tm_type)))) :named haseqPrims_Tm_refine_414d0a9f578ab0048252f8c8f552b99f_0))
(assert (! (or (Valid (Prims.hasEq Tm_type)) (not (Valid (Prims.hasEq Prims_Tm_refine_414d0a9f578ab0048252f8c8f552b99f)))) :named haseqPrims_Tm_refine_414d0a9f578ab0048252f8c8f552b99f_1))
(assert (! (forall ((@x0py634 Term)(@x1py800 Term)) (! (and (or (Valid (Prims.hasEq (Prims.c_or @x0py634 @x1py800))) (not (Valid (Prims.hasEq (Prims_Tm_refine_51387c0a7ef77e43ab89d4ae2b6b464d @x0py634 @x1py800))))) (or (Valid (Prims.hasEq (Prims_Tm_refine_51387c0a7ef77e43ab89d4ae2b6b464d @x0py634 @x1py800))) (not (Valid (Prims.hasEq (Prims.c_or @x0py634 @x1py800)))))) :pattern ((Valid (Prims.hasEq (Prims_Tm_refine_51387c0a7ef77e43ab89d4ae2b6b464d @x0py634 @x1py800)))) )) :named haseqPrims_Tm_refine_51387c0a7ef77e43ab89d4ae2b6b464d))
(assert (! (forall ((@x0py635 Term)) (! (and (or (Valid (Prims.hasEq @x0py635)) (not (Valid (Prims.hasEq (Prims_Tm_refine_7075614a0e8c0bdbec6de0d0ef7f1280 @x0py635))))) (or (Valid (Prims.hasEq (Prims_Tm_refine_7075614a0e8c0bdbec6de0d0ef7f1280 @x0py635))) (not (Valid (Prims.hasEq @x0py635))))) :pattern ((Valid (Prims.hasEq (Prims_Tm_refine_7075614a0e8c0bdbec6de0d0ef7f1280 @x0py635)))) )) :named haseqPrims_Tm_refine_7075614a0e8c0bdbec6de0d0ef7f1280))
(assert (! (forall ((@x0py636 Term)) (! (and (or (Valid (Prims.hasEq @x0py636)) (not (Valid (Prims.hasEq (Prims_Tm_refine_ba523126f67e00e7cd55f0b92f16681d @x0py636))))) (or (Valid (Prims.hasEq (Prims_Tm_refine_ba523126f67e00e7cd55f0b92f16681d @x0py636))) (not (Valid (Prims.hasEq @x0py636))))) :pattern ((Valid (Prims.hasEq (Prims_Tm_refine_ba523126f67e00e7cd55f0b92f16681d @x0py636)))) )) :named haseqPrims_Tm_refine_ba523126f67e00e7cd55f0b92f16681d))
(assert (! (forall ((@x0py637 Term)) (! (and (or (Valid (Prims.hasEq @x0py637)) (not (Valid (Prims.hasEq (Prims_Tm_refine_c16bc1b61f58b349bf6fc1c94dcaf83b @x0py637))))) (or (Valid (Prims.hasEq (Prims_Tm_refine_c16bc1b61f58b349bf6fc1c94dcaf83b @x0py637))) (not (Valid (Prims.hasEq @x0py637))))) :pattern ((Valid (Prims.hasEq (Prims_Tm_refine_c16bc1b61f58b349bf6fc1c94dcaf83b @x0py637)))) )) :named haseqPrims_Tm_refine_c16bc1b61f58b349bf6fc1c94dcaf83b))
(assert (! (forall ((@x0py638 Term)) (! (and (or (Valid (Prims.hasEq @x0py638)) (not (Valid (Prims.hasEq (Prims_Tm_refine_f048236b5f8051f83b495ea5eaa6127b @x0py638))))) (or (Valid (Prims.hasEq (Prims_Tm_refine_f048236b5f8051f83b495ea5eaa6127b @x0py638))) (not (Valid (Prims.hasEq @x0py638))))) :pattern ((Valid (Prims.hasEq (Prims_Tm_refine_f048236b5f8051f83b495ea5eaa6127b @x0py638)))) )) :named haseqPrims_Tm_refine_f048236b5f8051f83b495ea5eaa6127b))
(assert (! (forall ((@u0py255 Fuel)(@x1py801 Term)) (! (or (is-BoxInt @x1py801) (not (HasTypeFuel @u0py255 @x1py801 Prims.int))) :pattern ((HasTypeFuel @u0py255 @x1py801 Prims.int)) )) :named int_inversion))
(assert (! (forall ((@u0py256 Int)) (! (HasType (BoxInt @u0py256) Prims.int) :pattern ((BoxInt @u0py256)) )) :named int_typing))
(assert (! (forall ((@x0py639 Term)(@x1py802 Term)(@x2py595 Term)) (! (= (ApplyTT (False_Tm_abs_2be0aece0b6cba4fbd785a965d99ed1c @x1py802 @x2py595) @x0py639) Tm_unit) :pattern ((ApplyTT (False_Tm_abs_2be0aece0b6cba4fbd785a965d99ed1c @x1py802 @x2py595) @x0py639)) )) :named interpretation_False_Tm_abs_2be0aece0b6cba4fbd785a965d99ed1c))
(assert (! (forall ((@x0py640 Term)(@x1py803 Term)(@x2py596 Term)) (! (= (ApplyTT (False_Tm_abs_9ac3dd8deb7277a6b94e52d999a4b8c7 @x1py803 @x2py596) @x0py640) (False.init @x1py803 (BoxInt 10))) :pattern ((ApplyTT (False_Tm_abs_9ac3dd8deb7277a6b94e52d999a4b8c7 @x1py803 @x2py596) @x0py640)) )) :named interpretation_False_Tm_abs_9ac3dd8deb7277a6b94e52d999a4b8c7))
(assert (! (forall ((@x0py641 Term)(@x1py804 Term)(@x2py597 Term)(@x3py426 Term)) (! (= (ApplyTT (False_Tm_abs_88557b3f5b7ee160d0bedb3d1195c252 @x1py804 @x2py597 @x3py426) @x0py641) (False.step @x2py597 (Prims.Nil (False.relation @x2py597)) (BoxInt 10) (BoxInt 10) @x1py804 (BoxInt 9) (False_Tm_abs_9ac3dd8deb7277a6b94e52d999a4b8c7 @x2py597 @x3py426) (False_Tm_abs_2be0aece0b6cba4fbd785a965d99ed1c @x1py804 @x3py426))) :pattern ((ApplyTT (False_Tm_abs_88557b3f5b7ee160d0bedb3d1195c252 @x1py804 @x2py597 @x3py426) @x0py641)) )) :named interpretation_False_Tm_abs_88557b3f5b7ee160d0bedb3d1195c252))
(assert (! (forall ((@x0py642 Term)(@x1py805 Term)(@x2py598 Term)) (! (= (ApplyTT (FStar.Pervasives_Tm_abs_08b6cbf5c721293cb051b1b5a6efcdf3 @x1py805 @x2py598) @x0py642) (ApplyTT @x1py805 (FStar.Pervasives.V @x2py598 @x0py642))) :pattern ((ApplyTT (FStar.Pervasives_Tm_abs_08b6cbf5c721293cb051b1b5a6efcdf3 @x1py805 @x2py598) @x0py642)) )) :named interpretation_FStar.Pervasives_Tm_abs_08b6cbf5c721293cb051b1b5a6efcdf3))
(assert (! (forall ((@x0py643 Term)(@x1py806 Term)(@x2py599 Term)(@x3py427 Term)(@x4py307 Term)(@x5py240 Term)) (! (= (ApplyTT (ApplyTT (FStar.Pervasives_Tm_abs_a31992f5c5dabbfdc6da62a16cd60a28 @x2py599 @x3py427 @x4py307 @x5py240) @x0py643) @x1py806) (ApplyTT (ApplyTT (ApplyTT @x2py599 @x0py643) @x3py427) @x1py806)) :pattern ((ApplyTT (ApplyTT (FStar.Pervasives_Tm_abs_a31992f5c5dabbfdc6da62a16cd60a28 @x2py599 @x3py427 @x4py307 @x5py240) @x0py643) @x1py806)) )) :named interpretation_FStar.Pervasives_Tm_abs_a31992f5c5dabbfdc6da62a16cd60a28))
(assert (! (forall ((@x0py644 Term)(@x1py807 Term)(@x2py600 Term)(@x3py428 Term)(@x4py308 Term)(@x5py241 Term)(@x6py162 Term)) (! (= (ApplyTT (ApplyTT (FStar.Pervasives_Tm_abs_e071eb1ddae878d42677e33386379719 @x2py600 @x3py428 @x4py308 @x5py241 @x6py162) @x0py644) @x1py807) (z3name!713 @x4py308 @x3py428 @x2py600 @x1py807 @x0py644)) :pattern ((ApplyTT (ApplyTT (FStar.Pervasives_Tm_abs_e071eb1ddae878d42677e33386379719 @x2py600 @x3py428 @x4py308 @x5py241 @x6py162) @x0py644) @x1py807)) )) :named interpretation_FStar.Pervasives_Tm_abs_e071eb1ddae878d42677e33386379719_0))
(assert (! (forall ((x!1py6 Term)(x!2py4 Term)(x!3py0 Term)(x!4py0 Term)(x!5py0 Term)) (! (or (is-FStar.Pervasives.V x!1py6) (= (z3name!713 x!5py0 x!4py0 x!3py0 x!2py4 x!1py6) (z3name!714 x!5py0 x!4py0 x!2py4 x!1py6))) :pattern ((z3name!713 x!5py0 x!4py0 x!3py0 x!2py4 x!1py6)) )) :named interpretation_FStar.Pervasives_Tm_abs_e071eb1ddae878d42677e33386379719_1))
(assert (! (forall ((x!1py7 Term)(x!2py5 Term)(x!3py1 Term)(x!4py1 Term)(x!5py1 Term)) (! (or (not (is-FStar.Pervasives.V x!1py7)) (= (z3name!713 x!5py1 x!4py1 x!3py1 x!2py5 x!1py7) (ApplyTT (ApplyTT (ApplyTT x!3py1 (FStar.Pervasives.V_v x!1py7)) x!4py1) x!2py5))) :pattern ((z3name!713 x!5py1 x!4py1 x!3py1 x!2py5 x!1py7)) )) :named interpretation_FStar.Pervasives_Tm_abs_e071eb1ddae878d42677e33386379719_2))
(assert (! (forall ((x!1py8 Term)(x!2py6 Term)(x!3py2 Term)(x!4py2 Term)) (! (or (is-FStar.Pervasives.E x!1py8) (= (z3name!714 x!4py2 x!3py2 x!2py6 x!1py8) (z3name!715 x!4py2 x!3py2 x!2py6 x!1py8))) :pattern ((z3name!714 x!4py2 x!3py2 x!2py6 x!1py8)) )) :named interpretation_FStar.Pervasives_Tm_abs_e071eb1ddae878d42677e33386379719_3))
(assert (! (forall ((x!1py9 Term)(x!2py7 Term)(x!3py3 Term)(x!4py3 Term)) (! (or (is-FStar.Pervasives.Err x!1py9) (= (z3name!715 x!4py3 x!3py3 x!2py7 x!1py9) Tm_unit)) :pattern ((z3name!715 x!4py3 x!3py3 x!2py7 x!1py9)) )) :named interpretation_FStar.Pervasives_Tm_abs_e071eb1ddae878d42677e33386379719_4))
(assert (! (forall ((x!1py10 Term)(x!2py8 Term)(x!3py4 Term)(x!4py4 Term)) (! (or (not (is-FStar.Pervasives.E x!1py10)) (= (z3name!714 x!4py4 x!3py4 x!2py8 x!1py10) (ApplyTT (ApplyTT x!3py4 (FStar.Pervasives.E x!4py4 (FStar.Pervasives.E_e x!1py10))) x!2py8))) :pattern ((z3name!714 x!4py4 x!3py4 x!2py8 x!1py10)) )) :named interpretation_FStar.Pervasives_Tm_abs_e071eb1ddae878d42677e33386379719_5))
(assert (! (forall ((x!1py11 Term)(x!2py9 Term)(x!3py5 Term)(x!4py5 Term)) (! (or (not (is-FStar.Pervasives.Err x!1py11)) (= (z3name!715 x!4py5 x!3py5 x!2py9 x!1py11) (ApplyTT (ApplyTT x!3py5 (FStar.Pervasives.Err x!4py5 (FStar.Pervasives.Err_msg x!1py11))) x!2py9))) :pattern ((z3name!715 x!4py5 x!3py5 x!2py9 x!1py11)) )) :named interpretation_FStar.Pervasives_Tm_abs_e071eb1ddae878d42677e33386379719_6))
(assert (! (forall ((@x0py645 Term)(@x1py808 Term)(@x2py601 Term)) (! (= (ApplyTT (FStar.Pervasives_Tm_abs_e607bfcb7d8c23b51c0ff04d27046641 @x1py808 @x2py601) @x0py645) @x1py808) :pattern ((ApplyTT (FStar.Pervasives_Tm_abs_e607bfcb7d8c23b51c0ff04d27046641 @x1py808 @x2py601) @x0py645)) )) :named interpretation_FStar.Pervasives_Tm_abs_e607bfcb7d8c23b51c0ff04d27046641))
(assert (! (forall ((@x0py646 Term)(@x1py809 Term)(@x2py602 Term)(@x3py429 Term)(@x4py309 Term)) (! (= (ApplyTT (FStar.Pervasives_Tm_abs_e8350ed3e632db104170fa7e8c0e0fef @x1py809 @x2py602 @x3py429 @x4py309) @x0py646) (z3name!716 @x3py429 @x2py602 @x1py809 @x0py646)) :pattern ((ApplyTT (FStar.Pervasives_Tm_abs_e8350ed3e632db104170fa7e8c0e0fef @x1py809 @x2py602 @x3py429 @x4py309) @x0py646)) )) :named interpretation_FStar.Pervasives_Tm_abs_e8350ed3e632db104170fa7e8c0e0fef_0))
(assert (! (forall ((x!1py12 Term)(x!2py10 Term)(x!3py6 Term)(x!4py6 Term)) (! (or (is-FStar.Pervasives.V x!1py12) (= (z3name!716 x!4py6 x!3py6 x!2py10 x!1py12) (z3name!717 x!4py6 x!3py6 x!1py12))) :pattern ((z3name!716 x!4py6 x!3py6 x!2py10 x!1py12)) )) :named interpretation_FStar.Pervasives_Tm_abs_e8350ed3e632db104170fa7e8c0e0fef_1))
(assert (! (forall ((x!1py13 Term)(x!2py11 Term)(x!3py7 Term)(x!4py7 Term)) (! (or (not (is-FStar.Pervasives.V x!1py13)) (= (z3name!716 x!4py7 x!3py7 x!2py11 x!1py13) (ApplyTT (ApplyTT x!2py11 (FStar.Pervasives.V_v x!1py13)) x!3py7))) :pattern ((z3name!716 x!4py7 x!3py7 x!2py11 x!1py13)) )) :named interpretation_FStar.Pervasives_Tm_abs_e8350ed3e632db104170fa7e8c0e0fef_2))
(assert (! (forall ((x!1py14 Term)(x!2py12 Term)(x!3py8 Term)) (! (or (is-FStar.Pervasives.E x!1py14) (= (z3name!717 x!3py8 x!2py12 x!1py14) (z3name!718 x!3py8 x!2py12 x!1py14))) :pattern ((z3name!717 x!3py8 x!2py12 x!1py14)) )) :named interpretation_FStar.Pervasives_Tm_abs_e8350ed3e632db104170fa7e8c0e0fef_3))
(assert (! (forall ((x!1py15 Term)(x!2py13 Term)(x!3py9 Term)) (! (or (is-FStar.Pervasives.Err x!1py15) (= (z3name!718 x!3py9 x!2py13 x!1py15) Tm_unit)) :pattern ((z3name!718 x!3py9 x!2py13 x!1py15)) )) :named interpretation_FStar.Pervasives_Tm_abs_e8350ed3e632db104170fa7e8c0e0fef_4))
(assert (! (forall ((x!1py16 Term)(x!2py14 Term)(x!3py10 Term)) (! (or (not (is-FStar.Pervasives.E x!1py16)) (= (z3name!717 x!3py10 x!2py14 x!1py16) (ApplyTT x!2py14 (FStar.Pervasives.E x!3py10 (FStar.Pervasives.E_e x!1py16))))) :pattern ((z3name!717 x!3py10 x!2py14 x!1py16)) )) :named interpretation_FStar.Pervasives_Tm_abs_e8350ed3e632db104170fa7e8c0e0fef_5))
(assert (! (forall ((x!1py17 Term)(x!2py15 Term)(x!3py11 Term)) (! (or (not (is-FStar.Pervasives.Err x!1py17)) (= (z3name!718 x!3py11 x!2py15 x!1py17) (ApplyTT x!2py15 (FStar.Pervasives.Err x!3py11 (FStar.Pervasives.Err_msg x!1py17))))) :pattern ((z3name!718 x!3py11 x!2py15 x!1py17)) )) :named interpretation_FStar.Pervasives_Tm_abs_e8350ed3e632db104170fa7e8c0e0fef_6))
(assert (! (forall ((@x0py647 Term)(@x1py810 Term)(@x2py603 Term)(@x3py430 Term)(@x4py310 Term)) (! (= (ApplyTT (ApplyTT (FStar.Pervasives_Tm_abs_fcd1fe475df8761bb0be4af6b43db341 @x2py603 @x3py430 @x4py310) @x0py647) @x1py810) @x2py603) :pattern ((ApplyTT (ApplyTT (FStar.Pervasives_Tm_abs_fcd1fe475df8761bb0be4af6b43db341 @x2py603 @x3py430 @x4py310) @x0py647) @x1py810)) )) :named interpretation_FStar.Pervasives_Tm_abs_fcd1fe475df8761bb0be4af6b43db341))
(assert (! (forall ((@x0py648 Term)(@x1py811 Term)(@x2py604 Term)(@x3py431 Term)(@x4py311 Term)) (! (= (ApplyTT (ApplyTT (FStar.Pervasives_Tm_abs_fcfd87b8060d768ae62f6917d2355825 @x2py604 @x3py431 @x4py311) @x0py648) @x1py811) @x2py604) :pattern ((ApplyTT (ApplyTT (FStar.Pervasives_Tm_abs_fcfd87b8060d768ae62f6917d2355825 @x2py604 @x3py431 @x4py311) @x0py648) @x1py811)) )) :named interpretation_FStar.Pervasives_Tm_abs_fcfd87b8060d768ae62f6917d2355825))
(assert (! (forall ((@x0py649 Term)(@x1py812 Term)(@x2py605 Term)) (! (= (ApplyTT (Prims_Tm_abs_65a2e960d61ec783b59c1bd1dd30ed10 @x1py812 @x2py605) @x0py649) @x1py812) :pattern ((ApplyTT (Prims_Tm_abs_65a2e960d61ec783b59c1bd1dd30ed10 @x1py812 @x2py605) @x0py649)) )) :named interpretation_Prims_Tm_abs_65a2e960d61ec783b59c1bd1dd30ed10))
(assert (! (forall ((@x0py650 Term)(@x1py813 Term)(@x2py606 Term)) (! (= (ApplyTT (Prims_Tm_abs_cc0ce251c10a6cba9664080c8e806896 @x1py813 @x2py606) @x0py650) (Prims.l_not (Prims.eq2 @x2py606 @x0py650 @x1py813))) :pattern ((ApplyTT (Prims_Tm_abs_cc0ce251c10a6cba9664080c8e806896 @x1py813 @x2py606) @x0py650)) )) :named interpretation_Prims_Tm_abs_cc0ce251c10a6cba9664080c8e806896))
(assert (! (forall ((@x0py651 Term)) (! (or (not (Valid (FStar.Pervasives.inversion @x0py651))) (forall ((@x1py814 Term)) (! (or (not (HasTypeZ @x1py814 @x0py651)) (HasTypeFuel (SFuel ZFuel) @x1py814 @x0py651)) :pattern ((HasTypeZ @x1py814 @x0py651)) ))) :pattern ((FStar.Pervasives.inversion @x0py651)) )) :named inversion-interp))
(assert (! (forall ((@x0py652 Term)(@x1py815 Term)(@x2py607 Term)(@x3py432 Term)) (! (or (not (HasType @x1py815 (Prims.list (False.relation @x0py652)))) (not (HasType @x2py607 @x0py652)) (not (HasType @x3py432 @x0py652)) (not (HasType @x0py652 Tm_type)) (HasType (False.calc_proof @x0py652 @x1py815 @x2py607 @x3py432) Tm_type)) :pattern ((False.calc_proof @x0py652 @x1py815 @x2py607 @x3py432)) )) :named kinding_False.calc_proof@tok))
(assert (! (HasType FStar.Pervasives.__internal_ocaml_attributes Tm_type) :named kinding_FStar.Pervasives.__internal_ocaml_attributes@tok))
(assert (! (forall ((@x0py653 Term)(@x1py816 Term)(@x2py608 Term)) (! (or (not (HasType @x0py653 Tm_type)) (not (HasType @x2py608 (Tm_arrow_614c7b5886a6e5b119a37c35c7e4bd59 @x1py816 @x0py653))) (not (HasType @x1py816 (Tm_arrow_e06752ba152f81447b312efcdf8f0e23 @x0py653))) (HasType (FStar.Pervasives.dtuple3 @x0py653 @x1py816 @x2py608) Tm_type)) :pattern ((FStar.Pervasives.dtuple3 @x0py653 @x1py816 @x2py608)) )) :named kinding_FStar.Pervasives.dtuple3@tok))
(assert (! (forall ((@x0py654 Term)(@x1py817 Term)(@x2py609 Term)(@x3py433 Term)) (! (or (not (HasType @x2py609 (Tm_arrow_614c7b5886a6e5b119a37c35c7e4bd59 @x1py817 @x0py654))) (not (HasType @x3py433 (Tm_arrow_dbf39bf049d72c3088e1ed84d246952d @x2py609 @x1py817 @x0py654))) (not (HasType @x0py654 Tm_type)) (not (HasType @x1py817 (Tm_arrow_e06752ba152f81447b312efcdf8f0e23 @x0py654))) (HasType (FStar.Pervasives.dtuple4 @x0py654 @x1py817 @x2py609 @x3py433) Tm_type)) :pattern ((FStar.Pervasives.dtuple4 @x0py654 @x1py817 @x2py609 @x3py433)) )) :named kinding_FStar.Pervasives.dtuple4@tok))
(assert (! (forall ((@x0py655 Term)(@x1py818 Term)) (! (or (HasType (FStar.Pervasives.either @x0py655 @x1py818) Tm_type) (not (HasType @x0py655 Tm_type)) (not (HasType @x1py818 Tm_type))) :pattern ((FStar.Pervasives.either @x0py655 @x1py818)) )) :named kinding_FStar.Pervasives.either@tok))
(assert (! (forall ((@x0py656 Term)) (! (or (not (HasType @x0py656 Tm_type)) (HasType (FStar.Pervasives.Native.option @x0py656) Tm_type)) :pattern ((FStar.Pervasives.Native.option @x0py656)) )) :named kinding_FStar.Pervasives.Native.option@tok))
(assert (! (forall ((@x0py657 Term)(@x1py819 Term)) (! (or (not (HasType @x1py819 Tm_type)) (HasType (FStar.Pervasives.Native.tuple2 @x0py657 @x1py819) Tm_type) (not (HasType @x0py657 Tm_type))) :pattern ((FStar.Pervasives.Native.tuple2 @x0py657 @x1py819)) )) :named kinding_FStar.Pervasives.Native.tuple2@tok))
(assert (! (forall ((@x0py658 Term)(@x1py820 Term)(@x2py610 Term)) (! (or (not (HasType @x1py820 Tm_type)) (not (HasType @x2py610 Tm_type)) (HasType (FStar.Pervasives.Native.tuple3 @x0py658 @x1py820 @x2py610) Tm_type) (not (HasType @x0py658 Tm_type))) :pattern ((FStar.Pervasives.Native.tuple3 @x0py658 @x1py820 @x2py610)) )) :named kinding_FStar.Pervasives.Native.tuple3@tok))
(assert (! (forall ((@x0py659 Term)(@x1py821 Term)(@x2py611 Term)(@x3py434 Term)) (! (or (not (HasType @x1py821 Tm_type)) (HasType (FStar.Pervasives.Native.tuple4 @x0py659 @x1py821 @x2py611 @x3py434) Tm_type) (not (HasType @x2py611 Tm_type)) (not (HasType @x3py434 Tm_type)) (not (HasType @x0py659 Tm_type))) :pattern ((FStar.Pervasives.Native.tuple4 @x0py659 @x1py821 @x2py611 @x3py434)) )) :named kinding_FStar.Pervasives.Native.tuple4@tok))
(assert (! (forall ((@x0py660 Term)(@x1py822 Term)(@x2py612 Term)(@x3py435 Term)(@x4py312 Term)) (! (or (HasType (FStar.Pervasives.Native.tuple5 @x0py660 @x1py822 @x2py612 @x3py435 @x4py312) Tm_type) (not (HasType @x2py612 Tm_type)) (not (HasType @x3py435 Tm_type)) (not (HasType @x4py312 Tm_type)) (not (HasType @x0py660 Tm_type)) (not (HasType @x1py822 Tm_type))) :pattern ((FStar.Pervasives.Native.tuple5 @x0py660 @x1py822 @x2py612 @x3py435 @x4py312)) )) :named kinding_FStar.Pervasives.Native.tuple5@tok))
(assert (! (forall ((@x0py661 Term)(@x1py823 Term)(@x2py613 Term)(@x3py436 Term)(@x4py313 Term)(@x5py242 Term)) (! (or (HasType (FStar.Pervasives.Native.tuple6 @x0py661 @x1py823 @x2py613 @x3py436 @x4py313 @x5py242) Tm_type) (not (HasType @x0py661 Tm_type)) (not (HasType @x3py436 Tm_type)) (not (HasType @x4py313 Tm_type)) (not (HasType @x5py242 Tm_type)) (not (HasType @x1py823 Tm_type)) (not (HasType @x2py613 Tm_type))) :pattern ((FStar.Pervasives.Native.tuple6 @x0py661 @x1py823 @x2py613 @x3py436 @x4py313 @x5py242)) )) :named kinding_FStar.Pervasives.Native.tuple6@tok))
(assert (! (forall ((@x0py662 Term)(@x1py824 Term)(@x2py614 Term)(@x3py437 Term)(@x4py314 Term)(@x5py243 Term)(@x6py163 Term)) (! (or (HasType (FStar.Pervasives.Native.tuple7 @x0py662 @x1py824 @x2py614 @x3py437 @x4py314 @x5py243 @x6py163) Tm_type) (not (HasType @x0py662 Tm_type)) (not (HasType @x1py824 Tm_type)) (not (HasType @x4py314 Tm_type)) (not (HasType @x5py243 Tm_type)) (not (HasType @x6py163 Tm_type)) (not (HasType @x2py614 Tm_type)) (not (HasType @x3py437 Tm_type))) :pattern ((FStar.Pervasives.Native.tuple7 @x0py662 @x1py824 @x2py614 @x3py437 @x4py314 @x5py243 @x6py163)) )) :named kinding_FStar.Pervasives.Native.tuple7@tok))
(assert (! (forall ((@x0py663 Term)(@x1py825 Term)(@x2py615 Term)(@x3py438 Term)(@x4py315 Term)(@x5py244 Term)(@x6py164 Term)(@x7py117 Term)) (! (or (HasType (FStar.Pervasives.Native.tuple8 @x0py663 @x1py825 @x2py615 @x3py438 @x4py315 @x5py244 @x6py164 @x7py117) Tm_type) (not (HasType @x0py663 Tm_type)) (not (HasType @x1py825 Tm_type)) (not (HasType @x2py615 Tm_type)) (not (HasType @x5py244 Tm_type)) (not (HasType @x6py164 Tm_type)) (not (HasType @x7py117 Tm_type)) (not (HasType @x3py438 Tm_type)) (not (HasType @x4py315 Tm_type))) :pattern ((FStar.Pervasives.Native.tuple8 @x0py663 @x1py825 @x2py615 @x3py438 @x4py315 @x5py244 @x6py164 @x7py117)) )) :named kinding_FStar.Pervasives.Native.tuple8@tok))
(assert (! (forall ((@x0py664 Term)) (! (or (not (HasType @x0py664 Tm_type)) (HasType (FStar.Pervasives.result @x0py664) Tm_type)) :pattern ((FStar.Pervasives.result @x0py664)) )) :named kinding_FStar.Pervasives.result@tok))
(assert (! (forall ((@x0py665 Term)(@x1py826 Term)) (! (or (HasType (Prims.c_and @x0py665 @x1py826) Tm_type) (not (HasType @x0py665 Tm_type)) (not (HasType @x1py826 Tm_type))) :pattern ((Prims.c_and @x0py665 @x1py826)) )) :named kinding_Prims.c_and@tok))
(assert (! (HasType Prims.c_False Tm_type) :named kinding_Prims.c_False@tok))
(assert (! (forall ((@x0py666 Term)(@x1py827 Term)) (! (or (HasType (Prims.c_or @x0py666 @x1py827) Tm_type) (not (HasType @x0py666 Tm_type)) (not (HasType @x1py827 Tm_type))) :pattern ((Prims.c_or @x0py666 @x1py827)) )) :named kinding_Prims.c_or@tok))
(assert (! (HasType Prims.c_True Tm_type) :named kinding_Prims.c_True@tok))
(assert (! (forall ((@x0py667 Term)(@x1py828 Term)) (! (or (not (HasType @x0py667 Tm_type)) (not (HasType @x1py828 (Tm_arrow_e06752ba152f81447b312efcdf8f0e23 @x0py667))) (HasType (Prims.dtuple2 @x0py667 @x1py828) Tm_type)) :pattern ((Prims.dtuple2 @x0py667 @x1py828)) )) :named kinding_Prims.dtuple2@tok))
(assert (! (forall ((@x0py668 Term)(@x1py829 Term)(@x2py616 Term)) (! (or (HasType (Prims.equals @x0py668 @x1py829 @x2py616) Tm_type) (not (HasType @x0py668 Tm_type)) (not (HasType @x1py829 @x0py668)) (not (HasType @x2py616 @x0py668))) :pattern ((Prims.equals @x0py668 @x1py829 @x2py616)) )) :named kinding_Prims.equals@tok))
(assert (! (forall ((@x0py669 Term)(@x1py830 Term)(@x2py617 Term)(@x3py439 Term)) (! (or (HasType (Prims.h_equals @x0py669 @x1py830 @x2py617 @x3py439) Tm_type) (not (HasType @x1py830 @x0py669)) (not (HasType @x2py617 Tm_type)) (not (HasType @x3py439 @x2py617)) (not (HasType @x0py669 Tm_type))) :pattern ((Prims.h_equals @x0py669 @x1py830 @x2py617 @x3py439)) )) :named kinding_Prims.h_equals@tok))
(assert (! (HasType Prims.lex_t Tm_type) :named kinding_Prims.lex_t@tok))
(assert (! (forall ((@x0py670 Term)) (! (or (not (HasType @x0py670 Tm_type)) (HasType (Prims.list @x0py670) Tm_type)) :pattern ((Prims.list @x0py670)) )) :named kinding_Prims.list@tok))
(assert (! (HasType Tm_arrow_0dad7bc7f64c4faac713e4788a31a16e Tm_type) :named kinding_Tm_arrow_0dad7bc7f64c4faac713e4788a31a16e))
(assert (! (forall ((@x0py671 Term)) (! (HasType (Tm_arrow_0e873ada4642b527a7ed8ad8c9a23c0c @x0py671) Tm_type) :pattern ((HasType (Tm_arrow_0e873ada4642b527a7ed8ad8c9a23c0c @x0py671) Tm_type)) )) :named kinding_Tm_arrow_0e873ada4642b527a7ed8ad8c9a23c0c))
(assert (! (forall ((@x0py672 Term)(@x1py831 Term)(@x2py618 Term)) (! (HasType (Tm_arrow_1a6b9de3491ece0b8961a8acbb38411b @x0py672 @x1py831 @x2py618) Tm_type) :pattern ((HasType (Tm_arrow_1a6b9de3491ece0b8961a8acbb38411b @x0py672 @x1py831 @x2py618) Tm_type)) )) :named kinding_Tm_arrow_1a6b9de3491ece0b8961a8acbb38411b))
(assert (! (HasType Tm_arrow_01af5ab61334f3cf5e140ba023176d9a Tm_type) :named kinding_Tm_arrow_01af5ab61334f3cf5e140ba023176d9a))
(assert (! (forall ((@x0py673 Term)) (! (HasType (Tm_arrow_1c4871de840a52d38a5b65a5ad4e97ea @x0py673) Tm_type) :pattern ((HasType (Tm_arrow_1c4871de840a52d38a5b65a5ad4e97ea @x0py673) Tm_type)) )) :named kinding_Tm_arrow_1c4871de840a52d38a5b65a5ad4e97ea))
(assert (! (HasType Tm_arrow_1dac41f442c1cc7b5405768e36ae98f9 Tm_type) :named kinding_Tm_arrow_1dac41f442c1cc7b5405768e36ae98f9))
(assert (! (forall ((@x0py674 Term)) (! (HasType (Tm_arrow_1dca680c8d3cb58c552551782d77cbad @x0py674) Tm_type) :pattern ((HasType (Tm_arrow_1dca680c8d3cb58c552551782d77cbad @x0py674) Tm_type)) )) :named kinding_Tm_arrow_1dca680c8d3cb58c552551782d77cbad))
(assert (! (forall ((@x0py675 Term)) (! (HasType (Tm_arrow_1e34c94069c60657ba290f517d081e8f @x0py675) Tm_type) :pattern ((HasType (Tm_arrow_1e34c94069c60657ba290f517d081e8f @x0py675) Tm_type)) )) :named kinding_Tm_arrow_1e34c94069c60657ba290f517d081e8f))
(assert (! (forall ((@x0py676 Term)) (! (HasType (Tm_arrow_1eae0eaa54a90d4d45405fc37f59299f @x0py676) Tm_type) :pattern ((HasType (Tm_arrow_1eae0eaa54a90d4d45405fc37f59299f @x0py676) Tm_type)) )) :named kinding_Tm_arrow_1eae0eaa54a90d4d45405fc37f59299f))
(assert (! (HasType Tm_arrow_2b9e6d83dc78155badfb9f85c9c4c887 Tm_type) :named kinding_Tm_arrow_2b9e6d83dc78155badfb9f85c9c4c887))
(assert (! (forall ((@x0py677 Term)) (! (HasType (Tm_arrow_2c5c4d02fbece15e63160b3c87c78b01 @x0py677) Tm_type) :pattern ((HasType (Tm_arrow_2c5c4d02fbece15e63160b3c87c78b01 @x0py677) Tm_type)) )) :named kinding_Tm_arrow_2c5c4d02fbece15e63160b3c87c78b01))
(assert (! (HasType Tm_arrow_02d3b5b79bf8b1df357192967171c4e9 Tm_type) :named kinding_Tm_arrow_02d3b5b79bf8b1df357192967171c4e9))
(assert (! (forall ((@x0py678 Term)) (! (HasType (Tm_arrow_2d7f2b032d9f59f51dc6a0b9dd727adc @x0py678) Tm_type) :pattern ((HasType (Tm_arrow_2d7f2b032d9f59f51dc6a0b9dd727adc @x0py678) Tm_type)) )) :named kinding_Tm_arrow_2d7f2b032d9f59f51dc6a0b9dd727adc))
(assert (! (HasType Tm_arrow_2e5fda2477c3f2ade2b68a9685bf6393 Tm_type) :named kinding_Tm_arrow_2e5fda2477c3f2ade2b68a9685bf6393))
(assert (! (forall ((@x0py679 Term)) (! (HasType (Tm_arrow_2e05015ec978795a21c10130eebfeae9 @x0py679) Tm_type) :pattern ((HasType (Tm_arrow_2e05015ec978795a21c10130eebfeae9 @x0py679) Tm_type)) )) :named kinding_Tm_arrow_2e05015ec978795a21c10130eebfeae9))
(assert (! (HasType Tm_arrow_3ca80ddba151a71b9c9aa6e8efea65cd Tm_type) :named kinding_Tm_arrow_3ca80ddba151a71b9c9aa6e8efea65cd))
(assert (! (forall ((@x0py680 Term)) (! (HasType (Tm_arrow_3e3f6c09cac83bd2c87427772baf967c @x0py680) Tm_type) :pattern ((HasType (Tm_arrow_3e3f6c09cac83bd2c87427772baf967c @x0py680) Tm_type)) )) :named kinding_Tm_arrow_3e3f6c09cac83bd2c87427772baf967c))
(assert (! (forall ((@x0py681 Term)) (! (HasType (Tm_arrow_03fd83481846190115df092b2a491354 @x0py681) Tm_type) :pattern ((HasType (Tm_arrow_03fd83481846190115df092b2a491354 @x0py681) Tm_type)) )) :named kinding_Tm_arrow_03fd83481846190115df092b2a491354))
(assert (! (HasType Tm_arrow_4a0e4247f19d3748beed54010175e86f Tm_type) :named kinding_Tm_arrow_4a0e4247f19d3748beed54010175e86f))
(assert (! (HasType Tm_arrow_4be4d0827cb852d3f57a920e42b0e232 Tm_type) :named kinding_Tm_arrow_4be4d0827cb852d3f57a920e42b0e232))
(assert (! (forall ((@x0py682 Term)(@x1py832 Term)) (! (HasType (Tm_arrow_4c49ce37319be38829a6032b2247a659 @x0py682 @x1py832) Tm_type) :pattern ((HasType (Tm_arrow_4c49ce37319be38829a6032b2247a659 @x0py682 @x1py832) Tm_type)) )) :named kinding_Tm_arrow_4c49ce37319be38829a6032b2247a659))
(assert (! (forall ((@x0py683 Term)) (! (HasType (Tm_arrow_4e8df289938ae02937cd1c94aba2cf20 @x0py683) Tm_type) :pattern ((HasType (Tm_arrow_4e8df289938ae02937cd1c94aba2cf20 @x0py683) Tm_type)) )) :named kinding_Tm_arrow_4e8df289938ae02937cd1c94aba2cf20))
(assert (! (HasType Tm_arrow_4eb2e0118149efb6019111cf994e0f6b Tm_type) :named kinding_Tm_arrow_4eb2e0118149efb6019111cf994e0f6b))
(assert (! (HasType Tm_arrow_4f040c69fbe8d7b2e50ca31bd5455a8e Tm_type) :named kinding_Tm_arrow_4f040c69fbe8d7b2e50ca31bd5455a8e))
(assert (! (forall ((@x0py684 Term)) (! (HasType (Tm_arrow_5caeced02ae19cd28fdaa3e41ea7d339 @x0py684) Tm_type) :pattern ((HasType (Tm_arrow_5caeced02ae19cd28fdaa3e41ea7d339 @x0py684) Tm_type)) )) :named kinding_Tm_arrow_5caeced02ae19cd28fdaa3e41ea7d339))
(assert (! (forall ((@x0py685 Term)(@x1py833 Term)(@x2py619 Term)) (! (HasType (Tm_arrow_5db9487ea079f4bbc6de2da583d038f7 @x0py685 @x1py833 @x2py619) Tm_type) :pattern ((HasType (Tm_arrow_5db9487ea079f4bbc6de2da583d038f7 @x0py685 @x1py833 @x2py619) Tm_type)) )) :named kinding_Tm_arrow_5db9487ea079f4bbc6de2da583d038f7))
(assert (! (forall ((@x0py686 Term)) (! (HasType (Tm_arrow_5f168af91094f21c4a68cd41bed2b946 @x0py686) Tm_type) :pattern ((HasType (Tm_arrow_5f168af91094f21c4a68cd41bed2b946 @x0py686) Tm_type)) )) :named kinding_Tm_arrow_5f168af91094f21c4a68cd41bed2b946))
(assert (! (forall ((@x0py687 Term)(@x1py834 Term)) (! (HasType (Tm_arrow_6c8a344d1f126f59d9c6304a0bfbc84a @x0py687 @x1py834) Tm_type) :pattern ((HasType (Tm_arrow_6c8a344d1f126f59d9c6304a0bfbc84a @x0py687 @x1py834) Tm_type)) )) :named kinding_Tm_arrow_6c8a344d1f126f59d9c6304a0bfbc84a))
(assert (! (forall ((@x0py688 Term)(@x1py835 Term)(@x2py620 Term)(@x3py440 Term)) (! (HasType (Tm_arrow_6cdb49601bd9255655221b5bfb8efb6f @x0py688 @x1py835 @x2py620 @x3py440) Tm_type) :pattern ((HasType (Tm_arrow_6cdb49601bd9255655221b5bfb8efb6f @x0py688 @x1py835 @x2py620 @x3py440) Tm_type)) )) :named kinding_Tm_arrow_6cdb49601bd9255655221b5bfb8efb6f))
(assert (! (forall ((@x0py689 Term)) (! (HasType (Tm_arrow_6d32d43d8787bb16acca18c75ecbe1b1 @x0py689) Tm_type) :pattern ((HasType (Tm_arrow_6d32d43d8787bb16acca18c75ecbe1b1 @x0py689) Tm_type)) )) :named kinding_Tm_arrow_6d32d43d8787bb16acca18c75ecbe1b1))
(assert (! (HasType Tm_arrow_6e23aa00e38a92d031af78d42cdf6218 Tm_type) :named kinding_Tm_arrow_6e23aa00e38a92d031af78d42cdf6218))
(assert (! (HasType Tm_arrow_7c761265d6fe943628c96343fc66d1a0 Tm_type) :named kinding_Tm_arrow_7c761265d6fe943628c96343fc66d1a0))
(assert (! (HasType Tm_arrow_7d790bb96aadc2828cd88ef5143114e0 Tm_type) :named kinding_Tm_arrow_7d790bb96aadc2828cd88ef5143114e0))
(assert (! (forall ((@x0py690 Term)) (! (HasType (Tm_arrow_7df6282d3b185c0f02eb10c3e19fe2e1 @x0py690) Tm_type) :pattern ((HasType (Tm_arrow_7df6282d3b185c0f02eb10c3e19fe2e1 @x0py690) Tm_type)) )) :named kinding_Tm_arrow_7df6282d3b185c0f02eb10c3e19fe2e1))
(assert (! (HasType Tm_arrow_7e78dbd6763d8fddb37f1e732bda927c Tm_type) :named kinding_Tm_arrow_7e78dbd6763d8fddb37f1e732bda927c))
(assert (! (HasType Tm_arrow_7fe3e7847982dd1674bac902db1b25d6 Tm_type) :named kinding_Tm_arrow_7fe3e7847982dd1674bac902db1b25d6))
(assert (! (forall ((@x0py691 Term)) (! (HasType (Tm_arrow_08bfe555982713e1ba6b9cc3db1f9942 @x0py691) Tm_type) :pattern ((HasType (Tm_arrow_08bfe555982713e1ba6b9cc3db1f9942 @x0py691) Tm_type)) )) :named kinding_Tm_arrow_08bfe555982713e1ba6b9cc3db1f9942))
(assert (! (HasType Tm_arrow_9a2d52aef28944ddfbe3d4af8c624d0b Tm_type) :named kinding_Tm_arrow_9a2d52aef28944ddfbe3d4af8c624d0b))
(assert (! (HasType Tm_arrow_9ac1fc4819cbc364e77988b8605dfbd2 Tm_type) :named kinding_Tm_arrow_9ac1fc4819cbc364e77988b8605dfbd2))
(assert (! (HasType Tm_arrow_9c915ca115c32a0e42eafce253bfd2cd Tm_type) :named kinding_Tm_arrow_9c915ca115c32a0e42eafce253bfd2cd))
(assert (! (forall ((@x0py692 Term)(@x1py836 Term)) (! (HasType (Tm_arrow_9cb3c953faf527c316d427b2ce8bd81b @x0py692 @x1py836) Tm_type) :pattern ((HasType (Tm_arrow_9cb3c953faf527c316d427b2ce8bd81b @x0py692 @x1py836) Tm_type)) )) :named kinding_Tm_arrow_9cb3c953faf527c316d427b2ce8bd81b))
(assert (! (forall ((@x0py693 Term)) (! (HasType (Tm_arrow_9d7b0e2d115bb41f98da64d5384f7531 @x0py693) Tm_type) :pattern ((HasType (Tm_arrow_9d7b0e2d115bb41f98da64d5384f7531 @x0py693) Tm_type)) )) :named kinding_Tm_arrow_9d7b0e2d115bb41f98da64d5384f7531))
(assert (! (forall ((@x0py694 Term)) (! (HasType (Tm_arrow_9eaf2ac78d771b56d59474a450ebd43c @x0py694) Tm_type) :pattern ((HasType (Tm_arrow_9eaf2ac78d771b56d59474a450ebd43c @x0py694) Tm_type)) )) :named kinding_Tm_arrow_9eaf2ac78d771b56d59474a450ebd43c))
(assert (! (HasType Tm_arrow_9f8b5ab8f80ced9cdf6afea35d31efae Tm_type) :named kinding_Tm_arrow_9f8b5ab8f80ced9cdf6afea35d31efae))
(assert (! (HasType Tm_arrow_13dd269756cb773b57b515955a3c167c Tm_type) :named kinding_Tm_arrow_13dd269756cb773b57b515955a3c167c))
(assert (! (HasType Tm_arrow_14bcecce05a6e15aa540694546ee26ed Tm_type) :named kinding_Tm_arrow_14bcecce05a6e15aa540694546ee26ed))
(assert (! (HasType Tm_arrow_15e10e26df1554e12524dd8fbe3e2f20 Tm_type) :named kinding_Tm_arrow_15e10e26df1554e12524dd8fbe3e2f20))
(assert (! (forall ((@x0py695 Term)) (! (HasType (Tm_arrow_17a09828089dfad9c34f612c63238178 @x0py695) Tm_type) :pattern ((HasType (Tm_arrow_17a09828089dfad9c34f612c63238178 @x0py695) Tm_type)) )) :named kinding_Tm_arrow_17a09828089dfad9c34f612c63238178))
(assert (! (forall ((@x0py696 Term)) (! (HasType (Tm_arrow_21a7a3166e0683e2dfa5d2815e88da4a @x0py696) Tm_type) :pattern ((HasType (Tm_arrow_21a7a3166e0683e2dfa5d2815e88da4a @x0py696) Tm_type)) )) :named kinding_Tm_arrow_21a7a3166e0683e2dfa5d2815e88da4a))
(assert (! (forall ((@x0py697 Term)(@x1py837 Term)(@x2py621 Term)) (! (HasType (Tm_arrow_24dbc58008173456430189ae3ecf9a5f @x0py697 @x1py837 @x2py621) Tm_type) :pattern ((HasType (Tm_arrow_24dbc58008173456430189ae3ecf9a5f @x0py697 @x1py837 @x2py621) Tm_type)) )) :named kinding_Tm_arrow_24dbc58008173456430189ae3ecf9a5f))
(assert (! (forall ((@x0py698 Term)) (! (HasType (Tm_arrow_25c72f362ef3d8a23658a89597e3665d @x0py698) Tm_type) :pattern ((HasType (Tm_arrow_25c72f362ef3d8a23658a89597e3665d @x0py698) Tm_type)) )) :named kinding_Tm_arrow_25c72f362ef3d8a23658a89597e3665d))
(assert (! (forall ((@x0py699 Term)) (! (HasType (Tm_arrow_28bfbd2790e868cd7c317313e9ee5c1a @x0py699) Tm_type) :pattern ((HasType (Tm_arrow_28bfbd2790e868cd7c317313e9ee5c1a @x0py699) Tm_type)) )) :named kinding_Tm_arrow_28bfbd2790e868cd7c317313e9ee5c1a))
(assert (! (HasType Tm_arrow_33c5389e8c042e819d87a774e0987a42 Tm_type) :named kinding_Tm_arrow_33c5389e8c042e819d87a774e0987a42))
(assert (! (HasType Tm_arrow_34d4137f6994a8c7bcc0b38f6ac7779f Tm_type) :named kinding_Tm_arrow_34d4137f6994a8c7bcc0b38f6ac7779f))
(assert (! (forall ((@x0py700 Term)) (! (HasType (Tm_arrow_37a65a1a1bca77204cc44fddae45a654 @x0py700) Tm_type) :pattern ((HasType (Tm_arrow_37a65a1a1bca77204cc44fddae45a654 @x0py700) Tm_type)) )) :named kinding_Tm_arrow_37a65a1a1bca77204cc44fddae45a654))
(assert (! (forall ((@x0py701 Term)(@x1py838 Term)) (! (HasType (Tm_arrow_39ad8232ffc69b341ef9ad0212b74d41 @x0py701 @x1py838) Tm_type) :pattern ((HasType (Tm_arrow_39ad8232ffc69b341ef9ad0212b74d41 @x0py701 @x1py838) Tm_type)) )) :named kinding_Tm_arrow_39ad8232ffc69b341ef9ad0212b74d41))
(assert (! (forall ((@x0py702 Term)) (! (HasType (Tm_arrow_44faff5d8543c30ad9bf2eeaf1b3abcf @x0py702) Tm_type) :pattern ((HasType (Tm_arrow_44faff5d8543c30ad9bf2eeaf1b3abcf @x0py702) Tm_type)) )) :named kinding_Tm_arrow_44faff5d8543c30ad9bf2eeaf1b3abcf))
(assert (! (HasType Tm_arrow_45ca9c2b9710ead839b1f3bf7ef7a305 Tm_type) :named kinding_Tm_arrow_45ca9c2b9710ead839b1f3bf7ef7a305))
(assert (! (forall ((@x0py703 Term)) (! (HasType (Tm_arrow_49e61e769c9e3a0a679cbd25d6e21a53 @x0py703) Tm_type) :pattern ((HasType (Tm_arrow_49e61e769c9e3a0a679cbd25d6e21a53 @x0py703) Tm_type)) )) :named kinding_Tm_arrow_49e61e769c9e3a0a679cbd25d6e21a53))
(assert (! (forall ((@x0py704 Term)) (! (HasType (Tm_arrow_50d480c53f6a4b67c098ecbee395c271 @x0py704) Tm_type) :pattern ((HasType (Tm_arrow_50d480c53f6a4b67c098ecbee395c271 @x0py704) Tm_type)) )) :named kinding_Tm_arrow_50d480c53f6a4b67c098ecbee395c271))
(assert (! (forall ((@x0py705 Term)) (! (HasType (Tm_arrow_51b345975888169ae4f69613c826965e @x0py705) Tm_type) :pattern ((HasType (Tm_arrow_51b345975888169ae4f69613c826965e @x0py705) Tm_type)) )) :named kinding_Tm_arrow_51b345975888169ae4f69613c826965e))
(assert (! (forall ((@x0py706 Term)(@x1py839 Term)) (! (HasType (Tm_arrow_52c7e04c1aef70d52ef99d2cc9753aed @x0py706 @x1py839) Tm_type) :pattern ((HasType (Tm_arrow_52c7e04c1aef70d52ef99d2cc9753aed @x0py706 @x1py839) Tm_type)) )) :named kinding_Tm_arrow_52c7e04c1aef70d52ef99d2cc9753aed))
(assert (! (forall ((@x0py707 Term)(@x1py840 Term)) (! (HasType (Tm_arrow_52d29796e7fa32d5b27962b2b725e507 @x0py707 @x1py840) Tm_type) :pattern ((HasType (Tm_arrow_52d29796e7fa32d5b27962b2b725e507 @x0py707 @x1py840) Tm_type)) )) :named kinding_Tm_arrow_52d29796e7fa32d5b27962b2b725e507))
(assert (! (forall ((@x0py708 Term)(@x1py841 Term)) (! (HasType (Tm_arrow_57c992be3fa76720bf1a10ffa047db3d @x0py708 @x1py841) Tm_type) :pattern ((HasType (Tm_arrow_57c992be3fa76720bf1a10ffa047db3d @x0py708 @x1py841) Tm_type)) )) :named kinding_Tm_arrow_57c992be3fa76720bf1a10ffa047db3d))
(assert (! (HasType Tm_arrow_57fa2a22c6acb92aec36a98d388a288a Tm_type) :named kinding_Tm_arrow_57fa2a22c6acb92aec36a98d388a288a))
(assert (! (HasType Tm_arrow_66a0d53ccf00bc028aa22d526865c801 Tm_type) :named kinding_Tm_arrow_66a0d53ccf00bc028aa22d526865c801))
(assert (! (forall ((@x0py709 Term)) (! (HasType (Tm_arrow_070c89d0419ca0b80e0da94940c40fa3 @x0py709) Tm_type) :pattern ((HasType (Tm_arrow_070c89d0419ca0b80e0da94940c40fa3 @x0py709) Tm_type)) )) :named kinding_Tm_arrow_070c89d0419ca0b80e0da94940c40fa3))
(assert (! (forall ((@x0py710 Term)) (! (HasType (Tm_arrow_071cdac364befd9b3a1ef15c982380ca @x0py710) Tm_type) :pattern ((HasType (Tm_arrow_071cdac364befd9b3a1ef15c982380ca @x0py710) Tm_type)) )) :named kinding_Tm_arrow_071cdac364befd9b3a1ef15c982380ca))
(assert (! (forall ((@x0py711 Term)) (! (HasType (Tm_arrow_76a60dab4e3b3182a3b4dae5a57cfb2d @x0py711) Tm_type) :pattern ((HasType (Tm_arrow_76a60dab4e3b3182a3b4dae5a57cfb2d @x0py711) Tm_type)) )) :named kinding_Tm_arrow_76a60dab4e3b3182a3b4dae5a57cfb2d))
(assert (! (forall ((@x0py712 Term)) (! (HasType (Tm_arrow_79f007373109c2c6539212e679be2f2f @x0py712) Tm_type) :pattern ((HasType (Tm_arrow_79f007373109c2c6539212e679be2f2f @x0py712) Tm_type)) )) :named kinding_Tm_arrow_79f007373109c2c6539212e679be2f2f))
(assert (! (forall ((@x0py713 Term)) (! (HasType (Tm_arrow_81b181f0a50be9c359f1e3afcab46996 @x0py713) Tm_type) :pattern ((HasType (Tm_arrow_81b181f0a50be9c359f1e3afcab46996 @x0py713) Tm_type)) )) :named kinding_Tm_arrow_81b181f0a50be9c359f1e3afcab46996))
(assert (! (forall ((@x0py714 Term)) (! (HasType (Tm_arrow_82af1f1c7453b4c313f49c7e70e41650 @x0py714) Tm_type) :pattern ((HasType (Tm_arrow_82af1f1c7453b4c313f49c7e70e41650 @x0py714) Tm_type)) )) :named kinding_Tm_arrow_82af1f1c7453b4c313f49c7e70e41650))
(assert (! (HasType Tm_arrow_85e89735c9356e795787b0e5b5a2f363 Tm_type) :named kinding_Tm_arrow_85e89735c9356e795787b0e5b5a2f363))
(assert (! (forall ((@x0py715 Term)(@x1py842 Term)) (! (HasType (Tm_arrow_87ef52d5a8e7306848436909b0c69460 @x0py715 @x1py842) Tm_type) :pattern ((HasType (Tm_arrow_87ef52d5a8e7306848436909b0c69460 @x0py715 @x1py842) Tm_type)) )) :named kinding_Tm_arrow_87ef52d5a8e7306848436909b0c69460))
(assert (! (forall ((@x0py716 Term)(@x1py843 Term)) (! (HasType (Tm_arrow_95c0b403ba19b1a7c1f8c73440744c07 @x0py716 @x1py843) Tm_type) :pattern ((HasType (Tm_arrow_95c0b403ba19b1a7c1f8c73440744c07 @x0py716 @x1py843) Tm_type)) )) :named kinding_Tm_arrow_95c0b403ba19b1a7c1f8c73440744c07))
(assert (! (forall ((@x0py717 Term)) (! (HasType (Tm_arrow_186fc0e29ebb27a200ef672a89551282 @x0py717) Tm_type) :pattern ((HasType (Tm_arrow_186fc0e29ebb27a200ef672a89551282 @x0py717) Tm_type)) )) :named kinding_Tm_arrow_186fc0e29ebb27a200ef672a89551282))
(assert (! (forall ((@x0py718 Term)) (! (HasType (Tm_arrow_244b5b2a1fc882c67ebcb032ace08d85 @x0py718) Tm_type) :pattern ((HasType (Tm_arrow_244b5b2a1fc882c67ebcb032ace08d85 @x0py718) Tm_type)) )) :named kinding_Tm_arrow_244b5b2a1fc882c67ebcb032ace08d85))
(assert (! (HasType Tm_arrow_257be5ee7da9f477702a7d2ee9bef0c9 Tm_type) :named kinding_Tm_arrow_257be5ee7da9f477702a7d2ee9bef0c9))
(assert (! (HasType Tm_arrow_301a720cbb1c5487adfd2a0b64c67b7e Tm_type) :named kinding_Tm_arrow_301a720cbb1c5487adfd2a0b64c67b7e))
(assert (! (forall ((@x0py719 Term)) (! (HasType (Tm_arrow_302ec1d59a0c160d8b944503f142e361 @x0py719) Tm_type) :pattern ((HasType (Tm_arrow_302ec1d59a0c160d8b944503f142e361 @x0py719) Tm_type)) )) :named kinding_Tm_arrow_302ec1d59a0c160d8b944503f142e361))
(assert (! (HasType Tm_arrow_370eef0be624c130308f9f3e7fdda8fb Tm_type) :named kinding_Tm_arrow_370eef0be624c130308f9f3e7fdda8fb))
(assert (! (forall ((@x0py720 Term)) (! (HasType (Tm_arrow_414ca6c3d38bb3e0864e4a9d0cd19766 @x0py720) Tm_type) :pattern ((HasType (Tm_arrow_414ca6c3d38bb3e0864e4a9d0cd19766 @x0py720) Tm_type)) )) :named kinding_Tm_arrow_414ca6c3d38bb3e0864e4a9d0cd19766))
(assert (! (forall ((@x0py721 Term)) (! (HasType (Tm_arrow_433e42e3116eeb237f1030231a24382d @x0py721) Tm_type) :pattern ((HasType (Tm_arrow_433e42e3116eeb237f1030231a24382d @x0py721) Tm_type)) )) :named kinding_Tm_arrow_433e42e3116eeb237f1030231a24382d))
(assert (! (forall ((@x0py722 Term)) (! (HasType (Tm_arrow_471e47868c0f16aa720099399b21873e @x0py722) Tm_type) :pattern ((HasType (Tm_arrow_471e47868c0f16aa720099399b21873e @x0py722) Tm_type)) )) :named kinding_Tm_arrow_471e47868c0f16aa720099399b21873e))
(assert (! (HasType Tm_arrow_530e081bbbd964966a402b7e14fb9d69 Tm_type) :named kinding_Tm_arrow_530e081bbbd964966a402b7e14fb9d69))
(assert (! (forall ((@x0py723 Term)) (! (HasType (Tm_arrow_537c5575a5fd1154f5e2f17311f50ca8 @x0py723) Tm_type) :pattern ((HasType (Tm_arrow_537c5575a5fd1154f5e2f17311f50ca8 @x0py723) Tm_type)) )) :named kinding_Tm_arrow_537c5575a5fd1154f5e2f17311f50ca8))
(assert (! (forall ((@x0py724 Term)) (! (HasType (Tm_arrow_581a99aa4b3c2c64b4b6501081582473 @x0py724) Tm_type) :pattern ((HasType (Tm_arrow_581a99aa4b3c2c64b4b6501081582473 @x0py724) Tm_type)) )) :named kinding_Tm_arrow_581a99aa4b3c2c64b4b6501081582473))
(assert (! (forall ((@x0py725 Term)(@x1py844 Term)) (! (HasType (Tm_arrow_614c7b5886a6e5b119a37c35c7e4bd59 @x0py725 @x1py844) Tm_type) :pattern ((HasType (Tm_arrow_614c7b5886a6e5b119a37c35c7e4bd59 @x0py725 @x1py844) Tm_type)) )) :named kinding_Tm_arrow_614c7b5886a6e5b119a37c35c7e4bd59))
(assert (! (forall ((@x0py726 Term)(@x1py845 Term)(@x2py622 Term)) (! (HasType (Tm_arrow_637c9767c7a2c264e0a7f2bd68427abf @x0py726 @x1py845 @x2py622) Tm_type) :pattern ((HasType (Tm_arrow_637c9767c7a2c264e0a7f2bd68427abf @x0py726 @x1py845 @x2py622) Tm_type)) )) :named kinding_Tm_arrow_637c9767c7a2c264e0a7f2bd68427abf))
(assert (! (forall ((@x0py727 Term)) (! (HasType (Tm_arrow_641a228fe9177bb850d1efb25c4ca0d9 @x0py727) Tm_type) :pattern ((HasType (Tm_arrow_641a228fe9177bb850d1efb25c4ca0d9 @x0py727) Tm_type)) )) :named kinding_Tm_arrow_641a228fe9177bb850d1efb25c4ca0d9))
(assert (! (forall ((@x0py728 Term)) (! (HasType (Tm_arrow_739df426cfefbd9297407e8f408e091d @x0py728) Tm_type) :pattern ((HasType (Tm_arrow_739df426cfefbd9297407e8f408e091d @x0py728) Tm_type)) )) :named kinding_Tm_arrow_739df426cfefbd9297407e8f408e091d))
(assert (! (forall ((@x0py729 Term)) (! (HasType (Tm_arrow_756e7b0ac20279dfcded24e5a99a27b8 @x0py729) Tm_type) :pattern ((HasType (Tm_arrow_756e7b0ac20279dfcded24e5a99a27b8 @x0py729) Tm_type)) )) :named kinding_Tm_arrow_756e7b0ac20279dfcded24e5a99a27b8))
(assert (! (HasType Tm_arrow_879fb9ac6887317b2253fa415d6e297f Tm_type) :named kinding_Tm_arrow_879fb9ac6887317b2253fa415d6e297f))
(assert (! (HasType Tm_arrow_894aed5f2f01f9fc4bb62bf7e2d70f35 Tm_type) :named kinding_Tm_arrow_894aed5f2f01f9fc4bb62bf7e2d70f35))
(assert (! (HasType Tm_arrow_959ecc63baf89362269f0a0ccd5668b0 Tm_type) :named kinding_Tm_arrow_959ecc63baf89362269f0a0ccd5668b0))
(assert (! (HasType Tm_arrow_3209a7a409ec605c6410051291219438 Tm_type) :named kinding_Tm_arrow_3209a7a409ec605c6410051291219438))
(assert (! (HasType Tm_arrow_3892eda38ed5a9b6d9aa7ad2635088fc Tm_type) :named kinding_Tm_arrow_3892eda38ed5a9b6d9aa7ad2635088fc))
(assert (! (HasType Tm_arrow_4902efa5488190c456656843f7646562 Tm_type) :named kinding_Tm_arrow_4902efa5488190c456656843f7646562))
(assert (! (forall ((@x0py730 Term)) (! (HasType (Tm_arrow_5002e807b09214fd2f4ddb0ecd7cc6a9 @x0py730) Tm_type) :pattern ((HasType (Tm_arrow_5002e807b09214fd2f4ddb0ecd7cc6a9 @x0py730) Tm_type)) )) :named kinding_Tm_arrow_5002e807b09214fd2f4ddb0ecd7cc6a9))
(assert (! (forall ((@x0py731 Term)) (! (HasType (Tm_arrow_5221ddbf8295a5d706d58e293ca3b4fe @x0py731) Tm_type) :pattern ((HasType (Tm_arrow_5221ddbf8295a5d706d58e293ca3b4fe @x0py731) Tm_type)) )) :named kinding_Tm_arrow_5221ddbf8295a5d706d58e293ca3b4fe))
(assert (! (HasType Tm_arrow_6426d9c2c96ff0881bdcece54fff4277 Tm_type) :named kinding_Tm_arrow_6426d9c2c96ff0881bdcece54fff4277))
(assert (! (HasType Tm_arrow_7493b9132d0860b9d4513189a97e9cc2 Tm_type) :named kinding_Tm_arrow_7493b9132d0860b9d4513189a97e9cc2))
(assert (! (HasType Tm_arrow_08953d1bb2ff5a2bd59d780036c9167c Tm_type) :named kinding_Tm_arrow_08953d1bb2ff5a2bd59d780036c9167c))
(assert (! (forall ((@x0py732 Term)(@x1py846 Term)(@x2py623 Term)) (! (HasType (Tm_arrow_12929d79484018a159cc54c10d62f794 @x0py732 @x1py846 @x2py623) Tm_type) :pattern ((HasType (Tm_arrow_12929d79484018a159cc54c10d62f794 @x0py732 @x1py846 @x2py623) Tm_type)) )) :named kinding_Tm_arrow_12929d79484018a159cc54c10d62f794))
(assert (! (HasType Tm_arrow_30967c52768a603d18eb4835e5ba8f79 Tm_type) :named kinding_Tm_arrow_30967c52768a603d18eb4835e5ba8f79))
(assert (! (HasType Tm_arrow_51228bc6fe187c605830950e4b63d461 Tm_type) :named kinding_Tm_arrow_51228bc6fe187c605830950e4b63d461))
(assert (! (HasType Tm_arrow_051405f28864bdc9643ed01eb3b92100 Tm_type) :named kinding_Tm_arrow_051405f28864bdc9643ed01eb3b92100))
(assert (! (forall ((@x0py733 Term)) (! (HasType (Tm_arrow_53506eda6d12f67a8e4b3ea75d309e23 @x0py733) Tm_type) :pattern ((HasType (Tm_arrow_53506eda6d12f67a8e4b3ea75d309e23 @x0py733) Tm_type)) )) :named kinding_Tm_arrow_53506eda6d12f67a8e4b3ea75d309e23))
(assert (! (forall ((@x0py734 Term)) (! (HasType (Tm_arrow_59435ca7efae8c5a13162daf50ca7594 @x0py734) Tm_type) :pattern ((HasType (Tm_arrow_59435ca7efae8c5a13162daf50ca7594 @x0py734) Tm_type)) )) :named kinding_Tm_arrow_59435ca7efae8c5a13162daf50ca7594))
(assert (! (HasType Tm_arrow_59613b37f4c818dae9a7b082d5155f29 Tm_type) :named kinding_Tm_arrow_59613b37f4c818dae9a7b082d5155f29))
(assert (! (forall ((@x0py735 Term)) (! (HasType (Tm_arrow_059768e110c940ea8bff9492771ddcc8 @x0py735) Tm_type) :pattern ((HasType (Tm_arrow_059768e110c940ea8bff9492771ddcc8 @x0py735) Tm_type)) )) :named kinding_Tm_arrow_059768e110c940ea8bff9492771ddcc8))
(assert (! (HasType Tm_arrow_61613ad0fe4e0bf49515f58291a6d65c Tm_type) :named kinding_Tm_arrow_61613ad0fe4e0bf49515f58291a6d65c))
(assert (! (forall ((@x0py736 Term)) (! (HasType (Tm_arrow_63177eca1c58ba394d666028d123748d @x0py736) Tm_type) :pattern ((HasType (Tm_arrow_63177eca1c58ba394d666028d123748d @x0py736) Tm_type)) )) :named kinding_Tm_arrow_63177eca1c58ba394d666028d123748d))
(assert (! (HasType Tm_arrow_88445f768cf4024bacb21baa68bdff2b Tm_type) :named kinding_Tm_arrow_88445f768cf4024bacb21baa68bdff2b))
(assert (! (HasType Tm_arrow_88772e9c1eff3cee09de1db3fc8087ca Tm_type) :named kinding_Tm_arrow_88772e9c1eff3cee09de1db3fc8087ca))
(assert (! (HasType Tm_arrow_094933c54ea2002054dad555e01358ba Tm_type) :named kinding_Tm_arrow_094933c54ea2002054dad555e01358ba))
(assert (! (HasType Tm_arrow_205942e024d5471c930d18c2ca3ae24b Tm_type) :named kinding_Tm_arrow_205942e024d5471c930d18c2ca3ae24b))
(assert (! (forall ((@x0py737 Term)) (! (HasType (Tm_arrow_425389aaf0306ac889308852f2d13f76 @x0py737) Tm_type) :pattern ((HasType (Tm_arrow_425389aaf0306ac889308852f2d13f76 @x0py737) Tm_type)) )) :named kinding_Tm_arrow_425389aaf0306ac889308852f2d13f76))
(assert (! (forall ((@x0py738 Term)) (! (HasType (Tm_arrow_646607d9b79b27cb700948778ab8dc33 @x0py738) Tm_type) :pattern ((HasType (Tm_arrow_646607d9b79b27cb700948778ab8dc33 @x0py738) Tm_type)) )) :named kinding_Tm_arrow_646607d9b79b27cb700948778ab8dc33))
(assert (! (forall ((@x0py739 Term)(@x1py847 Term)) (! (HasType (Tm_arrow_1114487a196323b3ca7d5d0b38969957 @x0py739 @x1py847) Tm_type) :pattern ((HasType (Tm_arrow_1114487a196323b3ca7d5d0b38969957 @x0py739 @x1py847) Tm_type)) )) :named kinding_Tm_arrow_1114487a196323b3ca7d5d0b38969957))
(assert (! (forall ((@x0py740 Term)) (! (HasType (Tm_arrow_8024419d86cafa6a8f5a740b84a7c291 @x0py740) Tm_type) :pattern ((HasType (Tm_arrow_8024419d86cafa6a8f5a740b84a7c291 @x0py740) Tm_type)) )) :named kinding_Tm_arrow_8024419d86cafa6a8f5a740b84a7c291))
(assert (! (forall ((@x0py741 Term)(@x1py848 Term)) (! (HasType (Tm_arrow_14950698eb45c81a0e8055b3844caf01 @x0py741 @x1py848) Tm_type) :pattern ((HasType (Tm_arrow_14950698eb45c81a0e8055b3844caf01 @x0py741 @x1py848) Tm_type)) )) :named kinding_Tm_arrow_14950698eb45c81a0e8055b3844caf01))
(assert (! (forall ((@x0py742 Term)) (! (HasType (Tm_arrow_21504714b743c269357a5ba76f64b480 @x0py742) Tm_type) :pattern ((HasType (Tm_arrow_21504714b743c269357a5ba76f64b480 @x0py742) Tm_type)) )) :named kinding_Tm_arrow_21504714b743c269357a5ba76f64b480))
(assert (! (HasType Tm_arrow_21647838ffa803cb1cbaf82c99e03f01 Tm_type) :named kinding_Tm_arrow_21647838ffa803cb1cbaf82c99e03f01))
(assert (! (forall ((@x0py743 Term)(@x1py849 Term)) (! (HasType (Tm_arrow_37267229c41a09d7df20584f1caf324f @x0py743 @x1py849) Tm_type) :pattern ((HasType (Tm_arrow_37267229c41a09d7df20584f1caf324f @x0py743 @x1py849) Tm_type)) )) :named kinding_Tm_arrow_37267229c41a09d7df20584f1caf324f))
(assert (! (HasType Tm_arrow_627359304a35057805507fd05f62a750 Tm_type) :named kinding_Tm_arrow_627359304a35057805507fd05f62a750))
(assert (! (HasType Tm_arrow_642316967e62d4894b4c5052196039ab Tm_type) :named kinding_Tm_arrow_642316967e62d4894b4c5052196039ab))
(assert (! (HasType Tm_arrow_300677279975362e42b142f0238e1ce1 Tm_type) :named kinding_Tm_arrow_300677279975362e42b142f0238e1ce1))
(assert (! (HasType Tm_arrow_a1a8754ef05983b108c166cca1c4e63a Tm_type) :named kinding_Tm_arrow_a1a8754ef05983b108c166cca1c4e63a))
(assert (! (forall ((@x0py744 Term)) (! (HasType (Tm_arrow_a3b523cfd66a616c0e641efdb75e9e3e @x0py744) Tm_type) :pattern ((HasType (Tm_arrow_a3b523cfd66a616c0e641efdb75e9e3e @x0py744) Tm_type)) )) :named kinding_Tm_arrow_a3b523cfd66a616c0e641efdb75e9e3e))
(assert (! (forall ((@x0py745 Term)) (! (HasType (Tm_arrow_a7b615889edcbdfadf24ad49f4c2628e @x0py745) Tm_type) :pattern ((HasType (Tm_arrow_a7b615889edcbdfadf24ad49f4c2628e @x0py745) Tm_type)) )) :named kinding_Tm_arrow_a7b615889edcbdfadf24ad49f4c2628e))
(assert (! (forall ((@x0py746 Term)) (! (HasType (Tm_arrow_a8bd5744f1e631257a4264db50bf5a7c @x0py746) Tm_type) :pattern ((HasType (Tm_arrow_a8bd5744f1e631257a4264db50bf5a7c @x0py746) Tm_type)) )) :named kinding_Tm_arrow_a8bd5744f1e631257a4264db50bf5a7c))
(assert (! (HasType Tm_arrow_a25fd62df6305ca0d5e962cb259a6497 Tm_type) :named kinding_Tm_arrow_a25fd62df6305ca0d5e962cb259a6497))
(assert (! (forall ((@x0py747 Term)(@x1py850 Term)) (! (HasType (Tm_arrow_a26b6f0ab7c6505137c6de4ce0011041 @x0py747 @x1py850) Tm_type) :pattern ((HasType (Tm_arrow_a26b6f0ab7c6505137c6de4ce0011041 @x0py747 @x1py850) Tm_type)) )) :named kinding_Tm_arrow_a26b6f0ab7c6505137c6de4ce0011041))
(assert (! (forall ((@x0py748 Term)) (! (HasType (Tm_arrow_a85c3802d57513fa8b84a44441b2fe6a @x0py748) Tm_type) :pattern ((HasType (Tm_arrow_a85c3802d57513fa8b84a44441b2fe6a @x0py748) Tm_type)) )) :named kinding_Tm_arrow_a85c3802d57513fa8b84a44441b2fe6a))
(assert (! (HasType Tm_arrow_a704b31706c9f8227ffcec83d74a9b31 Tm_type) :named kinding_Tm_arrow_a704b31706c9f8227ffcec83d74a9b31))
(assert (! (HasType Tm_arrow_a984cc683b69e3e0d41bb0853d6a1664 Tm_type) :named kinding_Tm_arrow_a984cc683b69e3e0d41bb0853d6a1664))
(assert (! (HasType Tm_arrow_aa2ac0c2eefec3ef36a52a5c1e92dd6b Tm_type) :named kinding_Tm_arrow_aa2ac0c2eefec3ef36a52a5c1e92dd6b))
(assert (! (forall ((@x0py749 Term)) (! (HasType (Tm_arrow_aa928d5fea25781a172e9e551de2bee3 @x0py749) Tm_type) :pattern ((HasType (Tm_arrow_aa928d5fea25781a172e9e551de2bee3 @x0py749) Tm_type)) )) :named kinding_Tm_arrow_aa928d5fea25781a172e9e551de2bee3))
(assert (! (forall ((@x0py750 Term)) (! (HasType (Tm_arrow_ad2a5a45548b5666753ded1bcb23ab10 @x0py750) Tm_type) :pattern ((HasType (Tm_arrow_ad2a5a45548b5666753ded1bcb23ab10 @x0py750) Tm_type)) )) :named kinding_Tm_arrow_ad2a5a45548b5666753ded1bcb23ab10))
(assert (! (HasType Tm_arrow_b0a698cf4739f4ff0d04a8f64ce9f32f Tm_type) :named kinding_Tm_arrow_b0a698cf4739f4ff0d04a8f64ce9f32f))
(assert (! (forall ((@x0py751 Term)) (! (HasType (Tm_arrow_b4cc8204c08bed808cee22615b49bc5f @x0py751) Tm_type) :pattern ((HasType (Tm_arrow_b4cc8204c08bed808cee22615b49bc5f @x0py751) Tm_type)) )) :named kinding_Tm_arrow_b4cc8204c08bed808cee22615b49bc5f))
(assert (! (HasType Tm_arrow_b6d5b453dd814b79a1d29a5f85b3161f Tm_type) :named kinding_Tm_arrow_b6d5b453dd814b79a1d29a5f85b3161f))
(assert (! (HasType Tm_arrow_b9e392cd340cf43078e3b599d9c5d1b3 Tm_type) :named kinding_Tm_arrow_b9e392cd340cf43078e3b599d9c5d1b3))
(assert (! (forall ((@x0py752 Term)(@x1py851 Term)(@x2py624 Term)(@x3py441 Term)(@x4py316 Term)) (! (HasType (Tm_arrow_b876badf58234251d7cd1ca0d2659f12 @x0py752 @x1py851 @x2py624 @x3py441 @x4py316) Tm_type) :pattern ((HasType (Tm_arrow_b876badf58234251d7cd1ca0d2659f12 @x0py752 @x1py851 @x2py624 @x3py441 @x4py316) Tm_type)) )) :named kinding_Tm_arrow_b876badf58234251d7cd1ca0d2659f12))
(assert (! (forall ((@x0py753 Term)) (! (HasType (Tm_arrow_bc1e750d04f01d381d7c63e81b8697d1 @x0py753) Tm_type) :pattern ((HasType (Tm_arrow_bc1e750d04f01d381d7c63e81b8697d1 @x0py753) Tm_type)) )) :named kinding_Tm_arrow_bc1e750d04f01d381d7c63e81b8697d1))
(assert (! (forall ((@x0py754 Term)) (! (HasType (Tm_arrow_bc73fd7342ebe29d8df19539096373ef @x0py754) Tm_type) :pattern ((HasType (Tm_arrow_bc73fd7342ebe29d8df19539096373ef @x0py754) Tm_type)) )) :named kinding_Tm_arrow_bc73fd7342ebe29d8df19539096373ef))
(assert (! (HasType Tm_arrow_bc432a638e8ded95e6543c5ef7d6cefa Tm_type) :named kinding_Tm_arrow_bc432a638e8ded95e6543c5ef7d6cefa))
(assert (! (HasType Tm_arrow_bdff7ac4f38fee2d6889d7b58ec10beb Tm_type) :named kinding_Tm_arrow_bdff7ac4f38fee2d6889d7b58ec10beb))
(assert (! (HasType Tm_arrow_bec8a4f6afbb1e18e2d9aca8cce42b29 Tm_type) :named kinding_Tm_arrow_bec8a4f6afbb1e18e2d9aca8cce42b29))
(assert (! (HasType Tm_arrow_bf84b86e4714dba88d5fa227c56fabbb Tm_type) :named kinding_Tm_arrow_bf84b86e4714dba88d5fa227c56fabbb))
(assert (! (HasType Tm_arrow_c3d46b8ae03d5e5761b37a519c1896ea Tm_type) :named kinding_Tm_arrow_c3d46b8ae03d5e5761b37a519c1896ea))
(assert (! (HasType Tm_arrow_c4e77c85318828d15167451b16a74f86 Tm_type) :named kinding_Tm_arrow_c4e77c85318828d15167451b16a74f86))
(assert (! (forall ((@x0py755 Term)) (! (HasType (Tm_arrow_c7a05ebcf00d9d5ea2ad28cd2649cf23 @x0py755) Tm_type) :pattern ((HasType (Tm_arrow_c7a05ebcf00d9d5ea2ad28cd2649cf23 @x0py755) Tm_type)) )) :named kinding_Tm_arrow_c7a05ebcf00d9d5ea2ad28cd2649cf23))
(assert (! (HasType Tm_arrow_c69c7e036a278fd3b0fe0b71a945feca Tm_type) :named kinding_Tm_arrow_c69c7e036a278fd3b0fe0b71a945feca))
(assert (! (forall ((@x0py756 Term)) (! (HasType (Tm_arrow_c89a507d37bce525c784ce4c49ca4e78 @x0py756) Tm_type) :pattern ((HasType (Tm_arrow_c89a507d37bce525c784ce4c49ca4e78 @x0py756) Tm_type)) )) :named kinding_Tm_arrow_c89a507d37bce525c784ce4c49ca4e78))
(assert (! (HasType Tm_arrow_c195f8405ecbc84a46f4e174b8827a84 Tm_type) :named kinding_Tm_arrow_c195f8405ecbc84a46f4e174b8827a84))
(assert (! (HasType Tm_arrow_c314ab62524b1a2d1997954ac4c1ae99 Tm_type) :named kinding_Tm_arrow_c314ab62524b1a2d1997954ac4c1ae99))
(assert (! (HasType Tm_arrow_c550a8e282abd0593a028dd71c851c33 Tm_type) :named kinding_Tm_arrow_c550a8e282abd0593a028dd71c851c33))
(assert (! (HasType Tm_arrow_caf985f824d0c8c31cc1333a92d97b40 Tm_type) :named kinding_Tm_arrow_caf985f824d0c8c31cc1333a92d97b40))
(assert (! (HasType Tm_arrow_ccf8afc309a68a850ac71365261b9fb7 Tm_type) :named kinding_Tm_arrow_ccf8afc309a68a850ac71365261b9fb7))
(assert (! (HasType Tm_arrow_cdcc1b95ab3319da21eacff69bb46ef7 Tm_type) :named kinding_Tm_arrow_cdcc1b95ab3319da21eacff69bb46ef7))
(assert (! (HasType Tm_arrow_cfdfdc24b7e1267c05bed07df6aea066 Tm_type) :named kinding_Tm_arrow_cfdfdc24b7e1267c05bed07df6aea066))
(assert (! (forall ((@x0py757 Term)) (! (HasType (Tm_arrow_cff63087848ae2e59f28234902699c0f @x0py757) Tm_type) :pattern ((HasType (Tm_arrow_cff63087848ae2e59f28234902699c0f @x0py757) Tm_type)) )) :named kinding_Tm_arrow_cff63087848ae2e59f28234902699c0f))
(assert (! (forall ((@x0py758 Term)) (! (HasType (Tm_arrow_d1e52eaae1c31c37e88414cfa45e35d7 @x0py758) Tm_type) :pattern ((HasType (Tm_arrow_d1e52eaae1c31c37e88414cfa45e35d7 @x0py758) Tm_type)) )) :named kinding_Tm_arrow_d1e52eaae1c31c37e88414cfa45e35d7))
(assert (! (HasType Tm_arrow_d3ed25c81ffc65c9f57b03935726ef00 Tm_type) :named kinding_Tm_arrow_d3ed25c81ffc65c9f57b03935726ef00))
(assert (! (forall ((@x0py759 Term)(@x1py852 Term)(@x2py625 Term)) (! (HasType (Tm_arrow_d9eac583d9f115ef0dc2cf4de1079b38 @x0py759 @x1py852 @x2py625) Tm_type) :pattern ((HasType (Tm_arrow_d9eac583d9f115ef0dc2cf4de1079b38 @x0py759 @x1py852 @x2py625) Tm_type)) )) :named kinding_Tm_arrow_d9eac583d9f115ef0dc2cf4de1079b38))
(assert (! (HasType Tm_arrow_d24e3d13d5f3ba68fc4414c96e3c8794 Tm_type) :named kinding_Tm_arrow_d24e3d13d5f3ba68fc4414c96e3c8794))
(assert (! (forall ((@x0py760 Term)(@x1py853 Term)) (! (HasType (Tm_arrow_d73f8dacefc5e4cdc8cdd18970a5ae80 @x0py760 @x1py853) Tm_type) :pattern ((HasType (Tm_arrow_d73f8dacefc5e4cdc8cdd18970a5ae80 @x0py760 @x1py853) Tm_type)) )) :named kinding_Tm_arrow_d73f8dacefc5e4cdc8cdd18970a5ae80))
(assert (! (forall ((@x0py761 Term)(@x1py854 Term)) (! (HasType (Tm_arrow_d794a58e52e51e13e3b9afe660625c54 @x0py761 @x1py854) Tm_type) :pattern ((HasType (Tm_arrow_d794a58e52e51e13e3b9afe660625c54 @x0py761 @x1py854) Tm_type)) )) :named kinding_Tm_arrow_d794a58e52e51e13e3b9afe660625c54))
(assert (! (forall ((@x0py762 Term)) (! (HasType (Tm_arrow_db526519745d691ef343e32a1084673b @x0py762) Tm_type) :pattern ((HasType (Tm_arrow_db526519745d691ef343e32a1084673b @x0py762) Tm_type)) )) :named kinding_Tm_arrow_db526519745d691ef343e32a1084673b))
(assert (! (forall ((@x0py763 Term)(@x1py855 Term)(@x2py626 Term)) (! (HasType (Tm_arrow_dbf39bf049d72c3088e1ed84d246952d @x0py763 @x1py855 @x2py626) Tm_type) :pattern ((HasType (Tm_arrow_dbf39bf049d72c3088e1ed84d246952d @x0py763 @x1py855 @x2py626) Tm_type)) )) :named kinding_Tm_arrow_dbf39bf049d72c3088e1ed84d246952d))
(assert (! (HasType Tm_arrow_dcdffe9de61b4fc93e96c6fef1350cf2 Tm_type) :named kinding_Tm_arrow_dcdffe9de61b4fc93e96c6fef1350cf2))
(assert (! (forall ((@x0py764 Term)) (! (HasType (Tm_arrow_dd2de7e516014096b8b41947307b7781 @x0py764) Tm_type) :pattern ((HasType (Tm_arrow_dd2de7e516014096b8b41947307b7781 @x0py764) Tm_type)) )) :named kinding_Tm_arrow_dd2de7e516014096b8b41947307b7781))
(assert (! (HasType Tm_arrow_df8cdbdef952cf059d2e5d9fe5b8bf02 Tm_type) :named kinding_Tm_arrow_df8cdbdef952cf059d2e5d9fe5b8bf02))
(assert (! (HasType Tm_arrow_e4d7b27ac8277ab0ab77e116a8906fa4 Tm_type) :named kinding_Tm_arrow_e4d7b27ac8277ab0ab77e116a8906fa4))
(assert (! (HasType Tm_arrow_e9f6c89da04213bf160cc257e258081c Tm_type) :named kinding_Tm_arrow_e9f6c89da04213bf160cc257e258081c))
(assert (! (HasType Tm_arrow_e23d661799b310305387f8ba2c10acb1 Tm_type) :named kinding_Tm_arrow_e23d661799b310305387f8ba2c10acb1))
(assert (! (forall ((@x0py765 Term)) (! (HasType (Tm_arrow_e55fd27cdca75961dfd00ca7901ce64a @x0py765) Tm_type) :pattern ((HasType (Tm_arrow_e55fd27cdca75961dfd00ca7901ce64a @x0py765) Tm_type)) )) :named kinding_Tm_arrow_e55fd27cdca75961dfd00ca7901ce64a))
(assert (! (forall ((@x0py766 Term)) (! (HasType (Tm_arrow_e62fd03c6d75c90fe0c21b54135b4ded @x0py766) Tm_type) :pattern ((HasType (Tm_arrow_e62fd03c6d75c90fe0c21b54135b4ded @x0py766) Tm_type)) )) :named kinding_Tm_arrow_e62fd03c6d75c90fe0c21b54135b4ded))
(assert (! (HasType Tm_arrow_e797b13f3527682c5e8e530b8c8c696d Tm_type) :named kinding_Tm_arrow_e797b13f3527682c5e8e530b8c8c696d))
(assert (! (forall ((@x0py767 Term)) (! (HasType (Tm_arrow_e06752ba152f81447b312efcdf8f0e23 @x0py767) Tm_type) :pattern ((HasType (Tm_arrow_e06752ba152f81447b312efcdf8f0e23 @x0py767) Tm_type)) )) :named kinding_Tm_arrow_e06752ba152f81447b312efcdf8f0e23))
(assert (! (forall ((@x0py768 Term)(@x1py856 Term)) (! (HasType (Tm_arrow_e9338c9e176627b4318e37ce7ca5332a @x0py768 @x1py856) Tm_type) :pattern ((HasType (Tm_arrow_e9338c9e176627b4318e37ce7ca5332a @x0py768 @x1py856) Tm_type)) )) :named kinding_Tm_arrow_e9338c9e176627b4318e37ce7ca5332a))
(assert (! (HasType Tm_arrow_ea1d9eb08a7fc2511c09cc8007396ae9 Tm_type) :named kinding_Tm_arrow_ea1d9eb08a7fc2511c09cc8007396ae9))
(assert (! (HasType Tm_arrow_ea874dc954d16eee0f41a749d898407d Tm_type) :named kinding_Tm_arrow_ea874dc954d16eee0f41a749d898407d))
(assert (! (forall ((@x0py769 Term)) (! (HasType (Tm_arrow_eaecbfb0f0c1d2e86edbe9df7d9fa3a5 @x0py769) Tm_type) :pattern ((HasType (Tm_arrow_eaecbfb0f0c1d2e86edbe9df7d9fa3a5 @x0py769) Tm_type)) )) :named kinding_Tm_arrow_eaecbfb0f0c1d2e86edbe9df7d9fa3a5))
(assert (! (HasType Tm_arrow_ec4aa512bc54da67a0356075af124e44 Tm_type) :named kinding_Tm_arrow_ec4aa512bc54da67a0356075af124e44))
(assert (! (forall ((@x0py770 Term)(@x1py857 Term)) (! (HasType (Tm_arrow_efa04d9e9741fb25eada2b1d426efe29 @x0py770 @x1py857) Tm_type) :pattern ((HasType (Tm_arrow_efa04d9e9741fb25eada2b1d426efe29 @x0py770 @x1py857) Tm_type)) )) :named kinding_Tm_arrow_efa04d9e9741fb25eada2b1d426efe29))
(assert (! (HasType Tm_arrow_efdf2741fc5d2cd7ffdf01b992c9e8a9 Tm_type) :named kinding_Tm_arrow_efdf2741fc5d2cd7ffdf01b992c9e8a9))
(assert (! (forall ((@x0py771 Term)) (! (HasType (Tm_arrow_eff36c64f2c347faf7149c68721d618a @x0py771) Tm_type) :pattern ((HasType (Tm_arrow_eff36c64f2c347faf7149c68721d618a @x0py771) Tm_type)) )) :named kinding_Tm_arrow_eff36c64f2c347faf7149c68721d618a))
(assert (! (HasType Tm_arrow_f3a6f55103b1d9f09f2c9d33389125e1 Tm_type) :named kinding_Tm_arrow_f3a6f55103b1d9f09f2c9d33389125e1))
(assert (! (HasType Tm_arrow_f17dd97b1f287869d6a3add69232601b Tm_type) :named kinding_Tm_arrow_f17dd97b1f287869d6a3add69232601b))
(assert (! (forall ((@x0py772 Term)) (! (HasType (Tm_arrow_f33ea54607e6f443deeaa74ebd418449 @x0py772) Tm_type) :pattern ((HasType (Tm_arrow_f33ea54607e6f443deeaa74ebd418449 @x0py772) Tm_type)) )) :named kinding_Tm_arrow_f33ea54607e6f443deeaa74ebd418449))
(assert (! (forall ((@x0py773 Term)) (! (HasType (Tm_arrow_f82c3fb9ac6610efb97620a59b378092 @x0py773) Tm_type) :pattern ((HasType (Tm_arrow_f82c3fb9ac6610efb97620a59b378092 @x0py773) Tm_type)) )) :named kinding_Tm_arrow_f82c3fb9ac6610efb97620a59b378092))
(assert (! (forall ((@x0py774 Term)) (! (HasType (Tm_arrow_f2144e812b1bb22d3fc2a233dbf4e7ad @x0py774) Tm_type) :pattern ((HasType (Tm_arrow_f2144e812b1bb22d3fc2a233dbf4e7ad @x0py774) Tm_type)) )) :named kinding_Tm_arrow_f2144e812b1bb22d3fc2a233dbf4e7ad))
(assert (! (HasType Tm_arrow_fa4e3ee4a3dfa402363cd0693fcbfca4 Tm_type) :named kinding_Tm_arrow_fa4e3ee4a3dfa402363cd0693fcbfca4))
(assert (! (HasType Tm_arrow_fb2b0d135fd95ad5a0c9931d87ebd9cf Tm_type) :named kinding_Tm_arrow_fb2b0d135fd95ad5a0c9931d87ebd9cf))
(assert (! (HasType Tm_arrow_fb8e9788d8e1ad00d517d818391a5552 Tm_type) :named kinding_Tm_arrow_fb8e9788d8e1ad00d517d818391a5552))
(assert (! (forall ((@x0py775 Term)(@x1py858 Term)) (! (HasType (Tm_arrow_fc31a65eb1baad4caf91e28652535209 @x0py775 @x1py858) Tm_type) :pattern ((HasType (Tm_arrow_fc31a65eb1baad4caf91e28652535209 @x0py775 @x1py858) Tm_type)) )) :named kinding_Tm_arrow_fc31a65eb1baad4caf91e28652535209))
(assert (! (HasType Tm_arrow_feb6e9b0823403b824ec87356300d43e Tm_type) :named kinding_Tm_arrow_feb6e9b0823403b824ec87356300d43e))
(assert (! (forall ((@x0py776 Term)(@x1py859 Term)) (! (and (or (Valid (Prims.l_and @x0py776 @x1py859)) (not (Valid @x0py776)) (not (Valid @x1py859))) (or (and (Valid @x0py776) (Valid @x1py859)) (not (Valid (Prims.l_and @x0py776 @x1py859))))) :pattern ((Prims.l_and @x0py776 @x1py859)) )) :named l_and-interp))
(assert (! (forall ((@x0py777 Term)(@x1py860 Term)) (! (and (or (Valid (Prims.l_iff @x0py777 @x1py860)) (and (or (Valid @x1py860) (Valid @x0py777)) (or (not (Valid @x0py777)) (not (Valid @x1py860))))) (or (not (Valid (Prims.l_iff @x0py777 @x1py860))) (and (or (Valid @x1py860) (not (Valid @x0py777))) (or (Valid @x0py777) (not (Valid @x1py860)))))) :pattern ((Prims.l_iff @x0py777 @x1py860)) )) :named l_iff-interp))
(assert (! (forall ((@x0py778 Term)(@x1py861 Term)) (! (and (or (Valid (Prims.l_imp @x0py778 @x1py861)) (and (Valid @x0py778) (not (Valid @x1py861)))) (or (Valid @x1py861) (not (Valid @x0py778)) (not (Valid (Prims.l_imp @x0py778 @x1py861))))) :pattern ((Prims.l_imp @x0py778 @x1py861)) )) :named l_imp-interp))
(assert (! (forall ((@x0py779 Term)) (! (and (or (Valid @x0py779) (Valid (Prims.l_not @x0py779))) (or (not (Valid @x0py779)) (not (Valid (Prims.l_not @x0py779))))) :pattern ((Prims.l_not @x0py779)) )) :named l_not-interp))
(assert (! (forall ((@x0py780 Term)(@x1py862 Term)) (! (and (or (and (not (Valid @x0py780)) (not (Valid @x1py862))) (Valid (Prims.l_or @x0py780 @x1py862))) (or (Valid @x1py862) (Valid @x0py780) (not (Valid (Prims.l_or @x0py780 @x1py862))))) :pattern ((Prims.l_or @x0py780 @x1py862)) )) :named l_or-interp))
(assert (! (forall ((@x0py781 Term)) (! (or (not (HasType @x0py781 Tm_type)) (forall ((@x1py863 Term)) (! (or (BoxBool_proj_0 (FStar.Pervasives.Native.uu___is_None @x0py781 @x1py863)) (BoxBool_proj_0 (FStar.Pervasives.Native.uu___is_Some @x0py781 @x1py863)) (not (HasType @x1py863 (FStar.Pervasives.Native.option @x0py781)))) :pattern ((FStar.Pervasives.Native.uu___is_None @x0py781 @x1py863)) :pattern ((FStar.Pervasives.Native.uu___is_Some @x0py781 @x1py863)) :pattern ((HasType @x1py863 (FStar.Pervasives.Native.option @x0py781))) ))) :pattern ((FStar.Pervasives.Native.option @x0py781)) )) :named lemma_FStar.Pervasives.invertOption))
(assert (! (forall ((@x0py782 Term)) (! (or (not (is-LexCons @x0py782)) (Valid (Prims.precedes Prims.lex_t Prims.lex_t @x0py782 Prims.LexTop))) :pattern ((Valid (Prims.precedes Prims.lex_t Prims.lex_t @x0py782 Prims.LexTop))) )) :named lextop))
(assert (! (is-Tm_arrow (PreType False.calc_proof@tok)) :named pre_kinding_False.calc_proof@tok))
(assert (! (is-Tm_arrow (PreType FStar.Pervasives.dtuple3@tok)) :named pre_kinding_FStar.Pervasives.dtuple3@tok))
(assert (! (is-Tm_arrow (PreType FStar.Pervasives.dtuple4@tok)) :named pre_kinding_FStar.Pervasives.dtuple4@tok))
(assert (! (is-Tm_arrow (PreType FStar.Pervasives.either@tok)) :named pre_kinding_FStar.Pervasives.either@tok))
(assert (! (is-Tm_arrow (PreType FStar.Pervasives.Native.option@tok)) :named pre_kinding_FStar.Pervasives.Native.option@tok))
(assert (! (is-Tm_arrow (PreType FStar.Pervasives.Native.tuple2@tok)) :named pre_kinding_FStar.Pervasives.Native.tuple2@tok))
(assert (! (is-Tm_arrow (PreType FStar.Pervasives.Native.tuple3@tok)) :named pre_kinding_FStar.Pervasives.Native.tuple3@tok))
(assert (! (is-Tm_arrow (PreType FStar.Pervasives.Native.tuple4@tok)) :named pre_kinding_FStar.Pervasives.Native.tuple4@tok))
(assert (! (is-Tm_arrow (PreType FStar.Pervasives.Native.tuple5@tok)) :named pre_kinding_FStar.Pervasives.Native.tuple5@tok))
(assert (! (is-Tm_arrow (PreType FStar.Pervasives.Native.tuple6@tok)) :named pre_kinding_FStar.Pervasives.Native.tuple6@tok))
(assert (! (is-Tm_arrow (PreType FStar.Pervasives.Native.tuple7@tok)) :named pre_kinding_FStar.Pervasives.Native.tuple7@tok))
(assert (! (is-Tm_arrow (PreType FStar.Pervasives.Native.tuple8@tok)) :named pre_kinding_FStar.Pervasives.Native.tuple8@tok))
(assert (! (is-Tm_arrow (PreType FStar.Pervasives.result@tok)) :named pre_kinding_FStar.Pervasives.result@tok))
(assert (! (is-Tm_arrow (PreType Prims.c_and@tok)) :named pre_kinding_Prims.c_and@tok))
(assert (! (is-Tm_arrow (PreType Prims.c_or@tok)) :named pre_kinding_Prims.c_or@tok))
(assert (! (is-Tm_arrow (PreType Prims.dtuple2@tok)) :named pre_kinding_Prims.dtuple2@tok))
(assert (! (is-Tm_arrow (PreType Prims.equals@tok)) :named pre_kinding_Prims.equals@tok))
(assert (! (is-Tm_arrow (PreType Prims.h_equals@tok)) :named pre_kinding_Prims.h_equals@tok))
(assert (! (is-Tm_arrow (PreType Prims.list@tok)) :named pre_kinding_Prims.list@tok))
(assert (! (forall ((@x0py783 Term)(@x1py864 Term)) (! (= (Prims.op_Addition @x0py783 @x1py864) (BoxInt (+ (BoxInt_proj_0 @x0py783) (BoxInt_proj_0 @x1py864)))) :pattern ((Prims.op_Addition @x0py783 @x1py864)) )) :named primitive_Prims.op_Addition))
(assert (! (forall ((@x0py784 Term)(@x1py865 Term)) (! (= (Prims.op_AmpAmp @x0py784 @x1py865) (BoxBool (z3name!719 @x1py865 @x0py784))) :pattern ((Prims.op_AmpAmp @x0py784 @x1py865)) )) :named primitive_Prims.op_AmpAmp_0))
(assert (! (forall ((x!1py18 Term)(x!2py16 Term)) (! (or (not (z3name!719 x!2py16 x!1py18)) (and (BoxBool_proj_0 x!1py18) (BoxBool_proj_0 x!2py16))) :pattern ((z3name!719 x!2py16 x!1py18)) )) :named primitive_Prims.op_AmpAmp_1))
(assert (! (forall ((x!1py19 Term)(x!2py17 Term)) (! (or (z3name!719 x!2py17 x!1py19) (not (BoxBool_proj_0 x!1py19)) (not (BoxBool_proj_0 x!2py17))) :pattern ((z3name!719 x!2py17 x!1py19)) )) :named primitive_Prims.op_AmpAmp_2))
(assert (! (forall ((@x0py785 Term)(@x1py866 Term)) (! (= (Prims.op_BarBar @x0py785 @x1py866) (BoxBool (z3name!720 @x1py866 @x0py785))) :pattern ((Prims.op_BarBar @x0py785 @x1py866)) )) :named primitive_Prims.op_BarBar_0))
(assert (! (forall ((x!1py20 Term)(x!2py18 Term)) (! (or (BoxBool_proj_0 x!2py18) (BoxBool_proj_0 x!1py20) (not (z3name!720 x!2py18 x!1py20))) :pattern ((z3name!720 x!2py18 x!1py20)) )) :named primitive_Prims.op_BarBar_1))
(assert (! (forall ((x!1py21 Term)(x!2py19 Term)) (! (or (z3name!720 x!2py19 x!1py21) (and (not (BoxBool_proj_0 x!1py21)) (not (BoxBool_proj_0 x!2py19)))) :pattern ((z3name!720 x!2py19 x!1py21)) )) :named primitive_Prims.op_BarBar_2))
(assert (! (forall ((@x0py786 Term)(@x1py867 Term)(@x2py627 Term)) (! (= (Prims.op_disEquality @x0py786 @x1py867 @x2py627) (BoxBool (z3name!721 @x2py627 @x1py867))) :pattern ((Prims.op_disEquality @x0py786 @x1py867 @x2py627)) )) :named primitive_Prims.op_disEquality_0))
(assert (! (forall ((x!1py22 Term)(x!2py20 Term)) (! (or (= x!1py22 x!2py20) (z3name!721 x!2py20 x!1py22)) :pattern ((z3name!721 x!2py20 x!1py22)) )) :named primitive_Prims.op_disEquality_1))
(assert (! (forall ((x!1py23 Term)(x!2py21 Term)) (! (or (not (= x!1py23 x!2py21)) (not (z3name!721 x!2py21 x!1py23))) :pattern ((z3name!721 x!2py21 x!1py23)) )) :named primitive_Prims.op_disEquality_2))
(assert (! (forall ((@x0py787 Term)(@x1py868 Term)) (! (= (Prims.op_Division @x0py787 @x1py868) (BoxInt (to_int (/ (to_real (BoxInt_proj_0 @x0py787)) (to_real (BoxInt_proj_0 @x1py868)))))) :pattern ((Prims.op_Division @x0py787 @x1py868)) )) :named primitive_Prims.op_Division))
(assert (! (forall ((@x0py788 Term)(@x1py869 Term)(@x2py628 Term)) (! (= (Prims.op_Equality @x0py788 @x1py869 @x2py628) (BoxBool (z3name!722 @x2py628 @x1py869))) :pattern ((Prims.op_Equality @x0py788 @x1py869 @x2py628)) )) :named primitive_Prims.op_Equality_0))
(assert (! (forall ((x!1py24 Term)(x!2py22 Term)) (! (or (not (= x!1py24 x!2py22)) (z3name!722 x!2py22 x!1py24)) :pattern ((z3name!722 x!2py22 x!1py24)) )) :named primitive_Prims.op_Equality_1))
(assert (! (forall ((x!1py25 Term)(x!2py23 Term)) (! (or (not (z3name!722 x!2py23 x!1py25)) (= x!1py25 x!2py23)) :pattern ((z3name!722 x!2py23 x!1py25)) )) :named primitive_Prims.op_Equality_2))
(assert (! (forall ((@x0py789 Term)(@x1py870 Term)) (! (= (Prims.op_GreaterThan @x0py789 @x1py870) (BoxBool (not (<= (BoxInt_proj_0 @x0py789) (BoxInt_proj_0 @x1py870))))) :pattern ((Prims.op_GreaterThan @x0py789 @x1py870)) )) :named primitive_Prims.op_GreaterThan))
(assert (! (forall ((@x0py790 Term)(@x1py871 Term)) (! (= (Prims.op_GreaterThanOrEqual @x0py790 @x1py871) (BoxBool (<= (BoxInt_proj_0 @x1py871) (BoxInt_proj_0 @x0py790)))) :pattern ((Prims.op_GreaterThanOrEqual @x0py790 @x1py871)) )) :named primitive_Prims.op_GreaterThanOrEqual))
(assert (! (forall ((@x0py791 Term)(@x1py872 Term)) (! (= (Prims.op_LessThan @x0py791 @x1py872) (BoxBool (not (<= (BoxInt_proj_0 @x1py872) (BoxInt_proj_0 @x0py791))))) :pattern ((Prims.op_LessThan @x0py791 @x1py872)) )) :named primitive_Prims.op_LessThan))
(assert (! (forall ((@x0py792 Term)(@x1py873 Term)) (! (= (Prims.op_LessThanOrEqual @x0py792 @x1py873) (BoxBool (<= (BoxInt_proj_0 @x0py792) (BoxInt_proj_0 @x1py873)))) :pattern ((Prims.op_LessThanOrEqual @x0py792 @x1py873)) )) :named primitive_Prims.op_LessThanOrEqual))
(assert (! (forall ((@x0py793 Term)) (! (= (Prims.op_Minus @x0py793) (BoxInt (* (- 1) (BoxInt_proj_0 @x0py793)))) :pattern ((Prims.op_Minus @x0py793)) )) :named primitive_Prims.op_Minus))
(assert (! (forall ((@x0py794 Term)(@x1py874 Term)) (! (= (Prims.op_Modulus @x0py794 @x1py874) (BoxInt (mod (BoxInt_proj_0 @x0py794) (BoxInt_proj_0 @x1py874)))) :pattern ((Prims.op_Modulus @x0py794 @x1py874)) )) :named primitive_Prims.op_Modulus))
(assert (! (forall ((@x0py795 Term)(@x1py875 Term)) (! (= (Prims.op_Multiply @x0py795 @x1py875) (BoxInt (* (BoxInt_proj_0 @x1py875) (BoxInt_proj_0 @x0py795)))) :pattern ((Prims.op_Multiply @x0py795 @x1py875)) )) :named primitive_Prims.op_Multiply))
(assert (! (forall ((@x0py796 Term)) (! (= (Prims.op_Negation @x0py796) (BoxBool (z3name!723 @x0py796))) :pattern ((Prims.op_Negation @x0py796)) )) :named primitive_Prims.op_Negation_0))
(assert (! (forall ((x!1py26 Term)) (! (or (BoxBool_proj_0 x!1py26) (z3name!723 x!1py26)) :pattern ((z3name!723 x!1py26)) )) :named primitive_Prims.op_Negation_1))
(assert (! (forall ((x!1py27 Term)) (! (or (not (BoxBool_proj_0 x!1py27)) (not (z3name!723 x!1py27))) :pattern ((z3name!723 x!1py27)) )) :named primitive_Prims.op_Negation_2))
(assert (! (forall ((@x0py797 Term)(@x1py876 Term)) (! (= (Prims.op_Subtraction @x0py797 @x1py876) (BoxInt (+ (BoxInt_proj_0 @x0py797) (* (- 1) (BoxInt_proj_0 @x1py876))))) :pattern ((Prims.op_Subtraction @x0py797 @x1py876)) )) :named primitive_Prims.op_Subtraction))
(assert (! (forall ((@x0py798 Term)(@x1py877 Term)(@x2py629 Term)(@x3py442 Term)) (! (and (or (not (HasTypeZ @x0py798 (Tm_arrow_1a6b9de3491ece0b8961a8acbb38411b @x1py877 @x2py629 @x3py442))) (forall ((@x4py317 Term)(@x5py245 Term)(@x6py165 Term)(@x7py118 Term)(@x8py79 Term)) (! (or (HasType (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT @x0py798 @x4py317) @x5py245) @x6py165) @x7py118) @x8py79) @x1py877) (not (HasType @x4py317 @x3py442)) (not (HasType @x5py245 @x2py629)) (not (HasType @x6py165 @x2py629)) (not (HasType @x7py118 @x2py629)) (not (HasType @x8py79 @x2py629))) :pattern ((ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT @x0py798 @x4py317) @x5py245) @x6py165) @x7py118) @x8py79)) ))) (or (HasTypeZ @x0py798 (Tm_arrow_1a6b9de3491ece0b8961a8acbb38411b @x1py877 @x2py629 @x3py442)) (and (HasType (@x4!728 @x3py442 @x2py629 @x1py877 @x0py798) @x3py442) (HasType (@x5!727 @x3py442 @x2py629 @x1py877 @x0py798) @x2py629) (HasType (@x6!726 @x3py442 @x2py629 @x1py877 @x0py798) @x2py629) (HasType (@x7!725 @x3py442 @x2py629 @x1py877 @x0py798) @x2py629) (HasType (@x8!724 @x3py442 @x2py629 @x1py877 @x0py798) @x2py629) (not (HasType (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT @x0py798 (@x4!728 @x3py442 @x2py629 @x1py877 @x0py798)) (@x5!727 @x3py442 @x2py629 @x1py877 @x0py798)) (@x6!726 @x3py442 @x2py629 @x1py877 @x0py798)) (@x7!725 @x3py442 @x2py629 @x1py877 @x0py798)) (@x8!724 @x3py442 @x2py629 @x1py877 @x0py798)) @x1py877))))) :pattern ((HasTypeZ @x0py798 (Tm_arrow_1a6b9de3491ece0b8961a8acbb38411b @x1py877 @x2py629 @x3py442))) )) :named Prims_interpretation_Tm_arrow_1a6b9de3491ece0b8961a8acbb38411b))
(assert (! (forall ((@x0py799 Term)(@x1py878 Term)) (! (and (or (not (HasTypeZ @x0py799 (Tm_arrow_1c4871de840a52d38a5b65a5ad4e97ea @x1py878))) (forall ((@x2py630 Term)) (! (or (not (HasType @x2py630 (Prims_Tm_refine_c16bc1b61f58b349bf6fc1c94dcaf83b @x1py878))) (HasType (ApplyTT @x0py799 @x2py630) Tm_type)) :pattern ((ApplyTT @x0py799 @x2py630)) ))) (or (HasTypeZ @x0py799 (Tm_arrow_1c4871de840a52d38a5b65a5ad4e97ea @x1py878)) (and (HasType (@x2!729 @x1py878 @x0py799) (Prims_Tm_refine_c16bc1b61f58b349bf6fc1c94dcaf83b @x1py878)) (not (HasType (ApplyTT @x0py799 (@x2!729 @x1py878 @x0py799)) Tm_type))))) :pattern ((HasTypeZ @x0py799 (Tm_arrow_1c4871de840a52d38a5b65a5ad4e97ea @x1py878))) )) :named Prims_interpretation_Tm_arrow_1c4871de840a52d38a5b65a5ad4e97ea))
(assert (! (forall ((@x0py800 Term)) (! (and (or (not (HasTypeZ @x0py800 Tm_arrow_2e5fda2477c3f2ade2b68a9685bf6393)) (forall ((@x1py879 Term)(@x2py631 Term)(@x3py443 Term)) (! (or (not (HasType @x1py879 Tm_type)) (not (HasType @x2py631 (Tm_arrow_e06752ba152f81447b312efcdf8f0e23 @x1py879))) (not (HasType @x3py443 (Prims.dtuple2 @x1py879 @x2py631))) (HasType (ApplyTT (ApplyTT (ApplyTT @x0py800 @x1py879) @x2py631) @x3py443) (ApplyTT @x2py631 (Prims.__proj__Mkdtuple2__item___1 @x1py879 @x2py631 @x3py443)))) :pattern ((ApplyTT (ApplyTT (ApplyTT @x0py800 @x1py879) @x2py631) @x3py443)) ))) (or (HasTypeZ @x0py800 Tm_arrow_2e5fda2477c3f2ade2b68a9685bf6393) (and (HasType (@x1!732 @x0py800) Tm_type) (HasType (@x2!731 @x0py800) (Tm_arrow_e06752ba152f81447b312efcdf8f0e23 (@x1!732 @x0py800))) (HasType (@x3!730 @x0py800) (Prims.dtuple2 (@x1!732 @x0py800) (@x2!731 @x0py800))) (not (HasType (ApplyTT (ApplyTT (ApplyTT @x0py800 (@x1!732 @x0py800)) (@x2!731 @x0py800)) (@x3!730 @x0py800)) (ApplyTT (@x2!731 @x0py800) (Prims.__proj__Mkdtuple2__item___1 (@x1!732 @x0py800) (@x2!731 @x0py800) (@x3!730 @x0py800)))))))) :pattern ((HasTypeZ @x0py800 Tm_arrow_2e5fda2477c3f2ade2b68a9685bf6393)) )) :named Prims_interpretation_Tm_arrow_2e5fda2477c3f2ade2b68a9685bf6393))
(assert (! (forall ((@x0py801 Term)) (! (and (or (not (HasTypeZ @x0py801 Tm_arrow_3ca80ddba151a71b9c9aa6e8efea65cd)) (forall ((@x1py880 Term)(@x2py632 Term)) (! (or (not (HasType @x1py880 Tm_type)) (not (HasType @x2py632 (Prims_Tm_refine_7aac12c24449a22c34d98a0ea8ed4a32 @x1py880))) (HasType (ApplyTT (ApplyTT @x0py801 @x1py880) @x2py632) @x1py880)) :pattern ((ApplyTT (ApplyTT @x0py801 @x1py880) @x2py632)) ))) (or (HasTypeZ @x0py801 Tm_arrow_3ca80ddba151a71b9c9aa6e8efea65cd) (and (HasType (@x1!734 @x0py801) Tm_type) (HasType (@x2!733 @x0py801) (Prims_Tm_refine_7aac12c24449a22c34d98a0ea8ed4a32 (@x1!734 @x0py801))) (not (HasType (ApplyTT (ApplyTT @x0py801 (@x1!734 @x0py801)) (@x2!733 @x0py801)) (@x1!734 @x0py801)))))) :pattern ((HasTypeZ @x0py801 Tm_arrow_3ca80ddba151a71b9c9aa6e8efea65cd)) )) :named Prims_interpretation_Tm_arrow_3ca80ddba151a71b9c9aa6e8efea65cd))
(assert (! (forall ((@x0py802 Term)(@x1py881 Term)) (! (and (or (not (HasTypeZ @x0py802 (Tm_arrow_03fd83481846190115df092b2a491354 @x1py881))) (forall ((@x2py633 Term)(@x3py444 Term)(@x4py318 Term)) (! (or (HasType (ApplyTT (ApplyTT (ApplyTT @x0py802 @x2py633) @x3py444) @x4py318) @x1py881) (not (HasType @x2py633 Tm_type)) (not (HasType @x3py444 (Prims.pure_wp @x2py633))) (not (HasType @x4py318 @x2py633))) :pattern ((ApplyTT (ApplyTT (ApplyTT @x0py802 @x2py633) @x3py444) @x4py318)) ))) (or (HasTypeZ @x0py802 (Tm_arrow_03fd83481846190115df092b2a491354 @x1py881)) (and (HasType (@x2!737 @x1py881 @x0py802) Tm_type) (HasType (@x3!736 @x1py881 @x0py802) (Prims.pure_wp (@x2!737 @x1py881 @x0py802))) (HasType (@x4!735 @x1py881 @x0py802) (@x2!737 @x1py881 @x0py802)) (not (HasType (ApplyTT (ApplyTT (ApplyTT @x0py802 (@x2!737 @x1py881 @x0py802)) (@x3!736 @x1py881 @x0py802)) (@x4!735 @x1py881 @x0py802)) @x1py881))))) :pattern ((HasTypeZ @x0py802 (Tm_arrow_03fd83481846190115df092b2a491354 @x1py881))) )) :named Prims_interpretation_Tm_arrow_03fd83481846190115df092b2a491354))
(assert (! (forall ((@x0py803 Term)) (! (and (or (not (HasTypeZ @x0py803 Tm_arrow_7c761265d6fe943628c96343fc66d1a0)) (forall ((@x1py882 Term)(@x2py634 Term)(@x3py445 Term)) (! (or (HasType (ApplyTT (ApplyTT (ApplyTT @x0py803 @x1py882) @x2py634) @x3py445) Tm_type) (not (HasType @x2py634 @x1py882)) (not (HasType @x1py882 Tm_type)) (not (HasType @x3py445 Tm_type))) :pattern ((ApplyTT (ApplyTT (ApplyTT @x0py803 @x1py882) @x2py634) @x3py445)) ))) (or (HasTypeZ @x0py803 Tm_arrow_7c761265d6fe943628c96343fc66d1a0) (and (HasType (@x1!740 @x0py803) Tm_type) (HasType (@x2!739 @x0py803) (@x1!740 @x0py803)) (HasType (@x3!738 @x0py803) Tm_type) (not (HasType (ApplyTT (ApplyTT (ApplyTT @x0py803 (@x1!740 @x0py803)) (@x2!739 @x0py803)) (@x3!738 @x0py803)) Tm_type))))) :pattern ((HasTypeZ @x0py803 Tm_arrow_7c761265d6fe943628c96343fc66d1a0)) )) :named Prims_interpretation_Tm_arrow_7c761265d6fe943628c96343fc66d1a0))
(assert (! (forall ((@x0py804 Term)(@x1py883 Term)) (! (and (or (not (HasTypeZ @x0py804 (Tm_arrow_7df6282d3b185c0f02eb10c3e19fe2e1 @x1py883))) (forall ((@x2py635 Term)) (! (or (not (HasType @x2py635 (Prims.list (Prims.list @x1py883)))) (HasType (ApplyTT @x0py804 @x2py635) @x1py883)) :pattern ((ApplyTT @x0py804 @x2py635)) ))) (or (HasTypeZ @x0py804 (Tm_arrow_7df6282d3b185c0f02eb10c3e19fe2e1 @x1py883)) (and (HasType (@x2!741 @x1py883 @x0py804) (Prims.list (Prims.list @x1py883))) (not (HasType (ApplyTT @x0py804 (@x2!741 @x1py883 @x0py804)) @x1py883))))) :pattern ((HasTypeZ @x0py804 (Tm_arrow_7df6282d3b185c0f02eb10c3e19fe2e1 @x1py883))) )) :named Prims_interpretation_Tm_arrow_7df6282d3b185c0f02eb10c3e19fe2e1))
(assert (! (forall ((@x0py805 Term)) (! (and (or (not (HasTypeZ @x0py805 Tm_arrow_7e78dbd6763d8fddb37f1e732bda927c)) (forall ((@x1py884 Term)(@x2py636 Term)(@x3py446 Term)) (! (or (HasType (ApplyTT (ApplyTT (ApplyTT @x0py805 @x1py884) @x2py636) @x3py446) @x1py884) (not (HasType @x3py446 (Prims_Tm_refine_51387c0a7ef77e43ab89d4ae2b6b464d @x1py884 @x2py636))) (not (HasType @x1py884 Tm_type)) (not (HasType @x2py636 Tm_type))) :pattern ((ApplyTT (ApplyTT (ApplyTT @x0py805 @x1py884) @x2py636) @x3py446)) ))) (or (HasTypeZ @x0py805 Tm_arrow_7e78dbd6763d8fddb37f1e732bda927c) (and (HasType (@x1!744 @x0py805) Tm_type) (HasType (@x2!743 @x0py805) Tm_type) (HasType (@x3!742 @x0py805) (Prims_Tm_refine_51387c0a7ef77e43ab89d4ae2b6b464d (@x1!744 @x0py805) (@x2!743 @x0py805))) (not (HasType (ApplyTT (ApplyTT (ApplyTT @x0py805 (@x1!744 @x0py805)) (@x2!743 @x0py805)) (@x3!742 @x0py805)) (@x1!744 @x0py805)))))) :pattern ((HasTypeZ @x0py805 Tm_arrow_7e78dbd6763d8fddb37f1e732bda927c)) )) :named Prims_interpretation_Tm_arrow_7e78dbd6763d8fddb37f1e732bda927c))
(assert (! (forall ((@x0py806 Term)(@x1py885 Term)(@x2py637 Term)) (! (and (or (not (HasTypeZ @x0py806 (Tm_arrow_9cb3c953faf527c316d427b2ce8bd81b @x1py885 @x2py637))) (forall ((@x3py447 Term)) (! (or (not (HasType @x3py447 @x2py637)) (HasType (ApplyTT @x0py806 @x3py447) @x1py885)) :pattern ((ApplyTT @x0py806 @x3py447)) ))) (or (HasTypeZ @x0py806 (Tm_arrow_9cb3c953faf527c316d427b2ce8bd81b @x1py885 @x2py637)) (and (HasType (@x3!745 @x2py637 @x1py885 @x0py806) @x2py637) (not (HasType (ApplyTT @x0py806 (@x3!745 @x2py637 @x1py885 @x0py806)) @x1py885))))) :pattern ((HasTypeZ @x0py806 (Tm_arrow_9cb3c953faf527c316d427b2ce8bd81b @x1py885 @x2py637))) )) :named Prims_interpretation_Tm_arrow_9cb3c953faf527c316d427b2ce8bd81b))
(assert (! (forall ((@x0py807 Term)) (! (and (or (not (HasTypeZ @x0py807 Tm_arrow_9f8b5ab8f80ced9cdf6afea35d31efae)) (forall ((@x1py886 Term)) (! (or (not (HasType @x1py886 Tm_type)) (HasType (ApplyTT @x0py807 @x1py886) (Prims.list @x1py886))) :pattern ((ApplyTT @x0py807 @x1py886)) ))) (or (HasTypeZ @x0py807 Tm_arrow_9f8b5ab8f80ced9cdf6afea35d31efae) (and (HasType (@x1!746 @x0py807) Tm_type) (not (HasType (ApplyTT @x0py807 (@x1!746 @x0py807)) (Prims.list (@x1!746 @x0py807))))))) :pattern ((HasTypeZ @x0py807 Tm_arrow_9f8b5ab8f80ced9cdf6afea35d31efae)) )) :named Prims_interpretation_Tm_arrow_9f8b5ab8f80ced9cdf6afea35d31efae))
(assert (! (forall ((@x0py808 Term)(@x1py887 Term)) (! (and (or (not (HasTypeZ @x0py808 (Tm_arrow_21a7a3166e0683e2dfa5d2815e88da4a @x1py887))) (forall ((@x2py638 Term)(@x3py448 Term)(@x4py319 Term)) (! (or (HasType (ApplyTT (ApplyTT (ApplyTT @x0py808 @x2py638) @x3py448) @x4py319) @x1py887) (not (HasType @x4py319 (Prims.dtuple2 @x2py638 @x3py448))) (not (HasType @x2py638 Tm_type)) (not (HasType @x3py448 (Tm_arrow_e06752ba152f81447b312efcdf8f0e23 @x2py638)))) :pattern ((ApplyTT (ApplyTT (ApplyTT @x0py808 @x2py638) @x3py448) @x4py319)) ))) (or (HasTypeZ @x0py808 (Tm_arrow_21a7a3166e0683e2dfa5d2815e88da4a @x1py887)) (and (HasType (@x2!749 @x1py887 @x0py808) Tm_type) (HasType (@x3!748 @x1py887 @x0py808) (Tm_arrow_e06752ba152f81447b312efcdf8f0e23 (@x2!749 @x1py887 @x0py808))) (HasType (@x4!747 @x1py887 @x0py808) (Prims.dtuple2 (@x2!749 @x1py887 @x0py808) (@x3!748 @x1py887 @x0py808))) (not (HasType (ApplyTT (ApplyTT (ApplyTT @x0py808 (@x2!749 @x1py887 @x0py808)) (@x3!748 @x1py887 @x0py808)) (@x4!747 @x1py887 @x0py808)) @x1py887))))) :pattern ((HasTypeZ @x0py808 (Tm_arrow_21a7a3166e0683e2dfa5d2815e88da4a @x1py887))) )) :named Prims_interpretation_Tm_arrow_21a7a3166e0683e2dfa5d2815e88da4a))
(assert (! (forall ((@x0py809 Term)) (! (and (or (not (HasTypeZ @x0py809 Tm_arrow_34d4137f6994a8c7bcc0b38f6ac7779f)) (forall ((@x1py888 Term)(@x2py639 Term)) (! (or (not (HasType @x2py639 @x1py888)) (HasType (ApplyTT (ApplyTT @x0py809 @x1py888) @x2py639) Tm_type) (not (HasType @x1py888 Tm_type))) :pattern ((ApplyTT (ApplyTT @x0py809 @x1py888) @x2py639)) ))) (or (HasTypeZ @x0py809 Tm_arrow_34d4137f6994a8c7bcc0b38f6ac7779f) (and (HasType (@x1!751 @x0py809) Tm_type) (HasType (@x2!750 @x0py809) (@x1!751 @x0py809)) (not (HasType (ApplyTT (ApplyTT @x0py809 (@x1!751 @x0py809)) (@x2!750 @x0py809)) Tm_type))))) :pattern ((HasTypeZ @x0py809 Tm_arrow_34d4137f6994a8c7bcc0b38f6ac7779f)) )) :named Prims_interpretation_Tm_arrow_34d4137f6994a8c7bcc0b38f6ac7779f))
(assert (! (forall ((@x0py810 Term)(@x1py889 Term)) (! (and (or (not (HasTypeZ @x0py810 (Tm_arrow_44faff5d8543c30ad9bf2eeaf1b3abcf @x1py889))) (forall ((@x2py640 Term)(@x3py449 Term)) (! (or (HasType (ApplyTT (ApplyTT @x0py810 @x2py640) @x3py449) @x1py889) (not (HasType @x3py449 @x1py889)) (not (HasType @x2py640 @x1py889))) :pattern ((ApplyTT (ApplyTT @x0py810 @x2py640) @x3py449)) ))) (or (HasTypeZ @x0py810 (Tm_arrow_44faff5d8543c30ad9bf2eeaf1b3abcf @x1py889)) (and (HasType (@x2!753 @x1py889 @x0py810) @x1py889) (HasType (@x3!752 @x1py889 @x0py810) @x1py889) (not (HasType (ApplyTT (ApplyTT @x0py810 (@x2!753 @x1py889 @x0py810)) (@x3!752 @x1py889 @x0py810)) @x1py889))))) :pattern ((HasTypeZ @x0py810 (Tm_arrow_44faff5d8543c30ad9bf2eeaf1b3abcf @x1py889))) )) :named Prims_interpretation_Tm_arrow_44faff5d8543c30ad9bf2eeaf1b3abcf))
(assert (! (forall ((@x0py811 Term)(@x1py890 Term)(@x2py641 Term)) (! (and (or (not (HasTypeZ @x0py811 (Tm_arrow_57c992be3fa76720bf1a10ffa047db3d @x1py890 @x2py641))) (forall ((@x3py450 Term)(@x4py320 Term)(@x5py246 Term)) (! (or (not (HasType @x5py246 Tm_type)) (not (HasType @x3py450 @x2py641)) (not (HasType @x4py320 @x1py890)) (HasType (ApplyTT (ApplyTT (ApplyTT @x0py811 @x3py450) @x4py320) @x5py246) Tm_type)) :pattern ((ApplyTT (ApplyTT (ApplyTT @x0py811 @x3py450) @x4py320) @x5py246)) ))) (or (HasTypeZ @x0py811 (Tm_arrow_57c992be3fa76720bf1a10ffa047db3d @x1py890 @x2py641)) (and (HasType (@x3!756 @x2py641 @x1py890 @x0py811) @x2py641) (HasType (@x4!755 @x2py641 @x1py890 @x0py811) @x1py890) (HasType (@x5!754 @x2py641 @x1py890 @x0py811) Tm_type) (not (HasType (ApplyTT (ApplyTT (ApplyTT @x0py811 (@x3!756 @x2py641 @x1py890 @x0py811)) (@x4!755 @x2py641 @x1py890 @x0py811)) (@x5!754 @x2py641 @x1py890 @x0py811)) Tm_type))))) :pattern ((HasTypeZ @x0py811 (Tm_arrow_57c992be3fa76720bf1a10ffa047db3d @x1py890 @x2py641))) )) :named Prims_interpretation_Tm_arrow_57c992be3fa76720bf1a10ffa047db3d))
(assert (! (forall ((@x0py812 Term)(@x1py891 Term)) (! (and (or (not (HasTypeZ @x0py812 (Tm_arrow_070c89d0419ca0b80e0da94940c40fa3 @x1py891))) (forall ((@x2py642 Term)) (! (or (not (HasType @x2py642 Prims.c_True)) (HasType (ApplyTT @x0py812 @x2py642) @x1py891)) :pattern ((ApplyTT @x0py812 @x2py642)) ))) (or (HasTypeZ @x0py812 (Tm_arrow_070c89d0419ca0b80e0da94940c40fa3 @x1py891)) (and (HasType (@x2!757 @x1py891 @x0py812) Prims.c_True) (not (HasType (ApplyTT @x0py812 (@x2!757 @x1py891 @x0py812)) @x1py891))))) :pattern ((HasTypeZ @x0py812 (Tm_arrow_070c89d0419ca0b80e0da94940c40fa3 @x1py891))) )) :named Prims_interpretation_Tm_arrow_070c89d0419ca0b80e0da94940c40fa3))
(assert (! (forall ((@x0py813 Term)(@x1py892 Term)) (! (and (or (not (HasTypeZ @x0py813 (Tm_arrow_79f007373109c2c6539212e679be2f2f @x1py892))) (forall ((@x2py643 Term)(@x3py451 Term)) (! (or (not (HasType @x2py643 Tm_type)) (not (HasType @x3py451 (Tm_arrow_e06752ba152f81447b312efcdf8f0e23 @x2py643))) (HasType (ApplyTT (ApplyTT @x0py813 @x2py643) @x3py451) @x1py892)) :pattern ((ApplyTT (ApplyTT @x0py813 @x2py643) @x3py451)) ))) (or (HasTypeZ @x0py813 (Tm_arrow_79f007373109c2c6539212e679be2f2f @x1py892)) (and (HasType (@x2!759 @x1py892 @x0py813) Tm_type) (HasType (@x3!758 @x1py892 @x0py813) (Tm_arrow_e06752ba152f81447b312efcdf8f0e23 (@x2!759 @x1py892 @x0py813))) (not (HasType (ApplyTT (ApplyTT @x0py813 (@x2!759 @x1py892 @x0py813)) (@x3!758 @x1py892 @x0py813)) @x1py892))))) :pattern ((HasTypeZ @x0py813 (Tm_arrow_79f007373109c2c6539212e679be2f2f @x1py892))) )) :named Prims_interpretation_Tm_arrow_79f007373109c2c6539212e679be2f2f))
(assert (! (forall ((@x0py814 Term)(@x1py893 Term)) (! (and (or (not (HasTypeZ @x0py814 (Tm_arrow_186fc0e29ebb27a200ef672a89551282 @x1py893))) (forall ((@x2py644 Term)(@x3py452 Term)) (! (or (not (HasType @x2py644 Tm_type)) (not (HasType @x3py452 (Prims.list @x2py644))) (HasType (ApplyTT (ApplyTT @x0py814 @x2py644) @x3py452) @x1py893)) :pattern ((ApplyTT (ApplyTT @x0py814 @x2py644) @x3py452)) ))) (or (HasTypeZ @x0py814 (Tm_arrow_186fc0e29ebb27a200ef672a89551282 @x1py893)) (and (HasType (@x2!761 @x1py893 @x0py814) Tm_type) (HasType (@x3!760 @x1py893 @x0py814) (Prims.list (@x2!761 @x1py893 @x0py814))) (not (HasType (ApplyTT (ApplyTT @x0py814 (@x2!761 @x1py893 @x0py814)) (@x3!760 @x1py893 @x0py814)) @x1py893))))) :pattern ((HasTypeZ @x0py814 (Tm_arrow_186fc0e29ebb27a200ef672a89551282 @x1py893))) )) :named Prims_interpretation_Tm_arrow_186fc0e29ebb27a200ef672a89551282))
(assert (! (forall ((@x0py815 Term)(@x1py894 Term)) (! (and (or (not (HasTypeZ @x0py815 (Tm_arrow_244b5b2a1fc882c67ebcb032ace08d85 @x1py894))) (forall ((@x2py645 Term)(@x3py453 Term)) (! (or (HasType (ApplyTT (ApplyTT @x0py815 @x2py645) @x3py453) @x2py645) (not (HasType @x3py453 @x1py894)) (not (HasType @x2py645 Tm_type))) :pattern ((ApplyTT (ApplyTT @x0py815 @x2py645) @x3py453)) ))) (or (HasTypeZ @x0py815 (Tm_arrow_244b5b2a1fc882c67ebcb032ace08d85 @x1py894)) (and (HasType (@x2!763 @x1py894 @x0py815) Tm_type) (HasType (@x3!762 @x1py894 @x0py815) @x1py894) (not (HasType (ApplyTT (ApplyTT @x0py815 (@x2!763 @x1py894 @x0py815)) (@x3!762 @x1py894 @x0py815)) (@x2!763 @x1py894 @x0py815)))))) :pattern ((HasTypeZ @x0py815 (Tm_arrow_244b5b2a1fc882c67ebcb032ace08d85 @x1py894))) )) :named Prims_interpretation_Tm_arrow_244b5b2a1fc882c67ebcb032ace08d85))
(assert (! (forall ((@x0py816 Term)) (! (and (or (not (HasTypeZ @x0py816 Tm_arrow_257be5ee7da9f477702a7d2ee9bef0c9)) (forall ((@x1py895 Term)) (! (or (not (HasType @x1py895 Tm_type)) (HasType (ApplyTT @x0py816 @x1py895) Tm_type)) :pattern ((ApplyTT @x0py816 @x1py895)) ))) (or (HasTypeZ @x0py816 Tm_arrow_257be5ee7da9f477702a7d2ee9bef0c9) (and (HasType (@x1!764 @x0py816) Tm_type) (not (HasType (ApplyTT @x0py816 (@x1!764 @x0py816)) Tm_type))))) :pattern ((HasTypeZ @x0py816 Tm_arrow_257be5ee7da9f477702a7d2ee9bef0c9)) )) :named Prims_interpretation_Tm_arrow_257be5ee7da9f477702a7d2ee9bef0c9))
(assert (! (forall ((@x0py817 Term)) (! (and (or (not (HasTypeZ @x0py817 Tm_arrow_301a720cbb1c5487adfd2a0b64c67b7e)) (forall ((@x1py896 Term)(@x2py646 Term)(@x3py454 Term)) (! (or (HasType (ApplyTT (ApplyTT (ApplyTT @x0py817 @x1py896) @x2py646) @x3py454) @x1py896) (not (HasType @x2py646 Tm_type)) (not (HasType @x1py896 Tm_type)) (not (HasType @x3py454 (Prims.c_and @x1py896 @x2py646)))) :pattern ((ApplyTT (ApplyTT (ApplyTT @x0py817 @x1py896) @x2py646) @x3py454)) ))) (or (HasTypeZ @x0py817 Tm_arrow_301a720cbb1c5487adfd2a0b64c67b7e) (and (HasType (@x1!767 @x0py817) Tm_type) (HasType (@x2!766 @x0py817) Tm_type) (HasType (@x3!765 @x0py817) (Prims.c_and (@x1!767 @x0py817) (@x2!766 @x0py817))) (not (HasType (ApplyTT (ApplyTT (ApplyTT @x0py817 (@x1!767 @x0py817)) (@x2!766 @x0py817)) (@x3!765 @x0py817)) (@x1!767 @x0py817)))))) :pattern ((HasTypeZ @x0py817 Tm_arrow_301a720cbb1c5487adfd2a0b64c67b7e)) )) :named Prims_interpretation_Tm_arrow_301a720cbb1c5487adfd2a0b64c67b7e))
(assert (! (forall ((@x0py818 Term)(@x1py897 Term)) (! (and (or (not (HasTypeZ @x0py818 (Tm_arrow_537c5575a5fd1154f5e2f17311f50ca8 @x1py897))) (forall ((@x2py647 Term)(@x3py455 Term)(@x4py321 Term)(@x5py247 Term)) (! (or (HasType (ApplyTT (ApplyTT (ApplyTT (ApplyTT @x0py818 @x2py647) @x3py455) @x4py321) @x5py247) @x1py897) (not (HasType @x4py321 @x2py647)) (not (HasType @x2py647 Tm_type)) (not (HasType @x3py455 Tm_type)) (not (HasType @x5py247 @x3py455))) :pattern ((ApplyTT (ApplyTT (ApplyTT (ApplyTT @x0py818 @x2py647) @x3py455) @x4py321) @x5py247)) ))) (or (HasTypeZ @x0py818 (Tm_arrow_537c5575a5fd1154f5e2f17311f50ca8 @x1py897)) (and (HasType (@x2!771 @x1py897 @x0py818) Tm_type) (HasType (@x3!770 @x1py897 @x0py818) Tm_type) (HasType (@x4!769 @x1py897 @x0py818) (@x2!771 @x1py897 @x0py818)) (HasType (@x5!768 @x1py897 @x0py818) (@x3!770 @x1py897 @x0py818)) (not (HasType (ApplyTT (ApplyTT (ApplyTT (ApplyTT @x0py818 (@x2!771 @x1py897 @x0py818)) (@x3!770 @x1py897 @x0py818)) (@x4!769 @x1py897 @x0py818)) (@x5!768 @x1py897 @x0py818)) @x1py897))))) :pattern ((HasTypeZ @x0py818 (Tm_arrow_537c5575a5fd1154f5e2f17311f50ca8 @x1py897))) )) :named Prims_interpretation_Tm_arrow_537c5575a5fd1154f5e2f17311f50ca8))
(assert (! (forall ((@x0py819 Term)(@x1py898 Term)) (! (and (or (not (HasTypeZ @x0py819 (Tm_arrow_581a99aa4b3c2c64b4b6501081582473 @x1py898))) (forall ((@x2py648 Term)(@x3py456 Term)(@x4py322 Term)) (! (or (HasType (ApplyTT (ApplyTT (ApplyTT @x0py819 @x2py648) @x3py456) @x4py322) @x1py898) (not (HasType @x3py456 Tm_type)) (not (HasType @x2py648 Tm_type)) (not (HasType @x4py322 (Prims.c_or @x2py648 @x3py456)))) :pattern ((ApplyTT (ApplyTT (ApplyTT @x0py819 @x2py648) @x3py456) @x4py322)) ))) (or (HasTypeZ @x0py819 (Tm_arrow_581a99aa4b3c2c64b4b6501081582473 @x1py898)) (and (HasType (@x2!774 @x1py898 @x0py819) Tm_type) (HasType (@x3!773 @x1py898 @x0py819) Tm_type) (HasType (@x4!772 @x1py898 @x0py819) (Prims.c_or (@x2!774 @x1py898 @x0py819) (@x3!773 @x1py898 @x0py819))) (not (HasType (ApplyTT (ApplyTT (ApplyTT @x0py819 (@x2!774 @x1py898 @x0py819)) (@x3!773 @x1py898 @x0py819)) (@x4!772 @x1py898 @x0py819)) @x1py898))))) :pattern ((HasTypeZ @x0py819 (Tm_arrow_581a99aa4b3c2c64b4b6501081582473 @x1py898))) )) :named Prims_interpretation_Tm_arrow_581a99aa4b3c2c64b4b6501081582473))
(assert (! (forall ((@x0py820 Term)(@x1py899 Term)) (! (and (or (not (HasTypeZ @x0py820 (Tm_arrow_756e7b0ac20279dfcded24e5a99a27b8 @x1py899))) (forall ((@x2py649 Term)(@x3py457 Term)) (! (or (HasType (ApplyTT (ApplyTT @x0py820 @x2py649) @x3py457) @x1py899) (not (HasType @x2py649 Tm_type)) (not (HasType @x3py457 @x2py649))) :pattern ((ApplyTT (ApplyTT @x0py820 @x2py649) @x3py457)) ))) (or (HasTypeZ @x0py820 (Tm_arrow_756e7b0ac20279dfcded24e5a99a27b8 @x1py899)) (and (HasType (@x2!776 @x1py899 @x0py820) Tm_type) (HasType (@x3!775 @x1py899 @x0py820) (@x2!776 @x1py899 @x0py820)) (not (HasType (ApplyTT (ApplyTT @x0py820 (@x2!776 @x1py899 @x0py820)) (@x3!775 @x1py899 @x0py820)) @x1py899))))) :pattern ((HasTypeZ @x0py820 (Tm_arrow_756e7b0ac20279dfcded24e5a99a27b8 @x1py899))) )) :named Prims_interpretation_Tm_arrow_756e7b0ac20279dfcded24e5a99a27b8))
(assert (! (forall ((@x0py821 Term)) (! (and (or (not (HasTypeZ @x0py821 Tm_arrow_30967c52768a603d18eb4835e5ba8f79)) (forall ((@x1py900 Term)(@x2py650 Term)) (! (or (HasType (ApplyTT (ApplyTT @x0py821 @x1py900) @x2py650) Tm_type) (not (HasType @x2py650 Tm_type)) (not (HasType @x1py900 Tm_type))) :pattern ((ApplyTT (ApplyTT @x0py821 @x1py900) @x2py650)) ))) (or (HasTypeZ @x0py821 Tm_arrow_30967c52768a603d18eb4835e5ba8f79) (and (HasType (@x1!778 @x0py821) Tm_type) (HasType (@x2!777 @x0py821) Tm_type) (not (HasType (ApplyTT (ApplyTT @x0py821 (@x1!778 @x0py821)) (@x2!777 @x0py821)) Tm_type))))) :pattern ((HasTypeZ @x0py821 Tm_arrow_30967c52768a603d18eb4835e5ba8f79)) )) :named Prims_interpretation_Tm_arrow_30967c52768a603d18eb4835e5ba8f79))
(assert (! (forall ((@x0py822 Term)) (! (and (or (not (HasTypeZ @x0py822 Tm_arrow_205942e024d5471c930d18c2ca3ae24b)) (forall ((@x1py901 Term)(@x2py651 Term)(@x3py458 Term)) (! (or (HasType (ApplyTT (ApplyTT (ApplyTT @x0py822 @x1py901) @x2py651) @x3py458) @x2py651) (not (HasType @x1py901 Tm_type)) (not (HasType @x3py458 @x1py901)) (not (HasType @x2py651 Tm_type))) :pattern ((ApplyTT (ApplyTT (ApplyTT @x0py822 @x1py901) @x2py651) @x3py458)) ))) (or (HasTypeZ @x0py822 Tm_arrow_205942e024d5471c930d18c2ca3ae24b) (and (HasType (@x1!781 @x0py822) Tm_type) (HasType (@x2!780 @x0py822) Tm_type) (HasType (@x3!779 @x0py822) (@x1!781 @x0py822)) (not (HasType (ApplyTT (ApplyTT (ApplyTT @x0py822 (@x1!781 @x0py822)) (@x2!780 @x0py822)) (@x3!779 @x0py822)) (@x2!780 @x0py822)))))) :pattern ((HasTypeZ @x0py822 Tm_arrow_205942e024d5471c930d18c2ca3ae24b)) )) :named Prims_interpretation_Tm_arrow_205942e024d5471c930d18c2ca3ae24b))
(assert (! (forall ((@x0py823 Term)(@x1py902 Term)) (! (and (or (not (HasTypeZ @x0py823 (Tm_arrow_21504714b743c269357a5ba76f64b480 @x1py902))) (forall ((@x2py652 Term)(@x3py459 Term)) (! (or (not (HasType @x2py652 Tm_type)) (not (HasType @x3py459 (Prims.pure_wp @x2py652))) (HasType (ApplyTT (ApplyTT @x0py823 @x2py652) @x3py459) @x1py902)) :pattern ((ApplyTT (ApplyTT @x0py823 @x2py652) @x3py459)) ))) (or (HasTypeZ @x0py823 (Tm_arrow_21504714b743c269357a5ba76f64b480 @x1py902)) (and (HasType (@x2!783 @x1py902 @x0py823) Tm_type) (HasType (@x3!782 @x1py902 @x0py823) (Prims.pure_wp (@x2!783 @x1py902 @x0py823))) (not (HasType (ApplyTT (ApplyTT @x0py823 (@x2!783 @x1py902 @x0py823)) (@x3!782 @x1py902 @x0py823)) @x1py902))))) :pattern ((HasTypeZ @x0py823 (Tm_arrow_21504714b743c269357a5ba76f64b480 @x1py902))) )) :named Prims_interpretation_Tm_arrow_21504714b743c269357a5ba76f64b480))
(assert (! (forall ((@x0py824 Term)(@x1py903 Term)(@x2py653 Term)) (! (and (or (not (HasTypeZ @x0py824 (Tm_arrow_a26b6f0ab7c6505137c6de4ce0011041 @x1py903 @x2py653))) (forall ((@x3py460 Term)) (! (or (not (HasType @x3py460 @x2py653)) (HasType (ApplyTT @x0py824 @x3py460) (ApplyTT @x1py903 @x3py460))) :pattern ((ApplyTT @x0py824 @x3py460)) ))) (or (HasTypeZ @x0py824 (Tm_arrow_a26b6f0ab7c6505137c6de4ce0011041 @x1py903 @x2py653)) (and (HasType (@x3!784 @x2py653 @x1py903 @x0py824) @x2py653) (not (HasType (ApplyTT @x0py824 (@x3!784 @x2py653 @x1py903 @x0py824)) (ApplyTT @x1py903 (@x3!784 @x2py653 @x1py903 @x0py824))))))) :pattern ((HasTypeZ @x0py824 (Tm_arrow_a26b6f0ab7c6505137c6de4ce0011041 @x1py903 @x2py653))) )) :named Prims_interpretation_Tm_arrow_a26b6f0ab7c6505137c6de4ce0011041))
(assert (! (forall ((@x0py825 Term)(@x1py904 Term)) (! (and (or (not (HasTypeZ @x0py825 (Tm_arrow_a85c3802d57513fa8b84a44441b2fe6a @x1py904))) (forall ((@x2py654 Term)(@x3py461 Term)(@x4py323 Term)) (! (or (HasType (ApplyTT (ApplyTT (ApplyTT @x0py825 @x2py654) @x3py461) @x4py323) @x1py904) (not (HasType @x2py654 Tm_type)) (not (HasType @x3py461 Tm_type)) (not (HasType @x4py323 (Prims.c_and @x2py654 @x3py461)))) :pattern ((ApplyTT (ApplyTT (ApplyTT @x0py825 @x2py654) @x3py461) @x4py323)) ))) (or (HasTypeZ @x0py825 (Tm_arrow_a85c3802d57513fa8b84a44441b2fe6a @x1py904)) (and (HasType (@x2!787 @x1py904 @x0py825) Tm_type) (HasType (@x3!786 @x1py904 @x0py825) Tm_type) (HasType (@x4!785 @x1py904 @x0py825) (Prims.c_and (@x2!787 @x1py904 @x0py825) (@x3!786 @x1py904 @x0py825))) (not (HasType (ApplyTT (ApplyTT (ApplyTT @x0py825 (@x2!787 @x1py904 @x0py825)) (@x3!786 @x1py904 @x0py825)) (@x4!785 @x1py904 @x0py825)) @x1py904))))) :pattern ((HasTypeZ @x0py825 (Tm_arrow_a85c3802d57513fa8b84a44441b2fe6a @x1py904))) )) :named Prims_interpretation_Tm_arrow_a85c3802d57513fa8b84a44441b2fe6a))
(assert (! (forall ((@x0py826 Term)) (! (and (or (not (HasTypeZ @x0py826 Tm_arrow_a704b31706c9f8227ffcec83d74a9b31)) (forall ((@x1py905 Term)(@x2py655 Term)) (! (or (not (HasType @x1py905 Tm_type)) (not (HasType @x2py655 (Prims_Tm_refine_7aac12c24449a22c34d98a0ea8ed4a32 @x1py905))) (HasType (ApplyTT (ApplyTT @x0py826 @x1py905) @x2py655) (Prims.list @x1py905))) :pattern ((ApplyTT (ApplyTT @x0py826 @x1py905) @x2py655)) ))) (or (HasTypeZ @x0py826 Tm_arrow_a704b31706c9f8227ffcec83d74a9b31) (and (HasType (@x1!789 @x0py826) Tm_type) (HasType (@x2!788 @x0py826) (Prims_Tm_refine_7aac12c24449a22c34d98a0ea8ed4a32 (@x1!789 @x0py826))) (not (HasType (ApplyTT (ApplyTT @x0py826 (@x1!789 @x0py826)) (@x2!788 @x0py826)) (Prims.list (@x1!789 @x0py826))))))) :pattern ((HasTypeZ @x0py826 Tm_arrow_a704b31706c9f8227ffcec83d74a9b31)) )) :named Prims_interpretation_Tm_arrow_a704b31706c9f8227ffcec83d74a9b31))
(assert (! (forall ((@x0py827 Term)) (! (and (or (not (HasTypeZ @x0py827 Tm_arrow_b6d5b453dd814b79a1d29a5f85b3161f)) (forall ((@x1py906 Term)(@x2py656 Term)(@x3py462 Term)) (! (or (HasType (ApplyTT (ApplyTT (ApplyTT @x0py827 @x1py906) @x2py656) @x3py462) @x2py656) (not (HasType @x2py656 Tm_type)) (not (HasType @x1py906 Tm_type)) (not (HasType @x3py462 (Prims.c_and @x1py906 @x2py656)))) :pattern ((ApplyTT (ApplyTT (ApplyTT @x0py827 @x1py906) @x2py656) @x3py462)) ))) (or (HasTypeZ @x0py827 Tm_arrow_b6d5b453dd814b79a1d29a5f85b3161f) (and (HasType (@x1!792 @x0py827) Tm_type) (HasType (@x2!791 @x0py827) Tm_type) (HasType (@x3!790 @x0py827) (Prims.c_and (@x1!792 @x0py827) (@x2!791 @x0py827))) (not (HasType (ApplyTT (ApplyTT (ApplyTT @x0py827 (@x1!792 @x0py827)) (@x2!791 @x0py827)) (@x3!790 @x0py827)) (@x2!791 @x0py827)))))) :pattern ((HasTypeZ @x0py827 Tm_arrow_b6d5b453dd814b79a1d29a5f85b3161f)) )) :named Prims_interpretation_Tm_arrow_b6d5b453dd814b79a1d29a5f85b3161f))
(assert (! (forall ((@x0py828 Term)) (! (and (or (not (HasTypeZ @x0py828 Tm_arrow_b9e392cd340cf43078e3b599d9c5d1b3)) (forall ((@x1py907 Term)(@x2py657 Term)(@x3py463 Term)) (! (or (HasType (ApplyTT (ApplyTT (ApplyTT @x0py828 @x1py907) @x2py657) @x3py463) (Prims.c_or @x1py907 @x2py657)) (not (HasType @x2py657 Tm_type)) (not (HasType @x1py907 Tm_type)) (not (HasType @x3py463 @x1py907))) :pattern ((ApplyTT (ApplyTT (ApplyTT @x0py828 @x1py907) @x2py657) @x3py463)) ))) (or (HasTypeZ @x0py828 Tm_arrow_b9e392cd340cf43078e3b599d9c5d1b3) (and (HasType (@x1!795 @x0py828) Tm_type) (HasType (@x2!794 @x0py828) Tm_type) (HasType (@x3!793 @x0py828) (@x1!795 @x0py828)) (not (HasType (ApplyTT (ApplyTT (ApplyTT @x0py828 (@x1!795 @x0py828)) (@x2!794 @x0py828)) (@x3!793 @x0py828)) (Prims.c_or (@x1!795 @x0py828) (@x2!794 @x0py828))))))) :pattern ((HasTypeZ @x0py828 Tm_arrow_b9e392cd340cf43078e3b599d9c5d1b3)) )) :named Prims_interpretation_Tm_arrow_b9e392cd340cf43078e3b599d9c5d1b3))
(assert (! (forall ((@x0py829 Term)(@x1py908 Term)) (! (and (or (not (HasTypeZ @x0py829 (Tm_arrow_bc73fd7342ebe29d8df19539096373ef @x1py908))) (forall ((@x2py658 Term)(@x3py464 Term)(@x4py324 Term)(@x5py248 Term)) (! (or (HasType (ApplyTT (ApplyTT (ApplyTT (ApplyTT @x0py829 @x2py658) @x3py464) @x4py324) @x5py248) @x1py908) (not (HasType @x3py464 @x2py658)) (not (HasType @x2py658 Tm_type)) (not (HasType @x4py324 @x2py658)) (not (HasType @x5py248 (Prims.equals @x2py658 @x3py464 @x4py324)))) :pattern ((ApplyTT (ApplyTT (ApplyTT (ApplyTT @x0py829 @x2py658) @x3py464) @x4py324) @x5py248)) ))) (or (HasTypeZ @x0py829 (Tm_arrow_bc73fd7342ebe29d8df19539096373ef @x1py908)) (and (HasType (@x2!799 @x1py908 @x0py829) Tm_type) (HasType (@x3!798 @x1py908 @x0py829) (@x2!799 @x1py908 @x0py829)) (HasType (@x4!797 @x1py908 @x0py829) (@x2!799 @x1py908 @x0py829)) (HasType (@x5!796 @x1py908 @x0py829) (Prims.equals (@x2!799 @x1py908 @x0py829) (@x3!798 @x1py908 @x0py829) (@x4!797 @x1py908 @x0py829))) (not (HasType (ApplyTT (ApplyTT (ApplyTT (ApplyTT @x0py829 (@x2!799 @x1py908 @x0py829)) (@x3!798 @x1py908 @x0py829)) (@x4!797 @x1py908 @x0py829)) (@x5!796 @x1py908 @x0py829)) @x1py908))))) :pattern ((HasTypeZ @x0py829 (Tm_arrow_bc73fd7342ebe29d8df19539096373ef @x1py908))) )) :named Prims_interpretation_Tm_arrow_bc73fd7342ebe29d8df19539096373ef))
(assert (! (forall ((@x0py830 Term)) (! (and (or (not (HasTypeZ @x0py830 Tm_arrow_bdff7ac4f38fee2d6889d7b58ec10beb)) (forall ((@x1py909 Term)(@x2py659 Term)) (! (or (HasType (ApplyTT (ApplyTT @x0py830 @x1py909) @x2py659) (Prims.h_equals @x1py909 @x2py659 @x1py909 @x2py659)) (not (HasType @x1py909 Tm_type)) (not (HasType @x2py659 @x1py909))) :pattern ((ApplyTT (ApplyTT @x0py830 @x1py909) @x2py659)) ))) (or (HasTypeZ @x0py830 Tm_arrow_bdff7ac4f38fee2d6889d7b58ec10beb) (and (HasType (@x1!801 @x0py830) Tm_type) (HasType (@x2!800 @x0py830) (@x1!801 @x0py830)) (not (HasType (ApplyTT (ApplyTT @x0py830 (@x1!801 @x0py830)) (@x2!800 @x0py830)) (Prims.h_equals (@x1!801 @x0py830) (@x2!800 @x0py830) (@x1!801 @x0py830) (@x2!800 @x0py830))))))) :pattern ((HasTypeZ @x0py830 Tm_arrow_bdff7ac4f38fee2d6889d7b58ec10beb)) )) :named Prims_interpretation_Tm_arrow_bdff7ac4f38fee2d6889d7b58ec10beb))
(assert (! (forall ((@x0py831 Term)) (! (and (or (not (HasTypeZ @x0py831 Tm_arrow_c69c7e036a278fd3b0fe0b71a945feca)) (forall ((@x1py910 Term)(@x2py660 Term)(@x3py465 Term)) (! (or (HasType (ApplyTT (ApplyTT (ApplyTT @x0py831 @x1py910) @x2py660) @x3py465) @x2py660) (not (HasType @x1py910 Tm_type)) (not (HasType @x2py660 Tm_type)) (not (HasType @x3py465 (Prims_Tm_refine_95f078f2b9cfbd740f9afd162814a526 @x1py910 @x2py660)))) :pattern ((ApplyTT (ApplyTT (ApplyTT @x0py831 @x1py910) @x2py660) @x3py465)) ))) (or (HasTypeZ @x0py831 Tm_arrow_c69c7e036a278fd3b0fe0b71a945feca) (and (HasType (@x1!804 @x0py831) Tm_type) (HasType (@x2!803 @x0py831) Tm_type) (HasType (@x3!802 @x0py831) (Prims_Tm_refine_95f078f2b9cfbd740f9afd162814a526 (@x1!804 @x0py831) (@x2!803 @x0py831))) (not (HasType (ApplyTT (ApplyTT (ApplyTT @x0py831 (@x1!804 @x0py831)) (@x2!803 @x0py831)) (@x3!802 @x0py831)) (@x2!803 @x0py831)))))) :pattern ((HasTypeZ @x0py831 Tm_arrow_c69c7e036a278fd3b0fe0b71a945feca)) )) :named Prims_interpretation_Tm_arrow_c69c7e036a278fd3b0fe0b71a945feca))
(assert (! (forall ((@x0py832 Term)) (! (and (or (not (HasTypeZ @x0py832 Tm_arrow_c195f8405ecbc84a46f4e174b8827a84)) (forall ((@x1py911 Term)(@x2py661 Term)(@x3py466 Term)(@x4py325 Term)) (! (or (not (HasType @x1py911 Tm_type)) (not (HasType @x3py466 @x1py911)) (not (HasType @x4py325 @x2py661)) (HasType (ApplyTT (ApplyTT (ApplyTT (ApplyTT @x0py832 @x1py911) @x2py661) @x3py466) @x4py325) (Prims.c_and @x1py911 @x2py661)) (not (HasType @x2py661 Tm_type))) :pattern ((ApplyTT (ApplyTT (ApplyTT (ApplyTT @x0py832 @x1py911) @x2py661) @x3py466) @x4py325)) ))) (or (HasTypeZ @x0py832 Tm_arrow_c195f8405ecbc84a46f4e174b8827a84) (and (HasType (@x1!808 @x0py832) Tm_type) (HasType (@x2!807 @x0py832) Tm_type) (HasType (@x3!806 @x0py832) (@x1!808 @x0py832)) (HasType (@x4!805 @x0py832) (@x2!807 @x0py832)) (not (HasType (ApplyTT (ApplyTT (ApplyTT (ApplyTT @x0py832 (@x1!808 @x0py832)) (@x2!807 @x0py832)) (@x3!806 @x0py832)) (@x4!805 @x0py832)) (Prims.c_and (@x1!808 @x0py832) (@x2!807 @x0py832))))))) :pattern ((HasTypeZ @x0py832 Tm_arrow_c195f8405ecbc84a46f4e174b8827a84)) )) :named Prims_interpretation_Tm_arrow_c195f8405ecbc84a46f4e174b8827a84))
(assert (! (forall ((@x0py833 Term)) (! (and (or (not (HasTypeZ @x0py833 Tm_arrow_ccf8afc309a68a850ac71365261b9fb7)) (forall ((@x1py912 Term)(@x2py662 Term)(@x3py467 Term)) (! (or (HasType (ApplyTT (ApplyTT (ApplyTT @x0py833 @x1py912) @x2py662) @x3py467) (Prims.c_or @x1py912 @x2py662)) (not (HasType @x2py662 Tm_type)) (not (HasType @x3py467 @x2py662)) (not (HasType @x1py912 Tm_type))) :pattern ((ApplyTT (ApplyTT (ApplyTT @x0py833 @x1py912) @x2py662) @x3py467)) ))) (or (HasTypeZ @x0py833 Tm_arrow_ccf8afc309a68a850ac71365261b9fb7) (and (HasType (@x1!811 @x0py833) Tm_type) (HasType (@x2!810 @x0py833) Tm_type) (HasType (@x3!809 @x0py833) (@x2!810 @x0py833)) (not (HasType (ApplyTT (ApplyTT (ApplyTT @x0py833 (@x1!811 @x0py833)) (@x2!810 @x0py833)) (@x3!809 @x0py833)) (Prims.c_or (@x1!811 @x0py833) (@x2!810 @x0py833))))))) :pattern ((HasTypeZ @x0py833 Tm_arrow_ccf8afc309a68a850ac71365261b9fb7)) )) :named Prims_interpretation_Tm_arrow_ccf8afc309a68a850ac71365261b9fb7))
(assert (! (forall ((@x0py834 Term)) (! (and (or (not (HasTypeZ @x0py834 Tm_arrow_e9f6c89da04213bf160cc257e258081c)) (forall ((@x1py913 Term)(@x2py663 Term)(@x3py468 Term)) (! (or (not (HasType @x1py913 Tm_type)) (HasType (ApplyTT (ApplyTT (ApplyTT @x0py834 @x1py913) @x2py663) @x3py468) (Prims.list @x1py913)) (not (HasType @x3py468 (Prims.list @x1py913))) (not (HasType @x2py663 @x1py913))) :pattern ((ApplyTT (ApplyTT (ApplyTT @x0py834 @x1py913) @x2py663) @x3py468)) ))) (or (HasTypeZ @x0py834 Tm_arrow_e9f6c89da04213bf160cc257e258081c) (and (HasType (@x1!814 @x0py834) Tm_type) (HasType (@x2!813 @x0py834) (@x1!814 @x0py834)) (HasType (@x3!812 @x0py834) (Prims.list (@x1!814 @x0py834))) (not (HasType (ApplyTT (ApplyTT (ApplyTT @x0py834 (@x1!814 @x0py834)) (@x2!813 @x0py834)) (@x3!812 @x0py834)) (Prims.list (@x1!814 @x0py834))))))) :pattern ((HasTypeZ @x0py834 Tm_arrow_e9f6c89da04213bf160cc257e258081c)) )) :named Prims_interpretation_Tm_arrow_e9f6c89da04213bf160cc257e258081c))
(assert (! (forall ((@x0py835 Term)) (! (and (or (not (HasTypeZ @x0py835 Tm_arrow_e23d661799b310305387f8ba2c10acb1)) (forall ((@x1py914 Term)(@x2py664 Term)(@x3py469 Term)(@x4py326 Term)) (! (or (HasType (ApplyTT (ApplyTT (ApplyTT (ApplyTT @x0py835 @x1py914) @x2py664) @x3py469) @x4py326) (Prims.dtuple2 @x1py914 @x2py664)) (not (HasType @x2py664 (Tm_arrow_e06752ba152f81447b312efcdf8f0e23 @x1py914))) (not (HasType @x3py469 @x1py914)) (not (HasType @x1py914 Tm_type)) (not (HasType @x4py326 (ApplyTT @x2py664 @x3py469)))) :pattern ((ApplyTT (ApplyTT (ApplyTT (ApplyTT @x0py835 @x1py914) @x2py664) @x3py469) @x4py326)) ))) (or (HasTypeZ @x0py835 Tm_arrow_e23d661799b310305387f8ba2c10acb1) (and (HasType (@x1!818 @x0py835) Tm_type) (HasType (@x2!817 @x0py835) (Tm_arrow_e06752ba152f81447b312efcdf8f0e23 (@x1!818 @x0py835))) (HasType (@x3!816 @x0py835) (@x1!818 @x0py835)) (HasType (@x4!815 @x0py835) (ApplyTT (@x2!817 @x0py835) (@x3!816 @x0py835))) (not (HasType (ApplyTT (ApplyTT (ApplyTT (ApplyTT @x0py835 (@x1!818 @x0py835)) (@x2!817 @x0py835)) (@x3!816 @x0py835)) (@x4!815 @x0py835)) (Prims.dtuple2 (@x1!818 @x0py835) (@x2!817 @x0py835))))))) :pattern ((HasTypeZ @x0py835 Tm_arrow_e23d661799b310305387f8ba2c10acb1)) )) :named Prims_interpretation_Tm_arrow_e23d661799b310305387f8ba2c10acb1))
(assert (! (forall ((@x0py836 Term)(@x1py915 Term)) (! (and (or (not (HasTypeZ @x0py836 (Tm_arrow_e55fd27cdca75961dfd00ca7901ce64a @x1py915))) (forall ((@x2py665 Term)(@x3py470 Term)(@x4py327 Term)(@x5py249 Term)(@x6py166 Term)) (! (or (HasType (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT @x0py836 @x2py665) @x3py470) @x4py327) @x5py249) @x6py166) @x1py915) (not (HasType @x4py327 Tm_type)) (not (HasType @x6py166 (Prims.h_equals @x2py665 @x3py470 @x4py327 @x5py249))) (not (HasType @x5py249 @x4py327)) (not (HasType @x2py665 Tm_type)) (not (HasType @x3py470 @x2py665))) :pattern ((ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT @x0py836 @x2py665) @x3py470) @x4py327) @x5py249) @x6py166)) ))) (or (HasTypeZ @x0py836 (Tm_arrow_e55fd27cdca75961dfd00ca7901ce64a @x1py915)) (and (HasType (@x2!823 @x1py915 @x0py836) Tm_type) (HasType (@x3!822 @x1py915 @x0py836) (@x2!823 @x1py915 @x0py836)) (HasType (@x4!821 @x1py915 @x0py836) Tm_type) (HasType (@x5!820 @x1py915 @x0py836) (@x4!821 @x1py915 @x0py836)) (HasType (@x6!819 @x1py915 @x0py836) (Prims.h_equals (@x2!823 @x1py915 @x0py836) (@x3!822 @x1py915 @x0py836) (@x4!821 @x1py915 @x0py836) (@x5!820 @x1py915 @x0py836))) (not (HasType (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT @x0py836 (@x2!823 @x1py915 @x0py836)) (@x3!822 @x1py915 @x0py836)) (@x4!821 @x1py915 @x0py836)) (@x5!820 @x1py915 @x0py836)) (@x6!819 @x1py915 @x0py836)) @x1py915))))) :pattern ((HasTypeZ @x0py836 (Tm_arrow_e55fd27cdca75961dfd00ca7901ce64a @x1py915))) )) :named Prims_interpretation_Tm_arrow_e55fd27cdca75961dfd00ca7901ce64a))
(assert (! (forall ((@x0py837 Term)(@x1py916 Term)) (! (and (or (not (HasTypeZ @x0py837 (Tm_arrow_e06752ba152f81447b312efcdf8f0e23 @x1py916))) (forall ((@x2py666 Term)) (! (or (not (HasType @x2py666 @x1py916)) (HasType (ApplyTT @x0py837 @x2py666) Tm_type)) :pattern ((ApplyTT @x0py837 @x2py666)) ))) (or (HasTypeZ @x0py837 (Tm_arrow_e06752ba152f81447b312efcdf8f0e23 @x1py916)) (and (HasType (@x2!824 @x1py916 @x0py837) @x1py916) (not (HasType (ApplyTT @x0py837 (@x2!824 @x1py916 @x0py837)) Tm_type))))) :pattern ((HasTypeZ @x0py837 (Tm_arrow_e06752ba152f81447b312efcdf8f0e23 @x1py916))) )) :named Prims_interpretation_Tm_arrow_e06752ba152f81447b312efcdf8f0e23))
(assert (! (forall ((@x0py838 Term)(@x1py917 Term)(@x2py667 Term)) (! (and (or (not (HasTypeZ @x0py838 (Tm_arrow_e9338c9e176627b4318e37ce7ca5332a @x1py917 @x2py667))) (forall ((@x3py471 Term)) (! (or (not (HasType @x3py471 (Prims_Tm_refine_8d65e998a07dd53ec478e27017d9dba5 @x2py667 @x1py917))) (HasType (ApplyTT @x0py838 @x3py471) Tm_type)) :pattern ((ApplyTT @x0py838 @x3py471)) ))) (or (HasTypeZ @x0py838 (Tm_arrow_e9338c9e176627b4318e37ce7ca5332a @x1py917 @x2py667)) (and (HasType (@x3!825 @x2py667 @x1py917 @x0py838) (Prims_Tm_refine_8d65e998a07dd53ec478e27017d9dba5 @x2py667 @x1py917)) (not (HasType (ApplyTT @x0py838 (@x3!825 @x2py667 @x1py917 @x0py838)) Tm_type))))) :pattern ((HasTypeZ @x0py838 (Tm_arrow_e9338c9e176627b4318e37ce7ca5332a @x1py917 @x2py667))) )) :named Prims_interpretation_Tm_arrow_e9338c9e176627b4318e37ce7ca5332a))
(assert (! (forall ((@x0py839 Term)) (! (and (or (not (HasTypeZ @x0py839 Tm_arrow_ec4aa512bc54da67a0356075af124e44)) (forall ((@x1py918 Term)(@x2py668 Term)(@x3py472 Term)) (! (or (HasType (ApplyTT (ApplyTT (ApplyTT @x0py839 @x1py918) @x2py668) @x3py472) @x1py918) (not (HasType @x2py668 (Tm_arrow_e06752ba152f81447b312efcdf8f0e23 @x1py918))) (not (HasType @x1py918 Tm_type)) (not (HasType @x3py472 (Prims.dtuple2 @x1py918 @x2py668)))) :pattern ((ApplyTT (ApplyTT (ApplyTT @x0py839 @x1py918) @x2py668) @x3py472)) ))) (or (HasTypeZ @x0py839 Tm_arrow_ec4aa512bc54da67a0356075af124e44) (and (HasType (@x1!828 @x0py839) Tm_type) (HasType (@x2!827 @x0py839) (Tm_arrow_e06752ba152f81447b312efcdf8f0e23 (@x1!828 @x0py839))) (HasType (@x3!826 @x0py839) (Prims.dtuple2 (@x1!828 @x0py839) (@x2!827 @x0py839))) (not (HasType (ApplyTT (ApplyTT (ApplyTT @x0py839 (@x1!828 @x0py839)) (@x2!827 @x0py839)) (@x3!826 @x0py839)) (@x1!828 @x0py839)))))) :pattern ((HasTypeZ @x0py839 Tm_arrow_ec4aa512bc54da67a0356075af124e44)) )) :named Prims_interpretation_Tm_arrow_ec4aa512bc54da67a0356075af124e44))
(assert (! (forall ((@x0py840 Term)(@x1py919 Term)(@x2py669 Term)) (! (and (or (not (HasTypeZ @x0py840 (Tm_arrow_efa04d9e9741fb25eada2b1d426efe29 @x1py919 @x2py669))) (forall ((@x3py473 Term)) (! (or (not (HasType @x3py473 (Prims.pure_post @x2py669))) (HasType (ApplyTT @x0py840 @x3py473) @x1py919)) :pattern ((ApplyTT @x0py840 @x3py473)) ))) (or (HasTypeZ @x0py840 (Tm_arrow_efa04d9e9741fb25eada2b1d426efe29 @x1py919 @x2py669)) (and (HasType (@x3!829 @x2py669 @x1py919 @x0py840) (Prims.pure_post @x2py669)) (not (HasType (ApplyTT @x0py840 (@x3!829 @x2py669 @x1py919 @x0py840)) @x1py919))))) :pattern ((HasTypeZ @x0py840 (Tm_arrow_efa04d9e9741fb25eada2b1d426efe29 @x1py919 @x2py669))) )) :named Prims_interpretation_Tm_arrow_efa04d9e9741fb25eada2b1d426efe29))
(assert (! (forall ((@x0py841 Term)(@x1py920 Term)) (! (and (or (not (HasTypeZ @x0py841 (Tm_arrow_f33ea54607e6f443deeaa74ebd418449 @x1py920))) (forall ((@x2py670 Term)(@x3py474 Term)(@x4py328 Term)) (! (or (HasType (ApplyTT (ApplyTT (ApplyTT @x0py841 @x2py670) @x3py474) @x4py328) @x1py920) (not (HasType @x2py670 Tm_type)) (not (HasType @x3py474 @x2py670)) (not (HasType @x4py328 @x2py670))) :pattern ((ApplyTT (ApplyTT (ApplyTT @x0py841 @x2py670) @x3py474) @x4py328)) ))) (or (HasTypeZ @x0py841 (Tm_arrow_f33ea54607e6f443deeaa74ebd418449 @x1py920)) (and (HasType (@x2!832 @x1py920 @x0py841) Tm_type) (HasType (@x3!831 @x1py920 @x0py841) (@x2!832 @x1py920 @x0py841)) (HasType (@x4!830 @x1py920 @x0py841) (@x2!832 @x1py920 @x0py841)) (not (HasType (ApplyTT (ApplyTT (ApplyTT @x0py841 (@x2!832 @x1py920 @x0py841)) (@x3!831 @x1py920 @x0py841)) (@x4!830 @x1py920 @x0py841)) @x1py920))))) :pattern ((HasTypeZ @x0py841 (Tm_arrow_f33ea54607e6f443deeaa74ebd418449 @x1py920))) )) :named Prims_interpretation_Tm_arrow_f33ea54607e6f443deeaa74ebd418449))
(assert (! (forall ((@x0py842 Term)(@x1py921 Term)) (! (and (or (not (HasTypeZ @x0py842 (Tm_arrow_f82c3fb9ac6610efb97620a59b378092 @x1py921))) (forall ((@x2py671 Term)) (! (or (not (HasType @x2py671 @x1py921)) (HasType (ApplyTT @x0py842 @x2py671) @x1py921)) :pattern ((ApplyTT @x0py842 @x2py671)) ))) (or (HasTypeZ @x0py842 (Tm_arrow_f82c3fb9ac6610efb97620a59b378092 @x1py921)) (and (HasType (@x2!833 @x1py921 @x0py842) @x1py921) (not (HasType (ApplyTT @x0py842 (@x2!833 @x1py921 @x0py842)) @x1py921))))) :pattern ((HasTypeZ @x0py842 (Tm_arrow_f82c3fb9ac6610efb97620a59b378092 @x1py921))) )) :named Prims_interpretation_Tm_arrow_f82c3fb9ac6610efb97620a59b378092))
(assert (! (forall ((@x0py843 Term)) (! (and (or (not (HasTypeZ @x0py843 Tm_arrow_fa4e3ee4a3dfa402363cd0693fcbfca4)) (forall ((@x1py922 Term)(@x2py672 Term)) (! (or (HasType (ApplyTT (ApplyTT @x0py843 @x1py922) @x2py672) @x1py922) (not (HasType @x1py922 Tm_type)) (not (HasType @x2py672 @x1py922))) :pattern ((ApplyTT (ApplyTT @x0py843 @x1py922) @x2py672)) ))) (or (HasTypeZ @x0py843 Tm_arrow_fa4e3ee4a3dfa402363cd0693fcbfca4) (and (HasType (@x1!835 @x0py843) Tm_type) (HasType (@x2!834 @x0py843) (@x1!835 @x0py843)) (not (HasType (ApplyTT (ApplyTT @x0py843 (@x1!835 @x0py843)) (@x2!834 @x0py843)) (@x1!835 @x0py843)))))) :pattern ((HasTypeZ @x0py843 Tm_arrow_fa4e3ee4a3dfa402363cd0693fcbfca4)) )) :named Prims_interpretation_Tm_arrow_fa4e3ee4a3dfa402363cd0693fcbfca4))
(assert (! (forall ((@x0py844 Term)) (! (and (or (not (HasTypeZ @x0py844 Tm_arrow_fb8e9788d8e1ad00d517d818391a5552)) (forall ((@x1py923 Term)(@x2py673 Term)) (! (or (HasType (ApplyTT (ApplyTT @x0py844 @x1py923) @x2py673) (Prims.equals @x1py923 @x2py673 @x2py673)) (not (HasType @x1py923 Tm_type)) (not (HasType @x2py673 @x1py923))) :pattern ((ApplyTT (ApplyTT @x0py844 @x1py923) @x2py673)) ))) (or (HasTypeZ @x0py844 Tm_arrow_fb8e9788d8e1ad00d517d818391a5552) (and (HasType (@x1!837 @x0py844) Tm_type) (HasType (@x2!836 @x0py844) (@x1!837 @x0py844)) (not (HasType (ApplyTT (ApplyTT @x0py844 (@x1!837 @x0py844)) (@x2!836 @x0py844)) (Prims.equals (@x1!837 @x0py844) (@x2!836 @x0py844) (@x2!836 @x0py844))))))) :pattern ((HasTypeZ @x0py844 Tm_arrow_fb8e9788d8e1ad00d517d818391a5552)) )) :named Prims_interpretation_Tm_arrow_fb8e9788d8e1ad00d517d818391a5552))
(assert (! (HasType Non_total_Tm_arrow_634 Tm_type) :named Prims_non_total_function_typing_Non_total_Tm_arrow_634))
(assert (! (HasType Non_total_Tm_arrow_640 Tm_type) :named Prims_non_total_function_typing_Non_total_Tm_arrow_640))
(assert (! (HasType Non_total_Tm_arrow_642 Tm_type) :named Prims_non_total_function_typing_Non_total_Tm_arrow_642))
(assert (! (HasType Non_total_Tm_arrow_645 Tm_type) :named Prims_non_total_function_typing_Non_total_Tm_arrow_645))
(assert (! (HasType Non_total_Tm_arrow_647 Tm_type) :named Prims_non_total_function_typing_Non_total_Tm_arrow_647))
(assert (! (forall ((@u0py257 Fuel)(@x1py924 Term)) (! (or (is-Tm_arrow (PreType @x1py924)) (not (HasTypeFuel @u0py257 @x1py924 Non_total_Tm_arrow_634))) :pattern ((HasTypeFuel @u0py257 @x1py924 Non_total_Tm_arrow_634)) )) :named Prims_pre_typing_Non_total_Tm_arrow_634))
(assert (! (forall ((@u0py258 Fuel)(@x1py925 Term)) (! (or (is-Tm_arrow (PreType @x1py925)) (not (HasTypeFuel @u0py258 @x1py925 Non_total_Tm_arrow_640))) :pattern ((HasTypeFuel @u0py258 @x1py925 Non_total_Tm_arrow_640)) )) :named Prims_pre_typing_Non_total_Tm_arrow_640))
(assert (! (forall ((@u0py259 Fuel)(@x1py926 Term)) (! (or (is-Tm_arrow (PreType @x1py926)) (not (HasTypeFuel @u0py259 @x1py926 Non_total_Tm_arrow_642))) :pattern ((HasTypeFuel @u0py259 @x1py926 Non_total_Tm_arrow_642)) )) :named Prims_pre_typing_Non_total_Tm_arrow_642))
(assert (! (forall ((@u0py260 Fuel)(@x1py927 Term)) (! (or (is-Tm_arrow (PreType @x1py927)) (not (HasTypeFuel @u0py260 @x1py927 Non_total_Tm_arrow_645))) :pattern ((HasTypeFuel @u0py260 @x1py927 Non_total_Tm_arrow_645)) )) :named Prims_pre_typing_Non_total_Tm_arrow_645))
(assert (! (forall ((@u0py261 Fuel)(@x1py928 Term)) (! (or (is-Tm_arrow (PreType @x1py928)) (not (HasTypeFuel @u0py261 @x1py928 Non_total_Tm_arrow_647))) :pattern ((HasTypeFuel @u0py261 @x1py928 Non_total_Tm_arrow_647)) )) :named Prims_pre_typing_Non_total_Tm_arrow_647))
(assert (! (forall ((@u0py262 Fuel)(@x1py929 Term)(@x2py674 Term)(@x3py475 Term)(@x4py329 Term)) (! (or (is-Tm_arrow (PreType @x1py929)) (not (HasTypeFuel @u0py262 @x1py929 (Tm_arrow_1a6b9de3491ece0b8961a8acbb38411b @x2py674 @x3py475 @x4py329)))) :pattern ((HasTypeFuel @u0py262 @x1py929 (Tm_arrow_1a6b9de3491ece0b8961a8acbb38411b @x2py674 @x3py475 @x4py329))) )) :named Prims_pre_typing_Tm_arrow_1a6b9de3491ece0b8961a8acbb38411b))
(assert (! (forall ((@u0py263 Fuel)(@x1py930 Term)(@x2py675 Term)) (! (or (is-Tm_arrow (PreType @x1py930)) (not (HasTypeFuel @u0py263 @x1py930 (Tm_arrow_1c4871de840a52d38a5b65a5ad4e97ea @x2py675)))) :pattern ((HasTypeFuel @u0py263 @x1py930 (Tm_arrow_1c4871de840a52d38a5b65a5ad4e97ea @x2py675))) )) :named Prims_pre_typing_Tm_arrow_1c4871de840a52d38a5b65a5ad4e97ea))
(assert (! (forall ((@u0py264 Fuel)(@x1py931 Term)) (! (or (is-Tm_arrow (PreType @x1py931)) (not (HasTypeFuel @u0py264 @x1py931 Tm_arrow_2e5fda2477c3f2ade2b68a9685bf6393))) :pattern ((HasTypeFuel @u0py264 @x1py931 Tm_arrow_2e5fda2477c3f2ade2b68a9685bf6393)) )) :named Prims_pre_typing_Tm_arrow_2e5fda2477c3f2ade2b68a9685bf6393))
(assert (! (forall ((@u0py265 Fuel)(@x1py932 Term)) (! (or (is-Tm_arrow (PreType @x1py932)) (not (HasTypeFuel @u0py265 @x1py932 Tm_arrow_3ca80ddba151a71b9c9aa6e8efea65cd))) :pattern ((HasTypeFuel @u0py265 @x1py932 Tm_arrow_3ca80ddba151a71b9c9aa6e8efea65cd)) )) :named Prims_pre_typing_Tm_arrow_3ca80ddba151a71b9c9aa6e8efea65cd))
(assert (! (forall ((@u0py266 Fuel)(@x1py933 Term)(@x2py676 Term)) (! (or (is-Tm_arrow (PreType @x1py933)) (not (HasTypeFuel @u0py266 @x1py933 (Tm_arrow_03fd83481846190115df092b2a491354 @x2py676)))) :pattern ((HasTypeFuel @u0py266 @x1py933 (Tm_arrow_03fd83481846190115df092b2a491354 @x2py676))) )) :named Prims_pre_typing_Tm_arrow_03fd83481846190115df092b2a491354))
(assert (! (forall ((@u0py267 Fuel)(@x1py934 Term)) (! (or (is-Tm_arrow (PreType @x1py934)) (not (HasTypeFuel @u0py267 @x1py934 Tm_arrow_7c761265d6fe943628c96343fc66d1a0))) :pattern ((HasTypeFuel @u0py267 @x1py934 Tm_arrow_7c761265d6fe943628c96343fc66d1a0)) )) :named Prims_pre_typing_Tm_arrow_7c761265d6fe943628c96343fc66d1a0))
(assert (! (forall ((@u0py268 Fuel)(@x1py935 Term)(@x2py677 Term)) (! (or (is-Tm_arrow (PreType @x1py935)) (not (HasTypeFuel @u0py268 @x1py935 (Tm_arrow_7df6282d3b185c0f02eb10c3e19fe2e1 @x2py677)))) :pattern ((HasTypeFuel @u0py268 @x1py935 (Tm_arrow_7df6282d3b185c0f02eb10c3e19fe2e1 @x2py677))) )) :named Prims_pre_typing_Tm_arrow_7df6282d3b185c0f02eb10c3e19fe2e1))
(assert (! (forall ((@u0py269 Fuel)(@x1py936 Term)) (! (or (is-Tm_arrow (PreType @x1py936)) (not (HasTypeFuel @u0py269 @x1py936 Tm_arrow_7e78dbd6763d8fddb37f1e732bda927c))) :pattern ((HasTypeFuel @u0py269 @x1py936 Tm_arrow_7e78dbd6763d8fddb37f1e732bda927c)) )) :named Prims_pre_typing_Tm_arrow_7e78dbd6763d8fddb37f1e732bda927c))
(assert (! (forall ((@u0py270 Fuel)(@x1py937 Term)(@x2py678 Term)(@x3py476 Term)) (! (or (is-Tm_arrow (PreType @x1py937)) (not (HasTypeFuel @u0py270 @x1py937 (Tm_arrow_9cb3c953faf527c316d427b2ce8bd81b @x2py678 @x3py476)))) :pattern ((HasTypeFuel @u0py270 @x1py937 (Tm_arrow_9cb3c953faf527c316d427b2ce8bd81b @x2py678 @x3py476))) )) :named Prims_pre_typing_Tm_arrow_9cb3c953faf527c316d427b2ce8bd81b))
(assert (! (forall ((@u0py271 Fuel)(@x1py938 Term)) (! (or (is-Tm_arrow (PreType @x1py938)) (not (HasTypeFuel @u0py271 @x1py938 Tm_arrow_9f8b5ab8f80ced9cdf6afea35d31efae))) :pattern ((HasTypeFuel @u0py271 @x1py938 Tm_arrow_9f8b5ab8f80ced9cdf6afea35d31efae)) )) :named Prims_pre_typing_Tm_arrow_9f8b5ab8f80ced9cdf6afea35d31efae))
(assert (! (forall ((@u0py272 Fuel)(@x1py939 Term)(@x2py679 Term)) (! (or (is-Tm_arrow (PreType @x1py939)) (not (HasTypeFuel @u0py272 @x1py939 (Tm_arrow_21a7a3166e0683e2dfa5d2815e88da4a @x2py679)))) :pattern ((HasTypeFuel @u0py272 @x1py939 (Tm_arrow_21a7a3166e0683e2dfa5d2815e88da4a @x2py679))) )) :named Prims_pre_typing_Tm_arrow_21a7a3166e0683e2dfa5d2815e88da4a))
(assert (! (forall ((@u0py273 Fuel)(@x1py940 Term)) (! (or (is-Tm_arrow (PreType @x1py940)) (not (HasTypeFuel @u0py273 @x1py940 Tm_arrow_34d4137f6994a8c7bcc0b38f6ac7779f))) :pattern ((HasTypeFuel @u0py273 @x1py940 Tm_arrow_34d4137f6994a8c7bcc0b38f6ac7779f)) )) :named Prims_pre_typing_Tm_arrow_34d4137f6994a8c7bcc0b38f6ac7779f))
(assert (! (forall ((@u0py274 Fuel)(@x1py941 Term)(@x2py680 Term)) (! (or (is-Tm_arrow (PreType @x1py941)) (not (HasTypeFuel @u0py274 @x1py941 (Tm_arrow_44faff5d8543c30ad9bf2eeaf1b3abcf @x2py680)))) :pattern ((HasTypeFuel @u0py274 @x1py941 (Tm_arrow_44faff5d8543c30ad9bf2eeaf1b3abcf @x2py680))) )) :named Prims_pre_typing_Tm_arrow_44faff5d8543c30ad9bf2eeaf1b3abcf))
(assert (! (forall ((@u0py275 Fuel)(@x1py942 Term)(@x2py681 Term)(@x3py477 Term)) (! (or (is-Tm_arrow (PreType @x1py942)) (not (HasTypeFuel @u0py275 @x1py942 (Tm_arrow_57c992be3fa76720bf1a10ffa047db3d @x2py681 @x3py477)))) :pattern ((HasTypeFuel @u0py275 @x1py942 (Tm_arrow_57c992be3fa76720bf1a10ffa047db3d @x2py681 @x3py477))) )) :named Prims_pre_typing_Tm_arrow_57c992be3fa76720bf1a10ffa047db3d))
(assert (! (forall ((@u0py276 Fuel)(@x1py943 Term)(@x2py682 Term)) (! (or (is-Tm_arrow (PreType @x1py943)) (not (HasTypeFuel @u0py276 @x1py943 (Tm_arrow_070c89d0419ca0b80e0da94940c40fa3 @x2py682)))) :pattern ((HasTypeFuel @u0py276 @x1py943 (Tm_arrow_070c89d0419ca0b80e0da94940c40fa3 @x2py682))) )) :named Prims_pre_typing_Tm_arrow_070c89d0419ca0b80e0da94940c40fa3))
(assert (! (forall ((@u0py277 Fuel)(@x1py944 Term)(@x2py683 Term)) (! (or (is-Tm_arrow (PreType @x1py944)) (not (HasTypeFuel @u0py277 @x1py944 (Tm_arrow_79f007373109c2c6539212e679be2f2f @x2py683)))) :pattern ((HasTypeFuel @u0py277 @x1py944 (Tm_arrow_79f007373109c2c6539212e679be2f2f @x2py683))) )) :named Prims_pre_typing_Tm_arrow_79f007373109c2c6539212e679be2f2f))
(assert (! (forall ((@u0py278 Fuel)(@x1py945 Term)(@x2py684 Term)) (! (or (is-Tm_arrow (PreType @x1py945)) (not (HasTypeFuel @u0py278 @x1py945 (Tm_arrow_186fc0e29ebb27a200ef672a89551282 @x2py684)))) :pattern ((HasTypeFuel @u0py278 @x1py945 (Tm_arrow_186fc0e29ebb27a200ef672a89551282 @x2py684))) )) :named Prims_pre_typing_Tm_arrow_186fc0e29ebb27a200ef672a89551282))
(assert (! (forall ((@u0py279 Fuel)(@x1py946 Term)(@x2py685 Term)) (! (or (is-Tm_arrow (PreType @x1py946)) (not (HasTypeFuel @u0py279 @x1py946 (Tm_arrow_244b5b2a1fc882c67ebcb032ace08d85 @x2py685)))) :pattern ((HasTypeFuel @u0py279 @x1py946 (Tm_arrow_244b5b2a1fc882c67ebcb032ace08d85 @x2py685))) )) :named Prims_pre_typing_Tm_arrow_244b5b2a1fc882c67ebcb032ace08d85))
(assert (! (forall ((@u0py280 Fuel)(@x1py947 Term)) (! (or (is-Tm_arrow (PreType @x1py947)) (not (HasTypeFuel @u0py280 @x1py947 Tm_arrow_257be5ee7da9f477702a7d2ee9bef0c9))) :pattern ((HasTypeFuel @u0py280 @x1py947 Tm_arrow_257be5ee7da9f477702a7d2ee9bef0c9)) )) :named Prims_pre_typing_Tm_arrow_257be5ee7da9f477702a7d2ee9bef0c9))
(assert (! (forall ((@u0py281 Fuel)(@x1py948 Term)) (! (or (is-Tm_arrow (PreType @x1py948)) (not (HasTypeFuel @u0py281 @x1py948 Tm_arrow_301a720cbb1c5487adfd2a0b64c67b7e))) :pattern ((HasTypeFuel @u0py281 @x1py948 Tm_arrow_301a720cbb1c5487adfd2a0b64c67b7e)) )) :named Prims_pre_typing_Tm_arrow_301a720cbb1c5487adfd2a0b64c67b7e))
(assert (! (forall ((@u0py282 Fuel)(@x1py949 Term)(@x2py686 Term)) (! (or (is-Tm_arrow (PreType @x1py949)) (not (HasTypeFuel @u0py282 @x1py949 (Tm_arrow_537c5575a5fd1154f5e2f17311f50ca8 @x2py686)))) :pattern ((HasTypeFuel @u0py282 @x1py949 (Tm_arrow_537c5575a5fd1154f5e2f17311f50ca8 @x2py686))) )) :named Prims_pre_typing_Tm_arrow_537c5575a5fd1154f5e2f17311f50ca8))
(assert (! (forall ((@u0py283 Fuel)(@x1py950 Term)(@x2py687 Term)) (! (or (is-Tm_arrow (PreType @x1py950)) (not (HasTypeFuel @u0py283 @x1py950 (Tm_arrow_581a99aa4b3c2c64b4b6501081582473 @x2py687)))) :pattern ((HasTypeFuel @u0py283 @x1py950 (Tm_arrow_581a99aa4b3c2c64b4b6501081582473 @x2py687))) )) :named Prims_pre_typing_Tm_arrow_581a99aa4b3c2c64b4b6501081582473))
(assert (! (forall ((@u0py284 Fuel)(@x1py951 Term)(@x2py688 Term)) (! (or (is-Tm_arrow (PreType @x1py951)) (not (HasTypeFuel @u0py284 @x1py951 (Tm_arrow_756e7b0ac20279dfcded24e5a99a27b8 @x2py688)))) :pattern ((HasTypeFuel @u0py284 @x1py951 (Tm_arrow_756e7b0ac20279dfcded24e5a99a27b8 @x2py688))) )) :named Prims_pre_typing_Tm_arrow_756e7b0ac20279dfcded24e5a99a27b8))
(assert (! (forall ((@u0py285 Fuel)(@x1py952 Term)) (! (or (is-Tm_arrow (PreType @x1py952)) (not (HasTypeFuel @u0py285 @x1py952 Tm_arrow_30967c52768a603d18eb4835e5ba8f79))) :pattern ((HasTypeFuel @u0py285 @x1py952 Tm_arrow_30967c52768a603d18eb4835e5ba8f79)) )) :named Prims_pre_typing_Tm_arrow_30967c52768a603d18eb4835e5ba8f79))
(assert (! (forall ((@u0py286 Fuel)(@x1py953 Term)) (! (or (is-Tm_arrow (PreType @x1py953)) (not (HasTypeFuel @u0py286 @x1py953 Tm_arrow_205942e024d5471c930d18c2ca3ae24b))) :pattern ((HasTypeFuel @u0py286 @x1py953 Tm_arrow_205942e024d5471c930d18c2ca3ae24b)) )) :named Prims_pre_typing_Tm_arrow_205942e024d5471c930d18c2ca3ae24b))
(assert (! (forall ((@u0py287 Fuel)(@x1py954 Term)(@x2py689 Term)) (! (or (is-Tm_arrow (PreType @x1py954)) (not (HasTypeFuel @u0py287 @x1py954 (Tm_arrow_21504714b743c269357a5ba76f64b480 @x2py689)))) :pattern ((HasTypeFuel @u0py287 @x1py954 (Tm_arrow_21504714b743c269357a5ba76f64b480 @x2py689))) )) :named Prims_pre_typing_Tm_arrow_21504714b743c269357a5ba76f64b480))
(assert (! (forall ((@u0py288 Fuel)(@x1py955 Term)(@x2py690 Term)(@x3py478 Term)) (! (or (is-Tm_arrow (PreType @x1py955)) (not (HasTypeFuel @u0py288 @x1py955 (Tm_arrow_a26b6f0ab7c6505137c6de4ce0011041 @x2py690 @x3py478)))) :pattern ((HasTypeFuel @u0py288 @x1py955 (Tm_arrow_a26b6f0ab7c6505137c6de4ce0011041 @x2py690 @x3py478))) )) :named Prims_pre_typing_Tm_arrow_a26b6f0ab7c6505137c6de4ce0011041))
(assert (! (forall ((@u0py289 Fuel)(@x1py956 Term)(@x2py691 Term)) (! (or (is-Tm_arrow (PreType @x1py956)) (not (HasTypeFuel @u0py289 @x1py956 (Tm_arrow_a85c3802d57513fa8b84a44441b2fe6a @x2py691)))) :pattern ((HasTypeFuel @u0py289 @x1py956 (Tm_arrow_a85c3802d57513fa8b84a44441b2fe6a @x2py691))) )) :named Prims_pre_typing_Tm_arrow_a85c3802d57513fa8b84a44441b2fe6a))
(assert (! (forall ((@u0py290 Fuel)(@x1py957 Term)) (! (or (is-Tm_arrow (PreType @x1py957)) (not (HasTypeFuel @u0py290 @x1py957 Tm_arrow_a704b31706c9f8227ffcec83d74a9b31))) :pattern ((HasTypeFuel @u0py290 @x1py957 Tm_arrow_a704b31706c9f8227ffcec83d74a9b31)) )) :named Prims_pre_typing_Tm_arrow_a704b31706c9f8227ffcec83d74a9b31))
(assert (! (forall ((@u0py291 Fuel)(@x1py958 Term)) (! (or (is-Tm_arrow (PreType @x1py958)) (not (HasTypeFuel @u0py291 @x1py958 Tm_arrow_b6d5b453dd814b79a1d29a5f85b3161f))) :pattern ((HasTypeFuel @u0py291 @x1py958 Tm_arrow_b6d5b453dd814b79a1d29a5f85b3161f)) )) :named Prims_pre_typing_Tm_arrow_b6d5b453dd814b79a1d29a5f85b3161f))
(assert (! (forall ((@u0py292 Fuel)(@x1py959 Term)) (! (or (is-Tm_arrow (PreType @x1py959)) (not (HasTypeFuel @u0py292 @x1py959 Tm_arrow_b9e392cd340cf43078e3b599d9c5d1b3))) :pattern ((HasTypeFuel @u0py292 @x1py959 Tm_arrow_b9e392cd340cf43078e3b599d9c5d1b3)) )) :named Prims_pre_typing_Tm_arrow_b9e392cd340cf43078e3b599d9c5d1b3))
(assert (! (forall ((@u0py293 Fuel)(@x1py960 Term)(@x2py692 Term)) (! (or (is-Tm_arrow (PreType @x1py960)) (not (HasTypeFuel @u0py293 @x1py960 (Tm_arrow_bc73fd7342ebe29d8df19539096373ef @x2py692)))) :pattern ((HasTypeFuel @u0py293 @x1py960 (Tm_arrow_bc73fd7342ebe29d8df19539096373ef @x2py692))) )) :named Prims_pre_typing_Tm_arrow_bc73fd7342ebe29d8df19539096373ef))
(assert (! (forall ((@u0py294 Fuel)(@x1py961 Term)) (! (or (is-Tm_arrow (PreType @x1py961)) (not (HasTypeFuel @u0py294 @x1py961 Tm_arrow_bdff7ac4f38fee2d6889d7b58ec10beb))) :pattern ((HasTypeFuel @u0py294 @x1py961 Tm_arrow_bdff7ac4f38fee2d6889d7b58ec10beb)) )) :named Prims_pre_typing_Tm_arrow_bdff7ac4f38fee2d6889d7b58ec10beb))
(assert (! (forall ((@u0py295 Fuel)(@x1py962 Term)) (! (or (is-Tm_arrow (PreType @x1py962)) (not (HasTypeFuel @u0py295 @x1py962 Tm_arrow_c69c7e036a278fd3b0fe0b71a945feca))) :pattern ((HasTypeFuel @u0py295 @x1py962 Tm_arrow_c69c7e036a278fd3b0fe0b71a945feca)) )) :named Prims_pre_typing_Tm_arrow_c69c7e036a278fd3b0fe0b71a945feca))
(assert (! (forall ((@u0py296 Fuel)(@x1py963 Term)) (! (or (is-Tm_arrow (PreType @x1py963)) (not (HasTypeFuel @u0py296 @x1py963 Tm_arrow_c195f8405ecbc84a46f4e174b8827a84))) :pattern ((HasTypeFuel @u0py296 @x1py963 Tm_arrow_c195f8405ecbc84a46f4e174b8827a84)) )) :named Prims_pre_typing_Tm_arrow_c195f8405ecbc84a46f4e174b8827a84))
(assert (! (forall ((@u0py297 Fuel)(@x1py964 Term)) (! (or (is-Tm_arrow (PreType @x1py964)) (not (HasTypeFuel @u0py297 @x1py964 Tm_arrow_ccf8afc309a68a850ac71365261b9fb7))) :pattern ((HasTypeFuel @u0py297 @x1py964 Tm_arrow_ccf8afc309a68a850ac71365261b9fb7)) )) :named Prims_pre_typing_Tm_arrow_ccf8afc309a68a850ac71365261b9fb7))
(assert (! (forall ((@u0py298 Fuel)(@x1py965 Term)) (! (or (is-Tm_arrow (PreType @x1py965)) (not (HasTypeFuel @u0py298 @x1py965 Tm_arrow_e9f6c89da04213bf160cc257e258081c))) :pattern ((HasTypeFuel @u0py298 @x1py965 Tm_arrow_e9f6c89da04213bf160cc257e258081c)) )) :named Prims_pre_typing_Tm_arrow_e9f6c89da04213bf160cc257e258081c))
(assert (! (forall ((@u0py299 Fuel)(@x1py966 Term)) (! (or (is-Tm_arrow (PreType @x1py966)) (not (HasTypeFuel @u0py299 @x1py966 Tm_arrow_e23d661799b310305387f8ba2c10acb1))) :pattern ((HasTypeFuel @u0py299 @x1py966 Tm_arrow_e23d661799b310305387f8ba2c10acb1)) )) :named Prims_pre_typing_Tm_arrow_e23d661799b310305387f8ba2c10acb1))
(assert (! (forall ((@u0py300 Fuel)(@x1py967 Term)(@x2py693 Term)) (! (or (is-Tm_arrow (PreType @x1py967)) (not (HasTypeFuel @u0py300 @x1py967 (Tm_arrow_e55fd27cdca75961dfd00ca7901ce64a @x2py693)))) :pattern ((HasTypeFuel @u0py300 @x1py967 (Tm_arrow_e55fd27cdca75961dfd00ca7901ce64a @x2py693))) )) :named Prims_pre_typing_Tm_arrow_e55fd27cdca75961dfd00ca7901ce64a))
(assert (! (forall ((@u0py301 Fuel)(@x1py968 Term)(@x2py694 Term)) (! (or (is-Tm_arrow (PreType @x1py968)) (not (HasTypeFuel @u0py301 @x1py968 (Tm_arrow_e06752ba152f81447b312efcdf8f0e23 @x2py694)))) :pattern ((HasTypeFuel @u0py301 @x1py968 (Tm_arrow_e06752ba152f81447b312efcdf8f0e23 @x2py694))) )) :named Prims_pre_typing_Tm_arrow_e06752ba152f81447b312efcdf8f0e23))
(assert (! (forall ((@u0py302 Fuel)(@x1py969 Term)(@x2py695 Term)(@x3py479 Term)) (! (or (is-Tm_arrow (PreType @x1py969)) (not (HasTypeFuel @u0py302 @x1py969 (Tm_arrow_e9338c9e176627b4318e37ce7ca5332a @x2py695 @x3py479)))) :pattern ((HasTypeFuel @u0py302 @x1py969 (Tm_arrow_e9338c9e176627b4318e37ce7ca5332a @x2py695 @x3py479))) )) :named Prims_pre_typing_Tm_arrow_e9338c9e176627b4318e37ce7ca5332a))
(assert (! (forall ((@u0py303 Fuel)(@x1py970 Term)) (! (or (is-Tm_arrow (PreType @x1py970)) (not (HasTypeFuel @u0py303 @x1py970 Tm_arrow_ec4aa512bc54da67a0356075af124e44))) :pattern ((HasTypeFuel @u0py303 @x1py970 Tm_arrow_ec4aa512bc54da67a0356075af124e44)) )) :named Prims_pre_typing_Tm_arrow_ec4aa512bc54da67a0356075af124e44))
(assert (! (forall ((@u0py304 Fuel)(@x1py971 Term)(@x2py696 Term)(@x3py480 Term)) (! (or (is-Tm_arrow (PreType @x1py971)) (not (HasTypeFuel @u0py304 @x1py971 (Tm_arrow_efa04d9e9741fb25eada2b1d426efe29 @x2py696 @x3py480)))) :pattern ((HasTypeFuel @u0py304 @x1py971 (Tm_arrow_efa04d9e9741fb25eada2b1d426efe29 @x2py696 @x3py480))) )) :named Prims_pre_typing_Tm_arrow_efa04d9e9741fb25eada2b1d426efe29))
(assert (! (forall ((@u0py305 Fuel)(@x1py972 Term)(@x2py697 Term)) (! (or (is-Tm_arrow (PreType @x1py972)) (not (HasTypeFuel @u0py305 @x1py972 (Tm_arrow_f33ea54607e6f443deeaa74ebd418449 @x2py697)))) :pattern ((HasTypeFuel @u0py305 @x1py972 (Tm_arrow_f33ea54607e6f443deeaa74ebd418449 @x2py697))) )) :named Prims_pre_typing_Tm_arrow_f33ea54607e6f443deeaa74ebd418449))
(assert (! (forall ((@u0py306 Fuel)(@x1py973 Term)(@x2py698 Term)) (! (or (is-Tm_arrow (PreType @x1py973)) (not (HasTypeFuel @u0py306 @x1py973 (Tm_arrow_f82c3fb9ac6610efb97620a59b378092 @x2py698)))) :pattern ((HasTypeFuel @u0py306 @x1py973 (Tm_arrow_f82c3fb9ac6610efb97620a59b378092 @x2py698))) )) :named Prims_pre_typing_Tm_arrow_f82c3fb9ac6610efb97620a59b378092))
(assert (! (forall ((@u0py307 Fuel)(@x1py974 Term)) (! (or (is-Tm_arrow (PreType @x1py974)) (not (HasTypeFuel @u0py307 @x1py974 Tm_arrow_fa4e3ee4a3dfa402363cd0693fcbfca4))) :pattern ((HasTypeFuel @u0py307 @x1py974 Tm_arrow_fa4e3ee4a3dfa402363cd0693fcbfca4)) )) :named Prims_pre_typing_Tm_arrow_fa4e3ee4a3dfa402363cd0693fcbfca4))
(assert (! (forall ((@u0py308 Fuel)(@x1py975 Term)) (! (or (is-Tm_arrow (PreType @x1py975)) (not (HasTypeFuel @u0py308 @x1py975 Tm_arrow_fb8e9788d8e1ad00d517d818391a5552))) :pattern ((HasTypeFuel @u0py308 @x1py975 Tm_arrow_fb8e9788d8e1ad00d517d818391a5552)) )) :named Prims_pre_typing_Tm_arrow_fb8e9788d8e1ad00d517d818391a5552))
(assert (! (forall ((@x0py845 Term)(@u1py15 Fuel)) (! (or (not (HasTypeFuel @u1py15 @x0py845 Prims.c_True)) (= Prims.c_True (PreType @x0py845))) :pattern ((HasTypeFuel @u1py15 @x0py845 Prims.c_True)) )) :named Prims_pretyping_0da546199211a769a972571cdb3aec67))
(assert (! (forall ((@x0py846 Term)(@u1py16 Fuel)) (! (or (not (HasTypeFuel @u1py16 @x0py846 Prims.exn)) (= Prims.exn (PreType @x0py846))) :pattern ((HasTypeFuel @u1py16 @x0py846 Prims.exn)) )) :named Prims_pretyping_2feddfe489e78a01f5d2e9b55172b46a))
(assert (! (forall ((@x0py847 Term)(@u1py17 Fuel)(@x2py699 Term)) (! (or (not (HasTypeFuel @u1py17 @x0py847 (Prims.array @x2py699))) (= (Prims.array @x2py699) (PreType @x0py847))) :pattern ((HasTypeFuel @u1py17 @x0py847 (Prims.array @x2py699))) )) :named Prims_pretyping_4ad2a9f57b811db36dfacf4f739b0d18))
(assert (! (forall ((@x0py848 Term)(@u1py18 Fuel)(@x2py700 Term)(@x3py481 Term)(@x4py330 Term)(@x5py250 Term)) (! (or (not (HasTypeFuel @u1py18 @x0py848 (Prims.h_equals @x2py700 @x3py481 @x4py330 @x5py250))) (= (Prims.h_equals @x2py700 @x3py481 @x4py330 @x5py250) (PreType @x0py848))) :pattern ((HasTypeFuel @u1py18 @x0py848 (Prims.h_equals @x2py700 @x3py481 @x4py330 @x5py250))) )) :named Prims_pretyping_7acd57d016221111399205a6d5a9f45a))
(assert (! (forall ((@x0py849 Term)(@u1py19 Fuel)(@x2py701 Term)(@x3py482 Term)) (! (or (not (HasTypeFuel @u1py19 @x0py849 (Prims.dtuple2 @x2py701 @x3py482))) (= (Prims.dtuple2 @x2py701 @x3py482) (PreType @x0py849))) :pattern ((HasTypeFuel @u1py19 @x0py849 (Prims.dtuple2 @x2py701 @x3py482))) )) :named Prims_pretyping_09d9235a8068627898e77b75945bdc5c))
(assert (! (forall ((@x0py850 Term)(@u1py20 Fuel)) (! (or (not (HasTypeFuel @u1py20 @x0py850 Prims.attribute)) (= Prims.attribute (PreType @x0py850))) :pattern ((HasTypeFuel @u1py20 @x0py850 Prims.attribute)) )) :named Prims_pretyping_84eeee553eff3e9aec239a06e72d1d36))
(assert (! (forall ((@x0py851 Term)(@u1py21 Fuel)(@x2py702 Term)) (! (or (not (HasTypeFuel @u1py21 @x0py851 (Prims.list @x2py702))) (= (Prims.list @x2py702) (PreType @x0py851))) :pattern ((HasTypeFuel @u1py21 @x0py851 (Prims.list @x2py702))) )) :named Prims_pretyping_3862c4e8ff39bfc3871b6a47e7ff5b2e))
(assert (! (forall ((@x0py852 Term)(@u1py22 Fuel)) (! (or (not (HasTypeFuel @u1py22 @x0py852 Prims.int)) (= Prims.int (PreType @x0py852))) :pattern ((HasTypeFuel @u1py22 @x0py852 Prims.int)) )) :named Prims_pretyping_ae567c2fb75be05905677af440075565))
(assert (! (forall ((@x0py853 Term)(@u1py23 Fuel)(@x2py703 Term)(@x3py483 Term)(@x4py331 Term)) (! (or (not (HasTypeFuel @u1py23 @x0py853 (Prims.equals @x2py703 @x3py483 @x4py331))) (= (Prims.equals @x2py703 @x3py483 @x4py331) (PreType @x0py853))) :pattern ((HasTypeFuel @u1py23 @x0py853 (Prims.equals @x2py703 @x3py483 @x4py331))) )) :named Prims_pretyping_b2d64ca214b8828a9eba2c140aea0816))
(assert (! (forall ((@x0py854 Term)(@u1py24 Fuel)) (! (or (not (HasTypeFuel @u1py24 @x0py854 Prims.c_False)) (= Prims.c_False (PreType @x0py854))) :pattern ((HasTypeFuel @u1py24 @x0py854 Prims.c_False)) )) :named Prims_pretyping_b418112a7d7e33642df0422d05062572))
(assert (! (forall ((@x0py855 Term)(@u1py25 Fuel)) (! (or (not (HasTypeFuel @u1py25 @x0py855 Prims.range)) (= Prims.range (PreType @x0py855))) :pattern ((HasTypeFuel @u1py25 @x0py855 Prims.range)) )) :named Prims_pretyping_cd1dd43c7849cf822e800878c71021f1))
(assert (! (forall ((@x0py856 Term)(@u1py26 Fuel)) (! (or (not (HasTypeFuel @u1py26 @x0py856 Prims.string)) (= Prims.string (PreType @x0py856))) :pattern ((HasTypeFuel @u1py26 @x0py856 Prims.string)) )) :named Prims_pretyping_ce036b6b736ef4e0bc3a9ff132a12aed))
(assert (! (forall ((@x0py857 Term)(@u1py27 Fuel)(@x2py704 Term)(@x3py484 Term)) (! (or (not (HasTypeFuel @u1py27 @x0py857 (Prims.c_and @x2py704 @x3py484))) (= (Prims.c_and @x2py704 @x3py484) (PreType @x0py857))) :pattern ((HasTypeFuel @u1py27 @x0py857 (Prims.c_and @x2py704 @x3py484))) )) :named Prims_pretyping_e62044a0ce6e7fead51634c83b79e8c1))
(assert (! (forall ((@x0py858 Term)(@u1py28 Fuel)) (! (or (not (HasTypeFuel @u1py28 @x0py858 Prims.lex_t)) (= Prims.lex_t (PreType @x0py858))) :pattern ((HasTypeFuel @u1py28 @x0py858 Prims.lex_t)) )) :named Prims_pretyping_e4836109f73687024ac3edd113084865))
(assert (! (forall ((@x0py859 Term)(@u1py29 Fuel)(@x2py705 Term)(@x3py485 Term)) (! (or (not (HasTypeFuel @u1py29 @x0py859 (Prims.c_or @x2py705 @x3py485))) (= (Prims.c_or @x2py705 @x3py485) (PreType @x0py859))) :pattern ((HasTypeFuel @u1py29 @x0py859 (Prims.c_or @x2py705 @x3py485))) )) :named Prims_pretyping_ec9eb96b60d47b16f577c7cc5d5d8607))
(assert (! (forall ((@x0py860 Term)(@u1py30 Fuel)) (! (or (not (HasTypeFuel @u1py30 @x0py860 Prims.bool)) (= Prims.bool (PreType @x0py860))) :pattern ((HasTypeFuel @u1py30 @x0py860 Prims.bool)) )) :named Prims_pretyping_f537159ed795b314b4e58c260361ae86))
(assert (! (forall ((@x0py861 Term)(@u1py31 Fuel)) (! (or (not (HasTypeFuel @u1py31 @x0py861 Prims.unit)) (= Prims.unit (PreType @x0py861))) :pattern ((HasTypeFuel @u1py31 @x0py861 Prims.unit)) )) :named Prims_pretyping_f8666440faa91836cc5a13998af863fc))
(assert (! (forall ((@x0py862 Term)(@x1py976 Term)(@x2py706 Term)(@x3py486 Term)(@x4py332 Term)) (! (= (False.__proj__CalcRefl__item__x @x0py862 @x1py976 @x2py706 @x3py486 @x4py332) (False.CalcRefl_x @x4py332)) :pattern ((False.__proj__CalcRefl__item__x @x0py862 @x1py976 @x2py706 @x3py486 @x4py332)) )) :named proj_equation_False.CalcRefl_x))
(assert (! (forall ((@x0py863 Term)(@x1py977 Term)(@x2py707 Term)(@x3py487 Term)(@x4py333 Term)) (! (= (False.__proj__CalcStep__item___5 @x0py863 @x1py977 @x2py707 @x3py487 @x4py333) (False.CalcStep__5 @x4py333)) :pattern ((False.__proj__CalcStep__item___5 @x0py863 @x1py977 @x2py707 @x3py487 @x4py333)) )) :named proj_equation_False.CalcStep__5))
(assert (! (forall ((@x0py864 Term)(@x1py978 Term)(@x2py708 Term)(@x3py488 Term)(@x4py334 Term)) (! (= (False.__proj__CalcStep__item___6 @x0py864 @x1py978 @x2py708 @x3py488 @x4py334) (False.CalcStep__6 @x4py334)) :pattern ((False.__proj__CalcStep__item___6 @x0py864 @x1py978 @x2py708 @x3py488 @x4py334)) )) :named proj_equation_False.CalcStep__6))
(assert (! (forall ((@x0py865 Term)(@x1py979 Term)(@x2py709 Term)(@x3py489 Term)(@x4py335 Term)) (! (= (False.__proj__CalcStep__item__p @x0py865 @x1py979 @x2py709 @x3py489 @x4py335) (False.CalcStep_p @x4py335)) :pattern ((False.__proj__CalcStep__item__p @x0py865 @x1py979 @x2py709 @x3py489 @x4py335)) )) :named proj_equation_False.CalcStep_p))
(assert (! (forall ((@x0py866 Term)(@x1py980 Term)(@x2py710 Term)(@x3py490 Term)(@x4py336 Term)) (! (= (False.__proj__CalcStep__item__rs @x0py866 @x1py980 @x2py710 @x3py490 @x4py336) (False.CalcStep_rs @x4py336)) :pattern ((False.__proj__CalcStep__item__rs @x0py866 @x1py980 @x2py710 @x3py490 @x4py336)) )) :named proj_equation_False.CalcStep_rs))
(assert (! (forall ((@x0py867 Term)(@x1py981 Term)(@x2py711 Term)(@x3py491 Term)(@x4py337 Term)) (! (= (False.__proj__CalcStep__item__x @x0py867 @x1py981 @x2py711 @x3py491 @x4py337) (False.CalcStep_x @x4py337)) :pattern ((False.__proj__CalcStep__item__x @x0py867 @x1py981 @x2py711 @x3py491 @x4py337)) )) :named proj_equation_False.CalcStep_x))
(assert (! (forall ((@x0py868 Term)(@x1py982 Term)(@x2py712 Term)(@x3py492 Term)(@x4py338 Term)) (! (= (False.__proj__CalcStep__item__y @x0py868 @x1py982 @x2py712 @x3py492 @x4py338) (False.CalcStep_y @x4py338)) :pattern ((False.__proj__CalcStep__item__y @x0py868 @x1py982 @x2py712 @x3py492 @x4py338)) )) :named proj_equation_False.CalcStep_y))
(assert (! (forall ((@x0py869 Term)(@x1py983 Term)(@x2py713 Term)(@x3py493 Term)(@x4py339 Term)) (! (= (False.__proj__CalcStep__item__z @x0py869 @x1py983 @x2py713 @x3py493 @x4py339) (False.CalcStep_z @x4py339)) :pattern ((False.__proj__CalcStep__item__z @x0py869 @x1py983 @x2py713 @x3py493 @x4py339)) )) :named proj_equation_False.CalcStep_z))
(assert (! (forall ((@x0py870 Term)) (! (= (FStar.Pervasives.__proj__CConst__item___0 @x0py870) (FStar.Pervasives.CConst__0 @x0py870)) :pattern ((FStar.Pervasives.__proj__CConst__item___0 @x0py870)) )) :named proj_equation_FStar.Pervasives.CConst__0))
(assert (! (forall ((@x0py871 Term)) (! (= (FStar.Pervasives.__proj__CEpilogue__item___0 @x0py871) (FStar.Pervasives.CEpilogue__0 @x0py871)) :pattern ((FStar.Pervasives.__proj__CEpilogue__item___0 @x0py871)) )) :named proj_equation_FStar.Pervasives.CEpilogue__0))
(assert (! (forall ((@x0py872 Term)) (! (= (FStar.Pervasives.__proj__Comment__item___0 @x0py872) (FStar.Pervasives.Comment__0 @x0py872)) :pattern ((FStar.Pervasives.__proj__Comment__item___0 @x0py872)) )) :named proj_equation_FStar.Pervasives.Comment__0))
(assert (! (forall ((@x0py873 Term)) (! (= (FStar.Pervasives.__proj__CPrologue__item___0 @x0py873) (FStar.Pervasives.CPrologue__0 @x0py873)) :pattern ((FStar.Pervasives.__proj__CPrologue__item___0 @x0py873)) )) :named proj_equation_FStar.Pervasives.CPrologue__0))
(assert (! (forall ((@x0py874 Term)(@x1py984 Term)) (! (= (FStar.Pervasives.__proj__E__item__e @x0py874 @x1py984) (FStar.Pervasives.E_e @x1py984)) :pattern ((FStar.Pervasives.__proj__E__item__e @x0py874 @x1py984)) )) :named proj_equation_FStar.Pervasives.E_e))
(assert (! (forall ((@x0py875 Term)(@x1py985 Term)) (! (= (FStar.Pervasives.__proj__Err__item__msg @x0py875 @x1py985) (FStar.Pervasives.Err_msg @x1py985)) :pattern ((FStar.Pervasives.__proj__Err__item__msg @x0py875 @x1py985)) )) :named proj_equation_FStar.Pervasives.Err_msg))
(assert (! (forall ((@x0py876 Term)(@x1py986 Term)(@x2py714 Term)) (! (= (FStar.Pervasives.__proj__Inl__item__v @x0py876 @x1py986 @x2py714) (FStar.Pervasives.Inl_v @x2py714)) :pattern ((FStar.Pervasives.__proj__Inl__item__v @x0py876 @x1py986 @x2py714)) )) :named proj_equation_FStar.Pervasives.Inl_v))
(assert (! (forall ((@x0py877 Term)(@x1py987 Term)(@x2py715 Term)) (! (= (FStar.Pervasives.__proj__Inr__item__v @x0py877 @x1py987 @x2py715) (FStar.Pervasives.Inr_v @x2py715)) :pattern ((FStar.Pervasives.__proj__Inr__item__v @x0py877 @x1py987 @x2py715)) )) :named proj_equation_FStar.Pervasives.Inr_v))
(assert (! (forall ((@x0py878 Term)(@x1py988 Term)(@x2py716 Term)(@x3py494 Term)) (! (= (FStar.Pervasives.__proj__Mkdtuple3__item___1 @x0py878 @x1py988 @x2py716 @x3py494) (FStar.Pervasives.Mkdtuple3__1 @x3py494)) :pattern ((FStar.Pervasives.__proj__Mkdtuple3__item___1 @x0py878 @x1py988 @x2py716 @x3py494)) )) :named proj_equation_FStar.Pervasives.Mkdtuple3__1))
(assert (! (forall ((@x0py879 Term)(@x1py989 Term)(@x2py717 Term)(@x3py495 Term)) (! (= (FStar.Pervasives.__proj__Mkdtuple3__item___2 @x0py879 @x1py989 @x2py717 @x3py495) (FStar.Pervasives.Mkdtuple3__2 @x3py495)) :pattern ((FStar.Pervasives.__proj__Mkdtuple3__item___2 @x0py879 @x1py989 @x2py717 @x3py495)) )) :named proj_equation_FStar.Pervasives.Mkdtuple3__2))
(assert (! (forall ((@x0py880 Term)(@x1py990 Term)(@x2py718 Term)(@x3py496 Term)) (! (= (FStar.Pervasives.__proj__Mkdtuple3__item___3 @x0py880 @x1py990 @x2py718 @x3py496) (FStar.Pervasives.Mkdtuple3__3 @x3py496)) :pattern ((FStar.Pervasives.__proj__Mkdtuple3__item___3 @x0py880 @x1py990 @x2py718 @x3py496)) )) :named proj_equation_FStar.Pervasives.Mkdtuple3__3))
(assert (! (forall ((@x0py881 Term)(@x1py991 Term)(@x2py719 Term)(@x3py497 Term)(@x4py340 Term)) (! (= (FStar.Pervasives.__proj__Mkdtuple4__item___1 @x0py881 @x1py991 @x2py719 @x3py497 @x4py340) (FStar.Pervasives.Mkdtuple4__1 @x4py340)) :pattern ((FStar.Pervasives.__proj__Mkdtuple4__item___1 @x0py881 @x1py991 @x2py719 @x3py497 @x4py340)) )) :named proj_equation_FStar.Pervasives.Mkdtuple4__1))
(assert (! (forall ((@x0py882 Term)(@x1py992 Term)(@x2py720 Term)(@x3py498 Term)(@x4py341 Term)) (! (= (FStar.Pervasives.__proj__Mkdtuple4__item___2 @x0py882 @x1py992 @x2py720 @x3py498 @x4py341) (FStar.Pervasives.Mkdtuple4__2 @x4py341)) :pattern ((FStar.Pervasives.__proj__Mkdtuple4__item___2 @x0py882 @x1py992 @x2py720 @x3py498 @x4py341)) )) :named proj_equation_FStar.Pervasives.Mkdtuple4__2))
(assert (! (forall ((@x0py883 Term)(@x1py993 Term)(@x2py721 Term)(@x3py499 Term)(@x4py342 Term)) (! (= (FStar.Pervasives.__proj__Mkdtuple4__item___3 @x0py883 @x1py993 @x2py721 @x3py499 @x4py342) (FStar.Pervasives.Mkdtuple4__3 @x4py342)) :pattern ((FStar.Pervasives.__proj__Mkdtuple4__item___3 @x0py883 @x1py993 @x2py721 @x3py499 @x4py342)) )) :named proj_equation_FStar.Pervasives.Mkdtuple4__3))
(assert (! (forall ((@x0py884 Term)(@x1py994 Term)(@x2py722 Term)(@x3py500 Term)(@x4py343 Term)) (! (= (FStar.Pervasives.__proj__Mkdtuple4__item___4 @x0py884 @x1py994 @x2py722 @x3py500 @x4py343) (FStar.Pervasives.Mkdtuple4__4 @x4py343)) :pattern ((FStar.Pervasives.__proj__Mkdtuple4__item___4 @x0py884 @x1py994 @x2py722 @x3py500 @x4py343)) )) :named proj_equation_FStar.Pervasives.Mkdtuple4__4))
(assert (! (forall ((@x0py885 Term)(@x1py995 Term)(@x2py723 Term)) (! (= (FStar.Pervasives.Native.__proj__Mktuple2__item___1 @x0py885 @x1py995 @x2py723) (FStar.Pervasives.Native.Mktuple2__1 @x2py723)) :pattern ((FStar.Pervasives.Native.__proj__Mktuple2__item___1 @x0py885 @x1py995 @x2py723)) )) :named proj_equation_FStar.Pervasives.Native.Mktuple2__1))
(assert (! (forall ((@x0py886 Term)(@x1py996 Term)(@x2py724 Term)) (! (= (FStar.Pervasives.Native.__proj__Mktuple2__item___2 @x0py886 @x1py996 @x2py724) (FStar.Pervasives.Native.Mktuple2__2 @x2py724)) :pattern ((FStar.Pervasives.Native.__proj__Mktuple2__item___2 @x0py886 @x1py996 @x2py724)) )) :named proj_equation_FStar.Pervasives.Native.Mktuple2__2))
(assert (! (forall ((@x0py887 Term)(@x1py997 Term)(@x2py725 Term)(@x3py501 Term)) (! (= (FStar.Pervasives.Native.__proj__Mktuple3__item___1 @x0py887 @x1py997 @x2py725 @x3py501) (FStar.Pervasives.Native.Mktuple3__1 @x3py501)) :pattern ((FStar.Pervasives.Native.__proj__Mktuple3__item___1 @x0py887 @x1py997 @x2py725 @x3py501)) )) :named proj_equation_FStar.Pervasives.Native.Mktuple3__1))
(assert (! (forall ((@x0py888 Term)(@x1py998 Term)(@x2py726 Term)(@x3py502 Term)) (! (= (FStar.Pervasives.Native.__proj__Mktuple3__item___2 @x0py888 @x1py998 @x2py726 @x3py502) (FStar.Pervasives.Native.Mktuple3__2 @x3py502)) :pattern ((FStar.Pervasives.Native.__proj__Mktuple3__item___2 @x0py888 @x1py998 @x2py726 @x3py502)) )) :named proj_equation_FStar.Pervasives.Native.Mktuple3__2))
(assert (! (forall ((@x0py889 Term)(@x1py999 Term)(@x2py727 Term)(@x3py503 Term)) (! (= (FStar.Pervasives.Native.__proj__Mktuple3__item___3 @x0py889 @x1py999 @x2py727 @x3py503) (FStar.Pervasives.Native.Mktuple3__3 @x3py503)) :pattern ((FStar.Pervasives.Native.__proj__Mktuple3__item___3 @x0py889 @x1py999 @x2py727 @x3py503)) )) :named proj_equation_FStar.Pervasives.Native.Mktuple3__3))
(assert (! (forall ((@x0py890 Term)(@x1py1000 Term)(@x2py728 Term)(@x3py504 Term)(@x4py344 Term)) (! (= (FStar.Pervasives.Native.__proj__Mktuple4__item___1 @x0py890 @x1py1000 @x2py728 @x3py504 @x4py344) (FStar.Pervasives.Native.Mktuple4__1 @x4py344)) :pattern ((FStar.Pervasives.Native.__proj__Mktuple4__item___1 @x0py890 @x1py1000 @x2py728 @x3py504 @x4py344)) )) :named proj_equation_FStar.Pervasives.Native.Mktuple4__1))
(assert (! (forall ((@x0py891 Term)(@x1py1001 Term)(@x2py729 Term)(@x3py505 Term)(@x4py345 Term)) (! (= (FStar.Pervasives.Native.__proj__Mktuple4__item___2 @x0py891 @x1py1001 @x2py729 @x3py505 @x4py345) (FStar.Pervasives.Native.Mktuple4__2 @x4py345)) :pattern ((FStar.Pervasives.Native.__proj__Mktuple4__item___2 @x0py891 @x1py1001 @x2py729 @x3py505 @x4py345)) )) :named proj_equation_FStar.Pervasives.Native.Mktuple4__2))
(assert (! (forall ((@x0py892 Term)(@x1py1002 Term)(@x2py730 Term)(@x3py506 Term)(@x4py346 Term)) (! (= (FStar.Pervasives.Native.__proj__Mktuple4__item___3 @x0py892 @x1py1002 @x2py730 @x3py506 @x4py346) (FStar.Pervasives.Native.Mktuple4__3 @x4py346)) :pattern ((FStar.Pervasives.Native.__proj__Mktuple4__item___3 @x0py892 @x1py1002 @x2py730 @x3py506 @x4py346)) )) :named proj_equation_FStar.Pervasives.Native.Mktuple4__3))
(assert (! (forall ((@x0py893 Term)(@x1py1003 Term)(@x2py731 Term)(@x3py507 Term)(@x4py347 Term)) (! (= (FStar.Pervasives.Native.__proj__Mktuple4__item___4 @x0py893 @x1py1003 @x2py731 @x3py507 @x4py347) (FStar.Pervasives.Native.Mktuple4__4 @x4py347)) :pattern ((FStar.Pervasives.Native.__proj__Mktuple4__item___4 @x0py893 @x1py1003 @x2py731 @x3py507 @x4py347)) )) :named proj_equation_FStar.Pervasives.Native.Mktuple4__4))
(assert (! (forall ((@x0py894 Term)(@x1py1004 Term)(@x2py732 Term)(@x3py508 Term)(@x4py348 Term)(@x5py251 Term)) (! (= (FStar.Pervasives.Native.__proj__Mktuple5__item___1 @x0py894 @x1py1004 @x2py732 @x3py508 @x4py348 @x5py251) (FStar.Pervasives.Native.Mktuple5__1 @x5py251)) :pattern ((FStar.Pervasives.Native.__proj__Mktuple5__item___1 @x0py894 @x1py1004 @x2py732 @x3py508 @x4py348 @x5py251)) )) :named proj_equation_FStar.Pervasives.Native.Mktuple5__1))
(assert (! (forall ((@x0py895 Term)(@x1py1005 Term)(@x2py733 Term)(@x3py509 Term)(@x4py349 Term)(@x5py252 Term)) (! (= (FStar.Pervasives.Native.__proj__Mktuple5__item___2 @x0py895 @x1py1005 @x2py733 @x3py509 @x4py349 @x5py252) (FStar.Pervasives.Native.Mktuple5__2 @x5py252)) :pattern ((FStar.Pervasives.Native.__proj__Mktuple5__item___2 @x0py895 @x1py1005 @x2py733 @x3py509 @x4py349 @x5py252)) )) :named proj_equation_FStar.Pervasives.Native.Mktuple5__2))
(assert (! (forall ((@x0py896 Term)(@x1py1006 Term)(@x2py734 Term)(@x3py510 Term)(@x4py350 Term)(@x5py253 Term)) (! (= (FStar.Pervasives.Native.__proj__Mktuple5__item___3 @x0py896 @x1py1006 @x2py734 @x3py510 @x4py350 @x5py253) (FStar.Pervasives.Native.Mktuple5__3 @x5py253)) :pattern ((FStar.Pervasives.Native.__proj__Mktuple5__item___3 @x0py896 @x1py1006 @x2py734 @x3py510 @x4py350 @x5py253)) )) :named proj_equation_FStar.Pervasives.Native.Mktuple5__3))
(assert (! (forall ((@x0py897 Term)(@x1py1007 Term)(@x2py735 Term)(@x3py511 Term)(@x4py351 Term)(@x5py254 Term)) (! (= (FStar.Pervasives.Native.__proj__Mktuple5__item___4 @x0py897 @x1py1007 @x2py735 @x3py511 @x4py351 @x5py254) (FStar.Pervasives.Native.Mktuple5__4 @x5py254)) :pattern ((FStar.Pervasives.Native.__proj__Mktuple5__item___4 @x0py897 @x1py1007 @x2py735 @x3py511 @x4py351 @x5py254)) )) :named proj_equation_FStar.Pervasives.Native.Mktuple5__4))
(assert (! (forall ((@x0py898 Term)(@x1py1008 Term)(@x2py736 Term)(@x3py512 Term)(@x4py352 Term)(@x5py255 Term)) (! (= (FStar.Pervasives.Native.__proj__Mktuple5__item___5 @x0py898 @x1py1008 @x2py736 @x3py512 @x4py352 @x5py255) (FStar.Pervasives.Native.Mktuple5__5 @x5py255)) :pattern ((FStar.Pervasives.Native.__proj__Mktuple5__item___5 @x0py898 @x1py1008 @x2py736 @x3py512 @x4py352 @x5py255)) )) :named proj_equation_FStar.Pervasives.Native.Mktuple5__5))
(assert (! (forall ((@x0py899 Term)(@x1py1009 Term)(@x2py737 Term)(@x3py513 Term)(@x4py353 Term)(@x5py256 Term)(@x6py167 Term)) (! (= (FStar.Pervasives.Native.__proj__Mktuple6__item___1 @x0py899 @x1py1009 @x2py737 @x3py513 @x4py353 @x5py256 @x6py167) (FStar.Pervasives.Native.Mktuple6__1 @x6py167)) :pattern ((FStar.Pervasives.Native.__proj__Mktuple6__item___1 @x0py899 @x1py1009 @x2py737 @x3py513 @x4py353 @x5py256 @x6py167)) )) :named proj_equation_FStar.Pervasives.Native.Mktuple6__1))
(assert (! (forall ((@x0py900 Term)(@x1py1010 Term)(@x2py738 Term)(@x3py514 Term)(@x4py354 Term)(@x5py257 Term)(@x6py168 Term)) (! (= (FStar.Pervasives.Native.__proj__Mktuple6__item___2 @x0py900 @x1py1010 @x2py738 @x3py514 @x4py354 @x5py257 @x6py168) (FStar.Pervasives.Native.Mktuple6__2 @x6py168)) :pattern ((FStar.Pervasives.Native.__proj__Mktuple6__item___2 @x0py900 @x1py1010 @x2py738 @x3py514 @x4py354 @x5py257 @x6py168)) )) :named proj_equation_FStar.Pervasives.Native.Mktuple6__2))
(assert (! (forall ((@x0py901 Term)(@x1py1011 Term)(@x2py739 Term)(@x3py515 Term)(@x4py355 Term)(@x5py258 Term)(@x6py169 Term)) (! (= (FStar.Pervasives.Native.__proj__Mktuple6__item___3 @x0py901 @x1py1011 @x2py739 @x3py515 @x4py355 @x5py258 @x6py169) (FStar.Pervasives.Native.Mktuple6__3 @x6py169)) :pattern ((FStar.Pervasives.Native.__proj__Mktuple6__item___3 @x0py901 @x1py1011 @x2py739 @x3py515 @x4py355 @x5py258 @x6py169)) )) :named proj_equation_FStar.Pervasives.Native.Mktuple6__3))
(assert (! (forall ((@x0py902 Term)(@x1py1012 Term)(@x2py740 Term)(@x3py516 Term)(@x4py356 Term)(@x5py259 Term)(@x6py170 Term)) (! (= (FStar.Pervasives.Native.__proj__Mktuple6__item___4 @x0py902 @x1py1012 @x2py740 @x3py516 @x4py356 @x5py259 @x6py170) (FStar.Pervasives.Native.Mktuple6__4 @x6py170)) :pattern ((FStar.Pervasives.Native.__proj__Mktuple6__item___4 @x0py902 @x1py1012 @x2py740 @x3py516 @x4py356 @x5py259 @x6py170)) )) :named proj_equation_FStar.Pervasives.Native.Mktuple6__4))
(assert (! (forall ((@x0py903 Term)(@x1py1013 Term)(@x2py741 Term)(@x3py517 Term)(@x4py357 Term)(@x5py260 Term)(@x6py171 Term)) (! (= (FStar.Pervasives.Native.__proj__Mktuple6__item___5 @x0py903 @x1py1013 @x2py741 @x3py517 @x4py357 @x5py260 @x6py171) (FStar.Pervasives.Native.Mktuple6__5 @x6py171)) :pattern ((FStar.Pervasives.Native.__proj__Mktuple6__item___5 @x0py903 @x1py1013 @x2py741 @x3py517 @x4py357 @x5py260 @x6py171)) )) :named proj_equation_FStar.Pervasives.Native.Mktuple6__5))
(assert (! (forall ((@x0py904 Term)(@x1py1014 Term)(@x2py742 Term)(@x3py518 Term)(@x4py358 Term)(@x5py261 Term)(@x6py172 Term)) (! (= (FStar.Pervasives.Native.__proj__Mktuple6__item___6 @x0py904 @x1py1014 @x2py742 @x3py518 @x4py358 @x5py261 @x6py172) (FStar.Pervasives.Native.Mktuple6__6 @x6py172)) :pattern ((FStar.Pervasives.Native.__proj__Mktuple6__item___6 @x0py904 @x1py1014 @x2py742 @x3py518 @x4py358 @x5py261 @x6py172)) )) :named proj_equation_FStar.Pervasives.Native.Mktuple6__6))
(assert (! (forall ((@x0py905 Term)(@x1py1015 Term)(@x2py743 Term)(@x3py519 Term)(@x4py359 Term)(@x5py262 Term)(@x6py173 Term)(@x7py119 Term)) (! (= (FStar.Pervasives.Native.__proj__Mktuple7__item___1 @x0py905 @x1py1015 @x2py743 @x3py519 @x4py359 @x5py262 @x6py173 @x7py119) (FStar.Pervasives.Native.Mktuple7__1 @x7py119)) :pattern ((FStar.Pervasives.Native.__proj__Mktuple7__item___1 @x0py905 @x1py1015 @x2py743 @x3py519 @x4py359 @x5py262 @x6py173 @x7py119)) )) :named proj_equation_FStar.Pervasives.Native.Mktuple7__1))
(assert (! (forall ((@x0py906 Term)(@x1py1016 Term)(@x2py744 Term)(@x3py520 Term)(@x4py360 Term)(@x5py263 Term)(@x6py174 Term)(@x7py120 Term)) (! (= (FStar.Pervasives.Native.__proj__Mktuple7__item___2 @x0py906 @x1py1016 @x2py744 @x3py520 @x4py360 @x5py263 @x6py174 @x7py120) (FStar.Pervasives.Native.Mktuple7__2 @x7py120)) :pattern ((FStar.Pervasives.Native.__proj__Mktuple7__item___2 @x0py906 @x1py1016 @x2py744 @x3py520 @x4py360 @x5py263 @x6py174 @x7py120)) )) :named proj_equation_FStar.Pervasives.Native.Mktuple7__2))
(assert (! (forall ((@x0py907 Term)(@x1py1017 Term)(@x2py745 Term)(@x3py521 Term)(@x4py361 Term)(@x5py264 Term)(@x6py175 Term)(@x7py121 Term)) (! (= (FStar.Pervasives.Native.__proj__Mktuple7__item___3 @x0py907 @x1py1017 @x2py745 @x3py521 @x4py361 @x5py264 @x6py175 @x7py121) (FStar.Pervasives.Native.Mktuple7__3 @x7py121)) :pattern ((FStar.Pervasives.Native.__proj__Mktuple7__item___3 @x0py907 @x1py1017 @x2py745 @x3py521 @x4py361 @x5py264 @x6py175 @x7py121)) )) :named proj_equation_FStar.Pervasives.Native.Mktuple7__3))
(assert (! (forall ((@x0py908 Term)(@x1py1018 Term)(@x2py746 Term)(@x3py522 Term)(@x4py362 Term)(@x5py265 Term)(@x6py176 Term)(@x7py122 Term)) (! (= (FStar.Pervasives.Native.__proj__Mktuple7__item___4 @x0py908 @x1py1018 @x2py746 @x3py522 @x4py362 @x5py265 @x6py176 @x7py122) (FStar.Pervasives.Native.Mktuple7__4 @x7py122)) :pattern ((FStar.Pervasives.Native.__proj__Mktuple7__item___4 @x0py908 @x1py1018 @x2py746 @x3py522 @x4py362 @x5py265 @x6py176 @x7py122)) )) :named proj_equation_FStar.Pervasives.Native.Mktuple7__4))
(assert (! (forall ((@x0py909 Term)(@x1py1019 Term)(@x2py747 Term)(@x3py523 Term)(@x4py363 Term)(@x5py266 Term)(@x6py177 Term)(@x7py123 Term)) (! (= (FStar.Pervasives.Native.__proj__Mktuple7__item___5 @x0py909 @x1py1019 @x2py747 @x3py523 @x4py363 @x5py266 @x6py177 @x7py123) (FStar.Pervasives.Native.Mktuple7__5 @x7py123)) :pattern ((FStar.Pervasives.Native.__proj__Mktuple7__item___5 @x0py909 @x1py1019 @x2py747 @x3py523 @x4py363 @x5py266 @x6py177 @x7py123)) )) :named proj_equation_FStar.Pervasives.Native.Mktuple7__5))
(assert (! (forall ((@x0py910 Term)(@x1py1020 Term)(@x2py748 Term)(@x3py524 Term)(@x4py364 Term)(@x5py267 Term)(@x6py178 Term)(@x7py124 Term)) (! (= (FStar.Pervasives.Native.__proj__Mktuple7__item___6 @x0py910 @x1py1020 @x2py748 @x3py524 @x4py364 @x5py267 @x6py178 @x7py124) (FStar.Pervasives.Native.Mktuple7__6 @x7py124)) :pattern ((FStar.Pervasives.Native.__proj__Mktuple7__item___6 @x0py910 @x1py1020 @x2py748 @x3py524 @x4py364 @x5py267 @x6py178 @x7py124)) )) :named proj_equation_FStar.Pervasives.Native.Mktuple7__6))
(assert (! (forall ((@x0py911 Term)(@x1py1021 Term)(@x2py749 Term)(@x3py525 Term)(@x4py365 Term)(@x5py268 Term)(@x6py179 Term)(@x7py125 Term)) (! (= (FStar.Pervasives.Native.__proj__Mktuple7__item___7 @x0py911 @x1py1021 @x2py749 @x3py525 @x4py365 @x5py268 @x6py179 @x7py125) (FStar.Pervasives.Native.Mktuple7__7 @x7py125)) :pattern ((FStar.Pervasives.Native.__proj__Mktuple7__item___7 @x0py911 @x1py1021 @x2py749 @x3py525 @x4py365 @x5py268 @x6py179 @x7py125)) )) :named proj_equation_FStar.Pervasives.Native.Mktuple7__7))
(assert (! (forall ((@x0py912 Term)(@x1py1022 Term)(@x2py750 Term)(@x3py526 Term)(@x4py366 Term)(@x5py269 Term)(@x6py180 Term)(@x7py126 Term)(@x8py80 Term)) (! (= (FStar.Pervasives.Native.__proj__Mktuple8__item___1 @x0py912 @x1py1022 @x2py750 @x3py526 @x4py366 @x5py269 @x6py180 @x7py126 @x8py80) (FStar.Pervasives.Native.Mktuple8__1 @x8py80)) :pattern ((FStar.Pervasives.Native.__proj__Mktuple8__item___1 @x0py912 @x1py1022 @x2py750 @x3py526 @x4py366 @x5py269 @x6py180 @x7py126 @x8py80)) )) :named proj_equation_FStar.Pervasives.Native.Mktuple8__1))
(assert (! (forall ((@x0py913 Term)(@x1py1023 Term)(@x2py751 Term)(@x3py527 Term)(@x4py367 Term)(@x5py270 Term)(@x6py181 Term)(@x7py127 Term)(@x8py81 Term)) (! (= (FStar.Pervasives.Native.__proj__Mktuple8__item___2 @x0py913 @x1py1023 @x2py751 @x3py527 @x4py367 @x5py270 @x6py181 @x7py127 @x8py81) (FStar.Pervasives.Native.Mktuple8__2 @x8py81)) :pattern ((FStar.Pervasives.Native.__proj__Mktuple8__item___2 @x0py913 @x1py1023 @x2py751 @x3py527 @x4py367 @x5py270 @x6py181 @x7py127 @x8py81)) )) :named proj_equation_FStar.Pervasives.Native.Mktuple8__2))
(assert (! (forall ((@x0py914 Term)(@x1py1024 Term)(@x2py752 Term)(@x3py528 Term)(@x4py368 Term)(@x5py271 Term)(@x6py182 Term)(@x7py128 Term)(@x8py82 Term)) (! (= (FStar.Pervasives.Native.__proj__Mktuple8__item___3 @x0py914 @x1py1024 @x2py752 @x3py528 @x4py368 @x5py271 @x6py182 @x7py128 @x8py82) (FStar.Pervasives.Native.Mktuple8__3 @x8py82)) :pattern ((FStar.Pervasives.Native.__proj__Mktuple8__item___3 @x0py914 @x1py1024 @x2py752 @x3py528 @x4py368 @x5py271 @x6py182 @x7py128 @x8py82)) )) :named proj_equation_FStar.Pervasives.Native.Mktuple8__3))
(assert (! (forall ((@x0py915 Term)(@x1py1025 Term)(@x2py753 Term)(@x3py529 Term)(@x4py369 Term)(@x5py272 Term)(@x6py183 Term)(@x7py129 Term)(@x8py83 Term)) (! (= (FStar.Pervasives.Native.__proj__Mktuple8__item___4 @x0py915 @x1py1025 @x2py753 @x3py529 @x4py369 @x5py272 @x6py183 @x7py129 @x8py83) (FStar.Pervasives.Native.Mktuple8__4 @x8py83)) :pattern ((FStar.Pervasives.Native.__proj__Mktuple8__item___4 @x0py915 @x1py1025 @x2py753 @x3py529 @x4py369 @x5py272 @x6py183 @x7py129 @x8py83)) )) :named proj_equation_FStar.Pervasives.Native.Mktuple8__4))
(assert (! (forall ((@x0py916 Term)(@x1py1026 Term)(@x2py754 Term)(@x3py530 Term)(@x4py370 Term)(@x5py273 Term)(@x6py184 Term)(@x7py130 Term)(@x8py84 Term)) (! (= (FStar.Pervasives.Native.__proj__Mktuple8__item___5 @x0py916 @x1py1026 @x2py754 @x3py530 @x4py370 @x5py273 @x6py184 @x7py130 @x8py84) (FStar.Pervasives.Native.Mktuple8__5 @x8py84)) :pattern ((FStar.Pervasives.Native.__proj__Mktuple8__item___5 @x0py916 @x1py1026 @x2py754 @x3py530 @x4py370 @x5py273 @x6py184 @x7py130 @x8py84)) )) :named proj_equation_FStar.Pervasives.Native.Mktuple8__5))
(assert (! (forall ((@x0py917 Term)(@x1py1027 Term)(@x2py755 Term)(@x3py531 Term)(@x4py371 Term)(@x5py274 Term)(@x6py185 Term)(@x7py131 Term)(@x8py85 Term)) (! (= (FStar.Pervasives.Native.__proj__Mktuple8__item___6 @x0py917 @x1py1027 @x2py755 @x3py531 @x4py371 @x5py274 @x6py185 @x7py131 @x8py85) (FStar.Pervasives.Native.Mktuple8__6 @x8py85)) :pattern ((FStar.Pervasives.Native.__proj__Mktuple8__item___6 @x0py917 @x1py1027 @x2py755 @x3py531 @x4py371 @x5py274 @x6py185 @x7py131 @x8py85)) )) :named proj_equation_FStar.Pervasives.Native.Mktuple8__6))
(assert (! (forall ((@x0py918 Term)(@x1py1028 Term)(@x2py756 Term)(@x3py532 Term)(@x4py372 Term)(@x5py275 Term)(@x6py186 Term)(@x7py132 Term)(@x8py86 Term)) (! (= (FStar.Pervasives.Native.__proj__Mktuple8__item___7 @x0py918 @x1py1028 @x2py756 @x3py532 @x4py372 @x5py275 @x6py186 @x7py132 @x8py86) (FStar.Pervasives.Native.Mktuple8__7 @x8py86)) :pattern ((FStar.Pervasives.Native.__proj__Mktuple8__item___7 @x0py918 @x1py1028 @x2py756 @x3py532 @x4py372 @x5py275 @x6py186 @x7py132 @x8py86)) )) :named proj_equation_FStar.Pervasives.Native.Mktuple8__7))
(assert (! (forall ((@x0py919 Term)(@x1py1029 Term)(@x2py757 Term)(@x3py533 Term)(@x4py373 Term)(@x5py276 Term)(@x6py187 Term)(@x7py133 Term)(@x8py87 Term)) (! (= (FStar.Pervasives.Native.__proj__Mktuple8__item___8 @x0py919 @x1py1029 @x2py757 @x3py533 @x4py373 @x5py276 @x6py187 @x7py133 @x8py87) (FStar.Pervasives.Native.Mktuple8__8 @x8py87)) :pattern ((FStar.Pervasives.Native.__proj__Mktuple8__item___8 @x0py919 @x1py1029 @x2py757 @x3py533 @x4py373 @x5py276 @x6py187 @x7py133 @x8py87)) )) :named proj_equation_FStar.Pervasives.Native.Mktuple8__8))
(assert (! (forall ((@x0py920 Term)(@x1py1030 Term)) (! (= (FStar.Pervasives.Native.__proj__Some__item__v @x0py920 @x1py1030) (FStar.Pervasives.Native.Some_v @x1py1030)) :pattern ((FStar.Pervasives.Native.__proj__Some__item__v @x0py920 @x1py1030)) )) :named proj_equation_FStar.Pervasives.Native.Some_v))
(assert (! (forall ((@x0py921 Term)) (! (= (FStar.Pervasives.__proj__PpxDerivingShowConstant__item___0 @x0py921) (FStar.Pervasives.PpxDerivingShowConstant__0 @x0py921)) :pattern ((FStar.Pervasives.__proj__PpxDerivingShowConstant__item___0 @x0py921)) )) :named proj_equation_FStar.Pervasives.PpxDerivingShowConstant__0))
(assert (! (forall ((@x0py922 Term)(@x1py1031 Term)) (! (= (FStar.Pervasives.__proj__V__item__v @x0py922 @x1py1031) (FStar.Pervasives.V_v @x1py1031)) :pattern ((FStar.Pervasives.__proj__V__item__v @x0py922 @x1py1031)) )) :named proj_equation_FStar.Pervasives.V_v))
(assert (! (forall ((@x0py923 Term)(@x1py1032 Term)(@x2py758 Term)) (! (= (Prims.__proj__And__item___0 @x0py923 @x1py1032 @x2py758) (Prims.And__0 @x2py758)) :pattern ((Prims.__proj__And__item___0 @x0py923 @x1py1032 @x2py758)) )) :named proj_equation_Prims.And__0))
(assert (! (forall ((@x0py924 Term)(@x1py1033 Term)(@x2py759 Term)) (! (= (Prims.__proj__And__item___1 @x0py924 @x1py1033 @x2py759) (Prims.And__1 @x2py759)) :pattern ((Prims.__proj__And__item___1 @x0py924 @x1py1033 @x2py759)) )) :named proj_equation_Prims.And__1))
(assert (! (forall ((@x0py925 Term)(@x1py1034 Term)) (! (= (Prims.__proj__Cons__item__hd @x0py925 @x1py1034) (Prims.Cons_hd @x1py1034)) :pattern ((Prims.__proj__Cons__item__hd @x0py925 @x1py1034)) )) :named proj_equation_Prims.Cons_hd))
(assert (! (forall ((@x0py926 Term)(@x1py1035 Term)) (! (= (Prims.__proj__Cons__item__tl @x0py926 @x1py1035) (Prims.Cons_tl @x1py1035)) :pattern ((Prims.__proj__Cons__item__tl @x0py926 @x1py1035)) )) :named proj_equation_Prims.Cons_tl))
(assert (! (forall ((@x0py927 Term)(@x1py1036 Term)(@x2py760 Term)) (! (= (Prims.__proj__Left__item___0 @x0py927 @x1py1036 @x2py760) (Prims.Left__0 @x2py760)) :pattern ((Prims.__proj__Left__item___0 @x0py927 @x1py1036 @x2py760)) )) :named proj_equation_Prims.Left__0))
(assert (! (forall ((@x0py928 Term)(@x1py1037 Term)(@x2py761 Term)) (! (= (Prims.__proj__Mkdtuple2__item___1 @x0py928 @x1py1037 @x2py761) (Prims.Mkdtuple2__1 @x2py761)) :pattern ((Prims.__proj__Mkdtuple2__item___1 @x0py928 @x1py1037 @x2py761)) )) :named proj_equation_Prims.Mkdtuple2__1))
(assert (! (forall ((@x0py929 Term)(@x1py1038 Term)(@x2py762 Term)) (! (= (Prims.__proj__Mkdtuple2__item___2 @x0py929 @x1py1038 @x2py762) (Prims.Mkdtuple2__2 @x2py762)) :pattern ((Prims.__proj__Mkdtuple2__item___2 @x0py929 @x1py1038 @x2py762)) )) :named proj_equation_Prims.Mkdtuple2__2))
(assert (! (forall ((@x0py930 Term)(@x1py1039 Term)(@x2py763 Term)) (! (= (Prims.__proj__Right__item___0 @x0py930 @x1py1039 @x2py763) (Prims.Right__0 @x2py763)) :pattern ((Prims.__proj__Right__item___0 @x0py930 @x1py1039 @x2py763)) )) :named proj_equation_Prims.Right__0))
(assert (! (forall ((@u0py309 Bool)) (! (and (or (not (BoxBool_proj_0 (BoxBool @u0py309))) @u0py309) (or (BoxBool_proj_0 (BoxBool @u0py309)) (not @u0py309))) :pattern ((BoxBool @u0py309)) )) :named projection_inverse_BoxBool_proj_0))
(assert (! (forall ((@u0py310 Int)) (! (= (BoxInt_proj_0 (BoxInt @u0py310)) @u0py310) :pattern ((BoxInt @u0py310)) )) :named projection_inverse_BoxInt_proj_0))
(assert (! (forall ((@u0py311 FString)) (! (= (BoxString_proj_0 (BoxString @u0py311)) @u0py311) :pattern ((BoxString @u0py311)) )) :named projection_inverse_BoxString_proj_0))
(assert (! (forall ((@x0py931 Term)(@x1py1040 Term)) (! (= (False.CalcRefl_t (False.CalcRefl @x0py931 @x1py1040)) @x0py931) :pattern ((False.CalcRefl @x0py931 @x1py1040)) )) :named projection_inverse_False.CalcRefl_t))
(assert (! (forall ((@x0py932 Term)(@x1py1041 Term)) (! (= (False.CalcRefl_x (False.CalcRefl @x0py932 @x1py1041)) @x1py1041) :pattern ((False.CalcRefl @x0py932 @x1py1041)) )) :named projection_inverse_False.CalcRefl_x))
(assert (! (forall ((@x0py933 Term)(@x1py1042 Term)(@x2py764 Term)(@x3py534 Term)(@x4py374 Term)(@x5py277 Term)(@x6py188 Term)(@x7py134 Term)) (! (= (False.CalcStep__5 (False.CalcStep @x0py933 @x1py1042 @x2py764 @x3py534 @x4py374 @x5py277 @x6py188 @x7py134)) @x6py188) :pattern ((False.CalcStep @x0py933 @x1py1042 @x2py764 @x3py534 @x4py374 @x5py277 @x6py188 @x7py134)) )) :named projection_inverse_False.CalcStep__5))
(assert (! (forall ((@x0py934 Term)(@x1py1043 Term)(@x2py765 Term)(@x3py535 Term)(@x4py375 Term)(@x5py278 Term)(@x6py189 Term)(@x7py135 Term)) (! (= (False.CalcStep__6 (False.CalcStep @x0py934 @x1py1043 @x2py765 @x3py535 @x4py375 @x5py278 @x6py189 @x7py135)) @x7py135) :pattern ((False.CalcStep @x0py934 @x1py1043 @x2py765 @x3py535 @x4py375 @x5py278 @x6py189 @x7py135)) )) :named projection_inverse_False.CalcStep__6))
(assert (! (forall ((@x0py935 Term)(@x1py1044 Term)(@x2py766 Term)(@x3py536 Term)(@x4py376 Term)(@x5py279 Term)(@x6py190 Term)(@x7py136 Term)) (! (= (False.CalcStep_p (False.CalcStep @x0py935 @x1py1044 @x2py766 @x3py536 @x4py376 @x5py279 @x6py190 @x7py136)) @x2py766) :pattern ((False.CalcStep @x0py935 @x1py1044 @x2py766 @x3py536 @x4py376 @x5py279 @x6py190 @x7py136)) )) :named projection_inverse_False.CalcStep_p))
(assert (! (forall ((@x0py936 Term)(@x1py1045 Term)(@x2py767 Term)(@x3py537 Term)(@x4py377 Term)(@x5py280 Term)(@x6py191 Term)(@x7py137 Term)) (! (= (False.CalcStep_rs (False.CalcStep @x0py936 @x1py1045 @x2py767 @x3py537 @x4py377 @x5py280 @x6py191 @x7py137)) @x1py1045) :pattern ((False.CalcStep @x0py936 @x1py1045 @x2py767 @x3py537 @x4py377 @x5py280 @x6py191 @x7py137)) )) :named projection_inverse_False.CalcStep_rs))
(assert (! (forall ((@x0py937 Term)(@x1py1046 Term)(@x2py768 Term)(@x3py538 Term)(@x4py378 Term)(@x5py281 Term)(@x6py192 Term)(@x7py138 Term)) (! (= (False.CalcStep_t (False.CalcStep @x0py937 @x1py1046 @x2py768 @x3py538 @x4py378 @x5py281 @x6py192 @x7py138)) @x0py937) :pattern ((False.CalcStep @x0py937 @x1py1046 @x2py768 @x3py538 @x4py378 @x5py281 @x6py192 @x7py138)) )) :named projection_inverse_False.CalcStep_t))
(assert (! (forall ((@x0py938 Term)(@x1py1047 Term)(@x2py769 Term)(@x3py539 Term)(@x4py379 Term)(@x5py282 Term)(@x6py193 Term)(@x7py139 Term)) (! (= (False.CalcStep_x (False.CalcStep @x0py938 @x1py1047 @x2py769 @x3py539 @x4py379 @x5py282 @x6py193 @x7py139)) @x3py539) :pattern ((False.CalcStep @x0py938 @x1py1047 @x2py769 @x3py539 @x4py379 @x5py282 @x6py193 @x7py139)) )) :named projection_inverse_False.CalcStep_x))
(assert (! (forall ((@x0py939 Term)(@x1py1048 Term)(@x2py770 Term)(@x3py540 Term)(@x4py380 Term)(@x5py283 Term)(@x6py194 Term)(@x7py140 Term)) (! (= (False.CalcStep_y (False.CalcStep @x0py939 @x1py1048 @x2py770 @x3py540 @x4py380 @x5py283 @x6py194 @x7py140)) @x4py380) :pattern ((False.CalcStep @x0py939 @x1py1048 @x2py770 @x3py540 @x4py380 @x5py283 @x6py194 @x7py140)) )) :named projection_inverse_False.CalcStep_y))
(assert (! (forall ((@x0py940 Term)(@x1py1049 Term)(@x2py771 Term)(@x3py541 Term)(@x4py381 Term)(@x5py284 Term)(@x6py195 Term)(@x7py141 Term)) (! (= (False.CalcStep_z (False.CalcStep @x0py940 @x1py1049 @x2py771 @x3py541 @x4py381 @x5py284 @x6py195 @x7py141)) @x5py284) :pattern ((False.CalcStep @x0py940 @x1py1049 @x2py771 @x3py541 @x4py381 @x5py284 @x6py195 @x7py141)) )) :named projection_inverse_False.CalcStep_z))
(assert (! (forall ((@x0py941 Term)) (! (= (FStar.Pervasives.CConst__0 (FStar.Pervasives.CConst @x0py941)) @x0py941) :pattern ((FStar.Pervasives.CConst @x0py941)) )) :named projection_inverse_FStar.Pervasives.CConst__0))
(assert (! (forall ((@x0py942 Term)) (! (= (FStar.Pervasives.CEpilogue__0 (FStar.Pervasives.CEpilogue @x0py942)) @x0py942) :pattern ((FStar.Pervasives.CEpilogue @x0py942)) )) :named projection_inverse_FStar.Pervasives.CEpilogue__0))
(assert (! (forall ((@x0py943 Term)) (! (= (FStar.Pervasives.Comment__0 (FStar.Pervasives.Comment @x0py943)) @x0py943) :pattern ((FStar.Pervasives.Comment @x0py943)) )) :named projection_inverse_FStar.Pervasives.Comment__0))
(assert (! (forall ((@x0py944 Term)) (! (= (FStar.Pervasives.CPrologue__0 (FStar.Pervasives.CPrologue @x0py944)) @x0py944) :pattern ((FStar.Pervasives.CPrologue @x0py944)) )) :named projection_inverse_FStar.Pervasives.CPrologue__0))
(assert (! (forall ((@x0py945 Term)(@x1py1050 Term)) (! (= (FStar.Pervasives.E_a (FStar.Pervasives.E @x0py945 @x1py1050)) @x0py945) :pattern ((FStar.Pervasives.E @x0py945 @x1py1050)) )) :named projection_inverse_FStar.Pervasives.E_a))
(assert (! (forall ((@x0py946 Term)(@x1py1051 Term)) (! (= (FStar.Pervasives.E_e (FStar.Pervasives.E @x0py946 @x1py1051)) @x1py1051) :pattern ((FStar.Pervasives.E @x0py946 @x1py1051)) )) :named projection_inverse_FStar.Pervasives.E_e))
(assert (! (forall ((@x0py947 Term)(@x1py1052 Term)) (! (= (FStar.Pervasives.Err_a (FStar.Pervasives.Err @x0py947 @x1py1052)) @x0py947) :pattern ((FStar.Pervasives.Err @x0py947 @x1py1052)) )) :named projection_inverse_FStar.Pervasives.Err_a))
(assert (! (forall ((@x0py948 Term)(@x1py1053 Term)) (! (= (FStar.Pervasives.Err_msg (FStar.Pervasives.Err @x0py948 @x1py1053)) @x1py1053) :pattern ((FStar.Pervasives.Err @x0py948 @x1py1053)) )) :named projection_inverse_FStar.Pervasives.Err_msg))
(assert (! (forall ((@x0py949 Term)(@x1py1054 Term)(@x2py772 Term)) (! (= (FStar.Pervasives.Inl__a (FStar.Pervasives.Inl @x0py949 @x1py1054 @x2py772)) @x0py949) :pattern ((FStar.Pervasives.Inl @x0py949 @x1py1054 @x2py772)) )) :named projection_inverse_FStar.Pervasives.Inl__a))
(assert (! (forall ((@x0py950 Term)(@x1py1055 Term)(@x2py773 Term)) (! (= (FStar.Pervasives.Inl__b (FStar.Pervasives.Inl @x0py950 @x1py1055 @x2py773)) @x1py1055) :pattern ((FStar.Pervasives.Inl @x0py950 @x1py1055 @x2py773)) )) :named projection_inverse_FStar.Pervasives.Inl__b))
(assert (! (forall ((@x0py951 Term)(@x1py1056 Term)(@x2py774 Term)) (! (= (FStar.Pervasives.Inl_v (FStar.Pervasives.Inl @x0py951 @x1py1056 @x2py774)) @x2py774) :pattern ((FStar.Pervasives.Inl @x0py951 @x1py1056 @x2py774)) )) :named projection_inverse_FStar.Pervasives.Inl_v))
(assert (! (forall ((@x0py952 Term)(@x1py1057 Term)(@x2py775 Term)) (! (= (FStar.Pervasives.Inr__a (FStar.Pervasives.Inr @x0py952 @x1py1057 @x2py775)) @x0py952) :pattern ((FStar.Pervasives.Inr @x0py952 @x1py1057 @x2py775)) )) :named projection_inverse_FStar.Pervasives.Inr__a))
(assert (! (forall ((@x0py953 Term)(@x1py1058 Term)(@x2py776 Term)) (! (= (FStar.Pervasives.Inr__b (FStar.Pervasives.Inr @x0py953 @x1py1058 @x2py776)) @x1py1058) :pattern ((FStar.Pervasives.Inr @x0py953 @x1py1058 @x2py776)) )) :named projection_inverse_FStar.Pervasives.Inr__b))
(assert (! (forall ((@x0py954 Term)(@x1py1059 Term)(@x2py777 Term)) (! (= (FStar.Pervasives.Inr_v (FStar.Pervasives.Inr @x0py954 @x1py1059 @x2py777)) @x2py777) :pattern ((FStar.Pervasives.Inr @x0py954 @x1py1059 @x2py777)) )) :named projection_inverse_FStar.Pervasives.Inr_v))
(assert (! (forall ((@x0py955 Term)(@x1py1060 Term)(@x2py778 Term)(@x3py542 Term)(@x4py382 Term)(@x5py285 Term)) (! (= (FStar.Pervasives.Mkdtuple3__1 (FStar.Pervasives.Mkdtuple3 @x0py955 @x1py1060 @x2py778 @x3py542 @x4py382 @x5py285)) @x3py542) :pattern ((FStar.Pervasives.Mkdtuple3 @x0py955 @x1py1060 @x2py778 @x3py542 @x4py382 @x5py285)) )) :named projection_inverse_FStar.Pervasives.Mkdtuple3__1))
(assert (! (forall ((@x0py956 Term)(@x1py1061 Term)(@x2py779 Term)(@x3py543 Term)(@x4py383 Term)(@x5py286 Term)) (! (= (FStar.Pervasives.Mkdtuple3__2 (FStar.Pervasives.Mkdtuple3 @x0py956 @x1py1061 @x2py779 @x3py543 @x4py383 @x5py286)) @x4py383) :pattern ((FStar.Pervasives.Mkdtuple3 @x0py956 @x1py1061 @x2py779 @x3py543 @x4py383 @x5py286)) )) :named projection_inverse_FStar.Pervasives.Mkdtuple3__2))
(assert (! (forall ((@x0py957 Term)(@x1py1062 Term)(@x2py780 Term)(@x3py544 Term)(@x4py384 Term)(@x5py287 Term)) (! (= (FStar.Pervasives.Mkdtuple3__3 (FStar.Pervasives.Mkdtuple3 @x0py957 @x1py1062 @x2py780 @x3py544 @x4py384 @x5py287)) @x5py287) :pattern ((FStar.Pervasives.Mkdtuple3 @x0py957 @x1py1062 @x2py780 @x3py544 @x4py384 @x5py287)) )) :named projection_inverse_FStar.Pervasives.Mkdtuple3__3))
(assert (! (forall ((@x0py958 Term)(@x1py1063 Term)(@x2py781 Term)(@x3py545 Term)(@x4py385 Term)(@x5py288 Term)) (! (= (FStar.Pervasives.Mkdtuple3_a (FStar.Pervasives.Mkdtuple3 @x0py958 @x1py1063 @x2py781 @x3py545 @x4py385 @x5py288)) @x0py958) :pattern ((FStar.Pervasives.Mkdtuple3 @x0py958 @x1py1063 @x2py781 @x3py545 @x4py385 @x5py288)) )) :named projection_inverse_FStar.Pervasives.Mkdtuple3_a))
(assert (! (forall ((@x0py959 Term)(@x1py1064 Term)(@x2py782 Term)(@x3py546 Term)(@x4py386 Term)(@x5py289 Term)) (! (= (FStar.Pervasives.Mkdtuple3_b (FStar.Pervasives.Mkdtuple3 @x0py959 @x1py1064 @x2py782 @x3py546 @x4py386 @x5py289)) @x1py1064) :pattern ((FStar.Pervasives.Mkdtuple3 @x0py959 @x1py1064 @x2py782 @x3py546 @x4py386 @x5py289)) )) :named projection_inverse_FStar.Pervasives.Mkdtuple3_b))
(assert (! (forall ((@x0py960 Term)(@x1py1065 Term)(@x2py783 Term)(@x3py547 Term)(@x4py387 Term)(@x5py290 Term)) (! (= (FStar.Pervasives.Mkdtuple3_c (FStar.Pervasives.Mkdtuple3 @x0py960 @x1py1065 @x2py783 @x3py547 @x4py387 @x5py290)) @x2py783) :pattern ((FStar.Pervasives.Mkdtuple3 @x0py960 @x1py1065 @x2py783 @x3py547 @x4py387 @x5py290)) )) :named projection_inverse_FStar.Pervasives.Mkdtuple3_c))
(assert (! (forall ((@x0py961 Term)(@x1py1066 Term)(@x2py784 Term)(@x3py548 Term)(@x4py388 Term)(@x5py291 Term)(@x6py196 Term)(@x7py142 Term)) (! (= (FStar.Pervasives.Mkdtuple4__1 (FStar.Pervasives.Mkdtuple4 @x0py961 @x1py1066 @x2py784 @x3py548 @x4py388 @x5py291 @x6py196 @x7py142)) @x4py388) :pattern ((FStar.Pervasives.Mkdtuple4 @x0py961 @x1py1066 @x2py784 @x3py548 @x4py388 @x5py291 @x6py196 @x7py142)) )) :named projection_inverse_FStar.Pervasives.Mkdtuple4__1))
(assert (! (forall ((@x0py962 Term)(@x1py1067 Term)(@x2py785 Term)(@x3py549 Term)(@x4py389 Term)(@x5py292 Term)(@x6py197 Term)(@x7py143 Term)) (! (= (FStar.Pervasives.Mkdtuple4__2 (FStar.Pervasives.Mkdtuple4 @x0py962 @x1py1067 @x2py785 @x3py549 @x4py389 @x5py292 @x6py197 @x7py143)) @x5py292) :pattern ((FStar.Pervasives.Mkdtuple4 @x0py962 @x1py1067 @x2py785 @x3py549 @x4py389 @x5py292 @x6py197 @x7py143)) )) :named projection_inverse_FStar.Pervasives.Mkdtuple4__2))
(assert (! (forall ((@x0py963 Term)(@x1py1068 Term)(@x2py786 Term)(@x3py550 Term)(@x4py390 Term)(@x5py293 Term)(@x6py198 Term)(@x7py144 Term)) (! (= (FStar.Pervasives.Mkdtuple4__3 (FStar.Pervasives.Mkdtuple4 @x0py963 @x1py1068 @x2py786 @x3py550 @x4py390 @x5py293 @x6py198 @x7py144)) @x6py198) :pattern ((FStar.Pervasives.Mkdtuple4 @x0py963 @x1py1068 @x2py786 @x3py550 @x4py390 @x5py293 @x6py198 @x7py144)) )) :named projection_inverse_FStar.Pervasives.Mkdtuple4__3))
(assert (! (forall ((@x0py964 Term)(@x1py1069 Term)(@x2py787 Term)(@x3py551 Term)(@x4py391 Term)(@x5py294 Term)(@x6py199 Term)(@x7py145 Term)) (! (= (FStar.Pervasives.Mkdtuple4__4 (FStar.Pervasives.Mkdtuple4 @x0py964 @x1py1069 @x2py787 @x3py551 @x4py391 @x5py294 @x6py199 @x7py145)) @x7py145) :pattern ((FStar.Pervasives.Mkdtuple4 @x0py964 @x1py1069 @x2py787 @x3py551 @x4py391 @x5py294 @x6py199 @x7py145)) )) :named projection_inverse_FStar.Pervasives.Mkdtuple4__4))
(assert (! (forall ((@x0py965 Term)(@x1py1070 Term)(@x2py788 Term)(@x3py552 Term)(@x4py392 Term)(@x5py295 Term)(@x6py200 Term)(@x7py146 Term)) (! (= (FStar.Pervasives.Mkdtuple4_a (FStar.Pervasives.Mkdtuple4 @x0py965 @x1py1070 @x2py788 @x3py552 @x4py392 @x5py295 @x6py200 @x7py146)) @x0py965) :pattern ((FStar.Pervasives.Mkdtuple4 @x0py965 @x1py1070 @x2py788 @x3py552 @x4py392 @x5py295 @x6py200 @x7py146)) )) :named projection_inverse_FStar.Pervasives.Mkdtuple4_a))
(assert (! (forall ((@x0py966 Term)(@x1py1071 Term)(@x2py789 Term)(@x3py553 Term)(@x4py393 Term)(@x5py296 Term)(@x6py201 Term)(@x7py147 Term)) (! (= (FStar.Pervasives.Mkdtuple4_b (FStar.Pervasives.Mkdtuple4 @x0py966 @x1py1071 @x2py789 @x3py553 @x4py393 @x5py296 @x6py201 @x7py147)) @x1py1071) :pattern ((FStar.Pervasives.Mkdtuple4 @x0py966 @x1py1071 @x2py789 @x3py553 @x4py393 @x5py296 @x6py201 @x7py147)) )) :named projection_inverse_FStar.Pervasives.Mkdtuple4_b))
(assert (! (forall ((@x0py967 Term)(@x1py1072 Term)(@x2py790 Term)(@x3py554 Term)(@x4py394 Term)(@x5py297 Term)(@x6py202 Term)(@x7py148 Term)) (! (= (FStar.Pervasives.Mkdtuple4_c (FStar.Pervasives.Mkdtuple4 @x0py967 @x1py1072 @x2py790 @x3py554 @x4py394 @x5py297 @x6py202 @x7py148)) @x2py790) :pattern ((FStar.Pervasives.Mkdtuple4 @x0py967 @x1py1072 @x2py790 @x3py554 @x4py394 @x5py297 @x6py202 @x7py148)) )) :named projection_inverse_FStar.Pervasives.Mkdtuple4_c))
(assert (! (forall ((@x0py968 Term)(@x1py1073 Term)(@x2py791 Term)(@x3py555 Term)(@x4py395 Term)(@x5py298 Term)(@x6py203 Term)(@x7py149 Term)) (! (= (FStar.Pervasives.Mkdtuple4_d (FStar.Pervasives.Mkdtuple4 @x0py968 @x1py1073 @x2py791 @x3py555 @x4py395 @x5py298 @x6py203 @x7py149)) @x3py555) :pattern ((FStar.Pervasives.Mkdtuple4 @x0py968 @x1py1073 @x2py791 @x3py555 @x4py395 @x5py298 @x6py203 @x7py149)) )) :named projection_inverse_FStar.Pervasives.Mkdtuple4_d))
(assert (! (forall ((@x0py969 Term)(@x1py1074 Term)(@x2py792 Term)(@x3py556 Term)) (! (= (FStar.Pervasives.Native.Mktuple2__1 (FStar.Pervasives.Native.Mktuple2 @x0py969 @x1py1074 @x2py792 @x3py556)) @x2py792) :pattern ((FStar.Pervasives.Native.Mktuple2 @x0py969 @x1py1074 @x2py792 @x3py556)) )) :named projection_inverse_FStar.Pervasives.Native.Mktuple2__1))
(assert (! (forall ((@x0py970 Term)(@x1py1075 Term)(@x2py793 Term)(@x3py557 Term)) (! (= (FStar.Pervasives.Native.Mktuple2__2 (FStar.Pervasives.Native.Mktuple2 @x0py970 @x1py1075 @x2py793 @x3py557)) @x3py557) :pattern ((FStar.Pervasives.Native.Mktuple2 @x0py970 @x1py1075 @x2py793 @x3py557)) )) :named projection_inverse_FStar.Pervasives.Native.Mktuple2__2))
(assert (! (forall ((@x0py971 Term)(@x1py1076 Term)(@x2py794 Term)(@x3py558 Term)) (! (= (FStar.Pervasives.Native.Mktuple2__a (FStar.Pervasives.Native.Mktuple2 @x0py971 @x1py1076 @x2py794 @x3py558)) @x0py971) :pattern ((FStar.Pervasives.Native.Mktuple2 @x0py971 @x1py1076 @x2py794 @x3py558)) )) :named projection_inverse_FStar.Pervasives.Native.Mktuple2__a))
(assert (! (forall ((@x0py972 Term)(@x1py1077 Term)(@x2py795 Term)(@x3py559 Term)) (! (= (FStar.Pervasives.Native.Mktuple2__b (FStar.Pervasives.Native.Mktuple2 @x0py972 @x1py1077 @x2py795 @x3py559)) @x1py1077) :pattern ((FStar.Pervasives.Native.Mktuple2 @x0py972 @x1py1077 @x2py795 @x3py559)) )) :named projection_inverse_FStar.Pervasives.Native.Mktuple2__b))
(assert (! (forall ((@x0py973 Term)(@x1py1078 Term)(@x2py796 Term)(@x3py560 Term)(@x4py396 Term)(@x5py299 Term)) (! (= (FStar.Pervasives.Native.Mktuple3__1 (FStar.Pervasives.Native.Mktuple3 @x0py973 @x1py1078 @x2py796 @x3py560 @x4py396 @x5py299)) @x3py560) :pattern ((FStar.Pervasives.Native.Mktuple3 @x0py973 @x1py1078 @x2py796 @x3py560 @x4py396 @x5py299)) )) :named projection_inverse_FStar.Pervasives.Native.Mktuple3__1))
(assert (! (forall ((@x0py974 Term)(@x1py1079 Term)(@x2py797 Term)(@x3py561 Term)(@x4py397 Term)(@x5py300 Term)) (! (= (FStar.Pervasives.Native.Mktuple3__2 (FStar.Pervasives.Native.Mktuple3 @x0py974 @x1py1079 @x2py797 @x3py561 @x4py397 @x5py300)) @x4py397) :pattern ((FStar.Pervasives.Native.Mktuple3 @x0py974 @x1py1079 @x2py797 @x3py561 @x4py397 @x5py300)) )) :named projection_inverse_FStar.Pervasives.Native.Mktuple3__2))
(assert (! (forall ((@x0py975 Term)(@x1py1080 Term)(@x2py798 Term)(@x3py562 Term)(@x4py398 Term)(@x5py301 Term)) (! (= (FStar.Pervasives.Native.Mktuple3__3 (FStar.Pervasives.Native.Mktuple3 @x0py975 @x1py1080 @x2py798 @x3py562 @x4py398 @x5py301)) @x5py301) :pattern ((FStar.Pervasives.Native.Mktuple3 @x0py975 @x1py1080 @x2py798 @x3py562 @x4py398 @x5py301)) )) :named projection_inverse_FStar.Pervasives.Native.Mktuple3__3))
(assert (! (forall ((@x0py976 Term)(@x1py1081 Term)(@x2py799 Term)(@x3py563 Term)(@x4py399 Term)(@x5py302 Term)) (! (= (FStar.Pervasives.Native.Mktuple3__a (FStar.Pervasives.Native.Mktuple3 @x0py976 @x1py1081 @x2py799 @x3py563 @x4py399 @x5py302)) @x0py976) :pattern ((FStar.Pervasives.Native.Mktuple3 @x0py976 @x1py1081 @x2py799 @x3py563 @x4py399 @x5py302)) )) :named projection_inverse_FStar.Pervasives.Native.Mktuple3__a))
(assert (! (forall ((@x0py977 Term)(@x1py1082 Term)(@x2py800 Term)(@x3py564 Term)(@x4py400 Term)(@x5py303 Term)) (! (= (FStar.Pervasives.Native.Mktuple3__b (FStar.Pervasives.Native.Mktuple3 @x0py977 @x1py1082 @x2py800 @x3py564 @x4py400 @x5py303)) @x1py1082) :pattern ((FStar.Pervasives.Native.Mktuple3 @x0py977 @x1py1082 @x2py800 @x3py564 @x4py400 @x5py303)) )) :named projection_inverse_FStar.Pervasives.Native.Mktuple3__b))
(assert (! (forall ((@x0py978 Term)(@x1py1083 Term)(@x2py801 Term)(@x3py565 Term)(@x4py401 Term)(@x5py304 Term)) (! (= (FStar.Pervasives.Native.Mktuple3__c (FStar.Pervasives.Native.Mktuple3 @x0py978 @x1py1083 @x2py801 @x3py565 @x4py401 @x5py304)) @x2py801) :pattern ((FStar.Pervasives.Native.Mktuple3 @x0py978 @x1py1083 @x2py801 @x3py565 @x4py401 @x5py304)) )) :named projection_inverse_FStar.Pervasives.Native.Mktuple3__c))
(assert (! (forall ((@x0py979 Term)(@x1py1084 Term)(@x2py802 Term)(@x3py566 Term)(@x4py402 Term)(@x5py305 Term)(@x6py204 Term)(@x7py150 Term)) (! (= (FStar.Pervasives.Native.Mktuple4__1 (FStar.Pervasives.Native.Mktuple4 @x0py979 @x1py1084 @x2py802 @x3py566 @x4py402 @x5py305 @x6py204 @x7py150)) @x4py402) :pattern ((FStar.Pervasives.Native.Mktuple4 @x0py979 @x1py1084 @x2py802 @x3py566 @x4py402 @x5py305 @x6py204 @x7py150)) )) :named projection_inverse_FStar.Pervasives.Native.Mktuple4__1))
(assert (! (forall ((@x0py980 Term)(@x1py1085 Term)(@x2py803 Term)(@x3py567 Term)(@x4py403 Term)(@x5py306 Term)(@x6py205 Term)(@x7py151 Term)) (! (= (FStar.Pervasives.Native.Mktuple4__2 (FStar.Pervasives.Native.Mktuple4 @x0py980 @x1py1085 @x2py803 @x3py567 @x4py403 @x5py306 @x6py205 @x7py151)) @x5py306) :pattern ((FStar.Pervasives.Native.Mktuple4 @x0py980 @x1py1085 @x2py803 @x3py567 @x4py403 @x5py306 @x6py205 @x7py151)) )) :named projection_inverse_FStar.Pervasives.Native.Mktuple4__2))
(assert (! (forall ((@x0py981 Term)(@x1py1086 Term)(@x2py804 Term)(@x3py568 Term)(@x4py404 Term)(@x5py307 Term)(@x6py206 Term)(@x7py152 Term)) (! (= (FStar.Pervasives.Native.Mktuple4__3 (FStar.Pervasives.Native.Mktuple4 @x0py981 @x1py1086 @x2py804 @x3py568 @x4py404 @x5py307 @x6py206 @x7py152)) @x6py206) :pattern ((FStar.Pervasives.Native.Mktuple4 @x0py981 @x1py1086 @x2py804 @x3py568 @x4py404 @x5py307 @x6py206 @x7py152)) )) :named projection_inverse_FStar.Pervasives.Native.Mktuple4__3))
(assert (! (forall ((@x0py982 Term)(@x1py1087 Term)(@x2py805 Term)(@x3py569 Term)(@x4py405 Term)(@x5py308 Term)(@x6py207 Term)(@x7py153 Term)) (! (= (FStar.Pervasives.Native.Mktuple4__4 (FStar.Pervasives.Native.Mktuple4 @x0py982 @x1py1087 @x2py805 @x3py569 @x4py405 @x5py308 @x6py207 @x7py153)) @x7py153) :pattern ((FStar.Pervasives.Native.Mktuple4 @x0py982 @x1py1087 @x2py805 @x3py569 @x4py405 @x5py308 @x6py207 @x7py153)) )) :named projection_inverse_FStar.Pervasives.Native.Mktuple4__4))
(assert (! (forall ((@x0py983 Term)(@x1py1088 Term)(@x2py806 Term)(@x3py570 Term)(@x4py406 Term)(@x5py309 Term)(@x6py208 Term)(@x7py154 Term)) (! (= (FStar.Pervasives.Native.Mktuple4__a (FStar.Pervasives.Native.Mktuple4 @x0py983 @x1py1088 @x2py806 @x3py570 @x4py406 @x5py309 @x6py208 @x7py154)) @x0py983) :pattern ((FStar.Pervasives.Native.Mktuple4 @x0py983 @x1py1088 @x2py806 @x3py570 @x4py406 @x5py309 @x6py208 @x7py154)) )) :named projection_inverse_FStar.Pervasives.Native.Mktuple4__a))
(assert (! (forall ((@x0py984 Term)(@x1py1089 Term)(@x2py807 Term)(@x3py571 Term)(@x4py407 Term)(@x5py310 Term)(@x6py209 Term)(@x7py155 Term)) (! (= (FStar.Pervasives.Native.Mktuple4__b (FStar.Pervasives.Native.Mktuple4 @x0py984 @x1py1089 @x2py807 @x3py571 @x4py407 @x5py310 @x6py209 @x7py155)) @x1py1089) :pattern ((FStar.Pervasives.Native.Mktuple4 @x0py984 @x1py1089 @x2py807 @x3py571 @x4py407 @x5py310 @x6py209 @x7py155)) )) :named projection_inverse_FStar.Pervasives.Native.Mktuple4__b))
(assert (! (forall ((@x0py985 Term)(@x1py1090 Term)(@x2py808 Term)(@x3py572 Term)(@x4py408 Term)(@x5py311 Term)(@x6py210 Term)(@x7py156 Term)) (! (= (FStar.Pervasives.Native.Mktuple4__c (FStar.Pervasives.Native.Mktuple4 @x0py985 @x1py1090 @x2py808 @x3py572 @x4py408 @x5py311 @x6py210 @x7py156)) @x2py808) :pattern ((FStar.Pervasives.Native.Mktuple4 @x0py985 @x1py1090 @x2py808 @x3py572 @x4py408 @x5py311 @x6py210 @x7py156)) )) :named projection_inverse_FStar.Pervasives.Native.Mktuple4__c))
(assert (! (forall ((@x0py986 Term)(@x1py1091 Term)(@x2py809 Term)(@x3py573 Term)(@x4py409 Term)(@x5py312 Term)(@x6py211 Term)(@x7py157 Term)) (! (= (FStar.Pervasives.Native.Mktuple4__d (FStar.Pervasives.Native.Mktuple4 @x0py986 @x1py1091 @x2py809 @x3py573 @x4py409 @x5py312 @x6py211 @x7py157)) @x3py573) :pattern ((FStar.Pervasives.Native.Mktuple4 @x0py986 @x1py1091 @x2py809 @x3py573 @x4py409 @x5py312 @x6py211 @x7py157)) )) :named projection_inverse_FStar.Pervasives.Native.Mktuple4__d))
(assert (! (forall ((@x0py987 Term)(@x1py1092 Term)(@x2py810 Term)(@x3py574 Term)(@x4py410 Term)(@x5py313 Term)(@x6py212 Term)(@x7py158 Term)(@x8py88 Term)(@x9py49 Term)) (! (= (FStar.Pervasives.Native.Mktuple5__1 (FStar.Pervasives.Native.Mktuple5 @x0py987 @x1py1092 @x2py810 @x3py574 @x4py410 @x5py313 @x6py212 @x7py158 @x8py88 @x9py49)) @x5py313) :pattern ((FStar.Pervasives.Native.Mktuple5 @x0py987 @x1py1092 @x2py810 @x3py574 @x4py410 @x5py313 @x6py212 @x7py158 @x8py88 @x9py49)) )) :named projection_inverse_FStar.Pervasives.Native.Mktuple5__1))
(assert (! (forall ((@x0py988 Term)(@x1py1093 Term)(@x2py811 Term)(@x3py575 Term)(@x4py411 Term)(@x5py314 Term)(@x6py213 Term)(@x7py159 Term)(@x8py89 Term)(@x9py50 Term)) (! (= (FStar.Pervasives.Native.Mktuple5__2 (FStar.Pervasives.Native.Mktuple5 @x0py988 @x1py1093 @x2py811 @x3py575 @x4py411 @x5py314 @x6py213 @x7py159 @x8py89 @x9py50)) @x6py213) :pattern ((FStar.Pervasives.Native.Mktuple5 @x0py988 @x1py1093 @x2py811 @x3py575 @x4py411 @x5py314 @x6py213 @x7py159 @x8py89 @x9py50)) )) :named projection_inverse_FStar.Pervasives.Native.Mktuple5__2))
(assert (! (forall ((@x0py989 Term)(@x1py1094 Term)(@x2py812 Term)(@x3py576 Term)(@x4py412 Term)(@x5py315 Term)(@x6py214 Term)(@x7py160 Term)(@x8py90 Term)(@x9py51 Term)) (! (= (FStar.Pervasives.Native.Mktuple5__3 (FStar.Pervasives.Native.Mktuple5 @x0py989 @x1py1094 @x2py812 @x3py576 @x4py412 @x5py315 @x6py214 @x7py160 @x8py90 @x9py51)) @x7py160) :pattern ((FStar.Pervasives.Native.Mktuple5 @x0py989 @x1py1094 @x2py812 @x3py576 @x4py412 @x5py315 @x6py214 @x7py160 @x8py90 @x9py51)) )) :named projection_inverse_FStar.Pervasives.Native.Mktuple5__3))
(assert (! (forall ((@x0py990 Term)(@x1py1095 Term)(@x2py813 Term)(@x3py577 Term)(@x4py413 Term)(@x5py316 Term)(@x6py215 Term)(@x7py161 Term)(@x8py91 Term)(@x9py52 Term)) (! (= (FStar.Pervasives.Native.Mktuple5__4 (FStar.Pervasives.Native.Mktuple5 @x0py990 @x1py1095 @x2py813 @x3py577 @x4py413 @x5py316 @x6py215 @x7py161 @x8py91 @x9py52)) @x8py91) :pattern ((FStar.Pervasives.Native.Mktuple5 @x0py990 @x1py1095 @x2py813 @x3py577 @x4py413 @x5py316 @x6py215 @x7py161 @x8py91 @x9py52)) )) :named projection_inverse_FStar.Pervasives.Native.Mktuple5__4))
(assert (! (forall ((@x0py991 Term)(@x1py1096 Term)(@x2py814 Term)(@x3py578 Term)(@x4py414 Term)(@x5py317 Term)(@x6py216 Term)(@x7py162 Term)(@x8py92 Term)(@x9py53 Term)) (! (= (FStar.Pervasives.Native.Mktuple5__5 (FStar.Pervasives.Native.Mktuple5 @x0py991 @x1py1096 @x2py814 @x3py578 @x4py414 @x5py317 @x6py216 @x7py162 @x8py92 @x9py53)) @x9py53) :pattern ((FStar.Pervasives.Native.Mktuple5 @x0py991 @x1py1096 @x2py814 @x3py578 @x4py414 @x5py317 @x6py216 @x7py162 @x8py92 @x9py53)) )) :named projection_inverse_FStar.Pervasives.Native.Mktuple5__5))
(assert (! (forall ((@x0py992 Term)(@x1py1097 Term)(@x2py815 Term)(@x3py579 Term)(@x4py415 Term)(@x5py318 Term)(@x6py217 Term)(@x7py163 Term)(@x8py93 Term)(@x9py54 Term)) (! (= (FStar.Pervasives.Native.Mktuple5__a (FStar.Pervasives.Native.Mktuple5 @x0py992 @x1py1097 @x2py815 @x3py579 @x4py415 @x5py318 @x6py217 @x7py163 @x8py93 @x9py54)) @x0py992) :pattern ((FStar.Pervasives.Native.Mktuple5 @x0py992 @x1py1097 @x2py815 @x3py579 @x4py415 @x5py318 @x6py217 @x7py163 @x8py93 @x9py54)) )) :named projection_inverse_FStar.Pervasives.Native.Mktuple5__a))
(assert (! (forall ((@x0py993 Term)(@x1py1098 Term)(@x2py816 Term)(@x3py580 Term)(@x4py416 Term)(@x5py319 Term)(@x6py218 Term)(@x7py164 Term)(@x8py94 Term)(@x9py55 Term)) (! (= (FStar.Pervasives.Native.Mktuple5__b (FStar.Pervasives.Native.Mktuple5 @x0py993 @x1py1098 @x2py816 @x3py580 @x4py416 @x5py319 @x6py218 @x7py164 @x8py94 @x9py55)) @x1py1098) :pattern ((FStar.Pervasives.Native.Mktuple5 @x0py993 @x1py1098 @x2py816 @x3py580 @x4py416 @x5py319 @x6py218 @x7py164 @x8py94 @x9py55)) )) :named projection_inverse_FStar.Pervasives.Native.Mktuple5__b))
(assert (! (forall ((@x0py994 Term)(@x1py1099 Term)(@x2py817 Term)(@x3py581 Term)(@x4py417 Term)(@x5py320 Term)(@x6py219 Term)(@x7py165 Term)(@x8py95 Term)(@x9py56 Term)) (! (= (FStar.Pervasives.Native.Mktuple5__c (FStar.Pervasives.Native.Mktuple5 @x0py994 @x1py1099 @x2py817 @x3py581 @x4py417 @x5py320 @x6py219 @x7py165 @x8py95 @x9py56)) @x2py817) :pattern ((FStar.Pervasives.Native.Mktuple5 @x0py994 @x1py1099 @x2py817 @x3py581 @x4py417 @x5py320 @x6py219 @x7py165 @x8py95 @x9py56)) )) :named projection_inverse_FStar.Pervasives.Native.Mktuple5__c))
(assert (! (forall ((@x0py995 Term)(@x1py1100 Term)(@x2py818 Term)(@x3py582 Term)(@x4py418 Term)(@x5py321 Term)(@x6py220 Term)(@x7py166 Term)(@x8py96 Term)(@x9py57 Term)) (! (= (FStar.Pervasives.Native.Mktuple5__d (FStar.Pervasives.Native.Mktuple5 @x0py995 @x1py1100 @x2py818 @x3py582 @x4py418 @x5py321 @x6py220 @x7py166 @x8py96 @x9py57)) @x3py582) :pattern ((FStar.Pervasives.Native.Mktuple5 @x0py995 @x1py1100 @x2py818 @x3py582 @x4py418 @x5py321 @x6py220 @x7py166 @x8py96 @x9py57)) )) :named projection_inverse_FStar.Pervasives.Native.Mktuple5__d))
(assert (! (forall ((@x0py996 Term)(@x1py1101 Term)(@x2py819 Term)(@x3py583 Term)(@x4py419 Term)(@x5py322 Term)(@x6py221 Term)(@x7py167 Term)(@x8py97 Term)(@x9py58 Term)) (! (= (FStar.Pervasives.Native.Mktuple5__e (FStar.Pervasives.Native.Mktuple5 @x0py996 @x1py1101 @x2py819 @x3py583 @x4py419 @x5py322 @x6py221 @x7py167 @x8py97 @x9py58)) @x4py419) :pattern ((FStar.Pervasives.Native.Mktuple5 @x0py996 @x1py1101 @x2py819 @x3py583 @x4py419 @x5py322 @x6py221 @x7py167 @x8py97 @x9py58)) )) :named projection_inverse_FStar.Pervasives.Native.Mktuple5__e))
(assert (! (forall ((@x0py997 Term)(@x1py1102 Term)(@x2py820 Term)(@x3py584 Term)(@x4py420 Term)(@x5py323 Term)(@x6py222 Term)(@x7py168 Term)(@x8py98 Term)(@x9py59 Term)(@x10py22 Term)(@x11py19 Term)) (! (= (FStar.Pervasives.Native.Mktuple6__1 (FStar.Pervasives.Native.Mktuple6 @x0py997 @x1py1102 @x2py820 @x3py584 @x4py420 @x5py323 @x6py222 @x7py168 @x8py98 @x9py59 @x10py22 @x11py19)) @x6py222) :pattern ((FStar.Pervasives.Native.Mktuple6 @x0py997 @x1py1102 @x2py820 @x3py584 @x4py420 @x5py323 @x6py222 @x7py168 @x8py98 @x9py59 @x10py22 @x11py19)) )) :named projection_inverse_FStar.Pervasives.Native.Mktuple6__1))
(assert (! (forall ((@x0py998 Term)(@x1py1103 Term)(@x2py821 Term)(@x3py585 Term)(@x4py421 Term)(@x5py324 Term)(@x6py223 Term)(@x7py169 Term)(@x8py99 Term)(@x9py60 Term)(@x10py23 Term)(@x11py20 Term)) (! (= (FStar.Pervasives.Native.Mktuple6__2 (FStar.Pervasives.Native.Mktuple6 @x0py998 @x1py1103 @x2py821 @x3py585 @x4py421 @x5py324 @x6py223 @x7py169 @x8py99 @x9py60 @x10py23 @x11py20)) @x7py169) :pattern ((FStar.Pervasives.Native.Mktuple6 @x0py998 @x1py1103 @x2py821 @x3py585 @x4py421 @x5py324 @x6py223 @x7py169 @x8py99 @x9py60 @x10py23 @x11py20)) )) :named projection_inverse_FStar.Pervasives.Native.Mktuple6__2))
(assert (! (forall ((@x0py999 Term)(@x1py1104 Term)(@x2py822 Term)(@x3py586 Term)(@x4py422 Term)(@x5py325 Term)(@x6py224 Term)(@x7py170 Term)(@x8py100 Term)(@x9py61 Term)(@x10py24 Term)(@x11py21 Term)) (! (= (FStar.Pervasives.Native.Mktuple6__3 (FStar.Pervasives.Native.Mktuple6 @x0py999 @x1py1104 @x2py822 @x3py586 @x4py422 @x5py325 @x6py224 @x7py170 @x8py100 @x9py61 @x10py24 @x11py21)) @x8py100) :pattern ((FStar.Pervasives.Native.Mktuple6 @x0py999 @x1py1104 @x2py822 @x3py586 @x4py422 @x5py325 @x6py224 @x7py170 @x8py100 @x9py61 @x10py24 @x11py21)) )) :named projection_inverse_FStar.Pervasives.Native.Mktuple6__3))
(assert (! (forall ((@x0py1000 Term)(@x1py1105 Term)(@x2py823 Term)(@x3py587 Term)(@x4py423 Term)(@x5py326 Term)(@x6py225 Term)(@x7py171 Term)(@x8py101 Term)(@x9py62 Term)(@x10py25 Term)(@x11py22 Term)) (! (= (FStar.Pervasives.Native.Mktuple6__4 (FStar.Pervasives.Native.Mktuple6 @x0py1000 @x1py1105 @x2py823 @x3py587 @x4py423 @x5py326 @x6py225 @x7py171 @x8py101 @x9py62 @x10py25 @x11py22)) @x9py62) :pattern ((FStar.Pervasives.Native.Mktuple6 @x0py1000 @x1py1105 @x2py823 @x3py587 @x4py423 @x5py326 @x6py225 @x7py171 @x8py101 @x9py62 @x10py25 @x11py22)) )) :named projection_inverse_FStar.Pervasives.Native.Mktuple6__4))
(assert (! (forall ((@x0py1001 Term)(@x1py1106 Term)(@x2py824 Term)(@x3py588 Term)(@x4py424 Term)(@x5py327 Term)(@x6py226 Term)(@x7py172 Term)(@x8py102 Term)(@x9py63 Term)(@x10py26 Term)(@x11py23 Term)) (! (= (FStar.Pervasives.Native.Mktuple6__5 (FStar.Pervasives.Native.Mktuple6 @x0py1001 @x1py1106 @x2py824 @x3py588 @x4py424 @x5py327 @x6py226 @x7py172 @x8py102 @x9py63 @x10py26 @x11py23)) @x10py26) :pattern ((FStar.Pervasives.Native.Mktuple6 @x0py1001 @x1py1106 @x2py824 @x3py588 @x4py424 @x5py327 @x6py226 @x7py172 @x8py102 @x9py63 @x10py26 @x11py23)) )) :named projection_inverse_FStar.Pervasives.Native.Mktuple6__5))
(assert (! (forall ((@x0py1002 Term)(@x1py1107 Term)(@x2py825 Term)(@x3py589 Term)(@x4py425 Term)(@x5py328 Term)(@x6py227 Term)(@x7py173 Term)(@x8py103 Term)(@x9py64 Term)(@x10py27 Term)(@x11py24 Term)) (! (= (FStar.Pervasives.Native.Mktuple6__6 (FStar.Pervasives.Native.Mktuple6 @x0py1002 @x1py1107 @x2py825 @x3py589 @x4py425 @x5py328 @x6py227 @x7py173 @x8py103 @x9py64 @x10py27 @x11py24)) @x11py24) :pattern ((FStar.Pervasives.Native.Mktuple6 @x0py1002 @x1py1107 @x2py825 @x3py589 @x4py425 @x5py328 @x6py227 @x7py173 @x8py103 @x9py64 @x10py27 @x11py24)) )) :named projection_inverse_FStar.Pervasives.Native.Mktuple6__6))
(assert (! (forall ((@x0py1003 Term)(@x1py1108 Term)(@x2py826 Term)(@x3py590 Term)(@x4py426 Term)(@x5py329 Term)(@x6py228 Term)(@x7py174 Term)(@x8py104 Term)(@x9py65 Term)(@x10py28 Term)(@x11py25 Term)) (! (= (FStar.Pervasives.Native.Mktuple6__a (FStar.Pervasives.Native.Mktuple6 @x0py1003 @x1py1108 @x2py826 @x3py590 @x4py426 @x5py329 @x6py228 @x7py174 @x8py104 @x9py65 @x10py28 @x11py25)) @x0py1003) :pattern ((FStar.Pervasives.Native.Mktuple6 @x0py1003 @x1py1108 @x2py826 @x3py590 @x4py426 @x5py329 @x6py228 @x7py174 @x8py104 @x9py65 @x10py28 @x11py25)) )) :named projection_inverse_FStar.Pervasives.Native.Mktuple6__a))
(assert (! (forall ((@x0py1004 Term)(@x1py1109 Term)(@x2py827 Term)(@x3py591 Term)(@x4py427 Term)(@x5py330 Term)(@x6py229 Term)(@x7py175 Term)(@x8py105 Term)(@x9py66 Term)(@x10py29 Term)(@x11py26 Term)) (! (= (FStar.Pervasives.Native.Mktuple6__b (FStar.Pervasives.Native.Mktuple6 @x0py1004 @x1py1109 @x2py827 @x3py591 @x4py427 @x5py330 @x6py229 @x7py175 @x8py105 @x9py66 @x10py29 @x11py26)) @x1py1109) :pattern ((FStar.Pervasives.Native.Mktuple6 @x0py1004 @x1py1109 @x2py827 @x3py591 @x4py427 @x5py330 @x6py229 @x7py175 @x8py105 @x9py66 @x10py29 @x11py26)) )) :named projection_inverse_FStar.Pervasives.Native.Mktuple6__b))
(assert (! (forall ((@x0py1005 Term)(@x1py1110 Term)(@x2py828 Term)(@x3py592 Term)(@x4py428 Term)(@x5py331 Term)(@x6py230 Term)(@x7py176 Term)(@x8py106 Term)(@x9py67 Term)(@x10py30 Term)(@x11py27 Term)) (! (= (FStar.Pervasives.Native.Mktuple6__c (FStar.Pervasives.Native.Mktuple6 @x0py1005 @x1py1110 @x2py828 @x3py592 @x4py428 @x5py331 @x6py230 @x7py176 @x8py106 @x9py67 @x10py30 @x11py27)) @x2py828) :pattern ((FStar.Pervasives.Native.Mktuple6 @x0py1005 @x1py1110 @x2py828 @x3py592 @x4py428 @x5py331 @x6py230 @x7py176 @x8py106 @x9py67 @x10py30 @x11py27)) )) :named projection_inverse_FStar.Pervasives.Native.Mktuple6__c))
(assert (! (forall ((@x0py1006 Term)(@x1py1111 Term)(@x2py829 Term)(@x3py593 Term)(@x4py429 Term)(@x5py332 Term)(@x6py231 Term)(@x7py177 Term)(@x8py107 Term)(@x9py68 Term)(@x10py31 Term)(@x11py28 Term)) (! (= (FStar.Pervasives.Native.Mktuple6__d (FStar.Pervasives.Native.Mktuple6 @x0py1006 @x1py1111 @x2py829 @x3py593 @x4py429 @x5py332 @x6py231 @x7py177 @x8py107 @x9py68 @x10py31 @x11py28)) @x3py593) :pattern ((FStar.Pervasives.Native.Mktuple6 @x0py1006 @x1py1111 @x2py829 @x3py593 @x4py429 @x5py332 @x6py231 @x7py177 @x8py107 @x9py68 @x10py31 @x11py28)) )) :named projection_inverse_FStar.Pervasives.Native.Mktuple6__d))
(assert (! (forall ((@x0py1007 Term)(@x1py1112 Term)(@x2py830 Term)(@x3py594 Term)(@x4py430 Term)(@x5py333 Term)(@x6py232 Term)(@x7py178 Term)(@x8py108 Term)(@x9py69 Term)(@x10py32 Term)(@x11py29 Term)) (! (= (FStar.Pervasives.Native.Mktuple6__e (FStar.Pervasives.Native.Mktuple6 @x0py1007 @x1py1112 @x2py830 @x3py594 @x4py430 @x5py333 @x6py232 @x7py178 @x8py108 @x9py69 @x10py32 @x11py29)) @x4py430) :pattern ((FStar.Pervasives.Native.Mktuple6 @x0py1007 @x1py1112 @x2py830 @x3py594 @x4py430 @x5py333 @x6py232 @x7py178 @x8py108 @x9py69 @x10py32 @x11py29)) )) :named projection_inverse_FStar.Pervasives.Native.Mktuple6__e))
(assert (! (forall ((@x0py1008 Term)(@x1py1113 Term)(@x2py831 Term)(@x3py595 Term)(@x4py431 Term)(@x5py334 Term)(@x6py233 Term)(@x7py179 Term)(@x8py109 Term)(@x9py70 Term)(@x10py33 Term)(@x11py30 Term)) (! (= (FStar.Pervasives.Native.Mktuple6__f (FStar.Pervasives.Native.Mktuple6 @x0py1008 @x1py1113 @x2py831 @x3py595 @x4py431 @x5py334 @x6py233 @x7py179 @x8py109 @x9py70 @x10py33 @x11py30)) @x5py334) :pattern ((FStar.Pervasives.Native.Mktuple6 @x0py1008 @x1py1113 @x2py831 @x3py595 @x4py431 @x5py334 @x6py233 @x7py179 @x8py109 @x9py70 @x10py33 @x11py30)) )) :named projection_inverse_FStar.Pervasives.Native.Mktuple6__f))
(assert (! (forall ((@x0py1009 Term)(@x1py1114 Term)(@x2py832 Term)(@x3py596 Term)(@x4py432 Term)(@x5py335 Term)(@x6py234 Term)(@x7py180 Term)(@x8py110 Term)(@x9py71 Term)(@x10py34 Term)(@x11py31 Term)(@x12py17 Term)(@x13py12 Term)) (! (= (FStar.Pervasives.Native.Mktuple7__1 (FStar.Pervasives.Native.Mktuple7 @x0py1009 @x1py1114 @x2py832 @x3py596 @x4py432 @x5py335 @x6py234 @x7py180 @x8py110 @x9py71 @x10py34 @x11py31 @x12py17 @x13py12)) @x7py180) :pattern ((FStar.Pervasives.Native.Mktuple7 @x0py1009 @x1py1114 @x2py832 @x3py596 @x4py432 @x5py335 @x6py234 @x7py180 @x8py110 @x9py71 @x10py34 @x11py31 @x12py17 @x13py12)) )) :named projection_inverse_FStar.Pervasives.Native.Mktuple7__1))
(assert (! (forall ((@x0py1010 Term)(@x1py1115 Term)(@x2py833 Term)(@x3py597 Term)(@x4py433 Term)(@x5py336 Term)(@x6py235 Term)(@x7py181 Term)(@x8py111 Term)(@x9py72 Term)(@x10py35 Term)(@x11py32 Term)(@x12py18 Term)(@x13py13 Term)) (! (= (FStar.Pervasives.Native.Mktuple7__2 (FStar.Pervasives.Native.Mktuple7 @x0py1010 @x1py1115 @x2py833 @x3py597 @x4py433 @x5py336 @x6py235 @x7py181 @x8py111 @x9py72 @x10py35 @x11py32 @x12py18 @x13py13)) @x8py111) :pattern ((FStar.Pervasives.Native.Mktuple7 @x0py1010 @x1py1115 @x2py833 @x3py597 @x4py433 @x5py336 @x6py235 @x7py181 @x8py111 @x9py72 @x10py35 @x11py32 @x12py18 @x13py13)) )) :named projection_inverse_FStar.Pervasives.Native.Mktuple7__2))
(assert (! (forall ((@x0py1011 Term)(@x1py1116 Term)(@x2py834 Term)(@x3py598 Term)(@x4py434 Term)(@x5py337 Term)(@x6py236 Term)(@x7py182 Term)(@x8py112 Term)(@x9py73 Term)(@x10py36 Term)(@x11py33 Term)(@x12py19 Term)(@x13py14 Term)) (! (= (FStar.Pervasives.Native.Mktuple7__3 (FStar.Pervasives.Native.Mktuple7 @x0py1011 @x1py1116 @x2py834 @x3py598 @x4py434 @x5py337 @x6py236 @x7py182 @x8py112 @x9py73 @x10py36 @x11py33 @x12py19 @x13py14)) @x9py73) :pattern ((FStar.Pervasives.Native.Mktuple7 @x0py1011 @x1py1116 @x2py834 @x3py598 @x4py434 @x5py337 @x6py236 @x7py182 @x8py112 @x9py73 @x10py36 @x11py33 @x12py19 @x13py14)) )) :named projection_inverse_FStar.Pervasives.Native.Mktuple7__3))
(assert (! (forall ((@x0py1012 Term)(@x1py1117 Term)(@x2py835 Term)(@x3py599 Term)(@x4py435 Term)(@x5py338 Term)(@x6py237 Term)(@x7py183 Term)(@x8py113 Term)(@x9py74 Term)(@x10py37 Term)(@x11py34 Term)(@x12py20 Term)(@x13py15 Term)) (! (= (FStar.Pervasives.Native.Mktuple7__4 (FStar.Pervasives.Native.Mktuple7 @x0py1012 @x1py1117 @x2py835 @x3py599 @x4py435 @x5py338 @x6py237 @x7py183 @x8py113 @x9py74 @x10py37 @x11py34 @x12py20 @x13py15)) @x10py37) :pattern ((FStar.Pervasives.Native.Mktuple7 @x0py1012 @x1py1117 @x2py835 @x3py599 @x4py435 @x5py338 @x6py237 @x7py183 @x8py113 @x9py74 @x10py37 @x11py34 @x12py20 @x13py15)) )) :named projection_inverse_FStar.Pervasives.Native.Mktuple7__4))
(assert (! (forall ((@x0py1013 Term)(@x1py1118 Term)(@x2py836 Term)(@x3py600 Term)(@x4py436 Term)(@x5py339 Term)(@x6py238 Term)(@x7py184 Term)(@x8py114 Term)(@x9py75 Term)(@x10py38 Term)(@x11py35 Term)(@x12py21 Term)(@x13py16 Term)) (! (= (FStar.Pervasives.Native.Mktuple7__5 (FStar.Pervasives.Native.Mktuple7 @x0py1013 @x1py1118 @x2py836 @x3py600 @x4py436 @x5py339 @x6py238 @x7py184 @x8py114 @x9py75 @x10py38 @x11py35 @x12py21 @x13py16)) @x11py35) :pattern ((FStar.Pervasives.Native.Mktuple7 @x0py1013 @x1py1118 @x2py836 @x3py600 @x4py436 @x5py339 @x6py238 @x7py184 @x8py114 @x9py75 @x10py38 @x11py35 @x12py21 @x13py16)) )) :named projection_inverse_FStar.Pervasives.Native.Mktuple7__5))
(assert (! (forall ((@x0py1014 Term)(@x1py1119 Term)(@x2py837 Term)(@x3py601 Term)(@x4py437 Term)(@x5py340 Term)(@x6py239 Term)(@x7py185 Term)(@x8py115 Term)(@x9py76 Term)(@x10py39 Term)(@x11py36 Term)(@x12py22 Term)(@x13py17 Term)) (! (= (FStar.Pervasives.Native.Mktuple7__6 (FStar.Pervasives.Native.Mktuple7 @x0py1014 @x1py1119 @x2py837 @x3py601 @x4py437 @x5py340 @x6py239 @x7py185 @x8py115 @x9py76 @x10py39 @x11py36 @x12py22 @x13py17)) @x12py22) :pattern ((FStar.Pervasives.Native.Mktuple7 @x0py1014 @x1py1119 @x2py837 @x3py601 @x4py437 @x5py340 @x6py239 @x7py185 @x8py115 @x9py76 @x10py39 @x11py36 @x12py22 @x13py17)) )) :named projection_inverse_FStar.Pervasives.Native.Mktuple7__6))
(assert (! (forall ((@x0py1015 Term)(@x1py1120 Term)(@x2py838 Term)(@x3py602 Term)(@x4py438 Term)(@x5py341 Term)(@x6py240 Term)(@x7py186 Term)(@x8py116 Term)(@x9py77 Term)(@x10py40 Term)(@x11py37 Term)(@x12py23 Term)(@x13py18 Term)) (! (= (FStar.Pervasives.Native.Mktuple7__7 (FStar.Pervasives.Native.Mktuple7 @x0py1015 @x1py1120 @x2py838 @x3py602 @x4py438 @x5py341 @x6py240 @x7py186 @x8py116 @x9py77 @x10py40 @x11py37 @x12py23 @x13py18)) @x13py18) :pattern ((FStar.Pervasives.Native.Mktuple7 @x0py1015 @x1py1120 @x2py838 @x3py602 @x4py438 @x5py341 @x6py240 @x7py186 @x8py116 @x9py77 @x10py40 @x11py37 @x12py23 @x13py18)) )) :named projection_inverse_FStar.Pervasives.Native.Mktuple7__7))
(assert (! (forall ((@x0py1016 Term)(@x1py1121 Term)(@x2py839 Term)(@x3py603 Term)(@x4py439 Term)(@x5py342 Term)(@x6py241 Term)(@x7py187 Term)(@x8py117 Term)(@x9py78 Term)(@x10py41 Term)(@x11py38 Term)(@x12py24 Term)(@x13py19 Term)) (! (= (FStar.Pervasives.Native.Mktuple7__a (FStar.Pervasives.Native.Mktuple7 @x0py1016 @x1py1121 @x2py839 @x3py603 @x4py439 @x5py342 @x6py241 @x7py187 @x8py117 @x9py78 @x10py41 @x11py38 @x12py24 @x13py19)) @x0py1016) :pattern ((FStar.Pervasives.Native.Mktuple7 @x0py1016 @x1py1121 @x2py839 @x3py603 @x4py439 @x5py342 @x6py241 @x7py187 @x8py117 @x9py78 @x10py41 @x11py38 @x12py24 @x13py19)) )) :named projection_inverse_FStar.Pervasives.Native.Mktuple7__a))
(assert (! (forall ((@x0py1017 Term)(@x1py1122 Term)(@x2py840 Term)(@x3py604 Term)(@x4py440 Term)(@x5py343 Term)(@x6py242 Term)(@x7py188 Term)(@x8py118 Term)(@x9py79 Term)(@x10py42 Term)(@x11py39 Term)(@x12py25 Term)(@x13py20 Term)) (! (= (FStar.Pervasives.Native.Mktuple7__b (FStar.Pervasives.Native.Mktuple7 @x0py1017 @x1py1122 @x2py840 @x3py604 @x4py440 @x5py343 @x6py242 @x7py188 @x8py118 @x9py79 @x10py42 @x11py39 @x12py25 @x13py20)) @x1py1122) :pattern ((FStar.Pervasives.Native.Mktuple7 @x0py1017 @x1py1122 @x2py840 @x3py604 @x4py440 @x5py343 @x6py242 @x7py188 @x8py118 @x9py79 @x10py42 @x11py39 @x12py25 @x13py20)) )) :named projection_inverse_FStar.Pervasives.Native.Mktuple7__b))
(assert (! (forall ((@x0py1018 Term)(@x1py1123 Term)(@x2py841 Term)(@x3py605 Term)(@x4py441 Term)(@x5py344 Term)(@x6py243 Term)(@x7py189 Term)(@x8py119 Term)(@x9py80 Term)(@x10py43 Term)(@x11py40 Term)(@x12py26 Term)(@x13py21 Term)) (! (= (FStar.Pervasives.Native.Mktuple7__c (FStar.Pervasives.Native.Mktuple7 @x0py1018 @x1py1123 @x2py841 @x3py605 @x4py441 @x5py344 @x6py243 @x7py189 @x8py119 @x9py80 @x10py43 @x11py40 @x12py26 @x13py21)) @x2py841) :pattern ((FStar.Pervasives.Native.Mktuple7 @x0py1018 @x1py1123 @x2py841 @x3py605 @x4py441 @x5py344 @x6py243 @x7py189 @x8py119 @x9py80 @x10py43 @x11py40 @x12py26 @x13py21)) )) :named projection_inverse_FStar.Pervasives.Native.Mktuple7__c))
(assert (! (forall ((@x0py1019 Term)(@x1py1124 Term)(@x2py842 Term)(@x3py606 Term)(@x4py442 Term)(@x5py345 Term)(@x6py244 Term)(@x7py190 Term)(@x8py120 Term)(@x9py81 Term)(@x10py44 Term)(@x11py41 Term)(@x12py27 Term)(@x13py22 Term)) (! (= (FStar.Pervasives.Native.Mktuple7__d (FStar.Pervasives.Native.Mktuple7 @x0py1019 @x1py1124 @x2py842 @x3py606 @x4py442 @x5py345 @x6py244 @x7py190 @x8py120 @x9py81 @x10py44 @x11py41 @x12py27 @x13py22)) @x3py606) :pattern ((FStar.Pervasives.Native.Mktuple7 @x0py1019 @x1py1124 @x2py842 @x3py606 @x4py442 @x5py345 @x6py244 @x7py190 @x8py120 @x9py81 @x10py44 @x11py41 @x12py27 @x13py22)) )) :named projection_inverse_FStar.Pervasives.Native.Mktuple7__d))
(assert (! (forall ((@x0py1020 Term)(@x1py1125 Term)(@x2py843 Term)(@x3py607 Term)(@x4py443 Term)(@x5py346 Term)(@x6py245 Term)(@x7py191 Term)(@x8py121 Term)(@x9py82 Term)(@x10py45 Term)(@x11py42 Term)(@x12py28 Term)(@x13py23 Term)) (! (= (FStar.Pervasives.Native.Mktuple7__e (FStar.Pervasives.Native.Mktuple7 @x0py1020 @x1py1125 @x2py843 @x3py607 @x4py443 @x5py346 @x6py245 @x7py191 @x8py121 @x9py82 @x10py45 @x11py42 @x12py28 @x13py23)) @x4py443) :pattern ((FStar.Pervasives.Native.Mktuple7 @x0py1020 @x1py1125 @x2py843 @x3py607 @x4py443 @x5py346 @x6py245 @x7py191 @x8py121 @x9py82 @x10py45 @x11py42 @x12py28 @x13py23)) )) :named projection_inverse_FStar.Pervasives.Native.Mktuple7__e))
(assert (! (forall ((@x0py1021 Term)(@x1py1126 Term)(@x2py844 Term)(@x3py608 Term)(@x4py444 Term)(@x5py347 Term)(@x6py246 Term)(@x7py192 Term)(@x8py122 Term)(@x9py83 Term)(@x10py46 Term)(@x11py43 Term)(@x12py29 Term)(@x13py24 Term)) (! (= (FStar.Pervasives.Native.Mktuple7__f (FStar.Pervasives.Native.Mktuple7 @x0py1021 @x1py1126 @x2py844 @x3py608 @x4py444 @x5py347 @x6py246 @x7py192 @x8py122 @x9py83 @x10py46 @x11py43 @x12py29 @x13py24)) @x5py347) :pattern ((FStar.Pervasives.Native.Mktuple7 @x0py1021 @x1py1126 @x2py844 @x3py608 @x4py444 @x5py347 @x6py246 @x7py192 @x8py122 @x9py83 @x10py46 @x11py43 @x12py29 @x13py24)) )) :named projection_inverse_FStar.Pervasives.Native.Mktuple7__f))
(assert (! (forall ((@x0py1022 Term)(@x1py1127 Term)(@x2py845 Term)(@x3py609 Term)(@x4py445 Term)(@x5py348 Term)(@x6py247 Term)(@x7py193 Term)(@x8py123 Term)(@x9py84 Term)(@x10py47 Term)(@x11py44 Term)(@x12py30 Term)(@x13py25 Term)) (! (= (FStar.Pervasives.Native.Mktuple7__g (FStar.Pervasives.Native.Mktuple7 @x0py1022 @x1py1127 @x2py845 @x3py609 @x4py445 @x5py348 @x6py247 @x7py193 @x8py123 @x9py84 @x10py47 @x11py44 @x12py30 @x13py25)) @x6py247) :pattern ((FStar.Pervasives.Native.Mktuple7 @x0py1022 @x1py1127 @x2py845 @x3py609 @x4py445 @x5py348 @x6py247 @x7py193 @x8py123 @x9py84 @x10py47 @x11py44 @x12py30 @x13py25)) )) :named projection_inverse_FStar.Pervasives.Native.Mktuple7__g))
(assert (! (forall ((@x0py1023 Term)(@x1py1128 Term)(@x2py846 Term)(@x3py610 Term)(@x4py446 Term)(@x5py349 Term)(@x6py248 Term)(@x7py194 Term)(@x8py124 Term)(@x9py85 Term)(@x10py48 Term)(@x11py45 Term)(@x12py31 Term)(@x13py26 Term)(@x14py10 Term)(@x15py8 Term)) (! (= (FStar.Pervasives.Native.Mktuple8__1 (FStar.Pervasives.Native.Mktuple8 @x0py1023 @x1py1128 @x2py846 @x3py610 @x4py446 @x5py349 @x6py248 @x7py194 @x8py124 @x9py85 @x10py48 @x11py45 @x12py31 @x13py26 @x14py10 @x15py8)) @x8py124) :pattern ((FStar.Pervasives.Native.Mktuple8 @x0py1023 @x1py1128 @x2py846 @x3py610 @x4py446 @x5py349 @x6py248 @x7py194 @x8py124 @x9py85 @x10py48 @x11py45 @x12py31 @x13py26 @x14py10 @x15py8)) )) :named projection_inverse_FStar.Pervasives.Native.Mktuple8__1))
(assert (! (forall ((@x0py1024 Term)(@x1py1129 Term)(@x2py847 Term)(@x3py611 Term)(@x4py447 Term)(@x5py350 Term)(@x6py249 Term)(@x7py195 Term)(@x8py125 Term)(@x9py86 Term)(@x10py49 Term)(@x11py46 Term)(@x12py32 Term)(@x13py27 Term)(@x14py11 Term)(@x15py9 Term)) (! (= (FStar.Pervasives.Native.Mktuple8__2 (FStar.Pervasives.Native.Mktuple8 @x0py1024 @x1py1129 @x2py847 @x3py611 @x4py447 @x5py350 @x6py249 @x7py195 @x8py125 @x9py86 @x10py49 @x11py46 @x12py32 @x13py27 @x14py11 @x15py9)) @x9py86) :pattern ((FStar.Pervasives.Native.Mktuple8 @x0py1024 @x1py1129 @x2py847 @x3py611 @x4py447 @x5py350 @x6py249 @x7py195 @x8py125 @x9py86 @x10py49 @x11py46 @x12py32 @x13py27 @x14py11 @x15py9)) )) :named projection_inverse_FStar.Pervasives.Native.Mktuple8__2))
(assert (! (forall ((@x0py1025 Term)(@x1py1130 Term)(@x2py848 Term)(@x3py612 Term)(@x4py448 Term)(@x5py351 Term)(@x6py250 Term)(@x7py196 Term)(@x8py126 Term)(@x9py87 Term)(@x10py50 Term)(@x11py47 Term)(@x12py33 Term)(@x13py28 Term)(@x14py12 Term)(@x15py10 Term)) (! (= (FStar.Pervasives.Native.Mktuple8__3 (FStar.Pervasives.Native.Mktuple8 @x0py1025 @x1py1130 @x2py848 @x3py612 @x4py448 @x5py351 @x6py250 @x7py196 @x8py126 @x9py87 @x10py50 @x11py47 @x12py33 @x13py28 @x14py12 @x15py10)) @x10py50) :pattern ((FStar.Pervasives.Native.Mktuple8 @x0py1025 @x1py1130 @x2py848 @x3py612 @x4py448 @x5py351 @x6py250 @x7py196 @x8py126 @x9py87 @x10py50 @x11py47 @x12py33 @x13py28 @x14py12 @x15py10)) )) :named projection_inverse_FStar.Pervasives.Native.Mktuple8__3))
(assert (! (forall ((@x0py1026 Term)(@x1py1131 Term)(@x2py849 Term)(@x3py613 Term)(@x4py449 Term)(@x5py352 Term)(@x6py251 Term)(@x7py197 Term)(@x8py127 Term)(@x9py88 Term)(@x10py51 Term)(@x11py48 Term)(@x12py34 Term)(@x13py29 Term)(@x14py13 Term)(@x15py11 Term)) (! (= (FStar.Pervasives.Native.Mktuple8__4 (FStar.Pervasives.Native.Mktuple8 @x0py1026 @x1py1131 @x2py849 @x3py613 @x4py449 @x5py352 @x6py251 @x7py197 @x8py127 @x9py88 @x10py51 @x11py48 @x12py34 @x13py29 @x14py13 @x15py11)) @x11py48) :pattern ((FStar.Pervasives.Native.Mktuple8 @x0py1026 @x1py1131 @x2py849 @x3py613 @x4py449 @x5py352 @x6py251 @x7py197 @x8py127 @x9py88 @x10py51 @x11py48 @x12py34 @x13py29 @x14py13 @x15py11)) )) :named projection_inverse_FStar.Pervasives.Native.Mktuple8__4))
(assert (! (forall ((@x0py1027 Term)(@x1py1132 Term)(@x2py850 Term)(@x3py614 Term)(@x4py450 Term)(@x5py353 Term)(@x6py252 Term)(@x7py198 Term)(@x8py128 Term)(@x9py89 Term)(@x10py52 Term)(@x11py49 Term)(@x12py35 Term)(@x13py30 Term)(@x14py14 Term)(@x15py12 Term)) (! (= (FStar.Pervasives.Native.Mktuple8__5 (FStar.Pervasives.Native.Mktuple8 @x0py1027 @x1py1132 @x2py850 @x3py614 @x4py450 @x5py353 @x6py252 @x7py198 @x8py128 @x9py89 @x10py52 @x11py49 @x12py35 @x13py30 @x14py14 @x15py12)) @x12py35) :pattern ((FStar.Pervasives.Native.Mktuple8 @x0py1027 @x1py1132 @x2py850 @x3py614 @x4py450 @x5py353 @x6py252 @x7py198 @x8py128 @x9py89 @x10py52 @x11py49 @x12py35 @x13py30 @x14py14 @x15py12)) )) :named projection_inverse_FStar.Pervasives.Native.Mktuple8__5))
(assert (! (forall ((@x0py1028 Term)(@x1py1133 Term)(@x2py851 Term)(@x3py615 Term)(@x4py451 Term)(@x5py354 Term)(@x6py253 Term)(@x7py199 Term)(@x8py129 Term)(@x9py90 Term)(@x10py53 Term)(@x11py50 Term)(@x12py36 Term)(@x13py31 Term)(@x14py15 Term)(@x15py13 Term)) (! (= (FStar.Pervasives.Native.Mktuple8__6 (FStar.Pervasives.Native.Mktuple8 @x0py1028 @x1py1133 @x2py851 @x3py615 @x4py451 @x5py354 @x6py253 @x7py199 @x8py129 @x9py90 @x10py53 @x11py50 @x12py36 @x13py31 @x14py15 @x15py13)) @x13py31) :pattern ((FStar.Pervasives.Native.Mktuple8 @x0py1028 @x1py1133 @x2py851 @x3py615 @x4py451 @x5py354 @x6py253 @x7py199 @x8py129 @x9py90 @x10py53 @x11py50 @x12py36 @x13py31 @x14py15 @x15py13)) )) :named projection_inverse_FStar.Pervasives.Native.Mktuple8__6))
(assert (! (forall ((@x0py1029 Term)(@x1py1134 Term)(@x2py852 Term)(@x3py616 Term)(@x4py452 Term)(@x5py355 Term)(@x6py254 Term)(@x7py200 Term)(@x8py130 Term)(@x9py91 Term)(@x10py54 Term)(@x11py51 Term)(@x12py37 Term)(@x13py32 Term)(@x14py16 Term)(@x15py14 Term)) (! (= (FStar.Pervasives.Native.Mktuple8__7 (FStar.Pervasives.Native.Mktuple8 @x0py1029 @x1py1134 @x2py852 @x3py616 @x4py452 @x5py355 @x6py254 @x7py200 @x8py130 @x9py91 @x10py54 @x11py51 @x12py37 @x13py32 @x14py16 @x15py14)) @x14py16) :pattern ((FStar.Pervasives.Native.Mktuple8 @x0py1029 @x1py1134 @x2py852 @x3py616 @x4py452 @x5py355 @x6py254 @x7py200 @x8py130 @x9py91 @x10py54 @x11py51 @x12py37 @x13py32 @x14py16 @x15py14)) )) :named projection_inverse_FStar.Pervasives.Native.Mktuple8__7))
(assert (! (forall ((@x0py1030 Term)(@x1py1135 Term)(@x2py853 Term)(@x3py617 Term)(@x4py453 Term)(@x5py356 Term)(@x6py255 Term)(@x7py201 Term)(@x8py131 Term)(@x9py92 Term)(@x10py55 Term)(@x11py52 Term)(@x12py38 Term)(@x13py33 Term)(@x14py17 Term)(@x15py15 Term)) (! (= (FStar.Pervasives.Native.Mktuple8__8 (FStar.Pervasives.Native.Mktuple8 @x0py1030 @x1py1135 @x2py853 @x3py617 @x4py453 @x5py356 @x6py255 @x7py201 @x8py131 @x9py92 @x10py55 @x11py52 @x12py38 @x13py33 @x14py17 @x15py15)) @x15py15) :pattern ((FStar.Pervasives.Native.Mktuple8 @x0py1030 @x1py1135 @x2py853 @x3py617 @x4py453 @x5py356 @x6py255 @x7py201 @x8py131 @x9py92 @x10py55 @x11py52 @x12py38 @x13py33 @x14py17 @x15py15)) )) :named projection_inverse_FStar.Pervasives.Native.Mktuple8__8))
(assert (! (forall ((@x0py1031 Term)(@x1py1136 Term)(@x2py854 Term)(@x3py618 Term)(@x4py454 Term)(@x5py357 Term)(@x6py256 Term)(@x7py202 Term)(@x8py132 Term)(@x9py93 Term)(@x10py56 Term)(@x11py53 Term)(@x12py39 Term)(@x13py34 Term)(@x14py18 Term)(@x15py16 Term)) (! (= (FStar.Pervasives.Native.Mktuple8__a (FStar.Pervasives.Native.Mktuple8 @x0py1031 @x1py1136 @x2py854 @x3py618 @x4py454 @x5py357 @x6py256 @x7py202 @x8py132 @x9py93 @x10py56 @x11py53 @x12py39 @x13py34 @x14py18 @x15py16)) @x0py1031) :pattern ((FStar.Pervasives.Native.Mktuple8 @x0py1031 @x1py1136 @x2py854 @x3py618 @x4py454 @x5py357 @x6py256 @x7py202 @x8py132 @x9py93 @x10py56 @x11py53 @x12py39 @x13py34 @x14py18 @x15py16)) )) :named projection_inverse_FStar.Pervasives.Native.Mktuple8__a))
(assert (! (forall ((@x0py1032 Term)(@x1py1137 Term)(@x2py855 Term)(@x3py619 Term)(@x4py455 Term)(@x5py358 Term)(@x6py257 Term)(@x7py203 Term)(@x8py133 Term)(@x9py94 Term)(@x10py57 Term)(@x11py54 Term)(@x12py40 Term)(@x13py35 Term)(@x14py19 Term)(@x15py17 Term)) (! (= (FStar.Pervasives.Native.Mktuple8__b (FStar.Pervasives.Native.Mktuple8 @x0py1032 @x1py1137 @x2py855 @x3py619 @x4py455 @x5py358 @x6py257 @x7py203 @x8py133 @x9py94 @x10py57 @x11py54 @x12py40 @x13py35 @x14py19 @x15py17)) @x1py1137) :pattern ((FStar.Pervasives.Native.Mktuple8 @x0py1032 @x1py1137 @x2py855 @x3py619 @x4py455 @x5py358 @x6py257 @x7py203 @x8py133 @x9py94 @x10py57 @x11py54 @x12py40 @x13py35 @x14py19 @x15py17)) )) :named projection_inverse_FStar.Pervasives.Native.Mktuple8__b))
(assert (! (forall ((@x0py1033 Term)(@x1py1138 Term)(@x2py856 Term)(@x3py620 Term)(@x4py456 Term)(@x5py359 Term)(@x6py258 Term)(@x7py204 Term)(@x8py134 Term)(@x9py95 Term)(@x10py58 Term)(@x11py55 Term)(@x12py41 Term)(@x13py36 Term)(@x14py20 Term)(@x15py18 Term)) (! (= (FStar.Pervasives.Native.Mktuple8__c (FStar.Pervasives.Native.Mktuple8 @x0py1033 @x1py1138 @x2py856 @x3py620 @x4py456 @x5py359 @x6py258 @x7py204 @x8py134 @x9py95 @x10py58 @x11py55 @x12py41 @x13py36 @x14py20 @x15py18)) @x2py856) :pattern ((FStar.Pervasives.Native.Mktuple8 @x0py1033 @x1py1138 @x2py856 @x3py620 @x4py456 @x5py359 @x6py258 @x7py204 @x8py134 @x9py95 @x10py58 @x11py55 @x12py41 @x13py36 @x14py20 @x15py18)) )) :named projection_inverse_FStar.Pervasives.Native.Mktuple8__c))
(assert (! (forall ((@x0py1034 Term)(@x1py1139 Term)(@x2py857 Term)(@x3py621 Term)(@x4py457 Term)(@x5py360 Term)(@x6py259 Term)(@x7py205 Term)(@x8py135 Term)(@x9py96 Term)(@x10py59 Term)(@x11py56 Term)(@x12py42 Term)(@x13py37 Term)(@x14py21 Term)(@x15py19 Term)) (! (= (FStar.Pervasives.Native.Mktuple8__d (FStar.Pervasives.Native.Mktuple8 @x0py1034 @x1py1139 @x2py857 @x3py621 @x4py457 @x5py360 @x6py259 @x7py205 @x8py135 @x9py96 @x10py59 @x11py56 @x12py42 @x13py37 @x14py21 @x15py19)) @x3py621) :pattern ((FStar.Pervasives.Native.Mktuple8 @x0py1034 @x1py1139 @x2py857 @x3py621 @x4py457 @x5py360 @x6py259 @x7py205 @x8py135 @x9py96 @x10py59 @x11py56 @x12py42 @x13py37 @x14py21 @x15py19)) )) :named projection_inverse_FStar.Pervasives.Native.Mktuple8__d))
(assert (! (forall ((@x0py1035 Term)(@x1py1140 Term)(@x2py858 Term)(@x3py622 Term)(@x4py458 Term)(@x5py361 Term)(@x6py260 Term)(@x7py206 Term)(@x8py136 Term)(@x9py97 Term)(@x10py60 Term)(@x11py57 Term)(@x12py43 Term)(@x13py38 Term)(@x14py22 Term)(@x15py20 Term)) (! (= (FStar.Pervasives.Native.Mktuple8__e (FStar.Pervasives.Native.Mktuple8 @x0py1035 @x1py1140 @x2py858 @x3py622 @x4py458 @x5py361 @x6py260 @x7py206 @x8py136 @x9py97 @x10py60 @x11py57 @x12py43 @x13py38 @x14py22 @x15py20)) @x4py458) :pattern ((FStar.Pervasives.Native.Mktuple8 @x0py1035 @x1py1140 @x2py858 @x3py622 @x4py458 @x5py361 @x6py260 @x7py206 @x8py136 @x9py97 @x10py60 @x11py57 @x12py43 @x13py38 @x14py22 @x15py20)) )) :named projection_inverse_FStar.Pervasives.Native.Mktuple8__e))
(assert (! (forall ((@x0py1036 Term)(@x1py1141 Term)(@x2py859 Term)(@x3py623 Term)(@x4py459 Term)(@x5py362 Term)(@x6py261 Term)(@x7py207 Term)(@x8py137 Term)(@x9py98 Term)(@x10py61 Term)(@x11py58 Term)(@x12py44 Term)(@x13py39 Term)(@x14py23 Term)(@x15py21 Term)) (! (= (FStar.Pervasives.Native.Mktuple8__f (FStar.Pervasives.Native.Mktuple8 @x0py1036 @x1py1141 @x2py859 @x3py623 @x4py459 @x5py362 @x6py261 @x7py207 @x8py137 @x9py98 @x10py61 @x11py58 @x12py44 @x13py39 @x14py23 @x15py21)) @x5py362) :pattern ((FStar.Pervasives.Native.Mktuple8 @x0py1036 @x1py1141 @x2py859 @x3py623 @x4py459 @x5py362 @x6py261 @x7py207 @x8py137 @x9py98 @x10py61 @x11py58 @x12py44 @x13py39 @x14py23 @x15py21)) )) :named projection_inverse_FStar.Pervasives.Native.Mktuple8__f))
(assert (! (forall ((@x0py1037 Term)(@x1py1142 Term)(@x2py860 Term)(@x3py624 Term)(@x4py460 Term)(@x5py363 Term)(@x6py262 Term)(@x7py208 Term)(@x8py138 Term)(@x9py99 Term)(@x10py62 Term)(@x11py59 Term)(@x12py45 Term)(@x13py40 Term)(@x14py24 Term)(@x15py22 Term)) (! (= (FStar.Pervasives.Native.Mktuple8__g (FStar.Pervasives.Native.Mktuple8 @x0py1037 @x1py1142 @x2py860 @x3py624 @x4py460 @x5py363 @x6py262 @x7py208 @x8py138 @x9py99 @x10py62 @x11py59 @x12py45 @x13py40 @x14py24 @x15py22)) @x6py262) :pattern ((FStar.Pervasives.Native.Mktuple8 @x0py1037 @x1py1142 @x2py860 @x3py624 @x4py460 @x5py363 @x6py262 @x7py208 @x8py138 @x9py99 @x10py62 @x11py59 @x12py45 @x13py40 @x14py24 @x15py22)) )) :named projection_inverse_FStar.Pervasives.Native.Mktuple8__g))
(assert (! (forall ((@x0py1038 Term)(@x1py1143 Term)(@x2py861 Term)(@x3py625 Term)(@x4py461 Term)(@x5py364 Term)(@x6py263 Term)(@x7py209 Term)(@x8py139 Term)(@x9py100 Term)(@x10py63 Term)(@x11py60 Term)(@x12py46 Term)(@x13py41 Term)(@x14py25 Term)(@x15py23 Term)) (! (= (FStar.Pervasives.Native.Mktuple8__h (FStar.Pervasives.Native.Mktuple8 @x0py1038 @x1py1143 @x2py861 @x3py625 @x4py461 @x5py364 @x6py263 @x7py209 @x8py139 @x9py100 @x10py63 @x11py60 @x12py46 @x13py41 @x14py25 @x15py23)) @x7py209) :pattern ((FStar.Pervasives.Native.Mktuple8 @x0py1038 @x1py1143 @x2py861 @x3py625 @x4py461 @x5py364 @x6py263 @x7py209 @x8py139 @x9py100 @x10py63 @x11py60 @x12py46 @x13py41 @x14py25 @x15py23)) )) :named projection_inverse_FStar.Pervasives.Native.Mktuple8__h))
(assert (! (forall ((@x0py1039 Term)) (! (= (FStar.Pervasives.Native.None_a (FStar.Pervasives.Native.None @x0py1039)) @x0py1039) :pattern ((FStar.Pervasives.Native.None @x0py1039)) )) :named projection_inverse_FStar.Pervasives.Native.None_a))
(assert (! (forall ((@x0py1040 Term)(@x1py1144 Term)) (! (= (FStar.Pervasives.Native.Some_a (FStar.Pervasives.Native.Some @x0py1040 @x1py1144)) @x0py1040) :pattern ((FStar.Pervasives.Native.Some @x0py1040 @x1py1144)) )) :named projection_inverse_FStar.Pervasives.Native.Some_a))
(assert (! (forall ((@x0py1041 Term)(@x1py1145 Term)) (! (= (FStar.Pervasives.Native.Some_v (FStar.Pervasives.Native.Some @x0py1041 @x1py1145)) @x1py1145) :pattern ((FStar.Pervasives.Native.Some @x0py1041 @x1py1145)) )) :named projection_inverse_FStar.Pervasives.Native.Some_v))
(assert (! (forall ((@x0py1042 Term)) (! (= (FStar.Pervasives.PpxDerivingShowConstant__0 (FStar.Pervasives.PpxDerivingShowConstant @x0py1042)) @x0py1042) :pattern ((FStar.Pervasives.PpxDerivingShowConstant @x0py1042)) )) :named projection_inverse_FStar.Pervasives.PpxDerivingShowConstant__0))
(assert (! (forall ((@x0py1043 Term)(@x1py1146 Term)) (! (= (FStar.Pervasives.V_a (FStar.Pervasives.V @x0py1043 @x1py1146)) @x0py1043) :pattern ((FStar.Pervasives.V @x0py1043 @x1py1146)) )) :named projection_inverse_FStar.Pervasives.V_a))
(assert (! (forall ((@x0py1044 Term)(@x1py1147 Term)) (! (= (FStar.Pervasives.V_v (FStar.Pervasives.V @x0py1044 @x1py1147)) @x1py1147) :pattern ((FStar.Pervasives.V @x0py1044 @x1py1147)) )) :named projection_inverse_FStar.Pervasives.V_v))
(assert (! (forall ((@u0py312 Int)) (! (= (FString_const_proj_0 (FString_const @u0py312)) @u0py312) :pattern ((FString_const @u0py312)) )) :named projection_inverse_FString_const_proj_0))
(assert (! (forall ((@x0py1045 Term)(@x1py1148 Term)(@x2py862 Term)) (! (= (LexCons_0 (LexCons @x0py1045 @x1py1148 @x2py862)) @x0py1045) :pattern ((LexCons @x0py1045 @x1py1148 @x2py862)) )) :named projection_inverse_LexCons_0))
(assert (! (forall ((@x0py1046 Term)(@x1py1149 Term)(@x2py863 Term)) (! (= (LexCons_1 (LexCons @x0py1046 @x1py1149 @x2py863)) @x1py1149) :pattern ((LexCons @x0py1046 @x1py1149 @x2py863)) )) :named projection_inverse_LexCons_1))
(assert (! (forall ((@x0py1047 Term)(@x1py1150 Term)(@x2py864 Term)) (! (= (LexCons_2 (LexCons @x0py1047 @x1py1150 @x2py864)) @x2py864) :pattern ((LexCons @x0py1047 @x1py1150 @x2py864)) )) :named projection_inverse_LexCons_2))
(assert (! (forall ((@x0py1048 Term)(@x1py1151 Term)(@x2py865 Term)(@x3py626 Term)) (! (= (Prims.And__0 (Prims.And @x0py1048 @x1py1151 @x2py865 @x3py626)) @x2py865) :pattern ((Prims.And @x0py1048 @x1py1151 @x2py865 @x3py626)) )) :named projection_inverse_Prims.And__0))
(assert (! (forall ((@x0py1049 Term)(@x1py1152 Term)(@x2py866 Term)(@x3py627 Term)) (! (= (Prims.And__1 (Prims.And @x0py1049 @x1py1152 @x2py866 @x3py627)) @x3py627) :pattern ((Prims.And @x0py1049 @x1py1152 @x2py866 @x3py627)) )) :named projection_inverse_Prims.And__1))
(assert (! (forall ((@x0py1050 Term)(@x1py1153 Term)(@x2py867 Term)(@x3py628 Term)) (! (= (Prims.And_p (Prims.And @x0py1050 @x1py1153 @x2py867 @x3py628)) @x0py1050) :pattern ((Prims.And @x0py1050 @x1py1153 @x2py867 @x3py628)) )) :named projection_inverse_Prims.And_p))
(assert (! (forall ((@x0py1051 Term)(@x1py1154 Term)(@x2py868 Term)(@x3py629 Term)) (! (= (Prims.And_q (Prims.And @x0py1051 @x1py1154 @x2py868 @x3py629)) @x1py1154) :pattern ((Prims.And @x0py1051 @x1py1154 @x2py868 @x3py629)) )) :named projection_inverse_Prims.And_q))
(assert (! (forall ((@x0py1052 Term)(@x1py1155 Term)(@x2py869 Term)) (! (= (Prims.Cons_a (Prims.Cons @x0py1052 @x1py1155 @x2py869)) @x0py1052) :pattern ((Prims.Cons @x0py1052 @x1py1155 @x2py869)) )) :named projection_inverse_Prims.Cons_a))
(assert (! (forall ((@x0py1053 Term)(@x1py1156 Term)(@x2py870 Term)) (! (= (Prims.Cons_hd (Prims.Cons @x0py1053 @x1py1156 @x2py870)) @x1py1156) :pattern ((Prims.Cons @x0py1053 @x1py1156 @x2py870)) )) :named projection_inverse_Prims.Cons_hd))
(assert (! (forall ((@x0py1054 Term)(@x1py1157 Term)(@x2py871 Term)) (! (= (Prims.Cons_tl (Prims.Cons @x0py1054 @x1py1157 @x2py871)) @x2py871) :pattern ((Prims.Cons @x0py1054 @x1py1157 @x2py871)) )) :named projection_inverse_Prims.Cons_tl))
(assert (! (forall ((@x0py1055 Term)(@x1py1158 Term)) (! (= (Prims.HRefl_a (Prims.HRefl @x0py1055 @x1py1158)) @x0py1055) :pattern ((Prims.HRefl @x0py1055 @x1py1158)) )) :named projection_inverse_Prims.HRefl_a))
(assert (! (forall ((@x0py1056 Term)(@x1py1159 Term)) (! (= (Prims.HRefl_x (Prims.HRefl @x0py1056 @x1py1159)) @x1py1159) :pattern ((Prims.HRefl @x0py1056 @x1py1159)) )) :named projection_inverse_Prims.HRefl_x))
(assert (! (forall ((@x0py1057 Term)(@x1py1160 Term)(@x2py872 Term)) (! (= (Prims.Left__0 (Prims.Left @x0py1057 @x1py1160 @x2py872)) @x2py872) :pattern ((Prims.Left @x0py1057 @x1py1160 @x2py872)) )) :named projection_inverse_Prims.Left__0))
(assert (! (forall ((@x0py1058 Term)(@x1py1161 Term)(@x2py873 Term)) (! (= (Prims.Left_p (Prims.Left @x0py1058 @x1py1161 @x2py873)) @x0py1058) :pattern ((Prims.Left @x0py1058 @x1py1161 @x2py873)) )) :named projection_inverse_Prims.Left_p))
(assert (! (forall ((@x0py1059 Term)(@x1py1162 Term)(@x2py874 Term)) (! (= (Prims.Left_q (Prims.Left @x0py1059 @x1py1162 @x2py874)) @x1py1162) :pattern ((Prims.Left @x0py1059 @x1py1162 @x2py874)) )) :named projection_inverse_Prims.Left_q))
(assert (! (forall ((@x0py1060 Term)(@x1py1163 Term)(@x2py875 Term)(@x3py630 Term)) (! (= (Prims.Mkdtuple2__1 (Prims.Mkdtuple2 @x0py1060 @x1py1163 @x2py875 @x3py630)) @x2py875) :pattern ((Prims.Mkdtuple2 @x0py1060 @x1py1163 @x2py875 @x3py630)) )) :named projection_inverse_Prims.Mkdtuple2__1))
(assert (! (forall ((@x0py1061 Term)(@x1py1164 Term)(@x2py876 Term)(@x3py631 Term)) (! (= (Prims.Mkdtuple2__2 (Prims.Mkdtuple2 @x0py1061 @x1py1164 @x2py876 @x3py631)) @x3py631) :pattern ((Prims.Mkdtuple2 @x0py1061 @x1py1164 @x2py876 @x3py631)) )) :named projection_inverse_Prims.Mkdtuple2__2))
(assert (! (forall ((@x0py1062 Term)(@x1py1165 Term)(@x2py877 Term)(@x3py632 Term)) (! (= (Prims.Mkdtuple2_a (Prims.Mkdtuple2 @x0py1062 @x1py1165 @x2py877 @x3py632)) @x0py1062) :pattern ((Prims.Mkdtuple2 @x0py1062 @x1py1165 @x2py877 @x3py632)) )) :named projection_inverse_Prims.Mkdtuple2_a))
(assert (! (forall ((@x0py1063 Term)(@x1py1166 Term)(@x2py878 Term)(@x3py633 Term)) (! (= (Prims.Mkdtuple2_b (Prims.Mkdtuple2 @x0py1063 @x1py1166 @x2py878 @x3py633)) @x1py1166) :pattern ((Prims.Mkdtuple2 @x0py1063 @x1py1166 @x2py878 @x3py633)) )) :named projection_inverse_Prims.Mkdtuple2_b))
(assert (! (forall ((@x0py1064 Term)) (! (= (Prims.Nil_a (Prims.Nil @x0py1064)) @x0py1064) :pattern ((Prims.Nil @x0py1064)) )) :named projection_inverse_Prims.Nil_a))
(assert (! (forall ((@x0py1065 Term)(@x1py1167 Term)) (! (= (Prims.Refl_a (Prims.Refl @x0py1065 @x1py1167)) @x0py1065) :pattern ((Prims.Refl @x0py1065 @x1py1167)) )) :named projection_inverse_Prims.Refl_a))
(assert (! (forall ((@x0py1066 Term)(@x1py1168 Term)) (! (= (Prims.Refl_x (Prims.Refl @x0py1066 @x1py1168)) @x1py1168) :pattern ((Prims.Refl @x0py1066 @x1py1168)) )) :named projection_inverse_Prims.Refl_x))
(assert (! (forall ((@x0py1067 Term)(@x1py1169 Term)(@x2py879 Term)) (! (= (Prims.Right__0 (Prims.Right @x0py1067 @x1py1169 @x2py879)) @x2py879) :pattern ((Prims.Right @x0py1067 @x1py1169 @x2py879)) )) :named projection_inverse_Prims.Right__0))
(assert (! (forall ((@x0py1068 Term)(@x1py1170 Term)(@x2py880 Term)) (! (= (Prims.Right_p (Prims.Right @x0py1068 @x1py1170 @x2py880)) @x0py1068) :pattern ((Prims.Right @x0py1068 @x1py1170 @x2py880)) )) :named projection_inverse_Prims.Right_p))
(assert (! (forall ((@x0py1069 Term)(@x1py1171 Term)(@x2py881 Term)) (! (= (Prims.Right_q (Prims.Right @x0py1069 @x1py1171 @x2py881)) @x1py1171) :pattern ((Prims.Right @x0py1069 @x1py1171 @x2py881)) )) :named projection_inverse_Prims.Right_q))
(assert (! (forall ((@u0py313 Int)) (! (= (Tm_arrow_id (Tm_arrow @u0py313)) @u0py313) :pattern ((Tm_arrow @u0py313)) )) :named projection_inverse_Tm_arrow_id))
(assert (! (forall ((@u0py314 Fuel)(@x1py1172 Term)(@x2py882 Term)) (! (and (or (not (HasTypeFuel @u0py314 @x1py1172 (False_Tm_refine_74ff667701f75cfbefa2fd1da9dbdc13 @x2py882))) (HasTypeFuel @u0py314 @x1py1172 (False.relation @x2py882))) (or (HasTypeFuel @u0py314 @x1py1172 (False_Tm_refine_74ff667701f75cfbefa2fd1da9dbdc13 @x2py882)) (not (HasTypeFuel @u0py314 @x1py1172 (False.relation @x2py882))))) :pattern ((HasTypeFuel @u0py314 @x1py1172 (False_Tm_refine_74ff667701f75cfbefa2fd1da9dbdc13 @x2py882))) )) :named refinement_interpretation_False_Tm_refine_74ff667701f75cfbefa2fd1da9dbdc13))
(assert (! (forall ((@u0py315 Fuel)(@x1py1173 Term)(@x2py883 Term)(@x3py634 Term)(@x4py462 Term)(@x5py365 Term)) (! (and (or (not (HasTypeFuel @u0py315 @x1py1173 (False_Tm_refine_253153fea998a3a502df455711574c4d @x2py883 @x3py634 @x4py462 @x5py365))) (and (HasTypeFuel @u0py315 @x1py1173 (False.calc_proof @x2py883 @x3py634 @x4py462 @x5py365)) (BoxBool_proj_0 (False.uu___is_CalcRefl @x2py883 @x3py634 @x4py462 @x5py365 @x1py1173)))) (or (HasTypeFuel @u0py315 @x1py1173 (False_Tm_refine_253153fea998a3a502df455711574c4d @x2py883 @x3py634 @x4py462 @x5py365)) (not (HasTypeFuel @u0py315 @x1py1173 (False.calc_proof @x2py883 @x3py634 @x4py462 @x5py365))) (not (BoxBool_proj_0 (False.uu___is_CalcRefl @x2py883 @x3py634 @x4py462 @x5py365 @x1py1173))))) :pattern ((HasTypeFuel @u0py315 @x1py1173 (False_Tm_refine_253153fea998a3a502df455711574c4d @x2py883 @x3py634 @x4py462 @x5py365))) )) :named refinement_interpretation_False_Tm_refine_253153fea998a3a502df455711574c4d))
(assert (! (forall ((@u0py316 Fuel)(@x1py1174 Term)(@x2py884 Term)(@x3py635 Term)(@x4py463 Term)(@x5py366 Term)) (! (and (or (not (HasTypeFuel @u0py316 @x1py1174 (False_Tm_refine_c7c1219b2b697290706c3cb902d0c0fb @x2py884 @x3py635 @x4py463 @x5py366))) (and (HasTypeFuel @u0py316 @x1py1174 (False.calc_proof @x2py884 @x3py635 @x4py463 @x5py366)) (BoxBool_proj_0 (False.uu___is_CalcStep @x2py884 @x3py635 @x4py463 @x5py366 @x1py1174)))) (or (HasTypeFuel @u0py316 @x1py1174 (False_Tm_refine_c7c1219b2b697290706c3cb902d0c0fb @x2py884 @x3py635 @x4py463 @x5py366)) (not (HasTypeFuel @u0py316 @x1py1174 (False.calc_proof @x2py884 @x3py635 @x4py463 @x5py366))) (not (BoxBool_proj_0 (False.uu___is_CalcStep @x2py884 @x3py635 @x4py463 @x5py366 @x1py1174))))) :pattern ((HasTypeFuel @u0py316 @x1py1174 (False_Tm_refine_c7c1219b2b697290706c3cb902d0c0fb @x2py884 @x3py635 @x4py463 @x5py366))) )) :named refinement_interpretation_False_Tm_refine_c7c1219b2b697290706c3cb902d0c0fb))
(assert (! (forall ((@u0py317 Fuel)(@x1py1175 Term)(@x2py885 Term)(@x3py636 Term)) (! (and (or (not (HasTypeFuel @u0py317 @x1py1175 (FStar.Pervasives.Native_Tm_refine_2fbd657fe85bcb2423f9c7e5f9b3bcb5 @x2py885 @x3py636))) (and (HasTypeFuel @u0py317 @x1py1175 @x2py885) (= @x1py1175 @x3py636))) (or (HasTypeFuel @u0py317 @x1py1175 (FStar.Pervasives.Native_Tm_refine_2fbd657fe85bcb2423f9c7e5f9b3bcb5 @x2py885 @x3py636)) (not (HasTypeFuel @u0py317 @x1py1175 @x2py885)) (not (= @x1py1175 @x3py636)))) :pattern ((HasTypeFuel @u0py317 @x1py1175 (FStar.Pervasives.Native_Tm_refine_2fbd657fe85bcb2423f9c7e5f9b3bcb5 @x2py885 @x3py636))) )) :named refinement_interpretation_FStar.Pervasives.Native_Tm_refine_2fbd657fe85bcb2423f9c7e5f9b3bcb5))
(assert (! (forall ((@u0py318 Fuel)(@x1py1176 Term)(@x2py886 Term)) (! (and (or (not (HasTypeFuel @u0py318 @x1py1176 (FStar.Pervasives.Native_Tm_refine_4d5241eb6fe198666a8101195bbd4a2a @x2py886))) (and (HasTypeFuel @u0py318 @x1py1176 (FStar.Pervasives.Native.option @x2py886)) (BoxBool_proj_0 (FStar.Pervasives.Native.uu___is_Some @x2py886 @x1py1176)))) (or (HasTypeFuel @u0py318 @x1py1176 (FStar.Pervasives.Native_Tm_refine_4d5241eb6fe198666a8101195bbd4a2a @x2py886)) (not (HasTypeFuel @u0py318 @x1py1176 (FStar.Pervasives.Native.option @x2py886))) (not (BoxBool_proj_0 (FStar.Pervasives.Native.uu___is_Some @x2py886 @x1py1176))))) :pattern ((HasTypeFuel @u0py318 @x1py1176 (FStar.Pervasives.Native_Tm_refine_4d5241eb6fe198666a8101195bbd4a2a @x2py886))) )) :named refinement_interpretation_FStar.Pervasives.Native_Tm_refine_4d5241eb6fe198666a8101195bbd4a2a))
(assert (! (forall ((@u0py319 Fuel)(@x1py1177 Term)(@x2py887 Term)) (! (and (or (not (HasTypeFuel @u0py319 @x1py1177 (FStar.Pervasives.Native_Tm_refine_40cfb467dd44d40edcf16599ec909847 @x2py887))) (and (HasTypeFuel @u0py319 @x1py1177 @x2py887) (BoxBool_proj_0 (FStar.Pervasives.Native.uu___is_UnfoldFully @x1py1177)))) (or (HasTypeFuel @u0py319 @x1py1177 (FStar.Pervasives.Native_Tm_refine_40cfb467dd44d40edcf16599ec909847 @x2py887)) (not (HasTypeFuel @u0py319 @x1py1177 @x2py887)) (not (BoxBool_proj_0 (FStar.Pervasives.Native.uu___is_UnfoldFully @x1py1177))))) :pattern ((HasTypeFuel @u0py319 @x1py1177 (FStar.Pervasives.Native_Tm_refine_40cfb467dd44d40edcf16599ec909847 @x2py887))) )) :named refinement_interpretation_FStar.Pervasives.Native_Tm_refine_40cfb467dd44d40edcf16599ec909847))
(assert (! (forall ((@u0py320 Fuel)(@x1py1178 Term)(@x2py888 Term)) (! (and (or (not (HasTypeFuel @u0py320 @x1py1178 (FStar.Pervasives.Native_Tm_refine_735fdbeb3c591d804f924767d4322a6a @x2py888))) (and (HasTypeFuel @u0py320 @x1py1178 @x2py888) (BoxBool_proj_0 (FStar.Pervasives.Native.uu___is_UnfoldAttr @x1py1178)))) (or (HasTypeFuel @u0py320 @x1py1178 (FStar.Pervasives.Native_Tm_refine_735fdbeb3c591d804f924767d4322a6a @x2py888)) (not (HasTypeFuel @u0py320 @x1py1178 @x2py888)) (not (BoxBool_proj_0 (FStar.Pervasives.Native.uu___is_UnfoldAttr @x1py1178))))) :pattern ((HasTypeFuel @u0py320 @x1py1178 (FStar.Pervasives.Native_Tm_refine_735fdbeb3c591d804f924767d4322a6a @x2py888))) )) :named refinement_interpretation_FStar.Pervasives.Native_Tm_refine_735fdbeb3c591d804f924767d4322a6a))
(assert (! (forall ((@u0py321 Fuel)(@x1py1179 Term)(@x2py889 Term)) (! (and (or (not (HasTypeFuel @u0py321 @x1py1179 (FStar.Pervasives.Native_Tm_refine_f81289758692e8d7ff38327f5b71be85 @x2py889))) (and (HasTypeFuel @u0py321 @x1py1179 @x2py889) (BoxBool_proj_0 (FStar.Pervasives.Native.uu___is_UnfoldOnly @x1py1179)))) (or (HasTypeFuel @u0py321 @x1py1179 (FStar.Pervasives.Native_Tm_refine_f81289758692e8d7ff38327f5b71be85 @x2py889)) (not (HasTypeFuel @u0py321 @x1py1179 @x2py889)) (not (BoxBool_proj_0 (FStar.Pervasives.Native.uu___is_UnfoldOnly @x1py1179))))) :pattern ((HasTypeFuel @u0py321 @x1py1179 (FStar.Pervasives.Native_Tm_refine_f81289758692e8d7ff38327f5b71be85 @x2py889))) )) :named refinement_interpretation_FStar.Pervasives.Native_Tm_refine_f81289758692e8d7ff38327f5b71be85))
(assert (! (forall ((@u0py322 Fuel)(@x1py1180 Term)(@x2py890 Term)(@x3py637 Term)) (! (and (or (not (HasTypeFuel @u0py322 @x1py1180 (FStar.Pervasives_Tm_refine_8f1f5f564dae90240db429de2eb41517 @x2py890 @x3py637))) (and (HasTypeFuel @u0py322 @x1py1180 (FStar.Pervasives.either @x2py890 @x3py637)) (BoxBool_proj_0 (FStar.Pervasives.uu___is_Inr @x2py890 @x3py637 @x1py1180)))) (or (HasTypeFuel @u0py322 @x1py1180 (FStar.Pervasives_Tm_refine_8f1f5f564dae90240db429de2eb41517 @x2py890 @x3py637)) (not (HasTypeFuel @u0py322 @x1py1180 (FStar.Pervasives.either @x2py890 @x3py637))) (not (BoxBool_proj_0 (FStar.Pervasives.uu___is_Inr @x2py890 @x3py637 @x1py1180))))) :pattern ((HasTypeFuel @u0py322 @x1py1180 (FStar.Pervasives_Tm_refine_8f1f5f564dae90240db429de2eb41517 @x2py890 @x3py637))) )) :named refinement_interpretation_FStar.Pervasives_Tm_refine_8f1f5f564dae90240db429de2eb41517))
(assert (! (forall ((@u0py323 Fuel)(@x1py1181 Term)(@x2py891 Term)) (! (and (or (not (HasTypeFuel @u0py323 @x1py1181 (FStar.Pervasives_Tm_refine_9db520b26a7f39c5a01493a3f375290d @x2py891))) (and (HasTypeFuel @u0py323 @x1py1181 (FStar.Pervasives.result @x2py891)) (BoxBool_proj_0 (FStar.Pervasives.uu___is_V @x2py891 @x1py1181)))) (or (HasTypeFuel @u0py323 @x1py1181 (FStar.Pervasives_Tm_refine_9db520b26a7f39c5a01493a3f375290d @x2py891)) (not (HasTypeFuel @u0py323 @x1py1181 (FStar.Pervasives.result @x2py891))) (not (BoxBool_proj_0 (FStar.Pervasives.uu___is_V @x2py891 @x1py1181))))) :pattern ((HasTypeFuel @u0py323 @x1py1181 (FStar.Pervasives_Tm_refine_9db520b26a7f39c5a01493a3f375290d @x2py891))) )) :named refinement_interpretation_FStar.Pervasives_Tm_refine_9db520b26a7f39c5a01493a3f375290d))
(assert (! (forall ((@u0py324 Fuel)(@x1py1182 Term)(@x2py892 Term)) (! (and (or (not (HasTypeFuel @u0py324 @x1py1182 (FStar.Pervasives_Tm_refine_16d7dda25a162db0722685f27f707102 @x2py892))) (and (HasTypeFuel @u0py324 @x1py1182 @x2py892) (BoxBool_proj_0 (BoxBool false)))) (or (HasTypeFuel @u0py324 @x1py1182 (FStar.Pervasives_Tm_refine_16d7dda25a162db0722685f27f707102 @x2py892)) (not (HasTypeFuel @u0py324 @x1py1182 @x2py892)) (not (BoxBool_proj_0 (BoxBool false))))) :pattern ((HasTypeFuel @u0py324 @x1py1182 (FStar.Pervasives_Tm_refine_16d7dda25a162db0722685f27f707102 @x2py892))) )) :named refinement_interpretation_FStar.Pervasives_Tm_refine_16d7dda25a162db0722685f27f707102))
(assert (! (forall ((@u0py325 Fuel)(@x1py1183 Term)(@x2py893 Term)) (! (and (or (not (HasTypeFuel @u0py325 @x1py1183 (FStar.Pervasives_Tm_refine_22fb403854eba07427f92e79848f9d9f @x2py893))) (and (HasTypeFuel @u0py325 @x1py1183 (FStar.Pervasives.result @x2py893)) (BoxBool_proj_0 (FStar.Pervasives.uu___is_Err @x2py893 @x1py1183)))) (or (HasTypeFuel @u0py325 @x1py1183 (FStar.Pervasives_Tm_refine_22fb403854eba07427f92e79848f9d9f @x2py893)) (not (HasTypeFuel @u0py325 @x1py1183 (FStar.Pervasives.result @x2py893))) (not (BoxBool_proj_0 (FStar.Pervasives.uu___is_Err @x2py893 @x1py1183))))) :pattern ((HasTypeFuel @u0py325 @x1py1183 (FStar.Pervasives_Tm_refine_22fb403854eba07427f92e79848f9d9f @x2py893))) )) :named refinement_interpretation_FStar.Pervasives_Tm_refine_22fb403854eba07427f92e79848f9d9f))
(assert (! (forall ((@u0py326 Fuel)(@x1py1184 Term)(@x2py894 Term)(@x3py638 Term)) (! (and (or (not (HasTypeFuel @u0py326 @x1py1184 (FStar.Pervasives_Tm_refine_85e0cc884f8457202f90cd77f23733ba @x2py894 @x3py638))) (and (HasTypeFuel @u0py326 @x1py1184 (FStar.Pervasives.either @x2py894 @x3py638)) (BoxBool_proj_0 (FStar.Pervasives.uu___is_Inl @x2py894 @x3py638 @x1py1184)))) (or (HasTypeFuel @u0py326 @x1py1184 (FStar.Pervasives_Tm_refine_85e0cc884f8457202f90cd77f23733ba @x2py894 @x3py638)) (not (HasTypeFuel @u0py326 @x1py1184 (FStar.Pervasives.either @x2py894 @x3py638))) (not (BoxBool_proj_0 (FStar.Pervasives.uu___is_Inl @x2py894 @x3py638 @x1py1184))))) :pattern ((HasTypeFuel @u0py326 @x1py1184 (FStar.Pervasives_Tm_refine_85e0cc884f8457202f90cd77f23733ba @x2py894 @x3py638))) )) :named refinement_interpretation_FStar.Pervasives_Tm_refine_85e0cc884f8457202f90cd77f23733ba))
(assert (! (forall ((@u0py327 Fuel)(@x1py1185 Term)(@x2py895 Term)) (! (and (or (not (HasTypeFuel @u0py327 @x1py1185 (FStar.Pervasives_Tm_refine_95e1e2ee29104754cc3740f5575fc6e5 @x2py895))) (and (HasTypeFuel @u0py327 @x1py1185 (FStar.Pervasives.result @x2py895)) (BoxBool_proj_0 (FStar.Pervasives.uu___is_E @x2py895 @x1py1185)))) (or (HasTypeFuel @u0py327 @x1py1185 (FStar.Pervasives_Tm_refine_95e1e2ee29104754cc3740f5575fc6e5 @x2py895)) (not (HasTypeFuel @u0py327 @x1py1185 (FStar.Pervasives.result @x2py895))) (not (BoxBool_proj_0 (FStar.Pervasives.uu___is_E @x2py895 @x1py1185))))) :pattern ((HasTypeFuel @u0py327 @x1py1185 (FStar.Pervasives_Tm_refine_95e1e2ee29104754cc3740f5575fc6e5 @x2py895))) )) :named refinement_interpretation_FStar.Pervasives_Tm_refine_95e1e2ee29104754cc3740f5575fc6e5))
(assert (! (forall ((@u0py328 Fuel)(@x1py1186 Term)) (! (and (or (not (HasTypeFuel @u0py328 @x1py1186 FStar.Pervasives_Tm_refine_564db2f0aa0878b4d96c60508be3dd36)) (and (HasTypeFuel @u0py328 @x1py1186 FStar.Pervasives.__internal_ocaml_attributes) (BoxBool_proj_0 (FStar.Pervasives.uu___is_PpxDerivingShowConstant @x1py1186)))) (or (HasTypeFuel @u0py328 @x1py1186 FStar.Pervasives_Tm_refine_564db2f0aa0878b4d96c60508be3dd36) (not (HasTypeFuel @u0py328 @x1py1186 FStar.Pervasives.__internal_ocaml_attributes)) (not (BoxBool_proj_0 (FStar.Pervasives.uu___is_PpxDerivingShowConstant @x1py1186))))) :pattern ((HasTypeFuel @u0py328 @x1py1186 FStar.Pervasives_Tm_refine_564db2f0aa0878b4d96c60508be3dd36)) )) :named refinement_interpretation_FStar.Pervasives_Tm_refine_564db2f0aa0878b4d96c60508be3dd36))
(assert (! (forall ((@u0py329 Fuel)(@x1py1187 Term)) (! (and (or (not (HasTypeFuel @u0py329 @x1py1187 FStar.Pervasives_Tm_refine_5036c6b2983454bc3afeffcba3f00f50)) (and (HasTypeFuel @u0py329 @x1py1187 FStar.Pervasives.__internal_ocaml_attributes) (BoxBool_proj_0 (FStar.Pervasives.uu___is_CConst @x1py1187)))) (or (HasTypeFuel @u0py329 @x1py1187 FStar.Pervasives_Tm_refine_5036c6b2983454bc3afeffcba3f00f50) (not (HasTypeFuel @u0py329 @x1py1187 FStar.Pervasives.__internal_ocaml_attributes)) (not (BoxBool_proj_0 (FStar.Pervasives.uu___is_CConst @x1py1187))))) :pattern ((HasTypeFuel @u0py329 @x1py1187 FStar.Pervasives_Tm_refine_5036c6b2983454bc3afeffcba3f00f50)) )) :named refinement_interpretation_FStar.Pervasives_Tm_refine_5036c6b2983454bc3afeffcba3f00f50))
(assert (! (forall ((@u0py330 Fuel)(@x1py1188 Term)(@x2py896 Term)(@x3py639 Term)) (! (and (or (not (HasTypeFuel @u0py330 @x1py1188 (FStar.Pervasives_Tm_refine_7026ef6906ebd21e19dc2cc0639312d3 @x2py896 @x3py639))) (and (HasTypeFuel @u0py330 @x1py1188 @x2py896) (Valid (FStar.Pervasives.inversion @x3py639)))) (or (not (Valid (FStar.Pervasives.inversion @x3py639))) (HasTypeFuel @u0py330 @x1py1188 (FStar.Pervasives_Tm_refine_7026ef6906ebd21e19dc2cc0639312d3 @x2py896 @x3py639)) (not (HasTypeFuel @u0py330 @x1py1188 @x2py896)))) :pattern ((HasTypeFuel @u0py330 @x1py1188 (FStar.Pervasives_Tm_refine_7026ef6906ebd21e19dc2cc0639312d3 @x2py896 @x3py639))) )) :named refinement_interpretation_FStar.Pervasives_Tm_refine_7026ef6906ebd21e19dc2cc0639312d3))
(assert (! (forall ((@u0py331 Fuel)(@x1py1189 Term)) (! (and (or (not (HasTypeFuel @u0py331 @x1py1189 FStar.Pervasives_Tm_refine_47384bef739d1f0729fd782d351dc9a5)) (and (HasTypeFuel @u0py331 @x1py1189 FStar.Pervasives.__internal_ocaml_attributes) (BoxBool_proj_0 (FStar.Pervasives.uu___is_CEpilogue @x1py1189)))) (or (not (HasTypeFuel @u0py331 @x1py1189 FStar.Pervasives.__internal_ocaml_attributes)) (not (BoxBool_proj_0 (FStar.Pervasives.uu___is_CEpilogue @x1py1189))) (HasTypeFuel @u0py331 @x1py1189 FStar.Pervasives_Tm_refine_47384bef739d1f0729fd782d351dc9a5))) :pattern ((HasTypeFuel @u0py331 @x1py1189 FStar.Pervasives_Tm_refine_47384bef739d1f0729fd782d351dc9a5)) )) :named refinement_interpretation_FStar.Pervasives_Tm_refine_47384bef739d1f0729fd782d351dc9a5))
(assert (! (forall ((@u0py332 Fuel)(@x1py1190 Term)(@x2py897 Term)(@x3py640 Term)) (! (and (or (not (HasTypeFuel @u0py332 @x1py1190 (FStar.Pervasives_Tm_refine_a4dcdeeacbcb04d05a6720f786918fd6 @x2py897 @x3py640))) (and (HasTypeFuel @u0py332 @x1py1190 (FStar.Pervasives.result @x2py897)) (Valid @x3py640))) (or (not (Valid @x3py640)) (not (HasTypeFuel @u0py332 @x1py1190 (FStar.Pervasives.result @x2py897))) (HasTypeFuel @u0py332 @x1py1190 (FStar.Pervasives_Tm_refine_a4dcdeeacbcb04d05a6720f786918fd6 @x2py897 @x3py640)))) :pattern ((HasTypeFuel @u0py332 @x1py1190 (FStar.Pervasives_Tm_refine_a4dcdeeacbcb04d05a6720f786918fd6 @x2py897 @x3py640))) )) :named refinement_interpretation_FStar.Pervasives_Tm_refine_a4dcdeeacbcb04d05a6720f786918fd6))
(assert (! (forall ((@u0py333 Fuel)(@x1py1191 Term)(@x2py898 Term)) (! (and (or (not (HasTypeFuel @u0py333 @x1py1191 (FStar.Pervasives_Tm_refine_a2260b9f44d24a9a5b9e80956138e9d0 @x2py898))) (HasTypeFuel @u0py333 @x1py1191 (FStar.Pervasives.result @x2py898))) (or (HasTypeFuel @u0py333 @x1py1191 (FStar.Pervasives_Tm_refine_a2260b9f44d24a9a5b9e80956138e9d0 @x2py898)) (not (HasTypeFuel @u0py333 @x1py1191 (FStar.Pervasives.result @x2py898))))) :pattern ((HasTypeFuel @u0py333 @x1py1191 (FStar.Pervasives_Tm_refine_a2260b9f44d24a9a5b9e80956138e9d0 @x2py898))) )) :named refinement_interpretation_FStar.Pervasives_Tm_refine_a2260b9f44d24a9a5b9e80956138e9d0))
(assert (! (forall ((@u0py334 Fuel)(@x1py1192 Term)) (! (and (or (not (HasTypeFuel @u0py334 @x1py1192 FStar.Pervasives_Tm_refine_ac46c1a2a06ce46a180e0eda48004c47)) (and (HasTypeFuel @u0py334 @x1py1192 FStar.Pervasives.__internal_ocaml_attributes) (BoxBool_proj_0 (FStar.Pervasives.uu___is_CPrologue @x1py1192)))) (or (HasTypeFuel @u0py334 @x1py1192 FStar.Pervasives_Tm_refine_ac46c1a2a06ce46a180e0eda48004c47) (not (HasTypeFuel @u0py334 @x1py1192 FStar.Pervasives.__internal_ocaml_attributes)) (not (BoxBool_proj_0 (FStar.Pervasives.uu___is_CPrologue @x1py1192))))) :pattern ((HasTypeFuel @u0py334 @x1py1192 FStar.Pervasives_Tm_refine_ac46c1a2a06ce46a180e0eda48004c47)) )) :named refinement_interpretation_FStar.Pervasives_Tm_refine_ac46c1a2a06ce46a180e0eda48004c47))
(assert (! (forall ((@u0py335 Fuel)(@x1py1193 Term)) (! (and (or (not (HasTypeFuel @u0py335 @x1py1193 FStar.Pervasives_Tm_refine_c53089e2d20d1b0f5a267296ac8e45f0)) (and (HasTypeFuel @u0py335 @x1py1193 FStar.Pervasives.__internal_ocaml_attributes) (BoxBool_proj_0 (FStar.Pervasives.uu___is_Comment @x1py1193)))) (or (HasTypeFuel @u0py335 @x1py1193 FStar.Pervasives_Tm_refine_c53089e2d20d1b0f5a267296ac8e45f0) (not (HasTypeFuel @u0py335 @x1py1193 FStar.Pervasives.__internal_ocaml_attributes)) (not (BoxBool_proj_0 (FStar.Pervasives.uu___is_Comment @x1py1193))))) :pattern ((HasTypeFuel @u0py335 @x1py1193 FStar.Pervasives_Tm_refine_c53089e2d20d1b0f5a267296ac8e45f0)) )) :named refinement_interpretation_FStar.Pervasives_Tm_refine_c53089e2d20d1b0f5a267296ac8e45f0))
(assert (! (forall ((@u0py336 Fuel)(@x1py1194 Term)(@x2py899 Term)) (! (and (or (not (HasTypeFuel @u0py336 @x1py1194 (Prims_Tm_refine_7aac12c24449a22c34d98a0ea8ed4a32 @x2py899))) (and (HasTypeFuel @u0py336 @x1py1194 (Prims.list @x2py899)) (BoxBool_proj_0 (Prims.uu___is_Cons @x2py899 @x1py1194)))) (or (HasTypeFuel @u0py336 @x1py1194 (Prims_Tm_refine_7aac12c24449a22c34d98a0ea8ed4a32 @x2py899)) (not (HasTypeFuel @u0py336 @x1py1194 (Prims.list @x2py899))) (not (BoxBool_proj_0 (Prims.uu___is_Cons @x2py899 @x1py1194))))) :pattern ((HasTypeFuel @u0py336 @x1py1194 (Prims_Tm_refine_7aac12c24449a22c34d98a0ea8ed4a32 @x2py899))) )) :named refinement_interpretation_Prims_Tm_refine_7aac12c24449a22c34d98a0ea8ed4a32))
(assert (! (forall ((@u0py337 Fuel)(@x1py1195 Term)) (! (and (or (not (HasTypeFuel @u0py337 @x1py1195 Prims_Tm_refine_8c9ebed3095a60bf2b256a37e40b13f4)) (and (HasTypeFuel @u0py337 @x1py1195 Tm_type) (forall ((@x2py900 Term)) (! (or (not (HasType @x2py900 @x1py1195)) (= @x2py900 Tm_unit)) :pattern ((HasType @x2py900 @x1py1195)) )))) (or (HasTypeFuel @u0py337 @x1py1195 Prims_Tm_refine_8c9ebed3095a60bf2b256a37e40b13f4) (not (HasTypeFuel @u0py337 @x1py1195 Tm_type)) (and (HasType (@x2!838 @x1py1195) @x1py1195) (not (= (@x2!838 @x1py1195) Tm_unit))))) :pattern ((HasTypeFuel @u0py337 @x1py1195 Prims_Tm_refine_8c9ebed3095a60bf2b256a37e40b13f4)) )) :named refinement_interpretation_Prims_Tm_refine_8c9ebed3095a60bf2b256a37e40b13f4))
(assert (! (forall ((@u0py338 Fuel)(@x1py1196 Term)(@x2py901 Term)(@x3py641 Term)) (! (and (or (not (HasTypeFuel @u0py338 @x1py1196 (Prims_Tm_refine_8d65e998a07dd53ec478e27017d9dba5 @x2py901 @x3py641))) (and (HasTypeFuel @u0py338 @x1py1196 @x2py901) (Valid @x3py641))) (or (not (Valid @x3py641)) (HasTypeFuel @u0py338 @x1py1196 (Prims_Tm_refine_8d65e998a07dd53ec478e27017d9dba5 @x2py901 @x3py641)) (not (HasTypeFuel @u0py338 @x1py1196 @x2py901)))) :pattern ((HasTypeFuel @u0py338 @x1py1196 (Prims_Tm_refine_8d65e998a07dd53ec478e27017d9dba5 @x2py901 @x3py641))) )) :named refinement_interpretation_Prims_Tm_refine_8d65e998a07dd53ec478e27017d9dba5))
(assert (! (forall ((@u0py339 Fuel)(@x1py1197 Term)(@x2py902 Term)(@x3py642 Term)) (! (and (or (not (HasTypeFuel @u0py339 @x1py1197 (Prims_Tm_refine_95f078f2b9cfbd740f9afd162814a526 @x2py902 @x3py642))) (and (HasTypeFuel @u0py339 @x1py1197 (Prims.c_or @x2py902 @x3py642)) (BoxBool_proj_0 (Prims.uu___is_Right @x2py902 @x3py642 @x1py1197)))) (or (HasTypeFuel @u0py339 @x1py1197 (Prims_Tm_refine_95f078f2b9cfbd740f9afd162814a526 @x2py902 @x3py642)) (not (HasTypeFuel @u0py339 @x1py1197 (Prims.c_or @x2py902 @x3py642))) (not (BoxBool_proj_0 (Prims.uu___is_Right @x2py902 @x3py642 @x1py1197))))) :pattern ((HasTypeFuel @u0py339 @x1py1197 (Prims_Tm_refine_95f078f2b9cfbd740f9afd162814a526 @x2py902 @x3py642))) )) :named refinement_interpretation_Prims_Tm_refine_95f078f2b9cfbd740f9afd162814a526))
(assert (! (forall ((@u0py340 Fuel)(@x1py1198 Term)) (! (and (or (not (HasTypeFuel @u0py340 @x1py1198 Prims_Tm_refine_414d0a9f578ab0048252f8c8f552b99f)) (and (HasTypeFuel @u0py340 @x1py1198 Tm_type) (Valid (Prims.hasEq @x1py1198)))) (or (HasTypeFuel @u0py340 @x1py1198 Prims_Tm_refine_414d0a9f578ab0048252f8c8f552b99f) (not (Valid (Prims.hasEq @x1py1198))) (not (HasTypeFuel @u0py340 @x1py1198 Tm_type)))) :pattern ((HasTypeFuel @u0py340 @x1py1198 Prims_Tm_refine_414d0a9f578ab0048252f8c8f552b99f)) )) :named refinement_interpretation_Prims_Tm_refine_414d0a9f578ab0048252f8c8f552b99f))
(assert (! (forall ((@u0py341 Fuel)(@x1py1199 Term)(@x2py903 Term)(@x3py643 Term)) (! (and (or (not (HasTypeFuel @u0py341 @x1py1199 (Prims_Tm_refine_51387c0a7ef77e43ab89d4ae2b6b464d @x2py903 @x3py643))) (and (HasTypeFuel @u0py341 @x1py1199 (Prims.c_or @x2py903 @x3py643)) (BoxBool_proj_0 (Prims.uu___is_Left @x2py903 @x3py643 @x1py1199)))) (or (not (HasTypeFuel @u0py341 @x1py1199 (Prims.c_or @x2py903 @x3py643))) (HasTypeFuel @u0py341 @x1py1199 (Prims_Tm_refine_51387c0a7ef77e43ab89d4ae2b6b464d @x2py903 @x3py643)) (not (BoxBool_proj_0 (Prims.uu___is_Left @x2py903 @x3py643 @x1py1199))))) :pattern ((HasTypeFuel @u0py341 @x1py1199 (Prims_Tm_refine_51387c0a7ef77e43ab89d4ae2b6b464d @x2py903 @x3py643))) )) :named refinement_interpretation_Prims_Tm_refine_51387c0a7ef77e43ab89d4ae2b6b464d))
(assert (! (forall ((@u0py342 Fuel)(@x1py1200 Term)(@x2py904 Term)) (! (and (or (not (HasTypeFuel @u0py342 @x1py1200 (Prims_Tm_refine_7075614a0e8c0bdbec6de0d0ef7f1280 @x2py904))) (and (HasTypeFuel @u0py342 @x1py1200 @x2py904) (not (= @x1py1200 (BoxInt 0))))) (or (HasTypeFuel @u0py342 @x1py1200 (Prims_Tm_refine_7075614a0e8c0bdbec6de0d0ef7f1280 @x2py904)) (= @x1py1200 (BoxInt 0)) (not (HasTypeFuel @u0py342 @x1py1200 @x2py904)))) :pattern ((HasTypeFuel @u0py342 @x1py1200 (Prims_Tm_refine_7075614a0e8c0bdbec6de0d0ef7f1280 @x2py904))) )) :named refinement_interpretation_Prims_Tm_refine_7075614a0e8c0bdbec6de0d0ef7f1280))
(assert (! (forall ((@u0py343 Fuel)(@x1py1201 Term)(@x2py905 Term)) (! (and (or (not (HasTypeFuel @u0py343 @x1py1201 (Prims_Tm_refine_ba523126f67e00e7cd55f0b92f16681d @x2py905))) (and (HasTypeFuel @u0py343 @x1py1201 @x2py905) (<= (BoxInt_proj_0 (BoxInt 0)) (BoxInt_proj_0 @x1py1201)))) (or (HasTypeFuel @u0py343 @x1py1201 (Prims_Tm_refine_ba523126f67e00e7cd55f0b92f16681d @x2py905)) (not (HasTypeFuel @u0py343 @x1py1201 @x2py905)) (not (<= (BoxInt_proj_0 (BoxInt 0)) (BoxInt_proj_0 @x1py1201))))) :pattern ((HasTypeFuel @u0py343 @x1py1201 (Prims_Tm_refine_ba523126f67e00e7cd55f0b92f16681d @x2py905))) )) :named refinement_interpretation_Prims_Tm_refine_ba523126f67e00e7cd55f0b92f16681d))
(assert (! (forall ((@u0py344 Fuel)(@x1py1202 Term)(@x2py906 Term)) (! (and (or (not (HasTypeFuel @u0py344 @x1py1202 (Prims_Tm_refine_c16bc1b61f58b349bf6fc1c94dcaf83b @x2py906))) (HasTypeFuel @u0py344 @x1py1202 @x2py906)) (or (HasTypeFuel @u0py344 @x1py1202 (Prims_Tm_refine_c16bc1b61f58b349bf6fc1c94dcaf83b @x2py906)) (not (HasTypeFuel @u0py344 @x1py1202 @x2py906)))) :pattern ((HasTypeFuel @u0py344 @x1py1202 (Prims_Tm_refine_c16bc1b61f58b349bf6fc1c94dcaf83b @x2py906))) )) :named refinement_interpretation_Prims_Tm_refine_c16bc1b61f58b349bf6fc1c94dcaf83b))
(assert (! (forall ((@u0py345 Fuel)(@x1py1203 Term)(@x2py907 Term)) (! (and (or (not (HasTypeFuel @u0py345 @x1py1203 (Prims_Tm_refine_f048236b5f8051f83b495ea5eaa6127b @x2py907))) (and (HasTypeFuel @u0py345 @x1py1203 @x2py907) (not (<= (BoxInt_proj_0 @x1py1203) (BoxInt_proj_0 (BoxInt 0)))))) (or (HasTypeFuel @u0py345 @x1py1203 (Prims_Tm_refine_f048236b5f8051f83b495ea5eaa6127b @x2py907)) (not (HasTypeFuel @u0py345 @x1py1203 @x2py907)) (<= (BoxInt_proj_0 @x1py1203) (BoxInt_proj_0 (BoxInt 0))))) :pattern ((HasTypeFuel @u0py345 @x1py1203 (Prims_Tm_refine_f048236b5f8051f83b495ea5eaa6127b @x2py907))) )) :named refinement_interpretation_Prims_Tm_refine_f048236b5f8051f83b495ea5eaa6127b))
(assert (! (forall ((@x0py1070 Term)) (! (HasType (False_Tm_refine_74ff667701f75cfbefa2fd1da9dbdc13 @x0py1070) Tm_type) :pattern ((HasType (False_Tm_refine_74ff667701f75cfbefa2fd1da9dbdc13 @x0py1070) Tm_type)) )) :named refinement_kinding_False_Tm_refine_74ff667701f75cfbefa2fd1da9dbdc13))
(assert (! (forall ((@x0py1071 Term)(@x1py1204 Term)(@x2py908 Term)(@x3py644 Term)) (! (HasType (False_Tm_refine_253153fea998a3a502df455711574c4d @x0py1071 @x1py1204 @x2py908 @x3py644) Tm_type) :pattern ((HasType (False_Tm_refine_253153fea998a3a502df455711574c4d @x0py1071 @x1py1204 @x2py908 @x3py644) Tm_type)) )) :named refinement_kinding_False_Tm_refine_253153fea998a3a502df455711574c4d))
(assert (! (forall ((@x0py1072 Term)(@x1py1205 Term)(@x2py909 Term)(@x3py645 Term)) (! (HasType (False_Tm_refine_c7c1219b2b697290706c3cb902d0c0fb @x0py1072 @x1py1205 @x2py909 @x3py645) Tm_type) :pattern ((HasType (False_Tm_refine_c7c1219b2b697290706c3cb902d0c0fb @x0py1072 @x1py1205 @x2py909 @x3py645) Tm_type)) )) :named refinement_kinding_False_Tm_refine_c7c1219b2b697290706c3cb902d0c0fb))
(assert (! (forall ((@x0py1073 Term)(@x1py1206 Term)) (! (HasType (FStar.Pervasives.Native_Tm_refine_2fbd657fe85bcb2423f9c7e5f9b3bcb5 @x0py1073 @x1py1206) Tm_type) :pattern ((HasType (FStar.Pervasives.Native_Tm_refine_2fbd657fe85bcb2423f9c7e5f9b3bcb5 @x0py1073 @x1py1206) Tm_type)) )) :named refinement_kinding_FStar.Pervasives.Native_Tm_refine_2fbd657fe85bcb2423f9c7e5f9b3bcb5))
(assert (! (forall ((@x0py1074 Term)) (! (HasType (FStar.Pervasives.Native_Tm_refine_4d5241eb6fe198666a8101195bbd4a2a @x0py1074) Tm_type) :pattern ((HasType (FStar.Pervasives.Native_Tm_refine_4d5241eb6fe198666a8101195bbd4a2a @x0py1074) Tm_type)) )) :named refinement_kinding_FStar.Pervasives.Native_Tm_refine_4d5241eb6fe198666a8101195bbd4a2a))
(assert (! (forall ((@x0py1075 Term)) (! (HasType (FStar.Pervasives.Native_Tm_refine_40cfb467dd44d40edcf16599ec909847 @x0py1075) Tm_type) :pattern ((HasType (FStar.Pervasives.Native_Tm_refine_40cfb467dd44d40edcf16599ec909847 @x0py1075) Tm_type)) )) :named refinement_kinding_FStar.Pervasives.Native_Tm_refine_40cfb467dd44d40edcf16599ec909847))
(assert (! (forall ((@x0py1076 Term)) (! (HasType (FStar.Pervasives.Native_Tm_refine_735fdbeb3c591d804f924767d4322a6a @x0py1076) Tm_type) :pattern ((HasType (FStar.Pervasives.Native_Tm_refine_735fdbeb3c591d804f924767d4322a6a @x0py1076) Tm_type)) )) :named refinement_kinding_FStar.Pervasives.Native_Tm_refine_735fdbeb3c591d804f924767d4322a6a))
(assert (! (forall ((@x0py1077 Term)) (! (HasType (FStar.Pervasives.Native_Tm_refine_f81289758692e8d7ff38327f5b71be85 @x0py1077) Tm_type) :pattern ((HasType (FStar.Pervasives.Native_Tm_refine_f81289758692e8d7ff38327f5b71be85 @x0py1077) Tm_type)) )) :named refinement_kinding_FStar.Pervasives.Native_Tm_refine_f81289758692e8d7ff38327f5b71be85))
(assert (! (forall ((@x0py1078 Term)(@x1py1207 Term)) (! (HasType (FStar.Pervasives_Tm_refine_8f1f5f564dae90240db429de2eb41517 @x0py1078 @x1py1207) Tm_type) :pattern ((HasType (FStar.Pervasives_Tm_refine_8f1f5f564dae90240db429de2eb41517 @x0py1078 @x1py1207) Tm_type)) )) :named refinement_kinding_FStar.Pervasives_Tm_refine_8f1f5f564dae90240db429de2eb41517))
(assert (! (forall ((@x0py1079 Term)) (! (HasType (FStar.Pervasives_Tm_refine_9db520b26a7f39c5a01493a3f375290d @x0py1079) Tm_type) :pattern ((HasType (FStar.Pervasives_Tm_refine_9db520b26a7f39c5a01493a3f375290d @x0py1079) Tm_type)) )) :named refinement_kinding_FStar.Pervasives_Tm_refine_9db520b26a7f39c5a01493a3f375290d))
(assert (! (forall ((@x0py1080 Term)) (! (HasType (FStar.Pervasives_Tm_refine_16d7dda25a162db0722685f27f707102 @x0py1080) Tm_type) :pattern ((HasType (FStar.Pervasives_Tm_refine_16d7dda25a162db0722685f27f707102 @x0py1080) Tm_type)) )) :named refinement_kinding_FStar.Pervasives_Tm_refine_16d7dda25a162db0722685f27f707102))
(assert (! (forall ((@x0py1081 Term)) (! (HasType (FStar.Pervasives_Tm_refine_22fb403854eba07427f92e79848f9d9f @x0py1081) Tm_type) :pattern ((HasType (FStar.Pervasives_Tm_refine_22fb403854eba07427f92e79848f9d9f @x0py1081) Tm_type)) )) :named refinement_kinding_FStar.Pervasives_Tm_refine_22fb403854eba07427f92e79848f9d9f))
(assert (! (forall ((@x0py1082 Term)(@x1py1208 Term)) (! (HasType (FStar.Pervasives_Tm_refine_85e0cc884f8457202f90cd77f23733ba @x0py1082 @x1py1208) Tm_type) :pattern ((HasType (FStar.Pervasives_Tm_refine_85e0cc884f8457202f90cd77f23733ba @x0py1082 @x1py1208) Tm_type)) )) :named refinement_kinding_FStar.Pervasives_Tm_refine_85e0cc884f8457202f90cd77f23733ba))
(assert (! (forall ((@x0py1083 Term)) (! (HasType (FStar.Pervasives_Tm_refine_95e1e2ee29104754cc3740f5575fc6e5 @x0py1083) Tm_type) :pattern ((HasType (FStar.Pervasives_Tm_refine_95e1e2ee29104754cc3740f5575fc6e5 @x0py1083) Tm_type)) )) :named refinement_kinding_FStar.Pervasives_Tm_refine_95e1e2ee29104754cc3740f5575fc6e5))
(assert (! (HasType FStar.Pervasives_Tm_refine_564db2f0aa0878b4d96c60508be3dd36 Tm_type) :named refinement_kinding_FStar.Pervasives_Tm_refine_564db2f0aa0878b4d96c60508be3dd36))
(assert (! (HasType FStar.Pervasives_Tm_refine_5036c6b2983454bc3afeffcba3f00f50 Tm_type) :named refinement_kinding_FStar.Pervasives_Tm_refine_5036c6b2983454bc3afeffcba3f00f50))
(assert (! (forall ((@x0py1084 Term)(@x1py1209 Term)) (! (HasType (FStar.Pervasives_Tm_refine_7026ef6906ebd21e19dc2cc0639312d3 @x0py1084 @x1py1209) Tm_type) :pattern ((HasType (FStar.Pervasives_Tm_refine_7026ef6906ebd21e19dc2cc0639312d3 @x0py1084 @x1py1209) Tm_type)) )) :named refinement_kinding_FStar.Pervasives_Tm_refine_7026ef6906ebd21e19dc2cc0639312d3))
(assert (! (HasType FStar.Pervasives_Tm_refine_47384bef739d1f0729fd782d351dc9a5 Tm_type) :named refinement_kinding_FStar.Pervasives_Tm_refine_47384bef739d1f0729fd782d351dc9a5))
(assert (! (forall ((@x0py1085 Term)(@x1py1210 Term)) (! (HasType (FStar.Pervasives_Tm_refine_a4dcdeeacbcb04d05a6720f786918fd6 @x0py1085 @x1py1210) Tm_type) :pattern ((HasType (FStar.Pervasives_Tm_refine_a4dcdeeacbcb04d05a6720f786918fd6 @x0py1085 @x1py1210) Tm_type)) )) :named refinement_kinding_FStar.Pervasives_Tm_refine_a4dcdeeacbcb04d05a6720f786918fd6))
(assert (! (forall ((@x0py1086 Term)) (! (HasType (FStar.Pervasives_Tm_refine_a2260b9f44d24a9a5b9e80956138e9d0 @x0py1086) Tm_type) :pattern ((HasType (FStar.Pervasives_Tm_refine_a2260b9f44d24a9a5b9e80956138e9d0 @x0py1086) Tm_type)) )) :named refinement_kinding_FStar.Pervasives_Tm_refine_a2260b9f44d24a9a5b9e80956138e9d0))
(assert (! (HasType FStar.Pervasives_Tm_refine_ac46c1a2a06ce46a180e0eda48004c47 Tm_type) :named refinement_kinding_FStar.Pervasives_Tm_refine_ac46c1a2a06ce46a180e0eda48004c47))
(assert (! (HasType FStar.Pervasives_Tm_refine_c53089e2d20d1b0f5a267296ac8e45f0 Tm_type) :named refinement_kinding_FStar.Pervasives_Tm_refine_c53089e2d20d1b0f5a267296ac8e45f0))
(assert (! (forall ((@x0py1087 Term)) (! (HasType (Prims_Tm_refine_7aac12c24449a22c34d98a0ea8ed4a32 @x0py1087) Tm_type) :pattern ((HasType (Prims_Tm_refine_7aac12c24449a22c34d98a0ea8ed4a32 @x0py1087) Tm_type)) )) :named refinement_kinding_Prims_Tm_refine_7aac12c24449a22c34d98a0ea8ed4a32))
(assert (! (HasType Prims_Tm_refine_8c9ebed3095a60bf2b256a37e40b13f4 Tm_type) :named refinement_kinding_Prims_Tm_refine_8c9ebed3095a60bf2b256a37e40b13f4))
(assert (! (forall ((@x0py1088 Term)(@x1py1211 Term)) (! (HasType (Prims_Tm_refine_8d65e998a07dd53ec478e27017d9dba5 @x0py1088 @x1py1211) Tm_type) :pattern ((HasType (Prims_Tm_refine_8d65e998a07dd53ec478e27017d9dba5 @x0py1088 @x1py1211) Tm_type)) )) :named refinement_kinding_Prims_Tm_refine_8d65e998a07dd53ec478e27017d9dba5))
(assert (! (forall ((@x0py1089 Term)(@x1py1212 Term)) (! (HasType (Prims_Tm_refine_95f078f2b9cfbd740f9afd162814a526 @x0py1089 @x1py1212) Tm_type) :pattern ((HasType (Prims_Tm_refine_95f078f2b9cfbd740f9afd162814a526 @x0py1089 @x1py1212) Tm_type)) )) :named refinement_kinding_Prims_Tm_refine_95f078f2b9cfbd740f9afd162814a526))
(assert (! (HasType Prims_Tm_refine_414d0a9f578ab0048252f8c8f552b99f Tm_type) :named refinement_kinding_Prims_Tm_refine_414d0a9f578ab0048252f8c8f552b99f))
(assert (! (forall ((@x0py1090 Term)(@x1py1213 Term)) (! (HasType (Prims_Tm_refine_51387c0a7ef77e43ab89d4ae2b6b464d @x0py1090 @x1py1213) Tm_type) :pattern ((HasType (Prims_Tm_refine_51387c0a7ef77e43ab89d4ae2b6b464d @x0py1090 @x1py1213) Tm_type)) )) :named refinement_kinding_Prims_Tm_refine_51387c0a7ef77e43ab89d4ae2b6b464d))
(assert (! (forall ((@x0py1091 Term)) (! (HasType (Prims_Tm_refine_7075614a0e8c0bdbec6de0d0ef7f1280 @x0py1091) Tm_type) :pattern ((HasType (Prims_Tm_refine_7075614a0e8c0bdbec6de0d0ef7f1280 @x0py1091) Tm_type)) )) :named refinement_kinding_Prims_Tm_refine_7075614a0e8c0bdbec6de0d0ef7f1280))
(assert (! (forall ((@x0py1092 Term)) (! (HasType (Prims_Tm_refine_ba523126f67e00e7cd55f0b92f16681d @x0py1092) Tm_type) :pattern ((HasType (Prims_Tm_refine_ba523126f67e00e7cd55f0b92f16681d @x0py1092) Tm_type)) )) :named refinement_kinding_Prims_Tm_refine_ba523126f67e00e7cd55f0b92f16681d))
(assert (! (forall ((@x0py1093 Term)) (! (HasType (Prims_Tm_refine_c16bc1b61f58b349bf6fc1c94dcaf83b @x0py1093) Tm_type) :pattern ((HasType (Prims_Tm_refine_c16bc1b61f58b349bf6fc1c94dcaf83b @x0py1093) Tm_type)) )) :named refinement_kinding_Prims_Tm_refine_c16bc1b61f58b349bf6fc1c94dcaf83b))
(assert (! (forall ((@x0py1094 Term)) (! (HasType (Prims_Tm_refine_f048236b5f8051f83b495ea5eaa6127b @x0py1094) Tm_type) :pattern ((HasType (Prims_Tm_refine_f048236b5f8051f83b495ea5eaa6127b @x0py1094) Tm_type)) )) :named refinement_kinding_Prims_Tm_refine_f048236b5f8051f83b495ea5eaa6127b))
(assert (! (forall ((@u0py346 Fuel)(@x1py1214 Term)) (! (or (is-BoxString @x1py1214) (not (HasTypeFuel @u0py346 @x1py1214 Prims.string))) :pattern ((HasTypeFuel @u0py346 @x1py1214 Prims.string)) )) :named string_inversion))
(assert (! (forall ((@u0py347 FString)) (! (HasType (BoxString @u0py347) Prims.string) :pattern ((BoxString @u0py347)) )) :named string_typing))
(assert (! (forall ((@u0py348 Fuel)(@x1py1215 Term)(@x2py910 Term)(@x3py646 Term)(@x4py464 Term)(@x5py367 Term)(@x6py264 Term)) (! (or (Valid (Prims.precedes Prims.lex_t Prims.lex_t @x2py910 (False.CalcRefl @x1py1215 @x2py910))) (not (HasTypeFuel (SFuel @u0py348) (False.CalcRefl @x1py1215 @x2py910) (False.calc_proof @x3py646 @x4py464 @x5py367 @x6py264)))) :pattern ((HasTypeFuel (SFuel @u0py348) (False.CalcRefl @x1py1215 @x2py910) (False.calc_proof @x3py646 @x4py464 @x5py367 @x6py264))) )) :named subterm_ordering_False.CalcRefl))
(assert (! (forall ((@u0py349 Fuel)(@x1py1216 Term)(@x2py911 Term)(@x3py647 Term)(@x4py465 Term)(@x5py368 Term)(@x6py265 Term)(@x7py210 Term)(@x8py140 Term)(@x9py101 Term)(@x10py64 Term)(@x11py61 Term)(@x12py47 Term)) (! (or (not (HasTypeFuel (SFuel @u0py349) (False.CalcStep @x1py1216 @x2py911 @x3py647 @x4py465 @x5py368 @x6py265 @x7py210 @x8py140) (False.calc_proof @x9py101 @x10py64 @x11py61 @x12py47))) (and (Valid (Prims.precedes Prims.lex_t Prims.lex_t @x2py911 (False.CalcStep @x1py1216 @x2py911 @x3py647 @x4py465 @x5py368 @x6py265 @x7py210 @x8py140))) (Valid (Prims.precedes Prims.lex_t Prims.lex_t @x3py647 (False.CalcStep @x1py1216 @x2py911 @x3py647 @x4py465 @x5py368 @x6py265 @x7py210 @x8py140))) (Valid (Prims.precedes Prims.lex_t Prims.lex_t @x4py465 (False.CalcStep @x1py1216 @x2py911 @x3py647 @x4py465 @x5py368 @x6py265 @x7py210 @x8py140))) (Valid (Prims.precedes Prims.lex_t Prims.lex_t @x5py368 (False.CalcStep @x1py1216 @x2py911 @x3py647 @x4py465 @x5py368 @x6py265 @x7py210 @x8py140))) (Valid (Prims.precedes Prims.lex_t Prims.lex_t @x6py265 (False.CalcStep @x1py1216 @x2py911 @x3py647 @x4py465 @x5py368 @x6py265 @x7py210 @x8py140))) (Valid (Prims.precedes Prims.lex_t Prims.lex_t @x7py210 (False.CalcStep @x1py1216 @x2py911 @x3py647 @x4py465 @x5py368 @x6py265 @x7py210 @x8py140))) (Valid (Prims.precedes Prims.lex_t Prims.lex_t @x8py140 (False.CalcStep @x1py1216 @x2py911 @x3py647 @x4py465 @x5py368 @x6py265 @x7py210 @x8py140))))) :pattern ((HasTypeFuel (SFuel @u0py349) (False.CalcStep @x1py1216 @x2py911 @x3py647 @x4py465 @x5py368 @x6py265 @x7py210 @x8py140) (False.calc_proof @x9py101 @x10py64 @x11py61 @x12py47))) )) :named subterm_ordering_False.CalcStep))
(assert (! (forall ((@u0py350 Fuel)(@x1py1217 Term)) (! (or (Valid (Prims.precedes Prims.lex_t Prims.lex_t @x1py1217 (FStar.Pervasives.CConst @x1py1217))) (not (HasTypeFuel (SFuel @u0py350) (FStar.Pervasives.CConst @x1py1217) FStar.Pervasives.__internal_ocaml_attributes))) :pattern ((HasTypeFuel (SFuel @u0py350) (FStar.Pervasives.CConst @x1py1217) FStar.Pervasives.__internal_ocaml_attributes)) )) :named subterm_ordering_FStar.Pervasives.CConst))
(assert (! (forall ((@u0py351 Fuel)(@x1py1218 Term)) (! (or (Valid (Prims.precedes Prims.lex_t Prims.lex_t @x1py1218 (FStar.Pervasives.CEpilogue @x1py1218))) (not (HasTypeFuel (SFuel @u0py351) (FStar.Pervasives.CEpilogue @x1py1218) FStar.Pervasives.__internal_ocaml_attributes))) :pattern ((HasTypeFuel (SFuel @u0py351) (FStar.Pervasives.CEpilogue @x1py1218) FStar.Pervasives.__internal_ocaml_attributes)) )) :named subterm_ordering_FStar.Pervasives.CEpilogue))
(assert (! (forall ((@u0py352 Fuel)(@x1py1219 Term)) (! (or (Valid (Prims.precedes Prims.lex_t Prims.lex_t @x1py1219 (FStar.Pervasives.Comment @x1py1219))) (not (HasTypeFuel (SFuel @u0py352) (FStar.Pervasives.Comment @x1py1219) FStar.Pervasives.__internal_ocaml_attributes))) :pattern ((HasTypeFuel (SFuel @u0py352) (FStar.Pervasives.Comment @x1py1219) FStar.Pervasives.__internal_ocaml_attributes)) )) :named subterm_ordering_FStar.Pervasives.Comment))
(assert (! (forall ((@u0py353 Fuel)(@x1py1220 Term)) (! (or (Valid (Prims.precedes Prims.lex_t Prims.lex_t @x1py1220 (FStar.Pervasives.CPrologue @x1py1220))) (not (HasTypeFuel (SFuel @u0py353) (FStar.Pervasives.CPrologue @x1py1220) FStar.Pervasives.__internal_ocaml_attributes))) :pattern ((HasTypeFuel (SFuel @u0py353) (FStar.Pervasives.CPrologue @x1py1220) FStar.Pervasives.__internal_ocaml_attributes)) )) :named subterm_ordering_FStar.Pervasives.CPrologue))
(assert (! (forall ((@u0py354 Fuel)(@x1py1221 Term)(@x2py912 Term)(@x3py648 Term)) (! (or (Valid (Prims.precedes Prims.lex_t Prims.lex_t @x2py912 (FStar.Pervasives.E @x1py1221 @x2py912))) (not (HasTypeFuel (SFuel @u0py354) (FStar.Pervasives.E @x1py1221 @x2py912) (FStar.Pervasives.result @x3py648)))) :pattern ((HasTypeFuel (SFuel @u0py354) (FStar.Pervasives.E @x1py1221 @x2py912) (FStar.Pervasives.result @x3py648))) )) :named subterm_ordering_FStar.Pervasives.E))
(assert (! (forall ((@u0py355 Fuel)(@x1py1222 Term)(@x2py913 Term)(@x3py649 Term)) (! (or (Valid (Prims.precedes Prims.lex_t Prims.lex_t @x2py913 (FStar.Pervasives.Err @x1py1222 @x2py913))) (not (HasTypeFuel (SFuel @u0py355) (FStar.Pervasives.Err @x1py1222 @x2py913) (FStar.Pervasives.result @x3py649)))) :pattern ((HasTypeFuel (SFuel @u0py355) (FStar.Pervasives.Err @x1py1222 @x2py913) (FStar.Pervasives.result @x3py649))) )) :named subterm_ordering_FStar.Pervasives.Err))
(assert (! (forall ((@u0py356 Fuel)(@x1py1223 Term)(@x2py914 Term)(@x3py650 Term)(@x4py466 Term)(@x5py369 Term)) (! (or (Valid (Prims.precedes Prims.lex_t Prims.lex_t @x3py650 (FStar.Pervasives.Inl @x1py1223 @x2py914 @x3py650))) (not (HasTypeFuel (SFuel @u0py356) (FStar.Pervasives.Inl @x1py1223 @x2py914 @x3py650) (FStar.Pervasives.either @x4py466 @x5py369)))) :pattern ((HasTypeFuel (SFuel @u0py356) (FStar.Pervasives.Inl @x1py1223 @x2py914 @x3py650) (FStar.Pervasives.either @x4py466 @x5py369))) )) :named subterm_ordering_FStar.Pervasives.Inl))
(assert (! (forall ((@u0py357 Fuel)(@x1py1224 Term)(@x2py915 Term)(@x3py651 Term)(@x4py467 Term)(@x5py370 Term)) (! (or (Valid (Prims.precedes Prims.lex_t Prims.lex_t @x3py651 (FStar.Pervasives.Inr @x1py1224 @x2py915 @x3py651))) (not (HasTypeFuel (SFuel @u0py357) (FStar.Pervasives.Inr @x1py1224 @x2py915 @x3py651) (FStar.Pervasives.either @x4py467 @x5py370)))) :pattern ((HasTypeFuel (SFuel @u0py357) (FStar.Pervasives.Inr @x1py1224 @x2py915 @x3py651) (FStar.Pervasives.either @x4py467 @x5py370))) )) :named subterm_ordering_FStar.Pervasives.Inr))
(assert (! (forall ((@u0py358 Fuel)(@x1py1225 Term)(@x2py916 Term)(@x3py652 Term)(@x4py468 Term)(@x5py371 Term)(@x6py266 Term)(@x7py211 Term)(@x8py141 Term)(@x9py102 Term)) (! (or (not (HasTypeFuel (SFuel @u0py358) (FStar.Pervasives.Mkdtuple3 @x1py1225 @x2py916 @x3py652 @x4py468 @x5py371 @x6py266) (FStar.Pervasives.dtuple3 @x7py211 @x8py141 @x9py102))) (and (Valid (Prims.precedes Prims.lex_t Prims.lex_t @x4py468 (FStar.Pervasives.Mkdtuple3 @x1py1225 @x2py916 @x3py652 @x4py468 @x5py371 @x6py266))) (Valid (Prims.precedes Prims.lex_t Prims.lex_t @x5py371 (FStar.Pervasives.Mkdtuple3 @x1py1225 @x2py916 @x3py652 @x4py468 @x5py371 @x6py266))) (Valid (Prims.precedes Prims.lex_t Prims.lex_t @x6py266 (FStar.Pervasives.Mkdtuple3 @x1py1225 @x2py916 @x3py652 @x4py468 @x5py371 @x6py266))))) :pattern ((HasTypeFuel (SFuel @u0py358) (FStar.Pervasives.Mkdtuple3 @x1py1225 @x2py916 @x3py652 @x4py468 @x5py371 @x6py266) (FStar.Pervasives.dtuple3 @x7py211 @x8py141 @x9py102))) )) :named subterm_ordering_FStar.Pervasives.Mkdtuple3))
(assert (! (forall ((@u0py359 Fuel)(@x1py1226 Term)(@x2py917 Term)(@x3py653 Term)(@x4py469 Term)(@x5py372 Term)(@x6py267 Term)(@x7py212 Term)(@x8py142 Term)(@x9py103 Term)(@x10py65 Term)(@x11py62 Term)(@x12py48 Term)) (! (or (not (HasTypeFuel (SFuel @u0py359) (FStar.Pervasives.Mkdtuple4 @x1py1226 @x2py917 @x3py653 @x4py469 @x5py372 @x6py267 @x7py212 @x8py142) (FStar.Pervasives.dtuple4 @x9py103 @x10py65 @x11py62 @x12py48))) (and (Valid (Prims.precedes Prims.lex_t Prims.lex_t @x5py372 (FStar.Pervasives.Mkdtuple4 @x1py1226 @x2py917 @x3py653 @x4py469 @x5py372 @x6py267 @x7py212 @x8py142))) (Valid (Prims.precedes Prims.lex_t Prims.lex_t @x6py267 (FStar.Pervasives.Mkdtuple4 @x1py1226 @x2py917 @x3py653 @x4py469 @x5py372 @x6py267 @x7py212 @x8py142))) (Valid (Prims.precedes Prims.lex_t Prims.lex_t @x7py212 (FStar.Pervasives.Mkdtuple4 @x1py1226 @x2py917 @x3py653 @x4py469 @x5py372 @x6py267 @x7py212 @x8py142))) (Valid (Prims.precedes Prims.lex_t Prims.lex_t @x8py142 (FStar.Pervasives.Mkdtuple4 @x1py1226 @x2py917 @x3py653 @x4py469 @x5py372 @x6py267 @x7py212 @x8py142))))) :pattern ((HasTypeFuel (SFuel @u0py359) (FStar.Pervasives.Mkdtuple4 @x1py1226 @x2py917 @x3py653 @x4py469 @x5py372 @x6py267 @x7py212 @x8py142) (FStar.Pervasives.dtuple4 @x9py103 @x10py65 @x11py62 @x12py48))) )) :named subterm_ordering_FStar.Pervasives.Mkdtuple4))
(assert (! (forall ((@u0py360 Fuel)(@x1py1227 Term)(@x2py918 Term)(@x3py654 Term)(@x4py470 Term)(@x5py373 Term)(@x6py268 Term)) (! (or (not (HasTypeFuel (SFuel @u0py360) (FStar.Pervasives.Native.Mktuple2 @x1py1227 @x2py918 @x3py654 @x4py470) (FStar.Pervasives.Native.tuple2 @x5py373 @x6py268))) (and (Valid (Prims.precedes Prims.lex_t Prims.lex_t @x3py654 (FStar.Pervasives.Native.Mktuple2 @x1py1227 @x2py918 @x3py654 @x4py470))) (Valid (Prims.precedes Prims.lex_t Prims.lex_t @x4py470 (FStar.Pervasives.Native.Mktuple2 @x1py1227 @x2py918 @x3py654 @x4py470))))) :pattern ((HasTypeFuel (SFuel @u0py360) (FStar.Pervasives.Native.Mktuple2 @x1py1227 @x2py918 @x3py654 @x4py470) (FStar.Pervasives.Native.tuple2 @x5py373 @x6py268))) )) :named subterm_ordering_FStar.Pervasives.Native.Mktuple2))
(assert (! (forall ((@u0py361 Fuel)(@x1py1228 Term)(@x2py919 Term)(@x3py655 Term)(@x4py471 Term)(@x5py374 Term)(@x6py269 Term)(@x7py213 Term)(@x8py143 Term)(@x9py104 Term)) (! (or (not (HasTypeFuel (SFuel @u0py361) (FStar.Pervasives.Native.Mktuple3 @x1py1228 @x2py919 @x3py655 @x4py471 @x5py374 @x6py269) (FStar.Pervasives.Native.tuple3 @x7py213 @x8py143 @x9py104))) (and (Valid (Prims.precedes Prims.lex_t Prims.lex_t @x4py471 (FStar.Pervasives.Native.Mktuple3 @x1py1228 @x2py919 @x3py655 @x4py471 @x5py374 @x6py269))) (Valid (Prims.precedes Prims.lex_t Prims.lex_t @x5py374 (FStar.Pervasives.Native.Mktuple3 @x1py1228 @x2py919 @x3py655 @x4py471 @x5py374 @x6py269))) (Valid (Prims.precedes Prims.lex_t Prims.lex_t @x6py269 (FStar.Pervasives.Native.Mktuple3 @x1py1228 @x2py919 @x3py655 @x4py471 @x5py374 @x6py269))))) :pattern ((HasTypeFuel (SFuel @u0py361) (FStar.Pervasives.Native.Mktuple3 @x1py1228 @x2py919 @x3py655 @x4py471 @x5py374 @x6py269) (FStar.Pervasives.Native.tuple3 @x7py213 @x8py143 @x9py104))) )) :named subterm_ordering_FStar.Pervasives.Native.Mktuple3))
(assert (! (forall ((@u0py362 Fuel)(@x1py1229 Term)(@x2py920 Term)(@x3py656 Term)(@x4py472 Term)(@x5py375 Term)(@x6py270 Term)(@x7py214 Term)(@x8py144 Term)(@x9py105 Term)(@x10py66 Term)(@x11py63 Term)(@x12py49 Term)) (! (or (not (HasTypeFuel (SFuel @u0py362) (FStar.Pervasives.Native.Mktuple4 @x1py1229 @x2py920 @x3py656 @x4py472 @x5py375 @x6py270 @x7py214 @x8py144) (FStar.Pervasives.Native.tuple4 @x9py105 @x10py66 @x11py63 @x12py49))) (and (Valid (Prims.precedes Prims.lex_t Prims.lex_t @x5py375 (FStar.Pervasives.Native.Mktuple4 @x1py1229 @x2py920 @x3py656 @x4py472 @x5py375 @x6py270 @x7py214 @x8py144))) (Valid (Prims.precedes Prims.lex_t Prims.lex_t @x6py270 (FStar.Pervasives.Native.Mktuple4 @x1py1229 @x2py920 @x3py656 @x4py472 @x5py375 @x6py270 @x7py214 @x8py144))) (Valid (Prims.precedes Prims.lex_t Prims.lex_t @x7py214 (FStar.Pervasives.Native.Mktuple4 @x1py1229 @x2py920 @x3py656 @x4py472 @x5py375 @x6py270 @x7py214 @x8py144))) (Valid (Prims.precedes Prims.lex_t Prims.lex_t @x8py144 (FStar.Pervasives.Native.Mktuple4 @x1py1229 @x2py920 @x3py656 @x4py472 @x5py375 @x6py270 @x7py214 @x8py144))))) :pattern ((HasTypeFuel (SFuel @u0py362) (FStar.Pervasives.Native.Mktuple4 @x1py1229 @x2py920 @x3py656 @x4py472 @x5py375 @x6py270 @x7py214 @x8py144) (FStar.Pervasives.Native.tuple4 @x9py105 @x10py66 @x11py63 @x12py49))) )) :named subterm_ordering_FStar.Pervasives.Native.Mktuple4))
(assert (! (forall ((@u0py363 Fuel)(@x1py1230 Term)(@x2py921 Term)(@x3py657 Term)(@x4py473 Term)(@x5py376 Term)(@x6py271 Term)(@x7py215 Term)(@x8py145 Term)(@x9py106 Term)(@x10py67 Term)(@x11py64 Term)(@x12py50 Term)(@x13py42 Term)(@x14py26 Term)(@x15py24 Term)) (! (or (not (HasTypeFuel (SFuel @u0py363) (FStar.Pervasives.Native.Mktuple5 @x1py1230 @x2py921 @x3py657 @x4py473 @x5py376 @x6py271 @x7py215 @x8py145 @x9py106 @x10py67) (FStar.Pervasives.Native.tuple5 @x11py64 @x12py50 @x13py42 @x14py26 @x15py24))) (and (Valid (Prims.precedes Prims.lex_t Prims.lex_t @x6py271 (FStar.Pervasives.Native.Mktuple5 @x1py1230 @x2py921 @x3py657 @x4py473 @x5py376 @x6py271 @x7py215 @x8py145 @x9py106 @x10py67))) (Valid (Prims.precedes Prims.lex_t Prims.lex_t @x7py215 (FStar.Pervasives.Native.Mktuple5 @x1py1230 @x2py921 @x3py657 @x4py473 @x5py376 @x6py271 @x7py215 @x8py145 @x9py106 @x10py67))) (Valid (Prims.precedes Prims.lex_t Prims.lex_t @x8py145 (FStar.Pervasives.Native.Mktuple5 @x1py1230 @x2py921 @x3py657 @x4py473 @x5py376 @x6py271 @x7py215 @x8py145 @x9py106 @x10py67))) (Valid (Prims.precedes Prims.lex_t Prims.lex_t @x9py106 (FStar.Pervasives.Native.Mktuple5 @x1py1230 @x2py921 @x3py657 @x4py473 @x5py376 @x6py271 @x7py215 @x8py145 @x9py106 @x10py67))) (Valid (Prims.precedes Prims.lex_t Prims.lex_t @x10py67 (FStar.Pervasives.Native.Mktuple5 @x1py1230 @x2py921 @x3py657 @x4py473 @x5py376 @x6py271 @x7py215 @x8py145 @x9py106 @x10py67))))) :pattern ((HasTypeFuel (SFuel @u0py363) (FStar.Pervasives.Native.Mktuple5 @x1py1230 @x2py921 @x3py657 @x4py473 @x5py376 @x6py271 @x7py215 @x8py145 @x9py106 @x10py67) (FStar.Pervasives.Native.tuple5 @x11py64 @x12py50 @x13py42 @x14py26 @x15py24))) )) :named subterm_ordering_FStar.Pervasives.Native.Mktuple5))
(assert (! (forall ((@u0py364 Fuel)(@x1py1231 Term)(@x2py922 Term)(@x3py658 Term)(@x4py474 Term)(@x5py377 Term)(@x6py272 Term)(@x7py216 Term)(@x8py146 Term)(@x9py107 Term)(@x10py68 Term)(@x11py65 Term)(@x12py51 Term)(@x13py43 Term)(@x14py27 Term)(@x15py25 Term)(@x16py5 Term)(@x17py3 Term)(@x18py3 Term)) (! (or (not (HasTypeFuel (SFuel @u0py364) (FStar.Pervasives.Native.Mktuple6 @x1py1231 @x2py922 @x3py658 @x4py474 @x5py377 @x6py272 @x7py216 @x8py146 @x9py107 @x10py68 @x11py65 @x12py51) (FStar.Pervasives.Native.tuple6 @x13py43 @x14py27 @x15py25 @x16py5 @x17py3 @x18py3))) (and (Valid (Prims.precedes Prims.lex_t Prims.lex_t @x7py216 (FStar.Pervasives.Native.Mktuple6 @x1py1231 @x2py922 @x3py658 @x4py474 @x5py377 @x6py272 @x7py216 @x8py146 @x9py107 @x10py68 @x11py65 @x12py51))) (Valid (Prims.precedes Prims.lex_t Prims.lex_t @x8py146 (FStar.Pervasives.Native.Mktuple6 @x1py1231 @x2py922 @x3py658 @x4py474 @x5py377 @x6py272 @x7py216 @x8py146 @x9py107 @x10py68 @x11py65 @x12py51))) (Valid (Prims.precedes Prims.lex_t Prims.lex_t @x9py107 (FStar.Pervasives.Native.Mktuple6 @x1py1231 @x2py922 @x3py658 @x4py474 @x5py377 @x6py272 @x7py216 @x8py146 @x9py107 @x10py68 @x11py65 @x12py51))) (Valid (Prims.precedes Prims.lex_t Prims.lex_t @x10py68 (FStar.Pervasives.Native.Mktuple6 @x1py1231 @x2py922 @x3py658 @x4py474 @x5py377 @x6py272 @x7py216 @x8py146 @x9py107 @x10py68 @x11py65 @x12py51))) (Valid (Prims.precedes Prims.lex_t Prims.lex_t @x11py65 (FStar.Pervasives.Native.Mktuple6 @x1py1231 @x2py922 @x3py658 @x4py474 @x5py377 @x6py272 @x7py216 @x8py146 @x9py107 @x10py68 @x11py65 @x12py51))) (Valid (Prims.precedes Prims.lex_t Prims.lex_t @x12py51 (FStar.Pervasives.Native.Mktuple6 @x1py1231 @x2py922 @x3py658 @x4py474 @x5py377 @x6py272 @x7py216 @x8py146 @x9py107 @x10py68 @x11py65 @x12py51))))) :pattern ((HasTypeFuel (SFuel @u0py364) (FStar.Pervasives.Native.Mktuple6 @x1py1231 @x2py922 @x3py658 @x4py474 @x5py377 @x6py272 @x7py216 @x8py146 @x9py107 @x10py68 @x11py65 @x12py51) (FStar.Pervasives.Native.tuple6 @x13py43 @x14py27 @x15py25 @x16py5 @x17py3 @x18py3))) )) :named subterm_ordering_FStar.Pervasives.Native.Mktuple6))
(assert (! (forall ((@u0py365 Fuel)(@x1py1232 Term)(@x2py923 Term)(@x3py659 Term)(@x4py475 Term)(@x5py378 Term)(@x6py273 Term)(@x7py217 Term)(@x8py147 Term)(@x9py108 Term)(@x10py69 Term)(@x11py66 Term)(@x12py52 Term)(@x13py44 Term)(@x14py28 Term)(@x15py26 Term)(@x16py6 Term)(@x17py4 Term)(@x18py4 Term)(@x19py2 Term)(@x20py2 Term)(@x21py2 Term)) (! (or (not (HasTypeFuel (SFuel @u0py365) (FStar.Pervasives.Native.Mktuple7 @x1py1232 @x2py923 @x3py659 @x4py475 @x5py378 @x6py273 @x7py217 @x8py147 @x9py108 @x10py69 @x11py66 @x12py52 @x13py44 @x14py28) (FStar.Pervasives.Native.tuple7 @x15py26 @x16py6 @x17py4 @x18py4 @x19py2 @x20py2 @x21py2))) (and (Valid (Prims.precedes Prims.lex_t Prims.lex_t @x8py147 (FStar.Pervasives.Native.Mktuple7 @x1py1232 @x2py923 @x3py659 @x4py475 @x5py378 @x6py273 @x7py217 @x8py147 @x9py108 @x10py69 @x11py66 @x12py52 @x13py44 @x14py28))) (Valid (Prims.precedes Prims.lex_t Prims.lex_t @x9py108 (FStar.Pervasives.Native.Mktuple7 @x1py1232 @x2py923 @x3py659 @x4py475 @x5py378 @x6py273 @x7py217 @x8py147 @x9py108 @x10py69 @x11py66 @x12py52 @x13py44 @x14py28))) (Valid (Prims.precedes Prims.lex_t Prims.lex_t @x10py69 (FStar.Pervasives.Native.Mktuple7 @x1py1232 @x2py923 @x3py659 @x4py475 @x5py378 @x6py273 @x7py217 @x8py147 @x9py108 @x10py69 @x11py66 @x12py52 @x13py44 @x14py28))) (Valid (Prims.precedes Prims.lex_t Prims.lex_t @x11py66 (FStar.Pervasives.Native.Mktuple7 @x1py1232 @x2py923 @x3py659 @x4py475 @x5py378 @x6py273 @x7py217 @x8py147 @x9py108 @x10py69 @x11py66 @x12py52 @x13py44 @x14py28))) (Valid (Prims.precedes Prims.lex_t Prims.lex_t @x12py52 (FStar.Pervasives.Native.Mktuple7 @x1py1232 @x2py923 @x3py659 @x4py475 @x5py378 @x6py273 @x7py217 @x8py147 @x9py108 @x10py69 @x11py66 @x12py52 @x13py44 @x14py28))) (Valid (Prims.precedes Prims.lex_t Prims.lex_t @x13py44 (FStar.Pervasives.Native.Mktuple7 @x1py1232 @x2py923 @x3py659 @x4py475 @x5py378 @x6py273 @x7py217 @x8py147 @x9py108 @x10py69 @x11py66 @x12py52 @x13py44 @x14py28))) (Valid (Prims.precedes Prims.lex_t Prims.lex_t @x14py28 (FStar.Pervasives.Native.Mktuple7 @x1py1232 @x2py923 @x3py659 @x4py475 @x5py378 @x6py273 @x7py217 @x8py147 @x9py108 @x10py69 @x11py66 @x12py52 @x13py44 @x14py28))))) :pattern ((HasTypeFuel (SFuel @u0py365) (FStar.Pervasives.Native.Mktuple7 @x1py1232 @x2py923 @x3py659 @x4py475 @x5py378 @x6py273 @x7py217 @x8py147 @x9py108 @x10py69 @x11py66 @x12py52 @x13py44 @x14py28) (FStar.Pervasives.Native.tuple7 @x15py26 @x16py6 @x17py4 @x18py4 @x19py2 @x20py2 @x21py2))) )) :named subterm_ordering_FStar.Pervasives.Native.Mktuple7))
(assert (! (forall ((@u0py366 Fuel)(@x1py1233 Term)(@x2py924 Term)(@x3py660 Term)(@x4py476 Term)(@x5py379 Term)(@x6py274 Term)(@x7py218 Term)(@x8py148 Term)(@x9py109 Term)(@x10py70 Term)(@x11py67 Term)(@x12py53 Term)(@x13py45 Term)(@x14py29 Term)(@x15py27 Term)(@x16py7 Term)(@x17py5 Term)(@x18py5 Term)(@x19py3 Term)(@x20py3 Term)(@x21py3 Term)(@x22py1 Term)(@x23py1 Term)(@x24py1 Term)) (! (or (not (HasTypeFuel (SFuel @u0py366) (FStar.Pervasives.Native.Mktuple8 @x1py1233 @x2py924 @x3py660 @x4py476 @x5py379 @x6py274 @x7py218 @x8py148 @x9py109 @x10py70 @x11py67 @x12py53 @x13py45 @x14py29 @x15py27 @x16py7) (FStar.Pervasives.Native.tuple8 @x17py5 @x18py5 @x19py3 @x20py3 @x21py3 @x22py1 @x23py1 @x24py1))) (and (Valid (Prims.precedes Prims.lex_t Prims.lex_t @x9py109 (FStar.Pervasives.Native.Mktuple8 @x1py1233 @x2py924 @x3py660 @x4py476 @x5py379 @x6py274 @x7py218 @x8py148 @x9py109 @x10py70 @x11py67 @x12py53 @x13py45 @x14py29 @x15py27 @x16py7))) (Valid (Prims.precedes Prims.lex_t Prims.lex_t @x10py70 (FStar.Pervasives.Native.Mktuple8 @x1py1233 @x2py924 @x3py660 @x4py476 @x5py379 @x6py274 @x7py218 @x8py148 @x9py109 @x10py70 @x11py67 @x12py53 @x13py45 @x14py29 @x15py27 @x16py7))) (Valid (Prims.precedes Prims.lex_t Prims.lex_t @x11py67 (FStar.Pervasives.Native.Mktuple8 @x1py1233 @x2py924 @x3py660 @x4py476 @x5py379 @x6py274 @x7py218 @x8py148 @x9py109 @x10py70 @x11py67 @x12py53 @x13py45 @x14py29 @x15py27 @x16py7))) (Valid (Prims.precedes Prims.lex_t Prims.lex_t @x12py53 (FStar.Pervasives.Native.Mktuple8 @x1py1233 @x2py924 @x3py660 @x4py476 @x5py379 @x6py274 @x7py218 @x8py148 @x9py109 @x10py70 @x11py67 @x12py53 @x13py45 @x14py29 @x15py27 @x16py7))) (Valid (Prims.precedes Prims.lex_t Prims.lex_t @x13py45 (FStar.Pervasives.Native.Mktuple8 @x1py1233 @x2py924 @x3py660 @x4py476 @x5py379 @x6py274 @x7py218 @x8py148 @x9py109 @x10py70 @x11py67 @x12py53 @x13py45 @x14py29 @x15py27 @x16py7))) (Valid (Prims.precedes Prims.lex_t Prims.lex_t @x14py29 (FStar.Pervasives.Native.Mktuple8 @x1py1233 @x2py924 @x3py660 @x4py476 @x5py379 @x6py274 @x7py218 @x8py148 @x9py109 @x10py70 @x11py67 @x12py53 @x13py45 @x14py29 @x15py27 @x16py7))) (Valid (Prims.precedes Prims.lex_t Prims.lex_t @x15py27 (FStar.Pervasives.Native.Mktuple8 @x1py1233 @x2py924 @x3py660 @x4py476 @x5py379 @x6py274 @x7py218 @x8py148 @x9py109 @x10py70 @x11py67 @x12py53 @x13py45 @x14py29 @x15py27 @x16py7))) (Valid (Prims.precedes Prims.lex_t Prims.lex_t @x16py7 (FStar.Pervasives.Native.Mktuple8 @x1py1233 @x2py924 @x3py660 @x4py476 @x5py379 @x6py274 @x7py218 @x8py148 @x9py109 @x10py70 @x11py67 @x12py53 @x13py45 @x14py29 @x15py27 @x16py7))))) :pattern ((HasTypeFuel (SFuel @u0py366) (FStar.Pervasives.Native.Mktuple8 @x1py1233 @x2py924 @x3py660 @x4py476 @x5py379 @x6py274 @x7py218 @x8py148 @x9py109 @x10py70 @x11py67 @x12py53 @x13py45 @x14py29 @x15py27 @x16py7) (FStar.Pervasives.Native.tuple8 @x17py5 @x18py5 @x19py3 @x20py3 @x21py3 @x22py1 @x23py1 @x24py1))) )) :named subterm_ordering_FStar.Pervasives.Native.Mktuple8))
(assert (! (forall ((@u0py367 Fuel)(@x1py1234 Term)(@x2py925 Term)(@x3py661 Term)) (! (or (Valid (Prims.precedes Prims.lex_t Prims.lex_t @x2py925 (FStar.Pervasives.Native.Some @x1py1234 @x2py925))) (not (HasTypeFuel (SFuel @u0py367) (FStar.Pervasives.Native.Some @x1py1234 @x2py925) (FStar.Pervasives.Native.option @x3py661)))) :pattern ((HasTypeFuel (SFuel @u0py367) (FStar.Pervasives.Native.Some @x1py1234 @x2py925) (FStar.Pervasives.Native.option @x3py661))) )) :named subterm_ordering_FStar.Pervasives.Native.Some))
(assert (! (forall ((@u0py368 Fuel)(@x1py1235 Term)) (! (or (Valid (Prims.precedes Prims.lex_t Prims.lex_t @x1py1235 (FStar.Pervasives.PpxDerivingShowConstant @x1py1235))) (not (HasTypeFuel (SFuel @u0py368) (FStar.Pervasives.PpxDerivingShowConstant @x1py1235) FStar.Pervasives.__internal_ocaml_attributes))) :pattern ((HasTypeFuel (SFuel @u0py368) (FStar.Pervasives.PpxDerivingShowConstant @x1py1235) FStar.Pervasives.__internal_ocaml_attributes)) )) :named subterm_ordering_FStar.Pervasives.PpxDerivingShowConstant))
(assert (! (forall ((@u0py369 Fuel)(@x1py1236 Term)(@x2py926 Term)(@x3py662 Term)) (! (or (Valid (Prims.precedes Prims.lex_t Prims.lex_t @x2py926 (FStar.Pervasives.V @x1py1236 @x2py926))) (not (HasTypeFuel (SFuel @u0py369) (FStar.Pervasives.V @x1py1236 @x2py926) (FStar.Pervasives.result @x3py662)))) :pattern ((HasTypeFuel (SFuel @u0py369) (FStar.Pervasives.V @x1py1236 @x2py926) (FStar.Pervasives.result @x3py662))) )) :named subterm_ordering_FStar.Pervasives.V))
(assert (! (forall ((@u0py370 Fuel)(@x1py1237 Term)(@x2py927 Term)(@x3py663 Term)(@x4py477 Term)(@x5py380 Term)(@x6py275 Term)) (! (or (not (HasTypeFuel (SFuel @u0py370) (Prims.And @x1py1237 @x2py927 @x3py663 @x4py477) (Prims.c_and @x5py380 @x6py275))) (and (Valid (Prims.precedes Prims.lex_t Prims.lex_t @x3py663 (Prims.And @x1py1237 @x2py927 @x3py663 @x4py477))) (Valid (Prims.precedes Prims.lex_t Prims.lex_t @x4py477 (Prims.And @x1py1237 @x2py927 @x3py663 @x4py477))))) :pattern ((HasTypeFuel (SFuel @u0py370) (Prims.And @x1py1237 @x2py927 @x3py663 @x4py477) (Prims.c_and @x5py380 @x6py275))) )) :named subterm_ordering_Prims.And))
(assert (! (forall ((@u0py371 Fuel)(@x1py1238 Term)(@x2py928 Term)(@x3py664 Term)(@x4py478 Term)) (! (or (not (HasTypeFuel (SFuel @u0py371) (Prims.Cons @x1py1238 @x2py928 @x3py664) (Prims.list @x4py478))) (and (Valid (Prims.precedes Prims.lex_t Prims.lex_t @x2py928 (Prims.Cons @x1py1238 @x2py928 @x3py664))) (Valid (Prims.precedes Prims.lex_t Prims.lex_t @x3py664 (Prims.Cons @x1py1238 @x2py928 @x3py664))))) :pattern ((HasTypeFuel (SFuel @u0py371) (Prims.Cons @x1py1238 @x2py928 @x3py664) (Prims.list @x4py478))) )) :named subterm_ordering_Prims.Cons))
(assert (! (forall ((@u0py372 Fuel)(@x1py1239 Term)(@x2py929 Term)(@x3py665 Term)(@x4py479 Term)(@x5py381 Term)) (! (or (Valid (Prims.precedes Prims.lex_t Prims.lex_t @x3py665 (Prims.Left @x1py1239 @x2py929 @x3py665))) (not (HasTypeFuel (SFuel @u0py372) (Prims.Left @x1py1239 @x2py929 @x3py665) (Prims.c_or @x4py479 @x5py381)))) :pattern ((HasTypeFuel (SFuel @u0py372) (Prims.Left @x1py1239 @x2py929 @x3py665) (Prims.c_or @x4py479 @x5py381))) )) :named subterm_ordering_Prims.Left))
(assert (! (forall ((@u0py373 Fuel)(@x1py1240 Term)(@x2py930 Term)(@x3py666 Term)(@x4py480 Term)(@x5py382 Term)(@x6py276 Term)) (! (or (not (HasTypeFuel (SFuel @u0py373) (Prims.Mkdtuple2 @x1py1240 @x2py930 @x3py666 @x4py480) (Prims.dtuple2 @x5py382 @x6py276))) (and (Valid (Prims.precedes Prims.lex_t Prims.lex_t @x3py666 (Prims.Mkdtuple2 @x1py1240 @x2py930 @x3py666 @x4py480))) (Valid (Prims.precedes Prims.lex_t Prims.lex_t @x4py480 (Prims.Mkdtuple2 @x1py1240 @x2py930 @x3py666 @x4py480))))) :pattern ((HasTypeFuel (SFuel @u0py373) (Prims.Mkdtuple2 @x1py1240 @x2py930 @x3py666 @x4py480) (Prims.dtuple2 @x5py382 @x6py276))) )) :named subterm_ordering_Prims.Mkdtuple2))
(assert (! (forall ((@u0py374 Fuel)(@x1py1241 Term)(@x2py931 Term)(@x3py667 Term)(@x4py481 Term)(@x5py383 Term)) (! (or (Valid (Prims.precedes Prims.lex_t Prims.lex_t @x3py667 (Prims.Right @x1py1241 @x2py931 @x3py667))) (not (HasTypeFuel (SFuel @u0py374) (Prims.Right @x1py1241 @x2py931 @x3py667) (Prims.c_or @x4py481 @x5py383)))) :pattern ((HasTypeFuel (SFuel @u0py374) (Prims.Right @x1py1241 @x2py931 @x3py667) (Prims.c_or @x4py481 @x5py383))) )) :named subterm_ordering_Prims.Right))
(assert (! (forall ((@x0py1095 Term)(@x1py1242 Term)(@x2py932 Term)(@x3py668 Term)(@x4py482 Term)) (! (= (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT False.__proj__CalcRefl__item__x@tok @x0py1095) @x1py1242) @x2py932) @x3py668) @x4py482) (False.__proj__CalcRefl__item__x @x0py1095 @x1py1242 @x2py932 @x3py668 @x4py482)) :pattern ((ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT False.__proj__CalcRefl__item__x@tok @x0py1095) @x1py1242) @x2py932) @x3py668) @x4py482)) )) :named token_correspondence_False.__proj__CalcRefl__item__x))
(assert (! (forall ((@x0py1096 Term)(@x1py1243 Term)(@x2py933 Term)(@x3py669 Term)(@x4py483 Term)) (! (= (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT False.__proj__CalcStep__item___5@tok @x0py1096) @x1py1243) @x2py933) @x3py669) @x4py483) (False.__proj__CalcStep__item___5 @x0py1096 @x1py1243 @x2py933 @x3py669 @x4py483)) :pattern ((ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT False.__proj__CalcStep__item___5@tok @x0py1096) @x1py1243) @x2py933) @x3py669) @x4py483)) )) :named token_correspondence_False.__proj__CalcStep__item___5))
(assert (! (forall ((@x0py1097 Term)(@x1py1244 Term)(@x2py934 Term)(@x3py670 Term)(@x4py484 Term)) (! (= (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT False.__proj__CalcStep__item___6@tok @x0py1097) @x1py1244) @x2py934) @x3py670) @x4py484) (False.__proj__CalcStep__item___6 @x0py1097 @x1py1244 @x2py934 @x3py670 @x4py484)) :pattern ((ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT False.__proj__CalcStep__item___6@tok @x0py1097) @x1py1244) @x2py934) @x3py670) @x4py484)) )) :named token_correspondence_False.__proj__CalcStep__item___6))
(assert (! (forall ((@x0py1098 Term)(@x1py1245 Term)(@x2py935 Term)(@x3py671 Term)(@x4py485 Term)) (! (= (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT False.__proj__CalcStep__item__p@tok @x0py1098) @x1py1245) @x2py935) @x3py671) @x4py485) (False.__proj__CalcStep__item__p @x0py1098 @x1py1245 @x2py935 @x3py671 @x4py485)) :pattern ((ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT False.__proj__CalcStep__item__p@tok @x0py1098) @x1py1245) @x2py935) @x3py671) @x4py485)) )) :named token_correspondence_False.__proj__CalcStep__item__p))
(assert (! (forall ((@x0py1099 Term)(@x1py1246 Term)(@x2py936 Term)(@x3py672 Term)(@x4py486 Term)) (! (= (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT False.__proj__CalcStep__item__rs@tok @x0py1099) @x1py1246) @x2py936) @x3py672) @x4py486) (False.__proj__CalcStep__item__rs @x0py1099 @x1py1246 @x2py936 @x3py672 @x4py486)) :pattern ((ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT False.__proj__CalcStep__item__rs@tok @x0py1099) @x1py1246) @x2py936) @x3py672) @x4py486)) )) :named token_correspondence_False.__proj__CalcStep__item__rs))
(assert (! (forall ((@x0py1100 Term)(@x1py1247 Term)(@x2py937 Term)(@x3py673 Term)(@x4py487 Term)) (! (= (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT False.__proj__CalcStep__item__x@tok @x0py1100) @x1py1247) @x2py937) @x3py673) @x4py487) (False.__proj__CalcStep__item__x @x0py1100 @x1py1247 @x2py937 @x3py673 @x4py487)) :pattern ((ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT False.__proj__CalcStep__item__x@tok @x0py1100) @x1py1247) @x2py937) @x3py673) @x4py487)) )) :named token_correspondence_False.__proj__CalcStep__item__x))
(assert (! (forall ((@x0py1101 Term)(@x1py1248 Term)(@x2py938 Term)(@x3py674 Term)(@x4py488 Term)) (! (= (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT False.__proj__CalcStep__item__y@tok @x0py1101) @x1py1248) @x2py938) @x3py674) @x4py488) (False.__proj__CalcStep__item__y @x0py1101 @x1py1248 @x2py938 @x3py674 @x4py488)) :pattern ((ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT False.__proj__CalcStep__item__y@tok @x0py1101) @x1py1248) @x2py938) @x3py674) @x4py488)) )) :named token_correspondence_False.__proj__CalcStep__item__y))
(assert (! (forall ((@x0py1102 Term)(@x1py1249 Term)(@x2py939 Term)(@x3py675 Term)(@x4py489 Term)) (! (= (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT False.__proj__CalcStep__item__z@tok @x0py1102) @x1py1249) @x2py939) @x3py675) @x4py489) (False.__proj__CalcStep__item__z @x0py1102 @x1py1249 @x2py939 @x3py675 @x4py489)) :pattern ((ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT False.__proj__CalcStep__item__z@tok @x0py1102) @x1py1249) @x2py939) @x3py675) @x4py489)) )) :named token_correspondence_False.__proj__CalcStep__item__z))
(assert (! (forall ((@x0py1103 Term)(@x1py1250 Term)(@x2py940 Term)(@x3py676 Term)) (! (= (ApplyTT (ApplyTT (ApplyTT (ApplyTT False.calc_proof@tok @x0py1103) @x1py1250) @x2py940) @x3py676) (False.calc_proof @x0py1103 @x1py1250 @x2py940 @x3py676)) :pattern ((ApplyTT (ApplyTT (ApplyTT (ApplyTT False.calc_proof@tok @x0py1103) @x1py1250) @x2py940) @x3py676)) :pattern ((False.calc_proof @x0py1103 @x1py1250 @x2py940 @x3py676)) )) :named token_correspondence_False.calc_proof@tok))
(assert (! (forall ((@x0py1104 Term)(@x1py1251 Term)) (! (= (ApplyTT (ApplyTT False.init@tok @x0py1104) @x1py1251) (False.init @x0py1104 @x1py1251)) :pattern ((ApplyTT (ApplyTT False.init@tok @x0py1104) @x1py1251)) )) :named token_correspondence_False.init))
(assert (! (forall ((@x0py1105 Term)) (! (= (ApplyTT False.preorder@tok @x0py1105) (False.preorder @x0py1105)) :pattern ((ApplyTT False.preorder@tok @x0py1105)) )) :named token_correspondence_False.preorder))
(assert (! (forall ((@x0py1106 Term)) (! (= (ApplyTT False.relation@tok @x0py1106) (False.relation @x0py1106)) :pattern ((ApplyTT False.relation@tok @x0py1106)) )) :named token_correspondence_False.relation))
(assert (! (forall ((@x0py1107 Term)(@x1py1252 Term)(@x2py941 Term)(@x3py677 Term)(@x4py490 Term)(@x5py384 Term)(@x6py277 Term)(@x7py219 Term)) (! (= (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT False.step@tok @x0py1107) @x1py1252) @x2py941) @x3py677) @x4py490) @x5py384) @x6py277) @x7py219) (False.step @x0py1107 @x1py1252 @x2py941 @x3py677 @x4py490 @x5py384 @x6py277 @x7py219)) :pattern ((ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT False.step@tok @x0py1107) @x1py1252) @x2py941) @x3py677) @x4py490) @x5py384) @x6py277) @x7py219)) )) :named token_correspondence_False.step))
(assert (! (forall ((@x0py1108 Term)(@x1py1253 Term)(@x2py942 Term)(@x3py678 Term)(@x4py491 Term)) (! (= (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT False.uu___is_CalcRefl@tok @x0py1108) @x1py1253) @x2py942) @x3py678) @x4py491) (False.uu___is_CalcRefl @x0py1108 @x1py1253 @x2py942 @x3py678 @x4py491)) :pattern ((ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT False.uu___is_CalcRefl@tok @x0py1108) @x1py1253) @x2py942) @x3py678) @x4py491)) )) :named token_correspondence_False.uu___is_CalcRefl))
(assert (! (forall ((@x0py1109 Term)(@x1py1254 Term)(@x2py943 Term)(@x3py679 Term)(@x4py492 Term)) (! (= (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT False.uu___is_CalcStep@tok @x0py1109) @x1py1254) @x2py943) @x3py679) @x4py492) (False.uu___is_CalcStep @x0py1109 @x1py1254 @x2py943 @x3py679 @x4py492)) :pattern ((ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT False.uu___is_CalcStep@tok @x0py1109) @x1py1254) @x2py943) @x3py679) @x4py492)) )) :named token_correspondence_False.uu___is_CalcStep))
(assert (! (forall ((@x0py1110 Term)) (! (= (ApplyTT FStar.Pervasives.__proj__CConst__item___0@tok @x0py1110) (FStar.Pervasives.__proj__CConst__item___0 @x0py1110)) :pattern ((ApplyTT FStar.Pervasives.__proj__CConst__item___0@tok @x0py1110)) )) :named token_correspondence_FStar.Pervasives.__proj__CConst__item___0))
(assert (! (forall ((@x0py1111 Term)) (! (= (ApplyTT FStar.Pervasives.__proj__CEpilogue__item___0@tok @x0py1111) (FStar.Pervasives.__proj__CEpilogue__item___0 @x0py1111)) :pattern ((ApplyTT FStar.Pervasives.__proj__CEpilogue__item___0@tok @x0py1111)) )) :named token_correspondence_FStar.Pervasives.__proj__CEpilogue__item___0))
(assert (! (forall ((@x0py1112 Term)) (! (= (ApplyTT FStar.Pervasives.__proj__Comment__item___0@tok @x0py1112) (FStar.Pervasives.__proj__Comment__item___0 @x0py1112)) :pattern ((ApplyTT FStar.Pervasives.__proj__Comment__item___0@tok @x0py1112)) )) :named token_correspondence_FStar.Pervasives.__proj__Comment__item___0))
(assert (! (forall ((@x0py1113 Term)) (! (= (ApplyTT FStar.Pervasives.__proj__CPrologue__item___0@tok @x0py1113) (FStar.Pervasives.__proj__CPrologue__item___0 @x0py1113)) :pattern ((ApplyTT FStar.Pervasives.__proj__CPrologue__item___0@tok @x0py1113)) )) :named token_correspondence_FStar.Pervasives.__proj__CPrologue__item___0))
(assert (! (forall ((@x0py1114 Term)(@x1py1255 Term)) (! (= (ApplyTT (ApplyTT FStar.Pervasives.__proj__E__item__e@tok @x0py1114) @x1py1255) (FStar.Pervasives.__proj__E__item__e @x0py1114 @x1py1255)) :pattern ((ApplyTT (ApplyTT FStar.Pervasives.__proj__E__item__e@tok @x0py1114) @x1py1255)) )) :named token_correspondence_FStar.Pervasives.__proj__E__item__e))
(assert (! (forall ((@x0py1115 Term)(@x1py1256 Term)) (! (= (ApplyTT (ApplyTT FStar.Pervasives.__proj__Err__item__msg@tok @x0py1115) @x1py1256) (FStar.Pervasives.__proj__Err__item__msg @x0py1115 @x1py1256)) :pattern ((ApplyTT (ApplyTT FStar.Pervasives.__proj__Err__item__msg@tok @x0py1115) @x1py1256)) )) :named token_correspondence_FStar.Pervasives.__proj__Err__item__msg))
(assert (! (forall ((@x0py1116 Term)(@x1py1257 Term)(@x2py944 Term)) (! (= (ApplyTT (ApplyTT (ApplyTT FStar.Pervasives.__proj__Inl__item__v@tok @x0py1116) @x1py1257) @x2py944) (FStar.Pervasives.__proj__Inl__item__v @x0py1116 @x1py1257 @x2py944)) :pattern ((ApplyTT (ApplyTT (ApplyTT FStar.Pervasives.__proj__Inl__item__v@tok @x0py1116) @x1py1257) @x2py944)) )) :named token_correspondence_FStar.Pervasives.__proj__Inl__item__v))
(assert (! (forall ((@x0py1117 Term)(@x1py1258 Term)(@x2py945 Term)) (! (= (ApplyTT (ApplyTT (ApplyTT FStar.Pervasives.__proj__Inr__item__v@tok @x0py1117) @x1py1258) @x2py945) (FStar.Pervasives.__proj__Inr__item__v @x0py1117 @x1py1258 @x2py945)) :pattern ((ApplyTT (ApplyTT (ApplyTT FStar.Pervasives.__proj__Inr__item__v@tok @x0py1117) @x1py1258) @x2py945)) )) :named token_correspondence_FStar.Pervasives.__proj__Inr__item__v))
(assert (! (forall ((@x0py1118 Term)(@x1py1259 Term)(@x2py946 Term)(@x3py680 Term)) (! (= (ApplyTT (ApplyTT (ApplyTT (ApplyTT FStar.Pervasives.__proj__Mkdtuple3__item___1@tok @x0py1118) @x1py1259) @x2py946) @x3py680) (FStar.Pervasives.__proj__Mkdtuple3__item___1 @x0py1118 @x1py1259 @x2py946 @x3py680)) :pattern ((ApplyTT (ApplyTT (ApplyTT (ApplyTT FStar.Pervasives.__proj__Mkdtuple3__item___1@tok @x0py1118) @x1py1259) @x2py946) @x3py680)) )) :named token_correspondence_FStar.Pervasives.__proj__Mkdtuple3__item___1))
(assert (! (forall ((@x0py1119 Term)(@x1py1260 Term)(@x2py947 Term)(@x3py681 Term)) (! (= (ApplyTT (ApplyTT (ApplyTT (ApplyTT FStar.Pervasives.__proj__Mkdtuple3__item___2@tok @x0py1119) @x1py1260) @x2py947) @x3py681) (FStar.Pervasives.__proj__Mkdtuple3__item___2 @x0py1119 @x1py1260 @x2py947 @x3py681)) :pattern ((ApplyTT (ApplyTT (ApplyTT (ApplyTT FStar.Pervasives.__proj__Mkdtuple3__item___2@tok @x0py1119) @x1py1260) @x2py947) @x3py681)) )) :named token_correspondence_FStar.Pervasives.__proj__Mkdtuple3__item___2))
(assert (! (forall ((@x0py1120 Term)(@x1py1261 Term)(@x2py948 Term)(@x3py682 Term)) (! (= (ApplyTT (ApplyTT (ApplyTT (ApplyTT FStar.Pervasives.__proj__Mkdtuple3__item___3@tok @x0py1120) @x1py1261) @x2py948) @x3py682) (FStar.Pervasives.__proj__Mkdtuple3__item___3 @x0py1120 @x1py1261 @x2py948 @x3py682)) :pattern ((ApplyTT (ApplyTT (ApplyTT (ApplyTT FStar.Pervasives.__proj__Mkdtuple3__item___3@tok @x0py1120) @x1py1261) @x2py948) @x3py682)) )) :named token_correspondence_FStar.Pervasives.__proj__Mkdtuple3__item___3))
(assert (! (forall ((@x0py1121 Term)(@x1py1262 Term)(@x2py949 Term)(@x3py683 Term)(@x4py493 Term)) (! (= (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT FStar.Pervasives.__proj__Mkdtuple4__item___1@tok @x0py1121) @x1py1262) @x2py949) @x3py683) @x4py493) (FStar.Pervasives.__proj__Mkdtuple4__item___1 @x0py1121 @x1py1262 @x2py949 @x3py683 @x4py493)) :pattern ((ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT FStar.Pervasives.__proj__Mkdtuple4__item___1@tok @x0py1121) @x1py1262) @x2py949) @x3py683) @x4py493)) )) :named token_correspondence_FStar.Pervasives.__proj__Mkdtuple4__item___1))
(assert (! (forall ((@x0py1122 Term)(@x1py1263 Term)(@x2py950 Term)(@x3py684 Term)(@x4py494 Term)) (! (= (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT FStar.Pervasives.__proj__Mkdtuple4__item___2@tok @x0py1122) @x1py1263) @x2py950) @x3py684) @x4py494) (FStar.Pervasives.__proj__Mkdtuple4__item___2 @x0py1122 @x1py1263 @x2py950 @x3py684 @x4py494)) :pattern ((ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT FStar.Pervasives.__proj__Mkdtuple4__item___2@tok @x0py1122) @x1py1263) @x2py950) @x3py684) @x4py494)) )) :named token_correspondence_FStar.Pervasives.__proj__Mkdtuple4__item___2))
(assert (! (forall ((@x0py1123 Term)(@x1py1264 Term)(@x2py951 Term)(@x3py685 Term)(@x4py495 Term)) (! (= (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT FStar.Pervasives.__proj__Mkdtuple4__item___3@tok @x0py1123) @x1py1264) @x2py951) @x3py685) @x4py495) (FStar.Pervasives.__proj__Mkdtuple4__item___3 @x0py1123 @x1py1264 @x2py951 @x3py685 @x4py495)) :pattern ((ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT FStar.Pervasives.__proj__Mkdtuple4__item___3@tok @x0py1123) @x1py1264) @x2py951) @x3py685) @x4py495)) )) :named token_correspondence_FStar.Pervasives.__proj__Mkdtuple4__item___3))
(assert (! (forall ((@x0py1124 Term)(@x1py1265 Term)(@x2py952 Term)(@x3py686 Term)(@x4py496 Term)) (! (= (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT FStar.Pervasives.__proj__Mkdtuple4__item___4@tok @x0py1124) @x1py1265) @x2py952) @x3py686) @x4py496) (FStar.Pervasives.__proj__Mkdtuple4__item___4 @x0py1124 @x1py1265 @x2py952 @x3py686 @x4py496)) :pattern ((ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT FStar.Pervasives.__proj__Mkdtuple4__item___4@tok @x0py1124) @x1py1265) @x2py952) @x3py686) @x4py496)) )) :named token_correspondence_FStar.Pervasives.__proj__Mkdtuple4__item___4))
(assert (! (forall ((@x0py1125 Term)) (! (= (ApplyTT FStar.Pervasives.__proj__PpxDerivingShowConstant__item___0@tok @x0py1125) (FStar.Pervasives.__proj__PpxDerivingShowConstant__item___0 @x0py1125)) :pattern ((ApplyTT FStar.Pervasives.__proj__PpxDerivingShowConstant__item___0@tok @x0py1125)) )) :named token_correspondence_FStar.Pervasives.__proj__PpxDerivingShowConstant__item___0))
(assert (! (forall ((@x0py1126 Term)(@x1py1266 Term)) (! (= (ApplyTT (ApplyTT FStar.Pervasives.__proj__V__item__v@tok @x0py1126) @x1py1266) (FStar.Pervasives.__proj__V__item__v @x0py1126 @x1py1266)) :pattern ((ApplyTT (ApplyTT FStar.Pervasives.__proj__V__item__v@tok @x0py1126) @x1py1266)) )) :named token_correspondence_FStar.Pervasives.__proj__V__item__v))
(assert (! (forall ((@x0py1127 Term)(@x1py1267 Term)(@x2py953 Term)(@x3py687 Term)(@x4py497 Term)(@x5py385 Term)) (! (= (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT FStar.Pervasives.all_assert_p@tok @x0py1127) @x1py1267) @x2py953) @x3py687) @x4py497) @x5py385) (FStar.Pervasives.all_assert_p @x0py1127 @x1py1267 @x2py953 @x3py687 @x4py497 @x5py385)) :pattern ((ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT FStar.Pervasives.all_assert_p@tok @x0py1127) @x1py1267) @x2py953) @x3py687) @x4py497) @x5py385)) )) :named token_correspondence_FStar.Pervasives.all_assert_p))
(assert (! (forall ((@x0py1128 Term)(@x1py1268 Term)(@x2py954 Term)(@x3py688 Term)(@x4py498 Term)(@x5py386 Term)) (! (= (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT FStar.Pervasives.all_assume_p@tok @x0py1128) @x1py1268) @x2py954) @x3py688) @x4py498) @x5py386) (FStar.Pervasives.all_assume_p @x0py1128 @x1py1268 @x2py954 @x3py688 @x4py498 @x5py386)) :pattern ((ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT FStar.Pervasives.all_assume_p@tok @x0py1128) @x1py1268) @x2py954) @x3py688) @x4py498) @x5py386)) )) :named token_correspondence_FStar.Pervasives.all_assume_p))
(assert (! (forall ((@x0py1129 Term)(@x1py1269 Term)(@x2py955 Term)(@x3py689 Term)(@x4py499 Term)(@x5py387 Term)(@x6py278 Term)(@x7py220 Term)) (! (= (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT FStar.Pervasives.all_bind_wp@tok @x0py1129) @x1py1269) @x2py955) @x3py689) @x4py499) @x5py387) @x6py278) @x7py220) (FStar.Pervasives.all_bind_wp @x0py1129 @x1py1269 @x2py955 @x3py689 @x4py499 @x5py387 @x6py278 @x7py220)) :pattern ((ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT FStar.Pervasives.all_bind_wp@tok @x0py1129) @x1py1269) @x2py955) @x3py689) @x4py499) @x5py387) @x6py278) @x7py220)) )) :named token_correspondence_FStar.Pervasives.all_bind_wp))
(assert (! (forall ((@x0py1130 Term)(@x1py1270 Term)(@x2py956 Term)(@x3py690 Term)(@x4py500 Term)(@x5py388 Term)) (! (= (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT FStar.Pervasives.all_close_wp@tok @x0py1130) @x1py1270) @x2py956) @x3py690) @x4py500) @x5py388) (FStar.Pervasives.all_close_wp @x0py1130 @x1py1270 @x2py956 @x3py690 @x4py500 @x5py388)) :pattern ((ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT FStar.Pervasives.all_close_wp@tok @x0py1130) @x1py1270) @x2py956) @x3py690) @x4py500) @x5py388)) )) :named token_correspondence_FStar.Pervasives.all_close_wp))
(assert (! (forall ((@x0py1131 Term)(@x1py1271 Term)(@x2py957 Term)(@x3py691 Term)(@x4py501 Term)(@x5py389 Term)(@x6py279 Term)) (! (= (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT FStar.Pervasives.all_if_then_else@tok @x0py1131) @x1py1271) @x2py957) @x3py691) @x4py501) @x5py389) @x6py279) (FStar.Pervasives.all_if_then_else @x0py1131 @x1py1271 @x2py957 @x3py691 @x4py501 @x5py389 @x6py279)) :pattern ((ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT FStar.Pervasives.all_if_then_else@tok @x0py1131) @x1py1271) @x2py957) @x3py691) @x4py501) @x5py389) @x6py279)) )) :named token_correspondence_FStar.Pervasives.all_if_then_else))
(assert (! (forall ((@x0py1132 Term)(@x1py1272 Term)(@x2py958 Term)(@x3py692 Term)(@x4py502 Term)) (! (= (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT FStar.Pervasives.all_ite_wp@tok @x0py1132) @x1py1272) @x2py958) @x3py692) @x4py502) (FStar.Pervasives.all_ite_wp @x0py1132 @x1py1272 @x2py958 @x3py692 @x4py502)) :pattern ((ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT FStar.Pervasives.all_ite_wp@tok @x0py1132) @x1py1272) @x2py958) @x3py692) @x4py502)) )) :named token_correspondence_FStar.Pervasives.all_ite_wp))
(assert (! (forall ((@x0py1133 Term)(@x1py1273 Term)(@x2py959 Term)(@x3py693 Term)) (! (= (ApplyTT (ApplyTT (ApplyTT (ApplyTT FStar.Pervasives.all_null_wp@tok @x0py1133) @x1py1273) @x2py959) @x3py693) (FStar.Pervasives.all_null_wp @x0py1133 @x1py1273 @x2py959 @x3py693)) :pattern ((ApplyTT (ApplyTT (ApplyTT (ApplyTT FStar.Pervasives.all_null_wp@tok @x0py1133) @x1py1273) @x2py959) @x3py693)) )) :named token_correspondence_FStar.Pervasives.all_null_wp))
(assert (! (forall ((@x0py1134 Term)(@x1py1274 Term)) (! (= (ApplyTT (ApplyTT FStar.Pervasives.all_post_h@tok @x0py1134) @x1py1274) (FStar.Pervasives.all_post_h @x0py1134 @x1py1274)) :pattern ((ApplyTT (ApplyTT FStar.Pervasives.all_post_h@tok @x0py1134) @x1py1274)) )) :named token_correspondence_FStar.Pervasives.all_post_h))
(assert (! (forall ((@x0py1135 Term)(@x1py1275 Term)(@x2py960 Term)) (! (= (ApplyTT (ApplyTT (ApplyTT FStar.Pervasives.all_post_h_@tok @x0py1135) @x1py1275) @x2py960) (FStar.Pervasives.all_post_h_ @x0py1135 @x1py1275 @x2py960)) :pattern ((ApplyTT (ApplyTT (ApplyTT FStar.Pervasives.all_post_h_@tok @x0py1135) @x1py1275) @x2py960)) )) :named token_correspondence_FStar.Pervasives.all_post_h_))
(assert (! (forall ((@x0py1136 Term)) (! (= (ApplyTT FStar.Pervasives.all_pre_h@tok @x0py1136) (FStar.Pervasives.all_pre_h @x0py1136)) :pattern ((ApplyTT FStar.Pervasives.all_pre_h@tok @x0py1136)) )) :named token_correspondence_FStar.Pervasives.all_pre_h))
(assert (! (forall ((@x0py1137 Term)(@x1py1276 Term)(@x2py961 Term)(@x3py694 Term)) (! (= (ApplyTT (ApplyTT (ApplyTT (ApplyTT FStar.Pervasives.all_return@tok @x0py1137) @x1py1276) @x2py961) @x3py694) (FStar.Pervasives.all_return @x0py1137 @x1py1276 @x2py961 @x3py694)) :pattern ((ApplyTT (ApplyTT (ApplyTT (ApplyTT FStar.Pervasives.all_return@tok @x0py1137) @x1py1276) @x2py961) @x3py694)) )) :named token_correspondence_FStar.Pervasives.all_return))
(assert (! (forall ((@x0py1138 Term)(@x1py1277 Term)(@x2py962 Term)(@x3py695 Term)) (! (= (ApplyTT (ApplyTT (ApplyTT (ApplyTT FStar.Pervasives.all_stronger@tok @x0py1138) @x1py1277) @x2py962) @x3py695) (FStar.Pervasives.all_stronger @x0py1138 @x1py1277 @x2py962 @x3py695)) :pattern ((ApplyTT (ApplyTT (ApplyTT (ApplyTT FStar.Pervasives.all_stronger@tok @x0py1138) @x1py1277) @x2py962) @x3py695)) )) :named token_correspondence_FStar.Pervasives.all_stronger))
(assert (! (forall ((@x0py1139 Term)(@x1py1278 Term)(@x2py963 Term)) (! (= (ApplyTT (ApplyTT (ApplyTT FStar.Pervasives.all_trivial@tok @x0py1139) @x1py1278) @x2py963) (FStar.Pervasives.all_trivial @x0py1139 @x1py1278 @x2py963)) :pattern ((ApplyTT (ApplyTT (ApplyTT FStar.Pervasives.all_trivial@tok @x0py1139) @x1py1278) @x2py963)) )) :named token_correspondence_FStar.Pervasives.all_trivial))
(assert (! (forall ((@x0py1140 Term)(@x1py1279 Term)) (! (= (ApplyTT (ApplyTT FStar.Pervasives.all_wp_h@tok @x0py1140) @x1py1279) (FStar.Pervasives.all_wp_h @x0py1140 @x1py1279)) :pattern ((ApplyTT (ApplyTT FStar.Pervasives.all_wp_h@tok @x0py1140) @x1py1279)) )) :named token_correspondence_FStar.Pervasives.all_wp_h))
(assert (! (forall ((@x0py1141 Term)) (! (= (ApplyTT FStar.Pervasives.allow_inversion@tok @x0py1141) (FStar.Pervasives.allow_inversion @x0py1141)) :pattern ((ApplyTT FStar.Pervasives.allow_inversion@tok @x0py1141)) )) :named token_correspondence_FStar.Pervasives.allow_inversion))
(assert (! (forall ((@x0py1142 Term)) (! (= (ApplyTT FStar.Pervasives.deprecated@tok @x0py1142) (FStar.Pervasives.deprecated @x0py1142)) :pattern ((ApplyTT FStar.Pervasives.deprecated@tok @x0py1142)) )) :named token_correspondence_FStar.Pervasives.deprecated))
(assert (! (forall ((@x0py1143 Term)(@x1py1280 Term)(@x2py964 Term)) (! (= (ApplyTT (ApplyTT (ApplyTT FStar.Pervasives.dfst@tok @x0py1143) @x1py1280) @x2py964) (FStar.Pervasives.dfst @x0py1143 @x1py1280 @x2py964)) :pattern ((ApplyTT (ApplyTT (ApplyTT FStar.Pervasives.dfst@tok @x0py1143) @x1py1280) @x2py964)) )) :named token_correspondence_FStar.Pervasives.dfst))
(assert (! (forall ((@x0py1144 Term)(@x1py1281 Term)(@x2py965 Term)) (! (= (ApplyTT (ApplyTT (ApplyTT FStar.Pervasives.dsnd@tok @x0py1144) @x1py1281) @x2py965) (FStar.Pervasives.dsnd @x0py1144 @x1py1281 @x2py965)) :pattern ((ApplyTT (ApplyTT (ApplyTT FStar.Pervasives.dsnd@tok @x0py1144) @x1py1281) @x2py965)) )) :named token_correspondence_FStar.Pervasives.dsnd))
(assert (! (forall ((@x0py1145 Term)(@x1py1282 Term)(@x2py966 Term)) (! (= (ApplyTT (ApplyTT (ApplyTT FStar.Pervasives.dtuple3@tok @x0py1145) @x1py1282) @x2py966) (FStar.Pervasives.dtuple3 @x0py1145 @x1py1282 @x2py966)) :pattern ((ApplyTT (ApplyTT (ApplyTT FStar.Pervasives.dtuple3@tok @x0py1145) @x1py1282) @x2py966)) :pattern ((FStar.Pervasives.dtuple3 @x0py1145 @x1py1282 @x2py966)) )) :named token_correspondence_FStar.Pervasives.dtuple3@tok))
(assert (! (forall ((@x0py1146 Term)(@x1py1283 Term)(@x2py967 Term)(@x3py696 Term)) (! (= (ApplyTT (ApplyTT (ApplyTT (ApplyTT FStar.Pervasives.dtuple4@tok @x0py1146) @x1py1283) @x2py967) @x3py696) (FStar.Pervasives.dtuple4 @x0py1146 @x1py1283 @x2py967 @x3py696)) :pattern ((ApplyTT (ApplyTT (ApplyTT (ApplyTT FStar.Pervasives.dtuple4@tok @x0py1146) @x1py1283) @x2py967) @x3py696)) :pattern ((FStar.Pervasives.dtuple4 @x0py1146 @x1py1283 @x2py967 @x3py696)) )) :named token_correspondence_FStar.Pervasives.dtuple4@tok))
(assert (! (forall ((@x0py1147 Term)(@x1py1284 Term)) (! (= (ApplyTT (ApplyTT FStar.Pervasives.either@tok @x0py1147) @x1py1284) (FStar.Pervasives.either @x0py1147 @x1py1284)) :pattern ((ApplyTT (ApplyTT FStar.Pervasives.either@tok @x0py1147) @x1py1284)) :pattern ((FStar.Pervasives.either @x0py1147 @x1py1284)) )) :named token_correspondence_FStar.Pervasives.either@tok))
(assert (! (forall ((@x0py1148 Term)(@x1py1285 Term)(@x2py968 Term)(@x3py697 Term)) (! (= (ApplyTT (ApplyTT (ApplyTT (ApplyTT FStar.Pervasives.ex_assert_p@tok @x0py1148) @x1py1285) @x2py968) @x3py697) (FStar.Pervasives.ex_assert_p @x0py1148 @x1py1285 @x2py968 @x3py697)) :pattern ((ApplyTT (ApplyTT (ApplyTT (ApplyTT FStar.Pervasives.ex_assert_p@tok @x0py1148) @x1py1285) @x2py968) @x3py697)) )) :named token_correspondence_FStar.Pervasives.ex_assert_p))
(assert (! (forall ((@x0py1149 Term)(@x1py1286 Term)(@x2py969 Term)(@x3py698 Term)) (! (= (ApplyTT (ApplyTT (ApplyTT (ApplyTT FStar.Pervasives.ex_assume_p@tok @x0py1149) @x1py1286) @x2py969) @x3py698) (FStar.Pervasives.ex_assume_p @x0py1149 @x1py1286 @x2py969 @x3py698)) :pattern ((ApplyTT (ApplyTT (ApplyTT (ApplyTT FStar.Pervasives.ex_assume_p@tok @x0py1149) @x1py1286) @x2py969) @x3py698)) )) :named token_correspondence_FStar.Pervasives.ex_assume_p))
(assert (! (forall ((@x0py1150 Term)(@x1py1287 Term)(@x2py970 Term)(@x3py699 Term)(@x4py503 Term)(@x5py390 Term)) (! (= (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT FStar.Pervasives.ex_bind_wp@tok @x0py1150) @x1py1287) @x2py970) @x3py699) @x4py503) @x5py390) (FStar.Pervasives.ex_bind_wp @x0py1150 @x1py1287 @x2py970 @x3py699 @x4py503 @x5py390)) :pattern ((ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT FStar.Pervasives.ex_bind_wp@tok @x0py1150) @x1py1287) @x2py970) @x3py699) @x4py503) @x5py390)) )) :named token_correspondence_FStar.Pervasives.ex_bind_wp))
(assert (! (forall ((@x0py1151 Term)(@x1py1288 Term)(@x2py971 Term)(@x3py700 Term)) (! (= (ApplyTT (ApplyTT (ApplyTT (ApplyTT FStar.Pervasives.ex_close_wp@tok @x0py1151) @x1py1288) @x2py971) @x3py700) (FStar.Pervasives.ex_close_wp @x0py1151 @x1py1288 @x2py971 @x3py700)) :pattern ((ApplyTT (ApplyTT (ApplyTT (ApplyTT FStar.Pervasives.ex_close_wp@tok @x0py1151) @x1py1288) @x2py971) @x3py700)) )) :named token_correspondence_FStar.Pervasives.ex_close_wp))
(assert (! (forall ((@x0py1152 Term)(@x1py1289 Term)(@x2py972 Term)(@x3py701 Term)(@x4py504 Term)) (! (= (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT FStar.Pervasives.ex_if_then_else@tok @x0py1152) @x1py1289) @x2py972) @x3py701) @x4py504) (FStar.Pervasives.ex_if_then_else @x0py1152 @x1py1289 @x2py972 @x3py701 @x4py504)) :pattern ((ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT FStar.Pervasives.ex_if_then_else@tok @x0py1152) @x1py1289) @x2py972) @x3py701) @x4py504)) )) :named token_correspondence_FStar.Pervasives.ex_if_then_else))
(assert (! (forall ((@x0py1153 Term)(@x1py1290 Term)(@x2py973 Term)) (! (= (ApplyTT (ApplyTT (ApplyTT FStar.Pervasives.ex_ite_wp@tok @x0py1153) @x1py1290) @x2py973) (FStar.Pervasives.ex_ite_wp @x0py1153 @x1py1290 @x2py973)) :pattern ((ApplyTT (ApplyTT (ApplyTT FStar.Pervasives.ex_ite_wp@tok @x0py1153) @x1py1290) @x2py973)) )) :named token_correspondence_FStar.Pervasives.ex_ite_wp))
(assert (! (forall ((@x0py1154 Term)(@x1py1291 Term)) (! (= (ApplyTT (ApplyTT FStar.Pervasives.ex_null_wp@tok @x0py1154) @x1py1291) (FStar.Pervasives.ex_null_wp @x0py1154 @x1py1291)) :pattern ((ApplyTT (ApplyTT FStar.Pervasives.ex_null_wp@tok @x0py1154) @x1py1291)) )) :named token_correspondence_FStar.Pervasives.ex_null_wp))
(assert (! (forall ((@x0py1155 Term)) (! (= (ApplyTT FStar.Pervasives.ex_post@tok @x0py1155) (FStar.Pervasives.ex_post @x0py1155)) :pattern ((ApplyTT FStar.Pervasives.ex_post@tok @x0py1155)) )) :named token_correspondence_FStar.Pervasives.ex_post))
(assert (! (forall ((@x0py1156 Term)(@x1py1292 Term)) (! (= (ApplyTT (ApplyTT FStar.Pervasives.ex_post_@tok @x0py1156) @x1py1292) (FStar.Pervasives.ex_post_ @x0py1156 @x1py1292)) :pattern ((ApplyTT (ApplyTT FStar.Pervasives.ex_post_@tok @x0py1156) @x1py1292)) )) :named token_correspondence_FStar.Pervasives.ex_post_))
(assert (! (forall ((@x0py1157 Term)(@x1py1293 Term)(@x2py974 Term)) (! (= (ApplyTT (ApplyTT (ApplyTT FStar.Pervasives.ex_return@tok @x0py1157) @x1py1293) @x2py974) (FStar.Pervasives.ex_return @x0py1157 @x1py1293 @x2py974)) :pattern ((ApplyTT (ApplyTT (ApplyTT FStar.Pervasives.ex_return@tok @x0py1157) @x1py1293) @x2py974)) )) :named token_correspondence_FStar.Pervasives.ex_return))
(assert (! (forall ((@x0py1158 Term)(@x1py1294 Term)(@x2py975 Term)) (! (= (ApplyTT (ApplyTT (ApplyTT FStar.Pervasives.ex_stronger@tok @x0py1158) @x1py1294) @x2py975) (FStar.Pervasives.ex_stronger @x0py1158 @x1py1294 @x2py975)) :pattern ((ApplyTT (ApplyTT (ApplyTT FStar.Pervasives.ex_stronger@tok @x0py1158) @x1py1294) @x2py975)) )) :named token_correspondence_FStar.Pervasives.ex_stronger))
(assert (! (forall ((@x0py1159 Term)(@x1py1295 Term)) (! (= (ApplyTT (ApplyTT FStar.Pervasives.ex_trivial@tok @x0py1159) @x1py1295) (FStar.Pervasives.ex_trivial @x0py1159 @x1py1295)) :pattern ((ApplyTT (ApplyTT FStar.Pervasives.ex_trivial@tok @x0py1159) @x1py1295)) )) :named token_correspondence_FStar.Pervasives.ex_trivial))
(assert (! (forall ((@x0py1160 Term)) (! (= (ApplyTT FStar.Pervasives.ex_wp@tok @x0py1160) (FStar.Pervasives.ex_wp @x0py1160)) :pattern ((ApplyTT FStar.Pervasives.ex_wp@tok @x0py1160)) )) :named token_correspondence_FStar.Pervasives.ex_wp))
(assert (! (forall ((@x0py1161 Term)) (! (= (ApplyTT FStar.Pervasives.fail@tok @x0py1161) (FStar.Pervasives.fail @x0py1161)) :pattern ((ApplyTT FStar.Pervasives.fail@tok @x0py1161)) )) :named token_correspondence_FStar.Pervasives.fail))
(assert (! (forall ((@x0py1162 Term)(@x1py1296 Term)) (! (= (ApplyTT (ApplyTT FStar.Pervasives.false_elim@tok @x0py1162) @x1py1296) (FStar.Pervasives.false_elim @x0py1162 @x1py1296)) :pattern ((ApplyTT (ApplyTT FStar.Pervasives.false_elim@tok @x0py1162) @x1py1296)) )) :named token_correspondence_FStar.Pervasives.false_elim))
(assert (! (forall ((@x0py1163 Term)(@x1py1297 Term)) (! (= (ApplyTT (ApplyTT FStar.Pervasives.id@tok @x0py1163) @x1py1297) (FStar.Pervasives.id @x0py1163 @x1py1297)) :pattern ((ApplyTT (ApplyTT FStar.Pervasives.id@tok @x0py1163) @x1py1297)) )) :named token_correspondence_FStar.Pervasives.id))
(assert (! (forall ((@x0py1164 Term)(@x1py1298 Term)) (! (= (ApplyTT (ApplyTT FStar.Pervasives.ignore@tok @x0py1164) @x1py1298) (FStar.Pervasives.ignore @x0py1164 @x1py1298)) :pattern ((ApplyTT (ApplyTT FStar.Pervasives.ignore@tok @x0py1164) @x1py1298)) )) :named token_correspondence_FStar.Pervasives.ignore))
(assert (! (forall ((@x0py1165 Term)) (! (= (ApplyTT FStar.Pervasives.inversion@tok @x0py1165) (FStar.Pervasives.inversion @x0py1165)) :pattern ((ApplyTT FStar.Pervasives.inversion@tok @x0py1165)) )) :named token_correspondence_FStar.Pervasives.inversion))
(assert (! (forall ((@x0py1166 Term)(@x1py1299 Term)(@x2py976 Term)) (! (= (ApplyTT (ApplyTT (ApplyTT FStar.Pervasives.lift_div_exn@tok @x0py1166) @x1py1299) @x2py976) (FStar.Pervasives.lift_div_exn @x0py1166 @x1py1299 @x2py976)) :pattern ((ApplyTT (ApplyTT (ApplyTT FStar.Pervasives.lift_div_exn@tok @x0py1166) @x1py1299) @x2py976)) )) :named token_correspondence_FStar.Pervasives.lift_div_exn))
(assert (! (forall ((@x0py1167 Term)(@x1py1300 Term)(@x2py977 Term)) (! (= (ApplyTT (ApplyTT (ApplyTT FStar.Pervasives.Native.__proj__Mktuple2__item___1@tok @x0py1167) @x1py1300) @x2py977) (FStar.Pervasives.Native.__proj__Mktuple2__item___1 @x0py1167 @x1py1300 @x2py977)) :pattern ((ApplyTT (ApplyTT (ApplyTT FStar.Pervasives.Native.__proj__Mktuple2__item___1@tok @x0py1167) @x1py1300) @x2py977)) )) :named token_correspondence_FStar.Pervasives.Native.__proj__Mktuple2__item___1))
(assert (! (forall ((@x0py1168 Term)(@x1py1301 Term)(@x2py978 Term)) (! (= (ApplyTT (ApplyTT (ApplyTT FStar.Pervasives.Native.__proj__Mktuple2__item___2@tok @x0py1168) @x1py1301) @x2py978) (FStar.Pervasives.Native.__proj__Mktuple2__item___2 @x0py1168 @x1py1301 @x2py978)) :pattern ((ApplyTT (ApplyTT (ApplyTT FStar.Pervasives.Native.__proj__Mktuple2__item___2@tok @x0py1168) @x1py1301) @x2py978)) )) :named token_correspondence_FStar.Pervasives.Native.__proj__Mktuple2__item___2))
(assert (! (forall ((@x0py1169 Term)(@x1py1302 Term)(@x2py979 Term)(@x3py702 Term)) (! (= (ApplyTT (ApplyTT (ApplyTT (ApplyTT FStar.Pervasives.Native.__proj__Mktuple3__item___1@tok @x0py1169) @x1py1302) @x2py979) @x3py702) (FStar.Pervasives.Native.__proj__Mktuple3__item___1 @x0py1169 @x1py1302 @x2py979 @x3py702)) :pattern ((ApplyTT (ApplyTT (ApplyTT (ApplyTT FStar.Pervasives.Native.__proj__Mktuple3__item___1@tok @x0py1169) @x1py1302) @x2py979) @x3py702)) )) :named token_correspondence_FStar.Pervasives.Native.__proj__Mktuple3__item___1))
(assert (! (forall ((@x0py1170 Term)(@x1py1303 Term)(@x2py980 Term)(@x3py703 Term)) (! (= (ApplyTT (ApplyTT (ApplyTT (ApplyTT FStar.Pervasives.Native.__proj__Mktuple3__item___2@tok @x0py1170) @x1py1303) @x2py980) @x3py703) (FStar.Pervasives.Native.__proj__Mktuple3__item___2 @x0py1170 @x1py1303 @x2py980 @x3py703)) :pattern ((ApplyTT (ApplyTT (ApplyTT (ApplyTT FStar.Pervasives.Native.__proj__Mktuple3__item___2@tok @x0py1170) @x1py1303) @x2py980) @x3py703)) )) :named token_correspondence_FStar.Pervasives.Native.__proj__Mktuple3__item___2))
(assert (! (forall ((@x0py1171 Term)(@x1py1304 Term)(@x2py981 Term)(@x3py704 Term)) (! (= (ApplyTT (ApplyTT (ApplyTT (ApplyTT FStar.Pervasives.Native.__proj__Mktuple3__item___3@tok @x0py1171) @x1py1304) @x2py981) @x3py704) (FStar.Pervasives.Native.__proj__Mktuple3__item___3 @x0py1171 @x1py1304 @x2py981 @x3py704)) :pattern ((ApplyTT (ApplyTT (ApplyTT (ApplyTT FStar.Pervasives.Native.__proj__Mktuple3__item___3@tok @x0py1171) @x1py1304) @x2py981) @x3py704)) )) :named token_correspondence_FStar.Pervasives.Native.__proj__Mktuple3__item___3))
(assert (! (forall ((@x0py1172 Term)(@x1py1305 Term)(@x2py982 Term)(@x3py705 Term)(@x4py505 Term)) (! (= (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT FStar.Pervasives.Native.__proj__Mktuple4__item___1@tok @x0py1172) @x1py1305) @x2py982) @x3py705) @x4py505) (FStar.Pervasives.Native.__proj__Mktuple4__item___1 @x0py1172 @x1py1305 @x2py982 @x3py705 @x4py505)) :pattern ((ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT FStar.Pervasives.Native.__proj__Mktuple4__item___1@tok @x0py1172) @x1py1305) @x2py982) @x3py705) @x4py505)) )) :named token_correspondence_FStar.Pervasives.Native.__proj__Mktuple4__item___1))
(assert (! (forall ((@x0py1173 Term)(@x1py1306 Term)(@x2py983 Term)(@x3py706 Term)(@x4py506 Term)) (! (= (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT FStar.Pervasives.Native.__proj__Mktuple4__item___2@tok @x0py1173) @x1py1306) @x2py983) @x3py706) @x4py506) (FStar.Pervasives.Native.__proj__Mktuple4__item___2 @x0py1173 @x1py1306 @x2py983 @x3py706 @x4py506)) :pattern ((ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT FStar.Pervasives.Native.__proj__Mktuple4__item___2@tok @x0py1173) @x1py1306) @x2py983) @x3py706) @x4py506)) )) :named token_correspondence_FStar.Pervasives.Native.__proj__Mktuple4__item___2))
(assert (! (forall ((@x0py1174 Term)(@x1py1307 Term)(@x2py984 Term)(@x3py707 Term)(@x4py507 Term)) (! (= (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT FStar.Pervasives.Native.__proj__Mktuple4__item___3@tok @x0py1174) @x1py1307) @x2py984) @x3py707) @x4py507) (FStar.Pervasives.Native.__proj__Mktuple4__item___3 @x0py1174 @x1py1307 @x2py984 @x3py707 @x4py507)) :pattern ((ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT FStar.Pervasives.Native.__proj__Mktuple4__item___3@tok @x0py1174) @x1py1307) @x2py984) @x3py707) @x4py507)) )) :named token_correspondence_FStar.Pervasives.Native.__proj__Mktuple4__item___3))
(assert (! (forall ((@x0py1175 Term)(@x1py1308 Term)(@x2py985 Term)(@x3py708 Term)(@x4py508 Term)) (! (= (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT FStar.Pervasives.Native.__proj__Mktuple4__item___4@tok @x0py1175) @x1py1308) @x2py985) @x3py708) @x4py508) (FStar.Pervasives.Native.__proj__Mktuple4__item___4 @x0py1175 @x1py1308 @x2py985 @x3py708 @x4py508)) :pattern ((ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT FStar.Pervasives.Native.__proj__Mktuple4__item___4@tok @x0py1175) @x1py1308) @x2py985) @x3py708) @x4py508)) )) :named token_correspondence_FStar.Pervasives.Native.__proj__Mktuple4__item___4))
(assert (! (forall ((@x0py1176 Term)(@x1py1309 Term)(@x2py986 Term)(@x3py709 Term)(@x4py509 Term)(@x5py391 Term)) (! (= (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT FStar.Pervasives.Native.__proj__Mktuple5__item___1@tok @x0py1176) @x1py1309) @x2py986) @x3py709) @x4py509) @x5py391) (FStar.Pervasives.Native.__proj__Mktuple5__item___1 @x0py1176 @x1py1309 @x2py986 @x3py709 @x4py509 @x5py391)) :pattern ((ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT FStar.Pervasives.Native.__proj__Mktuple5__item___1@tok @x0py1176) @x1py1309) @x2py986) @x3py709) @x4py509) @x5py391)) )) :named token_correspondence_FStar.Pervasives.Native.__proj__Mktuple5__item___1))
(assert (! (forall ((@x0py1177 Term)(@x1py1310 Term)(@x2py987 Term)(@x3py710 Term)(@x4py510 Term)(@x5py392 Term)) (! (= (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT FStar.Pervasives.Native.__proj__Mktuple5__item___2@tok @x0py1177) @x1py1310) @x2py987) @x3py710) @x4py510) @x5py392) (FStar.Pervasives.Native.__proj__Mktuple5__item___2 @x0py1177 @x1py1310 @x2py987 @x3py710 @x4py510 @x5py392)) :pattern ((ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT FStar.Pervasives.Native.__proj__Mktuple5__item___2@tok @x0py1177) @x1py1310) @x2py987) @x3py710) @x4py510) @x5py392)) )) :named token_correspondence_FStar.Pervasives.Native.__proj__Mktuple5__item___2))
(assert (! (forall ((@x0py1178 Term)(@x1py1311 Term)(@x2py988 Term)(@x3py711 Term)(@x4py511 Term)(@x5py393 Term)) (! (= (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT FStar.Pervasives.Native.__proj__Mktuple5__item___3@tok @x0py1178) @x1py1311) @x2py988) @x3py711) @x4py511) @x5py393) (FStar.Pervasives.Native.__proj__Mktuple5__item___3 @x0py1178 @x1py1311 @x2py988 @x3py711 @x4py511 @x5py393)) :pattern ((ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT FStar.Pervasives.Native.__proj__Mktuple5__item___3@tok @x0py1178) @x1py1311) @x2py988) @x3py711) @x4py511) @x5py393)) )) :named token_correspondence_FStar.Pervasives.Native.__proj__Mktuple5__item___3))
(assert (! (forall ((@x0py1179 Term)(@x1py1312 Term)(@x2py989 Term)(@x3py712 Term)(@x4py512 Term)(@x5py394 Term)) (! (= (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT FStar.Pervasives.Native.__proj__Mktuple5__item___4@tok @x0py1179) @x1py1312) @x2py989) @x3py712) @x4py512) @x5py394) (FStar.Pervasives.Native.__proj__Mktuple5__item___4 @x0py1179 @x1py1312 @x2py989 @x3py712 @x4py512 @x5py394)) :pattern ((ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT FStar.Pervasives.Native.__proj__Mktuple5__item___4@tok @x0py1179) @x1py1312) @x2py989) @x3py712) @x4py512) @x5py394)) )) :named token_correspondence_FStar.Pervasives.Native.__proj__Mktuple5__item___4))
(assert (! (forall ((@x0py1180 Term)(@x1py1313 Term)(@x2py990 Term)(@x3py713 Term)(@x4py513 Term)(@x5py395 Term)) (! (= (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT FStar.Pervasives.Native.__proj__Mktuple5__item___5@tok @x0py1180) @x1py1313) @x2py990) @x3py713) @x4py513) @x5py395) (FStar.Pervasives.Native.__proj__Mktuple5__item___5 @x0py1180 @x1py1313 @x2py990 @x3py713 @x4py513 @x5py395)) :pattern ((ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT FStar.Pervasives.Native.__proj__Mktuple5__item___5@tok @x0py1180) @x1py1313) @x2py990) @x3py713) @x4py513) @x5py395)) )) :named token_correspondence_FStar.Pervasives.Native.__proj__Mktuple5__item___5))
(assert (! (forall ((@x0py1181 Term)(@x1py1314 Term)(@x2py991 Term)(@x3py714 Term)(@x4py514 Term)(@x5py396 Term)(@x6py280 Term)) (! (= (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT FStar.Pervasives.Native.__proj__Mktuple6__item___1@tok @x0py1181) @x1py1314) @x2py991) @x3py714) @x4py514) @x5py396) @x6py280) (FStar.Pervasives.Native.__proj__Mktuple6__item___1 @x0py1181 @x1py1314 @x2py991 @x3py714 @x4py514 @x5py396 @x6py280)) :pattern ((ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT FStar.Pervasives.Native.__proj__Mktuple6__item___1@tok @x0py1181) @x1py1314) @x2py991) @x3py714) @x4py514) @x5py396) @x6py280)) )) :named token_correspondence_FStar.Pervasives.Native.__proj__Mktuple6__item___1))
(assert (! (forall ((@x0py1182 Term)(@x1py1315 Term)(@x2py992 Term)(@x3py715 Term)(@x4py515 Term)(@x5py397 Term)(@x6py281 Term)) (! (= (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT FStar.Pervasives.Native.__proj__Mktuple6__item___2@tok @x0py1182) @x1py1315) @x2py992) @x3py715) @x4py515) @x5py397) @x6py281) (FStar.Pervasives.Native.__proj__Mktuple6__item___2 @x0py1182 @x1py1315 @x2py992 @x3py715 @x4py515 @x5py397 @x6py281)) :pattern ((ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT FStar.Pervasives.Native.__proj__Mktuple6__item___2@tok @x0py1182) @x1py1315) @x2py992) @x3py715) @x4py515) @x5py397) @x6py281)) )) :named token_correspondence_FStar.Pervasives.Native.__proj__Mktuple6__item___2))
(assert (! (forall ((@x0py1183 Term)(@x1py1316 Term)(@x2py993 Term)(@x3py716 Term)(@x4py516 Term)(@x5py398 Term)(@x6py282 Term)) (! (= (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT FStar.Pervasives.Native.__proj__Mktuple6__item___3@tok @x0py1183) @x1py1316) @x2py993) @x3py716) @x4py516) @x5py398) @x6py282) (FStar.Pervasives.Native.__proj__Mktuple6__item___3 @x0py1183 @x1py1316 @x2py993 @x3py716 @x4py516 @x5py398 @x6py282)) :pattern ((ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT FStar.Pervasives.Native.__proj__Mktuple6__item___3@tok @x0py1183) @x1py1316) @x2py993) @x3py716) @x4py516) @x5py398) @x6py282)) )) :named token_correspondence_FStar.Pervasives.Native.__proj__Mktuple6__item___3))
(assert (! (forall ((@x0py1184 Term)(@x1py1317 Term)(@x2py994 Term)(@x3py717 Term)(@x4py517 Term)(@x5py399 Term)(@x6py283 Term)) (! (= (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT FStar.Pervasives.Native.__proj__Mktuple6__item___4@tok @x0py1184) @x1py1317) @x2py994) @x3py717) @x4py517) @x5py399) @x6py283) (FStar.Pervasives.Native.__proj__Mktuple6__item___4 @x0py1184 @x1py1317 @x2py994 @x3py717 @x4py517 @x5py399 @x6py283)) :pattern ((ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT FStar.Pervasives.Native.__proj__Mktuple6__item___4@tok @x0py1184) @x1py1317) @x2py994) @x3py717) @x4py517) @x5py399) @x6py283)) )) :named token_correspondence_FStar.Pervasives.Native.__proj__Mktuple6__item___4))
(assert (! (forall ((@x0py1185 Term)(@x1py1318 Term)(@x2py995 Term)(@x3py718 Term)(@x4py518 Term)(@x5py400 Term)(@x6py284 Term)) (! (= (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT FStar.Pervasives.Native.__proj__Mktuple6__item___5@tok @x0py1185) @x1py1318) @x2py995) @x3py718) @x4py518) @x5py400) @x6py284) (FStar.Pervasives.Native.__proj__Mktuple6__item___5 @x0py1185 @x1py1318 @x2py995 @x3py718 @x4py518 @x5py400 @x6py284)) :pattern ((ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT FStar.Pervasives.Native.__proj__Mktuple6__item___5@tok @x0py1185) @x1py1318) @x2py995) @x3py718) @x4py518) @x5py400) @x6py284)) )) :named token_correspondence_FStar.Pervasives.Native.__proj__Mktuple6__item___5))
(assert (! (forall ((@x0py1186 Term)(@x1py1319 Term)(@x2py996 Term)(@x3py719 Term)(@x4py519 Term)(@x5py401 Term)(@x6py285 Term)) (! (= (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT FStar.Pervasives.Native.__proj__Mktuple6__item___6@tok @x0py1186) @x1py1319) @x2py996) @x3py719) @x4py519) @x5py401) @x6py285) (FStar.Pervasives.Native.__proj__Mktuple6__item___6 @x0py1186 @x1py1319 @x2py996 @x3py719 @x4py519 @x5py401 @x6py285)) :pattern ((ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT FStar.Pervasives.Native.__proj__Mktuple6__item___6@tok @x0py1186) @x1py1319) @x2py996) @x3py719) @x4py519) @x5py401) @x6py285)) )) :named token_correspondence_FStar.Pervasives.Native.__proj__Mktuple6__item___6))
(assert (! (forall ((@x0py1187 Term)(@x1py1320 Term)(@x2py997 Term)(@x3py720 Term)(@x4py520 Term)(@x5py402 Term)(@x6py286 Term)(@x7py221 Term)) (! (= (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT FStar.Pervasives.Native.__proj__Mktuple7__item___1@tok @x0py1187) @x1py1320) @x2py997) @x3py720) @x4py520) @x5py402) @x6py286) @x7py221) (FStar.Pervasives.Native.__proj__Mktuple7__item___1 @x0py1187 @x1py1320 @x2py997 @x3py720 @x4py520 @x5py402 @x6py286 @x7py221)) :pattern ((ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT FStar.Pervasives.Native.__proj__Mktuple7__item___1@tok @x0py1187) @x1py1320) @x2py997) @x3py720) @x4py520) @x5py402) @x6py286) @x7py221)) )) :named token_correspondence_FStar.Pervasives.Native.__proj__Mktuple7__item___1))
(assert (! (forall ((@x0py1188 Term)(@x1py1321 Term)(@x2py998 Term)(@x3py721 Term)(@x4py521 Term)(@x5py403 Term)(@x6py287 Term)(@x7py222 Term)) (! (= (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT FStar.Pervasives.Native.__proj__Mktuple7__item___2@tok @x0py1188) @x1py1321) @x2py998) @x3py721) @x4py521) @x5py403) @x6py287) @x7py222) (FStar.Pervasives.Native.__proj__Mktuple7__item___2 @x0py1188 @x1py1321 @x2py998 @x3py721 @x4py521 @x5py403 @x6py287 @x7py222)) :pattern ((ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT FStar.Pervasives.Native.__proj__Mktuple7__item___2@tok @x0py1188) @x1py1321) @x2py998) @x3py721) @x4py521) @x5py403) @x6py287) @x7py222)) )) :named token_correspondence_FStar.Pervasives.Native.__proj__Mktuple7__item___2))
(assert (! (forall ((@x0py1189 Term)(@x1py1322 Term)(@x2py999 Term)(@x3py722 Term)(@x4py522 Term)(@x5py404 Term)(@x6py288 Term)(@x7py223 Term)) (! (= (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT FStar.Pervasives.Native.__proj__Mktuple7__item___3@tok @x0py1189) @x1py1322) @x2py999) @x3py722) @x4py522) @x5py404) @x6py288) @x7py223) (FStar.Pervasives.Native.__proj__Mktuple7__item___3 @x0py1189 @x1py1322 @x2py999 @x3py722 @x4py522 @x5py404 @x6py288 @x7py223)) :pattern ((ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT FStar.Pervasives.Native.__proj__Mktuple7__item___3@tok @x0py1189) @x1py1322) @x2py999) @x3py722) @x4py522) @x5py404) @x6py288) @x7py223)) )) :named token_correspondence_FStar.Pervasives.Native.__proj__Mktuple7__item___3))
(assert (! (forall ((@x0py1190 Term)(@x1py1323 Term)(@x2py1000 Term)(@x3py723 Term)(@x4py523 Term)(@x5py405 Term)(@x6py289 Term)(@x7py224 Term)) (! (= (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT FStar.Pervasives.Native.__proj__Mktuple7__item___4@tok @x0py1190) @x1py1323) @x2py1000) @x3py723) @x4py523) @x5py405) @x6py289) @x7py224) (FStar.Pervasives.Native.__proj__Mktuple7__item___4 @x0py1190 @x1py1323 @x2py1000 @x3py723 @x4py523 @x5py405 @x6py289 @x7py224)) :pattern ((ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT FStar.Pervasives.Native.__proj__Mktuple7__item___4@tok @x0py1190) @x1py1323) @x2py1000) @x3py723) @x4py523) @x5py405) @x6py289) @x7py224)) )) :named token_correspondence_FStar.Pervasives.Native.__proj__Mktuple7__item___4))
(assert (! (forall ((@x0py1191 Term)(@x1py1324 Term)(@x2py1001 Term)(@x3py724 Term)(@x4py524 Term)(@x5py406 Term)(@x6py290 Term)(@x7py225 Term)) (! (= (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT FStar.Pervasives.Native.__proj__Mktuple7__item___5@tok @x0py1191) @x1py1324) @x2py1001) @x3py724) @x4py524) @x5py406) @x6py290) @x7py225) (FStar.Pervasives.Native.__proj__Mktuple7__item___5 @x0py1191 @x1py1324 @x2py1001 @x3py724 @x4py524 @x5py406 @x6py290 @x7py225)) :pattern ((ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT FStar.Pervasives.Native.__proj__Mktuple7__item___5@tok @x0py1191) @x1py1324) @x2py1001) @x3py724) @x4py524) @x5py406) @x6py290) @x7py225)) )) :named token_correspondence_FStar.Pervasives.Native.__proj__Mktuple7__item___5))
(assert (! (forall ((@x0py1192 Term)(@x1py1325 Term)(@x2py1002 Term)(@x3py725 Term)(@x4py525 Term)(@x5py407 Term)(@x6py291 Term)(@x7py226 Term)) (! (= (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT FStar.Pervasives.Native.__proj__Mktuple7__item___6@tok @x0py1192) @x1py1325) @x2py1002) @x3py725) @x4py525) @x5py407) @x6py291) @x7py226) (FStar.Pervasives.Native.__proj__Mktuple7__item___6 @x0py1192 @x1py1325 @x2py1002 @x3py725 @x4py525 @x5py407 @x6py291 @x7py226)) :pattern ((ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT FStar.Pervasives.Native.__proj__Mktuple7__item___6@tok @x0py1192) @x1py1325) @x2py1002) @x3py725) @x4py525) @x5py407) @x6py291) @x7py226)) )) :named token_correspondence_FStar.Pervasives.Native.__proj__Mktuple7__item___6))
(assert (! (forall ((@x0py1193 Term)(@x1py1326 Term)(@x2py1003 Term)(@x3py726 Term)(@x4py526 Term)(@x5py408 Term)(@x6py292 Term)(@x7py227 Term)) (! (= (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT FStar.Pervasives.Native.__proj__Mktuple7__item___7@tok @x0py1193) @x1py1326) @x2py1003) @x3py726) @x4py526) @x5py408) @x6py292) @x7py227) (FStar.Pervasives.Native.__proj__Mktuple7__item___7 @x0py1193 @x1py1326 @x2py1003 @x3py726 @x4py526 @x5py408 @x6py292 @x7py227)) :pattern ((ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT FStar.Pervasives.Native.__proj__Mktuple7__item___7@tok @x0py1193) @x1py1326) @x2py1003) @x3py726) @x4py526) @x5py408) @x6py292) @x7py227)) )) :named token_correspondence_FStar.Pervasives.Native.__proj__Mktuple7__item___7))
(assert (! (forall ((@x0py1194 Term)(@x1py1327 Term)(@x2py1004 Term)(@x3py727 Term)(@x4py527 Term)(@x5py409 Term)(@x6py293 Term)(@x7py228 Term)(@x8py149 Term)) (! (= (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT FStar.Pervasives.Native.__proj__Mktuple8__item___1@tok @x0py1194) @x1py1327) @x2py1004) @x3py727) @x4py527) @x5py409) @x6py293) @x7py228) @x8py149) (FStar.Pervasives.Native.__proj__Mktuple8__item___1 @x0py1194 @x1py1327 @x2py1004 @x3py727 @x4py527 @x5py409 @x6py293 @x7py228 @x8py149)) :pattern ((ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT FStar.Pervasives.Native.__proj__Mktuple8__item___1@tok @x0py1194) @x1py1327) @x2py1004) @x3py727) @x4py527) @x5py409) @x6py293) @x7py228) @x8py149)) )) :named token_correspondence_FStar.Pervasives.Native.__proj__Mktuple8__item___1))
(assert (! (forall ((@x0py1195 Term)(@x1py1328 Term)(@x2py1005 Term)(@x3py728 Term)(@x4py528 Term)(@x5py410 Term)(@x6py294 Term)(@x7py229 Term)(@x8py150 Term)) (! (= (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT FStar.Pervasives.Native.__proj__Mktuple8__item___2@tok @x0py1195) @x1py1328) @x2py1005) @x3py728) @x4py528) @x5py410) @x6py294) @x7py229) @x8py150) (FStar.Pervasives.Native.__proj__Mktuple8__item___2 @x0py1195 @x1py1328 @x2py1005 @x3py728 @x4py528 @x5py410 @x6py294 @x7py229 @x8py150)) :pattern ((ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT FStar.Pervasives.Native.__proj__Mktuple8__item___2@tok @x0py1195) @x1py1328) @x2py1005) @x3py728) @x4py528) @x5py410) @x6py294) @x7py229) @x8py150)) )) :named token_correspondence_FStar.Pervasives.Native.__proj__Mktuple8__item___2))
(assert (! (forall ((@x0py1196 Term)(@x1py1329 Term)(@x2py1006 Term)(@x3py729 Term)(@x4py529 Term)(@x5py411 Term)(@x6py295 Term)(@x7py230 Term)(@x8py151 Term)) (! (= (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT FStar.Pervasives.Native.__proj__Mktuple8__item___3@tok @x0py1196) @x1py1329) @x2py1006) @x3py729) @x4py529) @x5py411) @x6py295) @x7py230) @x8py151) (FStar.Pervasives.Native.__proj__Mktuple8__item___3 @x0py1196 @x1py1329 @x2py1006 @x3py729 @x4py529 @x5py411 @x6py295 @x7py230 @x8py151)) :pattern ((ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT FStar.Pervasives.Native.__proj__Mktuple8__item___3@tok @x0py1196) @x1py1329) @x2py1006) @x3py729) @x4py529) @x5py411) @x6py295) @x7py230) @x8py151)) )) :named token_correspondence_FStar.Pervasives.Native.__proj__Mktuple8__item___3))
(assert (! (forall ((@x0py1197 Term)(@x1py1330 Term)(@x2py1007 Term)(@x3py730 Term)(@x4py530 Term)(@x5py412 Term)(@x6py296 Term)(@x7py231 Term)(@x8py152 Term)) (! (= (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT FStar.Pervasives.Native.__proj__Mktuple8__item___4@tok @x0py1197) @x1py1330) @x2py1007) @x3py730) @x4py530) @x5py412) @x6py296) @x7py231) @x8py152) (FStar.Pervasives.Native.__proj__Mktuple8__item___4 @x0py1197 @x1py1330 @x2py1007 @x3py730 @x4py530 @x5py412 @x6py296 @x7py231 @x8py152)) :pattern ((ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT FStar.Pervasives.Native.__proj__Mktuple8__item___4@tok @x0py1197) @x1py1330) @x2py1007) @x3py730) @x4py530) @x5py412) @x6py296) @x7py231) @x8py152)) )) :named token_correspondence_FStar.Pervasives.Native.__proj__Mktuple8__item___4))
(assert (! (forall ((@x0py1198 Term)(@x1py1331 Term)(@x2py1008 Term)(@x3py731 Term)(@x4py531 Term)(@x5py413 Term)(@x6py297 Term)(@x7py232 Term)(@x8py153 Term)) (! (= (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT FStar.Pervasives.Native.__proj__Mktuple8__item___5@tok @x0py1198) @x1py1331) @x2py1008) @x3py731) @x4py531) @x5py413) @x6py297) @x7py232) @x8py153) (FStar.Pervasives.Native.__proj__Mktuple8__item___5 @x0py1198 @x1py1331 @x2py1008 @x3py731 @x4py531 @x5py413 @x6py297 @x7py232 @x8py153)) :pattern ((ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT FStar.Pervasives.Native.__proj__Mktuple8__item___5@tok @x0py1198) @x1py1331) @x2py1008) @x3py731) @x4py531) @x5py413) @x6py297) @x7py232) @x8py153)) )) :named token_correspondence_FStar.Pervasives.Native.__proj__Mktuple8__item___5))
(assert (! (forall ((@x0py1199 Term)(@x1py1332 Term)(@x2py1009 Term)(@x3py732 Term)(@x4py532 Term)(@x5py414 Term)(@x6py298 Term)(@x7py233 Term)(@x8py154 Term)) (! (= (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT FStar.Pervasives.Native.__proj__Mktuple8__item___6@tok @x0py1199) @x1py1332) @x2py1009) @x3py732) @x4py532) @x5py414) @x6py298) @x7py233) @x8py154) (FStar.Pervasives.Native.__proj__Mktuple8__item___6 @x0py1199 @x1py1332 @x2py1009 @x3py732 @x4py532 @x5py414 @x6py298 @x7py233 @x8py154)) :pattern ((ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT FStar.Pervasives.Native.__proj__Mktuple8__item___6@tok @x0py1199) @x1py1332) @x2py1009) @x3py732) @x4py532) @x5py414) @x6py298) @x7py233) @x8py154)) )) :named token_correspondence_FStar.Pervasives.Native.__proj__Mktuple8__item___6))
(assert (! (forall ((@x0py1200 Term)(@x1py1333 Term)(@x2py1010 Term)(@x3py733 Term)(@x4py533 Term)(@x5py415 Term)(@x6py299 Term)(@x7py234 Term)(@x8py155 Term)) (! (= (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT FStar.Pervasives.Native.__proj__Mktuple8__item___7@tok @x0py1200) @x1py1333) @x2py1010) @x3py733) @x4py533) @x5py415) @x6py299) @x7py234) @x8py155) (FStar.Pervasives.Native.__proj__Mktuple8__item___7 @x0py1200 @x1py1333 @x2py1010 @x3py733 @x4py533 @x5py415 @x6py299 @x7py234 @x8py155)) :pattern ((ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT FStar.Pervasives.Native.__proj__Mktuple8__item___7@tok @x0py1200) @x1py1333) @x2py1010) @x3py733) @x4py533) @x5py415) @x6py299) @x7py234) @x8py155)) )) :named token_correspondence_FStar.Pervasives.Native.__proj__Mktuple8__item___7))
(assert (! (forall ((@x0py1201 Term)(@x1py1334 Term)(@x2py1011 Term)(@x3py734 Term)(@x4py534 Term)(@x5py416 Term)(@x6py300 Term)(@x7py235 Term)(@x8py156 Term)) (! (= (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT FStar.Pervasives.Native.__proj__Mktuple8__item___8@tok @x0py1201) @x1py1334) @x2py1011) @x3py734) @x4py534) @x5py416) @x6py300) @x7py235) @x8py156) (FStar.Pervasives.Native.__proj__Mktuple8__item___8 @x0py1201 @x1py1334 @x2py1011 @x3py734 @x4py534 @x5py416 @x6py300 @x7py235 @x8py156)) :pattern ((ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT FStar.Pervasives.Native.__proj__Mktuple8__item___8@tok @x0py1201) @x1py1334) @x2py1011) @x3py734) @x4py534) @x5py416) @x6py300) @x7py235) @x8py156)) )) :named token_correspondence_FStar.Pervasives.Native.__proj__Mktuple8__item___8))
(assert (! (forall ((@x0py1202 Term)(@x1py1335 Term)) (! (= (ApplyTT (ApplyTT FStar.Pervasives.Native.__proj__Some__item__v@tok @x0py1202) @x1py1335) (FStar.Pervasives.Native.__proj__Some__item__v @x0py1202 @x1py1335)) :pattern ((ApplyTT (ApplyTT FStar.Pervasives.Native.__proj__Some__item__v@tok @x0py1202) @x1py1335)) )) :named token_correspondence_FStar.Pervasives.Native.__proj__Some__item__v))
(assert (! (forall ((@x0py1203 Term)) (! (= (ApplyTT FStar.Pervasives.Native.__proj__UnfoldAttr__item__a@tok @x0py1203) (FStar.Pervasives.Native.__proj__UnfoldAttr__item__a @x0py1203)) :pattern ((ApplyTT FStar.Pervasives.Native.__proj__UnfoldAttr__item__a@tok @x0py1203)) )) :named token_correspondence_FStar.Pervasives.Native.__proj__UnfoldAttr__item__a))
(assert (! (forall ((@x0py1204 Term)) (! (= (ApplyTT FStar.Pervasives.Native.__proj__UnfoldAttr__item__t@tok @x0py1204) (FStar.Pervasives.Native.__proj__UnfoldAttr__item__t @x0py1204)) :pattern ((ApplyTT FStar.Pervasives.Native.__proj__UnfoldAttr__item__t@tok @x0py1204)) )) :named token_correspondence_FStar.Pervasives.Native.__proj__UnfoldAttr__item__t))
(assert (! (forall ((@x0py1205 Term)) (! (= (ApplyTT FStar.Pervasives.Native.__proj__UnfoldFully__item___0@tok @x0py1205) (FStar.Pervasives.Native.__proj__UnfoldFully__item___0 @x0py1205)) :pattern ((ApplyTT FStar.Pervasives.Native.__proj__UnfoldFully__item___0@tok @x0py1205)) )) :named token_correspondence_FStar.Pervasives.Native.__proj__UnfoldFully__item___0))
(assert (! (forall ((@x0py1206 Term)) (! (= (ApplyTT FStar.Pervasives.Native.__proj__UnfoldOnly__item___0@tok @x0py1206) (FStar.Pervasives.Native.__proj__UnfoldOnly__item___0 @x0py1206)) :pattern ((ApplyTT FStar.Pervasives.Native.__proj__UnfoldOnly__item___0@tok @x0py1206)) )) :named token_correspondence_FStar.Pervasives.Native.__proj__UnfoldOnly__item___0))
(assert (! (forall ((@x0py1207 Term)) (! (= (ApplyTT FStar.Pervasives.Native.assert_norm@tok @x0py1207) (FStar.Pervasives.Native.assert_norm @x0py1207)) :pattern ((ApplyTT FStar.Pervasives.Native.assert_norm@tok @x0py1207)) )) :named token_correspondence_FStar.Pervasives.Native.assert_norm))
(assert (! (forall ((@x0py1208 Term)(@x1py1336 Term)) (! (= (ApplyTT (ApplyTT FStar.Pervasives.Native.delta_attr@tok @x0py1208) @x1py1336) (FStar.Pervasives.Native.delta_attr @x0py1208 @x1py1336)) :pattern ((ApplyTT (ApplyTT FStar.Pervasives.Native.delta_attr@tok @x0py1208) @x1py1336)) )) :named token_correspondence_FStar.Pervasives.Native.delta_attr))
(assert (! (forall ((@x0py1209 Term)) (! (= (ApplyTT FStar.Pervasives.Native.delta_fully@tok @x0py1209) (FStar.Pervasives.Native.delta_fully @x0py1209)) :pattern ((ApplyTT FStar.Pervasives.Native.delta_fully@tok @x0py1209)) )) :named token_correspondence_FStar.Pervasives.Native.delta_fully))
(assert (! (forall ((@x0py1210 Term)) (! (= (ApplyTT FStar.Pervasives.Native.delta_only@tok @x0py1210) (FStar.Pervasives.Native.delta_only @x0py1210)) :pattern ((ApplyTT FStar.Pervasives.Native.delta_only@tok @x0py1210)) )) :named token_correspondence_FStar.Pervasives.Native.delta_only))
(assert (! (forall ((@x0py1211 Term)(@x1py1337 Term)(@x2py1012 Term)) (! (= (ApplyTT (ApplyTT (ApplyTT FStar.Pervasives.Native.fst@tok @x0py1211) @x1py1337) @x2py1012) (FStar.Pervasives.Native.fst @x0py1211 @x1py1337 @x2py1012)) :pattern ((ApplyTT (ApplyTT (ApplyTT FStar.Pervasives.Native.fst@tok @x0py1211) @x1py1337) @x2py1012)) )) :named token_correspondence_FStar.Pervasives.Native.fst))
(assert (! (forall ((@x0py1212 Term)(@x1py1338 Term)(@x2py1013 Term)) (! (= (ApplyTT (ApplyTT (ApplyTT FStar.Pervasives.Native.norm@tok @x0py1212) @x1py1338) @x2py1013) (FStar.Pervasives.Native.norm @x0py1212 @x1py1338 @x2py1013)) :pattern ((ApplyTT (ApplyTT (ApplyTT FStar.Pervasives.Native.norm@tok @x0py1212) @x1py1338) @x2py1013)) )) :named token_correspondence_FStar.Pervasives.Native.norm))
(assert (! (forall ((@x0py1213 Term)) (! (= (ApplyTT FStar.Pervasives.Native.normalize@tok @x0py1213) (FStar.Pervasives.Native.normalize @x0py1213)) :pattern ((ApplyTT FStar.Pervasives.Native.normalize@tok @x0py1213)) )) :named token_correspondence_FStar.Pervasives.Native.normalize))
(assert (! (forall ((@x0py1214 Term)(@x1py1339 Term)) (! (= (ApplyTT (ApplyTT FStar.Pervasives.Native.normalize_term@tok @x0py1214) @x1py1339) (FStar.Pervasives.Native.normalize_term @x0py1214 @x1py1339)) :pattern ((ApplyTT (ApplyTT FStar.Pervasives.Native.normalize_term@tok @x0py1214) @x1py1339)) )) :named token_correspondence_FStar.Pervasives.Native.normalize_term))
(assert (! (forall ((@x0py1215 Term)) (! (= (ApplyTT FStar.Pervasives.Native.option@tok @x0py1215) (FStar.Pervasives.Native.option @x0py1215)) :pattern ((ApplyTT FStar.Pervasives.Native.option@tok @x0py1215)) :pattern ((FStar.Pervasives.Native.option @x0py1215)) )) :named token_correspondence_FStar.Pervasives.Native.option@tok))
(assert (! (forall ((@x0py1216 Term)(@x1py1340 Term)) (! (= (ApplyTT (ApplyTT FStar.Pervasives.Native.singleton@tok @x0py1216) @x1py1340) (FStar.Pervasives.Native.singleton @x0py1216 @x1py1340)) :pattern ((ApplyTT (ApplyTT FStar.Pervasives.Native.singleton@tok @x0py1216) @x1py1340)) )) :named token_correspondence_FStar.Pervasives.Native.singleton))
(assert (! (forall ((@x0py1217 Term)(@x1py1341 Term)(@x2py1014 Term)) (! (= (ApplyTT (ApplyTT (ApplyTT FStar.Pervasives.Native.snd@tok @x0py1217) @x1py1341) @x2py1014) (FStar.Pervasives.Native.snd @x0py1217 @x1py1341 @x2py1014)) :pattern ((ApplyTT (ApplyTT (ApplyTT FStar.Pervasives.Native.snd@tok @x0py1217) @x1py1341) @x2py1014)) )) :named token_correspondence_FStar.Pervasives.Native.snd))
(assert (! (forall ((@x0py1218 Term)(@x1py1342 Term)) (! (= (ApplyTT (ApplyTT FStar.Pervasives.Native.tuple2@tok @x0py1218) @x1py1342) (FStar.Pervasives.Native.tuple2 @x0py1218 @x1py1342)) :pattern ((ApplyTT (ApplyTT FStar.Pervasives.Native.tuple2@tok @x0py1218) @x1py1342)) :pattern ((FStar.Pervasives.Native.tuple2 @x0py1218 @x1py1342)) )) :named token_correspondence_FStar.Pervasives.Native.tuple2@tok))
(assert (! (forall ((@x0py1219 Term)(@x1py1343 Term)(@x2py1015 Term)) (! (= (ApplyTT (ApplyTT (ApplyTT FStar.Pervasives.Native.tuple3@tok @x0py1219) @x1py1343) @x2py1015) (FStar.Pervasives.Native.tuple3 @x0py1219 @x1py1343 @x2py1015)) :pattern ((ApplyTT (ApplyTT (ApplyTT FStar.Pervasives.Native.tuple3@tok @x0py1219) @x1py1343) @x2py1015)) :pattern ((FStar.Pervasives.Native.tuple3 @x0py1219 @x1py1343 @x2py1015)) )) :named token_correspondence_FStar.Pervasives.Native.tuple3@tok))
(assert (! (forall ((@x0py1220 Term)(@x1py1344 Term)(@x2py1016 Term)(@x3py735 Term)) (! (= (ApplyTT (ApplyTT (ApplyTT (ApplyTT FStar.Pervasives.Native.tuple4@tok @x0py1220) @x1py1344) @x2py1016) @x3py735) (FStar.Pervasives.Native.tuple4 @x0py1220 @x1py1344 @x2py1016 @x3py735)) :pattern ((ApplyTT (ApplyTT (ApplyTT (ApplyTT FStar.Pervasives.Native.tuple4@tok @x0py1220) @x1py1344) @x2py1016) @x3py735)) :pattern ((FStar.Pervasives.Native.tuple4 @x0py1220 @x1py1344 @x2py1016 @x3py735)) )) :named token_correspondence_FStar.Pervasives.Native.tuple4@tok))
(assert (! (forall ((@x0py1221 Term)(@x1py1345 Term)(@x2py1017 Term)(@x3py736 Term)(@x4py535 Term)) (! (= (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT FStar.Pervasives.Native.tuple5@tok @x0py1221) @x1py1345) @x2py1017) @x3py736) @x4py535) (FStar.Pervasives.Native.tuple5 @x0py1221 @x1py1345 @x2py1017 @x3py736 @x4py535)) :pattern ((ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT FStar.Pervasives.Native.tuple5@tok @x0py1221) @x1py1345) @x2py1017) @x3py736) @x4py535)) :pattern ((FStar.Pervasives.Native.tuple5 @x0py1221 @x1py1345 @x2py1017 @x3py736 @x4py535)) )) :named token_correspondence_FStar.Pervasives.Native.tuple5@tok))
(assert (! (forall ((@x0py1222 Term)(@x1py1346 Term)(@x2py1018 Term)(@x3py737 Term)(@x4py536 Term)(@x5py417 Term)) (! (= (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT FStar.Pervasives.Native.tuple6@tok @x0py1222) @x1py1346) @x2py1018) @x3py737) @x4py536) @x5py417) (FStar.Pervasives.Native.tuple6 @x0py1222 @x1py1346 @x2py1018 @x3py737 @x4py536 @x5py417)) :pattern ((ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT FStar.Pervasives.Native.tuple6@tok @x0py1222) @x1py1346) @x2py1018) @x3py737) @x4py536) @x5py417)) :pattern ((FStar.Pervasives.Native.tuple6 @x0py1222 @x1py1346 @x2py1018 @x3py737 @x4py536 @x5py417)) )) :named token_correspondence_FStar.Pervasives.Native.tuple6@tok))
(assert (! (forall ((@x0py1223 Term)(@x1py1347 Term)(@x2py1019 Term)(@x3py738 Term)(@x4py537 Term)(@x5py418 Term)(@x6py301 Term)) (! (= (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT FStar.Pervasives.Native.tuple7@tok @x0py1223) @x1py1347) @x2py1019) @x3py738) @x4py537) @x5py418) @x6py301) (FStar.Pervasives.Native.tuple7 @x0py1223 @x1py1347 @x2py1019 @x3py738 @x4py537 @x5py418 @x6py301)) :pattern ((ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT FStar.Pervasives.Native.tuple7@tok @x0py1223) @x1py1347) @x2py1019) @x3py738) @x4py537) @x5py418) @x6py301)) :pattern ((FStar.Pervasives.Native.tuple7 @x0py1223 @x1py1347 @x2py1019 @x3py738 @x4py537 @x5py418 @x6py301)) )) :named token_correspondence_FStar.Pervasives.Native.tuple7@tok))
(assert (! (forall ((@x0py1224 Term)(@x1py1348 Term)(@x2py1020 Term)(@x3py739 Term)(@x4py538 Term)(@x5py419 Term)(@x6py302 Term)(@x7py236 Term)) (! (= (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT FStar.Pervasives.Native.tuple8@tok @x0py1224) @x1py1348) @x2py1020) @x3py739) @x4py538) @x5py419) @x6py302) @x7py236) (FStar.Pervasives.Native.tuple8 @x0py1224 @x1py1348 @x2py1020 @x3py739 @x4py538 @x5py419 @x6py302 @x7py236)) :pattern ((ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT FStar.Pervasives.Native.tuple8@tok @x0py1224) @x1py1348) @x2py1020) @x3py739) @x4py538) @x5py419) @x6py302) @x7py236)) :pattern ((FStar.Pervasives.Native.tuple8 @x0py1224 @x1py1348 @x2py1020 @x3py739 @x4py538 @x5py419 @x6py302 @x7py236)) )) :named token_correspondence_FStar.Pervasives.Native.tuple8@tok))
(assert (! (forall ((@x0py1225 Term)(@x1py1349 Term)) (! (= (ApplyTT (ApplyTT FStar.Pervasives.Native.UnfoldAttr@tok @x0py1225) @x1py1349) (FStar.Pervasives.Native.UnfoldAttr @x0py1225 @x1py1349)) :pattern ((ApplyTT (ApplyTT FStar.Pervasives.Native.UnfoldAttr@tok @x0py1225) @x1py1349)) )) :named token_correspondence_FStar.Pervasives.Native.UnfoldAttr))
(assert (! (forall ((@x0py1226 Term)) (! (= (ApplyTT FStar.Pervasives.Native.UnfoldFully@tok @x0py1226) (FStar.Pervasives.Native.UnfoldFully @x0py1226)) :pattern ((ApplyTT FStar.Pervasives.Native.UnfoldFully@tok @x0py1226)) )) :named token_correspondence_FStar.Pervasives.Native.UnfoldFully))
(assert (! (forall ((@x0py1227 Term)) (! (= (ApplyTT FStar.Pervasives.Native.UnfoldOnly@tok @x0py1227) (FStar.Pervasives.Native.UnfoldOnly @x0py1227)) :pattern ((ApplyTT FStar.Pervasives.Native.UnfoldOnly@tok @x0py1227)) )) :named token_correspondence_FStar.Pervasives.Native.UnfoldOnly))
(assert (! (forall ((@x0py1228 Term)) (! (= (ApplyTT FStar.Pervasives.Native.uu___is_Delta@tok @x0py1228) (FStar.Pervasives.Native.uu___is_Delta @x0py1228)) :pattern ((ApplyTT FStar.Pervasives.Native.uu___is_Delta@tok @x0py1228)) )) :named token_correspondence_FStar.Pervasives.Native.uu___is_Delta))
(assert (! (forall ((@x0py1229 Term)) (! (= (ApplyTT FStar.Pervasives.Native.uu___is_HNF@tok @x0py1229) (FStar.Pervasives.Native.uu___is_HNF @x0py1229)) :pattern ((ApplyTT FStar.Pervasives.Native.uu___is_HNF@tok @x0py1229)) )) :named token_correspondence_FStar.Pervasives.Native.uu___is_HNF))
(assert (! (forall ((@x0py1230 Term)) (! (= (ApplyTT FStar.Pervasives.Native.uu___is_Iota@tok @x0py1230) (FStar.Pervasives.Native.uu___is_Iota @x0py1230)) :pattern ((ApplyTT FStar.Pervasives.Native.uu___is_Iota@tok @x0py1230)) )) :named token_correspondence_FStar.Pervasives.Native.uu___is_Iota))
(assert (! (forall ((@x0py1231 Term)(@x1py1350 Term)(@x2py1021 Term)) (! (= (ApplyTT (ApplyTT (ApplyTT FStar.Pervasives.Native.uu___is_Mktuple2@tok @x0py1231) @x1py1350) @x2py1021) (FStar.Pervasives.Native.uu___is_Mktuple2 @x0py1231 @x1py1350 @x2py1021)) :pattern ((ApplyTT (ApplyTT (ApplyTT FStar.Pervasives.Native.uu___is_Mktuple2@tok @x0py1231) @x1py1350) @x2py1021)) )) :named token_correspondence_FStar.Pervasives.Native.uu___is_Mktuple2))
(assert (! (forall ((@x0py1232 Term)(@x1py1351 Term)(@x2py1022 Term)(@x3py740 Term)) (! (= (ApplyTT (ApplyTT (ApplyTT (ApplyTT FStar.Pervasives.Native.uu___is_Mktuple3@tok @x0py1232) @x1py1351) @x2py1022) @x3py740) (FStar.Pervasives.Native.uu___is_Mktuple3 @x0py1232 @x1py1351 @x2py1022 @x3py740)) :pattern ((ApplyTT (ApplyTT (ApplyTT (ApplyTT FStar.Pervasives.Native.uu___is_Mktuple3@tok @x0py1232) @x1py1351) @x2py1022) @x3py740)) )) :named token_correspondence_FStar.Pervasives.Native.uu___is_Mktuple3))
(assert (! (forall ((@x0py1233 Term)(@x1py1352 Term)(@x2py1023 Term)(@x3py741 Term)(@x4py539 Term)) (! (= (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT FStar.Pervasives.Native.uu___is_Mktuple4@tok @x0py1233) @x1py1352) @x2py1023) @x3py741) @x4py539) (FStar.Pervasives.Native.uu___is_Mktuple4 @x0py1233 @x1py1352 @x2py1023 @x3py741 @x4py539)) :pattern ((ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT FStar.Pervasives.Native.uu___is_Mktuple4@tok @x0py1233) @x1py1352) @x2py1023) @x3py741) @x4py539)) )) :named token_correspondence_FStar.Pervasives.Native.uu___is_Mktuple4))
(assert (! (forall ((@x0py1234 Term)(@x1py1353 Term)(@x2py1024 Term)(@x3py742 Term)(@x4py540 Term)(@x5py420 Term)) (! (= (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT FStar.Pervasives.Native.uu___is_Mktuple5@tok @x0py1234) @x1py1353) @x2py1024) @x3py742) @x4py540) @x5py420) (FStar.Pervasives.Native.uu___is_Mktuple5 @x0py1234 @x1py1353 @x2py1024 @x3py742 @x4py540 @x5py420)) :pattern ((ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT FStar.Pervasives.Native.uu___is_Mktuple5@tok @x0py1234) @x1py1353) @x2py1024) @x3py742) @x4py540) @x5py420)) )) :named token_correspondence_FStar.Pervasives.Native.uu___is_Mktuple5))
(assert (! (forall ((@x0py1235 Term)(@x1py1354 Term)(@x2py1025 Term)(@x3py743 Term)(@x4py541 Term)(@x5py421 Term)(@x6py303 Term)) (! (= (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT FStar.Pervasives.Native.uu___is_Mktuple6@tok @x0py1235) @x1py1354) @x2py1025) @x3py743) @x4py541) @x5py421) @x6py303) (FStar.Pervasives.Native.uu___is_Mktuple6 @x0py1235 @x1py1354 @x2py1025 @x3py743 @x4py541 @x5py421 @x6py303)) :pattern ((ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT FStar.Pervasives.Native.uu___is_Mktuple6@tok @x0py1235) @x1py1354) @x2py1025) @x3py743) @x4py541) @x5py421) @x6py303)) )) :named token_correspondence_FStar.Pervasives.Native.uu___is_Mktuple6))
(assert (! (forall ((@x0py1236 Term)(@x1py1355 Term)(@x2py1026 Term)(@x3py744 Term)(@x4py542 Term)(@x5py422 Term)(@x6py304 Term)(@x7py237 Term)) (! (= (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT FStar.Pervasives.Native.uu___is_Mktuple7@tok @x0py1236) @x1py1355) @x2py1026) @x3py744) @x4py542) @x5py422) @x6py304) @x7py237) (FStar.Pervasives.Native.uu___is_Mktuple7 @x0py1236 @x1py1355 @x2py1026 @x3py744 @x4py542 @x5py422 @x6py304 @x7py237)) :pattern ((ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT FStar.Pervasives.Native.uu___is_Mktuple7@tok @x0py1236) @x1py1355) @x2py1026) @x3py744) @x4py542) @x5py422) @x6py304) @x7py237)) )) :named token_correspondence_FStar.Pervasives.Native.uu___is_Mktuple7))
(assert (! (forall ((@x0py1237 Term)(@x1py1356 Term)(@x2py1027 Term)(@x3py745 Term)(@x4py543 Term)(@x5py423 Term)(@x6py305 Term)(@x7py238 Term)(@x8py157 Term)) (! (= (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT FStar.Pervasives.Native.uu___is_Mktuple8@tok @x0py1237) @x1py1356) @x2py1027) @x3py745) @x4py543) @x5py423) @x6py305) @x7py238) @x8py157) (FStar.Pervasives.Native.uu___is_Mktuple8 @x0py1237 @x1py1356 @x2py1027 @x3py745 @x4py543 @x5py423 @x6py305 @x7py238 @x8py157)) :pattern ((ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT FStar.Pervasives.Native.uu___is_Mktuple8@tok @x0py1237) @x1py1356) @x2py1027) @x3py745) @x4py543) @x5py423) @x6py305) @x7py238) @x8py157)) )) :named token_correspondence_FStar.Pervasives.Native.uu___is_Mktuple8))
(assert (! (forall ((@x0py1238 Term)(@x1py1357 Term)) (! (= (ApplyTT (ApplyTT FStar.Pervasives.Native.uu___is_None@tok @x0py1238) @x1py1357) (FStar.Pervasives.Native.uu___is_None @x0py1238 @x1py1357)) :pattern ((ApplyTT (ApplyTT FStar.Pervasives.Native.uu___is_None@tok @x0py1238) @x1py1357)) )) :named token_correspondence_FStar.Pervasives.Native.uu___is_None))
(assert (! (forall ((@x0py1239 Term)) (! (= (ApplyTT FStar.Pervasives.Native.uu___is_Primops@tok @x0py1239) (FStar.Pervasives.Native.uu___is_Primops @x0py1239)) :pattern ((ApplyTT FStar.Pervasives.Native.uu___is_Primops@tok @x0py1239)) )) :named token_correspondence_FStar.Pervasives.Native.uu___is_Primops))
(assert (! (forall ((@x0py1240 Term)) (! (= (ApplyTT FStar.Pervasives.Native.uu___is_Simpl@tok @x0py1240) (FStar.Pervasives.Native.uu___is_Simpl @x0py1240)) :pattern ((ApplyTT FStar.Pervasives.Native.uu___is_Simpl@tok @x0py1240)) )) :named token_correspondence_FStar.Pervasives.Native.uu___is_Simpl))
(assert (! (forall ((@x0py1241 Term)(@x1py1358 Term)) (! (= (ApplyTT (ApplyTT FStar.Pervasives.Native.uu___is_Some@tok @x0py1241) @x1py1358) (FStar.Pervasives.Native.uu___is_Some @x0py1241 @x1py1358)) :pattern ((ApplyTT (ApplyTT FStar.Pervasives.Native.uu___is_Some@tok @x0py1241) @x1py1358)) )) :named token_correspondence_FStar.Pervasives.Native.uu___is_Some))
(assert (! (forall ((@x0py1242 Term)) (! (= (ApplyTT FStar.Pervasives.Native.uu___is_UnfoldAttr@tok @x0py1242) (FStar.Pervasives.Native.uu___is_UnfoldAttr @x0py1242)) :pattern ((ApplyTT FStar.Pervasives.Native.uu___is_UnfoldAttr@tok @x0py1242)) )) :named token_correspondence_FStar.Pervasives.Native.uu___is_UnfoldAttr))
(assert (! (forall ((@x0py1243 Term)) (! (= (ApplyTT FStar.Pervasives.Native.uu___is_UnfoldFully@tok @x0py1243) (FStar.Pervasives.Native.uu___is_UnfoldFully @x0py1243)) :pattern ((ApplyTT FStar.Pervasives.Native.uu___is_UnfoldFully@tok @x0py1243)) )) :named token_correspondence_FStar.Pervasives.Native.uu___is_UnfoldFully))
(assert (! (forall ((@x0py1244 Term)) (! (= (ApplyTT FStar.Pervasives.Native.uu___is_UnfoldOnly@tok @x0py1244) (FStar.Pervasives.Native.uu___is_UnfoldOnly @x0py1244)) :pattern ((ApplyTT FStar.Pervasives.Native.uu___is_UnfoldOnly@tok @x0py1244)) )) :named token_correspondence_FStar.Pervasives.Native.uu___is_UnfoldOnly))
(assert (! (forall ((@x0py1245 Term)) (! (= (ApplyTT FStar.Pervasives.Native.uu___is_Weak@tok @x0py1245) (FStar.Pervasives.Native.uu___is_Weak @x0py1245)) :pattern ((ApplyTT FStar.Pervasives.Native.uu___is_Weak@tok @x0py1245)) )) :named token_correspondence_FStar.Pervasives.Native.uu___is_Weak))
(assert (! (forall ((@x0py1246 Term)) (! (= (ApplyTT FStar.Pervasives.Native.uu___is_Zeta@tok @x0py1246) (FStar.Pervasives.Native.uu___is_Zeta @x0py1246)) :pattern ((ApplyTT FStar.Pervasives.Native.uu___is_Zeta@tok @x0py1246)) )) :named token_correspondence_FStar.Pervasives.Native.uu___is_Zeta))
(assert (! (forall ((@x0py1247 Term)(@x1py1359 Term)) (! (= (ApplyTT (ApplyTT FStar.Pervasives.Native.with_type@tok @x0py1247) @x1py1359) (FStar.Pervasives.Native.with_type @x0py1247 @x1py1359)) :pattern ((ApplyTT (ApplyTT FStar.Pervasives.Native.with_type@tok @x0py1247) @x1py1359)) )) :named token_correspondence_FStar.Pervasives.Native.with_type))
(assert (! (forall ((@x0py1248 Term)) (! (= (ApplyTT FStar.Pervasives.result@tok @x0py1248) (FStar.Pervasives.result @x0py1248)) :pattern ((ApplyTT FStar.Pervasives.result@tok @x0py1248)) :pattern ((FStar.Pervasives.result @x0py1248)) )) :named token_correspondence_FStar.Pervasives.result@tok))
(assert (! (forall ((@x0py1249 Term)(@x1py1360 Term)(@x2py1028 Term)(@x3py746 Term)(@x4py544 Term)(@x5py424 Term)) (! (= (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT FStar.Pervasives.st_assert_p@tok @x0py1249) @x1py1360) @x2py1028) @x3py746) @x4py544) @x5py424) (FStar.Pervasives.st_assert_p @x0py1249 @x1py1360 @x2py1028 @x3py746 @x4py544 @x5py424)) :pattern ((ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT FStar.Pervasives.st_assert_p@tok @x0py1249) @x1py1360) @x2py1028) @x3py746) @x4py544) @x5py424)) )) :named token_correspondence_FStar.Pervasives.st_assert_p))
(assert (! (forall ((@x0py1250 Term)(@x1py1361 Term)(@x2py1029 Term)(@x3py747 Term)(@x4py545 Term)(@x5py425 Term)) (! (= (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT FStar.Pervasives.st_assume_p@tok @x0py1250) @x1py1361) @x2py1029) @x3py747) @x4py545) @x5py425) (FStar.Pervasives.st_assume_p @x0py1250 @x1py1361 @x2py1029 @x3py747 @x4py545 @x5py425)) :pattern ((ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT FStar.Pervasives.st_assume_p@tok @x0py1250) @x1py1361) @x2py1029) @x3py747) @x4py545) @x5py425)) )) :named token_correspondence_FStar.Pervasives.st_assume_p))
(assert (! (forall ((@x0py1251 Term)(@x1py1362 Term)(@x2py1030 Term)(@x3py748 Term)(@x4py546 Term)(@x5py426 Term)(@x6py306 Term)(@x7py239 Term)) (! (= (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT FStar.Pervasives.st_bind_wp@tok @x0py1251) @x1py1362) @x2py1030) @x3py748) @x4py546) @x5py426) @x6py306) @x7py239) (FStar.Pervasives.st_bind_wp @x0py1251 @x1py1362 @x2py1030 @x3py748 @x4py546 @x5py426 @x6py306 @x7py239)) :pattern ((ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT FStar.Pervasives.st_bind_wp@tok @x0py1251) @x1py1362) @x2py1030) @x3py748) @x4py546) @x5py426) @x6py306) @x7py239)) )) :named token_correspondence_FStar.Pervasives.st_bind_wp))
(assert (! (forall ((@x0py1252 Term)(@x1py1363 Term)(@x2py1031 Term)(@x3py749 Term)(@x4py547 Term)(@x5py427 Term)) (! (= (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT FStar.Pervasives.st_close_wp@tok @x0py1252) @x1py1363) @x2py1031) @x3py749) @x4py547) @x5py427) (FStar.Pervasives.st_close_wp @x0py1252 @x1py1363 @x2py1031 @x3py749 @x4py547 @x5py427)) :pattern ((ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT FStar.Pervasives.st_close_wp@tok @x0py1252) @x1py1363) @x2py1031) @x3py749) @x4py547) @x5py427)) )) :named token_correspondence_FStar.Pervasives.st_close_wp))
(assert (! (forall ((@x0py1253 Term)(@x1py1364 Term)(@x2py1032 Term)(@x3py750 Term)(@x4py548 Term)(@x5py428 Term)(@x6py307 Term)) (! (= (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT FStar.Pervasives.st_if_then_else@tok @x0py1253) @x1py1364) @x2py1032) @x3py750) @x4py548) @x5py428) @x6py307) (FStar.Pervasives.st_if_then_else @x0py1253 @x1py1364 @x2py1032 @x3py750 @x4py548 @x5py428 @x6py307)) :pattern ((ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT FStar.Pervasives.st_if_then_else@tok @x0py1253) @x1py1364) @x2py1032) @x3py750) @x4py548) @x5py428) @x6py307)) )) :named token_correspondence_FStar.Pervasives.st_if_then_else))
(assert (! (forall ((@x0py1254 Term)(@x1py1365 Term)(@x2py1033 Term)(@x3py751 Term)(@x4py549 Term)) (! (= (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT FStar.Pervasives.st_ite_wp@tok @x0py1254) @x1py1365) @x2py1033) @x3py751) @x4py549) (FStar.Pervasives.st_ite_wp @x0py1254 @x1py1365 @x2py1033 @x3py751 @x4py549)) :pattern ((ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT FStar.Pervasives.st_ite_wp@tok @x0py1254) @x1py1365) @x2py1033) @x3py751) @x4py549)) )) :named token_correspondence_FStar.Pervasives.st_ite_wp))
(assert (! (forall ((@x0py1255 Term)(@x1py1366 Term)(@x2py1034 Term)(@x3py752 Term)) (! (= (ApplyTT (ApplyTT (ApplyTT (ApplyTT FStar.Pervasives.st_null_wp@tok @x0py1255) @x1py1366) @x2py1034) @x3py752) (FStar.Pervasives.st_null_wp @x0py1255 @x1py1366 @x2py1034 @x3py752)) :pattern ((ApplyTT (ApplyTT (ApplyTT (ApplyTT FStar.Pervasives.st_null_wp@tok @x0py1255) @x1py1366) @x2py1034) @x3py752)) )) :named token_correspondence_FStar.Pervasives.st_null_wp))
(assert (! (forall ((@x0py1256 Term)(@x1py1367 Term)) (! (= (ApplyTT (ApplyTT FStar.Pervasives.st_post_h@tok @x0py1256) @x1py1367) (FStar.Pervasives.st_post_h @x0py1256 @x1py1367)) :pattern ((ApplyTT (ApplyTT FStar.Pervasives.st_post_h@tok @x0py1256) @x1py1367)) )) :named token_correspondence_FStar.Pervasives.st_post_h))
(assert (! (forall ((@x0py1257 Term)(@x1py1368 Term)(@x2py1035 Term)) (! (= (ApplyTT (ApplyTT (ApplyTT FStar.Pervasives.st_post_h_@tok @x0py1257) @x1py1368) @x2py1035) (FStar.Pervasives.st_post_h_ @x0py1257 @x1py1368 @x2py1035)) :pattern ((ApplyTT (ApplyTT (ApplyTT FStar.Pervasives.st_post_h_@tok @x0py1257) @x1py1368) @x2py1035)) )) :named token_correspondence_FStar.Pervasives.st_post_h_))
(assert (! (forall ((@x0py1258 Term)) (! (= (ApplyTT FStar.Pervasives.st_pre_h@tok @x0py1258) (FStar.Pervasives.st_pre_h @x0py1258)) :pattern ((ApplyTT FStar.Pervasives.st_pre_h@tok @x0py1258)) )) :named token_correspondence_FStar.Pervasives.st_pre_h))
(assert (! (forall ((@x0py1259 Term)(@x1py1369 Term)(@x2py1036 Term)(@x3py753 Term)) (! (= (ApplyTT (ApplyTT (ApplyTT (ApplyTT FStar.Pervasives.st_return@tok @x0py1259) @x1py1369) @x2py1036) @x3py753) (FStar.Pervasives.st_return @x0py1259 @x1py1369 @x2py1036 @x3py753)) :pattern ((ApplyTT (ApplyTT (ApplyTT (ApplyTT FStar.Pervasives.st_return@tok @x0py1259) @x1py1369) @x2py1036) @x3py753)) )) :named token_correspondence_FStar.Pervasives.st_return))
(assert (! (forall ((@x0py1260 Term)(@x1py1370 Term)(@x2py1037 Term)(@x3py754 Term)) (! (= (ApplyTT (ApplyTT (ApplyTT (ApplyTT FStar.Pervasives.st_stronger@tok @x0py1260) @x1py1370) @x2py1037) @x3py754) (FStar.Pervasives.st_stronger @x0py1260 @x1py1370 @x2py1037 @x3py754)) :pattern ((ApplyTT (ApplyTT (ApplyTT (ApplyTT FStar.Pervasives.st_stronger@tok @x0py1260) @x1py1370) @x2py1037) @x3py754)) )) :named token_correspondence_FStar.Pervasives.st_stronger))
(assert (! (forall ((@x0py1261 Term)(@x1py1371 Term)(@x2py1038 Term)) (! (= (ApplyTT (ApplyTT (ApplyTT FStar.Pervasives.st_trivial@tok @x0py1261) @x1py1371) @x2py1038) (FStar.Pervasives.st_trivial @x0py1261 @x1py1371 @x2py1038)) :pattern ((ApplyTT (ApplyTT (ApplyTT FStar.Pervasives.st_trivial@tok @x0py1261) @x1py1371) @x2py1038)) )) :named token_correspondence_FStar.Pervasives.st_trivial))
(assert (! (forall ((@x0py1262 Term)(@x1py1372 Term)) (! (= (ApplyTT (ApplyTT FStar.Pervasives.st_wp_h@tok @x0py1262) @x1py1372) (FStar.Pervasives.st_wp_h @x0py1262 @x1py1372)) :pattern ((ApplyTT (ApplyTT FStar.Pervasives.st_wp_h@tok @x0py1262) @x1py1372)) )) :named token_correspondence_FStar.Pervasives.st_wp_h))
(assert (! (forall ((@x0py1263 Term)) (! (= (ApplyTT FStar.Pervasives.uu___is_CConst@tok @x0py1263) (FStar.Pervasives.uu___is_CConst @x0py1263)) :pattern ((ApplyTT FStar.Pervasives.uu___is_CConst@tok @x0py1263)) )) :named token_correspondence_FStar.Pervasives.uu___is_CConst))
(assert (! (forall ((@x0py1264 Term)) (! (= (ApplyTT FStar.Pervasives.uu___is_CEpilogue@tok @x0py1264) (FStar.Pervasives.uu___is_CEpilogue @x0py1264)) :pattern ((ApplyTT FStar.Pervasives.uu___is_CEpilogue@tok @x0py1264)) )) :named token_correspondence_FStar.Pervasives.uu___is_CEpilogue))
(assert (! (forall ((@x0py1265 Term)) (! (= (ApplyTT FStar.Pervasives.uu___is_CInline@tok @x0py1265) (FStar.Pervasives.uu___is_CInline @x0py1265)) :pattern ((ApplyTT FStar.Pervasives.uu___is_CInline@tok @x0py1265)) )) :named token_correspondence_FStar.Pervasives.uu___is_CInline))
(assert (! (forall ((@x0py1266 Term)) (! (= (ApplyTT FStar.Pervasives.uu___is_Comment@tok @x0py1266) (FStar.Pervasives.uu___is_Comment @x0py1266)) :pattern ((ApplyTT FStar.Pervasives.uu___is_Comment@tok @x0py1266)) )) :named token_correspondence_FStar.Pervasives.uu___is_Comment))
(assert (! (forall ((@x0py1267 Term)) (! (= (ApplyTT FStar.Pervasives.uu___is_CPrologue@tok @x0py1267) (FStar.Pervasives.uu___is_CPrologue @x0py1267)) :pattern ((ApplyTT FStar.Pervasives.uu___is_CPrologue@tok @x0py1267)) )) :named token_correspondence_FStar.Pervasives.uu___is_CPrologue))
(assert (! (forall ((@x0py1268 Term)(@x1py1373 Term)) (! (= (ApplyTT (ApplyTT FStar.Pervasives.uu___is_E@tok @x0py1268) @x1py1373) (FStar.Pervasives.uu___is_E @x0py1268 @x1py1373)) :pattern ((ApplyTT (ApplyTT FStar.Pervasives.uu___is_E@tok @x0py1268) @x1py1373)) )) :named token_correspondence_FStar.Pervasives.uu___is_E))
(assert (! (forall ((@x0py1269 Term)(@x1py1374 Term)) (! (= (ApplyTT (ApplyTT FStar.Pervasives.uu___is_Err@tok @x0py1269) @x1py1374) (FStar.Pervasives.uu___is_Err @x0py1269 @x1py1374)) :pattern ((ApplyTT (ApplyTT FStar.Pervasives.uu___is_Err@tok @x0py1269) @x1py1374)) )) :named token_correspondence_FStar.Pervasives.uu___is_Err))
(assert (! (forall ((@x0py1270 Term)) (! (= (ApplyTT FStar.Pervasives.uu___is_Gc@tok @x0py1270) (FStar.Pervasives.uu___is_Gc @x0py1270)) :pattern ((ApplyTT FStar.Pervasives.uu___is_Gc@tok @x0py1270)) )) :named token_correspondence_FStar.Pervasives.uu___is_Gc))
(assert (! (forall ((@x0py1271 Term)(@x1py1375 Term)(@x2py1039 Term)) (! (= (ApplyTT (ApplyTT (ApplyTT FStar.Pervasives.uu___is_Inl@tok @x0py1271) @x1py1375) @x2py1039) (FStar.Pervasives.uu___is_Inl @x0py1271 @x1py1375 @x2py1039)) :pattern ((ApplyTT (ApplyTT (ApplyTT FStar.Pervasives.uu___is_Inl@tok @x0py1271) @x1py1375) @x2py1039)) )) :named token_correspondence_FStar.Pervasives.uu___is_Inl))
(assert (! (forall ((@x0py1272 Term)(@x1py1376 Term)(@x2py1040 Term)) (! (= (ApplyTT (ApplyTT (ApplyTT FStar.Pervasives.uu___is_Inr@tok @x0py1272) @x1py1376) @x2py1040) (FStar.Pervasives.uu___is_Inr @x0py1272 @x1py1376 @x2py1040)) :pattern ((ApplyTT (ApplyTT (ApplyTT FStar.Pervasives.uu___is_Inr@tok @x0py1272) @x1py1376) @x2py1040)) )) :named token_correspondence_FStar.Pervasives.uu___is_Inr))
(assert (! (forall ((@x0py1273 Term)(@x1py1377 Term)(@x2py1041 Term)(@x3py755 Term)) (! (= (ApplyTT (ApplyTT (ApplyTT (ApplyTT FStar.Pervasives.uu___is_Mkdtuple3@tok @x0py1273) @x1py1377) @x2py1041) @x3py755) (FStar.Pervasives.uu___is_Mkdtuple3 @x0py1273 @x1py1377 @x2py1041 @x3py755)) :pattern ((ApplyTT (ApplyTT (ApplyTT (ApplyTT FStar.Pervasives.uu___is_Mkdtuple3@tok @x0py1273) @x1py1377) @x2py1041) @x3py755)) )) :named token_correspondence_FStar.Pervasives.uu___is_Mkdtuple3))
(assert (! (forall ((@x0py1274 Term)(@x1py1378 Term)(@x2py1042 Term)(@x3py756 Term)(@x4py550 Term)) (! (= (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT FStar.Pervasives.uu___is_Mkdtuple4@tok @x0py1274) @x1py1378) @x2py1042) @x3py756) @x4py550) (FStar.Pervasives.uu___is_Mkdtuple4 @x0py1274 @x1py1378 @x2py1042 @x3py756 @x4py550)) :pattern ((ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT FStar.Pervasives.uu___is_Mkdtuple4@tok @x0py1274) @x1py1378) @x2py1042) @x3py756) @x4py550)) )) :named token_correspondence_FStar.Pervasives.uu___is_Mkdtuple4))
(assert (! (forall ((@x0py1275 Term)) (! (= (ApplyTT FStar.Pervasives.uu___is_PpxDerivingShow@tok @x0py1275) (FStar.Pervasives.uu___is_PpxDerivingShow @x0py1275)) :pattern ((ApplyTT FStar.Pervasives.uu___is_PpxDerivingShow@tok @x0py1275)) )) :named token_correspondence_FStar.Pervasives.uu___is_PpxDerivingShow))
(assert (! (forall ((@x0py1276 Term)) (! (= (ApplyTT FStar.Pervasives.uu___is_PpxDerivingShowConstant@tok @x0py1276) (FStar.Pervasives.uu___is_PpxDerivingShowConstant @x0py1276)) :pattern ((ApplyTT FStar.Pervasives.uu___is_PpxDerivingShowConstant@tok @x0py1276)) )) :named token_correspondence_FStar.Pervasives.uu___is_PpxDerivingShowConstant))
(assert (! (forall ((@x0py1277 Term)) (! (= (ApplyTT FStar.Pervasives.uu___is_PpxDerivingYoJson@tok @x0py1277) (FStar.Pervasives.uu___is_PpxDerivingYoJson @x0py1277)) :pattern ((ApplyTT FStar.Pervasives.uu___is_PpxDerivingYoJson@tok @x0py1277)) )) :named token_correspondence_FStar.Pervasives.uu___is_PpxDerivingYoJson))
(assert (! (forall ((@x0py1278 Term)) (! (= (ApplyTT FStar.Pervasives.uu___is_Substitute@tok @x0py1278) (FStar.Pervasives.uu___is_Substitute @x0py1278)) :pattern ((ApplyTT FStar.Pervasives.uu___is_Substitute@tok @x0py1278)) )) :named token_correspondence_FStar.Pervasives.uu___is_Substitute))
(assert (! (forall ((@x0py1279 Term)(@x1py1379 Term)) (! (= (ApplyTT (ApplyTT FStar.Pervasives.uu___is_V@tok @x0py1279) @x1py1379) (FStar.Pervasives.uu___is_V @x0py1279 @x1py1379)) :pattern ((ApplyTT (ApplyTT FStar.Pervasives.uu___is_V@tok @x0py1279) @x1py1379)) )) :named token_correspondence_FStar.Pervasives.uu___is_V))
(assert (! (forall ((@x0py1280 Term)(@x1py1380 Term)(@x2py1043 Term)) (! (= (ApplyTT (ApplyTT (ApplyTT Prims.__proj__And__item___0@tok @x0py1280) @x1py1380) @x2py1043) (Prims.__proj__And__item___0 @x0py1280 @x1py1380 @x2py1043)) :pattern ((ApplyTT (ApplyTT (ApplyTT Prims.__proj__And__item___0@tok @x0py1280) @x1py1380) @x2py1043)) )) :named token_correspondence_Prims.__proj__And__item___0))
(assert (! (forall ((@x0py1281 Term)(@x1py1381 Term)(@x2py1044 Term)) (! (= (ApplyTT (ApplyTT (ApplyTT Prims.__proj__And__item___1@tok @x0py1281) @x1py1381) @x2py1044) (Prims.__proj__And__item___1 @x0py1281 @x1py1381 @x2py1044)) :pattern ((ApplyTT (ApplyTT (ApplyTT Prims.__proj__And__item___1@tok @x0py1281) @x1py1381) @x2py1044)) )) :named token_correspondence_Prims.__proj__And__item___1))
(assert (! (forall ((@x0py1282 Term)(@x1py1382 Term)) (! (= (ApplyTT (ApplyTT Prims.__proj__Cons__item__hd@tok @x0py1282) @x1py1382) (Prims.__proj__Cons__item__hd @x0py1282 @x1py1382)) :pattern ((ApplyTT (ApplyTT Prims.__proj__Cons__item__hd@tok @x0py1282) @x1py1382)) )) :named token_correspondence_Prims.__proj__Cons__item__hd))
(assert (! (forall ((@x0py1283 Term)(@x1py1383 Term)) (! (= (ApplyTT (ApplyTT Prims.__proj__Cons__item__tl@tok @x0py1283) @x1py1383) (Prims.__proj__Cons__item__tl @x0py1283 @x1py1383)) :pattern ((ApplyTT (ApplyTT Prims.__proj__Cons__item__tl@tok @x0py1283) @x1py1383)) )) :named token_correspondence_Prims.__proj__Cons__item__tl))
(assert (! (forall ((@x0py1284 Term)(@x1py1384 Term)(@x2py1045 Term)) (! (= (ApplyTT (ApplyTT (ApplyTT Prims.__proj__Left__item___0@tok @x0py1284) @x1py1384) @x2py1045) (Prims.__proj__Left__item___0 @x0py1284 @x1py1384 @x2py1045)) :pattern ((ApplyTT (ApplyTT (ApplyTT Prims.__proj__Left__item___0@tok @x0py1284) @x1py1384) @x2py1045)) )) :named token_correspondence_Prims.__proj__Left__item___0))
(assert (! (forall ((@x0py1285 Term)(@x1py1385 Term)(@x2py1046 Term)) (! (= (ApplyTT (ApplyTT (ApplyTT Prims.__proj__Mkdtuple2__item___1@tok @x0py1285) @x1py1385) @x2py1046) (Prims.__proj__Mkdtuple2__item___1 @x0py1285 @x1py1385 @x2py1046)) :pattern ((ApplyTT (ApplyTT (ApplyTT Prims.__proj__Mkdtuple2__item___1@tok @x0py1285) @x1py1385) @x2py1046)) )) :named token_correspondence_Prims.__proj__Mkdtuple2__item___1))
(assert (! (forall ((@x0py1286 Term)(@x1py1386 Term)(@x2py1047 Term)) (! (= (ApplyTT (ApplyTT (ApplyTT Prims.__proj__Mkdtuple2__item___2@tok @x0py1286) @x1py1386) @x2py1047) (Prims.__proj__Mkdtuple2__item___2 @x0py1286 @x1py1386 @x2py1047)) :pattern ((ApplyTT (ApplyTT (ApplyTT Prims.__proj__Mkdtuple2__item___2@tok @x0py1286) @x1py1386) @x2py1047)) )) :named token_correspondence_Prims.__proj__Mkdtuple2__item___2))
(assert (! (forall ((@x0py1287 Term)(@x1py1387 Term)(@x2py1048 Term)) (! (= (ApplyTT (ApplyTT (ApplyTT Prims.__proj__Right__item___0@tok @x0py1287) @x1py1387) @x2py1048) (Prims.__proj__Right__item___0 @x0py1287 @x1py1387 @x2py1048)) :pattern ((ApplyTT (ApplyTT (ApplyTT Prims.__proj__Right__item___0@tok @x0py1287) @x1py1387) @x2py1048)) )) :named token_correspondence_Prims.__proj__Right__item___0))
(assert (! (forall ((@x0py1288 Term)) (! (= (ApplyTT Prims._assert@tok @x0py1288) (Prims._assert @x0py1288)) :pattern ((ApplyTT Prims._assert@tok @x0py1288)) )) :named token_correspondence_Prims._assert))
(assert (! (forall ((@x0py1289 Term)) (! (= (ApplyTT Prims._assume@tok @x0py1289) (Prims._assume @x0py1289)) :pattern ((ApplyTT Prims._assume@tok @x0py1289)) )) :named token_correspondence_Prims._assume))
(assert (! (forall ((@x0py1290 Term)) (! (= (ApplyTT Prims.abs@tok @x0py1290) (Prims.abs @x0py1290)) :pattern ((ApplyTT Prims.abs@tok @x0py1290)) )) :named token_correspondence_Prims.abs))
(assert (! (forall ((@x0py1291 Term)) (! (= (ApplyTT Prims.admitP@tok @x0py1291) (Prims.admitP @x0py1291)) :pattern ((ApplyTT Prims.admitP@tok @x0py1291)) )) :named token_correspondence_Prims.admitP))
(assert (! (forall ((@x0py1292 Term)) (! (= (ApplyTT Prims.array@tok @x0py1292) (Prims.array @x0py1292)) :pattern ((ApplyTT Prims.array@tok @x0py1292)) )) :named token_correspondence_Prims.array))
(assert (! (forall ((@x0py1293 Term)(@x1py1388 Term)(@x2py1049 Term)) (! (= (ApplyTT (ApplyTT (ApplyTT Prims.as_ensures@tok @x0py1293) @x1py1388) @x2py1049) (Prims.as_ensures @x0py1293 @x1py1388 @x2py1049)) :pattern ((ApplyTT (ApplyTT (ApplyTT Prims.as_ensures@tok @x0py1293) @x1py1388) @x2py1049)) )) :named token_correspondence_Prims.as_ensures))
(assert (! (forall ((@x0py1294 Term)(@x1py1389 Term)) (! (= (ApplyTT (ApplyTT Prims.as_requires@tok @x0py1294) @x1py1389) (Prims.as_requires @x0py1294 @x1py1389)) :pattern ((ApplyTT (ApplyTT Prims.as_requires@tok @x0py1294) @x1py1389)) )) :named token_correspondence_Prims.as_requires))
(assert (! (forall ((@x0py1295 Term)) (! (= (ApplyTT Prims.assert_spinoff@tok @x0py1295) (Prims.assert_spinoff @x0py1295)) :pattern ((ApplyTT Prims.assert_spinoff@tok @x0py1295)) )) :named token_correspondence_Prims.assert_spinoff))
(assert (! (forall ((@x0py1296 Term)) (! (= (ApplyTT Prims.auto_squash@tok @x0py1296) (Prims.auto_squash @x0py1296)) :pattern ((ApplyTT Prims.auto_squash@tok @x0py1296)) )) :named token_correspondence_Prims.auto_squash))
(assert (! (forall ((@x0py1297 Term)(@x1py1390 Term)) (! (= (ApplyTT (ApplyTT Prims.c_and@tok @x0py1297) @x1py1390) (Prims.c_and @x0py1297 @x1py1390)) :pattern ((ApplyTT (ApplyTT Prims.c_and@tok @x0py1297) @x1py1390)) :pattern ((Prims.c_and @x0py1297 @x1py1390)) )) :named token_correspondence_Prims.c_and@tok))
(assert (! (forall ((@x0py1298 Term)(@x1py1391 Term)) (! (= (ApplyTT (ApplyTT Prims.c_or@tok @x0py1298) @x1py1391) (Prims.c_or @x0py1298 @x1py1391)) :pattern ((ApplyTT (ApplyTT Prims.c_or@tok @x0py1298) @x1py1391)) :pattern ((Prims.c_or @x0py1298 @x1py1391)) )) :named token_correspondence_Prims.c_or@tok))
(assert (! (forall ((@x0py1299 Term)) (! (= (ApplyTT Prims.cut@tok @x0py1299) (Prims.cut @x0py1299)) :pattern ((ApplyTT Prims.cut@tok @x0py1299)) )) :named token_correspondence_Prims.cut))
(assert (! (forall ((@x0py1300 Term)(@x1py1392 Term)) (! (= (ApplyTT (ApplyTT Prims.decreases@tok @x0py1300) @x1py1392) (Prims.decreases @x0py1300 @x1py1392)) :pattern ((ApplyTT (ApplyTT Prims.decreases@tok @x0py1300) @x1py1392)) )) :named token_correspondence_Prims.decreases))
(assert (! (forall ((@x0py1301 Term)(@x1py1393 Term)) (! (= (ApplyTT (ApplyTT Prims.dtuple2@tok @x0py1301) @x1py1393) (Prims.dtuple2 @x0py1301 @x1py1393)) :pattern ((ApplyTT (ApplyTT Prims.dtuple2@tok @x0py1301) @x1py1393)) :pattern ((Prims.dtuple2 @x0py1301 @x1py1393)) )) :named token_correspondence_Prims.dtuple2@tok))
(assert (! (forall ((@x0py1302 Term)(@x1py1394 Term)(@x2py1050 Term)) (! (= (ApplyTT (ApplyTT (ApplyTT Prims.eq2@tok @x0py1302) @x1py1394) @x2py1050) (Prims.eq2 @x0py1302 @x1py1394 @x2py1050)) :pattern ((ApplyTT (ApplyTT (ApplyTT Prims.eq2@tok @x0py1302) @x1py1394) @x2py1050)) )) :named token_correspondence_Prims.eq2))
(assert (! (forall ((@x0py1303 Term)(@x1py1395 Term)(@x2py1051 Term)(@x3py757 Term)) (! (= (ApplyTT (ApplyTT (ApplyTT (ApplyTT Prims.eq3@tok @x0py1303) @x1py1395) @x2py1051) @x3py757) (Prims.eq3 @x0py1303 @x1py1395 @x2py1051 @x3py757)) :pattern ((ApplyTT (ApplyTT (ApplyTT (ApplyTT Prims.eq3@tok @x0py1303) @x1py1395) @x2py1051) @x3py757)) )) :named token_correspondence_Prims.eq3))
(assert (! (forall ((@x0py1304 Term)(@x1py1396 Term)(@x2py1052 Term)) (! (= (ApplyTT (ApplyTT (ApplyTT Prims.equals@tok @x0py1304) @x1py1396) @x2py1052) (Prims.equals @x0py1304 @x1py1396 @x2py1052)) :pattern ((ApplyTT (ApplyTT (ApplyTT Prims.equals@tok @x0py1304) @x1py1396) @x2py1052)) :pattern ((Prims.equals @x0py1304 @x1py1396 @x2py1052)) )) :named token_correspondence_Prims.equals@tok))
(assert (! (forall ((@x0py1305 Term)) (! (= (ApplyTT Prims.guard_free@tok @x0py1305) (Prims.guard_free @x0py1305)) :pattern ((ApplyTT Prims.guard_free@tok @x0py1305)) )) :named token_correspondence_Prims.guard_free))
(assert (! (forall ((@x0py1306 Term)(@x1py1397 Term)(@x2py1053 Term)(@x3py758 Term)) (! (= (ApplyTT (ApplyTT (ApplyTT (ApplyTT Prims.h_equals@tok @x0py1306) @x1py1397) @x2py1053) @x3py758) (Prims.h_equals @x0py1306 @x1py1397 @x2py1053 @x3py758)) :pattern ((ApplyTT (ApplyTT (ApplyTT (ApplyTT Prims.h_equals@tok @x0py1306) @x1py1397) @x2py1053) @x3py758)) :pattern ((Prims.h_equals @x0py1306 @x1py1397 @x2py1053 @x3py758)) )) :named token_correspondence_Prims.h_equals@tok))
(assert (! (forall ((@x0py1307 Term)(@x1py1398 Term)(@x2py1054 Term)) (! (= (ApplyTT (ApplyTT (ApplyTT Prims.has_type@tok @x0py1307) @x1py1398) @x2py1054) (Prims.has_type @x0py1307 @x1py1398 @x2py1054)) :pattern ((ApplyTT (ApplyTT (ApplyTT Prims.has_type@tok @x0py1307) @x1py1398) @x2py1054)) )) :named token_correspondence_Prims.has_type))
(assert (! (forall ((@x0py1308 Term)) (! (= (ApplyTT Prims.hasEq@tok @x0py1308) (Prims.hasEq @x0py1308)) :pattern ((ApplyTT Prims.hasEq@tok @x0py1308)) )) :named token_correspondence_Prims.hasEq))
(assert (! (forall ((@x0py1309 Term)(@x1py1399 Term)) (! (= (ApplyTT (ApplyTT Prims.l_and@tok @x0py1309) @x1py1399) (Prims.l_and @x0py1309 @x1py1399)) :pattern ((ApplyTT (ApplyTT Prims.l_and@tok @x0py1309) @x1py1399)) )) :named token_correspondence_Prims.l_and))
(assert (! (forall ((@x0py1310 Term)(@x1py1400 Term)) (! (= (ApplyTT (ApplyTT Prims.l_Exists@tok @x0py1310) @x1py1400) (Prims.l_Exists @x0py1310 @x1py1400)) :pattern ((ApplyTT (ApplyTT Prims.l_Exists@tok @x0py1310) @x1py1400)) )) :named token_correspondence_Prims.l_Exists))
(assert (! (forall ((@x0py1311 Term)(@x1py1401 Term)) (! (= (ApplyTT (ApplyTT Prims.l_Forall@tok @x0py1311) @x1py1401) (Prims.l_Forall @x0py1311 @x1py1401)) :pattern ((ApplyTT (ApplyTT Prims.l_Forall@tok @x0py1311) @x1py1401)) )) :named token_correspondence_Prims.l_Forall))
(assert (! (forall ((@x0py1312 Term)(@x1py1402 Term)) (! (= (ApplyTT (ApplyTT Prims.l_iff@tok @x0py1312) @x1py1402) (Prims.l_iff @x0py1312 @x1py1402)) :pattern ((ApplyTT (ApplyTT Prims.l_iff@tok @x0py1312) @x1py1402)) )) :named token_correspondence_Prims.l_iff))
(assert (! (forall ((@x0py1313 Term)(@x1py1403 Term)) (! (= (ApplyTT (ApplyTT Prims.l_imp@tok @x0py1313) @x1py1403) (Prims.l_imp @x0py1313 @x1py1403)) :pattern ((ApplyTT (ApplyTT Prims.l_imp@tok @x0py1313) @x1py1403)) )) :named token_correspondence_Prims.l_imp))
(assert (! (forall ((@x0py1314 Term)) (! (= (ApplyTT Prims.l_not@tok @x0py1314) (Prims.l_not @x0py1314)) :pattern ((ApplyTT Prims.l_not@tok @x0py1314)) )) :named token_correspondence_Prims.l_not))
(assert (! (forall ((@x0py1315 Term)(@x1py1404 Term)) (! (= (ApplyTT (ApplyTT Prims.l_or@tok @x0py1315) @x1py1404) (Prims.l_or @x0py1315 @x1py1404)) :pattern ((ApplyTT (ApplyTT Prims.l_or@tok @x0py1315) @x1py1404)) )) :named token_correspondence_Prims.l_or))
(assert (! (forall ((@x0py1316 Term)(@x1py1405 Term)(@x2py1055 Term)) (! (= (ApplyTT (ApplyTT (ApplyTT Prims.labeled@tok @x0py1316) @x1py1405) @x2py1055) (Prims.labeled @x0py1316 @x1py1405 @x2py1055)) :pattern ((ApplyTT (ApplyTT (ApplyTT Prims.labeled@tok @x0py1316) @x1py1405) @x2py1055)) )) :named token_correspondence_Prims.labeled))
(assert (! (forall ((@x0py1317 Term)) (! (= (ApplyTT Prims.list@tok @x0py1317) (Prims.list @x0py1317)) :pattern ((ApplyTT Prims.list@tok @x0py1317)) :pattern ((Prims.list @x0py1317)) )) :named token_correspondence_Prims.list@tok))
(assert (! (forall ((@x0py1318 Term)(@x1py1406 Term)) (! (= (ApplyTT (ApplyTT Prims.magic@tok @x0py1318) @x1py1406) (Prims.magic @x0py1318 @x1py1406)) :pattern ((ApplyTT (ApplyTT Prims.magic@tok @x0py1318) @x1py1406)) )) :named token_correspondence_Prims.magic))
(assert (! (forall ((@x0py1319 Term)(@x1py1407 Term)) (! (= (ApplyTT (ApplyTT Prims.min@tok @x0py1319) @x1py1407) (Prims.min @x0py1319 @x1py1407)) :pattern ((ApplyTT (ApplyTT Prims.min@tok @x0py1319) @x1py1407)) )) :named token_correspondence_Prims.min))
(assert (! (forall ((@x0py1320 Term)(@x1py1408 Term)(@x2py1056 Term)(@x3py759 Term)(@x4py551 Term)) (! (= (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT Prims.mk_range@tok @x0py1320) @x1py1408) @x2py1056) @x3py759) @x4py551) (Prims.mk_range @x0py1320 @x1py1408 @x2py1056 @x3py759 @x4py551)) :pattern ((ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT Prims.mk_range@tok @x0py1320) @x1py1408) @x2py1056) @x3py759) @x4py551)) )) :named token_correspondence_Prims.mk_range))
(assert (! (forall ((@x0py1321 Term)(@x1py1409 Term)) (! (= (ApplyTT (ApplyTT Prims.op_Addition@tok @x0py1321) @x1py1409) (Prims.op_Addition @x0py1321 @x1py1409)) :pattern ((ApplyTT (ApplyTT Prims.op_Addition@tok @x0py1321) @x1py1409)) )) :named token_correspondence_Prims.op_Addition))
(assert (! (forall ((@x0py1322 Term)(@x1py1410 Term)) (! (= (ApplyTT (ApplyTT Prims.op_AmpAmp@tok @x0py1322) @x1py1410) (Prims.op_AmpAmp @x0py1322 @x1py1410)) :pattern ((ApplyTT (ApplyTT Prims.op_AmpAmp@tok @x0py1322) @x1py1410)) )) :named token_correspondence_Prims.op_AmpAmp))
(assert (! (forall ((@x0py1323 Term)(@x1py1411 Term)) (! (= (ApplyTT (ApplyTT Prims.op_BarBar@tok @x0py1323) @x1py1411) (Prims.op_BarBar @x0py1323 @x1py1411)) :pattern ((ApplyTT (ApplyTT Prims.op_BarBar@tok @x0py1323) @x1py1411)) )) :named token_correspondence_Prims.op_BarBar))
(assert (! (forall ((@x0py1324 Term)(@x1py1412 Term)(@x2py1057 Term)) (! (= (ApplyTT (ApplyTT (ApplyTT Prims.op_disEquality@tok @x0py1324) @x1py1412) @x2py1057) (Prims.op_disEquality @x0py1324 @x1py1412 @x2py1057)) :pattern ((ApplyTT (ApplyTT (ApplyTT Prims.op_disEquality@tok @x0py1324) @x1py1412) @x2py1057)) )) :named token_correspondence_Prims.op_disEquality))
(assert (! (forall ((@x0py1325 Term)(@x1py1413 Term)) (! (= (ApplyTT (ApplyTT Prims.op_Division@tok @x0py1325) @x1py1413) (Prims.op_Division @x0py1325 @x1py1413)) :pattern ((ApplyTT (ApplyTT Prims.op_Division@tok @x0py1325) @x1py1413)) )) :named token_correspondence_Prims.op_Division))
(assert (! (forall ((@x0py1326 Term)(@x1py1414 Term)(@x2py1058 Term)) (! (= (ApplyTT (ApplyTT (ApplyTT Prims.op_Equality@tok @x0py1326) @x1py1414) @x2py1058) (Prims.op_Equality @x0py1326 @x1py1414 @x2py1058)) :pattern ((ApplyTT (ApplyTT (ApplyTT Prims.op_Equality@tok @x0py1326) @x1py1414) @x2py1058)) )) :named token_correspondence_Prims.op_Equality))
(assert (! (forall ((@x0py1327 Term)(@x1py1415 Term)) (! (= (ApplyTT (ApplyTT Prims.op_GreaterThan@tok @x0py1327) @x1py1415) (Prims.op_GreaterThan @x0py1327 @x1py1415)) :pattern ((ApplyTT (ApplyTT Prims.op_GreaterThan@tok @x0py1327) @x1py1415)) )) :named token_correspondence_Prims.op_GreaterThan))
(assert (! (forall ((@x0py1328 Term)(@x1py1416 Term)) (! (= (ApplyTT (ApplyTT Prims.op_GreaterThanOrEqual@tok @x0py1328) @x1py1416) (Prims.op_GreaterThanOrEqual @x0py1328 @x1py1416)) :pattern ((ApplyTT (ApplyTT Prims.op_GreaterThanOrEqual@tok @x0py1328) @x1py1416)) )) :named token_correspondence_Prims.op_GreaterThanOrEqual))
(assert (! (forall ((@x0py1329 Term)(@x1py1417 Term)) (! (= (ApplyTT (ApplyTT Prims.op_LessThan@tok @x0py1329) @x1py1417) (Prims.op_LessThan @x0py1329 @x1py1417)) :pattern ((ApplyTT (ApplyTT Prims.op_LessThan@tok @x0py1329) @x1py1417)) )) :named token_correspondence_Prims.op_LessThan))
(assert (! (forall ((@x0py1330 Term)(@x1py1418 Term)) (! (= (ApplyTT (ApplyTT Prims.op_LessThanOrEqual@tok @x0py1330) @x1py1418) (Prims.op_LessThanOrEqual @x0py1330 @x1py1418)) :pattern ((ApplyTT (ApplyTT Prims.op_LessThanOrEqual@tok @x0py1330) @x1py1418)) )) :named token_correspondence_Prims.op_LessThanOrEqual))
(assert (! (forall ((@x0py1331 Term)) (! (= (ApplyTT Prims.op_Minus@tok @x0py1331) (Prims.op_Minus @x0py1331)) :pattern ((ApplyTT Prims.op_Minus@tok @x0py1331)) )) :named token_correspondence_Prims.op_Minus))
(assert (! (forall ((@x0py1332 Term)(@x1py1419 Term)) (! (= (ApplyTT (ApplyTT Prims.op_Modulus@tok @x0py1332) @x1py1419) (Prims.op_Modulus @x0py1332 @x1py1419)) :pattern ((ApplyTT (ApplyTT Prims.op_Modulus@tok @x0py1332) @x1py1419)) )) :named token_correspondence_Prims.op_Modulus))
(assert (! (forall ((@x0py1333 Term)(@x1py1420 Term)) (! (= (ApplyTT (ApplyTT Prims.op_Multiply@tok @x0py1333) @x1py1420) (Prims.op_Multiply @x0py1333 @x1py1420)) :pattern ((ApplyTT (ApplyTT Prims.op_Multiply@tok @x0py1333) @x1py1420)) )) :named token_correspondence_Prims.op_Multiply))
(assert (! (forall ((@x0py1334 Term)) (! (= (ApplyTT Prims.op_Negation@tok @x0py1334) (Prims.op_Negation @x0py1334)) :pattern ((ApplyTT Prims.op_Negation@tok @x0py1334)) )) :named token_correspondence_Prims.op_Negation))
(assert (! (forall ((@x0py1335 Term)(@x1py1421 Term)) (! (= (ApplyTT (ApplyTT Prims.op_Subtraction@tok @x0py1335) @x1py1421) (Prims.op_Subtraction @x0py1335 @x1py1421)) :pattern ((ApplyTT (ApplyTT Prims.op_Subtraction@tok @x0py1335) @x1py1421)) )) :named token_correspondence_Prims.op_Subtraction))
(assert (! (forall ((@x0py1336 Term)) (! (= (ApplyTT Prims.pow2@tok @x0py1336) (Prims.pow2 @x0py1336)) :pattern ((ApplyTT Prims.pow2@tok @x0py1336)) )) :named token_correspondence_Prims.pow2))
(assert (! (forall ((@u0py375 Fuel)(@x1py1422 Term)) (! (or (not (HasType @x1py1422 Prims.nat)) (HasType (Prims.pow2.fuel_instrumented @u0py375 @x1py1422) Prims.pos)) :pattern ((Prims.pow2.fuel_instrumented @u0py375 @x1py1422)) )) :named token_correspondence_Prims.pow2.fuel_instrumented))
(assert (! (forall ((@x0py1337 Term)) (! (= (ApplyTT Prims.pure_post@tok @x0py1337) (Prims.pure_post @x0py1337)) :pattern ((ApplyTT Prims.pure_post@tok @x0py1337)) )) :named token_correspondence_Prims.pure_post))
(assert (! (forall ((@x0py1338 Term)(@x1py1423 Term)) (! (= (ApplyTT (ApplyTT Prims.pure_post_@tok @x0py1338) @x1py1423) (Prims.pure_post_ @x0py1338 @x1py1423)) :pattern ((ApplyTT (ApplyTT Prims.pure_post_@tok @x0py1338) @x1py1423)) )) :named token_correspondence_Prims.pure_post_))
(assert (! (forall ((@x0py1339 Term)) (! (= (ApplyTT Prims.pure_wp@tok @x0py1339) (Prims.pure_wp @x0py1339)) :pattern ((ApplyTT Prims.pure_wp@tok @x0py1339)) )) :named token_correspondence_Prims.pure_wp))
(assert (! (forall ((@x0py1340 Term)(@x1py1424 Term)) (! (= (ApplyTT (ApplyTT Prims.returnM@tok @x0py1340) @x1py1424) (Prims.returnM @x0py1340 @x1py1424)) :pattern ((ApplyTT (ApplyTT Prims.returnM@tok @x0py1340) @x1py1424)) )) :named token_correspondence_Prims.returnM))
(assert (! (forall ((@x0py1341 Term)(@x1py1425 Term)) (! (= (ApplyTT (ApplyTT Prims.smt_pat@tok @x0py1341) @x1py1425) (Prims.smt_pat @x0py1341 @x1py1425)) :pattern ((ApplyTT (ApplyTT Prims.smt_pat@tok @x0py1341) @x1py1425)) )) :named token_correspondence_Prims.smt_pat))
(assert (! (forall ((@x0py1342 Term)) (! (= (ApplyTT Prims.smt_pat_or@tok @x0py1342) (Prims.smt_pat_or @x0py1342)) :pattern ((ApplyTT Prims.smt_pat_or@tok @x0py1342)) )) :named token_correspondence_Prims.smt_pat_or))
(assert (! (forall ((@x0py1343 Term)) (! (= (ApplyTT Prims.spinoff@tok @x0py1343) (Prims.spinoff @x0py1343)) :pattern ((ApplyTT Prims.spinoff@tok @x0py1343)) )) :named token_correspondence_Prims.spinoff))
(assert (! (forall ((@x0py1344 Term)) (! (= (ApplyTT Prims.squash@tok @x0py1344) (Prims.squash @x0py1344)) :pattern ((ApplyTT Prims.squash@tok @x0py1344)) )) :named token_correspondence_Prims.squash))
(assert (! (forall ((@x0py1345 Term)(@x1py1426 Term)) (! (= (ApplyTT (ApplyTT Prims.strcat@tok @x0py1345) @x1py1426) (Prims.strcat @x0py1345 @x1py1426)) :pattern ((ApplyTT (ApplyTT Prims.strcat@tok @x0py1345) @x1py1426)) )) :named token_correspondence_Prims.strcat))
(assert (! (forall ((@x0py1346 Term)) (! (= (ApplyTT Prims.string_of_bool@tok @x0py1346) (Prims.string_of_bool @x0py1346)) :pattern ((ApplyTT Prims.string_of_bool@tok @x0py1346)) )) :named token_correspondence_Prims.string_of_bool))
(assert (! (forall ((@x0py1347 Term)) (! (= (ApplyTT Prims.string_of_int@tok @x0py1347) (Prims.string_of_int @x0py1347)) :pattern ((ApplyTT Prims.string_of_int@tok @x0py1347)) )) :named token_correspondence_Prims.string_of_int))
(assert (! (forall ((@x0py1348 Term)(@x1py1427 Term)(@x2py1059 Term)) (! (= (ApplyTT (ApplyTT (ApplyTT Prims.unsafe_coerce@tok @x0py1348) @x1py1427) @x2py1059) (Prims.unsafe_coerce @x0py1348 @x1py1427 @x2py1059)) :pattern ((ApplyTT (ApplyTT (ApplyTT Prims.unsafe_coerce@tok @x0py1348) @x1py1427) @x2py1059)) )) :named token_correspondence_Prims.unsafe_coerce))
(assert (! (forall ((@x0py1349 Term)(@x1py1428 Term)(@x2py1060 Term)) (! (= (ApplyTT (ApplyTT (ApplyTT Prims.uu___is_And@tok @x0py1349) @x1py1428) @x2py1060) (Prims.uu___is_And @x0py1349 @x1py1428 @x2py1060)) :pattern ((ApplyTT (ApplyTT (ApplyTT Prims.uu___is_And@tok @x0py1349) @x1py1428) @x2py1060)) )) :named token_correspondence_Prims.uu___is_And))
(assert (! (forall ((@x0py1350 Term)(@x1py1429 Term)) (! (= (ApplyTT (ApplyTT Prims.uu___is_Cons@tok @x0py1350) @x1py1429) (Prims.uu___is_Cons @x0py1350 @x1py1429)) :pattern ((ApplyTT (ApplyTT Prims.uu___is_Cons@tok @x0py1350) @x1py1429)) )) :named token_correspondence_Prims.uu___is_Cons))
(assert (! (forall ((@x0py1351 Term)(@x1py1430 Term)(@x2py1061 Term)(@x3py760 Term)(@x4py552 Term)) (! (= (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT Prims.uu___is_HRefl@tok @x0py1351) @x1py1430) @x2py1061) @x3py760) @x4py552) (Prims.uu___is_HRefl @x0py1351 @x1py1430 @x2py1061 @x3py760 @x4py552)) :pattern ((ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT Prims.uu___is_HRefl@tok @x0py1351) @x1py1430) @x2py1061) @x3py760) @x4py552)) )) :named token_correspondence_Prims.uu___is_HRefl))
(assert (! (forall ((@x0py1352 Term)(@x1py1431 Term)(@x2py1062 Term)) (! (= (ApplyTT (ApplyTT (ApplyTT Prims.uu___is_Left@tok @x0py1352) @x1py1431) @x2py1062) (Prims.uu___is_Left @x0py1352 @x1py1431 @x2py1062)) :pattern ((ApplyTT (ApplyTT (ApplyTT Prims.uu___is_Left@tok @x0py1352) @x1py1431) @x2py1062)) )) :named token_correspondence_Prims.uu___is_Left))
(assert (! (forall ((@x0py1353 Term)(@x1py1432 Term)(@x2py1063 Term)) (! (= (ApplyTT (ApplyTT (ApplyTT Prims.uu___is_Mkdtuple2@tok @x0py1353) @x1py1432) @x2py1063) (Prims.uu___is_Mkdtuple2 @x0py1353 @x1py1432 @x2py1063)) :pattern ((ApplyTT (ApplyTT (ApplyTT Prims.uu___is_Mkdtuple2@tok @x0py1353) @x1py1432) @x2py1063)) )) :named token_correspondence_Prims.uu___is_Mkdtuple2))
(assert (! (forall ((@x0py1354 Term)(@x1py1433 Term)) (! (= (ApplyTT (ApplyTT Prims.uu___is_Nil@tok @x0py1354) @x1py1433) (Prims.uu___is_Nil @x0py1354 @x1py1433)) :pattern ((ApplyTT (ApplyTT Prims.uu___is_Nil@tok @x0py1354) @x1py1433)) )) :named token_correspondence_Prims.uu___is_Nil))
(assert (! (forall ((@x0py1355 Term)(@x1py1434 Term)(@x2py1064 Term)(@x3py761 Term)) (! (= (ApplyTT (ApplyTT (ApplyTT (ApplyTT Prims.uu___is_Refl@tok @x0py1355) @x1py1434) @x2py1064) @x3py761) (Prims.uu___is_Refl @x0py1355 @x1py1434 @x2py1064 @x3py761)) :pattern ((ApplyTT (ApplyTT (ApplyTT (ApplyTT Prims.uu___is_Refl@tok @x0py1355) @x1py1434) @x2py1064) @x3py761)) )) :named token_correspondence_Prims.uu___is_Refl))
(assert (! (forall ((@x0py1356 Term)(@x1py1435 Term)(@x2py1065 Term)) (! (= (ApplyTT (ApplyTT (ApplyTT Prims.uu___is_Right@tok @x0py1356) @x1py1435) @x2py1065) (Prims.uu___is_Right @x0py1356 @x1py1435 @x2py1065)) :pattern ((ApplyTT (ApplyTT (ApplyTT Prims.uu___is_Right@tok @x0py1356) @x1py1435) @x2py1065)) )) :named token_correspondence_Prims.uu___is_Right))
(assert (! (forall ((@x0py1357 Term)) (! (= (ApplyTT Prims.uu___is_T@tok @x0py1357) (Prims.uu___is_T @x0py1357)) :pattern ((ApplyTT Prims.uu___is_T@tok @x0py1357)) )) :named token_correspondence_Prims.uu___is_T))
(assert (! (Valid Prims.l_True) :named true_interp))
(assert (! (forall ((@x0py1358 Term)(@x1py1436 Term)(@x2py1066 Term)(@x3py762 Term)(@x4py553 Term)) (! (or (HasType (False.__proj__CalcRefl__item__x @x0py1358 @x1py1436 @x2py1066 @x3py762 @x4py553) @x0py1358) (not (HasType @x0py1358 Tm_type)) (not (HasType @x1py1436 (Prims.list (False.relation @x0py1358)))) (not (HasType @x2py1066 @x0py1358)) (not (HasType @x3py762 @x0py1358)) (not (HasType @x4py553 (False_Tm_refine_253153fea998a3a502df455711574c4d @x0py1358 @x1py1436 @x2py1066 @x3py762)))) :pattern ((False.__proj__CalcRefl__item__x @x0py1358 @x1py1436 @x2py1066 @x3py762 @x4py553)) )) :named typing_False.__proj__CalcRefl__item__x))
(assert (! (forall ((@x0py1359 Term)(@x1py1437 Term)(@x2py1067 Term)(@x3py763 Term)(@x4py554 Term)) (! (or (HasType (False.__proj__CalcStep__item___5 @x0py1359 @x1py1437 @x2py1067 @x3py763 @x4py554) (False.calc_proof @x0py1359 (False.__proj__CalcStep__item__rs @x0py1359 @x1py1437 @x2py1067 @x3py763 @x4py554) (False.__proj__CalcStep__item__x @x0py1359 @x1py1437 @x2py1067 @x3py763 @x4py554) (False.__proj__CalcStep__item__y @x0py1359 @x1py1437 @x2py1067 @x3py763 @x4py554))) (not (HasType @x0py1359 Tm_type)) (not (HasType @x1py1437 (Prims.list (False.relation @x0py1359)))) (not (HasType @x4py554 (False_Tm_refine_c7c1219b2b697290706c3cb902d0c0fb @x0py1359 @x1py1437 @x2py1067 @x3py763))) (not (HasType @x2py1067 @x0py1359)) (not (HasType @x3py763 @x0py1359))) :pattern ((False.__proj__CalcStep__item___5 @x0py1359 @x1py1437 @x2py1067 @x3py763 @x4py554)) )) :named typing_False.__proj__CalcStep__item___5))
(assert (! (forall ((@x0py1360 Term)(@x1py1438 Term)(@x2py1068 Term)(@x3py764 Term)(@x4py555 Term)) (! (or (HasType (False.__proj__CalcStep__item___6 @x0py1360 @x1py1438 @x2py1068 @x3py764 @x4py555) (Prims.squash (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT (ApplyTT False.__proj__CalcStep__item__p@tok @x0py1360) @x1py1438) @x2py1068) @x3py764) @x4py555) (False.__proj__CalcStep__item__y @x0py1360 @x1py1438 @x2py1068 @x3py764 @x4py555)) (False.__proj__CalcStep__item__z @x0py1360 @x1py1438 @x2py1068 @x3py764 @x4py555)))) (not (HasType @x4py555 (False_Tm_refine_c7c1219b2b697290706c3cb902d0c0fb @x0py1360 @x1py1438 @x2py1068 @x3py764))) (not (HasType @x0py1360 Tm_type)) (not (HasType @x1py1438 (Prims.list (False.relation @x0py1360)))) (not (HasType @x2py1068 @x0py1360)) (not (HasType @x3py764 @x0py1360))) :pattern ((False.__proj__CalcStep__item___6 @x0py1360 @x1py1438 @x2py1068 @x3py764 @x4py555)) )) :named typing_False.__proj__CalcStep__item___6))
(assert (! (forall ((@x0py1361 Term)(@x1py1439 Term)(@x2py1069 Term)(@x3py765 Term)(@x4py556 Term)) (! (or (HasType (False.__proj__CalcStep__item__p @x0py1361 @x1py1439 @x2py1069 @x3py765 @x4py556) (False.relation @x0py1361)) (not (HasType @x4py556 (False_Tm_refine_c7c1219b2b697290706c3cb902d0c0fb @x0py1361 @x1py1439 @x2py1069 @x3py765))) (not (HasType @x0py1361 Tm_type)) (not (HasType @x1py1439 (Prims.list (False.relation @x0py1361)))) (not (HasType @x2py1069 @x0py1361)) (not (HasType @x3py765 @x0py1361))) :pattern ((False.__proj__CalcStep__item__p @x0py1361 @x1py1439 @x2py1069 @x3py765 @x4py556)) )) :named typing_False.__proj__CalcStep__item__p))
(assert (! (forall ((@x0py1362 Term)(@x1py1440 Term)(@x2py1070 Term)(@x3py766 Term)(@x4py557 Term)) (! (or (HasType (False.__proj__CalcStep__item__rs @x0py1362 @x1py1440 @x2py1070 @x3py766 @x4py557) (Prims.list (False.relation @x0py1362))) (not (HasType @x4py557 (False_Tm_refine_c7c1219b2b697290706c3cb902d0c0fb @x0py1362 @x1py1440 @x2py1070 @x3py766))) (not (HasType @x0py1362 Tm_type)) (not (HasType @x1py1440 (Prims.list (False.relation @x0py1362)))) (not (HasType @x2py1070 @x0py1362)) (not (HasType @x3py766 @x0py1362))) :pattern ((False.__proj__CalcStep__item__rs @x0py1362 @x1py1440 @x2py1070 @x3py766 @x4py557)) )) :named typing_False.__proj__CalcStep__item__rs))
(assert (! (forall ((@x0py1363 Term)(@x1py1441 Term)(@x2py1071 Term)(@x3py767 Term)(@x4py558 Term)) (! (or (HasType (False.__proj__CalcStep__item__x @x0py1363 @x1py1441 @x2py1071 @x3py767 @x4py558) @x0py1363) (not (HasType @x4py558 (False_Tm_refine_c7c1219b2b697290706c3cb902d0c0fb @x0py1363 @x1py1441 @x2py1071 @x3py767))) (not (HasType @x0py1363 Tm_type)) (not (HasType @x1py1441 (Prims.list (False.relation @x0py1363)))) (not (HasType @x2py1071 @x0py1363)) (not (HasType @x3py767 @x0py1363))) :pattern ((False.__proj__CalcStep__item__x @x0py1363 @x1py1441 @x2py1071 @x3py767 @x4py558)) )) :named typing_False.__proj__CalcStep__item__x))
(assert (! (forall ((@x0py1364 Term)(@x1py1442 Term)(@x2py1072 Term)(@x3py768 Term)(@x4py559 Term)) (! (or (HasType (False.__proj__CalcStep__item__y @x0py1364 @x1py1442 @x2py1072 @x3py768 @x4py559) @x0py1364) (not (HasType @x4py559 (False_Tm_refine_c7c1219b2b697290706c3cb902d0c0fb @x0py1364 @x1py1442 @x2py1072 @x3py768))) (not (HasType @x0py1364 Tm_type)) (not (HasType @x1py1442 (Prims.list (False.relation @x0py1364)))) (not (HasType @x2py1072 @x0py1364)) (not (HasType @x3py768 @x0py1364))) :pattern ((False.__proj__CalcStep__item__y @x0py1364 @x1py1442 @x2py1072 @x3py768 @x4py559)) )) :named typing_False.__proj__CalcStep__item__y))
(assert (! (forall ((@x0py1365 Term)(@x1py1443 Term)(@x2py1073 Term)(@x3py769 Term)(@x4py560 Term)) (! (or (HasType (False.__proj__CalcStep__item__z @x0py1365 @x1py1443 @x2py1073 @x3py769 @x4py560) @x0py1365) (not (HasType @x4py560 (False_Tm_refine_c7c1219b2b697290706c3cb902d0c0fb @x0py1365 @x1py1443 @x2py1073 @x3py769))) (not (HasType @x0py1365 Tm_type)) (not (HasType @x1py1443 (Prims.list (False.relation @x0py1365)))) (not (HasType @x2py1073 @x0py1365)) (not (HasType @x3py769 @x0py1365))) :pattern ((False.__proj__CalcStep__item__z @x0py1365 @x1py1443 @x2py1073 @x3py769 @x4py560)) )) :named typing_False.__proj__CalcStep__item__z))
(assert (! (forall ((@x0py1366 Term)(@x1py1444 Term)) (! (or (HasType (False.init @x0py1366 @x1py1444) (False.calc_proof @x0py1366 (Prims.Nil (False.relation @x0py1366)) @x1py1444 @x1py1444)) (not (HasType @x0py1366 Tm_type)) (not (HasType @x1py1444 @x0py1366))) :pattern ((False.init @x0py1366 @x1py1444)) )) :named typing_False.init))
(assert (! (forall ((@x0py1367 Term)) (! (or (not (HasType @x0py1367 Tm_type)) (HasType (False.preorder @x0py1367) Tm_type)) :pattern ((False.preorder @x0py1367)) )) :named typing_False.preorder))
(assert (! (HasType False.r1 (False.relation Prims.int)) :named typing_False.r1))
(assert (! (HasType False.r2 (False.relation Prims.int)) :named typing_False.r2))
(assert (! (forall ((@x0py1368 Term)) (! (or (not (HasType @x0py1368 Tm_type)) (HasType (False.relation @x0py1368) Tm_type)) :pattern ((False.relation @x0py1368)) )) :named typing_False.relation))
(assert (! (forall ((@x0py1369 Term)(@x1py1445 Term)(@x2py1074 Term)(@x3py770 Term)(@x4py561 Term)(@x5py429 Term)(@x6py308 Term)(@x7py240 Term)) (! (or (HasType (False.step @x0py1369 @x1py1445 @x2py1074 @x3py770 @x4py561 @x5py429 @x6py308 @x7py240) (False.calc_proof @x0py1369 (Prims.Cons (False.relation @x0py1369) @x4py561 @x1py1445) @x2py1074 @x5py429)) (not (HasType @x0py1369 Tm_type)) (not (HasType @x1py1445 (Prims.list (False.relation @x0py1369)))) (not (HasType @x2py1074 @x0py1369)) (not (HasType @x3py770 @x0py1369)) (not (HasType @x4py561 (False.relation @x0py1369))) (not (HasType @x5py429 @x0py1369)) (not (HasType @x6py308 (Tm_arrow_b876badf58234251d7cd1ca0d2659f12 @x3py770 @x2py1074 @x1py1445 @x0py1369 Prims.unit))) (not (HasType @x7py240 (Tm_arrow_6cdb49601bd9255655221b5bfb8efb6f @x5py429 @x3py770 @x4py561 Prims.unit)))) :pattern ((False.step @x0py1369 @x1py1445 @x2py1074 @x3py770 @x4py561 @x5py429 @x6py308 @x7py240)) )) :named typing_False.step))
(assert (! (forall ((@x0py1370 Term)(@x1py1446 Term)(@x2py1075 Term)(@x3py771 Term)(@x4py562 Term)) (! (or (HasType (False.uu___is_CalcRefl @x0py1370 @x1py1446 @x2py1075 @x3py771 @x4py562) Prims.bool) (not (HasType @x0py1370 Tm_type)) (not (HasType @x1py1446 (Prims.list (False.relation @x0py1370)))) (not (HasType @x2py1075 @x0py1370)) (not (HasType @x3py771 @x0py1370)) (not (HasType @x4py562 (False.calc_proof @x0py1370 @x1py1446 @x2py1075 @x3py771)))) :pattern ((False.uu___is_CalcRefl @x0py1370 @x1py1446 @x2py1075 @x3py771 @x4py562)) )) :named typing_False.uu___is_CalcRefl))
(assert (! (forall ((@x0py1371 Term)(@x1py1447 Term)(@x2py1076 Term)(@x3py772 Term)(@x4py563 Term)) (! (or (HasType (False.uu___is_CalcStep @x0py1371 @x1py1447 @x2py1076 @x3py772 @x4py563) Prims.bool) (not (HasType @x0py1371 Tm_type)) (not (HasType @x1py1447 (Prims.list (False.relation @x0py1371)))) (not (HasType @x2py1076 @x0py1371)) (not (HasType @x3py772 @x0py1371)) (not (HasType @x4py563 (False.calc_proof @x0py1371 @x1py1447 @x2py1076 @x3py772)))) :pattern ((False.uu___is_CalcStep @x0py1371 @x1py1447 @x2py1076 @x3py772 @x4py563)) )) :named typing_False.uu___is_CalcStep))
(assert (! (forall ((@x0py1372 Term)(@x1py1448 Term)) (! (HasType (False_Tm_abs_2be0aece0b6cba4fbd785a965d99ed1c @x0py1372 @x1py1448) (Tm_arrow_fc31a65eb1baad4caf91e28652535209 @x0py1372 @x1py1448)) :pattern ((False_Tm_abs_2be0aece0b6cba4fbd785a965d99ed1c @x0py1372 @x1py1448)) )) :named typing_False_Tm_abs_2be0aece0b6cba4fbd785a965d99ed1c))
(assert (! (forall ((@x0py1373 Term)(@x1py1449 Term)) (! (HasType (False_Tm_abs_9ac3dd8deb7277a6b94e52d999a4b8c7 @x0py1373 @x1py1449) (Tm_arrow_6c8a344d1f126f59d9c6304a0bfbc84a @x0py1373 @x1py1449)) :pattern ((False_Tm_abs_9ac3dd8deb7277a6b94e52d999a4b8c7 @x0py1373 @x1py1449)) )) :named typing_False_Tm_abs_9ac3dd8deb7277a6b94e52d999a4b8c7))
(assert (! (forall ((@x0py1374 Term)(@x1py1450 Term)(@x2py1077 Term)) (! (HasType (False_Tm_abs_88557b3f5b7ee160d0bedb3d1195c252 @x0py1374 @x1py1450 @x2py1077) (Tm_arrow_637c9767c7a2c264e0a7f2bd68427abf @x0py1374 @x1py1450 @x2py1077)) :pattern ((False_Tm_abs_88557b3f5b7ee160d0bedb3d1195c252 @x0py1374 @x1py1450 @x2py1077)) )) :named typing_False_Tm_abs_88557b3f5b7ee160d0bedb3d1195c252))
(assert (! (forall ((@x0py1375 Term)) (! (or (not (HasType @x0py1375 FStar.Pervasives_Tm_refine_5036c6b2983454bc3afeffcba3f00f50)) (HasType (FStar.Pervasives.__proj__CConst__item___0 @x0py1375) Prims.string)) :pattern ((FStar.Pervasives.__proj__CConst__item___0 @x0py1375)) )) :named typing_FStar.Pervasives.__proj__CConst__item___0))
(assert (! (forall ((@x0py1376 Term)) (! (or (not (HasType @x0py1376 FStar.Pervasives_Tm_refine_47384bef739d1f0729fd782d351dc9a5)) (HasType (FStar.Pervasives.__proj__CEpilogue__item___0 @x0py1376) Prims.string)) :pattern ((FStar.Pervasives.__proj__CEpilogue__item___0 @x0py1376)) )) :named typing_FStar.Pervasives.__proj__CEpilogue__item___0))
(assert (! (forall ((@x0py1377 Term)) (! (or (not (HasType @x0py1377 FStar.Pervasives_Tm_refine_c53089e2d20d1b0f5a267296ac8e45f0)) (HasType (FStar.Pervasives.__proj__Comment__item___0 @x0py1377) Prims.string)) :pattern ((FStar.Pervasives.__proj__Comment__item___0 @x0py1377)) )) :named typing_FStar.Pervasives.__proj__Comment__item___0))
(assert (! (forall ((@x0py1378 Term)) (! (or (not (HasType @x0py1378 FStar.Pervasives_Tm_refine_ac46c1a2a06ce46a180e0eda48004c47)) (HasType (FStar.Pervasives.__proj__CPrologue__item___0 @x0py1378) Prims.string)) :pattern ((FStar.Pervasives.__proj__CPrologue__item___0 @x0py1378)) )) :named typing_FStar.Pervasives.__proj__CPrologue__item___0))
(assert (! (forall ((@x0py1379 Term)(@x1py1451 Term)) (! (or (not (HasType @x0py1379 Tm_type)) (not (HasType @x1py1451 (FStar.Pervasives_Tm_refine_95e1e2ee29104754cc3740f5575fc6e5 @x0py1379))) (HasType (FStar.Pervasives.__proj__E__item__e @x0py1379 @x1py1451) Prims.exn)) :pattern ((FStar.Pervasives.__proj__E__item__e @x0py1379 @x1py1451)) )) :named typing_FStar.Pervasives.__proj__E__item__e))
(assert (! (forall ((@x0py1380 Term)(@x1py1452 Term)) (! (or (not (HasType @x0py1380 Tm_type)) (not (HasType @x1py1452 (FStar.Pervasives_Tm_refine_22fb403854eba07427f92e79848f9d9f @x0py1380))) (HasType (FStar.Pervasives.__proj__Err__item__msg @x0py1380 @x1py1452) Prims.string)) :pattern ((FStar.Pervasives.__proj__Err__item__msg @x0py1380 @x1py1452)) )) :named typing_FStar.Pervasives.__proj__Err__item__msg))
(assert (! (forall ((@x0py1381 Term)(@x1py1453 Term)(@x2py1078 Term)) (! (or (HasType (FStar.Pervasives.__proj__Inl__item__v @x0py1381 @x1py1453 @x2py1078) @x0py1381) (not (HasType @x1py1453 Tm_type)) (not (HasType @x2py1078 (FStar.Pervasives_Tm_refine_85e0cc884f8457202f90cd77f23733ba @x0py1381 @x1py1453))) (not (HasType @x0py1381 Tm_type))) :pattern ((FStar.Pervasives.__proj__Inl__item__v @x0py1381 @x1py1453 @x2py1078)) )) :named typing_FStar.Pervasives.__proj__Inl__item__v))
(assert (! (forall ((@x0py1382 Term)(@x1py1454 Term)(@x2py1079 Term)) (! (or (HasType (FStar.Pervasives.__proj__Inr__item__v @x0py1382 @x1py1454 @x2py1079) @x1py1454) (not (HasType @x2py1079 (FStar.Pervasives_Tm_refine_8f1f5f564dae90240db429de2eb41517 @x0py1382 @x1py1454))) (not (HasType @x0py1382 Tm_type)) (not (HasType @x1py1454 Tm_type))) :pattern ((FStar.Pervasives.__proj__Inr__item__v @x0py1382 @x1py1454 @x2py1079)) )) :named typing_FStar.Pervasives.__proj__Inr__item__v))
(assert (! (forall ((@x0py1383 Term)(@x1py1455 Term)(@x2py1080 Term)(@x3py773 Term)) (! (or (HasType (FStar.Pervasives.__proj__Mkdtuple3__item___1 @x0py1383 @x1py1455 @x2py1080 @x3py773) @x0py1383) (not (HasType @x2py1080 (Tm_arrow_614c7b5886a6e5b119a37c35c7e4bd59 @x1py1455 @x0py1383))) (not (HasType @x3py773 (FStar.Pervasives.dtuple3 @x0py1383 @x1py1455 @x2py1080))) (not (HasType @x0py1383 Tm_type)) (not (HasType @x1py1455 (Tm_arrow_e06752ba152f81447b312efcdf8f0e23 @x0py1383)))) :pattern ((FStar.Pervasives.__proj__Mkdtuple3__item___1 @x0py1383 @x1py1455 @x2py1080 @x3py773)) )) :named typing_FStar.Pervasives.__proj__Mkdtuple3__item___1))
(assert (! (forall ((@x0py1384 Term)(@x1py1456 Term)(@x2py1081 Term)(@x3py774 Term)) (! (or (HasType (FStar.Pervasives.__proj__Mkdtuple3__item___2 @x0py1384 @x1py1456 @x2py1081 @x3py774) (ApplyTT @x1py1456 (FStar.Pervasives.__proj__Mkdtuple3__item___1 @x0py1384 @x1py1456 @x2py1081 @x3py774))) (not (HasType @x3py774 (FStar.Pervasives.dtuple3 @x0py1384 @x1py1456 @x2py1081))) (not (HasType @x0py1384 Tm_type)) (not (HasType @x1py1456 (Tm_arrow_e06752ba152f81447b312efcdf8f0e23 @x0py1384))) (not (HasType @x2py1081 (Tm_arrow_614c7b5886a6e5b119a37c35c7e4bd59 @x1py1456 @x0py1384)))) :pattern ((FStar.Pervasives.__proj__Mkdtuple3__item___2 @x0py1384 @x1py1456 @x2py1081 @x3py774)) )) :named typing_FStar.Pervasives.__proj__Mkdtuple3__item___2))
(assert (! (forall ((@x0py1385 Term)(@x1py1457 Term)(@x2py1082 Term)(@x3py775 Term)) (! (or (HasType (FStar.Pervasives.__proj__Mkdtuple3__item___3 @x0py1385 @x1py1457 @x2py1082 @x3py775) (ApplyTT (ApplyTT @x2py1082 (FStar.Pervasives.__proj__Mkdtuple3__item___1 @x0py1385 @x1py1457 @x2py1082 @x3py775)) (FStar.Pervasives.__proj__Mkdtuple3__item___2 @x0py1385 @x1py1457 @x2py1082 @x3py775))) (not (HasType @x3py775 (FStar.Pervasives.dtuple3 @x0py1385 @x1py1457 @x2py1082))) (not (HasType @x0py1385 Tm_type)) (not (HasType @x1py1457 (Tm_arrow_e06752ba152f81447b312efcdf8f0e23 @x0py1385))) (not (HasType @x2py1082 (Tm_arrow_614c7b5886a6e5b119a37c35c7e4bd59 @x1py1457 @x0py1385)))) :pattern ((FStar.Pervasives.__proj__Mkdtuple3__item___3 @x0py1385 @x1py1457 @x2py1082 @x3py775)) )) :named typing_FStar.Pervasives.__proj__Mkdtuple3__item___3))
(assert (! (forall ((@x0py1386 Term)(@x1py1458 Term)(@x2py1083 Term)(@x3py776 Term)(@x4py564 Term)) (! (or (HasType (FStar.Pervasives.__proj__Mkdtuple4__item___1 @x0py1386 @x1py1458 @x2py1083 @x3py776 @x4py564) @x0py1386) (not (HasType @x3py776 (Tm_arrow_dbf39bf049d72c3088e1ed84d246952d @x2py1083 @x1py1458 @x0py1386))) (not (HasType @x4py564 (FStar.Pervasives.dtuple4 @x0py1386 @x1py1458 @x2py1083 @x3py776))) (not (HasType @x0py1386 Tm_type)) (not (HasType @x1py1458 (Tm_arrow_e06752ba152f81447b312efcdf8f0e23 @x0py1386))) (not (HasType @x2py1083 (Tm_arrow_614c7b5886a6e5b119a37c35c7e4bd59 @x1py1458 @x0py1386)))) :pattern ((FStar.Pervasives.__proj__Mkdtuple4__item___1 @x0py1386 @x1py1458 @x2py1083 @x3py776 @x4py564)) )) :named typing_FStar.Pervasives.__proj__Mkdtuple4__item___1))
(assert (! (forall ((@x0py1387 Term)(@x1py1459 Term)(@x2py1084 Term)(@x3py777 Term)(@x4py565 Term)) (! (or (HasType (FStar.Pervasives.__proj__Mkdtuple4__item___2 @x0py1387 @x1py1459 @x2py1084 @x3py777 @x4py565) (ApplyTT @x1py1459 (FStar.Pervasives.__proj__Mkdtuple4__item___1 @x0py1387 @x1py1459 @x2py1084 @x3py777 @x4py565))) (not (HasType @x4py565 (FStar.Pervasives.dtuple4 @x0py1387 @x1py1459 @x2py1084 @x3py777))) (not (HasType @x0py1387 Tm_type)) (not (HasType @x1py1459 (Tm_arrow_e06752ba152f81447b312efcdf8f0e23 @x0py1387))) (not (HasType @x2py1084 (Tm_arrow_614c7b5886a6e5b119a37c35c7e4bd59 @x1py1459 @x0py1387))) (not (HasType @x3py777 (Tm_arrow_dbf39bf049d72c3088e1ed84d246952d @x2py1084 @x1py1459 @x0py1387)))) :pattern ((FStar.Pervasives.__proj__Mkdtuple4__item___2 @x0py1387 @x1py1459 @x2py1084 @x3py777 @x4py565)) )) :named typing_FStar.Pervasives.__proj__Mkdtuple4__item___2))
(assert (! (forall ((@x0py1388 Term)(@x1py1460 Term)(@x2py1085 Term)(@x3py778 Term)(@x4py566 Term)) (! (or (HasType (FStar.Pervasives.__proj__Mkdtuple4__item___3 @x0py1388 @x1py1460 @x2py1085 @x3py778 @x4py566) (ApplyTT (ApplyTT @x2py1085 (FStar.Pervasives.__proj__Mkdtuple4__item___1 @x0py1388 @x1py1460 @x2py1085 @x3py778 @x4py566)) (FStar.Pervasives.__proj__Mkdtuple4__item___2 @x0py1388 @x1py1460 @x2py1085 @x3py778 @x4py566))) (not (HasType @x4py566 (FStar.Pervasives.dtuple4 @x0py1388 @x1py1460 @x2py1085 @x3py778))) (not (HasType @x0py1388 Tm_type)) (not (HasType @x1py1460 (Tm_arrow_e06752ba152f81447b312efcdf8f0e23 @x0py1388))) (not (HasType @x2py1085 (Tm_arrow_614c7b5886a6e5b119a37c35c7e4bd59 @x1py1460 @x0py1388))) (not (HasType @x3py778 (Tm_arrow_dbf39bf049d72c3088e1ed84d246952d @x2py1085 @x1py1460 @x0py1388)))) :pattern ((FStar.Pervasives.__proj__Mkdtuple4__item___3 @x0py1388 @x1py1460 @x2py1085 @x3py778 @x4py566)) )) :named typing_FStar.Pervasives.__proj__Mkdtuple4__item___3))
(assert (! (forall ((@x0py1389 Term)(@x1py1461 Term)(@x2py1086 Term)(@x3py779 Term)(@x4py567 Term)) (! (or (HasType (FStar.Pervasives.__proj__Mkdtuple4__item___4 @x0py1389 @x1py1461 @x2py1086 @x3py779 @x4py567) (ApplyTT (ApplyTT (ApplyTT @x3py779 (FStar.Pervasives.__proj__Mkdtuple4__item___1 @x0py1389 @x1py1461 @x2py1086 @x3py779 @x4py567)) (FStar.Pervasives.__proj__Mkdtuple4__item___2 @x0py1389 @x1py1461 @x2py1086 @x3py779 @x4py567)) (FStar.Pervasives.__proj__Mkdtuple4__item___3 @x0py1389 @x1py1461 @x2py1086 @x3py779 @x4py567))) (not (HasType @x4py567 (FStar.Pervasives.dtuple4 @x0py1389 @x1py1461 @x2py1086 @x3py779))) (not (HasType @x0py1389 Tm_type)) (not (HasType @x1py1461 (Tm_arrow_e06752ba152f81447b312efcdf8f0e23 @x0py1389))) (not (HasType @x2py1086 (Tm_arrow_614c7b5886a6e5b119a37c35c7e4bd59 @x1py1461 @x0py1389))) (not (HasType @x3py779 (Tm_arrow_dbf39bf049d72c3088e1ed84d246952d @x2py1086 @x1py1461 @x0py1389)))) :pattern ((FStar.Pervasives.__proj__Mkdtuple4__item___4 @x0py1389 @x1py1461 @x2py1086 @x3py779 @x4py567)) )) :named typing_FStar.Pervasives.__proj__Mkdtuple4__item___4))
(assert (! (forall ((@x0py1390 Term)) (! (or (not (HasType @x0py1390 FStar.Pervasives_Tm_refine_564db2f0aa0878b4d96c60508be3dd36)) (HasType (FStar.Pervasives.__proj__PpxDerivingShowConstant__item___0 @x0py1390) Prims.string)) :pattern ((FStar.Pervasives.__proj__PpxDerivingShowConstant__item___0 @x0py1390)) )) :named typing_FStar.Pervasives.__proj__PpxDerivingShowConstant__item___0))
(assert (! (forall ((@x0py1391 Term)(@x1py1462 Term)) (! (or (not (HasType @x0py1391 Tm_type)) (not (HasType @x1py1462 (FStar.Pervasives_Tm_refine_9db520b26a7f39c5a01493a3f375290d @x0py1391))) (HasType (FStar.Pervasives.__proj__V__item__v @x0py1391 @x1py1462) @x0py1391)) :pattern ((FStar.Pervasives.__proj__V__item__v @x0py1391 @x1py1462)) )) :named typing_FStar.Pervasives.__proj__V__item__v))
(assert (! (forall ((@x0py1392 Term)(@x1py1463 Term)(@x2py1087 Term)(@x3py780 Term)(@x4py568 Term)(@x5py430 Term)) (! (or (not (HasType @x1py1463 Tm_type)) (HasType (FStar.Pervasives.all_assert_p @x0py1392 @x1py1463 @x2py1087 @x3py780 @x4py568 @x5py430) Prims.logical) (not (HasType @x2py1087 Tm_type)) (not (HasType @x3py780 (FStar.Pervasives.all_wp_h @x0py1392 @x1py1463))) (not (HasType @x0py1392 Tm_type)) (not (HasType @x4py568 (FStar.Pervasives.all_post_h @x0py1392 @x1py1463))) (not (HasType @x5py430 @x0py1392))) :pattern ((FStar.Pervasives.all_assert_p @x0py1392 @x1py1463 @x2py1087 @x3py780 @x4py568 @x5py430)) )) :named typing_FStar.Pervasives.all_assert_p))
(assert (! (forall ((@x0py1393 Term)(@x1py1464 Term)(@x2py1088 Term)(@x3py781 Term)(@x4py569 Term)(@x5py431 Term)) (! (or (HasType (FStar.Pervasives.all_assume_p @x0py1393 @x1py1464 @x2py1088 @x3py781 @x4py569 @x5py431) Prims.logical) (not (HasType @x0py1393 Tm_type)) (not (HasType @x1py1464 Tm_type)) (not (HasType @x2py1088 Tm_type)) (not (HasType @x5py431 @x0py1393)) (not (HasType @x3py781 (FStar.Pervasives.all_wp_h @x0py1393 @x1py1464))) (not (HasType @x4py569 (FStar.Pervasives.all_post_h @x0py1393 @x1py1464)))) :pattern ((FStar.Pervasives.all_assume_p @x0py1393 @x1py1464 @x2py1088 @x3py781 @x4py569 @x5py431)) )) :named typing_FStar.Pervasives.all_assume_p))
(assert (! (forall ((@x0py1394 Term)(@x1py1465 Term)(@x2py1089 Term)(@x3py782 Term)(@x4py570 Term)(@x5py432 Term)(@x6py309 Term)(@x7py241 Term)) (! (or (HasType (FStar.Pervasives.all_bind_wp @x0py1394 @x1py1465 @x2py1089 @x3py782 @x4py570 @x5py432 @x6py309 @x7py241) Tm_type) (not (HasType @x3py782 Tm_type)) (not (HasType @x4py570 (FStar.Pervasives.all_wp_h @x0py1394 @x2py1089))) (not (HasType @x0py1394 Tm_type)) (not (HasType @x5py432 (Tm_arrow_12929d79484018a159cc54c10d62f794 @x3py782 @x0py1394 @x2py1089))) (not (HasType @x1py1465 Prims.range)) (not (HasType @x2py1089 Tm_type)) (not (HasType @x6py309 (FStar.Pervasives.all_post_h @x0py1394 @x3py782))) (not (HasType @x7py241 @x0py1394))) :pattern ((FStar.Pervasives.all_bind_wp @x0py1394 @x1py1465 @x2py1089 @x3py782 @x4py570 @x5py432 @x6py309 @x7py241)) )) :named typing_FStar.Pervasives.all_bind_wp))
(assert (! (forall ((@x0py1395 Term)(@x1py1466 Term)(@x2py1090 Term)(@x3py783 Term)(@x4py571 Term)(@x5py433 Term)) (! (or (HasType (FStar.Pervasives.all_close_wp @x0py1395 @x1py1466 @x2py1090 @x3py783 @x4py571 @x5py433) Prims.logical) (not (HasType @x0py1395 Tm_type)) (not (HasType @x1py1466 Tm_type)) (not (HasType @x2py1090 Tm_type)) (not (HasType @x3py783 (Tm_arrow_12929d79484018a159cc54c10d62f794 @x1py1466 @x0py1395 @x2py1090))) (not (HasType @x4py571 (FStar.Pervasives.all_post_h @x0py1395 @x1py1466))) (not (HasType @x5py433 @x0py1395))) :pattern ((FStar.Pervasives.all_close_wp @x0py1395 @x1py1466 @x2py1090 @x3py783 @x4py571 @x5py433)) )) :named typing_FStar.Pervasives.all_close_wp))
(assert (! (forall ((@x0py1396 Term)(@x1py1467 Term)(@x2py1091 Term)(@x3py784 Term)(@x4py572 Term)(@x5py434 Term)(@x6py310 Term)) (! (or (HasType (FStar.Pervasives.all_if_then_else @x0py1396 @x1py1467 @x2py1091 @x3py784 @x4py572 @x5py434 @x6py310) Prims.logical) (not (HasType @x0py1396 Tm_type)) (not (HasType @x1py1467 Tm_type)) (not (HasType @x6py310 @x0py1396)) (not (HasType @x3py784 (FStar.Pervasives.all_wp_h @x0py1396 @x1py1467))) (not (HasType @x2py1091 Tm_type)) (not (HasType @x5py434 (FStar.Pervasives.all_post_h @x0py1396 @x1py1467))) (not (HasType @x4py572 (FStar.Pervasives.all_wp_h @x0py1396 @x1py1467)))) :pattern ((FStar.Pervasives.all_if_then_else @x0py1396 @x1py1467 @x2py1091 @x3py784 @x4py572 @x5py434 @x6py310)) )) :named typing_FStar.Pervasives.all_if_then_else))
(assert (! (forall ((@x0py1397 Term)(@x1py1468 Term)(@x2py1092 Term)(@x3py785 Term)(@x4py573 Term)) (! (or (HasType (FStar.Pervasives.all_ite_wp @x0py1397 @x1py1468 @x2py1092 @x3py785 @x4py573) Prims.logical) (not (HasType @x0py1397 Tm_type)) (not (HasType @x1py1468 Tm_type)) (not (HasType @x2py1092 (FStar.Pervasives.all_wp_h @x0py1397 @x1py1468))) (not (HasType @x3py785 (FStar.Pervasives.all_post_h @x0py1397 @x1py1468))) (not (HasType @x4py573 @x0py1397))) :pattern ((FStar.Pervasives.all_ite_wp @x0py1397 @x1py1468 @x2py1092 @x3py785 @x4py573)) )) :named typing_FStar.Pervasives.all_ite_wp))
(assert (! (forall ((@x0py1398 Term)(@x1py1469 Term)(@x2py1093 Term)(@x3py786 Term)) (! (or (HasType (FStar.Pervasives.all_null_wp @x0py1398 @x1py1469 @x2py1093 @x3py786) Prims.logical) (not (HasType @x0py1398 Tm_type)) (not (HasType @x2py1093 (FStar.Pervasives.all_post_h @x0py1398 @x1py1469))) (not (HasType @x1py1469 Tm_type)) (not (HasType @x3py786 @x0py1398))) :pattern ((FStar.Pervasives.all_null_wp @x0py1398 @x1py1469 @x2py1093 @x3py786)) )) :named typing_FStar.Pervasives.all_null_wp))
(assert (! (forall ((@x0py1399 Term)(@x1py1470 Term)) (! (or (HasType (FStar.Pervasives.all_post_h @x0py1399 @x1py1470) Tm_type) (not (HasType @x0py1399 Tm_type)) (not (HasType @x1py1470 Tm_type))) :pattern ((FStar.Pervasives.all_post_h @x0py1399 @x1py1470)) )) :named typing_FStar.Pervasives.all_post_h))
(assert (! (forall ((@x0py1400 Term)(@x1py1471 Term)(@x2py1094 Term)) (! (or (HasType (FStar.Pervasives.all_post_h_ @x0py1400 @x1py1471 @x2py1094) Tm_type) (not (HasType @x2py1094 Tm_type)) (not (HasType @x1py1471 Tm_type)) (not (HasType @x0py1400 Tm_type))) :pattern ((FStar.Pervasives.all_post_h_ @x0py1400 @x1py1471 @x2py1094)) )) :named typing_FStar.Pervasives.all_post_h_))
(assert (! (forall ((@x0py1401 Term)) (! (or (not (HasType @x0py1401 Tm_type)) (HasType (FStar.Pervasives.all_pre_h @x0py1401) Tm_type)) :pattern ((FStar.Pervasives.all_pre_h @x0py1401)) )) :named typing_FStar.Pervasives.all_pre_h))
(assert (! (forall ((@x0py1402 Term)(@x1py1472 Term)(@x2py1095 Term)(@x3py787 Term)) (! (or (HasType (FStar.Pervasives.all_return @x0py1402 @x1py1472 @x2py1095 @x3py787) (Tm_arrow_1c4871de840a52d38a5b65a5ad4e97ea @x0py1402)) (not (HasType @x0py1402 Tm_type)) (not (HasType @x1py1472 Tm_type)) (not (HasType @x2py1095 @x1py1472)) (not (HasType @x3py787 (FStar.Pervasives.all_post_h @x0py1402 @x1py1472)))) :pattern ((FStar.Pervasives.all_return @x0py1402 @x1py1472 @x2py1095 @x3py787)) )) :named typing_FStar.Pervasives.all_return))
(assert (! (forall ((@x0py1403 Term)(@x1py1473 Term)(@x2py1096 Term)(@x3py788 Term)) (! (or (HasType (FStar.Pervasives.all_stronger @x0py1403 @x1py1473 @x2py1096 @x3py788) Prims.logical) (not (HasType @x0py1403 Tm_type)) (not (HasType @x3py788 (FStar.Pervasives.all_wp_h @x0py1403 @x1py1473))) (not (HasType @x1py1473 Tm_type)) (not (HasType @x2py1096 (FStar.Pervasives.all_wp_h @x0py1403 @x1py1473)))) :pattern ((FStar.Pervasives.all_stronger @x0py1403 @x1py1473 @x2py1096 @x3py788)) )) :named typing_FStar.Pervasives.all_stronger))
(assert (! (forall ((@x0py1404 Term)(@x1py1474 Term)(@x2py1097 Term)) (! (or (HasType (FStar.Pervasives.all_trivial @x0py1404 @x1py1474 @x2py1097) Prims.logical) (not (HasType @x0py1404 Tm_type)) (not (HasType @x1py1474 Tm_type)) (not (HasType @x2py1097 (FStar.Pervasives.all_wp_h @x0py1404 @x1py1474)))) :pattern ((FStar.Pervasives.all_trivial @x0py1404 @x1py1474 @x2py1097)) )) :named typing_FStar.Pervasives.all_trivial))
(assert (! (forall ((@x0py1405 Term)(@x1py1475 Term)) (! (or (HasType (FStar.Pervasives.all_wp_h @x0py1405 @x1py1475) Tm_type) (not (HasType @x0py1405 Tm_type)) (not (HasType @x1py1475 Tm_type))) :pattern ((FStar.Pervasives.all_wp_h @x0py1405 @x1py1475)) )) :named typing_FStar.Pervasives.all_wp_h))
(assert (! (forall ((@x0py1406 Term)) (! (or (not (HasType @x0py1406 Tm_type)) (HasType (FStar.Pervasives.allow_inversion @x0py1406) (FStar.Pervasives_Tm_refine_7026ef6906ebd21e19dc2cc0639312d3 Prims.unit @x0py1406))) :pattern ((FStar.Pervasives.allow_inversion @x0py1406)) )) :named typing_FStar.Pervasives.allow_inversion))
(assert (! (HasType FStar.Pervasives.assume_strictly_positive Prims.unit) :named typing_FStar.Pervasives.assume_strictly_positive))
(assert (! (forall ((@x0py1407 Term)) (! (or (not (HasType @x0py1407 Prims.string)) (HasType (FStar.Pervasives.deprecated @x0py1407) Prims.unit)) :pattern ((FStar.Pervasives.deprecated @x0py1407)) )) :named typing_FStar.Pervasives.deprecated))
(assert (! (forall ((@x0py1408 Term)(@x1py1476 Term)(@x2py1098 Term)) (! (or (HasType (FStar.Pervasives.dfst @x0py1408 @x1py1476 @x2py1098) @x0py1408) (not (HasType @x0py1408 Tm_type)) (not (HasType @x1py1476 (Tm_arrow_e06752ba152f81447b312efcdf8f0e23 @x0py1408))) (not (HasType @x2py1098 (Prims.dtuple2 @x0py1408 @x1py1476)))) :pattern ((FStar.Pervasives.dfst @x0py1408 @x1py1476 @x2py1098)) )) :named typing_FStar.Pervasives.dfst))
(assert (! (HasType FStar.Pervasives.dm4f_bind_range Prims.unit) :named typing_FStar.Pervasives.dm4f_bind_range))
(assert (! (forall ((@x0py1409 Term)(@x1py1477 Term)(@x2py1099 Term)) (! (or (HasType (FStar.Pervasives.dsnd @x0py1409 @x1py1477 @x2py1099) (ApplyTT @x1py1477 (Prims.__proj__Mkdtuple2__item___1 @x0py1409 @x1py1477 @x2py1099))) (not (HasType @x1py1477 (Tm_arrow_e06752ba152f81447b312efcdf8f0e23 @x0py1409))) (not (HasType @x2py1099 (Prims.dtuple2 @x0py1409 @x1py1477))) (not (HasType @x0py1409 Tm_type))) :pattern ((FStar.Pervasives.dsnd @x0py1409 @x1py1477 @x2py1099)) )) :named typing_FStar.Pervasives.dsnd))
(assert (! (forall ((@x0py1410 Term)(@x1py1478 Term)(@x2py1100 Term)(@x3py789 Term)) (! (or (HasType (FStar.Pervasives.ex_assert_p @x0py1410 @x1py1478 @x2py1100 @x3py789) Prims.logical) (not (HasType @x2py1100 (FStar.Pervasives.ex_wp @x0py1410))) (not (HasType @x3py789 (FStar.Pervasives.ex_post @x0py1410))) (not (HasType @x0py1410 Tm_type)) (not (HasType @x1py1478 Tm_type))) :pattern ((FStar.Pervasives.ex_assert_p @x0py1410 @x1py1478 @x2py1100 @x3py789)) )) :named typing_FStar.Pervasives.ex_assert_p))
(assert (! (forall ((@x0py1411 Term)(@x1py1479 Term)(@x2py1101 Term)(@x3py790 Term)) (! (or (HasType (FStar.Pervasives.ex_assume_p @x0py1411 @x1py1479 @x2py1101 @x3py790) Prims.logical) (not (HasType @x3py790 (FStar.Pervasives.ex_post @x0py1411))) (not (HasType @x0py1411 Tm_type)) (not (HasType @x1py1479 Tm_type)) (not (HasType @x2py1101 (FStar.Pervasives.ex_wp @x0py1411)))) :pattern ((FStar.Pervasives.ex_assume_p @x0py1411 @x1py1479 @x2py1101 @x3py790)) )) :named typing_FStar.Pervasives.ex_assume_p))
(assert (! (forall ((@x0py1412 Term)(@x1py1480 Term)(@x2py1102 Term)(@x3py791 Term)(@x4py574 Term)(@x5py435 Term)) (! (or (HasType (FStar.Pervasives.ex_bind_wp @x0py1412 @x1py1480 @x2py1102 @x3py791 @x4py574 @x5py435) Tm_type) (not (HasType @x1py1480 Tm_type)) (not (HasType @x2py1102 Tm_type)) (not (HasType @x3py791 (FStar.Pervasives.ex_wp @x1py1480))) (not (HasType @x0py1412 Prims.range)) (not (HasType @x4py574 (Tm_arrow_d794a58e52e51e13e3b9afe660625c54 @x2py1102 @x1py1480))) (not (HasType @x5py435 (FStar.Pervasives.ex_post @x2py1102)))) :pattern ((FStar.Pervasives.ex_bind_wp @x0py1412 @x1py1480 @x2py1102 @x3py791 @x4py574 @x5py435)) )) :named typing_FStar.Pervasives.ex_bind_wp))
(assert (! (forall ((@x0py1413 Term)(@x1py1481 Term)(@x2py1103 Term)(@x3py792 Term)) (! (or (HasType (FStar.Pervasives.ex_close_wp @x0py1413 @x1py1481 @x2py1103 @x3py792) Prims.logical) (not (HasType @x0py1413 Tm_type)) (not (HasType @x1py1481 Tm_type)) (not (HasType @x2py1103 (Tm_arrow_d794a58e52e51e13e3b9afe660625c54 @x0py1413 @x1py1481))) (not (HasType @x3py792 (FStar.Pervasives.ex_post @x0py1413)))) :pattern ((FStar.Pervasives.ex_close_wp @x0py1413 @x1py1481 @x2py1103 @x3py792)) )) :named typing_FStar.Pervasives.ex_close_wp))
(assert (! (forall ((@x0py1414 Term)(@x1py1482 Term)(@x2py1104 Term)(@x3py793 Term)(@x4py575 Term)) (! (or (HasType (FStar.Pervasives.ex_if_then_else @x0py1414 @x1py1482 @x2py1104 @x3py793 @x4py575) Prims.logical) (not (HasType @x4py575 (FStar.Pervasives.ex_post @x0py1414))) (not (HasType @x1py1482 Tm_type)) (not (HasType @x0py1414 Tm_type)) (not (HasType @x3py793 (FStar.Pervasives.ex_wp @x0py1414))) (not (HasType @x2py1104 (FStar.Pervasives.ex_wp @x0py1414)))) :pattern ((FStar.Pervasives.ex_if_then_else @x0py1414 @x1py1482 @x2py1104 @x3py793 @x4py575)) )) :named typing_FStar.Pervasives.ex_if_then_else))
(assert (! (forall ((@x0py1415 Term)(@x1py1483 Term)(@x2py1105 Term)) (! (or (HasType (FStar.Pervasives.ex_ite_wp @x0py1415 @x1py1483 @x2py1105) Prims.logical) (not (HasType @x0py1415 Tm_type)) (not (HasType @x1py1483 (FStar.Pervasives.ex_wp @x0py1415))) (not (HasType @x2py1105 (FStar.Pervasives.ex_post @x0py1415)))) :pattern ((FStar.Pervasives.ex_ite_wp @x0py1415 @x1py1483 @x2py1105)) )) :named typing_FStar.Pervasives.ex_ite_wp))
(assert (! (forall ((@x0py1416 Term)(@x1py1484 Term)) (! (or (not (HasType @x0py1416 Tm_type)) (not (HasType @x1py1484 (FStar.Pervasives.ex_post @x0py1416))) (HasType (FStar.Pervasives.ex_null_wp @x0py1416 @x1py1484) Prims.logical)) :pattern ((FStar.Pervasives.ex_null_wp @x0py1416 @x1py1484)) )) :named typing_FStar.Pervasives.ex_null_wp))
(assert (! (forall ((@x0py1417 Term)) (! (or (not (HasType @x0py1417 Tm_type)) (HasType (FStar.Pervasives.ex_post @x0py1417) Tm_type)) :pattern ((FStar.Pervasives.ex_post @x0py1417)) )) :named typing_FStar.Pervasives.ex_post))
(assert (! (forall ((@x0py1418 Term)(@x1py1485 Term)) (! (or (not (HasType @x0py1418 Tm_type)) (HasType (FStar.Pervasives.ex_post_ @x0py1418 @x1py1485) Tm_type) (not (HasType @x1py1485 Tm_type))) :pattern ((FStar.Pervasives.ex_post_ @x0py1418 @x1py1485)) )) :named typing_FStar.Pervasives.ex_post_))
(assert (! (HasType FStar.Pervasives.ex_pre Tm_type) :named typing_FStar.Pervasives.ex_pre))
(assert (! (forall ((@x0py1419 Term)(@x1py1486 Term)(@x2py1106 Term)) (! (or (HasType (FStar.Pervasives.ex_return @x0py1419 @x1py1486 @x2py1106) Tm_type) (not (HasType @x0py1419 Tm_type)) (not (HasType @x1py1486 @x0py1419)) (not (HasType @x2py1106 (FStar.Pervasives.ex_post @x0py1419)))) :pattern ((FStar.Pervasives.ex_return @x0py1419 @x1py1486 @x2py1106)) )) :named typing_FStar.Pervasives.ex_return))
(assert (! (forall ((@x0py1420 Term)(@x1py1487 Term)(@x2py1107 Term)) (! (or (HasType (FStar.Pervasives.ex_stronger @x0py1420 @x1py1487 @x2py1107) Prims.logical) (not (HasType @x2py1107 (FStar.Pervasives.ex_wp @x0py1420))) (not (HasType @x0py1420 Tm_type)) (not (HasType @x1py1487 (FStar.Pervasives.ex_wp @x0py1420)))) :pattern ((FStar.Pervasives.ex_stronger @x0py1420 @x1py1487 @x2py1107)) )) :named typing_FStar.Pervasives.ex_stronger))
(assert (! (forall ((@x0py1421 Term)(@x1py1488 Term)) (! (or (not (HasType @x0py1421 Tm_type)) (not (HasType @x1py1488 (FStar.Pervasives.ex_wp @x0py1421))) (HasType (FStar.Pervasives.ex_trivial @x0py1421 @x1py1488) FStar.Pervasives.ex_pre)) :pattern ((FStar.Pervasives.ex_trivial @x0py1421 @x1py1488)) )) :named typing_FStar.Pervasives.ex_trivial))
(assert (! (forall ((@x0py1422 Term)) (! (or (not (HasType @x0py1422 Tm_type)) (HasType (FStar.Pervasives.ex_wp @x0py1422) Tm_type)) :pattern ((FStar.Pervasives.ex_wp @x0py1422)) )) :named typing_FStar.Pervasives.ex_wp))
(assert (! (forall ((@x0py1423 Term)) (! (or (not (HasType @x0py1423 (Prims.list Prims.int))) (HasType (FStar.Pervasives.fail @x0py1423) Prims.unit)) :pattern ((FStar.Pervasives.fail @x0py1423)) )) :named typing_FStar.Pervasives.fail))
(assert (! (HasType FStar.Pervasives.fail_lax Prims.unit) :named typing_FStar.Pervasives.fail_lax))
(assert (! (forall ((@x0py1424 Term)(@x1py1489 Term)) (! (or (not (HasType @x0py1424 Tm_type)) (not (HasType @x1py1489 (FStar.Pervasives_Tm_refine_16d7dda25a162db0722685f27f707102 Prims.unit))) (HasType (FStar.Pervasives.false_elim @x0py1424 @x1py1489) @x0py1424)) :pattern ((FStar.Pervasives.false_elim @x0py1424 @x1py1489)) )) :named typing_FStar.Pervasives.false_elim))
(assert (! (forall ((@x0py1425 Term)(@x1py1490 Term)) (! (or (HasType (FStar.Pervasives.id @x0py1425 @x1py1490) @x0py1425) (not (HasType @x1py1490 @x0py1425)) (not (HasType @x0py1425 Tm_type))) :pattern ((FStar.Pervasives.id @x0py1425 @x1py1490)) )) :named typing_FStar.Pervasives.id))
(assert (! (forall ((@x0py1426 Term)(@x1py1491 Term)) (! (or (HasType (FStar.Pervasives.ignore @x0py1426 @x1py1491) Prims.unit) (not (HasType @x1py1491 @x0py1426)) (not (HasType @x0py1426 Tm_type))) :pattern ((FStar.Pervasives.ignore @x0py1426 @x1py1491)) )) :named typing_FStar.Pervasives.ignore))
(assert (! (HasType FStar.Pervasives.inline_let Prims.unit) :named typing_FStar.Pervasives.inline_let))
(assert (! (forall ((@x0py1427 Term)) (! (or (not (HasType @x0py1427 Tm_type)) (HasType (FStar.Pervasives.inversion @x0py1427) Prims.logical)) :pattern ((FStar.Pervasives.inversion @x0py1427)) )) :named typing_FStar.Pervasives.inversion))
(assert (! (forall ((@x0py1428 Term)(@x1py1492 Term)(@x2py1108 Term)) (! (or (HasType (FStar.Pervasives.lift_div_exn @x0py1428 @x1py1492 @x2py1108) Prims.pure_pre) (not (HasType @x0py1428 Tm_type)) (not (HasType @x1py1492 (Prims.pure_wp @x0py1428))) (not (HasType @x2py1108 (FStar.Pervasives.ex_post @x0py1428)))) :pattern ((FStar.Pervasives.lift_div_exn @x0py1428 @x1py1492 @x2py1108)) )) :named typing_FStar.Pervasives.lift_div_exn))
(assert (! (HasType FStar.Pervasives.must_erase_for_extraction Prims.unit) :named typing_FStar.Pervasives.must_erase_for_extraction))
(assert (! (forall ((@x0py1429 Term)(@x1py1493 Term)(@x2py1109 Term)) (! (or (HasType (FStar.Pervasives.Native.__proj__Mktuple2__item___1 @x0py1429 @x1py1493 @x2py1109) @x0py1429) (not (HasType @x0py1429 Tm_type)) (not (HasType @x1py1493 Tm_type)) (not (HasType @x2py1109 (FStar.Pervasives.Native.tuple2 @x0py1429 @x1py1493)))) :pattern ((FStar.Pervasives.Native.__proj__Mktuple2__item___1 @x0py1429 @x1py1493 @x2py1109)) )) :named typing_FStar.Pervasives.Native.__proj__Mktuple2__item___1))
(assert (! (forall ((@x0py1430 Term)(@x1py1494 Term)(@x2py1110 Term)) (! (or (HasType (FStar.Pervasives.Native.__proj__Mktuple2__item___2 @x0py1430 @x1py1494 @x2py1110) @x1py1494) (not (HasType @x2py1110 (FStar.Pervasives.Native.tuple2 @x0py1430 @x1py1494))) (not (HasType @x0py1430 Tm_type)) (not (HasType @x1py1494 Tm_type))) :pattern ((FStar.Pervasives.Native.__proj__Mktuple2__item___2 @x0py1430 @x1py1494 @x2py1110)) )) :named typing_FStar.Pervasives.Native.__proj__Mktuple2__item___2))
(assert (! (forall ((@x0py1431 Term)(@x1py1495 Term)(@x2py1111 Term)(@x3py794 Term)) (! (or (HasType (FStar.Pervasives.Native.__proj__Mktuple3__item___1 @x0py1431 @x1py1495 @x2py1111 @x3py794) @x0py1431) (not (HasType @x2py1111 Tm_type)) (not (HasType @x3py794 (FStar.Pervasives.Native.tuple3 @x0py1431 @x1py1495 @x2py1111))) (not (HasType @x0py1431 Tm_type)) (not (HasType @x1py1495 Tm_type))) :pattern ((FStar.Pervasives.Native.__proj__Mktuple3__item___1 @x0py1431 @x1py1495 @x2py1111 @x3py794)) )) :named typing_FStar.Pervasives.Native.__proj__Mktuple3__item___1))
(assert (! (forall ((@x0py1432 Term)(@x1py1496 Term)(@x2py1112 Term)(@x3py795 Term)) (! (or (HasType (FStar.Pervasives.Native.__proj__Mktuple3__item___2 @x0py1432 @x1py1496 @x2py1112 @x3py795) @x1py1496) (not (HasType @x3py795 (FStar.Pervasives.Native.tuple3 @x0py1432 @x1py1496 @x2py1112))) (not (HasType @x0py1432 Tm_type)) (not (HasType @x1py1496 Tm_type)) (not (HasType @x2py1112 Tm_type))) :pattern ((FStar.Pervasives.Native.__proj__Mktuple3__item___2 @x0py1432 @x1py1496 @x2py1112 @x3py795)) )) :named typing_FStar.Pervasives.Native.__proj__Mktuple3__item___2))
(assert (! (forall ((@x0py1433 Term)(@x1py1497 Term)(@x2py1113 Term)(@x3py796 Term)) (! (or (HasType (FStar.Pervasives.Native.__proj__Mktuple3__item___3 @x0py1433 @x1py1497 @x2py1113 @x3py796) @x2py1113) (not (HasType @x3py796 (FStar.Pervasives.Native.tuple3 @x0py1433 @x1py1497 @x2py1113))) (not (HasType @x0py1433 Tm_type)) (not (HasType @x1py1497 Tm_type)) (not (HasType @x2py1113 Tm_type))) :pattern ((FStar.Pervasives.Native.__proj__Mktuple3__item___3 @x0py1433 @x1py1497 @x2py1113 @x3py796)) )) :named typing_FStar.Pervasives.Native.__proj__Mktuple3__item___3))
(assert (! (forall ((@x0py1434 Term)(@x1py1498 Term)(@x2py1114 Term)(@x3py797 Term)(@x4py576 Term)) (! (or (HasType (FStar.Pervasives.Native.__proj__Mktuple4__item___1 @x0py1434 @x1py1498 @x2py1114 @x3py797 @x4py576) @x0py1434) (not (HasType @x3py797 Tm_type)) (not (HasType @x4py576 (FStar.Pervasives.Native.tuple4 @x0py1434 @x1py1498 @x2py1114 @x3py797))) (not (HasType @x0py1434 Tm_type)) (not (HasType @x1py1498 Tm_type)) (not (HasType @x2py1114 Tm_type))) :pattern ((FStar.Pervasives.Native.__proj__Mktuple4__item___1 @x0py1434 @x1py1498 @x2py1114 @x3py797 @x4py576)) )) :named typing_FStar.Pervasives.Native.__proj__Mktuple4__item___1))
(assert (! (forall ((@x0py1435 Term)(@x1py1499 Term)(@x2py1115 Term)(@x3py798 Term)(@x4py577 Term)) (! (or (HasType (FStar.Pervasives.Native.__proj__Mktuple4__item___2 @x0py1435 @x1py1499 @x2py1115 @x3py798 @x4py577) @x1py1499) (not (HasType @x4py577 (FStar.Pervasives.Native.tuple4 @x0py1435 @x1py1499 @x2py1115 @x3py798))) (not (HasType @x0py1435 Tm_type)) (not (HasType @x1py1499 Tm_type)) (not (HasType @x2py1115 Tm_type)) (not (HasType @x3py798 Tm_type))) :pattern ((FStar.Pervasives.Native.__proj__Mktuple4__item___2 @x0py1435 @x1py1499 @x2py1115 @x3py798 @x4py577)) )) :named typing_FStar.Pervasives.Native.__proj__Mktuple4__item___2))
(assert (! (forall ((@x0py1436 Term)(@x1py1500 Term)(@x2py1116 Term)(@x3py799 Term)(@x4py578 Term)) (! (or (HasType (FStar.Pervasives.Native.__proj__Mktuple4__item___3 @x0py1436 @x1py1500 @x2py1116 @x3py799 @x4py578) @x2py1116) (not (HasType @x4py578 (FStar.Pervasives.Native.tuple4 @x0py1436 @x1py1500 @x2py1116 @x3py799))) (not (HasType @x0py1436 Tm_type)) (not (HasType @x1py1500 Tm_type)) (not (HasType @x2py1116 Tm_type)) (not (HasType @x3py799 Tm_type))) :pattern ((FStar.Pervasives.Native.__proj__Mktuple4__item___3 @x0py1436 @x1py1500 @x2py1116 @x3py799 @x4py578)) )) :named typing_FStar.Pervasives.Native.__proj__Mktuple4__item___3))
(assert (! (forall ((@x0py1437 Term)(@x1py1501 Term)(@x2py1117 Term)(@x3py800 Term)(@x4py579 Term)) (! (or (HasType (FStar.Pervasives.Native.__proj__Mktuple4__item___4 @x0py1437 @x1py1501 @x2py1117 @x3py800 @x4py579) @x3py800) (not (HasType @x4py579 (FStar.Pervasives.Native.tuple4 @x0py1437 @x1py1501 @x2py1117 @x3py800))) (not (HasType @x0py1437 Tm_type)) (not (HasType @x1py1501 Tm_type)) (not (HasType @x2py1117 Tm_type)) (not (HasType @x3py800 Tm_type))) :pattern ((FStar.Pervasives.Native.__proj__Mktuple4__item___4 @x0py1437 @x1py1501 @x2py1117 @x3py800 @x4py579)) )) :named typing_FStar.Pervasives.Native.__proj__Mktuple4__item___4))
(assert (! (forall ((@x0py1438 Term)(@x1py1502 Term)(@x2py1118 Term)(@x3py801 Term)(@x4py580 Term)(@x5py436 Term)) (! (or (HasType (FStar.Pervasives.Native.__proj__Mktuple5__item___1 @x0py1438 @x1py1502 @x2py1118 @x3py801 @x4py580 @x5py436) @x0py1438) (not (HasType @x4py580 Tm_type)) (not (HasType @x5py436 (FStar.Pervasives.Native.tuple5 @x0py1438 @x1py1502 @x2py1118 @x3py801 @x4py580))) (not (HasType @x0py1438 Tm_type)) (not (HasType @x1py1502 Tm_type)) (not (HasType @x2py1118 Tm_type)) (not (HasType @x3py801 Tm_type))) :pattern ((FStar.Pervasives.Native.__proj__Mktuple5__item___1 @x0py1438 @x1py1502 @x2py1118 @x3py801 @x4py580 @x5py436)) )) :named typing_FStar.Pervasives.Native.__proj__Mktuple5__item___1))
(assert (! (forall ((@x0py1439 Term)(@x1py1503 Term)(@x2py1119 Term)(@x3py802 Term)(@x4py581 Term)(@x5py437 Term)) (! (or (HasType (FStar.Pervasives.Native.__proj__Mktuple5__item___2 @x0py1439 @x1py1503 @x2py1119 @x3py802 @x4py581 @x5py437) @x1py1503) (not (HasType @x0py1439 Tm_type)) (not (HasType @x5py437 (FStar.Pervasives.Native.tuple5 @x0py1439 @x1py1503 @x2py1119 @x3py802 @x4py581))) (not (HasType @x1py1503 Tm_type)) (not (HasType @x2py1119 Tm_type)) (not (HasType @x3py802 Tm_type)) (not (HasType @x4py581 Tm_type))) :pattern ((FStar.Pervasives.Native.__proj__Mktuple5__item___2 @x0py1439 @x1py1503 @x2py1119 @x3py802 @x4py581 @x5py437)) )) :named typing_FStar.Pervasives.Native.__proj__Mktuple5__item___2))
(assert (! (forall ((@x0py1440 Term)(@x1py1504 Term)(@x2py1120 Term)(@x3py803 Term)(@x4py582 Term)(@x5py438 Term)) (! (or (HasType (FStar.Pervasives.Native.__proj__Mktuple5__item___3 @x0py1440 @x1py1504 @x2py1120 @x3py803 @x4py582 @x5py438) @x2py1120) (not (HasType @x0py1440 Tm_type)) (not (HasType @x5py438 (FStar.Pervasives.Native.tuple5 @x0py1440 @x1py1504 @x2py1120 @x3py803 @x4py582))) (not (HasType @x1py1504 Tm_type)) (not (HasType @x2py1120 Tm_type)) (not (HasType @x3py803 Tm_type)) (not (HasType @x4py582 Tm_type))) :pattern ((FStar.Pervasives.Native.__proj__Mktuple5__item___3 @x0py1440 @x1py1504 @x2py1120 @x3py803 @x4py582 @x5py438)) )) :named typing_FStar.Pervasives.Native.__proj__Mktuple5__item___3))
(assert (! (forall ((@x0py1441 Term)(@x1py1505 Term)(@x2py1121 Term)(@x3py804 Term)(@x4py583 Term)(@x5py439 Term)) (! (or (HasType (FStar.Pervasives.Native.__proj__Mktuple5__item___4 @x0py1441 @x1py1505 @x2py1121 @x3py804 @x4py583 @x5py439) @x3py804) (not (HasType @x5py439 (FStar.Pervasives.Native.tuple5 @x0py1441 @x1py1505 @x2py1121 @x3py804 @x4py583))) (not (HasType @x0py1441 Tm_type)) (not (HasType @x1py1505 Tm_type)) (not (HasType @x2py1121 Tm_type)) (not (HasType @x3py804 Tm_type)) (not (HasType @x4py583 Tm_type))) :pattern ((FStar.Pervasives.Native.__proj__Mktuple5__item___4 @x0py1441 @x1py1505 @x2py1121 @x3py804 @x4py583 @x5py439)) )) :named typing_FStar.Pervasives.Native.__proj__Mktuple5__item___4))
(assert (! (forall ((@x0py1442 Term)(@x1py1506 Term)(@x2py1122 Term)(@x3py805 Term)(@x4py584 Term)(@x5py440 Term)) (! (or (HasType (FStar.Pervasives.Native.__proj__Mktuple5__item___5 @x0py1442 @x1py1506 @x2py1122 @x3py805 @x4py584 @x5py440) @x4py584) (not (HasType @x5py440 (FStar.Pervasives.Native.tuple5 @x0py1442 @x1py1506 @x2py1122 @x3py805 @x4py584))) (not (HasType @x0py1442 Tm_type)) (not (HasType @x1py1506 Tm_type)) (not (HasType @x2py1122 Tm_type)) (not (HasType @x3py805 Tm_type)) (not (HasType @x4py584 Tm_type))) :pattern ((FStar.Pervasives.Native.__proj__Mktuple5__item___5 @x0py1442 @x1py1506 @x2py1122 @x3py805 @x4py584 @x5py440)) )) :named typing_FStar.Pervasives.Native.__proj__Mktuple5__item___5))
(assert (! (forall ((@x0py1443 Term)(@x1py1507 Term)(@x2py1123 Term)(@x3py806 Term)(@x4py585 Term)(@x5py441 Term)(@x6py311 Term)) (! (or (HasType (FStar.Pervasives.Native.__proj__Mktuple6__item___1 @x0py1443 @x1py1507 @x2py1123 @x3py806 @x4py585 @x5py441 @x6py311) @x0py1443) (not (HasType @x5py441 Tm_type)) (not (HasType @x0py1443 Tm_type)) (not (HasType @x6py311 (FStar.Pervasives.Native.tuple6 @x0py1443 @x1py1507 @x2py1123 @x3py806 @x4py585 @x5py441))) (not (HasType @x1py1507 Tm_type)) (not (HasType @x2py1123 Tm_type)) (not (HasType @x3py806 Tm_type)) (not (HasType @x4py585 Tm_type))) :pattern ((FStar.Pervasives.Native.__proj__Mktuple6__item___1 @x0py1443 @x1py1507 @x2py1123 @x3py806 @x4py585 @x5py441 @x6py311)) )) :named typing_FStar.Pervasives.Native.__proj__Mktuple6__item___1))
(assert (! (forall ((@x0py1444 Term)(@x1py1508 Term)(@x2py1124 Term)(@x3py807 Term)(@x4py586 Term)(@x5py442 Term)(@x6py312 Term)) (! (or (HasType (FStar.Pervasives.Native.__proj__Mktuple6__item___2 @x0py1444 @x1py1508 @x2py1124 @x3py807 @x4py586 @x5py442 @x6py312) @x1py1508) (not (HasType @x0py1444 Tm_type)) (not (HasType @x1py1508 Tm_type)) (not (HasType @x6py312 (FStar.Pervasives.Native.tuple6 @x0py1444 @x1py1508 @x2py1124 @x3py807 @x4py586 @x5py442))) (not (HasType @x2py1124 Tm_type)) (not (HasType @x3py807 Tm_type)) (not (HasType @x4py586 Tm_type)) (not (HasType @x5py442 Tm_type))) :pattern ((FStar.Pervasives.Native.__proj__Mktuple6__item___2 @x0py1444 @x1py1508 @x2py1124 @x3py807 @x4py586 @x5py442 @x6py312)) )) :named typing_FStar.Pervasives.Native.__proj__Mktuple6__item___2))
(assert (! (forall ((@x0py1445 Term)(@x1py1509 Term)(@x2py1125 Term)(@x3py808 Term)(@x4py587 Term)(@x5py443 Term)(@x6py313 Term)) (! (or (HasType (FStar.Pervasives.Native.__proj__Mktuple6__item___3 @x0py1445 @x1py1509 @x2py1125 @x3py808 @x4py587 @x5py443 @x6py313) @x2py1125) (not (HasType @x0py1445 Tm_type)) (not (HasType @x1py1509 Tm_type)) (not (HasType @x6py313 (FStar.Pervasives.Native.tuple6 @x0py1445 @x1py1509 @x2py1125 @x3py808 @x4py587 @x5py443))) (not (HasType @x2py1125 Tm_type)) (not (HasType @x3py808 Tm_type)) (not (HasType @x4py587 Tm_type)) (not (HasType @x5py443 Tm_type))) :pattern ((FStar.Pervasives.Native.__proj__Mktuple6__item___3 @x0py1445 @x1py1509 @x2py1125 @x3py808 @x4py587 @x5py443 @x6py313)) )) :named typing_FStar.Pervasives.Native.__proj__Mktuple6__item___3))
(assert (! (forall ((@x0py1446 Term)(@x1py1510 Term)(@x2py1126 Term)(@x3py809 Term)(@x4py588 Term)(@x5py444 Term)(@x6py314 Term)) (! (or (HasType (FStar.Pervasives.Native.__proj__Mktuple6__item___4 @x0py1446 @x1py1510 @x2py1126 @x3py809 @x4py588 @x5py444 @x6py314) @x3py809) (not (HasType @x6py314 (FStar.Pervasives.Native.tuple6 @x0py1446 @x1py1510 @x2py1126 @x3py809 @x4py588 @x5py444))) (not (HasType @x0py1446 Tm_type)) (not (HasType @x1py1510 Tm_type)) (not (HasType @x2py1126 Tm_type)) (not (HasType @x3py809 Tm_type)) (not (HasType @x4py588 Tm_type)) (not (HasType @x5py444 Tm_type))) :pattern ((FStar.Pervasives.Native.__proj__Mktuple6__item___4 @x0py1446 @x1py1510 @x2py1126 @x3py809 @x4py588 @x5py444 @x6py314)) )) :named typing_FStar.Pervasives.Native.__proj__Mktuple6__item___4))
(assert (! (forall ((@x0py1447 Term)(@x1py1511 Term)(@x2py1127 Term)(@x3py810 Term)(@x4py589 Term)(@x5py445 Term)(@x6py315 Term)) (! (or (HasType (FStar.Pervasives.Native.__proj__Mktuple6__item___5 @x0py1447 @x1py1511 @x2py1127 @x3py810 @x4py589 @x5py445 @x6py315) @x4py589) (not (HasType @x6py315 (FStar.Pervasives.Native.tuple6 @x0py1447 @x1py1511 @x2py1127 @x3py810 @x4py589 @x5py445))) (not (HasType @x0py1447 Tm_type)) (not (HasType @x1py1511 Tm_type)) (not (HasType @x2py1127 Tm_type)) (not (HasType @x3py810 Tm_type)) (not (HasType @x4py589 Tm_type)) (not (HasType @x5py445 Tm_type))) :pattern ((FStar.Pervasives.Native.__proj__Mktuple6__item___5 @x0py1447 @x1py1511 @x2py1127 @x3py810 @x4py589 @x5py445 @x6py315)) )) :named typing_FStar.Pervasives.Native.__proj__Mktuple6__item___5))
(assert (! (forall ((@x0py1448 Term)(@x1py1512 Term)(@x2py1128 Term)(@x3py811 Term)(@x4py590 Term)(@x5py446 Term)(@x6py316 Term)) (! (or (HasType (FStar.Pervasives.Native.__proj__Mktuple6__item___6 @x0py1448 @x1py1512 @x2py1128 @x3py811 @x4py590 @x5py446 @x6py316) @x5py446) (not (HasType @x6py316 (FStar.Pervasives.Native.tuple6 @x0py1448 @x1py1512 @x2py1128 @x3py811 @x4py590 @x5py446))) (not (HasType @x0py1448 Tm_type)) (not (HasType @x1py1512 Tm_type)) (not (HasType @x2py1128 Tm_type)) (not (HasType @x3py811 Tm_type)) (not (HasType @x4py590 Tm_type)) (not (HasType @x5py446 Tm_type))) :pattern ((FStar.Pervasives.Native.__proj__Mktuple6__item___6 @x0py1448 @x1py1512 @x2py1128 @x3py811 @x4py590 @x5py446 @x6py316)) )) :named typing_FStar.Pervasives.Native.__proj__Mktuple6__item___6))
(assert (! (forall ((@x0py1449 Term)(@x1py1513 Term)(@x2py1129 Term)(@x3py812 Term)(@x4py591 Term)(@x5py447 Term)(@x6py317 Term)(@x7py242 Term)) (! (or (HasType (FStar.Pervasives.Native.__proj__Mktuple7__item___1 @x0py1449 @x1py1513 @x2py1129 @x3py812 @x4py591 @x5py447 @x6py317 @x7py242) @x0py1449) (not (HasType @x6py317 Tm_type)) (not (HasType @x0py1449 Tm_type)) (not (HasType @x1py1513 Tm_type)) (not (HasType @x7py242 (FStar.Pervasives.Native.tuple7 @x0py1449 @x1py1513 @x2py1129 @x3py812 @x4py591 @x5py447 @x6py317))) (not (HasType @x2py1129 Tm_type)) (not (HasType @x3py812 Tm_type)) (not (HasType @x4py591 Tm_type)) (not (HasType @x5py447 Tm_type))) :pattern ((FStar.Pervasives.Native.__proj__Mktuple7__item___1 @x0py1449 @x1py1513 @x2py1129 @x3py812 @x4py591 @x5py447 @x6py317 @x7py242)) )) :named typing_FStar.Pervasives.Native.__proj__Mktuple7__item___1))
(assert (! (forall ((@x0py1450 Term)(@x1py1514 Term)(@x2py1130 Term)(@x3py813 Term)(@x4py592 Term)(@x5py448 Term)(@x6py318 Term)(@x7py243 Term)) (! (or (HasType (FStar.Pervasives.Native.__proj__Mktuple7__item___2 @x0py1450 @x1py1514 @x2py1130 @x3py813 @x4py592 @x5py448 @x6py318 @x7py243) @x1py1514) (not (HasType @x0py1450 Tm_type)) (not (HasType @x1py1514 Tm_type)) (not (HasType @x2py1130 Tm_type)) (not (HasType @x7py243 (FStar.Pervasives.Native.tuple7 @x0py1450 @x1py1514 @x2py1130 @x3py813 @x4py592 @x5py448 @x6py318))) (not (HasType @x3py813 Tm_type)) (not (HasType @x4py592 Tm_type)) (not (HasType @x5py448 Tm_type)) (not (HasType @x6py318 Tm_type))) :pattern ((FStar.Pervasives.Native.__proj__Mktuple7__item___2 @x0py1450 @x1py1514 @x2py1130 @x3py813 @x4py592 @x5py448 @x6py318 @x7py243)) )) :named typing_FStar.Pervasives.Native.__proj__Mktuple7__item___2))
(assert (! (forall ((@x0py1451 Term)(@x1py1515 Term)(@x2py1131 Term)(@x3py814 Term)(@x4py593 Term)(@x5py449 Term)(@x6py319 Term)(@x7py244 Term)) (! (or (HasType (FStar.Pervasives.Native.__proj__Mktuple7__item___3 @x0py1451 @x1py1515 @x2py1131 @x3py814 @x4py593 @x5py449 @x6py319 @x7py244) @x2py1131) (not (HasType @x0py1451 Tm_type)) (not (HasType @x1py1515 Tm_type)) (not (HasType @x2py1131 Tm_type)) (not (HasType @x7py244 (FStar.Pervasives.Native.tuple7 @x0py1451 @x1py1515 @x2py1131 @x3py814 @x4py593 @x5py449 @x6py319))) (not (HasType @x3py814 Tm_type)) (not (HasType @x4py593 Tm_type)) (not (HasType @x5py449 Tm_type)) (not (HasType @x6py319 Tm_type))) :pattern ((FStar.Pervasives.Native.__proj__Mktuple7__item___3 @x0py1451 @x1py1515 @x2py1131 @x3py814 @x4py593 @x5py449 @x6py319 @x7py244)) )) :named typing_FStar.Pervasives.Native.__proj__Mktuple7__item___3))
(assert (! (forall ((@x0py1452 Term)(@x1py1516 Term)(@x2py1132 Term)(@x3py815 Term)(@x4py594 Term)(@x5py450 Term)(@x6py320 Term)(@x7py245 Term)) (! (or (HasType (FStar.Pervasives.Native.__proj__Mktuple7__item___4 @x0py1452 @x1py1516 @x2py1132 @x3py815 @x4py594 @x5py450 @x6py320 @x7py245) @x3py815) (not (HasType @x0py1452 Tm_type)) (not (HasType @x7py245 (FStar.Pervasives.Native.tuple7 @x0py1452 @x1py1516 @x2py1132 @x3py815 @x4py594 @x5py450 @x6py320))) (not (HasType @x1py1516 Tm_type)) (not (HasType @x2py1132 Tm_type)) (not (HasType @x3py815 Tm_type)) (not (HasType @x4py594 Tm_type)) (not (HasType @x5py450 Tm_type)) (not (HasType @x6py320 Tm_type))) :pattern ((FStar.Pervasives.Native.__proj__Mktuple7__item___4 @x0py1452 @x1py1516 @x2py1132 @x3py815 @x4py594 @x5py450 @x6py320 @x7py245)) )) :named typing_FStar.Pervasives.Native.__proj__Mktuple7__item___4))
(assert (! (forall ((@x0py1453 Term)(@x1py1517 Term)(@x2py1133 Term)(@x3py816 Term)(@x4py595 Term)(@x5py451 Term)(@x6py321 Term)(@x7py246 Term)) (! (or (HasType (FStar.Pervasives.Native.__proj__Mktuple7__item___5 @x0py1453 @x1py1517 @x2py1133 @x3py816 @x4py595 @x5py451 @x6py321 @x7py246) @x4py595) (not (HasType @x0py1453 Tm_type)) (not (HasType @x7py246 (FStar.Pervasives.Native.tuple7 @x0py1453 @x1py1517 @x2py1133 @x3py816 @x4py595 @x5py451 @x6py321))) (not (HasType @x1py1517 Tm_type)) (not (HasType @x2py1133 Tm_type)) (not (HasType @x3py816 Tm_type)) (not (HasType @x4py595 Tm_type)) (not (HasType @x5py451 Tm_type)) (not (HasType @x6py321 Tm_type))) :pattern ((FStar.Pervasives.Native.__proj__Mktuple7__item___5 @x0py1453 @x1py1517 @x2py1133 @x3py816 @x4py595 @x5py451 @x6py321 @x7py246)) )) :named typing_FStar.Pervasives.Native.__proj__Mktuple7__item___5))
(assert (! (forall ((@x0py1454 Term)(@x1py1518 Term)(@x2py1134 Term)(@x3py817 Term)(@x4py596 Term)(@x5py452 Term)(@x6py322 Term)(@x7py247 Term)) (! (or (HasType (FStar.Pervasives.Native.__proj__Mktuple7__item___6 @x0py1454 @x1py1518 @x2py1134 @x3py817 @x4py596 @x5py452 @x6py322 @x7py247) @x5py452) (not (HasType @x0py1454 Tm_type)) (not (HasType @x7py247 (FStar.Pervasives.Native.tuple7 @x0py1454 @x1py1518 @x2py1134 @x3py817 @x4py596 @x5py452 @x6py322))) (not (HasType @x1py1518 Tm_type)) (not (HasType @x2py1134 Tm_type)) (not (HasType @x3py817 Tm_type)) (not (HasType @x4py596 Tm_type)) (not (HasType @x5py452 Tm_type)) (not (HasType @x6py322 Tm_type))) :pattern ((FStar.Pervasives.Native.__proj__Mktuple7__item___6 @x0py1454 @x1py1518 @x2py1134 @x3py817 @x4py596 @x5py452 @x6py322 @x7py247)) )) :named typing_FStar.Pervasives.Native.__proj__Mktuple7__item___6))
(assert (! (forall ((@x0py1455 Term)(@x1py1519 Term)(@x2py1135 Term)(@x3py818 Term)(@x4py597 Term)(@x5py453 Term)(@x6py323 Term)(@x7py248 Term)) (! (or (HasType (FStar.Pervasives.Native.__proj__Mktuple7__item___7 @x0py1455 @x1py1519 @x2py1135 @x3py818 @x4py597 @x5py453 @x6py323 @x7py248) @x6py323) (not (HasType @x0py1455 Tm_type)) (not (HasType @x7py248 (FStar.Pervasives.Native.tuple7 @x0py1455 @x1py1519 @x2py1135 @x3py818 @x4py597 @x5py453 @x6py323))) (not (HasType @x1py1519 Tm_type)) (not (HasType @x2py1135 Tm_type)) (not (HasType @x3py818 Tm_type)) (not (HasType @x4py597 Tm_type)) (not (HasType @x5py453 Tm_type)) (not (HasType @x6py323 Tm_type))) :pattern ((FStar.Pervasives.Native.__proj__Mktuple7__item___7 @x0py1455 @x1py1519 @x2py1135 @x3py818 @x4py597 @x5py453 @x6py323 @x7py248)) )) :named typing_FStar.Pervasives.Native.__proj__Mktuple7__item___7))
(assert (! (forall ((@x0py1456 Term)(@x1py1520 Term)(@x2py1136 Term)(@x3py819 Term)(@x4py598 Term)(@x5py454 Term)(@x6py324 Term)(@x7py249 Term)(@x8py158 Term)) (! (or (HasType (FStar.Pervasives.Native.__proj__Mktuple8__item___1 @x0py1456 @x1py1520 @x2py1136 @x3py819 @x4py598 @x5py454 @x6py324 @x7py249 @x8py158) @x0py1456) (not (HasType @x0py1456 Tm_type)) (not (HasType @x7py249 Tm_type)) (not (HasType @x1py1520 Tm_type)) (not (HasType @x2py1136 Tm_type)) (not (HasType @x8py158 (FStar.Pervasives.Native.tuple8 @x0py1456 @x1py1520 @x2py1136 @x3py819 @x4py598 @x5py454 @x6py324 @x7py249))) (not (HasType @x3py819 Tm_type)) (not (HasType @x4py598 Tm_type)) (not (HasType @x5py454 Tm_type)) (not (HasType @x6py324 Tm_type))) :pattern ((FStar.Pervasives.Native.__proj__Mktuple8__item___1 @x0py1456 @x1py1520 @x2py1136 @x3py819 @x4py598 @x5py454 @x6py324 @x7py249 @x8py158)) )) :named typing_FStar.Pervasives.Native.__proj__Mktuple8__item___1))
(assert (! (forall ((@x0py1457 Term)(@x1py1521 Term)(@x2py1137 Term)(@x3py820 Term)(@x4py599 Term)(@x5py455 Term)(@x6py325 Term)(@x7py250 Term)(@x8py159 Term)) (! (or (HasType (FStar.Pervasives.Native.__proj__Mktuple8__item___2 @x0py1457 @x1py1521 @x2py1137 @x3py820 @x4py599 @x5py455 @x6py325 @x7py250 @x8py159) @x1py1521) (not (HasType @x0py1457 Tm_type)) (not (HasType @x1py1521 Tm_type)) (not (HasType @x2py1137 Tm_type)) (not (HasType @x3py820 Tm_type)) (not (HasType @x8py159 (FStar.Pervasives.Native.tuple8 @x0py1457 @x1py1521 @x2py1137 @x3py820 @x4py599 @x5py455 @x6py325 @x7py250))) (not (HasType @x4py599 Tm_type)) (not (HasType @x5py455 Tm_type)) (not (HasType @x6py325 Tm_type)) (not (HasType @x7py250 Tm_type))) :pattern ((FStar.Pervasives.Native.__proj__Mktuple8__item___2 @x0py1457 @x1py1521 @x2py1137 @x3py820 @x4py599 @x5py455 @x6py325 @x7py250 @x8py159)) )) :named typing_FStar.Pervasives.Native.__proj__Mktuple8__item___2))
(assert (! (forall ((@x0py1458 Term)(@x1py1522 Term)(@x2py1138 Term)(@x3py821 Term)(@x4py600 Term)(@x5py456 Term)(@x6py326 Term)(@x7py251 Term)(@x8py160 Term)) (! (or (HasType (FStar.Pervasives.Native.__proj__Mktuple8__item___3 @x0py1458 @x1py1522 @x2py1138 @x3py821 @x4py600 @x5py456 @x6py326 @x7py251 @x8py160) @x2py1138) (not (HasType @x0py1458 Tm_type)) (not (HasType @x1py1522 Tm_type)) (not (HasType @x2py1138 Tm_type)) (not (HasType @x3py821 Tm_type)) (not (HasType @x8py160 (FStar.Pervasives.Native.tuple8 @x0py1458 @x1py1522 @x2py1138 @x3py821 @x4py600 @x5py456 @x6py326 @x7py251))) (not (HasType @x4py600 Tm_type)) (not (HasType @x5py456 Tm_type)) (not (HasType @x6py326 Tm_type)) (not (HasType @x7py251 Tm_type))) :pattern ((FStar.Pervasives.Native.__proj__Mktuple8__item___3 @x0py1458 @x1py1522 @x2py1138 @x3py821 @x4py600 @x5py456 @x6py326 @x7py251 @x8py160)) )) :named typing_FStar.Pervasives.Native.__proj__Mktuple8__item___3))
(assert (! (forall ((@x0py1459 Term)(@x1py1523 Term)(@x2py1139 Term)(@x3py822 Term)(@x4py601 Term)(@x5py457 Term)(@x6py327 Term)(@x7py252 Term)(@x8py161 Term)) (! (or (HasType (FStar.Pervasives.Native.__proj__Mktuple8__item___4 @x0py1459 @x1py1523 @x2py1139 @x3py822 @x4py601 @x5py457 @x6py327 @x7py252 @x8py161) @x3py822) (not (HasType @x0py1459 Tm_type)) (not (HasType @x1py1523 Tm_type)) (not (HasType @x8py161 (FStar.Pervasives.Native.tuple8 @x0py1459 @x1py1523 @x2py1139 @x3py822 @x4py601 @x5py457 @x6py327 @x7py252))) (not (HasType @x2py1139 Tm_type)) (not (HasType @x3py822 Tm_type)) (not (HasType @x4py601 Tm_type)) (not (HasType @x5py457 Tm_type)) (not (HasType @x6py327 Tm_type)) (not (HasType @x7py252 Tm_type))) :pattern ((FStar.Pervasives.Native.__proj__Mktuple8__item___4 @x0py1459 @x1py1523 @x2py1139 @x3py822 @x4py601 @x5py457 @x6py327 @x7py252 @x8py161)) )) :named typing_FStar.Pervasives.Native.__proj__Mktuple8__item___4))
(assert (! (forall ((@x0py1460 Term)(@x1py1524 Term)(@x2py1140 Term)(@x3py823 Term)(@x4py602 Term)(@x5py458 Term)(@x6py328 Term)(@x7py253 Term)(@x8py162 Term)) (! (or (HasType (FStar.Pervasives.Native.__proj__Mktuple8__item___5 @x0py1460 @x1py1524 @x2py1140 @x3py823 @x4py602 @x5py458 @x6py328 @x7py253 @x8py162) @x4py602) (not (HasType @x0py1460 Tm_type)) (not (HasType @x1py1524 Tm_type)) (not (HasType @x8py162 (FStar.Pervasives.Native.tuple8 @x0py1460 @x1py1524 @x2py1140 @x3py823 @x4py602 @x5py458 @x6py328 @x7py253))) (not (HasType @x2py1140 Tm_type)) (not (HasType @x3py823 Tm_type)) (not (HasType @x4py602 Tm_type)) (not (HasType @x5py458 Tm_type)) (not (HasType @x6py328 Tm_type)) (not (HasType @x7py253 Tm_type))) :pattern ((FStar.Pervasives.Native.__proj__Mktuple8__item___5 @x0py1460 @x1py1524 @x2py1140 @x3py823 @x4py602 @x5py458 @x6py328 @x7py253 @x8py162)) )) :named typing_FStar.Pervasives.Native.__proj__Mktuple8__item___5))
(assert (! (forall ((@x0py1461 Term)(@x1py1525 Term)(@x2py1141 Term)(@x3py824 Term)(@x4py603 Term)(@x5py459 Term)(@x6py329 Term)(@x7py254 Term)(@x8py163 Term)) (! (or (HasType (FStar.Pervasives.Native.__proj__Mktuple8__item___6 @x0py1461 @x1py1525 @x2py1141 @x3py824 @x4py603 @x5py459 @x6py329 @x7py254 @x8py163) @x5py459) (not (HasType @x0py1461 Tm_type)) (not (HasType @x1py1525 Tm_type)) (not (HasType @x8py163 (FStar.Pervasives.Native.tuple8 @x0py1461 @x1py1525 @x2py1141 @x3py824 @x4py603 @x5py459 @x6py329 @x7py254))) (not (HasType @x2py1141 Tm_type)) (not (HasType @x3py824 Tm_type)) (not (HasType @x4py603 Tm_type)) (not (HasType @x5py459 Tm_type)) (not (HasType @x6py329 Tm_type)) (not (HasType @x7py254 Tm_type))) :pattern ((FStar.Pervasives.Native.__proj__Mktuple8__item___6 @x0py1461 @x1py1525 @x2py1141 @x3py824 @x4py603 @x5py459 @x6py329 @x7py254 @x8py163)) )) :named typing_FStar.Pervasives.Native.__proj__Mktuple8__item___6))
(assert (! (forall ((@x0py1462 Term)(@x1py1526 Term)(@x2py1142 Term)(@x3py825 Term)(@x4py604 Term)(@x5py460 Term)(@x6py330 Term)(@x7py255 Term)(@x8py164 Term)) (! (or (HasType (FStar.Pervasives.Native.__proj__Mktuple8__item___7 @x0py1462 @x1py1526 @x2py1142 @x3py825 @x4py604 @x5py460 @x6py330 @x7py255 @x8py164) @x6py330) (not (HasType @x0py1462 Tm_type)) (not (HasType @x1py1526 Tm_type)) (not (HasType @x8py164 (FStar.Pervasives.Native.tuple8 @x0py1462 @x1py1526 @x2py1142 @x3py825 @x4py604 @x5py460 @x6py330 @x7py255))) (not (HasType @x2py1142 Tm_type)) (not (HasType @x3py825 Tm_type)) (not (HasType @x4py604 Tm_type)) (not (HasType @x5py460 Tm_type)) (not (HasType @x6py330 Tm_type)) (not (HasType @x7py255 Tm_type))) :pattern ((FStar.Pervasives.Native.__proj__Mktuple8__item___7 @x0py1462 @x1py1526 @x2py1142 @x3py825 @x4py604 @x5py460 @x6py330 @x7py255 @x8py164)) )) :named typing_FStar.Pervasives.Native.__proj__Mktuple8__item___7))
(assert (! (forall ((@x0py1463 Term)(@x1py1527 Term)(@x2py1143 Term)(@x3py826 Term)(@x4py605 Term)(@x5py461 Term)(@x6py331 Term)(@x7py256 Term)(@x8py165 Term)) (! (or (HasType (FStar.Pervasives.Native.__proj__Mktuple8__item___8 @x0py1463 @x1py1527 @x2py1143 @x3py826 @x4py605 @x5py461 @x6py331 @x7py256 @x8py165) @x7py256) (not (HasType @x0py1463 Tm_type)) (not (HasType @x1py1527 Tm_type)) (not (HasType @x8py165 (FStar.Pervasives.Native.tuple8 @x0py1463 @x1py1527 @x2py1143 @x3py826 @x4py605 @x5py461 @x6py331 @x7py256))) (not (HasType @x2py1143 Tm_type)) (not (HasType @x3py826 Tm_type)) (not (HasType @x4py605 Tm_type)) (not (HasType @x5py461 Tm_type)) (not (HasType @x6py331 Tm_type)) (not (HasType @x7py256 Tm_type))) :pattern ((FStar.Pervasives.Native.__proj__Mktuple8__item___8 @x0py1463 @x1py1527 @x2py1143 @x3py826 @x4py605 @x5py461 @x6py331 @x7py256 @x8py165)) )) :named typing_FStar.Pervasives.Native.__proj__Mktuple8__item___8))
(assert (! (forall ((@x0py1464 Term)(@x1py1528 Term)) (! (or (not (HasType @x0py1464 Tm_type)) (not (HasType @x1py1528 (FStar.Pervasives.Native_Tm_refine_4d5241eb6fe198666a8101195bbd4a2a @x0py1464))) (HasType (FStar.Pervasives.Native.__proj__Some__item__v @x0py1464 @x1py1528) @x0py1464)) :pattern ((FStar.Pervasives.Native.__proj__Some__item__v @x0py1464 @x1py1528)) )) :named typing_FStar.Pervasives.Native.__proj__Some__item__v))
(assert (! (forall ((@x0py1465 Term)) (! (or (not (HasType @x0py1465 (FStar.Pervasives.Native_Tm_refine_735fdbeb3c591d804f924767d4322a6a FStar.Pervasives.Native.norm_step))) (HasType (FStar.Pervasives.Native.__proj__UnfoldAttr__item__a @x0py1465) (FStar.Pervasives.Native.__proj__UnfoldAttr__item__t @x0py1465))) :pattern ((FStar.Pervasives.Native.__proj__UnfoldAttr__item__a @x0py1465)) )) :named typing_FStar.Pervasives.Native.__proj__UnfoldAttr__item__a))
(assert (! (forall ((@x0py1466 Term)) (! (or (not (HasType @x0py1466 (FStar.Pervasives.Native_Tm_refine_735fdbeb3c591d804f924767d4322a6a FStar.Pervasives.Native.norm_step))) (HasType (FStar.Pervasives.Native.__proj__UnfoldAttr__item__t @x0py1466) Tm_type)) :pattern ((FStar.Pervasives.Native.__proj__UnfoldAttr__item__t @x0py1466)) )) :named typing_FStar.Pervasives.Native.__proj__UnfoldAttr__item__t))
(assert (! (forall ((@x0py1467 Term)) (! (or (not (HasType @x0py1467 (FStar.Pervasives.Native_Tm_refine_40cfb467dd44d40edcf16599ec909847 FStar.Pervasives.Native.norm_step))) (HasType (FStar.Pervasives.Native.__proj__UnfoldFully__item___0 @x0py1467) (Prims.list Prims.string))) :pattern ((FStar.Pervasives.Native.__proj__UnfoldFully__item___0 @x0py1467)) )) :named typing_FStar.Pervasives.Native.__proj__UnfoldFully__item___0))
(assert (! (forall ((@x0py1468 Term)) (! (or (not (HasType @x0py1468 (FStar.Pervasives.Native_Tm_refine_f81289758692e8d7ff38327f5b71be85 FStar.Pervasives.Native.norm_step))) (HasType (FStar.Pervasives.Native.__proj__UnfoldOnly__item___0 @x0py1468) (Prims.list Prims.string))) :pattern ((FStar.Pervasives.Native.__proj__UnfoldOnly__item___0 @x0py1468)) )) :named typing_FStar.Pervasives.Native.__proj__UnfoldOnly__item___0))
(assert (! (forall ((@x0py1469 Term)) (! (or (not (Valid @x0py1469)) (not (HasType @x0py1469 Tm_type)) (HasType (FStar.Pervasives.Native.assert_norm @x0py1469) (Prims_Tm_refine_8d65e998a07dd53ec478e27017d9dba5 Prims.unit @x0py1469))) :pattern ((FStar.Pervasives.Native.assert_norm @x0py1469)) )) :named typing_FStar.Pervasives.Native.assert_norm))
(assert (! (HasType FStar.Pervasives.Native.delta FStar.Pervasives.Native.norm_step) :named typing_FStar.Pervasives.Native.delta))
(assert (! (forall ((@x0py1470 Term)(@x1py1529 Term)) (! (or (HasType (FStar.Pervasives.Native.delta_attr @x0py1470 @x1py1529) FStar.Pervasives.Native.norm_step) (not (HasType @x0py1470 Tm_type)) (not (HasType @x1py1529 @x0py1470))) :pattern ((FStar.Pervasives.Native.delta_attr @x0py1470 @x1py1529)) )) :named typing_FStar.Pervasives.Native.delta_attr))
(assert (! (forall ((@x0py1471 Term)) (! (or (not (HasType @x0py1471 (Prims.list Prims.string))) (HasType (FStar.Pervasives.Native.delta_fully @x0py1471) FStar.Pervasives.Native.norm_step)) :pattern ((FStar.Pervasives.Native.delta_fully @x0py1471)) )) :named typing_FStar.Pervasives.Native.delta_fully))
(assert (! (forall ((@x0py1472 Term)) (! (or (not (HasType @x0py1472 (Prims.list Prims.string))) (HasType (FStar.Pervasives.Native.delta_only @x0py1472) FStar.Pervasives.Native.norm_step)) :pattern ((FStar.Pervasives.Native.delta_only @x0py1472)) )) :named typing_FStar.Pervasives.Native.delta_only))
(assert (! (forall ((@x0py1473 Term)(@x1py1530 Term)(@x2py1144 Term)) (! (or (HasType (FStar.Pervasives.Native.fst @x0py1473 @x1py1530 @x2py1144) @x0py1473) (not (HasType @x0py1473 Tm_type)) (not (HasType @x1py1530 Tm_type)) (not (HasType @x2py1144 (FStar.Pervasives.Native.tuple2 @x0py1473 @x1py1530)))) :pattern ((FStar.Pervasives.Native.fst @x0py1473 @x1py1530 @x2py1144)) )) :named typing_FStar.Pervasives.Native.fst))
(assert (! (HasType FStar.Pervasives.Native.iota FStar.Pervasives.Native.norm_step) :named typing_FStar.Pervasives.Native.iota))
(assert (! (forall ((@x0py1474 Term)(@x1py1531 Term)(@x2py1145 Term)) (! (or (HasType (FStar.Pervasives.Native.norm @x0py1474 @x1py1531 @x2py1145) @x1py1531) (not (HasType @x0py1474 (Prims.list FStar.Pervasives.Native.norm_step))) (not (HasType @x1py1531 Tm_type)) (not (HasType @x2py1145 @x1py1531))) :pattern ((FStar.Pervasives.Native.norm @x0py1474 @x1py1531 @x2py1145)) )) :named typing_FStar.Pervasives.Native.norm))
(assert (! (forall ((@x0py1475 Term)) (! (or (not (HasType @x0py1475 Tm_type)) (HasType (FStar.Pervasives.Native.normalize @x0py1475) Tm_type)) :pattern ((FStar.Pervasives.Native.normalize @x0py1475)) )) :named typing_FStar.Pervasives.Native.normalize))
(assert (! (forall ((@x0py1476 Term)(@x1py1532 Term)) (! (or (HasType (FStar.Pervasives.Native.normalize_term @x0py1476 @x1py1532) @x0py1476) (not (HasType @x0py1476 Tm_type)) (not (HasType @x1py1532 @x0py1476))) :pattern ((FStar.Pervasives.Native.normalize_term @x0py1476 @x1py1532)) )) :named typing_FStar.Pervasives.Native.normalize_term))
(assert (! (HasType FStar.Pervasives.Native.primops FStar.Pervasives.Native.norm_step) :named typing_FStar.Pervasives.Native.primops))
(assert (! (HasType FStar.Pervasives.Native.Simpl FStar.Pervasives.Native.norm_step) :named typing_FStar.Pervasives.Native.Simpl))
(assert (! (HasType FStar.Pervasives.Native.simplify FStar.Pervasives.Native.norm_step) :named typing_FStar.Pervasives.Native.simplify))
(assert (! (forall ((@x0py1477 Term)(@x1py1533 Term)) (! (or (HasType (FStar.Pervasives.Native.singleton @x0py1477 @x1py1533) (FStar.Pervasives.Native_Tm_refine_2fbd657fe85bcb2423f9c7e5f9b3bcb5 @x0py1477 @x1py1533)) (not (HasType @x0py1477 Tm_type)) (not (HasType @x1py1533 @x0py1477))) :pattern ((FStar.Pervasives.Native.singleton @x0py1477 @x1py1533)) )) :named typing_FStar.Pervasives.Native.singleton))
(assert (! (forall ((@x0py1478 Term)(@x1py1534 Term)(@x2py1146 Term)) (! (or (HasType (FStar.Pervasives.Native.snd @x0py1478 @x1py1534 @x2py1146) @x1py1534) (not (HasType @x1py1534 Tm_type)) (not (HasType @x2py1146 (FStar.Pervasives.Native.tuple2 @x0py1478 @x1py1534))) (not (HasType @x0py1478 Tm_type))) :pattern ((FStar.Pervasives.Native.snd @x0py1478 @x1py1534 @x2py1146)) )) :named typing_FStar.Pervasives.Native.snd))
(assert (! (forall ((@x0py1479 Term)(@x1py1535 Term)) (! (or (HasType (FStar.Pervasives.Native.UnfoldAttr @x0py1479 @x1py1535) FStar.Pervasives.Native.norm_step) (not (HasType @x0py1479 Tm_type)) (not (HasType @x1py1535 @x0py1479))) :pattern ((FStar.Pervasives.Native.UnfoldAttr @x0py1479 @x1py1535)) )) :named typing_FStar.Pervasives.Native.UnfoldAttr))
(assert (! (forall ((@x0py1480 Term)) (! (or (not (HasType @x0py1480 (Prims.list Prims.string))) (HasType (FStar.Pervasives.Native.UnfoldFully @x0py1480) FStar.Pervasives.Native.norm_step)) :pattern ((FStar.Pervasives.Native.UnfoldFully @x0py1480)) )) :named typing_FStar.Pervasives.Native.UnfoldFully))
(assert (! (forall ((@x0py1481 Term)) (! (or (not (HasType @x0py1481 (Prims.list Prims.string))) (HasType (FStar.Pervasives.Native.UnfoldOnly @x0py1481) FStar.Pervasives.Native.norm_step)) :pattern ((FStar.Pervasives.Native.UnfoldOnly @x0py1481)) )) :named typing_FStar.Pervasives.Native.UnfoldOnly))
(assert (! (forall ((@x0py1482 Term)) (! (or (not (HasType @x0py1482 FStar.Pervasives.Native.norm_step)) (HasType (FStar.Pervasives.Native.uu___is_Delta @x0py1482) Prims.bool)) :pattern ((FStar.Pervasives.Native.uu___is_Delta @x0py1482)) )) :named typing_FStar.Pervasives.Native.uu___is_Delta))
(assert (! (forall ((@x0py1483 Term)) (! (or (not (HasType @x0py1483 FStar.Pervasives.Native.norm_step)) (HasType (FStar.Pervasives.Native.uu___is_HNF @x0py1483) Prims.bool)) :pattern ((FStar.Pervasives.Native.uu___is_HNF @x0py1483)) )) :named typing_FStar.Pervasives.Native.uu___is_HNF))
(assert (! (forall ((@x0py1484 Term)) (! (or (not (HasType @x0py1484 FStar.Pervasives.Native.norm_step)) (HasType (FStar.Pervasives.Native.uu___is_Iota @x0py1484) Prims.bool)) :pattern ((FStar.Pervasives.Native.uu___is_Iota @x0py1484)) )) :named typing_FStar.Pervasives.Native.uu___is_Iota))
(assert (! (forall ((@x0py1485 Term)(@x1py1536 Term)(@x2py1147 Term)) (! (or (HasType (FStar.Pervasives.Native.uu___is_Mktuple2 @x0py1485 @x1py1536 @x2py1147) Prims.bool) (not (HasType @x0py1485 Tm_type)) (not (HasType @x1py1536 Tm_type)) (not (HasType @x2py1147 (FStar.Pervasives.Native.tuple2 @x0py1485 @x1py1536)))) :pattern ((FStar.Pervasives.Native.uu___is_Mktuple2 @x0py1485 @x1py1536 @x2py1147)) )) :named typing_FStar.Pervasives.Native.uu___is_Mktuple2))
(assert (! (forall ((@x0py1486 Term)(@x1py1537 Term)(@x2py1148 Term)(@x3py827 Term)) (! (or (HasType (FStar.Pervasives.Native.uu___is_Mktuple3 @x0py1486 @x1py1537 @x2py1148 @x3py827) Prims.bool) (not (HasType @x2py1148 Tm_type)) (not (HasType @x3py827 (FStar.Pervasives.Native.tuple3 @x0py1486 @x1py1537 @x2py1148))) (not (HasType @x0py1486 Tm_type)) (not (HasType @x1py1537 Tm_type))) :pattern ((FStar.Pervasives.Native.uu___is_Mktuple3 @x0py1486 @x1py1537 @x2py1148 @x3py827)) )) :named typing_FStar.Pervasives.Native.uu___is_Mktuple3))
(assert (! (forall ((@x0py1487 Term)(@x1py1538 Term)(@x2py1149 Term)(@x3py828 Term)(@x4py606 Term)) (! (or (HasType (FStar.Pervasives.Native.uu___is_Mktuple4 @x0py1487 @x1py1538 @x2py1149 @x3py828 @x4py606) Prims.bool) (not (HasType @x3py828 Tm_type)) (not (HasType @x0py1487 Tm_type)) (not (HasType @x4py606 (FStar.Pervasives.Native.tuple4 @x0py1487 @x1py1538 @x2py1149 @x3py828))) (not (HasType @x1py1538 Tm_type)) (not (HasType @x2py1149 Tm_type))) :pattern ((FStar.Pervasives.Native.uu___is_Mktuple4 @x0py1487 @x1py1538 @x2py1149 @x3py828 @x4py606)) )) :named typing_FStar.Pervasives.Native.uu___is_Mktuple4))
(assert (! (forall ((@x0py1488 Term)(@x1py1539 Term)(@x2py1150 Term)(@x3py829 Term)(@x4py607 Term)(@x5py462 Term)) (! (or (HasType (FStar.Pervasives.Native.uu___is_Mktuple5 @x0py1488 @x1py1539 @x2py1150 @x3py829 @x4py607 @x5py462) Prims.bool) (not (HasType @x4py607 Tm_type)) (not (HasType @x0py1488 Tm_type)) (not (HasType @x1py1539 Tm_type)) (not (HasType @x5py462 (FStar.Pervasives.Native.tuple5 @x0py1488 @x1py1539 @x2py1150 @x3py829 @x4py607))) (not (HasType @x2py1150 Tm_type)) (not (HasType @x3py829 Tm_type))) :pattern ((FStar.Pervasives.Native.uu___is_Mktuple5 @x0py1488 @x1py1539 @x2py1150 @x3py829 @x4py607 @x5py462)) )) :named typing_FStar.Pervasives.Native.uu___is_Mktuple5))
(assert (! (forall ((@x0py1489 Term)(@x1py1540 Term)(@x2py1151 Term)(@x3py830 Term)(@x4py608 Term)(@x5py463 Term)(@x6py332 Term)) (! (or (HasType (FStar.Pervasives.Native.uu___is_Mktuple6 @x0py1489 @x1py1540 @x2py1151 @x3py830 @x4py608 @x5py463 @x6py332) Prims.bool) (not (HasType @x0py1489 Tm_type)) (not (HasType @x5py463 Tm_type)) (not (HasType @x1py1540 Tm_type)) (not (HasType @x2py1151 Tm_type)) (not (HasType @x6py332 (FStar.Pervasives.Native.tuple6 @x0py1489 @x1py1540 @x2py1151 @x3py830 @x4py608 @x5py463))) (not (HasType @x3py830 Tm_type)) (not (HasType @x4py608 Tm_type))) :pattern ((FStar.Pervasives.Native.uu___is_Mktuple6 @x0py1489 @x1py1540 @x2py1151 @x3py830 @x4py608 @x5py463 @x6py332)) )) :named typing_FStar.Pervasives.Native.uu___is_Mktuple6))
(assert (! (forall ((@x0py1490 Term)(@x1py1541 Term)(@x2py1152 Term)(@x3py831 Term)(@x4py609 Term)(@x5py464 Term)(@x6py333 Term)(@x7py257 Term)) (! (or (HasType (FStar.Pervasives.Native.uu___is_Mktuple7 @x0py1490 @x1py1541 @x2py1152 @x3py831 @x4py609 @x5py464 @x6py333 @x7py257) Prims.bool) (not (HasType @x0py1490 Tm_type)) (not (HasType @x1py1541 Tm_type)) (not (HasType @x6py333 Tm_type)) (not (HasType @x2py1152 Tm_type)) (not (HasType @x3py831 Tm_type)) (not (HasType @x7py257 (FStar.Pervasives.Native.tuple7 @x0py1490 @x1py1541 @x2py1152 @x3py831 @x4py609 @x5py464 @x6py333))) (not (HasType @x4py609 Tm_type)) (not (HasType @x5py464 Tm_type))) :pattern ((FStar.Pervasives.Native.uu___is_Mktuple7 @x0py1490 @x1py1541 @x2py1152 @x3py831 @x4py609 @x5py464 @x6py333 @x7py257)) )) :named typing_FStar.Pervasives.Native.uu___is_Mktuple7))
(assert (! (forall ((@x0py1491 Term)(@x1py1542 Term)(@x2py1153 Term)(@x3py832 Term)(@x4py610 Term)(@x5py465 Term)(@x6py334 Term)(@x7py258 Term)(@x8py166 Term)) (! (or (HasType (FStar.Pervasives.Native.uu___is_Mktuple8 @x0py1491 @x1py1542 @x2py1153 @x3py832 @x4py610 @x5py465 @x6py334 @x7py258 @x8py166) Prims.bool) (not (HasType @x0py1491 Tm_type)) (not (HasType @x1py1542 Tm_type)) (not (HasType @x2py1153 Tm_type)) (not (HasType @x7py258 Tm_type)) (not (HasType @x3py832 Tm_type)) (not (HasType @x4py610 Tm_type)) (not (HasType @x8py166 (FStar.Pervasives.Native.tuple8 @x0py1491 @x1py1542 @x2py1153 @x3py832 @x4py610 @x5py465 @x6py334 @x7py258))) (not (HasType @x5py465 Tm_type)) (not (HasType @x6py334 Tm_type))) :pattern ((FStar.Pervasives.Native.uu___is_Mktuple8 @x0py1491 @x1py1542 @x2py1153 @x3py832 @x4py610 @x5py465 @x6py334 @x7py258 @x8py166)) )) :named typing_FStar.Pervasives.Native.uu___is_Mktuple8))
(assert (! (forall ((@x0py1492 Term)(@x1py1543 Term)) (! (or (not (HasType @x0py1492 Tm_type)) (not (HasType @x1py1543 (FStar.Pervasives.Native.option @x0py1492))) (HasType (FStar.Pervasives.Native.uu___is_None @x0py1492 @x1py1543) Prims.bool)) :pattern ((FStar.Pervasives.Native.uu___is_None @x0py1492 @x1py1543)) )) :named typing_FStar.Pervasives.Native.uu___is_None))
(assert (! (forall ((@x0py1493 Term)) (! (or (not (HasType @x0py1493 FStar.Pervasives.Native.norm_step)) (HasType (FStar.Pervasives.Native.uu___is_Primops @x0py1493) Prims.bool)) :pattern ((FStar.Pervasives.Native.uu___is_Primops @x0py1493)) )) :named typing_FStar.Pervasives.Native.uu___is_Primops))
(assert (! (forall ((@x0py1494 Term)) (! (or (not (HasType @x0py1494 FStar.Pervasives.Native.norm_step)) (HasType (FStar.Pervasives.Native.uu___is_Simpl @x0py1494) Prims.bool)) :pattern ((FStar.Pervasives.Native.uu___is_Simpl @x0py1494)) )) :named typing_FStar.Pervasives.Native.uu___is_Simpl))
(assert (! (forall ((@x0py1495 Term)(@x1py1544 Term)) (! (or (not (HasType @x0py1495 Tm_type)) (not (HasType @x1py1544 (FStar.Pervasives.Native.option @x0py1495))) (HasType (FStar.Pervasives.Native.uu___is_Some @x0py1495 @x1py1544) Prims.bool)) :pattern ((FStar.Pervasives.Native.uu___is_Some @x0py1495 @x1py1544)) )) :named typing_FStar.Pervasives.Native.uu___is_Some))
(assert (! (forall ((@x0py1496 Term)) (! (or (not (HasType @x0py1496 FStar.Pervasives.Native.norm_step)) (HasType (FStar.Pervasives.Native.uu___is_UnfoldAttr @x0py1496) Prims.bool)) :pattern ((FStar.Pervasives.Native.uu___is_UnfoldAttr @x0py1496)) )) :named typing_FStar.Pervasives.Native.uu___is_UnfoldAttr))
(assert (! (forall ((@x0py1497 Term)) (! (or (not (HasType @x0py1497 FStar.Pervasives.Native.norm_step)) (HasType (FStar.Pervasives.Native.uu___is_UnfoldFully @x0py1497) Prims.bool)) :pattern ((FStar.Pervasives.Native.uu___is_UnfoldFully @x0py1497)) )) :named typing_FStar.Pervasives.Native.uu___is_UnfoldFully))
(assert (! (forall ((@x0py1498 Term)) (! (or (not (HasType @x0py1498 FStar.Pervasives.Native.norm_step)) (HasType (FStar.Pervasives.Native.uu___is_UnfoldOnly @x0py1498) Prims.bool)) :pattern ((FStar.Pervasives.Native.uu___is_UnfoldOnly @x0py1498)) )) :named typing_FStar.Pervasives.Native.uu___is_UnfoldOnly))
(assert (! (forall ((@x0py1499 Term)) (! (or (not (HasType @x0py1499 FStar.Pervasives.Native.norm_step)) (HasType (FStar.Pervasives.Native.uu___is_Weak @x0py1499) Prims.bool)) :pattern ((FStar.Pervasives.Native.uu___is_Weak @x0py1499)) )) :named typing_FStar.Pervasives.Native.uu___is_Weak))
(assert (! (forall ((@x0py1500 Term)) (! (or (not (HasType @x0py1500 FStar.Pervasives.Native.norm_step)) (HasType (FStar.Pervasives.Native.uu___is_Zeta @x0py1500) Prims.bool)) :pattern ((FStar.Pervasives.Native.uu___is_Zeta @x0py1500)) )) :named typing_FStar.Pervasives.Native.uu___is_Zeta))
(assert (! (forall ((@x0py1501 Term)(@x1py1545 Term)) (! (or (HasType (FStar.Pervasives.Native.with_type @x0py1501 @x1py1545) @x0py1501) (not (HasType @x0py1501 Tm_type)) (not (HasType @x1py1545 @x0py1501))) :pattern ((FStar.Pervasives.Native.with_type @x0py1501 @x1py1545)) )) :named typing_FStar.Pervasives.Native.with_type))
(assert (! (forall ((@x0py1502 Term)(@x1py1546 Term)(@x2py1154 Term)(@x3py833 Term)(@x4py611 Term)(@x5py466 Term)) (! (or (HasType (FStar.Pervasives.st_assert_p @x0py1502 @x1py1546 @x2py1154 @x3py833 @x4py611 @x5py466) Prims.logical) (not (HasType @x1py1546 Tm_type)) (not (HasType @x2py1154 Tm_type)) (not (HasType @x3py833 (FStar.Pervasives.st_wp_h @x0py1502 @x1py1546))) (not (HasType @x0py1502 Tm_type)) (not (HasType @x4py611 (FStar.Pervasives.st_post_h @x0py1502 @x1py1546))) (not (HasType @x5py466 @x0py1502))) :pattern ((FStar.Pervasives.st_assert_p @x0py1502 @x1py1546 @x2py1154 @x3py833 @x4py611 @x5py466)) )) :named typing_FStar.Pervasives.st_assert_p))
(assert (! (forall ((@x0py1503 Term)(@x1py1547 Term)(@x2py1155 Term)(@x3py834 Term)(@x4py612 Term)(@x5py467 Term)) (! (or (HasType (FStar.Pervasives.st_assume_p @x0py1503 @x1py1547 @x2py1155 @x3py834 @x4py612 @x5py467) Prims.logical) (not (HasType @x0py1503 Tm_type)) (not (HasType @x1py1547 Tm_type)) (not (HasType @x2py1155 Tm_type)) (not (HasType @x5py467 @x0py1503)) (not (HasType @x3py834 (FStar.Pervasives.st_wp_h @x0py1503 @x1py1547))) (not (HasType @x4py612 (FStar.Pervasives.st_post_h @x0py1503 @x1py1547)))) :pattern ((FStar.Pervasives.st_assume_p @x0py1503 @x1py1547 @x2py1155 @x3py834 @x4py612 @x5py467)) )) :named typing_FStar.Pervasives.st_assume_p))
(assert (! (forall ((@x0py1504 Term)(@x1py1548 Term)(@x2py1156 Term)(@x3py835 Term)(@x4py613 Term)(@x5py468 Term)(@x6py335 Term)(@x7py259 Term)) (! (or (HasType (FStar.Pervasives.st_bind_wp @x0py1504 @x1py1548 @x2py1156 @x3py835 @x4py613 @x5py468 @x6py335 @x7py259) Tm_type) (not (HasType @x4py613 (FStar.Pervasives.st_wp_h @x0py1504 @x2py1156))) (not (HasType @x5py468 (Tm_arrow_d9eac583d9f115ef0dc2cf4de1079b38 @x3py835 @x0py1504 @x2py1156))) (not (HasType @x0py1504 Tm_type)) (not (HasType @x1py1548 Prims.range)) (not (HasType @x6py335 (FStar.Pervasives.st_post_h @x0py1504 @x3py835))) (not (HasType @x2py1156 Tm_type)) (not (HasType @x3py835 Tm_type)) (not (HasType @x7py259 @x0py1504))) :pattern ((FStar.Pervasives.st_bind_wp @x0py1504 @x1py1548 @x2py1156 @x3py835 @x4py613 @x5py468 @x6py335 @x7py259)) )) :named typing_FStar.Pervasives.st_bind_wp))
(assert (! (forall ((@x0py1505 Term)(@x1py1549 Term)(@x2py1157 Term)(@x3py836 Term)(@x4py614 Term)(@x5py469 Term)) (! (or (HasType (FStar.Pervasives.st_close_wp @x0py1505 @x1py1549 @x2py1157 @x3py836 @x4py614 @x5py469) Prims.logical) (not (HasType @x0py1505 Tm_type)) (not (HasType @x1py1549 Tm_type)) (not (HasType @x2py1157 Tm_type)) (not (HasType @x3py836 (Tm_arrow_d9eac583d9f115ef0dc2cf4de1079b38 @x1py1549 @x0py1505 @x2py1157))) (not (HasType @x4py614 (FStar.Pervasives.st_post_h @x0py1505 @x1py1549))) (not (HasType @x5py469 @x0py1505))) :pattern ((FStar.Pervasives.st_close_wp @x0py1505 @x1py1549 @x2py1157 @x3py836 @x4py614 @x5py469)) )) :named typing_FStar.Pervasives.st_close_wp))
(assert (! (forall ((@x0py1506 Term)(@x1py1550 Term)(@x2py1158 Term)(@x3py837 Term)(@x4py615 Term)(@x5py470 Term)(@x6py336 Term)) (! (or (HasType (FStar.Pervasives.st_if_then_else @x0py1506 @x1py1550 @x2py1158 @x3py837 @x4py615 @x5py470 @x6py336) Prims.logical) (not (HasType @x0py1506 Tm_type)) (not (HasType @x1py1550 Tm_type)) (not (HasType @x6py336 @x0py1506)) (not (HasType @x3py837 (FStar.Pervasives.st_wp_h @x0py1506 @x1py1550))) (not (HasType @x2py1158 Tm_type)) (not (HasType @x5py470 (FStar.Pervasives.st_post_h @x0py1506 @x1py1550))) (not (HasType @x4py615 (FStar.Pervasives.st_wp_h @x0py1506 @x1py1550)))) :pattern ((FStar.Pervasives.st_if_then_else @x0py1506 @x1py1550 @x2py1158 @x3py837 @x4py615 @x5py470 @x6py336)) )) :named typing_FStar.Pervasives.st_if_then_else))
(assert (! (forall ((@x0py1507 Term)(@x1py1551 Term)(@x2py1159 Term)(@x3py838 Term)(@x4py616 Term)) (! (or (HasType (FStar.Pervasives.st_ite_wp @x0py1507 @x1py1551 @x2py1159 @x3py838 @x4py616) Prims.logical) (not (HasType @x0py1507 Tm_type)) (not (HasType @x1py1551 Tm_type)) (not (HasType @x2py1159 (FStar.Pervasives.st_wp_h @x0py1507 @x1py1551))) (not (HasType @x3py838 (FStar.Pervasives.st_post_h @x0py1507 @x1py1551))) (not (HasType @x4py616 @x0py1507))) :pattern ((FStar.Pervasives.st_ite_wp @x0py1507 @x1py1551 @x2py1159 @x3py838 @x4py616)) )) :named typing_FStar.Pervasives.st_ite_wp))
(assert (! (forall ((@x0py1508 Term)(@x1py1552 Term)(@x2py1160 Term)(@x3py839 Term)) (! (or (HasType (FStar.Pervasives.st_null_wp @x0py1508 @x1py1552 @x2py1160 @x3py839) Prims.logical) (not (HasType @x0py1508 Tm_type)) (not (HasType @x2py1160 (FStar.Pervasives.st_post_h @x0py1508 @x1py1552))) (not (HasType @x1py1552 Tm_type)) (not (HasType @x3py839 @x0py1508))) :pattern ((FStar.Pervasives.st_null_wp @x0py1508 @x1py1552 @x2py1160 @x3py839)) )) :named typing_FStar.Pervasives.st_null_wp))
(assert (! (forall ((@x0py1509 Term)(@x1py1553 Term)) (! (or (HasType (FStar.Pervasives.st_post_h @x0py1509 @x1py1553) Tm_type) (not (HasType @x0py1509 Tm_type)) (not (HasType @x1py1553 Tm_type))) :pattern ((FStar.Pervasives.st_post_h @x0py1509 @x1py1553)) )) :named typing_FStar.Pervasives.st_post_h))
(assert (! (forall ((@x0py1510 Term)(@x1py1554 Term)(@x2py1161 Term)) (! (or (HasType (FStar.Pervasives.st_post_h_ @x0py1510 @x1py1554 @x2py1161) Tm_type) (not (HasType @x2py1161 Tm_type)) (not (HasType @x1py1554 Tm_type)) (not (HasType @x0py1510 Tm_type))) :pattern ((FStar.Pervasives.st_post_h_ @x0py1510 @x1py1554 @x2py1161)) )) :named typing_FStar.Pervasives.st_post_h_))
(assert (! (forall ((@x0py1511 Term)) (! (or (not (HasType @x0py1511 Tm_type)) (HasType (FStar.Pervasives.st_pre_h @x0py1511) Tm_type)) :pattern ((FStar.Pervasives.st_pre_h @x0py1511)) )) :named typing_FStar.Pervasives.st_pre_h))
(assert (! (forall ((@x0py1512 Term)(@x1py1555 Term)(@x2py1162 Term)(@x3py840 Term)) (! (or (HasType (FStar.Pervasives.st_return @x0py1512 @x1py1555 @x2py1162 @x3py840) (Tm_arrow_1c4871de840a52d38a5b65a5ad4e97ea @x0py1512)) (not (HasType @x0py1512 Tm_type)) (not (HasType @x1py1555 Tm_type)) (not (HasType @x2py1162 @x1py1555)) (not (HasType @x3py840 (FStar.Pervasives.st_post_h @x0py1512 @x1py1555)))) :pattern ((FStar.Pervasives.st_return @x0py1512 @x1py1555 @x2py1162 @x3py840)) )) :named typing_FStar.Pervasives.st_return))
(assert (! (forall ((@x0py1513 Term)(@x1py1556 Term)(@x2py1163 Term)(@x3py841 Term)) (! (or (HasType (FStar.Pervasives.st_stronger @x0py1513 @x1py1556 @x2py1163 @x3py841) Prims.logical) (not (HasType @x0py1513 Tm_type)) (not (HasType @x3py841 (FStar.Pervasives.st_wp_h @x0py1513 @x1py1556))) (not (HasType @x1py1556 Tm_type)) (not (HasType @x2py1163 (FStar.Pervasives.st_wp_h @x0py1513 @x1py1556)))) :pattern ((FStar.Pervasives.st_stronger @x0py1513 @x1py1556 @x2py1163 @x3py841)) )) :named typing_FStar.Pervasives.st_stronger))
(assert (! (forall ((@x0py1514 Term)(@x1py1557 Term)(@x2py1164 Term)) (! (or (HasType (FStar.Pervasives.st_trivial @x0py1514 @x1py1557 @x2py1164) Prims.logical) (not (HasType @x0py1514 Tm_type)) (not (HasType @x1py1557 Tm_type)) (not (HasType @x2py1164 (FStar.Pervasives.st_wp_h @x0py1514 @x1py1557)))) :pattern ((FStar.Pervasives.st_trivial @x0py1514 @x1py1557 @x2py1164)) )) :named typing_FStar.Pervasives.st_trivial))
(assert (! (forall ((@x0py1515 Term)(@x1py1558 Term)) (! (or (HasType (FStar.Pervasives.st_wp_h @x0py1515 @x1py1558) Tm_type) (not (HasType @x0py1515 Tm_type)) (not (HasType @x1py1558 Tm_type))) :pattern ((FStar.Pervasives.st_wp_h @x0py1515 @x1py1558)) )) :named typing_FStar.Pervasives.st_wp_h))
(assert (! (forall ((@x0py1516 Term)) (! (or (not (HasType @x0py1516 FStar.Pervasives.__internal_ocaml_attributes)) (HasType (FStar.Pervasives.uu___is_CConst @x0py1516) Prims.bool)) :pattern ((FStar.Pervasives.uu___is_CConst @x0py1516)) )) :named typing_FStar.Pervasives.uu___is_CConst))
(assert (! (forall ((@x0py1517 Term)) (! (or (not (HasType @x0py1517 FStar.Pervasives.__internal_ocaml_attributes)) (HasType (FStar.Pervasives.uu___is_CEpilogue @x0py1517) Prims.bool)) :pattern ((FStar.Pervasives.uu___is_CEpilogue @x0py1517)) )) :named typing_FStar.Pervasives.uu___is_CEpilogue))
(assert (! (forall ((@x0py1518 Term)) (! (or (not (HasType @x0py1518 FStar.Pervasives.__internal_ocaml_attributes)) (HasType (FStar.Pervasives.uu___is_CInline @x0py1518) Prims.bool)) :pattern ((FStar.Pervasives.uu___is_CInline @x0py1518)) )) :named typing_FStar.Pervasives.uu___is_CInline))
(assert (! (forall ((@x0py1519 Term)) (! (or (not (HasType @x0py1519 FStar.Pervasives.__internal_ocaml_attributes)) (HasType (FStar.Pervasives.uu___is_Comment @x0py1519) Prims.bool)) :pattern ((FStar.Pervasives.uu___is_Comment @x0py1519)) )) :named typing_FStar.Pervasives.uu___is_Comment))
(assert (! (forall ((@x0py1520 Term)) (! (or (not (HasType @x0py1520 FStar.Pervasives.__internal_ocaml_attributes)) (HasType (FStar.Pervasives.uu___is_CPrologue @x0py1520) Prims.bool)) :pattern ((FStar.Pervasives.uu___is_CPrologue @x0py1520)) )) :named typing_FStar.Pervasives.uu___is_CPrologue))
(assert (! (forall ((@x0py1521 Term)(@x1py1559 Term)) (! (or (not (HasType @x0py1521 Tm_type)) (not (HasType @x1py1559 (FStar.Pervasives.result @x0py1521))) (HasType (FStar.Pervasives.uu___is_E @x0py1521 @x1py1559) Prims.bool)) :pattern ((FStar.Pervasives.uu___is_E @x0py1521 @x1py1559)) )) :named typing_FStar.Pervasives.uu___is_E))
(assert (! (forall ((@x0py1522 Term)(@x1py1560 Term)) (! (or (not (HasType @x0py1522 Tm_type)) (not (HasType @x1py1560 (FStar.Pervasives.result @x0py1522))) (HasType (FStar.Pervasives.uu___is_Err @x0py1522 @x1py1560) Prims.bool)) :pattern ((FStar.Pervasives.uu___is_Err @x0py1522 @x1py1560)) )) :named typing_FStar.Pervasives.uu___is_Err))
(assert (! (forall ((@x0py1523 Term)) (! (or (not (HasType @x0py1523 FStar.Pervasives.__internal_ocaml_attributes)) (HasType (FStar.Pervasives.uu___is_Gc @x0py1523) Prims.bool)) :pattern ((FStar.Pervasives.uu___is_Gc @x0py1523)) )) :named typing_FStar.Pervasives.uu___is_Gc))
(assert (! (forall ((@x0py1524 Term)(@x1py1561 Term)(@x2py1165 Term)) (! (or (HasType (FStar.Pervasives.uu___is_Inl @x0py1524 @x1py1561 @x2py1165) Prims.bool) (not (HasType @x0py1524 Tm_type)) (not (HasType @x1py1561 Tm_type)) (not (HasType @x2py1165 (FStar.Pervasives.either @x0py1524 @x1py1561)))) :pattern ((FStar.Pervasives.uu___is_Inl @x0py1524 @x1py1561 @x2py1165)) )) :named typing_FStar.Pervasives.uu___is_Inl))
(assert (! (forall ((@x0py1525 Term)(@x1py1562 Term)(@x2py1166 Term)) (! (or (HasType (FStar.Pervasives.uu___is_Inr @x0py1525 @x1py1562 @x2py1166) Prims.bool) (not (HasType @x2py1166 (FStar.Pervasives.either @x0py1525 @x1py1562))) (not (HasType @x0py1525 Tm_type)) (not (HasType @x1py1562 Tm_type))) :pattern ((FStar.Pervasives.uu___is_Inr @x0py1525 @x1py1562 @x2py1166)) )) :named typing_FStar.Pervasives.uu___is_Inr))
(assert (! (forall ((@x0py1526 Term)(@x1py1563 Term)(@x2py1167 Term)(@x3py842 Term)) (! (or (HasType (FStar.Pervasives.uu___is_Mkdtuple3 @x0py1526 @x1py1563 @x2py1167 @x3py842) Prims.bool) (not (HasType @x2py1167 (Tm_arrow_614c7b5886a6e5b119a37c35c7e4bd59 @x1py1563 @x0py1526))) (not (HasType @x3py842 (FStar.Pervasives.dtuple3 @x0py1526 @x1py1563 @x2py1167))) (not (HasType @x0py1526 Tm_type)) (not (HasType @x1py1563 (Tm_arrow_e06752ba152f81447b312efcdf8f0e23 @x0py1526)))) :pattern ((FStar.Pervasives.uu___is_Mkdtuple3 @x0py1526 @x1py1563 @x2py1167 @x3py842)) )) :named typing_FStar.Pervasives.uu___is_Mkdtuple3))
(assert (! (forall ((@x0py1527 Term)(@x1py1564 Term)(@x2py1168 Term)(@x3py843 Term)(@x4py617 Term)) (! (or (HasType (FStar.Pervasives.uu___is_Mkdtuple4 @x0py1527 @x1py1564 @x2py1168 @x3py843 @x4py617) Prims.bool) (not (HasType @x3py843 (Tm_arrow_dbf39bf049d72c3088e1ed84d246952d @x2py1168 @x1py1564 @x0py1527))) (not (HasType @x0py1527 Tm_type)) (not (HasType @x4py617 (FStar.Pervasives.dtuple4 @x0py1527 @x1py1564 @x2py1168 @x3py843))) (not (HasType @x1py1564 (Tm_arrow_e06752ba152f81447b312efcdf8f0e23 @x0py1527))) (not (HasType @x2py1168 (Tm_arrow_614c7b5886a6e5b119a37c35c7e4bd59 @x1py1564 @x0py1527)))) :pattern ((FStar.Pervasives.uu___is_Mkdtuple4 @x0py1527 @x1py1564 @x2py1168 @x3py843 @x4py617)) )) :named typing_FStar.Pervasives.uu___is_Mkdtuple4))
(assert (! (forall ((@x0py1528 Term)) (! (or (not (HasType @x0py1528 FStar.Pervasives.__internal_ocaml_attributes)) (HasType (FStar.Pervasives.uu___is_PpxDerivingShow @x0py1528) Prims.bool)) :pattern ((FStar.Pervasives.uu___is_PpxDerivingShow @x0py1528)) )) :named typing_FStar.Pervasives.uu___is_PpxDerivingShow))
(assert (! (forall ((@x0py1529 Term)) (! (or (not (HasType @x0py1529 FStar.Pervasives.__internal_ocaml_attributes)) (HasType (FStar.Pervasives.uu___is_PpxDerivingShowConstant @x0py1529) Prims.bool)) :pattern ((FStar.Pervasives.uu___is_PpxDerivingShowConstant @x0py1529)) )) :named typing_FStar.Pervasives.uu___is_PpxDerivingShowConstant))
(assert (! (forall ((@x0py1530 Term)) (! (or (not (HasType @x0py1530 FStar.Pervasives.__internal_ocaml_attributes)) (HasType (FStar.Pervasives.uu___is_PpxDerivingYoJson @x0py1530) Prims.bool)) :pattern ((FStar.Pervasives.uu___is_PpxDerivingYoJson @x0py1530)) )) :named typing_FStar.Pervasives.uu___is_PpxDerivingYoJson))
(assert (! (forall ((@x0py1531 Term)) (! (or (not (HasType @x0py1531 FStar.Pervasives.__internal_ocaml_attributes)) (HasType (FStar.Pervasives.uu___is_Substitute @x0py1531) Prims.bool)) :pattern ((FStar.Pervasives.uu___is_Substitute @x0py1531)) )) :named typing_FStar.Pervasives.uu___is_Substitute))
(assert (! (forall ((@x0py1532 Term)(@x1py1565 Term)) (! (or (not (HasType @x0py1532 Tm_type)) (not (HasType @x1py1565 (FStar.Pervasives.result @x0py1532))) (HasType (FStar.Pervasives.uu___is_V @x0py1532 @x1py1565) Prims.bool)) :pattern ((FStar.Pervasives.uu___is_V @x0py1532 @x1py1565)) )) :named typing_FStar.Pervasives.uu___is_V))
(assert (! (forall ((@x0py1533 Term)(@x1py1566 Term)) (! (HasType (FStar.Pervasives_Tm_abs_08b6cbf5c721293cb051b1b5a6efcdf3 @x0py1533 @x1py1566) (Tm_arrow_1c4871de840a52d38a5b65a5ad4e97ea @x1py1566)) :pattern ((FStar.Pervasives_Tm_abs_08b6cbf5c721293cb051b1b5a6efcdf3 @x0py1533 @x1py1566)) )) :named typing_FStar.Pervasives_Tm_abs_08b6cbf5c721293cb051b1b5a6efcdf3))
(assert (! (forall ((@x0py1534 Term)(@x1py1567 Term)(@x2py1169 Term)(@x3py844 Term)) (! (HasType (FStar.Pervasives_Tm_abs_a31992f5c5dabbfdc6da62a16cd60a28 @x0py1534 @x1py1567 @x2py1169 @x3py844) (Tm_arrow_39ad8232ffc69b341ef9ad0212b74d41 @x2py1169 @x3py844)) :pattern ((FStar.Pervasives_Tm_abs_a31992f5c5dabbfdc6da62a16cd60a28 @x0py1534 @x1py1567 @x2py1169 @x3py844)) )) :named typing_FStar.Pervasives_Tm_abs_a31992f5c5dabbfdc6da62a16cd60a28))
(assert (! (forall ((@x0py1535 Term)(@x1py1568 Term)(@x2py1170 Term)(@x3py845 Term)(@x4py618 Term)) (! (HasType (FStar.Pervasives_Tm_abs_e071eb1ddae878d42677e33386379719 @x0py1535 @x1py1568 @x2py1170 @x3py845 @x4py618) (Tm_arrow_37267229c41a09d7df20584f1caf324f @x3py845 @x4py618)) :pattern ((FStar.Pervasives_Tm_abs_e071eb1ddae878d42677e33386379719 @x0py1535 @x1py1568 @x2py1170 @x3py845 @x4py618)) )) :named typing_FStar.Pervasives_Tm_abs_e071eb1ddae878d42677e33386379719))
(assert (! (forall ((@x0py1536 Term)(@x1py1569 Term)) (! (HasType (FStar.Pervasives_Tm_abs_e607bfcb7d8c23b51c0ff04d27046641 @x0py1536 @x1py1569) (Tm_arrow_aa928d5fea25781a172e9e551de2bee3 @x1py1569)) :pattern ((FStar.Pervasives_Tm_abs_e607bfcb7d8c23b51c0ff04d27046641 @x0py1536 @x1py1569)) )) :named typing_FStar.Pervasives_Tm_abs_e607bfcb7d8c23b51c0ff04d27046641))
(assert (! (forall ((@x0py1537 Term)(@x1py1570 Term)(@x2py1171 Term)(@x3py846 Term)) (! (HasType (FStar.Pervasives_Tm_abs_e8350ed3e632db104170fa7e8c0e0fef @x0py1537 @x1py1570 @x2py1171 @x3py846) (Tm_arrow_aa928d5fea25781a172e9e551de2bee3 @x3py846)) :pattern ((FStar.Pervasives_Tm_abs_e8350ed3e632db104170fa7e8c0e0fef @x0py1537 @x1py1570 @x2py1171 @x3py846)) )) :named typing_FStar.Pervasives_Tm_abs_e8350ed3e632db104170fa7e8c0e0fef))
(assert (! (forall ((@x0py1538 Term)(@x1py1571 Term)(@x2py1172 Term)) (! (HasType (FStar.Pervasives_Tm_abs_fcd1fe475df8761bb0be4af6b43db341 @x0py1538 @x1py1571 @x2py1172) (Tm_arrow_39ad8232ffc69b341ef9ad0212b74d41 @x1py1571 @x2py1172)) :pattern ((FStar.Pervasives_Tm_abs_fcd1fe475df8761bb0be4af6b43db341 @x0py1538 @x1py1571 @x2py1172)) )) :named typing_FStar.Pervasives_Tm_abs_fcd1fe475df8761bb0be4af6b43db341))
(assert (! (forall ((@x0py1539 Term)(@x1py1572 Term)(@x2py1173 Term)) (! (HasType (FStar.Pervasives_Tm_abs_fcfd87b8060d768ae62f6917d2355825 @x0py1539 @x1py1572 @x2py1173) (Tm_arrow_37267229c41a09d7df20584f1caf324f @x1py1572 @x2py1173)) :pattern ((FStar.Pervasives_Tm_abs_fcfd87b8060d768ae62f6917d2355825 @x0py1539 @x1py1572 @x2py1173)) )) :named typing_FStar.Pervasives_Tm_abs_fcfd87b8060d768ae62f6917d2355825))
(assert (! (forall ((@x0py1540 Term)(@x1py1573 Term)(@x2py1174 Term)) (! (or (HasType (Prims.__proj__And__item___0 @x0py1540 @x1py1573 @x2py1174) @x0py1540) (not (HasType @x0py1540 Tm_type)) (not (HasType @x1py1573 Tm_type)) (not (HasType @x2py1174 (Prims.c_and @x0py1540 @x1py1573)))) :pattern ((Prims.__proj__And__item___0 @x0py1540 @x1py1573 @x2py1174)) )) :named typing_Prims.__proj__And__item___0))
(assert (! (forall ((@x0py1541 Term)(@x1py1574 Term)(@x2py1175 Term)) (! (or (HasType (Prims.__proj__And__item___1 @x0py1541 @x1py1574 @x2py1175) @x1py1574) (not (HasType @x2py1175 (Prims.c_and @x0py1541 @x1py1574))) (not (HasType @x0py1541 Tm_type)) (not (HasType @x1py1574 Tm_type))) :pattern ((Prims.__proj__And__item___1 @x0py1541 @x1py1574 @x2py1175)) )) :named typing_Prims.__proj__And__item___1))
(assert (! (forall ((@x0py1542 Term)(@x1py1575 Term)) (! (or (not (HasType @x0py1542 Tm_type)) (not (HasType @x1py1575 (Prims_Tm_refine_7aac12c24449a22c34d98a0ea8ed4a32 @x0py1542))) (HasType (Prims.__proj__Cons__item__hd @x0py1542 @x1py1575) @x0py1542)) :pattern ((Prims.__proj__Cons__item__hd @x0py1542 @x1py1575)) )) :named typing_Prims.__proj__Cons__item__hd))
(assert (! (forall ((@x0py1543 Term)(@x1py1576 Term)) (! (or (not (HasType @x0py1543 Tm_type)) (not (HasType @x1py1576 (Prims_Tm_refine_7aac12c24449a22c34d98a0ea8ed4a32 @x0py1543))) (HasType (Prims.__proj__Cons__item__tl @x0py1543 @x1py1576) (Prims.list @x0py1543))) :pattern ((Prims.__proj__Cons__item__tl @x0py1543 @x1py1576)) )) :named typing_Prims.__proj__Cons__item__tl))
(assert (! (forall ((@x0py1544 Term)(@x1py1577 Term)(@x2py1176 Term)) (! (or (not (HasType @x1py1577 Tm_type)) (not (HasType @x2py1176 (Prims_Tm_refine_51387c0a7ef77e43ab89d4ae2b6b464d @x0py1544 @x1py1577))) (HasType (Prims.__proj__Left__item___0 @x0py1544 @x1py1577 @x2py1176) @x0py1544) (not (HasType @x0py1544 Tm_type))) :pattern ((Prims.__proj__Left__item___0 @x0py1544 @x1py1577 @x2py1176)) )) :named typing_Prims.__proj__Left__item___0))
(assert (! (forall ((@x0py1545 Term)(@x1py1578 Term)(@x2py1177 Term)) (! (or (HasType (Prims.__proj__Mkdtuple2__item___1 @x0py1545 @x1py1578 @x2py1177) @x0py1545) (not (HasType @x2py1177 (Prims.dtuple2 @x0py1545 @x1py1578))) (not (HasType @x0py1545 Tm_type)) (not (HasType @x1py1578 (Tm_arrow_e06752ba152f81447b312efcdf8f0e23 @x0py1545)))) :pattern ((Prims.__proj__Mkdtuple2__item___1 @x0py1545 @x1py1578 @x2py1177)) )) :named typing_Prims.__proj__Mkdtuple2__item___1))
(assert (! (forall ((@x0py1546 Term)(@x1py1579 Term)(@x2py1178 Term)) (! (or (HasType (Prims.__proj__Mkdtuple2__item___2 @x0py1546 @x1py1579 @x2py1178) (ApplyTT @x1py1579 (Prims.__proj__Mkdtuple2__item___1 @x0py1546 @x1py1579 @x2py1178))) (not (HasType @x2py1178 (Prims.dtuple2 @x0py1546 @x1py1579))) (not (HasType @x0py1546 Tm_type)) (not (HasType @x1py1579 (Tm_arrow_e06752ba152f81447b312efcdf8f0e23 @x0py1546)))) :pattern ((Prims.__proj__Mkdtuple2__item___2 @x0py1546 @x1py1579 @x2py1178)) )) :named typing_Prims.__proj__Mkdtuple2__item___2))
(assert (! (forall ((@x0py1547 Term)(@x1py1580 Term)(@x2py1179 Term)) (! (or (HasType (Prims.__proj__Right__item___0 @x0py1547 @x1py1580 @x2py1179) @x1py1580) (not (HasType @x2py1179 (Prims_Tm_refine_95f078f2b9cfbd740f9afd162814a526 @x0py1547 @x1py1580))) (not (HasType @x0py1547 Tm_type)) (not (HasType @x1py1580 Tm_type))) :pattern ((Prims.__proj__Right__item___0 @x0py1547 @x1py1580 @x2py1179)) )) :named typing_Prims.__proj__Right__item___0))
(assert (! (forall ((@x0py1548 Term)) (! (or (not (HasType @x0py1548 Tm_type)) (HasType (Prims._assert @x0py1548) Prims.unit)) :pattern ((Prims._assert @x0py1548)) )) :named typing_Prims._assert))
(assert (! (forall ((@x0py1549 Term)) (! (or (not (HasType @x0py1549 Tm_type)) (HasType (Prims._assume @x0py1549) Prims.unit)) :pattern ((Prims._assume @x0py1549)) )) :named typing_Prims._assume))
(assert (! (forall ((@x0py1550 Term)) (! (or (not (HasType @x0py1550 Prims.int)) (HasType (Prims.abs @x0py1550) Prims.int)) :pattern ((Prims.abs @x0py1550)) )) :named typing_Prims.abs))
(assert (! (forall ((@x0py1551 Term)) (! (or (not (HasType @x0py1551 Tm_type)) (HasType (Prims.admitP @x0py1551) Prims.unit)) :pattern ((Prims.admitP @x0py1551)) )) :named typing_Prims.admitP))
(assert (! (forall ((@x0py1552 Term)) (! (or (not (HasType @x0py1552 Tm_type)) (HasType (Prims.array @x0py1552) Tm_type)) :pattern ((Prims.array @x0py1552)) )) :named typing_Prims.array))
(assert (! (forall ((@x0py1553 Term)(@x1py1581 Term)(@x2py1180 Term)) (! (or (HasType (Prims.as_ensures @x0py1553 @x1py1581 @x2py1180) Prims.logical) (not (HasType @x0py1553 Tm_type)) (not (HasType @x1py1581 (Prims.pure_wp @x0py1553))) (not (HasType @x2py1180 @x0py1553))) :pattern ((Prims.as_ensures @x0py1553 @x1py1581 @x2py1180)) )) :named typing_Prims.as_ensures))
(assert (! (forall ((@x0py1554 Term)(@x1py1582 Term)) (! (or (not (HasType @x0py1554 Tm_type)) (not (HasType @x1py1582 (Prims.pure_wp @x0py1554))) (HasType (Prims.as_requires @x0py1554 @x1py1582) Prims.pure_pre)) :pattern ((Prims.as_requires @x0py1554 @x1py1582)) )) :named typing_Prims.as_requires))
(assert (! (forall ((@x0py1555 Term)) (! (or (not (HasType @x0py1555 Tm_type)) (HasType (Prims.assert_spinoff @x0py1555) Prims.unit)) :pattern ((Prims.assert_spinoff @x0py1555)) )) :named typing_Prims.assert_spinoff))
(assert (! (HasType Prims.attribute Tm_type) :named typing_Prims.attribute))
(assert (! (forall ((@x0py1556 Term)) (! (or (not (HasType @x0py1556 Tm_type)) (HasType (Prims.auto_squash @x0py1556) Tm_type)) :pattern ((Prims.auto_squash @x0py1556)) )) :named typing_Prims.auto_squash))
(assert (! (HasType Prims.bool Tm_type) :named typing_Prims.bool))
(assert (! (forall ((@x0py1557 Term)) (! (or (not (HasType @x0py1557 Tm_type)) (HasType (Prims.cut @x0py1557) Prims.unit)) :pattern ((Prims.cut @x0py1557)) )) :named typing_Prims.cut))
(assert (! (forall ((@x0py1558 Term)(@x1py1583 Term)) (! (or (HasType (Prims.decreases @x0py1558 @x1py1583) Tm_type) (not (HasType @x0py1558 Tm_type)) (not (HasType @x1py1583 @x0py1558))) :pattern ((Prims.decreases @x0py1558 @x1py1583)) )) :named typing_Prims.decreases))
(assert (! (forall ((@x0py1559 Term)(@x1py1584 Term)(@x2py1181 Term)) (! (or (HasType (Prims.eq2 @x0py1559 @x1py1584 @x2py1181) Prims.logical) (not (HasType @x1py1584 @x0py1559)) (not (HasType @x2py1181 @x0py1559)) (not (HasType @x0py1559 Tm_type))) :pattern ((Prims.eq2 @x0py1559 @x1py1584 @x2py1181)) )) :named typing_Prims.eq2))
(assert (! (forall ((@x0py1560 Term)(@x1py1585 Term)(@x2py1182 Term)(@x3py847 Term)) (! (or (HasType (Prims.eq3 @x0py1560 @x1py1585 @x2py1182 @x3py847) Prims.logical) (not (HasType @x2py1182 @x0py1560)) (not (HasType @x3py847 @x1py1585)) (not (HasType @x0py1560 Tm_type)) (not (HasType @x1py1585 Tm_type))) :pattern ((Prims.eq3 @x0py1560 @x1py1585 @x2py1182 @x3py847)) )) :named typing_Prims.eq3))
(assert (! (HasType Prims.eqtype Tm_type) :named typing_Prims.eqtype))
(assert (! (HasType Prims.exn Tm_type) :named typing_Prims.exn))
(assert (! (forall ((@x0py1561 Term)) (! (or (not (HasType @x0py1561 Tm_type)) (HasType (Prims.guard_free @x0py1561) Tm_type)) :pattern ((Prims.guard_free @x0py1561)) )) :named typing_Prims.guard_free))
(assert (! (forall ((@x0py1562 Term)(@x1py1586 Term)(@x2py1183 Term)) (! (or (HasType (Prims.has_type @x0py1562 @x1py1586 @x2py1183) Tm_type) (not (HasType @x0py1562 Tm_type)) (not (HasType @x1py1586 @x0py1562)) (not (HasType @x2py1183 Tm_type))) :pattern ((Prims.has_type @x0py1562 @x1py1586 @x2py1183)) )) :named typing_Prims.has_type))
(assert (! (forall ((@x0py1563 Term)) (! (or (not (HasType @x0py1563 Tm_type)) (HasType (Prims.hasEq @x0py1563) Tm_type)) :pattern ((Prims.hasEq @x0py1563)) )) :named typing_Prims.hasEq))
(assert (! (forall ((@x0py1564 Term)(@x1py1587 Term)) (! (or (HasType (Prims.l_and @x0py1564 @x1py1587) Prims.logical) (not (HasType @x0py1564 Prims.logical)) (not (HasType @x1py1587 Prims.logical))) :pattern ((Prims.l_and @x0py1564 @x1py1587)) )) :named typing_Prims.l_and))
(assert (! (forall ((@x0py1565 Term)(@x1py1588 Term)) (! (or (not (HasType @x0py1565 Tm_type)) (not (HasType @x1py1588 (Tm_arrow_e06752ba152f81447b312efcdf8f0e23 @x0py1565))) (HasType (Prims.l_Exists @x0py1565 @x1py1588) Prims.logical)) :pattern ((Prims.l_Exists @x0py1565 @x1py1588)) )) :named typing_Prims.l_Exists))
(assert (! (forall ((@x0py1566 Term)(@x1py1589 Term)) (! (or (not (HasType @x0py1566 Tm_type)) (not (HasType @x1py1589 (Tm_arrow_e06752ba152f81447b312efcdf8f0e23 @x0py1566))) (HasType (Prims.l_Forall @x0py1566 @x1py1589) Prims.logical)) :pattern ((Prims.l_Forall @x0py1566 @x1py1589)) )) :named typing_Prims.l_Forall))
(assert (! (forall ((@x0py1567 Term)(@x1py1590 Term)) (! (or (not (HasType @x1py1590 Prims.logical)) (HasType (Prims.l_iff @x0py1567 @x1py1590) Prims.logical) (not (HasType @x0py1567 Prims.logical))) :pattern ((Prims.l_iff @x0py1567 @x1py1590)) )) :named typing_Prims.l_iff))
(assert (! (forall ((@x0py1568 Term)(@x1py1591 Term)) (! (or (not (HasType @x1py1591 Prims.logical)) (HasType (Prims.l_imp @x0py1568 @x1py1591) Prims.logical) (not (HasType @x0py1568 Prims.logical))) :pattern ((Prims.l_imp @x0py1568 @x1py1591)) )) :named typing_Prims.l_imp))
(assert (! (forall ((@x0py1569 Term)) (! (or (not (HasType @x0py1569 Prims.logical)) (HasType (Prims.l_not @x0py1569) Prims.logical)) :pattern ((Prims.l_not @x0py1569)) )) :named typing_Prims.l_not))
(assert (! (forall ((@x0py1570 Term)(@x1py1592 Term)) (! (or (HasType (Prims.l_or @x0py1570 @x1py1592) Prims.logical) (not (HasType @x0py1570 Prims.logical)) (not (HasType @x1py1592 Prims.logical))) :pattern ((Prims.l_or @x0py1570 @x1py1592)) )) :named typing_Prims.l_or))
(assert (! (HasType Prims.l_True Prims.logical) :named typing_Prims.l_True))
(assert (! (forall ((@x0py1571 Term)(@x1py1593 Term)(@x2py1184 Term)) (! (or (HasType (Prims.labeled @x0py1571 @x1py1593 @x2py1184) Tm_type) (not (HasType @x0py1571 Prims.range)) (not (HasType @x1py1593 Prims.string)) (not (HasType @x2py1184 Tm_type))) :pattern ((Prims.labeled @x0py1571 @x1py1593 @x2py1184)) )) :named typing_Prims.labeled))
(assert (! (forall ((@x0py1572 Term)(@x1py1594 Term)) (! (or (HasType (Prims.magic @x0py1572 @x1py1594) @x0py1572) (not (HasType @x0py1572 Tm_type)) (not (HasType @x1py1594 Prims.unit))) :pattern ((Prims.magic @x0py1572 @x1py1594)) )) :named typing_Prims.magic))
(assert (! (forall ((@x0py1573 Term)(@x1py1595 Term)) (! (or (HasType (Prims.min @x0py1573 @x1py1595) Prims.int) (not (HasType @x0py1573 Prims.int)) (not (HasType @x1py1595 Prims.int))) :pattern ((Prims.min @x0py1573 @x1py1595)) )) :named typing_Prims.min))
(assert (! (forall ((@x0py1574 Term)(@x1py1596 Term)(@x2py1185 Term)(@x3py848 Term)(@x4py619 Term)) (! (or (HasType (Prims.mk_range @x0py1574 @x1py1596 @x2py1185 @x3py848 @x4py619) Prims.range) (not (HasType @x0py1574 Prims.string)) (not (HasType @x1py1596 Prims.int)) (not (HasType @x2py1185 Prims.int)) (not (HasType @x3py848 Prims.int)) (not (HasType @x4py619 Prims.int))) :pattern ((Prims.mk_range @x0py1574 @x1py1596 @x2py1185 @x3py848 @x4py619)) )) :named typing_Prims.mk_range))
(assert (! (HasType Prims.nat Tm_type) :named typing_Prims.nat))
(assert (! (forall ((@x0py1575 Term)) (! (or (not (HasType @x0py1575 Prims.nat)) (HasType (Prims.pow2 @x0py1575) Prims.pos)) :pattern ((Prims.pow2 @x0py1575)) )) :named typing_Prims.pow2))
(assert (! (forall ((@x0py1576 Term)) (! (or (not (HasType @x0py1576 Tm_type)) (HasType (Prims.pure_post @x0py1576) Tm_type)) :pattern ((Prims.pure_post @x0py1576)) )) :named typing_Prims.pure_post))
(assert (! (forall ((@x0py1577 Term)(@x1py1597 Term)) (! (or (HasType (Prims.pure_post_ @x0py1577 @x1py1597) Tm_type) (not (HasType @x0py1577 Tm_type)) (not (HasType @x1py1597 Tm_type))) :pattern ((Prims.pure_post_ @x0py1577 @x1py1597)) )) :named typing_Prims.pure_post_))
(assert (! (forall ((@x0py1578 Term)) (! (or (not (HasType @x0py1578 Tm_type)) (HasType (Prims.pure_wp @x0py1578) Tm_type)) :pattern ((Prims.pure_wp @x0py1578)) )) :named typing_Prims.pure_wp))
(assert (! (forall ((@x0py1579 Term)(@x1py1598 Term)) (! (or (HasType (Prims.returnM @x0py1579 @x1py1598) @x0py1579) (not (HasType @x0py1579 Tm_type)) (not (HasType @x1py1598 @x0py1579))) :pattern ((Prims.returnM @x0py1579 @x1py1598)) )) :named typing_Prims.returnM))
(assert (! (forall ((@x0py1580 Term)(@x1py1599 Term)) (! (or (HasType (Prims.smt_pat @x0py1580 @x1py1599) Prims.pattern) (not (HasType @x1py1599 @x0py1580)) (not (HasType @x0py1580 Tm_type))) :pattern ((Prims.smt_pat @x0py1580 @x1py1599)) )) :named typing_Prims.smt_pat))
(assert (! (forall ((@x0py1581 Term)) (! (or (not (HasType @x0py1581 (Prims.list (Prims.list Prims.pattern)))) (HasType (Prims.smt_pat_or @x0py1581) Prims.pattern)) :pattern ((Prims.smt_pat_or @x0py1581)) )) :named typing_Prims.smt_pat_or))
(assert (! (forall ((@x0py1582 Term)) (! (or (not (HasType @x0py1582 Tm_type)) (HasType (Prims.spinoff @x0py1582) Tm_type)) :pattern ((Prims.spinoff @x0py1582)) )) :named typing_Prims.spinoff))
(assert (! (forall ((@x0py1583 Term)) (! (or (not (HasType @x0py1583 Tm_type)) (HasType (Prims.squash @x0py1583) Tm_type)) :pattern ((Prims.squash @x0py1583)) )) :named typing_Prims.squash))
(assert (! (forall ((@x0py1584 Term)(@x1py1600 Term)) (! (or (HasType (Prims.strcat @x0py1584 @x1py1600) Prims.string) (not (HasType @x0py1584 Prims.string)) (not (HasType @x1py1600 Prims.string))) :pattern ((Prims.strcat @x0py1584 @x1py1600)) )) :named typing_Prims.strcat))
(assert (! (forall ((@x0py1585 Term)) (! (or (not (HasType @x0py1585 Prims.bool)) (HasType (Prims.string_of_bool @x0py1585) Prims.string)) :pattern ((Prims.string_of_bool @x0py1585)) )) :named typing_Prims.string_of_bool))
(assert (! (forall ((@x0py1586 Term)) (! (or (not (HasType @x0py1586 Prims.int)) (HasType (Prims.string_of_int @x0py1586) Prims.string)) :pattern ((Prims.string_of_int @x0py1586)) )) :named typing_Prims.string_of_int))
(assert (! (forall ((@x0py1587 Term)(@x1py1601 Term)(@x2py1186 Term)) (! (or (HasType (Prims.unsafe_coerce @x0py1587 @x1py1601 @x2py1186) @x1py1601) (not (HasType @x0py1587 Tm_type)) (not (HasType @x1py1601 Tm_type)) (not (HasType @x2py1186 @x0py1587))) :pattern ((Prims.unsafe_coerce @x0py1587 @x1py1601 @x2py1186)) )) :named typing_Prims.unsafe_coerce))
(assert (! (forall ((@x0py1588 Term)(@x1py1602 Term)(@x2py1187 Term)) (! (or (HasType (Prims.uu___is_And @x0py1588 @x1py1602 @x2py1187) Prims.bool) (not (HasType @x2py1187 (Prims.c_and @x0py1588 @x1py1602))) (not (HasType @x0py1588 Tm_type)) (not (HasType @x1py1602 Tm_type))) :pattern ((Prims.uu___is_And @x0py1588 @x1py1602 @x2py1187)) )) :named typing_Prims.uu___is_And))
(assert (! (forall ((@x0py1589 Term)(@x1py1603 Term)) (! (or (not (HasType @x0py1589 Tm_type)) (not (HasType @x1py1603 (Prims.list @x0py1589))) (HasType (Prims.uu___is_Cons @x0py1589 @x1py1603) Prims.bool)) :pattern ((Prims.uu___is_Cons @x0py1589 @x1py1603)) )) :named typing_Prims.uu___is_Cons))
(assert (! (forall ((@x0py1590 Term)(@x1py1604 Term)(@x2py1188 Term)(@x3py849 Term)(@x4py620 Term)) (! (or (HasType (Prims.uu___is_HRefl @x0py1590 @x1py1604 @x2py1188 @x3py849 @x4py620) Prims.bool) (not (HasType @x1py1604 @x0py1590)) (not (HasType @x2py1188 Tm_type)) (not (HasType @x3py849 @x2py1188)) (not (HasType @x0py1590 Tm_type)) (not (HasType @x4py620 (Prims.h_equals @x0py1590 @x1py1604 @x2py1188 @x3py849)))) :pattern ((Prims.uu___is_HRefl @x0py1590 @x1py1604 @x2py1188 @x3py849 @x4py620)) )) :named typing_Prims.uu___is_HRefl))
(assert (! (forall ((@x0py1591 Term)(@x1py1605 Term)(@x2py1189 Term)) (! (or (HasType (Prims.uu___is_Left @x0py1591 @x1py1605 @x2py1189) Prims.bool) (not (HasType @x0py1591 Tm_type)) (not (HasType @x1py1605 Tm_type)) (not (HasType @x2py1189 (Prims.c_or @x0py1591 @x1py1605)))) :pattern ((Prims.uu___is_Left @x0py1591 @x1py1605 @x2py1189)) )) :named typing_Prims.uu___is_Left))
(assert (! (forall ((@x0py1592 Term)(@x1py1606 Term)(@x2py1190 Term)) (! (or (HasType (Prims.uu___is_Mkdtuple2 @x0py1592 @x1py1606 @x2py1190) Prims.bool) (not (HasType @x0py1592 Tm_type)) (not (HasType @x2py1190 (Prims.dtuple2 @x0py1592 @x1py1606))) (not (HasType @x1py1606 (Tm_arrow_e06752ba152f81447b312efcdf8f0e23 @x0py1592)))) :pattern ((Prims.uu___is_Mkdtuple2 @x0py1592 @x1py1606 @x2py1190)) )) :named typing_Prims.uu___is_Mkdtuple2))
(assert (! (forall ((@x0py1593 Term)(@x1py1607 Term)) (! (or (not (HasType @x0py1593 Tm_type)) (not (HasType @x1py1607 (Prims.list @x0py1593))) (HasType (Prims.uu___is_Nil @x0py1593 @x1py1607) Prims.bool)) :pattern ((Prims.uu___is_Nil @x0py1593 @x1py1607)) )) :named typing_Prims.uu___is_Nil))
(assert (! (forall ((@x0py1594 Term)(@x1py1608 Term)(@x2py1191 Term)(@x3py850 Term)) (! (or (not (HasType @x1py1608 @x0py1594)) (not (HasType @x2py1191 @x0py1594)) (HasType (Prims.uu___is_Refl @x0py1594 @x1py1608 @x2py1191 @x3py850) Prims.bool) (not (HasType @x3py850 (Prims.equals @x0py1594 @x1py1608 @x2py1191))) (not (HasType @x0py1594 Tm_type))) :pattern ((Prims.uu___is_Refl @x0py1594 @x1py1608 @x2py1191 @x3py850)) )) :named typing_Prims.uu___is_Refl))
(assert (! (forall ((@x0py1595 Term)(@x1py1609 Term)(@x2py1192 Term)) (! (or (HasType (Prims.uu___is_Right @x0py1595 @x1py1609 @x2py1192) Prims.bool) (not (HasType @x0py1595 Tm_type)) (not (HasType @x1py1609 Tm_type)) (not (HasType @x2py1192 (Prims.c_or @x0py1595 @x1py1609)))) :pattern ((Prims.uu___is_Right @x0py1595 @x1py1609 @x2py1192)) )) :named typing_Prims.uu___is_Right))
(assert (! (forall ((@x0py1596 Term)) (! (or (not (HasType @x0py1596 Prims.c_True)) (HasType (Prims.uu___is_T @x0py1596) Prims.bool)) :pattern ((Prims.uu___is_T @x0py1596)) )) :named typing_Prims.uu___is_T))
(assert (! (forall ((@x0py1597 Term)(@x1py1610 Term)) (! (HasType (Prims_Tm_abs_65a2e960d61ec783b59c1bd1dd30ed10 @x0py1597 @x1py1610) (Tm_arrow_1c4871de840a52d38a5b65a5ad4e97ea @x1py1610)) :pattern ((Prims_Tm_abs_65a2e960d61ec783b59c1bd1dd30ed10 @x0py1597 @x1py1610)) )) :named typing_Prims_Tm_abs_65a2e960d61ec783b59c1bd1dd30ed10))
(assert (! (forall ((@x0py1598 Term)(@x1py1611 Term)) (! (HasType (Prims_Tm_abs_cc0ce251c10a6cba9664080c8e806896 @x0py1598 @x1py1611) (Tm_arrow_1c4871de840a52d38a5b65a5ad4e97ea @x1py1611)) :pattern ((Prims_Tm_abs_cc0ce251c10a6cba9664080c8e806896 @x0py1598 @x1py1611)) )) :named typing_Prims_Tm_abs_cc0ce251c10a6cba9664080c8e806896))
(assert (! (HasTypeZ (Range_const 1) Prims.range) :named typing_range_const))
(assert (! (forall ((@x0py1599 Term)) (! (NoHoist @x0py1599 (HasType False.CalcRefl@tok Tm_arrow_01af5ab61334f3cf5e140ba023176d9a)) :pattern ((ApplyTT False.CalcRefl@tok @x0py1599)) :pattern ((ApplyTT @x0py1599 False.CalcRefl@tok)) )) :named typing_tok_False.CalcRefl@tok))
(assert (! (forall ((@x0py1600 Term)) (! (NoHoist @x0py1600 (HasType False.CalcStep@tok Tm_arrow_b0a698cf4739f4ff0d04a8f64ce9f32f)) :pattern ((ApplyTT False.CalcStep@tok @x0py1600)) :pattern ((ApplyTT @x0py1600 False.CalcStep@tok)) )) :named typing_tok_False.CalcStep@tok))
(assert (! (forall ((@x0py1601 Term)) (! (NoHoist @x0py1601 (HasType FStar.Pervasives.CConst@tok (Tm_arrow_53506eda6d12f67a8e4b3ea75d309e23 Prims.string))) :pattern ((ApplyTT FStar.Pervasives.CConst@tok @x0py1601)) :pattern ((ApplyTT @x0py1601 FStar.Pervasives.CConst@tok)) )) :named typing_tok_FStar.Pervasives.CConst@tok))
(assert (! (forall ((@x0py1602 Term)) (! (NoHoist @x0py1602 (HasType FStar.Pervasives.CEpilogue@tok (Tm_arrow_53506eda6d12f67a8e4b3ea75d309e23 Prims.string))) :pattern ((ApplyTT FStar.Pervasives.CEpilogue@tok @x0py1602)) :pattern ((ApplyTT @x0py1602 FStar.Pervasives.CEpilogue@tok)) )) :named typing_tok_FStar.Pervasives.CEpilogue@tok))
(assert (! (HasType FStar.Pervasives.CInline@tok FStar.Pervasives.__internal_ocaml_attributes) :named typing_tok_FStar.Pervasives.CInline@tok))
(assert (! (forall ((@x0py1603 Term)) (! (NoHoist @x0py1603 (HasType FStar.Pervasives.Comment@tok (Tm_arrow_53506eda6d12f67a8e4b3ea75d309e23 Prims.string))) :pattern ((ApplyTT FStar.Pervasives.Comment@tok @x0py1603)) :pattern ((ApplyTT @x0py1603 FStar.Pervasives.Comment@tok)) )) :named typing_tok_FStar.Pervasives.Comment@tok))
(assert (! (forall ((@x0py1604 Term)) (! (NoHoist @x0py1604 (HasType FStar.Pervasives.CPrologue@tok (Tm_arrow_53506eda6d12f67a8e4b3ea75d309e23 Prims.string))) :pattern ((ApplyTT FStar.Pervasives.CPrologue@tok @x0py1604)) :pattern ((ApplyTT @x0py1604 FStar.Pervasives.CPrologue@tok)) )) :named typing_tok_FStar.Pervasives.CPrologue@tok))
(assert (! (forall ((@x0py1605 Term)) (! (NoHoist @x0py1605 (HasType FStar.Pervasives.E@tok (Tm_arrow_739df426cfefbd9297407e8f408e091d Prims.exn))) :pattern ((ApplyTT FStar.Pervasives.E@tok @x0py1605)) :pattern ((ApplyTT @x0py1605 FStar.Pervasives.E@tok)) )) :named typing_tok_FStar.Pervasives.E@tok))
(assert (! (forall ((@x0py1606 Term)) (! (NoHoist @x0py1606 (HasType FStar.Pervasives.Err@tok (Tm_arrow_739df426cfefbd9297407e8f408e091d Prims.string))) :pattern ((ApplyTT FStar.Pervasives.Err@tok @x0py1606)) :pattern ((ApplyTT @x0py1606 FStar.Pervasives.Err@tok)) )) :named typing_tok_FStar.Pervasives.Err@tok))
(assert (! (HasType FStar.Pervasives.Gc@tok FStar.Pervasives.__internal_ocaml_attributes) :named typing_tok_FStar.Pervasives.Gc@tok))
(assert (! (forall ((@x0py1607 Term)) (! (NoHoist @x0py1607 (HasType FStar.Pervasives.Inl@tok Tm_arrow_66a0d53ccf00bc028aa22d526865c801)) :pattern ((ApplyTT FStar.Pervasives.Inl@tok @x0py1607)) :pattern ((ApplyTT @x0py1607 FStar.Pervasives.Inl@tok)) )) :named typing_tok_FStar.Pervasives.Inl@tok))
(assert (! (forall ((@x0py1608 Term)) (! (NoHoist @x0py1608 (HasType FStar.Pervasives.Inr@tok Tm_arrow_a1a8754ef05983b108c166cca1c4e63a)) :pattern ((ApplyTT FStar.Pervasives.Inr@tok @x0py1608)) :pattern ((ApplyTT @x0py1608 FStar.Pervasives.Inr@tok)) )) :named typing_tok_FStar.Pervasives.Inr@tok))
(assert (! (forall ((@x0py1609 Term)) (! (NoHoist @x0py1609 (HasType FStar.Pervasives.Mkdtuple3@tok Tm_arrow_51228bc6fe187c605830950e4b63d461)) :pattern ((ApplyTT FStar.Pervasives.Mkdtuple3@tok @x0py1609)) :pattern ((ApplyTT @x0py1609 FStar.Pervasives.Mkdtuple3@tok)) )) :named typing_tok_FStar.Pervasives.Mkdtuple3@tok))
(assert (! (forall ((@x0py1610 Term)) (! (NoHoist @x0py1610 (HasType FStar.Pervasives.Mkdtuple4@tok Tm_arrow_bc432a638e8ded95e6543c5ef7d6cefa)) :pattern ((ApplyTT FStar.Pervasives.Mkdtuple4@tok @x0py1610)) :pattern ((ApplyTT @x0py1610 FStar.Pervasives.Mkdtuple4@tok)) )) :named typing_tok_FStar.Pervasives.Mkdtuple4@tok))
(assert (! (forall ((@x0py1611 Term)) (! (NoHoist @x0py1611 (HasType FStar.Pervasives.Native.Mktuple2@tok Tm_arrow_ea874dc954d16eee0f41a749d898407d)) :pattern ((ApplyTT FStar.Pervasives.Native.Mktuple2@tok @x0py1611)) :pattern ((ApplyTT @x0py1611 FStar.Pervasives.Native.Mktuple2@tok)) )) :named typing_tok_FStar.Pervasives.Native.Mktuple2@tok))
(assert (! (forall ((@x0py1612 Term)) (! (NoHoist @x0py1612 (HasType FStar.Pervasives.Native.Mktuple3@tok Tm_arrow_aa2ac0c2eefec3ef36a52a5c1e92dd6b)) :pattern ((ApplyTT FStar.Pervasives.Native.Mktuple3@tok @x0py1612)) :pattern ((ApplyTT @x0py1612 FStar.Pervasives.Native.Mktuple3@tok)) )) :named typing_tok_FStar.Pervasives.Native.Mktuple3@tok))
(assert (! (forall ((@x0py1613 Term)) (! (NoHoist @x0py1613 (HasType FStar.Pervasives.Native.Mktuple4@tok Tm_arrow_57fa2a22c6acb92aec36a98d388a288a)) :pattern ((ApplyTT FStar.Pervasives.Native.Mktuple4@tok @x0py1613)) :pattern ((ApplyTT @x0py1613 FStar.Pervasives.Native.Mktuple4@tok)) )) :named typing_tok_FStar.Pervasives.Native.Mktuple4@tok))
(assert (! (forall ((@x0py1614 Term)) (! (NoHoist @x0py1614 (HasType FStar.Pervasives.Native.Mktuple5@tok Tm_arrow_a25fd62df6305ca0d5e962cb259a6497)) :pattern ((ApplyTT FStar.Pervasives.Native.Mktuple5@tok @x0py1614)) :pattern ((ApplyTT @x0py1614 FStar.Pervasives.Native.Mktuple5@tok)) )) :named typing_tok_FStar.Pervasives.Native.Mktuple5@tok))
(assert (! (forall ((@x0py1615 Term)) (! (NoHoist @x0py1615 (HasType FStar.Pervasives.Native.Mktuple6@tok Tm_arrow_6e23aa00e38a92d031af78d42cdf6218)) :pattern ((ApplyTT FStar.Pervasives.Native.Mktuple6@tok @x0py1615)) :pattern ((ApplyTT @x0py1615 FStar.Pervasives.Native.Mktuple6@tok)) )) :named typing_tok_FStar.Pervasives.Native.Mktuple6@tok))
(assert (! (forall ((@x0py1616 Term)) (! (NoHoist @x0py1616 (HasType FStar.Pervasives.Native.Mktuple7@tok Tm_arrow_4be4d0827cb852d3f57a920e42b0e232)) :pattern ((ApplyTT FStar.Pervasives.Native.Mktuple7@tok @x0py1616)) :pattern ((ApplyTT @x0py1616 FStar.Pervasives.Native.Mktuple7@tok)) )) :named typing_tok_FStar.Pervasives.Native.Mktuple7@tok))
(assert (! (forall ((@x0py1617 Term)) (! (NoHoist @x0py1617 (HasType FStar.Pervasives.Native.Mktuple8@tok Tm_arrow_7493b9132d0860b9d4513189a97e9cc2)) :pattern ((ApplyTT FStar.Pervasives.Native.Mktuple8@tok @x0py1617)) :pattern ((ApplyTT @x0py1617 FStar.Pervasives.Native.Mktuple8@tok)) )) :named typing_tok_FStar.Pervasives.Native.Mktuple8@tok))
(assert (! (forall ((@x0py1618 Term)) (! (NoHoist @x0py1618 (HasType FStar.Pervasives.Native.None@tok Tm_arrow_61613ad0fe4e0bf49515f58291a6d65c)) :pattern ((ApplyTT FStar.Pervasives.Native.None@tok @x0py1618)) :pattern ((ApplyTT @x0py1618 FStar.Pervasives.Native.None@tok)) )) :named typing_tok_FStar.Pervasives.Native.None@tok))
(assert (! (forall ((@x0py1619 Term)) (! (NoHoist @x0py1619 (HasType FStar.Pervasives.Native.Some@tok Tm_arrow_df8cdbdef952cf059d2e5d9fe5b8bf02)) :pattern ((ApplyTT FStar.Pervasives.Native.Some@tok @x0py1619)) :pattern ((ApplyTT @x0py1619 FStar.Pervasives.Native.Some@tok)) )) :named typing_tok_FStar.Pervasives.Native.Some@tok))
(assert (! (HasType FStar.Pervasives.PpxDerivingShow@tok FStar.Pervasives.__internal_ocaml_attributes) :named typing_tok_FStar.Pervasives.PpxDerivingShow@tok))
(assert (! (forall ((@x0py1620 Term)) (! (NoHoist @x0py1620 (HasType FStar.Pervasives.PpxDerivingShowConstant@tok (Tm_arrow_53506eda6d12f67a8e4b3ea75d309e23 Prims.string))) :pattern ((ApplyTT FStar.Pervasives.PpxDerivingShowConstant@tok @x0py1620)) :pattern ((ApplyTT @x0py1620 FStar.Pervasives.PpxDerivingShowConstant@tok)) )) :named typing_tok_FStar.Pervasives.PpxDerivingShowConstant@tok))
(assert (! (HasType FStar.Pervasives.PpxDerivingYoJson@tok FStar.Pervasives.__internal_ocaml_attributes) :named typing_tok_FStar.Pervasives.PpxDerivingYoJson@tok))
(assert (! (HasType FStar.Pervasives.Substitute@tok FStar.Pervasives.__internal_ocaml_attributes) :named typing_tok_FStar.Pervasives.Substitute@tok))
(assert (! (forall ((@x0py1621 Term)) (! (NoHoist @x0py1621 (HasType FStar.Pervasives.V@tok Tm_arrow_e797b13f3527682c5e8e530b8c8c696d)) :pattern ((ApplyTT FStar.Pervasives.V@tok @x0py1621)) :pattern ((ApplyTT @x0py1621 FStar.Pervasives.V@tok)) )) :named typing_tok_FStar.Pervasives.V@tok))
(assert (! (forall ((@x0py1622 Term)) (! (NoHoist @x0py1622 (HasType Prims.And@tok Tm_arrow_c195f8405ecbc84a46f4e174b8827a84)) :pattern ((ApplyTT Prims.And@tok @x0py1622)) :pattern ((ApplyTT @x0py1622 Prims.And@tok)) )) :named typing_tok_Prims.And@tok))
(assert (! (forall ((@x0py1623 Term)) (! (NoHoist @x0py1623 (HasType Prims.Cons@tok Tm_arrow_e9f6c89da04213bf160cc257e258081c)) :pattern ((ApplyTT Prims.Cons@tok @x0py1623)) :pattern ((ApplyTT @x0py1623 Prims.Cons@tok)) )) :named typing_tok_Prims.Cons@tok))
(assert (! (forall ((@x0py1624 Term)) (! (NoHoist @x0py1624 (HasType Prims.HRefl@tok Tm_arrow_bdff7ac4f38fee2d6889d7b58ec10beb)) :pattern ((ApplyTT Prims.HRefl@tok @x0py1624)) :pattern ((ApplyTT @x0py1624 Prims.HRefl@tok)) )) :named typing_tok_Prims.HRefl@tok))
(assert (! (forall ((@x0py1625 Term)) (! (NoHoist @x0py1625 (HasType Prims.Left@tok Tm_arrow_b9e392cd340cf43078e3b599d9c5d1b3)) :pattern ((ApplyTT Prims.Left@tok @x0py1625)) :pattern ((ApplyTT @x0py1625 Prims.Left@tok)) )) :named typing_tok_Prims.Left@tok))
(assert (! (HasType Prims.LexTop@tok Prims.lex_t) :named typing_tok_Prims.LexTop@tok))
(assert (! (forall ((@x0py1626 Term)) (! (NoHoist @x0py1626 (HasType Prims.Mkdtuple2@tok Tm_arrow_e23d661799b310305387f8ba2c10acb1)) :pattern ((ApplyTT Prims.Mkdtuple2@tok @x0py1626)) :pattern ((ApplyTT @x0py1626 Prims.Mkdtuple2@tok)) )) :named typing_tok_Prims.Mkdtuple2@tok))
(assert (! (forall ((@x0py1627 Term)) (! (NoHoist @x0py1627 (HasType Prims.Nil@tok Tm_arrow_9f8b5ab8f80ced9cdf6afea35d31efae)) :pattern ((ApplyTT Prims.Nil@tok @x0py1627)) :pattern ((ApplyTT @x0py1627 Prims.Nil@tok)) )) :named typing_tok_Prims.Nil@tok))
(assert (! (forall ((@x0py1628 Term)) (! (NoHoist @x0py1628 (HasType Prims.Refl@tok Tm_arrow_fb8e9788d8e1ad00d517d818391a5552)) :pattern ((ApplyTT Prims.Refl@tok @x0py1628)) :pattern ((ApplyTT @x0py1628 Prims.Refl@tok)) )) :named typing_tok_Prims.Refl@tok))
(assert (! (forall ((@x0py1629 Term)) (! (NoHoist @x0py1629 (HasType Prims.Right@tok Tm_arrow_ccf8afc309a68a850ac71365261b9fb7)) :pattern ((ApplyTT Prims.Right@tok @x0py1629)) :pattern ((ApplyTT @x0py1629 Prims.Right@tok)) )) :named typing_tok_Prims.Right@tok))
(assert (! (HasType Prims.T@tok Prims.c_True) :named typing_tok_Prims.T@tok))
(assert (! (forall ((@u0py376 Fuel)(@x1py1612 Term)) (! (or (not (HasTypeFuel @u0py376 @x1py1612 Prims.unit)) (= @x1py1612 Tm_unit)) :pattern ((HasTypeFuel @u0py376 @x1py1612 Prims.unit)) )) :named unit_inversion))
(assert (! (HasType Tm_unit Prims.unit) :named unit_typing))
(assert (! (forall ((@u0py377 Fuel)(@x1py1613 Term)(@x2py1193 Term)) (! (or (<= (BoxInt_proj_0 @x1py1613) (BoxInt_proj_0 @x2py1193)) (Valid (Prims.precedes Prims.lex_t Prims.lex_t @x2py1193 @x1py1613)) (<= (BoxInt_proj_0 @x1py1613) 0) (not (HasTypeFuel @u0py377 @x1py1613 Prims.int)) (not (HasTypeFuel @u0py377 @x2py1193 Prims.int)) (not (<= 0 (BoxInt_proj_0 @x2py1193)))) :pattern ((HasTypeFuel @u0py377 @x1py1613 Prims.int) (HasTypeFuel @u0py377 @x2py1193 Prims.int) (Valid (Prims.precedes Prims.lex_t Prims.lex_t @x2py1193 @x1py1613))) )) :named well-founded-ordering-on-nat))

;(declare-fun __dummy_A4T0@3__ (Int) Bool)
;(assert (! (__dummy_A4T0@3__ (_div (- 7) (- 8))) :named Dummy_A4T0@3 ))

(check-sat)
(get-info :reason-unknown)
;z3 -T:600 smt-inputs/benchmarks/verifiers/fstar/pattern_augmenter/ematching/tmp/fstar-div_std_unique_aug-gt_unsat-full.smt2
;unknown
;((:reason-unknown "smt tactic failed to show goal to be sat/unsat (incomplete quantifiers)"))
